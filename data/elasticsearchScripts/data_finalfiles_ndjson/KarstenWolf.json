{"title": "Transforming BPEL to Petri nets\n", "abstract": " We present a Petri net semantics for the Business Process Execution Language for Web Services (BPEL). Our semantics covers the standard behaviour of BPEL as well as the exceptional behaviour (e.g. faults, events, compensation). The semantics is implemented as a parser that translates BPEL specifications into the input language of the Petri net model checking tool LoLA. We demonstrate that the semantics is well suited for computer aided verification purposes.", "num_citations": "449\n", "authors": ["1638"]}
{"title": "Lola a low level analyser\n", "abstract": " With LoLA, we put recently developed state space oriented algorithms to other tool developers disposal. Providing a simple interface was a major design goal such that it is as easy as possible to integrate LoLA into tools of different application domains. LoLA supports place/transition nets. Implemented verification techniques cover standard properties (liveness, reversibility, boundedness, reachability, dead transitions, deadlocks, home states) as well as satisfiability of state predicates and CTL model checking. For satisfiability, both exhaustive search and heuristically goal oriented system execution are supported. For state space reduction, LoLA features symmetries, stubborn sets, and coverability graphs.", "num_citations": "268\n", "authors": ["1638"]}
{"title": "An operating guideline approach to the SOA\n", "abstract": " Interorganizational cooperation is more and more organized by the paradigm of services. The service-oriented architecture (SOA) provides a general framework for service interaction. It describes three roles, service provider, service requester, and service broker, together with the three operations publish, find, and bind. We provide a formal method based on Petri nets to model services and their cooperation. We characterize well-behaving pairs of requester\u2019s and provider\u2019s services and suggest operating guidelines as a convenient and intuitive artifact to realize publish. Then, the find operation reduces to a matching problem between the requester\u2019s service and the operating guideline. Binding of a requester\u2019s and a provider\u2019s service is therefore guaranteed to result in a well-behaving cooperating service.", "num_citations": "230\n", "authors": ["1638"]}
{"title": "Multiparty contracts: Agreeing and implementing interorganizational processes\n", "abstract": " To implement an interorganizational process between different enterprizes, one needs to agree on the \u2018rules of engagement\u2019. These can be specified in terms of a contract that describes the overall intended process and the duties of all parties involved. We propose to use such a process-oriented contract which can be seen as the composition of the public views of all participating parties. Based on this contract, each party may locally implement its part of the contract such that the implementation (the private view) agrees on the contract. In this paper, we propose a formal notion for such process-oriented contracts and give a criterion for accordance between a private view and its public view. The public view of a party can be substituted by a private view if and only if the private view accords with the public view. Using the notion of accordance, the overall implemented process is guaranteed to be deadlock-free and it\u00a0\u2026", "num_citations": "177\n", "authors": ["1638"]}
{"title": "Operating guidelines for finite-state services\n", "abstract": " We study services modeled as open workflow nets (oWFN) and describe their behavior as service automata. Based on arbitrary finite-state service automata, we introduce the concept of an operating guideline, generalizing the work of [1,2] which was restricted to acyclic services.               An operating guideline gives complete information about how to properly interact (in this paper: deadlock-freely and with limited communication) with an oWFN N. It can be executed, thus forming a properly interacting partner of N, or it can be used to support service discovery.               An operating guideline for N is a particular service automaton S that is enriched with Boolean annotations. S interacts properly with the service automaton , representing the behavior of N, and is able to simulate every other service that interacts properly with . The attached annotations give complete information about whether or not a\u00a0\u2026", "num_citations": "160\n", "authors": ["1638"]}
{"title": "Service interaction: Patterns, formalization, and analysis\n", "abstract": " As systems become more service oriented and processes increasingly cross organizational boundaries, interaction becomes more important. New technologies support the development of such systems. However, the paradigm shift towards service orientation, requires a fundamentally different way of looking at processes. This survey aims to provide some foundational notions related to service interaction. A set of service interaction patterns is given to illustrate the challenges in this domain. Moreover, key results are given for three of these challenges: (1) How to expose a service?, (2) How to replace and refine services?, and (3) How to generate service adapters? These challenges will be addressed in a Petri net setting. However, the results extend to other languages used in this domain.", "num_citations": "144\n", "authors": ["1638"]}
{"title": "Modeling and model checking web services\n", "abstract": " We give an overview on web services and the web service technology stack. We then show how to build Petri net models of web services formulated in the specification language BPEL4WS. We define an abstract correctness criterion for these models and study the automated verification according to this criterion. Finally, we relate correctness of web service models to the model checking problem for alternating temporal logics.", "num_citations": "117\n", "authors": ["1638"]}
{"title": "Does my service have partners?\n", "abstract": " Controllability for service models is a similar criterion as soundness for workflow models: it establishes a necessary condition for correct behavior of a given service model. Technically, controllability is the problem to decide, for a given service, whether it can interact correctly with at least one other service. Parameters to the problem are the established correctness criterion (e.g.\u00a0deadlock freedom, livelock freedom, quasi-liveness), the shape of partners (centralized partners versus independently acting partners), or the shape of communication (asynchronous versus synchronous).             In this article, we survey and partly extend various recent results concerning the verification of controllability for Petri net based service models. Significant extensions include the study of livelock freedom as correctness criterion as well as the new results on autonomous multi-port controllability.", "num_citations": "107\n", "authors": ["1638"]}
{"title": "From public views to private views\u2013correctness-by-design for services\n", "abstract": " Service orientation is a means for integrating across diverse systems. Each resource, whether an application, system, or trading partner, can be accessed as a service. The resulting architecture, often referred to as SOA, has been an important enabler for interorganizational processes. Apart from technological issues that need to be addressed, it is important that all parties involved in such processes agree on the \u201crules of engagement\u201d. Therefore, we propose to use a contract that specifies the composition of the public views of all participating parties. Each party may then implement its part of the contract such that the implementation (i.e., the private view) accords with the contract. In this paper, we define a suitable notion of accordance inspired by the asynchronous nature of services. Moreover, we present several transformation rules for incrementally building a private view such that accordance with the\u00a0\u2026", "num_citations": "101\n", "authors": ["1638"]}
{"title": "Generating Petri net state spaces\n", "abstract": " Most specific characteristics of (Place/Transition) Petri nets can be traced back to a few basic features including the monotonicity of the enabling condition, the linearity of the firing rule, and the locality of both. These features enable \u201cPetri net\u201d analysis techniques such as the invariant calculus, the coverability graph technique, approaches based on unfolding, or structural (such as siphon/trap based) analysis. In addition, most verification techniques developed outside the realm of Petri nets can be applied to Petri nets as well.               In this paper, we want to demonstrate that the basic features of Petri nets do not only lead to additional analysis techniques, but as well to improved implementations of formalism-independent techniques. As an example, we discuss the explicit generation of a state space. We underline our arguments with some experience from the implementation and use of the Petri net based\u00a0\u2026", "num_citations": "99\n", "authors": ["1638"]}
{"title": "A Petri net semantic for BPEL4WS-validation and application\n", "abstract": " We translated a small business process into a recently defined Petri net semantic. Then we used the tool LoLA for validating the semantic as well as for proving relevant properties of the particular process.", "num_citations": "99\n", "authors": ["1638"]}
{"title": "Controllability of open workflow nets\n", "abstract": " An open workflow net is basically a workflow net extended with a message passing interface. Open workflow nets are adequate models for services or parts of inter-organizational business processes. We investigate the problem of controlla ilit , a natural counterpart of soundness in classical workflow nets (as studied by van der Aalst). We distinguish centralized, distributed, and local controllability and provide solutions to all problems.", "num_citations": "85\n", "authors": ["1638"]}
{"title": "How to calculate symmetries of Petri nets\n", "abstract": " Symmetric net structure yields symmetric net behaviour. Thus, knowing the symmetries of a net, redundant calculations can be skipped. We present a framework for the calculation of symmetries for several net classes including place/transition nets, timed nets, stochastic nets, self\u2013modifying nets, nets with inhibitor arcs, and many others. Our approach allows the specification of different symmetry groups. Additionally it provides facilities either to calculate symmetries on demand while running the actual analysis algorithm, or to calculate them in advance. For the latter case we define and calculate a ground set of symmetries. Such a set has polynomial size and is sufficient for an efficient implementation of the for all symmetries loop and the partition of net elements into equivalence classes. These two constructions are the usual way to integrate symmetries into an analysis algorithm.", "num_citations": "85\n", "authors": ["1638"]}
{"title": "Reducing adapter synthesis to controller synthesis\n", "abstract": " Service-oriented computing aims to create complex systems by composing less-complex systems, called services. Since services can be developed independently, the integration of services requires an adaptation mechanism for bridging any incompatibilities. Behavioral adapters aim to adjust the communication between some services to be composed in order to establish proper interaction between them. We present a novel approach for specifying such adapters, based on domain-specific transformation rules that reflect the elementary operations that adapters can perform. We also present a novel way to synthesize complex adapters that adhere to these rules, viz., by consistently separating data and control, and by using existing controller-synthesis algorithms. Our approach has been implemented, and we discuss some example applications, including real business processes in WS-BPEL.", "num_citations": "81\n", "authors": ["1638"]}
{"title": "Extending the compatibility notion for abstract WS-BPEL processes\n", "abstract": " WS-BPEL defines a standard for executable processes. Executable processes are business processes which can be automated through an IT infrastructure. The WS-BPEL specification also introduces the concept of abstract processes: In contrast to their executable siblings, abstract processes are not executable and can have parts where business logic is disguised. Nevertheless, the WS-BPEL specification introduces a notion of compatibility between such an under-specified abstract process and a fully specified executable one. Basically, this compatibility notion defines a set of syntactical rules that can be augmented or restricted by profiles. So far, there exist two of such profiles: the Abstract Process Profile for Observable Behavior and the Abstract Process Profile for Templates. None of these profiles defines a concept of behavioral equivalence. Therefore, both profiles are too strict with respect to the rules they\u00a0\u2026", "num_citations": "68\n", "authors": ["1638"]}
{"title": "Stubborn sets for standard properties\n", "abstract": " Stubborn sets aree a tool for state space reduction preserving certain system properties. We present stubborn set approaches for all popular Petri net standard properties. This extends the list of properties that can be analysed successfully (including boundedness, reversibility). For other properties, our approach can lead to larger reductions (reachability) than previous ones. Futhermore, shortest and cheapest witness paths for several properties are now preservered.", "num_citations": "63\n", "authors": ["1638"]}
{"title": "Artifact-centric choreographies\n", "abstract": " Classical notations for service collaborations focus either on the control flow of participating services (interacting models) or the order in which messages are exchanged (interaction models). None of these approaches emphasizes the evolution of data involved in the collaboration. In contrast, artifact-centric models pursue the converse strategy and begin with a specification of data objects.                 This paper extends existing concepts for artifact-centric business process models with the concepts of agents and locations. By making explicit who is accessing an artifact and where the artifact is located, we are able to automatically generate an interaction model that can serve as a contract between the agents and by construction makes sure that specified global goal states on the involved artifacts are reached.", "num_citations": "58\n", "authors": ["1638"]}
{"title": "Realizability is controllability\n", "abstract": " A choreography describes the interaction between services. It may be used for specification purposes, for instance serving as a contract in the design of an inter-organizational business process. Typically, not all describable interactions make sense which motivates the study of the realizability problem for a given choreography.             In this paper, we show that realizability can be traced back to the problem of controllability which asks whether a service has compatible partner processes. This way of thinking makes algorithms for controllability available for reasoning about realizability. In addition, it suggests alternative definitions for realizability. We discuss several proposals for defining realizability which differ in the degree of coverage of the specified interaction.", "num_citations": "55\n", "authors": ["1638"]}
{"title": "Operating guidelines-an automata-theoretic foundation for the service-oriented architecture\n", "abstract": " In the service-oriented architecture (SOA), we distinguish three roles of service owners: service providers, service requesters, and service brokers. Each service provider publishes information to the broker about how requesters can interact with its service. Thus, the broker can assign a fitting service provider to a querying requester. We propose the information published to the broker to be operating guidelines. Operating guidelines are essentially communication instructions for the service requester. We present an automata-theoretic approach that is centered around operating guidelines and is capable of implementing all tasks arising in the SOA.", "num_citations": "55\n", "authors": ["1638"]}
{"title": "Applying CEGAR to the Petri net state equation\n", "abstract": " We propose a reachability verification technique that combines the Petri net state equation (a linear algebraic overapproximation of the set of reachable states) with the concept of counterexample guided abstraction refinement. In essence, we replace the search through the set of reachable states by a search through the space of solutions of the state equation. We demonstrate the excellent performance of the technique on several real-world examples. The technique is particularly useful in those cases where the reachability query yields a negative result: While state space based techniques need to fully expand the state space in this case, our technique often terminates promptly. In addition, we can derive some diagnostic information in case of unreachability while state space methods can only provide witness paths in the case of reachability.", "num_citations": "53\n", "authors": ["1638"]}
{"title": "Behavioral constraints for services\n", "abstract": " In service-oriented architectures (SOA), deadlock-free interaction of services is an important correctness criterion. To support service discovery in an SOA, operating guidelines serve as a structure to characterize all deadlock-freely interacting partners of a services. In practice, however, there are intended and unintended deadlock-freely interacting partners of a service. In this paper, we provide a formal approach to express intended and unintended behavior as behavioral constraints. With such a constraint, unintended partners can be \u201cfiltered\u201d yielding a customized operating guideline. Customized operating guidelines can be applied to validate a service and for service discovery.", "num_citations": "48\n", "authors": ["1638"]}
{"title": "Integrating low level symmetries into reachability analysis\n", "abstract": " We present three methods for the integration of symmetries into reachability analysis. Two of them lead to maximal reduction but their runtime depends on the symmetry structure. The third one works always fast but does not always yield maximal reduction.", "num_citations": "45\n", "authors": ["1638"]}
{"title": "Compact representations and efficient algorithms for operating guidelines\n", "abstract": " Operating guidelines characterize correct interaction (eg, deadlock freedom) with a service. They can be stored in a service registry. They are typically represented as an annotated transition system where the annotations are Boolean formulae attached to the states. The core result of this article is to propose an alternative representation of operating guidelines where, instead of a Boolean formula, only a few bits need to be stored with a state. This way, we safe one order of magnitude in the space complexity of the representation. Moreover, we demonstrate that the new representation yields efficiency gains in several algorithms which involve operating guidelines. Finally we show that the new representation permits the translation of the transition system representing the operating guidelines into a Petri net which typically yields further gains concerning the space for storing operating guidelines.", "num_citations": "40\n", "authors": ["1638"]}
{"title": "Specifying and generating behavioral service adapters based on transformation rules\n", "abstract": " Behavioral adapters are a way to establish proper interaction between services that have been developed independently. We present a novel approach for specifying such adapters, based on domain-specific transformation rules that reflect the elementary operations that adapters can perform. We show how complex adapters that adhere to these rules can be generated using existing controller generation algorithms. We discuss some example applications, including real-world business processes.", "num_citations": "39\n", "authors": ["1638"]}
{"title": "Deciding service composition and substitutability using extended operating guidelines\n", "abstract": " We study the correct interaction between services using the following notion for correctness: there is no deadlock in the interaction of the services, and a given set of activities is not dead, that is, each activity in this set is executed in at least one run. The second condition has not been studied before. An operating guideline of a service P is an operational characterization of all deadlock-free interacting partners of P. In this paper, we present an extension of the concept of an operating guideline to characterize all correctly interacting partners of a service P. This extension can be used for answering at least the following two questions. First, given a service R, does R interact correctly with P? Second, given a service P\u2032, can P be substituted by P\u2032, that is, is every correctly interacting partner of P a correctly interacting partner of P\u2032, too?", "num_citations": "35\n", "authors": ["1638"]}
{"title": "An algorithm for matching non-deterministic services with operating guidelines\n", "abstract": " Interorganisational cooperation is more and more organised by the paradigm of services. Service-Oriented Architectures (SOA) provide a general framework for service interaction. SOA describe three roles of services, the service provider, the service requester and the service broker, together with the three operations publish, find and bind. We provide a formal method based on non-deterministic automata to model services and their interaction. In this paper, we restrict ourselves to finite and acyclic automata. We suggest operating guidelines as a convenient and intuitive artefact to realise the publish operation. In our approach, the find operation reduces to a matching problem between the requester's service and the published operating guidelines. If matching services are actually bound together, our approach guarantees deadlock-free interaction. In this paper, matching of deterministic as well as non-deterministic\u00a0\u2026", "num_citations": "34\n", "authors": ["1638"]}
{"title": "Petri Net Model Checking with LoLA 2\n", "abstract": " LoLA 2 offers a suite of algorithms for verifying place/transition Petri nets. It combines structural with state space methods and general purpose with Petri net-specific techniques. The methods are easily accessible to people with little knowledge of Petri nets since there is a uniform query language based on temporal logic, and the tool takes care of sound application of its methods. Unlike its predecessor LoLA 1, LoLA 2 is based on a strict modularisation and integration of various standard tools. A careful software engineering approach has been used for coding. Through its code quality and its frequent comparison to other tools in the yearly model checking contests, LoLA 2 has become one of the most reliable verification tools for distributed systems.", "num_citations": "33\n", "authors": ["1638"]}
{"title": "Question-guided stubborn set methods for state properties\n", "abstract": " This paper presents two stubborn set methods for alleviating the state explosion problem when reasoning about state properties. The first method makes it possible to determine whether a state of the system is reachable in which a given state predicate holds. The second method makes it possible to determine if from all reachable states it is possible to reach a state where a given state predicate holds. The novelty of the two methods is that they rely on so-called up sets and down sets rather than the notion of visible transitions which causes earlier methods to give only limited reduction of the state space, especially when considering state predicates referring to many of the state variables of the system. The suggested stubborn set methods have been implemented in the LoLA tool, and we report on some experimental results obtained with this computer tool together with some general guidance for applying\u00a0\u2026", "num_citations": "33\n", "authors": ["1638"]}
{"title": "Operating guidelines for services\n", "abstract": " In the service-oriented architecture (SOA), we distinguish three roles of service owners: service providers, service requesters, and service brokers, and the three standard operations publish, find, and bind.", "num_citations": "31\n", "authors": ["1638"]}
{"title": "How to implement a theory of correctness in the area of business processes and services\n", "abstract": " During the previous years, we presented several results concerned with various issues related to the correctness of models for business processes and services (ie, interorganizational business processes). For most of the results, we presented tools and experimental evidence for the computational capabilities of our approaches. Over the time, the implementations grew to a consistent and interoperable family of tools, which we call service-technology. org. This paper aims at presenting this tool family service-technology. org as a whole. We briefly sketch the underlying formalisms and covered problem settings and describe the functionality of the participating tools. Furthermore, we discuss several lessons that we learned from the development and use of this tool family. We believe that the lessons are interesting for other academic tool development.", "num_citations": "26\n", "authors": ["1638"]}
{"title": "New algorithms for deciding the siphon-trap property\n", "abstract": " The siphon-trap property, also known as Commoner-Hack property, establishes a relation between structural entities within a Petri net \u2013 the eponymous siphons and traps. The property is linked to the behavior of a Petri net, for instance to deadlock freedom and liveness of the net. It is nevertheless nontrivial to decide the property as a net can have exponentially many siphons and traps even if only minimal siphons are considered. Consequently, the value of the property depends on the availability of powerful decision procedures.               We contribute to this issue by proposing two new methods for deciding the siphon-trap property. One is a plain translation of the property into a Boolean satisfiability (SAT) problem, which exploits the fact that incredibly powerful SAT solvers are available. The second procedure has a divide-and-conquer nature which builds upon a decomposition of a Petri net into open nets\u00a0\u2026", "num_citations": "26\n", "authors": ["1638"]}
{"title": "Another approach to service instance migration\n", "abstract": " Services change over time, be it for internal improvements, be it for external requirements such as new legal regulations. For long running services, it may even be necessary to change a service while instances are actually running and interacting with other services. This problem is referred to as instance migration. We present a novel approach to the behavioral (service protocol) aspects of instance migration. We apply techniques for finitely characterizing the set of all correctly interacting partners to a given service. The approach assures that migration does not introduce behavioral problems with any running partner of the original service. Our technique scales up to services with thousands of states, including models of real WS-BPEL processes.", "num_citations": "26\n", "authors": ["1638"]}
{"title": "Using Petri net invariants in state space construction\n", "abstract": " The linear algebraic invariant calculus is a powerful technique for the verification of Petri nets. Traditionally it is used for structural verification, i.e. for avoiding the explicit construction of a state space. In this paper, we study the use of Petri net invariants for reducing the memory resources required during state space construction. While place invariants help to reduce the amount of memory needed for each single state (without reducing the number of states as such), transition invariants can be used to reduce the number of states to be stored. Interestingly, our approach does not require computing invariants in full, let alone storing them permanently. All information we need can be deduced from an upper triangular form of the Petri net\u2019s incidence matrix. Experiments prove that the place invariant technique leads to improvements in both memory and run time costs while transition invariants lead to a space/time\u00a0\u2026", "num_citations": "25\n", "authors": ["1638"]}
{"title": "Stubborn Sets for Model Checking the EF/AG Fragment of CTL.\n", "abstract": " The general stubborn set approach to CTL model checking 2] has the drawback that one either nds a stubborn set with only one enabled transition or one has to expand all enabled transitions. This restriction does not apply in our approach to a fragment of CTL. Furthermore, our reduction does not depend on the invisibility of transitions in a stubborn set.", "num_citations": "25\n", "authors": ["1638"]}
{"title": "Presentation of the 9th edition of the model checking contest\n", "abstract": " The Model Checking Contest (MCC) is an annual competition of software tools for model checking. Tools must process an increasing benchmark gathered from the whole community and may participate in various examinations: state space generation, computation of global properties, computation of some upper bounds in the model, evaluation of reachability formulas, evaluation of CTL formulas, and evaluation of LTL formulas.For each examination and each model instance, participating tools are provided with up to 3600s and 16 gigabyte of memory. Then, tool answers are analyzed and confronted to the results produced by other competing tools to detect diverging answers (which are quite rare at this stage of the competition, and lead to penalties). For each examination, golden, silver, and bronze medals are attributed to the three best tools. CPU usage and memory consumption are reported, which is also valuable information for tool developers.", "num_citations": "24\n", "authors": ["1638"]}
{"title": "Decidability results for choreography realization\n", "abstract": " A service choreography defines a set of permitted sequences of message events as a specification for the interaction of services. Realizability is a fundamental sanity check for choreographies comparable to the notion of soundness for workflows.                 We study several notions of realizability: partial, distributed, and complete realizability. They establish increasingly strict conditions on realizing services. We investigate decidability issues under the synchronous and asynchronous communication models. For partial realizability, we show undecidability whereas the other two problems are decidable with reasonable complexity.", "num_citations": "23\n", "authors": ["1638"]}
{"title": "Automated generation of a progress measure for the sweep-line method\n", "abstract": " In the context of Petri nets, we propose an automated construction of a progress measure which is an important pre-requisite for a state space reduction technique called the sweep-line method. Our construction is based on linear-algebraic considerations concerning the transition vectors of the Petri net under consideration.", "num_citations": "23\n", "authors": ["1638"]}
{"title": "Symmetric symbolic safety-analysis of concurrent software with pointer data structures\n", "abstract": " We formally define the model of software with pointer data structures. We developed symbolic algorithms for the manipulation of conditions and assignments with indirect operands for verification with BDD-like data-structures. We rely on two techniques, including inactive variable elimination and process-symmetry reduction in the data-structure configuration, to contain the time and memory complexity. We use binary permutation for efficiency but also identify the possibility of anomaly of image false reachability. We implemented the techniques in tool red and compare performance with Mur\u00f8 and SMC against several other benchmarks.", "num_citations": "22\n", "authors": ["1638"]}
{"title": "Symmetrie of Petri Nets\n", "abstract": " A definition of Petri net symmetries is given and an algorithm is introduced, which computes these symmetries. Then three examples are given how algorithms from different fields of Petri net analysis can be improved using symmetries, namely computation of reachability graphs, semipositive place invariants and structural deadlocks, respectively.", "num_citations": "21\n", "authors": ["1638"]}
{"title": "Elementary Net Synthesis Remains NP-Complete Even for Extremely Simple Inputs\n", "abstract": " Elementary net systems (ENS) are the most fundamental class of Petri nets. Their synthesis problem has important applications in the design of digital hardware and commercial processes. Given a labeled transition system (TS) A, feasibility is the NP-complete decision problem whether A can be synthesized into an ENS. It is known that A is feasible if and only if it has the event state separation property (ESSP) and the state separation property (SSP). Recently, these properties have also been studied individually for their practical implications. A fast ESSP algorithm, for instance, would allow applications to at least validate the language equivalence of A and a synthesized ENS. Being able to efficiently decide SSP, on the other hand, could serve as a quick-fail preprocessing mechanism for synthesis. Although a few tractable subclasses have been found, this paper destroys much of the hope that many\u00a0\u2026", "num_citations": "20\n", "authors": ["1638"]}
{"title": "Symbolische Analysemethoden f\u00fcr algebraische Petrinetze\n", "abstract": " Symbolische Analysemethoden f\u00fcr High\u2013Level\u2013Netze zielen darauf ab, kompakte Beschreibungen f\u00fcr Mengen von beteiligten Elementardaten (zB Zust\u00e4nden, Eigenschaften) direkt, das hei\u00dft ohne deren explizite Aufl\u00f6sung, zu bearbeiten. Dadurch soll die kombinatorische Explosion ged\u00e4mpft werden, die zB bei der Transformation des High\u2013Level\u2013Netzes in ein Low\u2013Level\u2013Netz entsteht. Als Beispiele f\u00fcr diese Herangehensweise sollen die Invariantenmethode und parametrisierte Erreichbarkeitsgraphen vorgestellt werden.", "num_citations": "20\n", "authors": ["1638"]}
{"title": "Set algebra for service behavior: Applications and constructions\n", "abstract": " Compatibility of behavior, i.e.\u00a0the correct ordering of messages, is one of the core aspects for the interaction between services as parts of an inter-organizational business process. In previous work, we proposed formal representations for service behavior (including Petri nets and service automata) and finite representations of sets thereof (operating guidelines).               In this article, we show how the basic set operations union, intersection, and complement, as well as membership and emptiness tests, can be implemented on finite representations of (typically infinite) sets of services. We motivate the operations by three examples of applications\u2014service substitution, selection of behavior, and navigation in a behavioral registry.", "num_citations": "19\n", "authors": ["1638"]}
{"title": "Raw report on the model checking contest at Petri nets 2012\n", "abstract": " This article presents the results of the Model Checking Contest held at Petri Nets 2012 in Hambourg. This contest aimed at a fair and experimental evaluation of the performances of model checking techniques applied to Petri nets. This is the second edition after a successful one in 2011. The participating tools were compared on several examinations (state space generation and evaluation of several types of formulae - structural, reachability, LTL, CTL) run on a set of common models (Place/Transition and Symmetric Petri nets). After a short overview of the contest, this paper provides the raw results from the context, model per model and examination per examination.", "num_citations": "18\n", "authors": ["1638"]}
{"title": "Distributed verification with LoLA\n", "abstract": " We report work in progress on a distributed version of explicit state space generation in the Petri net verification tool LoLA. We propose a data structure where all available memory of all involved workstations can be fully exploited, and load balancing actions are possible at any time while the verification is running. It is even possible to extend the set of involved workstations while a verification is running.", "num_citations": "18\n", "authors": ["1638"]}
{"title": "Kommunizierende Workflow-Services modellieren und analysieren\n", "abstract": " Zur ad\u00e4quaten Nutzung von Workflow-Implementierungen kommunizierender Gesch\u00e4ftsprozesse werden Konzepte vorgeschlagen, die von konkreten Implementierungen abstrahieren. Auf der Basis von Petrinetzen werden unterschiedliche Varianten der Bedienbarkeit von Workflows charakterisiert und daf\u00fcr Entscheidungsalgorithmen vorgestellt. Die Angemessenheit des Ansatzes wird am Beispiel der Semantik von Komponenten der Gesch\u00e4ftsprozess-Modellierungssprache BPEL demonstriert.", "num_citations": "16\n", "authors": ["1638"]}
{"title": "Petrifying operating guidelines for services\n", "abstract": " Operating guidelines characterize correct interaction (e.g. deadlock freedom) with a service. They can be stored in a service registry. So far, they have been represented as an annotated transition system. For the sake of saving space in the registry, we want to translate operating guidelines into Petri nets. To make this possible, we carefully investigate regularities in the annotations.", "num_citations": "15\n", "authors": ["1638"]}
{"title": "Narrowing petri net state spaces using the state equation\n", "abstract": " Given a (possibly partially defined) state, all count vectors of transition sequences reaching that state are solutions to a corresponding Petri net state equation. We propose a search strategy where sequences corresponding to a minimal solution of the state equation are explored first. Then step by step the search space is relaxed to arbitrary count vectors. This heuristics relies on the observation that in many (though provably not in all) cases, minimal solutions of the state equation can be realized as a firing sequence. If no target state is reachable, either the state equation does not have solutions, or our search method would yield the full state space. We study the impact of the state equation on reachability, present an algorithm that exploits information from the state equation and discuss its application in stateless search as well as its combination with stubborn set reduction.", "num_citations": "15\n", "authors": ["1638"]}
{"title": "Model-checking with coverability graphs\n", "abstract": " We show that several formulas of a temporal logic can be verified using the coverability graph of the underlying system. Of course, the procedure is not capable of verifying all formulae, since already the reachability problem for (unbounded) Petri nets is computationally hard. Thus, the procedure returns true, false, or unknown for a query. The formulae that can be verified cover most of the well known standard properties which have been listed in the context of coverability graph analysis so far.", "num_citations": "15\n", "authors": ["1638"]}
{"title": "Explicit state space verification\n", "abstract": " Verification is the task of determining whether a (model of a) system holds a given behavioral property. State space verification comprises a class of computer aided verification techniques where the property is verified through exhaustive exploration of the reachable states of the system. Brute force implementations of state space verification are intractable, due to the well known state explosion problem. Explicit state space verification techniques explore the state space one state at a time, and rely usually on data structures where the size of the data structure increases monotonously with an increasing number of explored states. They alleviate state explosion by constructing a reduced state space that, by a mathematically founded construction, behaves like the original system with respect to the specified properties. Thereby, decrease of the number of states in the reduced system is the core issue of a reduction technique thus reducing the amount of memory required.   An explicit state space verification technique comprises of   - a theory that establishes whether, and how, certain properties can be preserved through  a construction of a reduced state space;   - a set of procedures to execute the actual construction efficiently.  In this thesis, we contribute to several existing explicit state space verification techniques in either of these two respects.  We extend the class of stubborn set methods (an instance of partial order reduction) by constructions that preserve previously unsupported classes of properties. Many existing constructions rely on the existence of \"invisible\" actions, i.e. actions whose effect does not immediately influence the verified property\u00a0\u2026", "num_citations": "14\n", "authors": ["1638"]}
{"title": "Running LoLA 2.0 in a Model Checking Competition\n", "abstract": " We report on the performance of the tool LoLA 2.0 in the model checking contest (MCC) 2015. As in the years before, LoLA ranked first in the reachability category of the contest. We identify critical success factors and discuss the impact of the contest design. Conclusions include further improvements for the tool as well as suggestions concerning the setup of future contests.", "num_citations": "13\n", "authors": ["1638"]}
{"title": "Verification of siphons and traps for algebraic Petri nets\n", "abstract": " Siphons and traps are structures which allow for some implications on the net's behaviour and can be used in manual correctness proofs for concurrent systems. We introduce symbolic representations of siphons and traps which work quite well even in infinite cases and are still intuitively readable. The verification of symbolic siphons and traps is traced back to unification and structural induction on the terms. This approach is motivated by some additional considerations. For unification and other proposed structural reasoning mechanisms tool support is given by completeness proof tools studied in the theorem-proving community.", "num_citations": "13\n", "authors": ["1638"]}
{"title": "Parameterized reachability trees for algebraic Petri nets\n", "abstract": " Parameterized reachability trees have been proposed by M. Lindquist for predicate/transition nets. We discuss the application of this concept to algebraic nets. For this purpose a modification of several definitions is necessary due to the different net descriptions, transition rules and theoretical backgrounds. That's why we present the concept from the bottom for algebraic nets. Furthermore we discuss the combination of parameterized reachability analysis with the well known stubborn set method.", "num_citations": "13\n", "authors": ["1638"]}
{"title": "Taking Some Burden Off an Explicit CTL Model Checker\n", "abstract": " In the CTL category of recent model checking contests, less problems have been solved than in the Reachability and LTL categories. Hence, improving CTL model checking technology deserves particular attention. We propose to relieve a generic explicit CTL model checker. This is done by designing specialised routines that cover a large set of simple (and frequently occurring) formula types. The CTL model checker is then only applied to formulas that do not fall into any special case. For the simple queries, we may apply simple depth-first search instead of recursive search, we may use much more powerful dialects of the stubborn set reduction, and we may add additional tools for verification, such as the state equation. Our approach covers about half of the CTL category of a recent model checking contest and significantly increases the power of CTL model checking.", "num_citations": "12\n", "authors": ["1638"]}
{"title": "Developing simulation models-from conceptual to executable model and back-an artifact-based workflow approach\n", "abstract": " Developing a model for simulation is an art and a science. The question is how this process can be suitably supported. Integrating workflows into simulation systems promises user guidance, documentation and reproducibility of this process. However, the highly interactive, partly concurrent, partly optional nature of the modeling process challenges traditional activity-based workflow approaches. This is intensified by its multiple inter-dependencies and the need for an easy extension. We will illuminate this based on a modeling example from cell biology. To support the required flexibility, we propose an artifact-based workflow approach instead. Conceptual model, formal model and different data and information sources are specified declaratively as artifacts. The life cycle of an artifact is defined by stages, guards, milestones, and sentries, following the Guard-Stages-Milestone (GSM) approach. It is shown that the\u00a0\u2026", "num_citations": "11\n", "authors": ["1638"]}
{"title": "Stubborn sets for simple linear time properties\n", "abstract": " We call a linear time property simple if counterexamples are accepted by a B\u00fcchi automaton that has only singleton strongly connected components. This class contains interesting properties such as LTL formulas  or \u03d5U \u03c8 which have not yet received support beyond general LTL preserving approaches.               We contribute a stubborn set approach to simple properties with the following ingredients. First, we decompose the verification problem into finitely many simpler problems that can be independently executed. Second, we propose a stubborn set method for the resulting problems that does neither require cycle detection, nor stuttering invariance, nor existence of transitions that are invisible to all atomic propositions. This means that our approach is applicable in cases where traditional approaches fail. Third, we show that sufficient potential is left in existing implementations of the proposed\u00a0\u2026", "num_citations": "11\n", "authors": ["1638"]}
{"title": "Operating guidelines-an alternative to public view\n", "abstract": " P@ Q RSQ TI UWVYXSXSaRcbdQ) Vfehgp iqVfTrXsRSQ e taurbdvxwyg\u00c4R \u00c5\u00c9\u00c7Y\u00d1\u00dc\u00d6\u00e0\u00e1\u00e2\u00d6\u00e0\u00eaY\u00d6\u00ae \u00eb\u00e0\u00ed\u00eaY\u00ec\u00ee \u00c5\u00c9\u00c7Y\u00eb\u00f1\u00ef% \u00ec\u00e0\u00f3) \u00f2\" \u00d6\u00e0\u00e1d\u00f4 e\u00ee\u00eaf\u00f3 ga\u00ef% hdij\u00d6lknmo\u00c7Y\u00e1dprqc\u00ec\u00e0\u00d1l\u00e1\u00e2\u00d6\" \u00ed\u00f2 \u00d6@ sc\u00eax t4qc\u00ec\u00e0hu\u00e1u\u00c7 vw\u00f3) \u00f2% \u00e1uhyxh zs {\u00c4|}}\" \u00c4 \u00c5r\u00c7f\u00c9\u00d6 \u00d1n \u00dcY} \u00e1\" \u00c7 {a\u00e0\" \u00e2 \u00c5j\u00e4 \u00e3~ \u00e0\" \u00e5~ \u00e7f\u00e9% \u00e83 {\u00c4|% \u00c5j\u00e03\u00dc4 \u00ea\u00eb \u00c7 \u00c4j\u00ed% \u00ecf\u00c9r\u00e8~ \u00eef\u00e0\" \u00e5\u00ef \u00ea\u00f1 \u00e2~ \u00c9 \u00f3) \u00f2\u00f6\u00f4r\u00f5r\u00fa\" \u00f9\u00c4\u00fb% \u00f5r\u00fc\u2020 qq Y\u00ec\u00e0\u00efra\u00ef% \u00d1lqp\u00a2 s\u00a3 Y \u00a7 S\u2022 l\u00b6% \u00dfy\u02c7\u00a9~\u2122\u2122% f\u00ae \u00eb\u2260~ \u00a7 c\u00c6\u02c7\u00a9 a \u00a7 S\u00d8I \u00f2% \u00d1 \u00f2 \u00ecl\u00d6\u00e0\u00e1\u00e2\u00eby\u00f2\u221e c\u00d6\u00e0\u00d1 \u00eb\u00f1\u00ef% \u00ec\u00b1Y\u00eafgYhd\u00e1u\u00d1l\u2264 Y\u00e1d\u00c7Y\u2265 \u00e1u\u00c7Y\u00eb\u00f1\u00ef% \u00ec\u00e0\u00f3) \u00f2\" \u00d6\u00e0\u00e1d\u00ef% \u00c7 $ \u00f2% ga\u00efr\u00eaj\u00d6\u00d6\u2264 Y\u00ef\"\u00a5 \u00b5 \u00d6\u00e0\u00ef5\u221e r\u00efr\u00f3q\u00f3\u2202 \u00eaf\u00c7f\u00e1u\u221e 3\u00f2\" \u00d6\u00e0q\u00f6 5\u00e1u\u00d6\u00e0\u2264 $ \u00f2\u00ae gf\u00eaY\u00d1l\u00e1u\u00c7fqr\u00d1l\u00d1\u2211 Y\u00ec\u00e0\u00ef~\u221e rqr\u00d1l\u00d1h \u00d6\u00e0\u2264 \u00c4\u00f2\" \u00d6\u00d6 \u00e1u\u00d1\u220f \u00e1u\u00c7Yk \u00d6\u00e0qr\u00c7fiYq3i) \u00d6\u00e0\u00ef gaqI j\u00ec\u00e0\u00ef pf\u00e1diYqri\u03c0 \u00f2 \u00d1\u00ee \u00f2\u2202 \u00d1lqc\u00ec\u00e0pf\u00e1d\u221e cqr\u222b\u2020 q\u00aa Y\u00ec\u00e0qc\u00d1lqr\u00c7~ \u00d6\u00ba \u00f2% \u00c7 \u00f2 fY\u00ec\u00e0\u00efr\u00f2%\u221e s\u2264 \u03c0 \u00d6\u00e0\u00ef\u00b1\u221e c\u00efr\u00f3qf\u00eaj\u00d6\u00e0q \u00ef% aqc\u00ecs\u00f2 \u00d6\u00e0\u00e1u\u00c7f\u2265 \u03a9\u2265 r\u00eaY\u00e1diYqrhu\u00e1u\u00c7fqr\u00d1 $ \u00eby\u00eaYhdh\u00e2\u00e6W \u00f2 \u00eaY\u00d6\u00e0\u00ef% \u00f3) \u00f2 \u00d6\u00e0\u00e1u\u221e 3\u00f2% huh\u00e2\u00e6~\u222b\u2020 q)\u221e r\u00ef% \u00f3q\u00c4\u00f2\" \u00ec\u00e0q\u00f8 \u00ef% aqc\u00ecs\u00f2 \u00d6\u00e0\u00e1u\u00c7Y\u2265 \u00b5\u2265% \u00eaf\u00e1diYqck hu\u00e1u\u00c7fqr\u00d15 5\u00e1\u00e2\u00d6\u00e0\u2264 7 \u00d6\u00e0\u2264 fqo\u221e r\u00efr\u00c7Y\u221e rqrY\u00d65 \u00ef \u00eb\u00f6\u00a3 \u00c4Y\u00bf r\u00c6\u00ae \u00eb\u00a1 I\u00ac 3n \u00a7 S\u221a w\u222b \u0192\u2248 Y\u2206 \u00f6 \u00ab\u03c0\u00bb h\u2026~ 4\u00c0j\u00c3\u00f6 t\u00c4Q Tc\u00d5\u00c4w\u00f1u Q u \u0152jvx\u0153\u220f \u0152YXSwdRcw\u2013\u0152Yew\u2014a Q\"\u201clXsQ% TS\u00d5\u00c4wyu\" QrX5 RcQ% urbded\u0152Y\u201d\u2013\u0152Y \u2018j\u2019Y\u2014f \u0153hd\u00f7 d\u201d \u00f1w\u00f1u \u00d5\u00c4w\u2013Q%\u25ca q\u2014a \u0152j\u0153\u220f Q TrVRS \u201cw\u2013ed \u2018x \u2018Ydw\u00f1gdQ\u201d \u00f1w\u2013edQrX\u2014\u2211 u\" \u0152jefRcTS\u0152Y\u201d\u2013\u201d \u00f1Q TI XS\u2019fefRcbdQ% XSw\u00f1X \u00ff \u0178f\u2044 \u00ba\u20ac a\u2039 d\u203a I\ufb01\u2202 \ufb02 $\u2021\u220f\u20ac d\u00b7 \u00e0\u203a \u00ba\u2044\u201a\u00ee\u2211 Xsw\u00f1edQ% XcXo \u0153dTc\u0152\u00c4u Q% XcXsQrX\u00ee VjTSQ $ RSTrVjgaQ\u00b1XSQ% u\" TcQ\" RrX \u201e\u00c4\u2030\u00b6 Q% \u00d5jQ% TsRcbdQ\u201d \u00f1Q% XcX\u2014\u00c4 vx\u0152jTcQ\u2202 Vjehg\u00c2 vx\u0152YTSQ\u00f7 dhXSw\u2013ehQ% XcX\u00ee \u0153hTS\u0152j \u201cu\" Q% XcXSQ% Xq VfTcQ gaQ% XSw\u00f1 \u2018jedQrg\u00ca VYXq V \u00a7 \u00c1\" \u00cb \u00c83\u00cdr\u00cen\u00cfc\u00cb\u00ca \u00ccnVYu u \u0152jTrgaw\u2013eh \u2018\u03a9 Rc\u0152 RSbdQ \u00c1 \u00cb \u00c83\u00cd% \u00cen\u00cfr\u00cb \u00d3\u00a0\u2026", "num_citations": "11\n", "authors": ["1638"]}
{"title": "Model Checking Contest@ Petri Nets Report on the 2012 edition\n", "abstract": " This article presents the results of the Model Checking Contest held at Petri Nets 2012 in Hambourg. This contest aimed at a fair and experimental evaluation of the performances of model checking techniques applied to Petri nets. This is the second edition after a successful one in 2011 [29].", "num_citations": "10\n", "authors": ["1638"]}
{"title": "Applying reduction rules to algebraic Petri nets\n", "abstract": " We study the speci c problems concerning the application of reduction rules to algebraic Petri nets. In particular we express the application conditions for the rules by means of term operations and discuss the validity of reduction rules in di erent interpretations of an algebraic net. Thereby the discussion is rather informal, that is we do not add formal proofs of their correctness. Nevertheless we demonstrate the principle feasibility of the net reduction approach for algebraic nets.", "num_citations": "10\n", "authors": ["1638"]}
{"title": "Web report on the model checking contest@ Petri net 2013\n", "abstract": " This document presents the results of the Model Checking Contest held at Petri Nets 2013 in Milano. This contest aimed at a fair and experimental evaluation of the performances of model checking techniques applied to Petri nets. This is the third edition after two successful editions in 2011 [34] and 2012 [33].The participating tools were compared on several examinations (state space generation and evaluation of several types of formul\u00e6\u2013reachability, LTL, CTL for various classes of atomic propositions) run on a set of common models (Place/Transition and Symmetric Petri nets). After a short overview of the contest, this paper provides the raw results from the contest, model per model and examination per examination. An HTML version of this report is also provided [32].", "num_citations": "9\n", "authors": ["1638"]}
{"title": "Verifying deadlock-and livelock freedom in an SOA scenario\n", "abstract": " In a service-oriented architecture (SOA), a service broker assigns a previously published service (stored in a service registry) to a service requester. It is desirable for the composition of the requesting and the assigned service to interact properly. While proper interaction is often reduced to deadlock freedom of the composed system, we additionally consider livelock freedom as a desirable property for the interaction of services. In principle, deadlock- and livelock freedom can be verified by inspecting the state space of the composition of (public views of) the involved services. The contribution of this paper is to propose a methodology to build that state space from pre-computed fragments which are computed upon publishing a service. That way, we shift computation time from the time critical request phase of service brokerage to the less critical publish phase. Interestingly, our setting enables state space reduction\u00a0\u2026", "num_citations": "9\n", "authors": ["1638"]}
{"title": "An efficient necessary condition for compatibility.\n", "abstract": " Composing services makes sense only if they are compatible, ie composition does not lead to problems such as livelocks or deadlocks. In general, compatibility can be checked using state space explorations on any kind of formal models of services. Petri nets, one of the formal models in use, offer a rich theory for reasoning without exploring a state space. Among the techniques is the so-called state equation which forms a linear algebraic necessary condition for reachability of states.In this article, we show how the state equation can be applied for a necessary condition for compatibility. This way, the number of expensive state space based compatibility checks can be drastically reduced. The condition can be applied even if compatibility is achieved through the construction of a behavioral adapter (mediator).", "num_citations": "9\n", "authors": ["1638"]}
{"title": "Covering places and transitions in open nets\n", "abstract": " We present a finite representation of all services M where the composition with a given service N is deadlock-free, and a given set of activities of N can be covered (i.e. is not dead). Our representation is an extension of the existing notion of an operating guideline which only cared about deadlock freedom. We further present an algorithm to decide whether a service M matches with the extended operating guideline of N.", "num_citations": "9\n", "authors": ["1638"]}
{"title": "Symbolic representation of operating guidelines for services\n", "abstract": " Services are selfcontrolled executable software components. Generally they are not executed in isolation, but communicate with other services through message exchange via their interface. With the paradigm of service-oriented architectures (SOA)[1], a mechanism for the composition of services is provided. The service provider makes a service available. For his service to be found and used by a service requester, he publishes a description of his service in a central repository which is managed by a service broker. Hence, a service requester can attempt to find an adequate service in the repository. If that is the case, the services can bind and interact with each other. SOA, however, only postulate a general protocol for the composition of services. It is intentionally left open how to be realized exactly. For instance, it is not described which information should be published. On the one hand, the service broker needs enough information about an offered service P to be able to decide if the service R of a requester fits to P. That means: beforehand it has to be guaranteed that the two services, while interacting, neither get into a deadlock nor send unexpected messages to each other. On the other hand, the whole service P cannot simply be published because the service provider may want to keep its internal structure secret. In [2, 3] we proposed an approach in which the provider publishes an operating guideline (OG) of his service P. Operating guidelines describe how a potential partner has to behave. For a service R, the broker now only has to check if R fulfills the requirements of the operating guideline. This process is called matching. If the\u00a0\u2026", "num_citations": "9\n", "authors": ["1638"]}
{"title": "T-invariants of algebraic petri nets\n", "abstract": " A detailed observation of the structure of T\u2013invariants leads to the definition of a subset of invariants, which generates the whole set of invariants by linear combination and instantiation and the elements of which have a simple structure by means of computation. Then an algorithmically insoluble problem concerning T\u2013invariants is presented to justify the non\u2013termination of the algorithm which computes this subset of invariants. The algorithm consists mainly of a clever application of term unification.", "num_citations": "9\n", "authors": ["1638"]}
{"title": "Decomposition into open nets\n", "abstract": " We study the decomposition of an arbitrary Petri net into open nets. This means that shared places can be seen as message channels between components. We show that there exists a unique decomposition into atomic components which can be efficiently computed. We further show that every composition of components yields a component and that every component can be built from atomic components. Finally, we briefly discuss potential applications.", "num_citations": "8\n", "authors": ["1638"]}
{"title": "Data under control\n", "abstract": " Controllability is a fundamental sanity check for open systems such as services. Existing approaches to check controllability consider Petri net models in which data aspects are usually neglected or abstracted from. This paper investigates controllability of algebraic Petri nets and sketches a symbolic analysis approach.", "num_citations": "7\n", "authors": ["1638"]}
{"title": "Siphons and Traps of Algebraic Petri Nets\n", "abstract": " Karsten Schmidt Digital Systems Laboratory Department of Computer Science Helsinki University of Technology Otaniemi, FINLAND", "num_citations": "7\n", "authors": ["1638"]}
{"title": "How Petri Net Theory Serves Petri Net Model Checking: A Survey\n", "abstract": " Structure theory is a unique treasure of the Petri net community. It was originally studied as a set of stand-alone techniques for exploring Petri net properties such as liveness, boundedness, reachability, and deadlock freedom. Today, methods based on the exploration of the reachability graph (state space methods) dominate Petri net verification. Thanks to the concept of model checking, these methods can deal with a much larger range of verification problems, and thanks to state space reduction methods (symmetries, partial order reduction, and other abstraction techniques), they became tractable for many practical applications. However, in the course of pushing model checking technology to its limits, several elements of Petri net structure theory celebrate a resurrection, being viewed from a different angle. This time, they are used for acceleration of the state space methods. In this article, we give an overview on\u00a0\u2026", "num_citations": "6\n", "authors": ["1638"]}
{"title": "Guaranteeing weak termination in service discovery\n", "abstract": " A big issue in the paradigm of Service Oriented Architectures (SOA) is service discovery. Organizations publish their services via the Internet. These published services can then be automatically found and accessed by other services, meaning, the services are composed. A fundamental property of a service composition is weak termination, which guarantees the absence of deadlocks and livelocks. In principle, weak termination can be verified by inspecting the state space of the composition of (public views of) the involved services. We propose a methodology to build that state space from precomputed fragments, which are computed upon publishing a service. That way, we shift computation effort from the resource critical \u201cfind\u201d phase to the less critical \u201cpublish\u201d phase. Interestingly, our setting enables state space reduction methods that are intrinsically different from traditional state space reductions. We further\u00a0\u2026", "num_citations": "6\n", "authors": ["1638"]}
{"title": "Service discovery using communication fingerprints\n", "abstract": " A request to a service registry must be answered with a service that fits in several regards, including semantic compatibility, non-functional compatibility, and interface compatibility. In the case of stateful services, there is the additional need to check behavioral (i.e. protocol) compatibility. This paper is concerned with the latter aspect. For speeding up compatibility checks which need to be performed on many candidate services, we propose an abstraction of the behavior of each published service that we call communication fingerprint. The technique is based on linear programming and is thus extremely efficient. We validate our approach on a large set of services that we cut out of real world business processes.", "num_citations": "6\n", "authors": ["1638"]}
{"title": "LoLA as Abstract Planning Engine of PlanICS.\n", "abstract": " An abstract planning (AP) is the first phase of the web service composition in the Planics framework. We propose an automatic translation of AP to reachability problem in high-level Petri nets, and exploiting the LoLA tool to solve it. We present our approach together with a prototype implementation, and preliminary experimental results.", "num_citations": "5\n", "authors": ["1638"]}
{"title": "Transactions on Petri Nets and Other Models of Concurrency VII\n", "abstract": " These Transactions publish archival papers in the broad area of Petri nets and other models of concurrency, ranging from theoretical work to tool support and industrial applications. ToPNoC issues are published as LNCS volumes, and hence are widely distributed and indexed. This Journal has its own Editorial Board which selects papers based on a rigorous two-stage refereeing process. ToPNoC contains:-Revised versions of a selection of the best papers from workshops and tutorials at the annual Petri net conferences-Special sections/issues within particular subareas (similar to those published in the Advances in Petri Nets series)-Other papers invited for publication in ToPNoC-Papers submitted directly to ToPNoC by their authors The 7th volume of ToPNoC contains revised material from the 5th International Summer School \u201cAdvanced Course on Petri Nets\u201d, held in September 2010 in Rostock, Germany. The nine papers cover a diverse range of topics including modeling, verification, partial order semantics, and synthesis of Petri nets. In compliance with their origin as course material, the papers are written in survey or tutorial style and give a comprehensive overview of the state of the art in their respective areas.", "num_citations": "5\n", "authors": ["1638"]}
{"title": "Business Process Management: 9th International Conference, BPM 2011, Clermont-Ferrand, France, August 30-September 2, 2011, Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the 9th International Conference on Business Process Management, BPM 2011, held in Clermont-Ferrand, France, in August/September 2011. The volume contains 22 revised full research papers carefully reviewed and selected from 157 submissions, as well as 5 industrial track papers and abstracts of three invited talkes. The papers address innovative research of highest quality from computer science, management information science, service-oriented computing, and technology management.", "num_citations": "5\n", "authors": ["1638"]}
{"title": "On synthesizing service behavior that is aware of semantical constraints\n", "abstract": " Without taking care of the semantics of messages, every message is an isolated entity that can be created and sent at will. This leads to anomalies like a synthesized service that sends a filled form before having received the empty form. In this paper we pick up ideas from adapter synthesis for taking care of semantical constraints and develop them into two directions. First, we show that the approach taken for adapter synthesis can be applied to synthesis of services in general. Second, we argue that the taken approach is in a certain sense complete.", "num_citations": "5\n", "authors": ["1638"]}
{"title": "Automated generation of a progress measure for the sweep-line method\n", "abstract": " In the context of Petri nets, we propose an automated construction of a progress measure which is an important pre-requisite for a state space reduction technique called the sweep-line method. Our construction is based on linear-algebraic techniques concerning the transition vectors of the Petri net under consideration. We further discuss the possible combination of the sweep-line method with other state space reduction techniques (partial order reduction, the symmetry method).", "num_citations": "5\n", "authors": ["1638"]}
{"title": "On the computation of place invariants for algebraic Petri nets\n", "abstract": " The paper is concerned with the computation of a generator set for the space of all place invariants for a given algebraic net. We will show that the problem can be divided into two major steps. First we trace back the problem to a set of equations between terms. Then we combine the solutions of these equations to obtain the solution of the original problem. For both steps we present a solution for a restricted class of algebraic nets, where the algebraic specification contains no equations and at most unary operation symbols.", "num_citations": "5\n", "authors": ["1638"]}
{"title": "Computation of Invariants for Algebraic Petri Nets\n", "abstract": " In the first part of this article we discuss the definition of P-and T\u2013invariants for algebraic Petri nets. Thereby we stress the strong relation of these concepts with those for colored Petri nets. This part contains furthermore a comparison with the concepts defined in [Rei91], where first algebraic nets, invariant concepts and the main theorems concerning invariants have been presented. The second part deals with an idea for the calculation of T\u2013invariants. The main part of this idea is to trace back the equation C\u00b7 I= 0 to a set of term equations which can be solved applying the well known concept of unification.", "num_citations": "5\n", "authors": ["1638"]}
{"title": "The Petri net twist in explicit model checking\n", "abstract": " The invention of Petri nets was based on a critical analysis of then dominating automata models of systems. Explicit model checking explores the reachable states of a Petri net one by one. Essentially, it transforms a Petri net back to a transition system, that is, an automata-like model. At first glance, this transformation appears to give up on all the specifics of Petri nets. Surveying the most dominant techniques of explicit state space verification, we will, however, work out that even in explicit model checking, the defining features of Petri nets are beneficial and lead to more efficient exploration routines. The findings in this paper are based on practical experience with a Petri net-based explicit model checking tool.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "From Artifacts to Activities\n", "abstract": " We consider services as units in interorganizational business processes. Following trends in the business process management community, we switch from an activity-centric description of processes to artifact-centric descriptions. In the interorganizational setting, unique problems arise. For instance, an artifact hub that is crucial for present-day enactment of artifact-centric processes, can hardly be shared between different organizations since the stored information may be subject to trade secrets. We propose a solution that involves the translation of an artifact-centric model into an activity-centric model. In this course, we consider artifacts as entities that may be sent around between organizations. The location of an artifact may imply access restrictions for one or the other organization. We propose both a formal model and algorithms to show the effectiveness of our approach.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "Analysis techniques for service models\n", "abstract": " The paradigm of Service-Oriented Computing (SOC) provides a framework for interorganizational business processes and for the emerging programming-in-the-large. The basic idea of SOC, the interaction of services, rises a lot of issues such as proper termination of interacting services or substitution of a service by another one. Such issues can be addressed by means of models of services. We show how services can intelligibly be modeled, and we present algorithms and tools to analyze properties of service models. In order to emphasize that our models properly reflect real world issues of services, we also show that services represented in established languages such as WS-BPEL can be transformed into our formal method.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "Symbolische Repr\u00e4sentation von Bedienungsanleitungen f\u00fcr Services\n", "abstract": " Die SOA bietet jedoch nur ein Konzept zur Zusammenstellung von Services. Fragen zur konkreten Realisierung bleiben offen. Ungekl\u00e4rt ist insbesondere, welche Informationen publiziert werden m\u00fcssen. Einerseits ben\u00f6tigt der Service Broker genug Informationen \u00fcber einen angebotenen Service P, um entscheiden zu k\u00f6nnen, ob der Service R eines Requesters zu P passt. Das hei\u00dft: Im Vorfeld muss sichergestellt werden, dass die Services w\u00e4hrend ihrer Interaktion weder in einen Deadlock geraten noch sich unerwartete Nachrichten senden. Andererseits soll die innere Struktur von P gekapselt werden, so dass nicht einfach der komplette Service P ver\u00f6ffentlicht werden kann. In [MRS05, MW06] haben wir einen Ansatz vorgestellt, in dem der Provider eine Bedienungsanleitung von seinem Service P bereitstellt. Diese beschreibt, wie sich ein Partner verhalten muss. F\u00fcr einen Service R muss der Broker nun\u00a0\u2026", "num_citations": "4\n", "authors": ["1638"]}
{"title": "Matching nondeterministic services with operating guidelines\n", "abstract": " Interorganizational cooperation is more and more organized by the paradigm of services. The service-oriented architecture (SOA) provides a general framework for service interaction. It describes three roles, service provider, service requester, and service broker, together with the operations publish, find, and bind. We provide a formal method based on nondeterministic automata to model services and their interaction. We suggest operating guidelines as a convenient and intuitive artifact to realize publish. In our approach, the find operation reduces to a matching problem between the requester\u2019s service and operating guidelines. In this paper, matching of deterministic as well as nondeterministic automata with operating guidelines is presented.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "On the new low level Symmetry tool in INA\n", "abstract": " In INA 2.1, the whole symmetry approach has been revised. We calculate and store only a generating set of the symmetries. This yields a signi cant save of time and space. For every iteration of the symmetries during the generation of reduced reachability or coverability graphs, we compose the symmetries systematically without storing more symmetries permanently than the generating set. The time for composing the symmetries (instead of jumping from pointer to pointer in the old version) is compensated by the ability to exclude whole blocks of symmetries from the iteration.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "How to calculate symbolically siphons and traps for some algebraic Petri nets\n", "abstract": " We present a symbolic approach to the calculation of siphons and traps for algebraic Petri nets where the color domains are speci ed without equations and with at most unary operation symbols.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "Symmetry calculation\n", "abstract": " We consider several applications of net symmetries for various Petri net classes. We show, that almost all computations of symmetry groups for different net classes and almost all decision problems which appear when applying symmetric reductions can be traced back to a single algorithm. This is a very pleasing result for a multi purpose analysis tool like INA (see for instance [Fel92]). For the two exceptions from this general result\u2014the computation of symmetry groups for self\u2013modifying nets ([Val77]) and the decision of the coverability problem for place/transition nets we present extensions of the basic algorithm.", "num_citations": "4\n", "authors": ["1638"]}
{"title": "Petri Net Synthesis with Union/Find\n", "abstract": " We propose a new algorithm for the synthesis of a Petri net from a transition system. It is presented for a class of place/transition Petri nets we call 1-Petri nets. A 1-Petri net has an incidence matrix where entries have values 0, 1, and \u22121 only. This class includes safe Petri nets as well as ordinary place/transition nets. The proposed algorithm can be adapted to these net classes. The algorithm employs Tarjan\u2019s union/find algorithm for managing sets of vertices. It requires just O(|V||T|) space where V is the set of vertices and T is the set of transition labels. Consequently, problem instances even beyond 1,000,000 vertices have a manageable memory footprint. Our results are experimentally validated using a prototype implementation.", "num_citations": "3\n", "authors": ["1638"]}
{"title": "Decidability Issues for Decentralized Controllability of Open Nets.\n", "abstract": " We sketch an undecidability result concerning the decentralized controllability problem of open nets and discuss some consequences.", "num_citations": "3\n", "authors": ["1638"]}
{"title": "Applications and Theory of Petri Nets\n", "abstract": " Applications and Theory of Petri Nets - NASA/ADS Now on home page ads icon ads Enable full ADS view NASA/ADS Applications and Theory of Petri Nets Franceschinis, Giuliana ; Wolf, Karsten Abstract Publication: Lecture Notes in Computer Science Pub Date: 2009 DOI: 10.1007/978-3-642-02424-5 Bibcode: 2009LNCS......F Keywords: Computer Science; Theory of Computation; Discrete Mathematics in Computer Science; Algorithm Analysis and Problem Complexity; Software Engineering; Mathematical Logic and Formal Languages; Logics and Meanings of Programs full text sources Publisher | \u00a9 The SAO/NASA Astrophysics Data System adshelp[at]cfa.harvard.edu The ADS is operated by the Smithsonian Astrophysical Observatory under NASA Cooperative Agreement NNX16AC86A NASA logo Smithsonian logo Resources About ADS ADS Help What's New Careers@ADS Social @adsabs ADS Blog Project \u2026", "num_citations": "3\n", "authors": ["1638"]}
{"title": "A finite representation of all substitutable services and its applications.\n", "abstract": " We present a finite representation of all substitutable services P of a given service P. We show that our approach can be used for at least two applications:(1) given a finite set of services P={P1,..., Pn}, we provide a representation of all services P that can substitute every Pi\u2208 P, and (2) given a service P that cannot substitute a service P, we find the most similar service P\u2217 to P that can substitute P.", "num_citations": "3\n", "authors": ["1638"]}
{"title": "Web Services and Formal Methods\n", "abstract": " This volume contains the proceedings of the 5th International Workshop on Web Services and Formal Methods (WS-FM 2008) held during September 4\u20135, 2008 in Milan, Italy, co-located with the 6th International Conference on Business Process Management (BPM 2008). Previous editions of the workshop were held in Pisa, Italy (WS-FM 2004), Versailles, France (WS-FM 2005), Vienna, Austria (WS-FM 2006) and Brisbane, Australia (WS-FM 2007). The aim of the workshop series is to bring together researchers working on web services and formal methods in order to catalyze fruitful collaboration. Web service (WS) technology provides standard mechanisms and protocols for describing, locating and invoking services available all over the web. Existing infrastructures already enable providers to describe services in terms of their interface, access policy and behavior, and to combine simpler services into more\u00a0\u2026", "num_citations": "3\n", "authors": ["1638"]}
{"title": "Challenges in a service-oriented world\n", "abstract": " Interacting services raise a number of new software engineering challenges. To meet these challenges, the behaviour of the involved services must be considered. We present results regarding the behaviour of services in isolation, the interaction of services in choreographies, the exchangeability of a service, and the synthesis of desired partner services.In a service-oriented world, enterprises use (Web) services to encapsulate parts of their process logic. The Web Service Business Process Execution Language (BPEL) is an established standard to describe Web services. Usually designed in isolation, a service must nevertheless properly interact with other services at run time. A number of techniques have been suggested to check the compatibility of service interfaces and to discover pairs of semantically matching services. The problem of checking behavioural compatibility, however, is rarely addressed. Figure 1\u00a0\u2026", "num_citations": "3\n", "authors": ["1638"]}
{"title": "Siphons, traps and high-level nets with infinite color domains\n", "abstract": " Commoner's Theorem establishes a relation between siphons, traps and liveness in free choice systems. Most proofs of this theorem do explicitly involve the finiteness of the net. Therefore we cannot apply the theorem directly to high level nets with infinite color domains.             We prove generalisations of both the \u201cif\u201d and the \u201conly if\u201d direction to the infinite case which unfortunately cannot be combined to an \u201ciff\u201d statement. We present examples which show that there are both live and non-live nets in the grey zone left by our generalisations. Our approach enlarges the application area of Commoner's theorem to infinite Petri nets, compared with an earlier generalisation to a class of free choice predicate event systems, but does not cover the other approach completely.", "num_citations": "3\n", "authors": ["1638"]}
{"title": "Portfolio Management in Explicit Model Checking.\n", "abstract": " Thanks to a rich Petri net theory, there exists a broad range of verification techniques for Petri nets. Most of them have a performance that highly depends on the particular combination of net and property. That is why several verification tools for Petri nets use portfolio approaches where various verification algorithms are run concurrently. In this note, we sketch the architecture of a portfolio manager, using the tool LoLA 2.0 as a running example. The portfolio of a verification problem is organized as a task tree. The leafs of the task tree are actual verification algorithms while the inner nodes represent the logical structure of the portfolio. The portfolio manager schedules verification algorithms and assigns resources to them (processor cores, memory, and time). Moreover, it evaluates the consequences of returned results with regard to the original verification problem.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Solving E (\u03c6U\u03c8) using the CEGAR Approach.\n", "abstract": " Petri nets are an established formal method for modelling and verifying asynchronous, concurrent and distributed systems. To verify a specification, given as a temporal logic formula, state space methods often encounter the state space explosion problem. We propose a verification technique to solve the CTL query E (\u03c6 U \u03c8) using the Petri net state equation with a counterexample guided abstraction refinement (CEGAR) approach. The algorithm tries to solve EF \u03c8, while keeping \u03c6 true. Especially in case the property does not hold, the technique often terminates quickly. As a side product we show that (EX) k\u03c6 formulas can be solved with the CEGAR approach as well.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "A Simple Abstract Interpretation for Petri Net Queries.\n", "abstract": " We propose a simple but effective method for the detection of duplicates in state predicates for Petri nets. We map sub-formulas to integer numbers using a mapping abstr. The assignment guarantees that abstr (\u03c61)= abstr (\u03c62) implies equivalence of \u03c61 and \u03c62 while abstr (\u03c61)=\u2212 abstr (\u03c62) implies equivalence of \u03c61 and\u00ac \u03c62. The obtained knowledge can be used for reducing the size of a formula that is obtained by expensive constructions such as the transformation into disjunctive normal form. The method is implemented in our tool LoLA 2.0.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Interleaving Based Model Checking of Concurrency and Causality\n", "abstract": " We consider a spectrum of properties proposed in [14]. It is related to causality and concurrency between a pair of given transitions in a place/transition net. For each of these properties, we ask whether it can be verified using an ordinary, interleaving based, model checker. With a systematic approach based on two constructions, we reduce most properties in the spectrum to a reachability problem. Only one problem needs to be left open completely. Some problems can be solved only under the assumption of absent auto-concurrency.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Vorrede\n", "abstract": " Herzlich willkommen! Ich sag einfach Du. Wenn Du so funktionierst wie die Meisten, hast Du gro\u00dfen Respekt vor dem, was Dich erwartet. Du hast, bewusst oder unbewusst, eine Barriere um Dich herum errichtet. Durch das Du r\u00fccke ich etwas n\u00e4her zu Dir und befinde mich mit etwas Gl\u00fcck innerhalb Deines Schutzschirmes.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Model Checking Contest@ Petri Nets\n", "abstract": " This document presents the results of the Model Checking Contest held at Petri Nets 2013 in Milano. This contest aimed at a fair and experimental evaluation of the performances of model checking techniques applied to Petri nets. This is the third edition after two successful editions in 2011 and 2012. The participating tools were compared on several examinations (state space generation and evaluation of several types of formul{\\ae} -- reachability, LTL, CTL for various classes of atomic propositions) run on a set of common models (Place/Transition and Symmetric Petri nets). After a short overview of the contest, this paper provides the raw results from the contest, model per model and examination per examination. An HTML version of this report is also provided (http://mcc.lip6.fr).", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Business Process Management\n", "abstract": " The BPM Conference series provides the most distinguished research forum for researchers and practitioners in all aspects of business process management (BPM) including theory, frameworks, methods, techniques, architectures, systems, and empirical findings. The series has a record of attracting innovative research of the highest quality, from a mix of disciplines including computer science, management information science, services computing, services science, and technology management.BPM 2011 was the ninth conference of the series. It took place from August 30 to September 2, 2011, on the campus des c\u00e9zeaux in Clermont-Ferrand, France, and was organized by the LIMOS Laboratory of the Blaise Pascal University and CNRS. BPM 2011 attracted 157 research paper submissions, out of which 22 papers were selected for this volume based on a thorough review process (each paper was reviewed by\u00a0\u2026", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Produktbedienungsanleitungen zur Charakterisierung austauschbarer Services\n", "abstract": " Unternehmen sind bestrebt, immer mehr Gesch\u00e4fte mit ihren Kunden teilweise oder vollst\u00e4ndig automatisiert abzuwickeln. In diesem Bestreben machen sie mehr und mehr Gebrauch von der serviceorientierten Architektur (SOA). Grundbaustein der SOA ist der Service, der eine von einem Unternehmen angebotene Dienstleistung oder Funktionalit\u00e4t \u00fcber eine wohldefinierte Schnittstelle bereitstellt und von Kunden oder Services anderer Unternehmen verwendet werden kann. Damit wir zwei Services als sinnvoll miteinander interagierend bezeichnen k\u00f6nnen, m\u00fcssen sie verschiedene Mindestanforderungen erf\u00fcllen. Auf Grundlage dieser Mindestanforderungen k\u00f6nnen wir f\u00fcr jeden gegebenen Service eine Bedienungsanleitung konstruieren, die alle sinnvoll mit ihm interagierenden Services charakterisiert.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Automatic transformation and enlargement of similarity models for case-based reasoning\n", "abstract": " In this paper, we present a new approach how similarity models for Case-Based Reasoning can be extended by means of operators for relations. A second contribution of the relations approach is that the mathematical model can be transformed into an OWL notation as well as in the proprietary format that is needed to build a Case Retrieval Net1Inside a case-based system, a case c is represented by a set of information entities ei \u03f5 E: c={e1, e2,..., en}. It is compared with a query q that is as well just a set of information entities. A composite similarity function for q, c\u2286 E determines a numeric value for the degree of similarity SIM (q, c). SIM is computed by means of a local similarity function sim: E\u00d7 E\u2192 R. A very simple example of SIM is the sum of the local values:", "num_citations": "2\n", "authors": ["1638"]}
{"title": "LoLA wird Pfadfinder.\n", "abstract": " LoLA ist ein erreichbarkeitsgraphbasiertes Werkzeug fiur Stellen/Transitions-Netze. Hier geht es um LoLAs Fiahigkeit, erreichbare Zustiande mit vorgegebenen Eigenschaften zu suchen und im Erfolgsfall einen solchen Zustand mit einem Weg von der Anfangsmarkierung dorthin anzugeben. Die Besonderheit besteht darin, da\u00df wiahrend der Suche nur zwei Zustiande gespeichert werden: der Anfangszustand und der aktuelle Zustand. Anstatt also den Zustandsraum systematisch zu durchmustern (und dabei meist am Speicherende zu scheitern), navigiert LoLA ohne Kenntnis der schon betretenen Zustiande durch den Erreichbarkeitsgraph. Da\u00df sie trotzdem ihre Aufgabe erfolgreich liost, liegt an ihren spezifischen Fiahigkeiten: Schnelligkeit, Bescheidenheit, Zielstrebigkeit, Neugier und Ausdauer.", "num_citations": "2\n", "authors": ["1638"]}
{"title": "Solving Finite-Linear-Path CTL-Formulas Using the CEGAR Approach\n", "abstract": " Petri nets are an established formal method for modelling and verifying asynchronous, concurrent and distributed systems. To verify a specification, given as a temporal logic formula, state space methods often encounter the state space explosion problem. We propose a verification technique to solve the CTL query E ( U ) using the Petri net state equation with a counterexample guided abstraction refinement (CEGAR) approach. As a side product we show that (EX) formulas can be solved with the CEGAR approach as well. We use these special formulas as building bricks to solve the class of finite-linear-path CTL-formulas. The proposed techniques are strong at invalidating infeasible behaviour. In addition to this it will often terminate quickly. We are also introducing quick-checks for solving EG  under certain circumstances.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Verification of Token-Scaling Models using an Under-Approximation.\n", "abstract": " In the model checking domain the state explosion problem is the core issue. The cause is usually the sheer size of the model or the cardinality of tokens in the initial state. For the latter, which we call token-scaling models, we propose an under-approximation for reachable states. The idea is to reduce the number of tokens in the initial state and thus reducing the state space. If in the reduced state space a witness path is found, then the witness path can also be executed in the original state space. This method preserves existential temporal properties (ECTL*) using a simulation relation between the reduced and the original state space. Since the cardinality of the initial marking varies from only a few tokens to multi-digit numbers of tokens, we apply heuristics to compute the number of tokens that should be removed. We implemented the new method in the explicit model checker LoLA 2. The experiments, done on the model checking contest benchmark, show that this method can speed up the model checking process and solve additional queries.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Model Checking Concurrency and Causality\n", "abstract": " We consider a spectrum of properties proposed in [14], that is related to causality and concurrency between a pair of given transitions in a place/transition net. For each of these properties, we ask whether it can be verified using an ordinary, interleaving based, model checker. With a systematic approach based on two constructions, we reduce 75% of the properties in the spectrum to a reachability problem. We have to leave the remaining 25% as open problems.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Explizites Model Checking: Welche Vorteile bieten Petrinetze?\n", "abstract": " Petrinetze wurden vorgeschlagen, um Schw\u00e4chen klassischer Automatenmodelle zu beheben. Explizites Model Checking \u00fcbersetzt jedoch zun\u00e4chst ein Petrinetz in einen klassischen Automaten. Damit gibt man zun\u00e4chst die Vorteile von Petrinetzen scheinbar wieder auf. Wir zeigen jedoch, dass die wichtigsten Techniken des expliziten Model Checking besonders effizient sind, wenn sie grundlegende Prinzipien von Petrinetzen ber\u00fccksichtigen. Dieser Beitrag beschreibt Resultate, die auf praktischen Erfahrungen mit einem petrinetzbasierten Werkzeug zum expliziten Model Checking beruhen.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Characterizing Weakly Terminating Partners of Open Systems\n", "abstract": " We study open systems modeled as finite state machines with an interface for asynchronous communication with other open systems. An open system P is a partner of an open system S, if the two systems can be composed to a closed system S\u2295 P that is weakly terminating (does not have deadlocks nor livelocks). Known controller synthesis techniques allow us to construct a most permissive partner MP (S) to a given open system S. Our contribution is to enhance MP (S) with Boolean annotations, yielding a finite characterization of all partners of S. We demonstrate the usefulness of this characterization by involving it in a decision procedure for accordance. Accordance is a canonical preorder on open systems: R accords with S if every partner of S is a partner of R. Our decision procedure reduces accordance to finding a simulation relation between MP (S) and MP (R) and checking validity of implications between related Boolean formulas.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Finding a witness path for non-liveness in free-choice nets\n", "abstract": " One of the disablers of structural Petri net verification techniques is the lack of diagnosis information that is easily understandable. In this article, we improve this situation for a particular technique: the siphon and trap based verification of liveness in free-choice nets. Instead of the information \u201dthere is a siphon without included marked trap\u201d, we exhibit an execution path that leads from the initial marking to a marking m                         * and a set of transitions that mutually block each other and are thus dead at m                         *. The latter information can be much more easily comprehended by non-experts in Petri net theory. We provide experimental results suggesting that our method is competitive to related state space techniques.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Reachability Analysis via Net Structure.\n", "abstract": " Exploitation of the structure of a Petri net is widely believed to be an ine cient approach to solving the reachability problem. We show that structure analysis can be combined with integer programming and partial order reduction to obtain a fast reachability solver.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "A theory of service behavior.\n", "abstract": " We outline a fundamental approach to behavioral aspects of services. In the center of this approach, we see behavioral models of services, interactions, and finite representations of sets thereof. Several operations and relations can be defined and their implementation on our representations can be studied. Finally, a number of interesting problems can be traced back to our models and operations. On the boundary of our theory, we place interfaces to other aspects of services.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "An Approach to Tackle Livelock-Freedom in SOA.\n", "abstract": " We calculate a fixed finite set of state space fragments for a service P, where each fragment carries a part of the whole behavior of P. By composing these fragments according to the behavior of a service R we build the state space of their composition P\u2295 R which can be checked for deadlocks and livelocks. We show that this approach is applicable to realize a \u201cfind\u201d request by a service R with a provided service P in SOA.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "On the step explosion problem\n", "abstract": " In many well-known extensions of place-transition nets, including read arcs, inhibitory arcs, reset arcs, priorities and signal arcs, it is sometimes possible to reach a marking through firing a step of transitions which cannot be reached through firing a sequence of single transitions. For state space analysis, it is thus recommendable to consider, in each state, all steps of transitions for firing. Since the number of activated steps may be exponential in the number of transitions, we have, in addition to the well-known state explosion problem, another explosion which we call step explosion. In this paper, we present an approach for alleviating step explosion. We furthermore discuss the joint application of our method with partial order reduction and in the context of CTL model checking.", "num_citations": "1\n", "authors": ["1638"]}
{"title": "Modellierung und Analyse transaktionaler Gesch\u00e4ftsprozesse\n", "abstract": " Wie erweitern in dieser Arbeit Workflow-Module um ein Konzept, mit dem der Einflu\u00df eines Datenbanksystems auf die Bedienbarkeit eines Gesch\u00e4ftsprozesses untersucht werden kann. Wir integrieren transaktionale Eigenschaften als internes Verhalten in Workflow-Module und k\u00f6nnen damit Bedienbarkeit und Einhaltung transaktionaler Eigenschaften durch Analyse entscheiden.", "num_citations": "1\n", "authors": ["1638"]}