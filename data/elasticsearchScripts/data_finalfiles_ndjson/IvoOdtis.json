{"title": "Towards NoSQL-based data warehouse solutions\n", "abstract": " Data warehousing is a traditional domain of relational databases, and there are two main reasons for that: (1) data warehouses mostly are used in enterprises with large-scale data sets created in different legacy systems with relational data storages, (2) though rapidly developing non-relational databases are still rather unusual in data processing tasks. This paper discusses the possibilities to create data warehouse solutions by using NoSQL database management systems. The main challenge is to find a good balance between characteristics of classical data warehouses using relational data base management systems and opportunities offered by NoSQL database management systems. The paper describes processes of creation and production of data warehouse using a NoSQL data mart and outlines requirements for technology necessary for such processes. The research is based on practical experience\u00a0\u2026", "num_citations": "37\n", "authors": ["1684"]}
{"title": "The Concept of Automated Process Control\n", "abstract": " For many years computer scientists spent most of their work on research of software development technologies, while less effort was spent to make the use of the already developed software more convenient. In part this problem can be explained by software developers' concerns about software sales leaving software usage problems into users\u2019 hands. The complexity of the whole system is increased when one company or organization acquires software from more than one vendor and software is introduced with significant time span. This way a complex heterogeneous system environment is formed. There are at least two groups among system users: those who are end users or users of the system\u2019s business functionality and system administrators whose responsibilities include system security and technical configuration of system and its environment. By its complexity the area of business system administration and control is comparable to network administration. There are numerous tools for network administration and monitoring in the market; however, the authors of this paper could find no acceptable solutions for heterogeneous system administration and their process execution control. It can be explained by the diversity of the systems and the nonstandard nature of legacy system communication.Process control is a well-known problem. There have been many attempts to solve it in software history [1]. In the era of mainframes, process management was partly delegated to the operating system and Job Control Language. As a significant tool of this area, the SDL or Specification and Description Language must be mentioned. SDL is a\u00a0\u2026", "num_citations": "15\n", "authors": ["1684"]}
{"title": "An Approach to Data Quality Evaluation\n", "abstract": " This research proposes a new approach to data quality evaluation comprising 3 aspects: (1) data object definition, which quality will be analyzed, (2) quality requirements specification for the data object using Domain Specific Language (DSL), (3) implementation of an executable data quality model that would enable scanning of data object and detect its shortages. Like the Model Driven Architecture (MDA) the data quality modelling is divided into platform independent (PIM) and platform-specific (PSM) models. PIM comprises informal specifications of data quality, PSM describes implementation of data quality model, thus making the data quality model executable. The approbation of the proposed approach provided at least 3 advantages: (1) a graphical data quality model allows definition of data quality by non-IT professionals, (2) the data quality model is not related to the information system that has accumulated\u00a0\u2026", "num_citations": "8\n", "authors": ["1684"]}
{"title": "Data quality evaluation: a comparative analysis of company registers' open data in four European countries.\n", "abstract": " This paper is devoted to the analysis of open data quality of the company registers in four different countries. The data quality evaluation was obtained using a methodology that involves the creation of three-part data quality model:(1) the definition of a data object to analyse its quality,(2) data object quality specification using DSL,(3) the implementation of an executable data quality model enabling the scanning of a data object and detecting its deficiencies. All three components of the data quality model are designed as graphical language families, which allow formulating data quality specification for non-IT professionals. Validation of an open data published by company registers in four different European countries shows deficiencies in the published data and demonstrates the applicability of the proposed methodology for data quality evaluation.", "num_citations": "8\n", "authors": ["1684"]}
{"title": "Asynchronous Runtime Verification of Business Processes\n", "abstract": " The authors propose a runtime verification mechanism for business processes. This mechanism allows verifying the correctness of business process execution and it runs in parallel with the base processes affecting them insignificantly. The authors have identified the case where the use of business process runtime verification is helpful and applicable. The verification mechanism monitors the business process execution and verifies compliance with the base process description. The verification mechanism prototype was developed and tested in real business processes, as well as limits of runtime verification overhead were evaluated.", "num_citations": "8\n", "authors": ["1684"]}
{"title": "Implementation of NoSQL-based data Wareh\n", "abstract": " Data warehouses traditionally are built using relational databases. The main reason for that-data warehouses mostly are used in enterprises with large-scale data sets stored in relational data structures of different legacy systems. Though rapidly developing non-relational databases also are still rather unusual in data processing tasks. This paper discusses the possibilities and advantages of using document-oriented NoSQL database management systems in data warehousing. The paper describes processes and implementation aspects of building data warehouses using a NoSQL data storages. The research is based on practical experience gained during implementing of NoSQL data marts in MongoDB.", "num_citations": "7\n", "authors": ["1684"]}
{"title": "A Practitioner\u2019s Approach to Achieve Autonomic Computing Goals\n", "abstract": " The paper proposes a new approach to the development of software resulting in a greater facility in using and maintaining an IT system; thus moving closer to the main goal of all autonomic systems\u2013self management. The authors propose including five practice driven components into the software. These five components are smart technologies: version updating, testing of execution environment, self-testing, runtime verification and business process execution. The smart technologies have been successfully implemented in several IT systems.", "num_citations": "7\n", "authors": ["1684"]}
{"title": "User-Oriented Approach to Data Quality Evaluation.\n", "abstract": " The paper proposes a new data obMect-driven approach to data quality evaluation. It consists of three main components:(1) a data obMect,(2) data quality requirements, and (3) data quality evaluation process. As data quality is of relative nature, the data obMect and quality requirements are (a) use-case dependent and (b) defined by the user in accordance with his needs. All three components of the presented data quality model are described using graphical Domain Specific Languages (DSLs). In accordance with Model-Driven Architecture (MDA), the data quality model is built in two steps:(1) creating a platform-independent model (PIM), and (2) converting the created PIM into a platform-specific model (PSM). The PIM comprises informal specifications of data quality. The PSM describes the implementation of a data quality model, thus maNing it executable, enabling data obMect scanning and detecting data\u00a0\u2026", "num_citations": "6\n", "authors": ["1684"]}
{"title": "A step towards a data quality theory\n", "abstract": " Data quality issues have been topical for many decades. However, a unified data quality theory has not been proposed yet, since many concepts associated with the term \u201cdata quality\u201d are not straightforward enough. The paper proposes a user-oriented data quality theory based on clearly defined concepts. The concepts are defined by using three groups of domain-specific languages (DSLs): (1) the first group uses the concept of a data object to describe the data to be analysed, (2) the second group describes the data quality requirements, and (3) the third group describes the process of data quality evaluation. The proposed idea proved to be simple enough, but at the same time very effective in identifying data defects, despite the different structures of data sets and the complexity of data. Approbation of the approach demonstrated several advantages: (a) a graphical data quality model allows defining of data\u00a0\u2026", "num_citations": "6\n", "authors": ["1684"]}
{"title": "Models of data quality\n", "abstract": " The research proposes a new approach to data quality management presenting three groups of DSL (Domain Specific Language). The first language group uses concept of data object in order to describe data to be analysed, the second group describes the requirements on data quality, and the third group describes data quality management process. The proposed approach deals with development of executable quality specifications for each kind of data objects. The specification can be executed step-by-step according to business process descriptions, ensuring the gradual accumulation of data in the database and data quality verification according to the specific use case.", "num_citations": "6\n", "authors": ["1684"]}
{"title": "NoSQL-based data warehouse solutions: sense, benefits and prerequisites\n", "abstract": " The paper discusses the possibilities of using non-relational databases as data warehouses\u2019(DW) data mart\u2013an area traditionally covered by relational databases. The authors highlight potential benefits when using non-relational databases (NoSQL) technology based on the main characteristics of classical relational data base management system (RDBMS) based DW. The paper outlines a creation and production process for DW using a NoSQL data mart and develops requirements for technology necessary for such processes based on practical experience when implementing NoSQL data marts with MongoDB and Clusterpoint DB. Since there currently do not exist of-the-shelf reporting solutions for most of the NoSQL data storages the authors develop requirements for a reporting solution necessary for NoSQL based DW.", "num_citations": "6\n", "authors": ["1684"]}
{"title": "Smart technologies for improved software maintenance\n", "abstract": " Steadily increasing complexity of software systems makes them difficult to configure and use without special IT knowledge. One of the solutions is to improve software systems making them \u201csmarter\u201d, i.e. to supplement software systems with features of self-management, at least partially. This paper describes several software components known as smart technologies, which facilitate software use and maintenance. As to date smart technologies incorporate version updating, execution environment testing, self-testing, runtime verification and business process execution. The proposed approach has been successfully applied in several software projects.", "num_citations": "6\n", "authors": ["1684"]}
{"title": "Domain-specific characteristics of data quality\n", "abstract": " The research discusses the issue how to describe data quality and what should be taken into account when developing an universal data quality management solution. The proposed approach is to create quality specifications for each kind of data objects and to make them executable. The specification can be executed step-by-step according to business process descriptions, ensuring the gradual accumulation of data in the database and data quality checking according to the specific use case. The described approach can be applied to check the completeness, accuracy, timeliness and consistency of accumulated data.", "num_citations": "4\n", "authors": ["1684"]}
{"title": "Self-management of information systems\n", "abstract": " The paper discusses self-management features that are intended to support the usage and maintenance processes in the information system life. Instead of a universal solutions that are evolved by many researchers in the autonomic computing field, this approach, called smart technologies, anticipates self-management features by including autonomic components into information systems directly. The approach is practically applied in several information systems, and the gained results show that the implementation of self-management features requires relatively modest resources. Thereby the approach is suitable even for smaller projects and companies.", "num_citations": "4\n", "authors": ["1684"]}
{"title": "Towards data quality runtime verification\n", "abstract": " This paper discusses data quality checking during business process execution by using runtime verification. While runtime verification verifies the correctness of business process execution, data quality checks assure that particular process did not negatively impact the stored data. Both, runtime verification and data quality checks run in parallel with the base processes affecting them insignificantly. The proposed idea allows verifying (a) if the process was ended correctly as well as (b) whether the results of the correct process did not negatively impact the stored data in result of its modification caused by the specific process. The desired result will be achieved by use of domain specific languages that would describe runtime verification and data quality checks at every stage of business process execution.", "num_citations": "3\n", "authors": ["1684"]}
{"title": "Data quality model-based testing of information systems\n", "abstract": " This paper proposes a model-based testing approach by offering to use the data quality model (DQ-model) instead of the program\u2019s control flow graph as a testing model. The DQ-model contains definitions and conditions for data objects to consider the data object as correct. The study proposes to automatically generate a complete test set (CTS) using a DQmodel that allows all data quality conditions to be tested, resulting in a full coverage of DQ-model. In addition, the possibility to check the conformity of the data to be entered and already stored in the database is ensured. The proposed alternative approach changes the testing process: (1) CTS can be generated prior to software development; (2) CTS contains not only input data, but also database content required for complete testing of the system; (3) CTS generation from DQ-model provides values against which the system can be further tested. If the test\u00a0\u2026", "num_citations": "2\n", "authors": ["1684"]}
{"title": "Data quality model-based testing of information systems: the use-case of E-scooters\n", "abstract": " The paper proposes a data quality model-based testing methodology aimed at improving testing methodology of information systems (IS) using previously proposed data quality model. The solution supposes creation of a description of the data to be processed by IS and the data quality requirements used for the development of the tests, followed by performing an automated test of the system on the generated tests verifying the correctness of data to be entered and stored in the database. The generation of tests for all possible data quality conditions creates a complete set of tests that verify the operation of the IS under all possible data quality conditions. The proposed solution is demonstrated by the real example of the system dealing with e-scooters. Although the proposed solution is demonstrated by applying it to the system that is already in use, it can also be used when developing a new system.", "num_citations": "1\n", "authors": ["1684"]}