{"title": "Test generation with inputs, outputs and repetitive quiescence\n", "abstract": " Definition A input-output transition system p is a labelled transition system in which the set of actions L is partitioned into input actions LI and output actions LU (LI [LU= L, LI\\LU= 0), and for which all input actions are always enabled in any state.", "num_citations": "715\n", "authors": ["1132"]}
{"title": "Model based testing with labelled transition systems\n", "abstract": " Model based testing is one of the promising technologies to meet the challenges imposed on software testing. In model based testing an implementation under test is tested for compliance with a model that describes the required behaviour of the implementation. This tutorial chapter describes a model based testing theory where models are expressed as labelled transition systems, and compliance is defined with the \u2018ioco\u2019 implementation relation. The ioco-testing theory, on the one hand, provides a sound and well-defined foundation for labelled transition system testing, having its roots in the theoretical area of testing equivalences and refusal testing. On the other hand, it has proved to be a practical basis for several model based test generation tools and applications. Definitions, underlying assumptions, an algorithm, properties, and several examples of the ioco-testing theory are discussed, involving\u00a0\u2026", "num_citations": "512\n", "authors": ["1132"]}
{"title": "A formal approach to conformance testing\n", "abstract": " Degree: Dr.DegreeYear: 1992Institute: Universiteit Twente (The Netherlands)Publisher: Gerrit Jan Tretmans, De Wetstraat 49, 7551 Gb Hengelo, The Netherlands.Conformance testing involves checking correctness of implementations of computer communication protocols with respect to their specifications, by means of testing. This thesis describes an approach to conformance testing, where the protocol specification is given by a formal description. In particular, formal techniques based on labelled transition systems and process algebras are considered.", "num_citations": "365\n", "authors": ["1132"]}
{"title": "Testing concurrent systems: A formal approach\n", "abstract": " This paper discusses the use of formal methods in testing of concurrent systems. It is argued that formal methods and testing can be mutually profitable and useful. A framework for testing based on formal specifications is presented. This framework is elaborated for labelled transition systems, providing formal definitions of conformance, test execution and test derivation. A test derivation algorithm is given and its tool implementation is briefly discussed.", "num_citations": "349\n", "authors": ["1132"]}
{"title": "Torx: Automated model-based testing\n", "abstract": " Systematic testing is very important for assessing and improving the quality of software systems. Yet, testing turns out to be expensive, laborious, time-consuming and error-prone. The Dutch research and development project C\u00f4te de Resyste worked on methods, techniques and tools for automating specification based testing using formal methods. The main achievement of the project is a test tool, baptized TorX, which integrates automatic test generation, test execution, and test analysis in an on-the-fly manner. On the one hand, TorX is based on well-defined theory, viz. the ioco-test theory, which has its roots in the theory of testing-and refusal-equivalences for transition systems. On the other hand, the applicability of TorX has been demonstrated by testing several academic and industrial case studies. This paper summarizes the main results of the project C\u00f4te de Resyste.", "num_citations": "306\n", "authors": ["1132"]}
{"title": "Conformance testing with labelled transition systems: Implementation relations and test generation\n", "abstract": " This paper studies testing based on labelled transition systems, presenting two test generation algorithms with their corresponding implementation relations. The first algorithm assumes that implementations communicate with their environment via symmetric, synchronous interactions. It is based on the theory of testing equivalence and preorder, as is most of the testing theory for labelled transition systems, and it is found in the literature in some slightly different variations. The second algorithm is based on the assumption that implementations communicate with their environment via inputs and outputs. Such implementations are formalized by restricting the class of labelled transition systems to those systems that can always accept input actions. For these implementations a testing theory is developed, analogous to the theory of testing equivalence and preorder. It consists of implementation relations formalizing the\u00a0\u2026", "num_citations": "282\n", "authors": ["1132"]}
{"title": "Testing transition systems: An annotated bibliography\n", "abstract": " Labelled transition system based test theory has made remarkable progress over the past 15 years. From a theoretically interesting approach to the semantics of reactive systems it has developed into a field where testing theory is (slowly) narrowing the gap with testing practice. In particular, new test generation algorithms are being designed that can be used in realistic situations whilst maintaining a sound theoretical basis. In this paper we present an annotated bibliography of labelled transition system based test theory and its applications covering the main developments.", "num_citations": "219\n", "authors": ["1132"]}
{"title": "Test generation based on symbolic specifications\n", "abstract": " Classical state-oriented testing approaches are based on simple machine models such as Labelled Transition Systems (LTSs), in which data is represented by concrete values. To implement these theories, data types which have infinite universes have to be cut down to finite variants, which are subsequently enumerated to fit in the model. This leads to an explosion of the state space. Moreover, exploiting the syntactical and/or semantical information of the involved data types is non-trivial after enumeration. To overcome these problems, we lift the family of testing relations ioco                          to the level of Symbolic Transition Systems (STSs). We present an algorithm based on STSs, which generates and executes tests on-the-fly on a given system. It is sound and complete for the ioco                          testing relations.", "num_citations": "198\n", "authors": ["1132"]}
{"title": "Test generation with inputs, outputs, and quiescence\n", "abstract": " This paper studies testing based on labelled transition systems, using the assumption that implementations communicate with their environment via inputs and outputs. Such implementations are formalized by restricting the class of transition systems to those systems that can always accept input actions, as in input/output automata. Implementation relations, formalizing the notion of conformance of these implementations with respect to labelled transition system specifications, are defined analogous to the theory of testing equivalence and preorder. A test generation algorithm is given, which is proved to produce a sound and exhaustive test suite from a specification, i.e., a test suite that fully characterizes the set of correct implementations.", "num_citations": "190\n", "authors": ["1132"]}
{"title": "Formal test automation: A simple experiment\n", "abstract": " In this paper we study the automation of test derivation and execution in the area of conformance testing. The test scenarios are derived from multiple specification languages: LOTOS, Promela and SDL. A central theme of this study is the usability of batch-oriented and on-the-fly testing approaches. To facilitate the derivation from multiple formal description techniques and the different test execution approaches, an open, generic environment called TorX is introduced. TorX enables plugging in existing or dedicated tools. We have carried out several experiments in testing a conference protocol, resulting in requirements on automated testing and benchmarking criteria.", "num_citations": "178\n", "authors": ["1132"]}
{"title": "Automatic testing with formal methods\n", "abstract": " The use of formal system specifications makes it possible to automate the derivation of test cases from specifications. This allows to automate the whole testing process, not only the test execution part of it. This paper presents the state of the art and future perspectives in testing based on formal methods. The theory of formal testing is briefly outlined, a test tool is presented which automates both test derivation and test execution on-the-fly, and an application case study is discussed.", "num_citations": "149\n", "authors": ["1132"]}
{"title": "On-the-fly conformance testing using SPIN\n", "abstract": " In this paper we report on the construction of a tool for conformance testing based on Spin. The Spin tool has been adapted such that it can derive the building blocks for constructing test cases, called test primitives, from systems described in Promela. The test primitives support the on-the-fly conformance testing process. Traditional derivation of tests from formal specifications suffers from the state-space explosion problem. Spin is one of the most advanced model checkers with respect to handling large state spaces. This advantage of Spin has been used for the derivation of test primitives from a Promela description. To reduce the state space, we introduce the on-the-fly testing framework. One of the components within this framework is the Primer. The Primer is responsible for deriving test primitives from a model of a system according to a well-defined and complete testing theory. Algorithms are presented\u00a0\u2026", "num_citations": "142\n", "authors": ["1132"]}
{"title": "Gast: Generic automated software testing\n", "abstract": " Software testing is a labor-intensive, and hence expensive, yet heavily used technique to control quality. In this paper we introduce Gast, a fully automatic test tool. Properties about functions and datatypes can be expressed in first order logic. Gast automatically and systematically generates appropriate test data, evaluates the property for these values, and analyzes the test results. This makes it easier and cheaper to test software components. The distinguishing property of our system is that the test data are generated in a systematic and generic way using generic programming techniques. This implies that there is no need for the user to indicate how data should be generated. Moreover, duplicated tests are avoided, and for finite domains Gast is able to prove a property by testing it for all possible values. As an important side-effect, it also encourages stating formal properties of the software.", "num_citations": "136\n", "authors": ["1132"]}
{"title": "A symbolic framework for model-based testing\n", "abstract": " The starting point for Model-Based Testing is an implementation relation that formally defines when a formal model representing the System Under Test conforms to a formal model constituting its specification. An implementation relation for the formalism of Labelled Transition Systems is ioco. For ioco several test generation algorithms and test tools have been built. In this paper we define a framework for the symbolic implementation relation sioco which lifts ioco to Symbolic Transition Systems. These are transition systems with an explicit notion of data and data-dependent control flow. The introduction of symbolism avoids the state-space explosion during test generation, and it preserves the information present in data definitions and constraints for use during the test selection process. We show the soundness and completeness of the symbolic notions w.r.t.\u00a0their underlying Labelled Transition Systems\u00a0\u2026", "num_citations": "131\n", "authors": ["1132"]}
{"title": "A formal approach to conformance testing\n", "abstract": " CiNii \u8ad6\u6587 - Formal Approach to Conformance Testing CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf [\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 Formal Approach to Conformance Testing BRINKSMA E. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 BRINKSMA E. \u53ce\u9332\u520a\u884c\u7269 Proc. Int. Workshop on Protocol Test Systems Proc. Int. Workshop on Protocol Test Systems, 311-325, 1989 North-Holland \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u30c7\u30fc\u30bf\u3092\u542b\u3080LOTOS\u8a18\u8ff0\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8 \u7cfb\u5217\u306e\u81ea\u52d5\u751f\u6210\u306e\u4e00\u624b\u6cd5 \u674e \u6e58\u6771 , \u6771\u91ce \u8f1d\u592b , \u8c37\u53e3 \u5065\u4e00 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u8ad6\u6587\u8a8c. BI, \u901a\u4fe1I-\u60c5\u5831 \u901a\u4fe1\u30b7\u30b9\u30c6\u30e0\u30fb\u7406\u8ad6 = The transactions of the Institute of Electronics, Information and Communication Engineers 75(11), 734-743, 1992-11-25 \u53c2\u8003\u6587\u732e14\u4ef6 \u88ab\u5f15\u7528\u6587\u732e6\u4ef6 Tweet \u5404\u7a2e\u2026", "num_citations": "96\n", "authors": ["1132"]}
{"title": "On conformance testing for timed systems\n", "abstract": " Conformance testing for labeled transition systems starts with defining when an implementation conforms to its specification. One of the formal theories for model-based testing uses the implementation relation ioco for this purpose. A peculiar aspect of ioco is to consider the absence of outputs as an observable action, named quiescence. Recently a number of real-time extensions of ioco have been proposed in the literature. Quiescence and the observation of arbitrary delays are issues when defining such extensions. We present two new timed implementation relations and show their relation with existing ones. Based on these new definitions and using several examples, we show the subtle differences, and the consequences that small modifications in the definitions can have on the resulting relations. Moreover, we present conditions under which some of these implementation relations coincide. The\u00a0\u2026", "num_citations": "86\n", "authors": ["1132"]}
{"title": "Towards formal test purposes\n", "abstract": " This paper proposes a framework to formalize test purposes. It introduces the notion of exhibition and the concept of observation objectives. Observation objectives are related to test purposes, and are used for test selection. The framework gives means for reasoning about observation objectives, test suites and test results based on observation objectives. We instantiate the presented framework with the ioco conformance test theory and present an algorithm to derive an e-complete and sound test suite. Finally, we discuss some ideas on how to put observation objectives into practice.", "num_citations": "72\n", "authors": ["1132"]}
{"title": "Model-based testing and some steps towards test-based modelling\n", "abstract": " Model-based testing is one of the promising technologies to increase the efficiency and effectiveness of software testing. In model-based testing, a model specifies the required behaviour of a system, and test cases are algorithmically generated from this model. Obtaining a valid model, however, is often difficult if the system is complex, contains legacy or third-party components, or if documentation is incomplete. Test-based modelling, also called automata learning, turns model-based testing around: it aims at automatically generating a model from test observations. This paper first gives an overview of formal, model-based testing in general, and of model-based testing for labelled transition system models in particular. Then the practice of model-based testing, the difficulty of obtaining models, and the role of learning are discussed. It is shown that model-based testing and learning are strongly related, and\u00a0\u2026", "num_citations": "67\n", "authors": ["1132"]}
{"title": "Towards model-based testing of web services\n", "abstract": " Complex interactions between Web Services involve coordinated sequences of operations. Clients of the provided services must be aware of the underlying coordination protocol to smoothly participate in such a coordinated setup. In this paper we discuss on a running example how such protocols may also serve as the input for Model-Based Testing of Web Services. We propose to use Symbolic Transition Systems and the rich underlying testing theory to approach modelling and testing the coordination. We further indicate where theoretical and technical gaps exist and point to several research issues.", "num_citations": "67\n", "authors": ["1132"]}
{"title": "Refusal testing for classes of transition systems with inputs and outputs\n", "abstract": " This paper presents a testing theory that is parameterised with assumptions about the way implementations communicate with their environment. In this way some existing testing theories, such as refusal testing for labelled transition systems and (repetitive) quiescence testing for I/O automata, can be unified in a single framework. Starting point is the theory of refusal testing. We apply this theory to classes of implementations which communicate with their environment via clearly distinguishable input and output actions. These classes are induced by making assumptions about the geographical distribution of the points of control and observation (PCO\u2019s) and about the way input actions of implementations are enabled. For specific instances of these classes our theory collapses with some well-known ones. For all these classes a single test generation algorithm is presented that is able to derive sound and\u00a0\u2026", "num_citations": "62\n", "authors": ["1132"]}
{"title": "Software engineering with formal methods: The development of a storm surge barrier control system revisiting seven myths of formal methods\n", "abstract": " This paper discusses the use of formal methods in the development of the control system for the Maeslant Kering. The Maeslant Kering is the movable dam which has to protect Rotterdam from floodings while, at (almost) the same time, not restricting ship traffic to the port of Rotterdam. The control system, called BOS, completely autonomously decides about closing and opening of the barrier and, when necessary, also performs these tasks without human intervention. BOS is a safety-critical software system of the highest Safety Integrity Level according to IEC 61508. One of the reliability increasing techniques used during its development is formal methods. This paper reports experiences obtained from using formal methods in the development of BOS. These experiences are presented in the context of Hall's famous \u201cSeven Myths of Formal Methods\u201d.", "num_citations": "55\n", "authors": ["1132"]}
{"title": "A framework for test selection\n", "abstract": " A Framework for Test Selection | Proceedings of the IFIP WG6.1 International Symposium on Protocol Specification, Testing and Verification XI ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of the IFIP WG6.International Symposium on Protocol Specification, Testing and Verification XIA Framework for Test Selection ARTICLE A Framework for Test Selection Share on Authors: Ed Brinksma profile image Ed Brinksma View Profile , Jan Tretmans profile image Jan Tretmans View Profile , Louis Verhaard profile image Louis Verhaard View Profile Authors Info & Affiliations Publication: Proceedings of the IFIP WG6.\u2026", "num_citations": "52\n", "authors": ["1132"]}
{"title": "On asynchronous testing\n", "abstract": " On asynchronous testing \u2014 University of Twente Research Information Skip to main navigation Skip to search Skip to main content University of Twente Research Information Logo Home Profiles Research Units Research Output Datasets Activities Prizes Press / Media Search by expertise, name or affiliation On asynchronous testing L. Verhaard, J. Tretmans, P. Kars, E. Brinksma Research output: Chapter in Book/Report/Conference proceeding \u203a Chapter \u203a Academic 19 Citations (Scopus) Overview Original language English Title of host publication Protocol Test Systems V Subtitle of host publication Proceedings IFIP TC6/WG6.1 Fifth International Workshop, Montreal, Quebec, Canada, September 28-30, 1992 Editors Gregor von Bochmann, Rachida Dssouli, Anindya Das Publisher North-Holland Publishing Company Pages 55-66 Number of pages 13 ISBN (Print)", "num_citations": "50\n", "authors": ["1132"]}
{"title": "C\u00f4te de Resyste: Automated Model Based Testing\n", "abstract": " Systematic testing is very important for assessing and improving the quality of embedded software. Yet, testing turns out to be expensive, laborious, time-consuming and error-prone. The project C\u00f4te de Resyste has been working since 1998 on methods, techniques and tools for automating specification based testing using formal methods. The main achievement of the project is a test tool, baptized TORX, which integrates automatic test generation, test execution, and test analysis in an on-the-fly manner. On the one hand, TORX is based on well-defined theory, viz. the iocotest theory, which has its roots in the theory of testing-and refusal-equivalences for transition systems. On the other hand, the applicability of TORX has been demonstrated by testing several academic and industrial case studies. This paper summarizes the main results of the project.", "num_citations": "49\n", "authors": ["1132"]}
{"title": "Test selection, trace distance and heuristics\n", "abstract": " Two heuristic principles for test selection are proposed: the reduction heuristic and the cycling heuristic. The first assumes that few outgoing transitions of a state show essentially different behaviour. The second assumes that the probability to detect erroneous behaviour in a loop decreases after each correct execution of the loop behaviour. We formalize these heuristic principles and we define a coverage function which serves as a measure for the error-detecting capability of a test suite. For this purpose we introduce the notion of a marked trace and a distance function on such marked traces.", "num_citations": "45\n", "authors": ["1132"]}
{"title": "Testing labelled transition systems with inputs and outputs\n", "abstract": " Testing Labelled Transition Systems with Inputs and Outputs \u2014 University of Twente Research Information Skip to main navigation Skip to search Skip to main content University of Twente Research Information Logo Home Profiles Research Units Projects Research output Datasets Activities Prizes Press / Media Search by expertise, name or affiliation Testing Labelled Transition Systems with Inputs and Outputs GJ Tretmans Research output: Chapter in Book/Report/Conference proceeding \u203a Conference contribution \u203a Academic \u203a peer-review Overview Original language Undefined Title of host publication Participants Proceedings of the Int. Workshop on Protocol Test Systems VIII --- COST 247 Session Editors A. Cavalli, S. Budkowski Place of Publication Evry, France Publisher Institut National des T\u00e9l\u00e9communications Pages 461-476 Number of pages 16 ISBN (Print) not assigned Publication status Published - 1995 \u2026", "num_citations": "38\n", "authors": ["1132"]}
{"title": "Model-based testing of electronic passports\n", "abstract": " Electronic passports, or e-passports for short, contain a contactless smartcard which stores digitally signed data. To rigorously test e-passports, we developed formal models of the e-passport protocols that enable model-based testing using the TorXakis framework.", "num_citations": "35\n", "authors": ["1132"]}
{"title": "Test case derivation from LOTOS specifications\n", "abstract": " Test Case Derivation from LOTOS Specifications | Proceedings of the IFIP TC/WG6.1 Second International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsFORTE '89Test Case Derivation from LOTOS Specifications ARTICLE Test Case Derivation from LOTOS Specifications Share on Author: Jan Tretmans profile image Jan Tretmans View Profile Authors Info & Affiliations Publication: FORTE '89: Proceedings of the IFIP TC/WG6.Second International Conference on Formal Description Techniques for Distributed Systems \u2026", "num_citations": "35\n", "authors": ["1132"]}
{"title": "Model-based testing of environmental conformance of components\n", "abstract": " In component-based development, the correctness of a system depends on the correctness of the individual components and on their interactions. Model-based testing is a way of checking the correctness of a component by means of executing test cases that are systematically generated from a model of the component. This model should include the behaviour of how the component can be invoked, as well as how the component itself invokes other components. In many situations, however, only a model that specifies how others can use the component, is available. In this paper we present an approach for model-based testing of components where only these available models are used. Test cases for testing whether a component correctly reacts to invocations are generated from this model, whereas the test cases for testing whether a component correctly invokes other components, are generated from the\u00a0\u2026", "num_citations": "33\n", "authors": ["1132"]}
{"title": "A queue model relating synchronous and asynchronous communication\n", "abstract": " The problem of comparing specifications that use asynchronous communication (Estelle, SDL) with specifications that use synchronous communication (LOTOS) is approached by modelling asynchronous communication in the realm of labelled transition systems using a context. A particular context consisting of two queues, one for input and one for output, is investigated. This queue context is modelled by a queue operator on labelled transition systems. A new equivalence, queue equivalence, is introduced as testing equivalence in a queue context. It turns out that this equivalence can be characterized by sets of traces, instead of by failure pairs, as in the case of conventional testing equivalence on labelled transition systems. A few non-equivalence relations for queue contexts are introduced that can serve as implementation relations. They are related to the implementation relations of failure preorder, trace\u00a0\u2026", "num_citations": "33\n", "authors": ["1132"]}
{"title": "Modeling and verifying a bounded retransmission protocol\n", "abstract": " This paper concerns the transfer of les via a lossy communication channel. It formally speci es this le transfer service in a property-oriented way and investigates| using two di erent techniques| whether a given bounded retransmission protocol conforms to this service. This protocol is based on the well-known alternating bit protocol but allows for a bounded number of retransmission of a frame, ie, part of a le, only. So, eventual delivery is not guaranteed and the protocol may abort the le transfer. We investigate to what extent real-time aspects are important to guarantee the protocol's correctness and use Spin and Uppaal model checking for our purpose. A comparison between these approaches is made and our experiences are reported.", "num_citations": "31\n", "authors": ["1132"]}
{"title": "Learning and testing the bounded retransmission protocol\n", "abstract": " Using a well-known industrial case study from the verification literature, the bounded retransmission protocol, we show how active learning can be used to establish the correctness of protocol implementation I relative to a given reference implementation R. Using active learning, we learn a model M_R of reference implementation R, which serves as input for a model based testing tool that checks conformance of implementation I to M_R. In addition, we also explore an alternative approach in which we learn a model M_I of implementation I, which is compared to model M_R using an equivalence checker. Our work uses a unique combination of software tools for model construction (Uppaal), active learning (LearnLib, Tomte), model-based testing (JTorX, TorXakis) and verification (CADP, MRMC). We show how these tools can be used for learning these models, analyzing the obtained results, and improving the learning performance.", "num_citations": "30\n", "authors": ["1132"]}
{"title": "Testing techniques\n", "abstract": " Software testing Software quality is an issue that currently attracts a lot of attention. Software invades everywhere in our society and life and we are increasingly dependent on it. Moreover, the complexity of software is still growing. Consequently, the quality, functional correctness and reliability of software is an issue of increasing importance and growing concern. Systematic testing of software plays an important r\u00f4le in the quest for improved quality.Software testing involves experimentally and systematically checking the correctness of software. It is performed by applying test experiments to a software system, by making observations during the execution of the tests, and by subsequently assigning a verdict about the correct functioning of the system. The correctness criterion against which the system is to be tested should be given in some kind of system specification. The specification prescribes what the system has to do and what not, and, consequently, constitutes the basis for any testing activity.", "num_citations": "30\n", "authors": ["1132"]}
{"title": "Formal test automation: The conference protocol with phact\n", "abstract": " We discuss a case study of automatic test generation and test execution based on formal methods. The case is the Conference Protocol, a simple, chatbox-like protocol, for which (formal) specifications and multiple implementations are publicly available and which is also used in other case study experiments. The tool used for test generation and test execution is Phact, the PHilips Automated Conformance Tester. The formal method is (Extented) Finite State Machines which is the input language for Phact. The experiment consists of developing a Finite State Machine specification for the Conference Protocol, generating 82 tests in TTCN with Phact, and executing these tests against 28 different implementations of the Conference Protocol, both correct and erroneous ones. The result is that some erroneous implementations are not detected by the test cases. These results are analysed, the merits of Extented\u00a0\u2026", "num_citations": "30\n", "authors": ["1132"]}
{"title": "An overview of osi conformance testing\n", "abstract": " The development of distributed systems, in which the computer functionality, such as processing functions, information storage, and human interaction, is distributed over different computer systems, raises the need for exchanging information between these systems. To have computer systems communicate successfully, the communication must occur according to well-defined rules. A protocol describes the rules with which computer systems have to comply in their communication with other computer systems. A protocol entity is that part of a computer system that takes care of the local responsibilities in communicating according to the protocol.To have successful communication among computer systems, also from different manufacturers, many protocols are not developed in isolation, but within groups of manufacturers and users, with the aim of standardizing such protocols. This has led for instance to the development of the OSI Reference Model for Open Systems [ISO84], which serves as a framework for a set of standards that enable computer systems to communicate. However, to assure successful communication it is not sufficient to specify and standardize communication protocols. Implementations of these protocol standards are required for which it must be ascertained that these implementations really behave according to these standards protocol specifications, ie, conform to these standards. One way to do this is by testing these protocol implementations. This activity is known as protocol confor-", "num_citations": "29\n", "authors": ["1132"]}
{"title": "Factorized test generation for multi-input/output transition systems\n", "abstract": " In this paper we present factorized test generation techniques that can be used to generate test cases from a specification that is modelled as a labelled transition system. The test generation techniques are able to construct a sound (and complete) test suite for correctness criterion mioco                                            F                  [5] by splitting up this correctness criterion into many simpler correctness criteria, and by generating tests for these simpler correctness criteria. By isolating the relevant part of the specification that is needed to generate tests for each of these simpler correctness criteria and using this part to generate tests from, test generation can be done more efficiently. These techniques are intended to keep the generation of tests from a specification feasible and manageable.", "num_citations": "27\n", "authors": ["1132"]}
{"title": "Situation Awareness with Systems of Systems\n", "abstract": " This book discusses various aspects, challenges, and solutions for developing systems-of-systems for situation awareness, using applications in the domain of maritime safety and security. Topics include advanced, multi-objective visualization methods for situation awareness, stochastic outlier selection, rule-based anomaly detection, an ontology-based event model for semantic reasoning, new methods for semi-automatic generation of adapters bridging communication gaps, security policies for systems-of-systems, trust assessment, and methods to deal with the dynamics of systems-of-systems in run-time monitoring, testing, and diagnosis. Architectural considerations for designing information-centric systems-of-systems such as situation awareness systems, and an integrated demonstrator implementing many of the investigated aspects, complete the book.", "num_citations": "23\n", "authors": ["1132"]}
{"title": "Developments in testing transition systems\n", "abstract": " This paper discusses some of the developments in the theory of test generation from labelled transition systems over the last decade, and puts these developments in a historical perspective. These developments are driven by the need to make testing theory applicable to realistic systems. We illustrate the developments that have taken place in a chronological order, and we discuss the main motivations that led to these developments. In this paper the claim is made that testing theory (slowly) narrows the gap with testing practice, and that progress is made in designing test generation algorithms that can be used in realistic situations while maintaining a sound theoretical basis.", "num_citations": "23\n", "authors": ["1132"]}
{"title": "C\u00f4te de Resyste in PROGRESS\n", "abstract": " Traditional (manual) testing of software systems is a costly, laborious and error-prone activity. It gets even more complicated nowadays with complex reactive software like embedded system software and communication protocols. Such software is characterized by a high degree of interactivity and concurrency. C\u00f4te de Resyste aims at developing methods and an integrated tool environment to support and, whenever possible, automate the testing process of reactive systems. Contrary to other test tools, this tool environment builds on a sound and well-defined theoretical basis. First results are the implementation of the prototype test tool TorX and its successful application to the Philips\u2019 A/V Link protocol and to the academic Conference protocol case study. These experiments show that test automation, based on formal methods, is feasible and beneficial. Current work concentrates on improving TorX, on developing methods for effective selection of test sets and on generic test execution environments. A major part of the project is devoted to industrial case studies which are executed in close cooperation with Philips, Lucent Technologies and Interpay.", "num_citations": "22\n", "authors": ["1132"]}
{"title": "Testing theory in practice: A simple experiment\n", "abstract": " In this paper we discuss the experiences gainedin conducting a simple testing experiment. The goal of this experiment is to apply the abstract, formal testing framework# Formal Methods in Conformance Testing\"# 8# in a practical setting, and to indicate the critical aspects in its application to realistic testing situations. For that purpose a formal description of the system under test# SUT# is made from which tests are systematically derived. These tests are interpreted and executedbya tester against concrete implementations, thereby giving an indication about the correctness of these implementations.", "num_citations": "21\n", "authors": ["1132"]}
{"title": "Formal methods in conformance testing: A probabilistic refinement\n", "abstract": " This paper refines the framework of \u2018Formal Methods in Conformance Testing\u2019 by introducing probabilities for concepts which have a stochastic nature. Test execution is refined into test runs, where each test run is considered as a stochastic process that returns a possible observation with a certain probability. This implies that not every possible observation that could be made, will actually be made. The development process of an implementation from a specification is also viewed as a stochastic process that may result in a specific implementation with a certain probability. Together with a weight assignment on implementations this introduces a valuation measure on implementations. The test run probabilities and the valuation measures are integrated in generalized definitions of soundness and exhaustiveness, which can be used to compare test suites with respect to their ability to accept correct, and to\u00a0\u2026", "num_citations": "20\n", "authors": ["1132"]}
{"title": "HIPPO: a LOTOS simulator\n", "abstract": " CiNii \u8ad6\u6587 - HIPPO:A LOTOS Simulator CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7 \u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3\u696d\u52d9\u306e\u518d\u958b\u306b\u3064\u3044\u3066 HIPPO:A LOTOS Simulator TRETMANS J. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 TRETMANS J. \u53ce\u9332\u520a\u884c\u7269 The Formal Description Technique LOTOS The Formal Description Technique LOTOS, 391-396, 1989 North-Holland \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 LOTOS\u306b\u3088\u308b\u4ed5\u69d8\u304b\u3089\u306e\u81ea\u52d5\u5b9f\u88c5\u65b9\u5f0f \u91ce\u6751 \u771e\u543e , \u7027\u585a \u5b5d\u5fd7 , \u9577\u8c37\u5ddd \u4ea8 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u8ad6\u6587\u8a8c. DI, \u60c5\u5831\u30fb\u30b7\u30b9\u30c6\u30e0, I-\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf = The transactions of the Institute of Electronics, Information and Communication Engineers 76(11), 575-584, 1993-11-25 \u53c2\u8003\u6587\u732e18\u4ef6 \u88ab\u5f15\u7528\u6587\u732e2\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) \u2026", "num_citations": "20\n", "authors": ["1132"]}
{"title": "Approximate active learning of nondeterministic input output transition systems\n", "abstract": " Constructing a model of a system for model-based testing, simulation, or model checking can be cumbersome for existing, third party, or legacy components. Active automata learning, a form of black-box reverse engineering, and in particular Angluin\u2019s L* algorithm, support the automatic inference of a model from a System Under Learning (SUL), through observations and tests. Most of the algorithms based on L*, however, deal with complete learning of deterministic models, thus being unable to cope with nondeterministic SULs, and always learning a complete and correct model as they are based on equivalence between the SUL and the model. We present an adaptation of Angluin\u2019s algorithm for active learning of nondeterministic, input-enabled, input-output transition systems. It enables dealing with nondeterministic SULs, and it allows to construct partial, or approximate models, by expressing the relation between the SUL and the learned model as a refinement relation, not necessarily an equivalence. Thus, we can reason about learned models being more, or less precise than others. Approximate learning has benefits in model-based regression testing: we need not to wait until a complete model has been learned; with an approximate model ioco-based regression testing can start.", "num_citations": "19\n", "authors": ["1132"]}
{"title": "On-the-fly formal testing of a smart card applet\n", "abstract": " This paper presents a case study on the use of formal methods in specification-based, black-box testing of a smart card applet. The system under test is a simple electronic purse application running on a Java Card platform. The specification of the applet is given as a Statechart model, and transformed into a functional form to serve as the input for the on-the-fly test generation, -execution, and -analysis tool GAST. We show that automated, formal, specification-based testing of smart card applets is of high value, and that errors can be detected using this model-based testing.", "num_citations": "19\n", "authors": ["1132"]}
{"title": "Lessons from the application of formal methods to the design of a storm surge barrier control system\n", "abstract": " We describe the experience of the industrial application of formal methods in the development of a mission critical system. We give a description of the system that was to be developed and the methods that were employed to realize the high level of reliability that was required. In this paper we will describe which formal techniques were used, how these techniques were used, the influence of formal methods on the development process and recommendations for managing the use of formal methods.", "num_citations": "19\n", "authors": ["1132"]}
{"title": "Protocol conformance testing: A formal perspective on ISO IS-9646\n", "abstract": " Protocol Conformance Testing | Proceedings of the IFIP TC6/WG6.1 Fourth International Workshop on Protocol Test Systems IV ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of the IFIP TC6/WG6.Fourth International Workshop on Protocol Test Systems IVProtocol Conformance Testing: A Formal Perspective on ISO IS-9646 Article Protocol Conformance Testing: A Formal Perspective on ISO IS-9646 Share on Authors: Jan Tretmans View Profile , Pim Kars View Profile , Ed Brinksma View Profile Authors Info & Affiliations Publication: Proceedings of the IFIP TC6/WG6.Fourth International Workshop on Protocol \u2026", "num_citations": "19\n", "authors": ["1132"]}
{"title": "Active learning of nondeterministic systems from an ioco perspective\n", "abstract": " Model-based testing allows the creation of test cases from a model of the system under test. Often, such models are difficult to obtain, or even not available. Automata learning helps in inferring the model of a system by observing its behaviour. The model can be employed for many purposes, such as testing other implementations, regression testing, or model checking. We present an algorithm for active learning of nondeterministic, input-enabled, labelled transition systems, based on the well known Angluin\u2019s L\u2009\u22c6\u2009 algorithm. Under some assumptions, for dealing with nondeterminism, input-enabledness and equivalence checking, we prove that the algorithm produces a model whose behaviour is equivalent to the one under learning. We define new properties for the structure used in the algorithm, derived from the semantics of labelled transition systems. Such properties help the learning, by avoiding to\u00a0\u2026", "num_citations": "17\n", "authors": ["1132"]}
{"title": "Specification based testing with formal methods: From theory via tools to applications\n", "abstract": " Testing starts during the requirements phase The programmer shall not be the tester A test case specifies the test inputs and the expected outputs Test cases shall also cover invalid and unexpected inputs Test cases shall test that the program does what it should do and that it does not do what it should not do Test cases shall be recorded for reuse A test is successful when it detects an error (but the project manager thinks differently!) No risk, no test", "num_citations": "16\n", "authors": ["1132"]}
{"title": "Testing and formal methods-BOS project case study\n", "abstract": " In this paper a case study is presented on the use of formal methods in the testing of a realistic (mission critical) system. The top level design was written in the formal language Promela, which made it possible to simulate a model of the system before it was built. Design flaws that otherwise only appear in integration testing were now visible before further design continued. Once a sound framework was established a more detailed description in the formal language Z was made. This design method made it possible that independent testers could perform high level structural tests on the individual modules, thereby providing a more detailed quality statement of the modules. These tests were systematically derived from de formal specifications. The increased effort in developing the formal description paid off in integration and system testing. In these phases no errors were found that lead to high level design modifications.", "num_citations": "15\n", "authors": ["1132"]}
{"title": "Tangram: model-based integration and testing of complex high-tech systems\n", "abstract": " Tangram: Model-Based Integration and Testing of Complex High-Tech Systems Radboud Repository Radboud Repository \u2192 Collections Radboud University \u2192 Academic publications \u2192 View Item Fulltext present in this item Find Full text Thumbnail Fulltext: 36543.pdf Format: PDF Description: publisher's version Embargo: until further notice Title: Tangram: Model-Based Integration and Testing of Complex High-Tech Systems Author(s): Tretmans, J. Publication year: 2007 Publisher: Eindhoven, The Netherlands : Embedded Systems Institute ISBN: 9078679026 Number of Pages: 231 p. Publication type: Book editorial Please use this identifier to cite or link to this item : https://hdl.handle.net/2066/36543 https://hdl.handle.net/2066/36543 Display more details Upload Full Text Subject: Informatics for Technical Applications Software Technology Organization: Informatics for Technical Applications This item appears in the \u2026", "num_citations": "12\n", "authors": ["1132"]}
{"title": "Integrating verification, testing, and learning for cryptographic protocols\n", "abstract": " The verification of cryptographic protocol specifications is an active research topic and has received much attention from the formal verification community. By contrast, the black-box testing of actual implementations of protocols, which is, arguably, as important as verification for ensuring the correct functioning of protocols in the \u201creal\u201d world, is little studied. We propose an approach for checking secrecy and authenticity properties not only on protocol specifications, but also on black-box implementations. The approach is compositional and integrates ideas from verification, testing, and learning. It is illustrated on the Basic Access Control protocol implemented in biometric passports.", "num_citations": "11\n", "authors": ["1132"]}
{"title": "04371 Abstracts Collection--Perspectives of Model-Based Testing\n", "abstract": " From 05.09. 04 to 10.09. 04, the Dagstuhl Seminar 04371``Perspectives of Model-Based Testing''was held in the International Conference and Research Center (IBFI), Schloss Dagstuhl. During the seminar, several participants presented their current research, and ongoing work and open problems were discussed. Abstracts of the presentations given during the seminar as well as abstracts of seminar results and ideas are put together in this paper. The first section describes the seminar topics and goals in general. Links to extended abstracts or full papers are provided, if available.", "num_citations": "10\n", "authors": ["1132"]}
{"title": "Towards quality of model-based testing in the ioco framework\n", "abstract": " Since testing is an expensive process, automatic testing with smart test selection has been proposed as a way to reduce such expense. Such a selection of tests can be done using specification coverage functions. Model-based ioco theory, however, uses test suites which are not suitable for easy computation of coverage because of interdependence of their test cases. We define a new test suite that overcomes such problems. Using such a test suite we cast the test selection problem to a specification selection problem that aims at transforming the model to which a system under test must conform, in order to reduce the set of test cases. We give a canonical representation for the newly defined test suite.", "num_citations": "9\n", "authors": ["1132"]}
{"title": "Introduction: Situation Awareness, Systems of Systems, and Maritime Safety and Security\n", "abstract": " This book presents and discusses various challenges and solutions for developing systems-of-systems for attaining situation awareness, with applications in the domain of maritime safety and security. This chapter introduces the book, describes the Dutch research project Poseidon from which it resulted, provides an overview of the chapters it contains, and introduces the core topics: situation awareness, systems-of-systems, and maritime safety and security.", "num_citations": "9\n", "authors": ["1132"]}
{"title": "On the Existence of Practical Testers\n", "abstract": " Model-based testing is one of the promising technologies to increase the efficiency and effectiveness of software testing. This paper outlines the evolution of model-based testing based on labelled transition systems, from purely theoretical developments in the eighties to industrially applicable tools now: from canonical testers to practical testers. We present TorXakis as an example of a practical model-based tester, founded in the testing theory for labelled transition systems, and now being introduced in the daily practice of testing.", "num_citations": "8\n", "authors": ["1132"]}
{"title": "Perspectives of Model-Based Testing: summary\n", "abstract": " The aim of the seminar Perspectives of Model-Based Testing was to bring together researchers and practitioners from industry and academia to discuss the state of the art in theory, methods, tools, applications, and industrialization of model-based testing, and to identify the important open issues and challenges.", "num_citations": "7\n", "authors": ["1132"]}
{"title": "04371 Summary--Perspectives of Model-Based Testing\n", "abstract": " The aim of the seminar Perspectives of Model-Based Testing was to bring together researchers and practitioners from industry and academia to discuss the state of the art in theory, methods, tools, applications, and industrialization of model-based testing, and to identify the important open issues and challenges.", "num_citations": "7\n", "authors": ["1132"]}
{"title": "Repetitive Quiescence in Implementation and Testing\n", "abstract": " This paper studies implementation relations and testing based on labelled transition sys-tems, using the assumption that implementations communicate with their environment via inputs and outputs. Such implementations are formalized by restricting the class of transition systems to those systems that can always accept input actions. Implementation relations, which formalize the notion of correctness of these implementations with respect to labelled transition system specifications, are defined analogous to the theories of testing equivalence and preorder, and refusal testing. A test generation algorithm is given, which is proved to produce a sound and exhaustive test suite from a specification, ie, a test suite that fully characterizes the set of correct implementations.", "num_citations": "7\n", "authors": ["1132"]}
{"title": "Model-Based Testing 2010: Short Abstracts\n", "abstract": " This article contains three short abstracts of presentations given at the Sixth Workshop on Model-Based Testing (MBT 2010) on March 21, 2010 in Paphos, Cyprus: Theory of Model-Based Testing and How ioco Goes eco by Jan Tretmans (invited presentation), Model-Centric Testing by Florian Prester and Specification Model Based Testing in the Avionic Domain \u2013 Current Status and Future Directions by Philipp Helle and Wladimir Schamai.", "num_citations": "6\n", "authors": ["1132"]}
{"title": "Software Engineering with Formal Methods: The Development of a Storm Surge Barrier Control System: Seven Myths of Formal Methods Revisited\n", "abstract": " Software Engineering with Formal Methods: The Development of a Storm Surge Barrier Control System: Seven Myths of Formal Methods Revisited \u2014 University of Twente Research Information Skip to main navigation Skip to search Skip to main content University of Twente Research Information Logo Home Profiles Research Units Research output Datasets Activities Prizes Press / Media Search by expertise, name or affiliation Software Engineering with Formal Methods: The Development of a Storm Surge Barrier Control System: Seven Myths of Formal Methods Revisited GJ Tretmans, Klaas Wijbrans, Michel Chaudron Research output: Chapter in Book/Report/Conference proceeding \u203a Conference contribution \u203a Academic \u203a peer-review 14 Downloads (Pure) Overview Original language English Title of host publication Fourth International ERCIM Workshop on Formal Methods for Industrial Critical Systems (FMICS'99) \u2026", "num_citations": "6\n", "authors": ["1132"]}
{"title": "Report on the Standardization Project\" Formal Methods in Conformance Testing\"\n", "abstract": " This paper presents the latest developments in the \u201cFormal Methods in Conformance Testing\u201d (FMCT) project of ISO and ITU-T. The project has been initiated to study the role of formal description techniques in the conformance testing process. The goal is to develop a standard that defines the meaning of conformance in the context of formal description techniques. We give an account of the current status of FMCT in the standardization process as well as an overview of the technical status of the proposed standard. Moreover, we indicate some of its strong and weak points, and we give some directions for future work on FMCT.", "num_citations": "6\n", "authors": ["1132"]}
{"title": "Model-based testing of industrial transformational systems\n", "abstract": " We present an approach for modeling and testing transformational systems in an industrial context. The systems are modeled as a set of boolean formulas. Each formula is called a clause and is an expression for an expected output value. To manage complexities of the models, we employ a modeling trick for handling dependencies, by using some output values from the system under test to verify other output values. To avoid circular dependencies, the clauses are arranged in a hierarchy, where each clause depends on the outputs of its children. This modeling trick enables us to model and test complex systems, using relatively simple models. Pairwise testing is used for test case generation. This manages the number of test cases for complex systems. The approach is developed based on a case study for testing printer controllers in professional printers at Oc\u00e9. The model-based testing approach results in\u00a0\u2026", "num_citations": "5\n", "authors": ["1132"]}
{"title": "C\u00f4te de Resyste Automatic model-based testing of communication protocols\n", "abstract": " Software quality is an issue that currently attracts a lot of attention. Software invades everywhere in our society and life and we are increasingly dependent on it. Moreover, the complexity of software is still growing. This also applies to software in mobile systems. Consequently, the quality, functional correctness and reliability of software is an issue of increasing importance and growing concern. Systematic testing of software plays an important r\u00f4le in the quest for improved quality. Despite its importance, testing is often an under-exposed phase in the software development process. Moreover, testing turns out to be expensive, difficult and problematic. One source of problems can be an imprecise or ambiguous specification, so that a good basis for testing is missing. Another reason is the usually manual and laborious testing process without effective automation, so that testing is error-prone and consumes many resources. Furthermore, quite often the testing phase gets jammed between moving code delivery dates and fixed custom delivery dates. On the other hand, research and development in testing have been rather immature. Testing methodology is mostly governed by heuristics. Fortunately, this situation is gradually improving. Triggered by the quest for improved quality and imposed by increased product liability, testing is considered more important and treated more seriously. Being a software tester is becoming a true profession.", "num_citations": "5\n", "authors": ["1132"]}
{"title": "A case study in formal methods: specification and validation of the OM/RR protocol\n", "abstract": " This paper reports on the results of the application of formal methods in the development of an industrial, mission-critical system, called the Operator Support System. A critical communication protocol of this system, the OM/RR Protocol, and its corresponding service were formalised using the formal specification language Lotos. The resulting specifications have been validated using the tool set Lite and models of the specifications, obtained by making abstractions, have been verified using the tool Eucalyptus. Whereas the use of formal methods is usually motivated by their ability to allow for unambiguous and precise system descriptions amenable to mathematical reasoning, it turned out that in this project most benefits were obtained by the sheer process of formalising the informal protocol description, revealing many omissions and ambiguities. The results and experiences obtained during formalisation, validation, abstraction and verification are discussed on a non-formal basis in this paper.", "num_citations": "5\n", "authors": ["1132"]}
{"title": "Matching implementations to specifications: The corner cases of ioco\n", "abstract": " A well-known conformance relation for model-based testing is ioco. A conformance relation expresses when an implementation is correct with respect to a specification. Unlike many other conformance and refinement relations, ioco has different domains for implementations and for specifications. Consequently, ioco is neither reflexive nor transitive, implying that a specification does not implement itself, and that specifications cannot be compared for refinement. In this paper, we investigate how we can compensate for the lack of reflexivity and transitivity. We show that (i) given a specification, we can construct in a standard way a canonical conforming implementation that is very'close'to the specification; and (ii) a refinement preorder on specification models can be defined such that a refined model allows less ioco-conforming implementations. We give declarative and constructive definitions of both, we give\u00a0\u2026", "num_citations": "3\n", "authors": ["1132"]}
{"title": "Coverage-Based Testing with Symbolic Transition Systems\n", "abstract": " We provide a model-based testing approach for systems comprising both state-transition based control flow, and data elements such as variables and data-dependent transitions. We propose test generation and execution, based on model-coverage: we generate test cases that aim to reach all transitions of the model. To obtain a test case reaching a certain transition, we need to combine reachability in the control flow, and satisfiability of the data elements of the model. Concrete values for data parameters are generated on-the-fly, i.e., during test execution, such that received outputs from the system can be taken into account for the inputs later provided in test execution. Due to undecidability of the satisfiability problem, SMT solvers may return result \u2018unknown\u2019. Our algorithm deals with this explicitly. We implemented our method in Maude combined with Z3, and use this to demonstrate the applicability of\u00a0\u2026", "num_citations": "2\n", "authors": ["1132"]}
{"title": "Software engineering with formal methods: the development of a storm surge barrier control system\n", "abstract": " This paper discusses the use of formal methods in the development of the control system for the Maeslant Kering. The Maeslant Kering is the movable dam which has to protect Rotterdam from floodings while, at (almost) the same time, not restricting ship traffic to the port of Rotterdam. The control system, called Bos, completely autonomously decides about closing and opening of the barrier and, when necessary, also performs these tasks without human intervention. Bos is a safetycritical software system of the highest Safety Integrity Level according to IEC 61508. One of the reliability increasing techniques used during its development is formal methods. This paper reports experiences obtained from using formal methods in the development of Bos. These experiences are presented in the context of Hall\u2019s famous \u201cSeven Myths of Formal Methods\u201d.", "num_citations": "2\n", "authors": ["1132"]}
{"title": "Quality of information systems\n", "abstract": " Objective:\u2666 Developing reliable software, within budget, and in time, with predictable quality, in a controlled way", "num_citations": "2\n", "authors": ["1132"]}
{"title": "Model-based testing of network security protocols in Java card applications\n", "abstract": " This research presents a combination of verification and conformance testing techniques for systems that implement network security protocols. We investigate model-based methods for detecting vulnerabilities in network security protocols and testing for correct behaviour of Java Card applications in which network security protocols are implemented. The research assumes an open environment which is insecure in which adversaries might try to gain access to restricted resources.We present techniques for model-based testing of network security protocols in Java Card applications and analyse the use and effectiveness of verification in addition to conformance testing in enhancing the quality of a software product. We analyse the use of HLPSL in modelling Kerberos network authentication protocol in an electronic banking (E-Banking) application and also use of promela in modelling behaviour of an electronic passport (E-Passport).", "num_citations": "1\n", "authors": ["1132"]}