{"title": "One implementation of the system for application version tracking and automatic updating\n", "abstract": " ONE IMPLEMENTATION OF THE SYSTEM FOR APPLICATION VERSION TRACKING AND AUTOMATIC UPDATING Okanovi\u0107 Du\u0161an, Vidakovi\u0107 Milan Faculty of Technical Sciences Fru\u0161kogorska 11, Novi Sad Serbia {oki, minja}@uns.ns.ac.yu ABSTRACT This paper presents the implementation of a system aimed at keeping track of application versions (mostly Java applications). The system is used to track where each version of an application is installed. Each application version has its own version tag and appropriate files (executables, libraries, resources, etc.). In this paper the installation of an application version at a certain place is called the edition. This is a three-tier system. Application data, versions and editions are stored in the database. For the middle-tier, EJB 3.0 (Enterprise Java Beans) architecture is used. Entity EJBs have been used for O/R (Object/Relational Mapping) mapping. Session EJBs have \u2026", "num_citations": "10\n", "authors": ["721"]}
{"title": "Domain specific agent-oriented programming language based on the Xtext framework\n", "abstract": " The agent technology represents one of the most consistent approaches to the development of distributed systems. Multiagent middleware XJAF, developed at the University of Novi Sad, presents a runtime environment that supports the execution of software agents. To solve the problem of interoperability, we propose a domain-specific agent language named ALAS, whose main purpose is to support the implementation and execution of agents on heterogenous platforms. To define the structure of the language, a metamodel and a grammar of the ALAS language has been created, in accordance with the requirements and needs of the agents. This paper describes the construction of the compiler and the generation of executable Java code that can be executed in XJAF.", "num_citations": "5\n", "authors": ["721"]}
{"title": "Performance profiling of Java enterprise applications\n", "abstract": " Continuous monitoring of an application under production workload provides more valuable data than information obtained using profilers and debuggers. This paper presents one solution of obtained by integrating the Kieker framework into the JBoss application server. We used this solution for profiling distributed Java EE application deployed on multiple JBoss application servers. The recorded data was analyzed using data mining techniques and R programming language.", "num_citations": "4\n", "authors": ["721"]}