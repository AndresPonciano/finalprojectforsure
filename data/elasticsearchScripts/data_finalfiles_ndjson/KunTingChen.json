{"title": "Network aware load-balancing via parallel VM migration for data centers\n", "abstract": " It becomes a challenge to design an efficient load balancing method via live virtual machine (VM) migration without degrading application performance. Two major performance impacts on hosted applications that run on a VM are the system load balancing degree and the total time till a balanced state is reached. Existing load balancing methods usually ignore the VM migration time overhead. In contrast to sequential migration-based load balancing, this paper proposes using a network-topology aware parallel migration to speed up the load balancing process in a data center. We transform the VM migration-based multi-resource load-balancing problem into a minimum weighted matching problem over a weighted bipartite graph. By obtaining the minimum weighted matching pairs through the Hungarian method, we parallel migrate multiple VMs from overloaded hosts to underutilized hosts to reduce the time it takes\u00a0\u2026", "num_citations": "23\n", "authors": ["960"]}
{"title": "Market-based load balancing for distributed heterogeneous multi-resource servers\n", "abstract": " To cope with rapidly increasing Internet usage nowadays, providing Internet services using multiple servers has become a necessity. To ensure sufficient service quality and server utilization at the same time, effective methods are needed to spread load among servers properly. Existing load balancing methods often assume servers are homogeneous and consider only one type of resource, such as CPU. Such methods suffer from the fact that different requests often demand multiple types of resources with different requirements; trying to balance the usage of only one resource type may induce an inadvertent performance bottleneck, leading to low resource utilization and service quality. To address this problem, we propose a load balancing method based on the concept of distributed market mechanism, where requests are priced with respect to the load of multiple resources on each server. By migrating jobs\u00a0\u2026", "num_citations": "11\n", "authors": ["960"]}
{"title": "DoughNets: visualising networks using torus wrapping\n", "abstract": " We investigate visualisations of networks on a 2-dimensional torus topology, like an opened-up and flattened doughnut. That is, the network is drawn on a rectangular area while\" wrapping\" specific links around the border. Previous work on torus drawings of networks has been mostly theoretical, limited to certain classes of networks, and not evaluated by human readability studies. We offer a simple interactive layout approach applicable to general graphs. We use this to find layouts affording better aesthetics in terms of conventional measures like more equal edge length and fewer crossings. In two controlled user studies we find that torus layout with either additional context or interactive panning provided significant performance improvement (in terms of error and time) over torus layout without either of these improvements, to the point that it is comparable to standard non-torus layout.", "num_citations": "7\n", "authors": ["960"]}
{"title": "It\u2019sa Wrap: Toroidal Wrapping of Network Visualisations Supports Cluster Understanding Tasks\n", "abstract": " We explore network visualisation on a two-dimensional torus topology that continuously wraps when the viewport is panned. That is, links may be \u201cwrapped\u201d across the boundary, allowing additional spreading of node positions to reduce visual clutter. Recent work has investigated such pannable wrapped visualisations, finding them not worse than unwrapped drawings for small networks for path-following tasks. However, they did not evaluate larger networks nor did they consider whether torus-based layout might also better display high-level network structure like clusters. We offer two algorithms for improving toroidal layout that is completely autonomous and automatic panning of the viewport to minimiswe wrapping links. The resulting layouts afford fewer crossings, less stress, and greater cluster separation. In a study of 32 participants comparing performance in cluster understanding tasks, we find that toroidal\u00a0\u2026", "num_citations": "1\n", "authors": ["960"]}