{"title": "The Art of Software Innovation: Eight Practice Areas to Inspire Your Business\n", "abstract": " Imagine that you are the CEO of a software company. You know you compete in an environment that does not permit you to treat innovation as a secondary issue. But how should you manage your software innovation to get the most out of it? This book will provide you with the answer. Software innovation is multifaceted and the approaches used by companies can be very different. The team of authors that wrote this book took the assumption that there is no such thing as a universal software engineering process or innovation process. Some things work well for a certain company, others do not. The book is organized around what the authors call eight fundamental practice areas for innovation with software. Each practice area contains a number of activities that can help companies to master that practice area. It also contains industrial experience reports that illustrate the applicability of these practice areas in software companies and is structured in such a way that you can select and read only those practice areas that are relevant to your company. The book is written with an industrial target audience in mind. Its most important goal is to challenge companies by offering them a framework to become more innovation-driven, rather than engineering-driven. Intrigued? Here you will find details of what you and your company can do to understand, implement, and sustain continuous innovation.", "num_citations": "48\n", "authors": ["1338"]}
{"title": "Choreography in the Embedded Systems Domain: A Systematic Literature Review\n", "abstract": " ContextSoftware companies that develop their products on a basis of service-oriented architecture can expect various improvements as a result of choreography. Current choreography practices, however, are not yet used extensively in the embedded systems domain even though service-oriented architecture is increasingly used in this domain.ObjectiveThe objective of this study is to identify current features of the use of choreography in the embedded systems domain for practitioners and researchers by systematically analysing current developments in the scientific literature, strategies for choreography adaption, choreography specification and execution types, and implicit assumptions about choreography.MethodTo fulfil this objective, a systematic literature review of scientific publications that focus on the use of choreography in the embedded systems domain was carried out. After a systematic screening of 6823\u00a0\u2026", "num_citations": "17\n", "authors": ["1338"]}
{"title": "Managing Constant Flow of Requirements: Screening Challenges in Very Large-Scale Requirements Engineering\n", "abstract": " Market-driven software development has been the dominant context in Very Large-Scale Requirements Engineering (VLSRE) research. This case reveals screening as a VLSRE practice in the development context which has characteristics both of market- and customer-driven software development. Requirements are received as a continuous high rate flow. The exploratory industrial case study was conducted to clarify a current practice to manage the inflow of requirements. As a result, a description of the requirement screening process (RS) is provided and practical management challenges related to the process are analysed. This case study provides insight into the requirement screening practice beyond the market-driven software development domain and thus extends the current VLSRE literature.", "num_citations": "10\n", "authors": ["1338"]}
{"title": "Comparative Influence Evaluation of Middleware Features on Choreography DSL\n", "abstract": " Domain-Specific Languages for service interaction modeling in the embedded systems domain are generally considered insufficiently expressive. To fully represent what is relevant for the developers, service interactions are commonly modeled from two viewpoints: orchestration, which is the individual, and choreography, which is the global viewpoint. In the embedded systems domain, proposed modeling languages are focused on orchestrations, while choreography modeling is neglected. For this reason, we compared two middleware products, one from the automotive and the other from the telecom industry sector, and analyzed variations in the implementation of choreography relevant features. Our analysis shows the influences of implementation variations on language for choreography modeling. Our findings can be useful in developing a domain-specific language that will allow the full representation of choreographies in the embedded systems domain.", "num_citations": "6\n", "authors": ["1338"]}
{"title": "Customized Choreography and Requirement Template Models as a Means for Addressing Software Architects\u2019 Challenges\n", "abstract": " Software architecture designs are useful artifacts; however, their development and maintenance are considered challenging. To better understand the possible causes for these challenges, this article presents a case-study intended to discover and understand software architects\u2019 challenges and to propose domain-specific models to address these challenges. The main results of the case-study include a) the classification of challenges in software architecture design as well as an interpretation of the rationale behind these challenges, and b) two domain-specific models for addressing architects\u2019 challenges through architectural design. The proposed models are expected to facilitate communication between development teams, and to improve the technical aspects of the information content of requirements.", "num_citations": "5\n", "authors": ["1338"]}
{"title": "Choreography Modelling in Embedded Systems Domain: Requirements and Implementation Technologies\n", "abstract": " Software companies that develop embedded systems following the principles of service-oriented architecture can anticipate various benefits from choreography modelling. Current choreography modelling languages, however, have a limited applicability in embedded systems development since they are not expressive enough to capture all the choreography-relevant aspects that are typical in this domain. We tackled this problem by analysing the needs of embedded systems for choreography modelling language. Our analysis was guided by design science and relied on expert interviews, company-specific documents and the relevant literature. The main results of the analysis presented in this paper are a) design requirements addressing the limitations of choreography modelling languages for embedded systems development and b) proposals for modelling language implementation technologies. The feasibility\u00a0\u2026", "num_citations": "4\n", "authors": ["1338"]}
{"title": "Dataflow-based heterogeneous code generator for IoT applications\n", "abstract": " The latest wave of connected digital systems, nowadays called Internet of Things (IoT) promises various gains, especially in terms of significant ease of data access. A large number of different platforms for IoT applications, however, makes their development difficult and time-consuming leading to projects that are failed to be on time, on budget or fully completed. To address the platform heterogeneity, this paper presents the ongoing work on development environment called Orcc-IoT. Orcc-IoT facilitates the development of IoT by combining dataflow modelling language, heterogeneous code generator and the library of ready-made IoT actors. The utilisation of Orcc-IoT in development is expected to increase the quality, and to reduce the development costs and time-to-market of IoT applications.", "num_citations": "2\n", "authors": ["1338"]}
{"title": "Choreography Modelling Language for the Embedded Systems Domain: Empirical Evaluation and Lessons Learned\n", "abstract": " Choreography, as a service-oriented architecture-specific viewpoint, is increasingly present in the embedded systems domain. Existing languages for choreography modelling, however, are insufficiently expressive to capture the complexities that are typical in the embedded systems domain. To address this, a new language for choreography modelling was designed. This study presents an empirical evaluation of the language and findings based on the evaluation. The empirical evaluation was conducted with experts from four software companies and two university research groups. Data were collected using focus group method and analysed with template-based thematic analysis. The findings of the evaluation revealed (a) software testing and protocol development as areas in which the new language can be applied, (b) design requirements for the language improvement, and (c) practical challenges\u00a0\u2026", "num_citations": "2\n", "authors": ["1338"]}