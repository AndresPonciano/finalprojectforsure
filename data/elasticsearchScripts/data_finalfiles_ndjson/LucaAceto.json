{"title": "Structural operational semantics\n", "abstract": " Structural Operational Semantics (SOS) provides a framework to give an operational semantics to programming and specification languages, which, because of its intuitive appeal and flexibility, has found considerable application in the theory of concurrent processes. Even though SOS is widely used in programming language semantics at large, some of its most interesting theoretical developments have taken place within concurrency theory. In particular, SOS has been successfully applied as a formal tool to establish results that hold for whole classes of process description languages. The concept of rule format has played a major role in the development of this general theory of process description languages, and several such formats have been proposed in the research literature. This chapter presents an exposition of existing rule formats, and of the rich body of results that are guaranteed to hold for any\u00a0\u2026", "num_citations": "375\n", "authors": ["1648"]}
{"title": "Reactive systems: modelling, specification and verification\n", "abstract": " Formal methods is the term used to describe the specification and verification of software and software systems using mathematical logic. Various methodologies have been developed and incorporated into software tools. An important subclass is distributed systems. There are many books that look at particular methodologies for such systems, eg CSP, process algebra. This book offers a more balanced introduction for graduate students that describes the various approaches, their strengths and weaknesses, and when they are best used. Milner's CCS and its operational semantics are introduced, together with notions of behavioural equivalence based on bisimulation techniques and with variants of Hennessy-Milner modal logics. Later in the book, the presented theories are extended to take timing issues into account. The book has arisen from various courses taught in Iceland and Denmark and is designed to give students a broad introduction to the area, with exercises throughout.", "num_citations": "365\n", "authors": ["1648"]}
{"title": "Towards action-refinement in process algebras\n", "abstract": " We present a simple process algebra which supports a form of refinement of an action by a process and address the question of an appropriate equivalence relation for it. The main result of the paper is that an adequate equivalence can be defined in a very intuitive manner. In fact we show that it coincides with the timed-equivalence proposed by one of the authors. We also show that it can be characterized equationally.", "num_citations": "171\n", "authors": ["1648"]}
{"title": "Model checking via reachability testing for timed automata\n", "abstract": " In this paper we develop an approach to model-checking for timed automata via reachability testing. As our specification formalism, we consider a dense-time property language with clocks. This property language may be used to express safety and bounded liveness properties of real-time systems. We show how to automatically synthesize, for every formula \u03d5, a test automaton T\u03d5 in such a way that checking whether a system S satisfies the property \u03d5 can be reduced to a reachability question over the system obtained by making T\u03d5 interact with S.", "num_citations": "149\n", "authors": ["1648"]}
{"title": "Timing and causality in process algebra\n", "abstract": " There has been considerable controversy in concurrency theory between the \u2018interleaving\u2019 and \u2018true concurrency\u2019 schools. The former school advocates associating a transition system with a process which captures concurrent execution via the interleaving of occurrences; the latter adopts more complex semantic structures to avoid reducing concurrency to interleaving.               In this paper we show that the two approaches are not irreconcilable. We define a timed process algebra where occurrences are associated with intervals of time, and give it a transition system semantics. This semantics has many of the advantages of the interleaving approach; the algebra admits an expansion theorem, and bisimulation semantics can be used as usual. Our transition systems, however, incorporate timing information, and this enables us to express concurrency: merely adding timing appropriately generalises transition\u00a0\u2026", "num_citations": "131\n", "authors": ["1648"]}
{"title": "Termination, deadlock, and divergence\n", "abstract": " In this paper, a process algebra that incorporates explicit representations of successful termination, deadlock, and divergence is introduced and its semantic theory is analyzed. Both an operational and a denotational semantics for the language is given and it is shown that they agree. The operational theory is based upon a suitable adaptation of the notion of bisimulation preorder. The denotational semantics for the language is given in terms of the initial continuous algebra that satisfies a set of equations E, CIE. It is shown that CIE is fully abstract with respect to our choice of behavioral preorder. Several results of independent interest are obtained; namely, the finite  approximability of the behavioral preorder and a partial completeness result for the set of equations E with respect to the preorder.", "num_citations": "129\n", "authors": ["1648"]}
{"title": "Action refinement in process algebras\n", "abstract": " Dr. Aceto studies the notion of action refinement in the setting of process description languages, together with behavioral equivalences for them and their associated proof systems. The presentation is organized into three parts. In the first, a semantic theory of processes based on atomic actions is used to give results that serve as a stepping stone toward the more complex theories needed to support action refinement. The core of the book then develops suitable notions of process equivalence for increasingly complex languages with operators for action refinement. This approach is used to highlight the difficulties introduced by synchronization among actions and scoping operators. In the final part, the author deals with the possibility of using action refinement to\" observe\" indirectly the causal relationships among actions in a system. A preliminary semantic theory for concurrent systems that relates concurrency and nondeterminism without reducing the former to the latter is also studied in some detail.", "num_citations": "81\n", "authors": ["1648"]}
{"title": "Adding action refinement to a finite process algebra\n", "abstract": " In this paper we present a Process Algebra for the specification of concurrent, communicating processes which incorporates operators for the refinement of actions by processes, in addition to the usual operators for communication, nondeterminism, internal actions, and restrictions, and study a suitable notion of semantic equivalence for it. We argue that action refinements should not, in some formal sense, interfere with the internal evolution of processes and their application to processes should consider the restriction operator as a \"binder.\" We show that, under the above assumptions, the weak version of the refine equivalence introduced by Aceto and Hennessy ((1993) Inform. and Comput.103, 204-269) is preserved by action refinements and, moreover, is the largest such equivalence relation contained in weak bismulation equivalence. We also discuss an example showing that, contrary to what happens in\u00a0\u2026", "num_citations": "71\n", "authors": ["1648"]}
{"title": "Adding action refinement to a finite process algebra\n", "abstract": " Action refinement occurs naturally when developing specifications for processes or systems. At one level of abstraction the specification might look llke", "num_citations": "70\n", "authors": ["1648"]}
{"title": "A static view of localities\n", "abstract": " This paper proposes alternative, effective characterizations for nets of automata of the location equivalence and preorder presented by Boudol et al. in the companion paper [BCHK]. Contrary to the technical development in the above given reference, where locations are dynamically associated to the subparts of a process in the operational semantics, the equivalence and preorder we propose are based on a static association of locations to the parallel components of a net. Following this static approach, it is possible to give these \u201cdistributed nets\u201d a standard operational semantics which associates with each net a finite labelled transition system. Using this operational semantics for distributed nets, we introduce effective notions of equivalence and preorder which are shown to coincide with those proposed in [BCHK].", "num_citations": "64\n", "authors": ["1648"]}
{"title": "Is your model checker on time? On the complexity of model checking for timed modal logics\n", "abstract": " This paper studies the structural complexity of model checking for several timed modal logics presented in the literature. More precisely, we consider (variations on) the specification formalisms used in the tools CMC and Uppaal, and fragments of a timed \u03bc-calculus. For each of the logics, we characterize the computational complexity of model checking, as well as its specification and program complexity, using (parallel compositions of) timed automata as our system model. In particular, we show that the complexity of model checking for a timed \u03bc-calculus interpreted over (networks of) timed automata is EXPTIME-complete, no matter whether the complexity is measured with respect to the size of the specification, of the model or of both. All the flavours of model checking for timed versions of Hennessy\u2013Milner logic, and the restricted fragments of the timed \u03bc-calculus studied in the literature on CMC and Uppaal, are\u00a0\u2026", "num_citations": "61\n", "authors": ["1648"]}
{"title": "Axiomatizing prefix iteration with silent steps\n", "abstract": " Prefix iteration is a variation on the original binary version of the Kleene star operationP*Q, obtained by restricting the first argument to be an atomic action. The interaction of prefix iteration with silent steps is studied in the setting of Milner's basic CCS. Complete equational axiomatizations are given for four notions of behavioural congruence over basic CCS with prefix iteration, viz., branching congruence,\u03b7-congruence, delay congruence, and weak congruence. The completeness proofs for\u03b7-, delay, and weak congruence are obtained by reduction to the completeness theorem for branching congruence. It is also argued that the use of the completeness result for branching congruence in obtaining the completeness result for weak congruence leads to a considerable simplification with respect to the only direct proof presented in the literature. The preliminaries and the completeness proofs focus on open terms, i.e\u00a0\u2026", "num_citations": "58\n", "authors": ["1648"]}
{"title": "On the ill-timed but well-caused\n", "abstract": " There has been considerable controversy in concurrency theory between the \u2018interleaving\u2019 and \u2018true concurrency\u2019 schools. The former school advocates associating a transition system with a process which captures concurrent execution via the interleaving of occurrences: the latter adopts more complex semantic structures to avoid reducing concurrency to interleaving.             In this paper we show that the two approaches are not irreconcilable. We define a timed process algebra where occurrences are associated with intervals of time, and give it a transition system semantics. This semantics has many of the advantages of the interleaving approach; the algebra admits an expansion theorem, and bisimulation semantics can be used as usual. Our transition systems, however, incorporate timing information, and this enables us to express concurrency: merely adding timing appropriately generalises transition\u00a0\u2026", "num_citations": "57\n", "authors": ["1648"]}
{"title": "Monitorability for the Hennessy\u2013Milner logic with recursion\n", "abstract": " We study                           HML, a branching-time logic with least and greatest fixpoints, from a runtime verification perspective. The logic may be used to specify properties of programs whose behaviour may be expressed as a labelled transition system. We establish which subset of this logic can be monitored for at runtime by merely observing the runtime execution of a program. A monitor-synthesis algorithm is defined for this subset, where it is shown that the resulting synthesised monitors correctly perform the required analysis from the observed behaviour. We also prove completeness results wrt. this logical subset that show that, up to logical equivalence, no other properties apart from those identified can be monitored for and verified at runtime.", "num_citations": "55\n", "authors": ["1648"]}
{"title": "Modelling and simulation of asynchronous real-time systems using Timed Rebeca\n", "abstract": " In this paper we propose Timed Rebeca as an extension of the Rebeca language that can be used to model distributed and asynchronous systems with timing constraints. Timed Rebeca restricts the modeller to a pure asynchronous actor-based paradigm, where the structure of the model represents the service oriented architecture, while the computational model matches the network infrastructure. The modeller can specify both computational and network delay, and assign deadlines for serving a request. We provide the formal semantics of the language using Structural Operational Semantics, and show its expressiveness by means of examples. We developed a tool for automated translation from Timed Rebeca to the Erlang language, which provides a first implementation of Timed Rebeca. We can use the tool to set the parameters of Timed Rebeca models, which represent the environment and component\u00a0\u2026", "num_citations": "52\n", "authors": ["1648"]}
{"title": "Finite equational bases in process algebra: Results and open questions\n", "abstract": " Van Glabbeek (1990) presented the linear time/branching time spectrum of behavioral equivalences for finitely branching, concrete, sequential processes. He studied these semantics in the setting of the basic process algebra BCCSP, and tried to give finite complete axiomatizations for them. Obtaining such axiomatizations in concurrency theory often turns out to be difficult, even in the setting of simple languages like BCCSP. This has raised a host of open questions that have been the subject of intensive research in recent years. Most of these questions have been settled over BCCSP, either positively by giving a finite complete axiomatization, or negatively by proving that such an axiomatization does not exist. Still some open questions remain. This paper reports on these results, and on the state-of-the-art in axiomatizations for richer process algebras with constructs like sequential and parallel composition.", "num_citations": "50\n", "authors": ["1648"]}
{"title": "A survey of runtime monitoring instrumentation techniques\n", "abstract": " Runtime Monitoring is a lightweight and dynamic verification technique that involves observing the internal operations of a software system and/or its interactions with other external entities, with the aim of determining whether the system satisfies or violates a correctness specification. Compilation techniques employed in Runtime Monitoring tools allow monitors to be automatically derived from high-level correctness specifications (aka. properties). This allows the same property to be converted into different types of monitors, which may apply different instrumentation techniques for checking whether the property was satisfied or not. In this paper we compare and contrast the various types of monitoring methodologies found in the current literature, and classify them into a spectrum of monitoring instrumentation techniques, ranging from completely asynchronous monitoring on the one end and completely synchronous monitoring on the other.", "num_citations": "41\n", "authors": ["1648"]}
{"title": "The algorithmics of bisimilarity.\n", "abstract": " A model for reactive computation, for example that of labelled transition systems (Keller, 1976), or a process algebra, such as ACP (Baeten and Weijland, 1990), CCS (Milner, 1989) or CSP (Hoare, 1985), can be used to describe both implementations of processes and specifications of their expected behaviours. Process algebras and labelled transition systems therefore naturally support the so-called single-language approach to process theory\u2014that is, the approach in which a single language is used to describe both actual processes and their specifications. An important ingredient of the theory of these languages and their associated semantic models is therefore a notion of behavioural equivalence or behavioural approximation between processes. One process description, say SYS, may describe an implementation, and another, say SPEC, may describe a specification of the expected behaviour. To say that SYS and SPEC are equivalent is taken to indicate that these two processes describe essentially the same behaviour, albeit possibly at different levels of abstraction or refinement. To say that, in some formal sense, SYS is an approximation of SPEC means roughly that every aspect of the behaviour of this process is allowed by the specification SPEC, and thus that nothing unexpected can happen in the behaviour of SYS. This approach to program verification is also sometimes called implementation verification or equivalence checking.Designers using implementation verification to validate their (models of) reactive systems need only learn one language to describe both their systems and their specifications, and can benefit from the\u00a0\u2026", "num_citations": "39\n", "authors": ["1648"]}
{"title": "Deriving complete inference systems for a class of GSOS languages generating regular behaviours\n", "abstract": " In this paper I characterize a class of infinitary GSOS specifications, obtained by relaxing some of the finiteness constraints of the original format of Bloom, Istrail and Meyer, which generate regular processes. I then show how the techniques of Aceto, Bloom and Vaandrager can be adapted to give a procedure for converting any such language definition to a complete equational axiom system for strong bisimulation of processes which does not use infinitary proof rules. Equalities between recursive, regular processes can be established in the resulting inference systems by means of standard axioms to unwind recursive definitions, and the so-called Recursive Specification Principle (RSP).", "num_citations": "39\n", "authors": ["1648"]}
{"title": "Modelling and simulation of asynchronous real-time systems using timed rebeca\n", "abstract": " In this paper we propose an extension of the Rebeca language that can be used to model distributed and asynchronous systems with timing constraints. We provide the formal semantics of the language using Structural Operational Semantics, and show its expressiveness by means of examples. We developed a tool for automated translation from timed Rebeca to the Erlang language, which provides a first implementation of timed Rebeca. We can use the tool to set the parameters of timed Rebeca models, which represent the environment and component variables, and use McErlang to run multiple simulations for different settings. Timed Rebeca restricts the modeller to a pure asynchronous actor-based paradigm, where the structure of the model represents the service oriented architecture, while the computational model matches the network infrastructure. Simulation is shown to be an effective analysis support, specially where model checking faces almost immediate state explosion in an asynchronous setting.", "num_citations": "37\n", "authors": ["1648"]}
{"title": "A menagerie of non-finitely based process semantics over BPA*\u2013from ready simulation to completed traces\n", "abstract": " Fokkink and Zantema (Fokkink and Zantema 1994) have shown that bisimulation equivalence has a finite equational axiomatization over the language of Basic Process Algebra with the binary Kleene star operation (BPA*). In light of this positive result on the mathematical tractability of bisimulation equivalence over BPA*, a natural question to ask is whether any other (pre)congruence relation in van Glabbeek's linear time/branching time spectrum is finitely (in)equationally axiomatizable over it. In this paper, we prove that, unlike bisimulation equivalence, none of the preorders and equivalences in van Glabbeek's linear time/branching time spectrum, whose discriminating power lies in between that of ready simulation and that of completed traces, has a finite equational axiomatization. This we achieve by exhibiting a family of (in)equivalences that holds in ready simulation semantics (which is the finest semantics that\u00a0\u2026", "num_citations": "36\n", "authors": ["1648"]}
{"title": "The complexity of checking consistency of pedigree information and related problems\n", "abstract": " Consistency checking is a fundamental computational problem in genetics. Given a pedigree and information on the genotypes (of some) of the individuals in it, the aim of consistency checking is to determine whether these data are consistent with the classic Mendelian laws of inheritance. This problem arose originally from the geneticists' need to filter their input data from erroneous information, and is well motivated from both a biological and a sociological viewpoint. This paper shows that consistency checking is NP-complete, even with focus on a single gene and in the presence of three allele. Several other results on the computational complexity of problems from genetics that are related to consistency checking are also offered. In particular, it is shown that checking the consistency of pedigrees over two alleles, and of pedigrees without loops, can be done in polynomial time.", "num_citations": "35\n", "authors": ["1648"]}
{"title": "History preserving, causal and mixed-ordering equivalence over stable event structures (Note)\n", "abstract": " Several notions of semantic equivalence, whose aim is to fully reflect the interplay between nondeterminism and causality, have recently been proposed for models and languages for the description of concurrent computations. Amongst them, the ones which have received more attention in the literature are history preserving equivalence and causal equivalence, see [RT88, GG88] and [DD89], respectively. A third proposal for an equivalence which captures the nondeterministic and concurrent aspects of processes in complete detail is presented in [DDM89], where the authors introduce for this purpose a variation on their NMS-bisimulation [DDM87], which they called mixed-ordering equivalence. The proliferation of notions of equivalence for concurrent systems makes the task of studying the relationships amongst them worthwhile. In this note, I shall give my modest contribution to the classification of the wealth of\u00a0\u2026", "num_citations": "33\n", "authors": ["1648"]}
{"title": "On runtime enforcement via suppressions\n", "abstract": " Runtime enforcement is a dynamic analysis technique that uses monitors to enforce the behaviour specified by some correctness property on an executing system. The enforceability of a logic captures the extent to which the properties expressible via the logic can be enforced at runtime. We study the enforceability of Hennessy-Milner Logic with Recursion (muHML) with respect to suppression enforcement. We develop an operational framework for enforcement which we then use to formalise when a monitor enforces a muHML property. We also show that the safety syntactic fragment of the logic, sHML, is enforceable by providing an automated synthesis function that generates correct suppression monitors from sHML formulas.", "num_citations": "32\n", "authors": ["1648"]}
{"title": "Nested semantics over finite trees are equationally hard\n", "abstract": " This paper studies nested simulation and nested trace semantics over the language BCCSP, a basic formalism to express finite process behaviour. It is shown that none of these semantics affords finite (in)equational axiomatizations over BCCSP. In particular, for each of the nested semantics studied in this paper, the collection of sound, closed (in)equations over a singleton action set is not finitely based.", "num_citations": "32\n", "authors": ["1648"]}
{"title": "A complete axiomatization of timed bisimulation for a class of timed regular behaviours\n", "abstract": " One of the most satisfactory results in process theory is Milner's axiomatization of strong bisimulation for regular CCS. This result holds for open terms with finite-state recursion. Wang has shown that timed bisimulation can also be axiomatized, but only for closed terms without recursion. In this paper, we provide an axiomatization for timed bisimulation of open terms with finite-state recursion.", "num_citations": "32\n", "authors": ["1648"]}
{"title": "Full abstraction for series-parallel pomsets\n", "abstract": " In this paper, we provide a behavioural characterization of the class of finite, seriesparallel pomsets by showing that this simple model based on partial orders is fully-abstract with respect to the behavioural equivalence obtained by applying Abramsky's testing scenario for bisimulation equivalence, [Ab87], in all refinement contexts, [AH89]. This casts the observability of series-parallel pomsets in a purely interleaving framework. Moreover, we prove that the order structure of a series-parallel pomset is completely revealed by its set of ST-traces, [G190], and provide a complete axiomatization of ST-trace equivalence over the class of series-parallel pomsets.", "num_citations": "31\n", "authors": ["1648"]}
{"title": "Characteristic formulae for fixed-point semantics: a general framework\n", "abstract": " The concurrency theory literature offers a wealth of examples of characteristic-formula constructions for various behavioural relations over finite labelled transition systems and Kripke structures that are defined in terms of fixed points of suitable functions. Such constructions and their proofs of correctness have been developed independently, but have a common underlying structure. This paper provides a general view of characteristic formulae that are expressed in terms of logics that have a facility for the recursive definition of formulae. We show how several examples of characteristic-formula constructions in the literature can be recovered as instances of the proposed general framework, and how the framework can be used to yield novel constructions. The paper also offers general results pertaining to the definition of co-characteristic formulae and of characteristic formulae expressed in terms of infinitary modal\u00a0\u2026", "num_citations": "30\n", "authors": ["1648"]}
{"title": "Some of my favourite results in classic process algebra\n", "abstract": " I have been asked a few times what my favourite results in process algebra are, and often thought that it might be a useful exercise to reflect a little on that question, and pen down my thoughts. The spur for attempting this somewhat foolish enterprise at this point in time comes from the workshop on \u201cProcess Algebra: Open Problems and Future Directions\u201d that I co-organize with Zolt\u00e1n \u00c9sik, Wan Fokkink and Anna Ing\u00f3lfsd\u00f3ttir. My co-organizers and I hope that, apart from being a celebration of over twenty years of research in process algebra, that workshop will bear witness to the continuing vitality of this field of investigation, and I believe that one of the ways to contribute to the solution of new problems and the development of new avenues for research is to mull over the results that have been achieved so far and the open problems they raise. Whether the writing of this note means that I am \u201cpast the best before date\u201d as an active researcher in the process algebra community I must leave", "num_citations": "30\n", "authors": ["1648"]}
{"title": "Characteristic formulae for timed automata\n", "abstract": " This paper offers characteristic formula constructions in the real-time logic L\u03bd for several behavioural relations between (states of) timed automata. The behavioural relations studied in this work are timed (bi)similarity, timed ready simulation, faster-than bisimilarity and timed trace inclusion. The characteristic formulae delivered by our constructions have size which is linear in that of the timed automaton they logically describe. This also applies to the characteristic formula for timed bisimulation equivalence, for which an exponential space construction was previously offered by Laroussinie, Larsen and Weise.", "num_citations": "30\n", "authors": ["1648"]}
{"title": "On \u201cAxiomatising finite concurrent processes\u201d\n", "abstract": " In his pioneering paper [Axiomatising finite concurrent processes, SIAM J. Comput., 17 (1988), pp. 997\u20131017], Hennessy gave complete axiomatizations of Milner\u2019s observational congruence and of t-observational congruence which made use of an auxiliary operation to axiomatize parallel composition. Unfortunately, those axiomatizations turn out to be flawed due to the subtle interplay between Hennessy\u2019s auxiliary parallel operator and synchronization. The aim of this paper is to present correct versions of the equational characterizations given in Hennessy\u2019s paper. Some of the problems which arise in giving operational semantics to the auxiliary operators used by Bergstra and Klop and Hennessy in the theory of congruences like Milner\u2019s observational congruence are also discussed.", "num_citations": "30\n", "authors": ["1648"]}
{"title": "On verifying Hennessy-Milner logic with recursion at runtime\n", "abstract": " We study \u03bc \u03bc HML (a branching-time logic with least and greatest fixpoints) from a runtime verification perspective. We establish which subset of the logic can be verified at runtime and define correct monitor-synthesis algorithms for this subset. We also prove completeness results these logical subsets that show that no other properties apart from those identified can be verified at runtime.", "num_citations": "29\n", "authors": ["1648"]}
{"title": "From \u03bcCRL to mCRL2: Motivation and outline\n", "abstract": " We sketch the language mCRL2, the successor of \u03bcCRL, which is a process algebra with data, devised in 1990 to model and study the behaviour of interacting programs and systems. The language is improved in several respects guided by the experience obtained from numerous applications where realistic systems have been modelled and analysed. Just as with \u03bcCRL, the leading principle is to provide a minimal set of primitives that allow effective specifications, that conform to standard mathematics and that allow standard mathematical manipulations and proof methodologies. In the first place the equational abstract datatypes have been enhanced with higher-order constructs and standard data types, ranging from booleans, numbers and lists to sets, bags and higher-order function types. In the second place multi-actions have been introduced to allow a seamless integration with Petri nets. In the last place\u00a0\u2026", "num_citations": "29\n", "authors": ["1648"]}
{"title": "Ready to preorder: get your BCCSP axiomatization for free!\n", "abstract": " This paper contributes to the study of the equational theory of the semantics in van Glabbeek\u2019s linear time - branching time spectrum over the language BCCSP, a basic process algebra for the description of finite synchronization trees. It offers an algorithm for producing a complete (respectively, ground-complete) equational axiomatization of any behavioral congruence lying between ready simulation equivalence and partial traces equivalence from a complete (respectively, ground-complete) inequational axiomatization of its underlying precongruence\u2014that is, of the precongruence whose kernel is the equivalence. The algorithm preserves finiteness of the axiomatization when the set of actions is finite.", "num_citations": "28\n", "authors": ["1648"]}
{"title": "CCS with Hennessy's merge has no finite-equational axiomatization\n", "abstract": " This paper confirms a conjecture of Bergstra and Klop's from 1984 by establishing that the process algebra obtained by adding an auxiliary operator proposed by Hennessy in 1981 to the recursion free fragment of Milner's Calculus of Communicating Systems is not finitely based modulo bisimulation equivalence. Thus, Hennessy's merge cannot replace the left merge and communication merge operators proposed by Bergstra and Klop, at least if a finite axiomatization of parallel composition modulo bisimulation equivalence is desired.", "num_citations": "27\n", "authors": ["1648"]}
{"title": "Conservative extension in structural operational semantics\n", "abstract": " Structural operational semantics (SOS)[44] provides a framework to give an operational semantics to programming and specification languages. In particular, because of its intuitive appeal and flexibility, SOS has found considerable application in the study of the semantics of concurrent processes. SOS generates a labelled transition system, whose states are the closed terms over an algebraic signature, and whose transitions are supplied with labels. The transitions between states are obtained inductively from a transition system specification (TSS), which consists of so-called transition rules of the form premises conclusion", "num_citations": "26\n", "authors": ["1648"]}
{"title": "A fully equational proof of Parikh's theorem\n", "abstract": " We show that the validity of Parikh's theorem for context-free languages depends only on a few equational properties of least pre-fixed points. Moreover, we exhibit an infinite basis of \u03bc-term equations of continuous commutative idempotent semirings.", "num_citations": "25\n", "authors": ["1648"]}
{"title": "CPO models for compact GSOS languages\n", "abstract": " In this paper, we present a general way of giving denotational semantics to a class of languages equipped with an operational semantics that fits the GSOS format of Bloom, Istrail, and Meyer. The canonical model used for this purpose will be Abramsky's domain of synchronization trees, and the denotational semantics automatically generated by our methods will be guaranteed to be fully abstract with respect to the finitely observable part of the bisimulation preorder. In the process of establishing the full abstraction result, we also obtain several general results on the bisimulation preorder (including a complete axiomatization for it), and give a novel operational interpretation of GSOS languages.", "num_citations": "25\n", "authors": ["1648"]}
{"title": "GSOS and finite labelled transition systems\n", "abstract": " Recently there has been considerable interest in studying formats of Plotkin style inference rules which ensure that the induced labelled transition system semantics have certain properties. In this note, I shall give a contribution to this line of research by giving a restricted version of Bloom, Istrail and Meyer's GSOS format Bloom et al. (1988), Bloom (1989) which induces finite labelled transition systems.", "num_citations": "25\n", "authors": ["1648"]}
{"title": "Testing hennessy-milner logic with recursion\n", "abstract": " This study offers a characterization of the collection of properties expressible in Hennessy-Milner Logic (HML) with recursion that can be tested using finite LTSs. In addition to actions used to probe the behaviour of the tested system, the LTSs that we use as tests will be able to perform a distinguished action nok to signal their dissatisfaction during the interaction with the tested process. A process s passes the test T iff T does not perform the action nok when it interacts with s. A test T tests for a property \u03c6 in HML with recursion iff it is passed by exactly the states that satisfy \u03c6. The paper gives an expressive completeness result offering a characterization of the collection of properties in HML with recursion that are testable in the above sense.", "num_citations": "24\n", "authors": ["1648"]}
{"title": "On the complexity of determinizing monitors\n", "abstract": " We examine the determinization of monitors. We demonstrate that every monitor is equivalent to a deterministic one, which is at most doubly exponential in size with respect to the original monitor. When monitors are described as CCS-like processes, this doubly-exponential bound is optimal. When (deterministic) monitors are described as finite automata (as their LTS), then they can be exponentially more succinct than their CCS process form.", "num_citations": "23\n", "authors": ["1648"]}
{"title": "A finite equational base for CCS with left merge and communication merge\n", "abstract": " Using the left merge and the communication merge from ACP, we present an equational base (i.e., a ground-complete and \u03c9-complete set of valid equations) for the fragment of CCS without recursion, restriction and relabeling modulo (strong) bisimilarity. Our equational base is finite if the set of actions is finite.", "num_citations": "23\n", "authors": ["1648"]}
{"title": "The max-plus algebra of the natural numbers has no finite equational basis\n", "abstract": " This paper shows that the collection of identities which hold in the algebra N of the natural numbers with constant zero, and binary operations of sum and maximum is not finitely based. Moreover, it is proven that, for every n, the equations in at most n variables that hold in N do not form an equational basis. As a stepping stone in the proof of these facts, several results of independent interest are obtained. In particular, explicit descriptions of the free algebras in the variety generated by N are offered. Such descriptions are based upon a geometric characterization of the equations that hold in N, which also yields that the equational theory of N is decidable in exponential time.", "num_citations": "23\n", "authors": ["1648"]}
{"title": "On a question of A. Salomaa The equational theory of regular expressions over a singleton alphabet is not finitely based\n", "abstract": " Salomaa (1969, p. 143) asked whether the equational theory of regular expressions over a singleton alphabet has a finite equational base. In this paper, we provide a negative answer to this long-standing question. The proof of our main result rests upon a model-theoretic argument. For every finite collection of equations, that are sound in the algebra of regular expressions over a singleton alphabet, we build a model in which some valid regular equation fails. The construction of the model mimics the one used by Conway (1971, p. 105) in his proof of a result, originally due to Redko, to the effect that infinitely many equations are needed to axiomatize equality of regular expressions. Our analysis of the model, however, needs to be more refined than the one provided by Conway (1971).", "num_citations": "22\n", "authors": ["1648"]}
{"title": "An equational axiomatization for multi-exit iteration\n", "abstract": " This paper presents an equational axiomatization of bisimulation equivalence over the language of Basic Process Algebra (BPA) with multi-exit iteration. Multi-exit iteration is a generalization of the standard binary Kleene star operation that allows for the specification of agents that, up to bisimulation equivalence, are solutions of systems of recursion equations of the form X 1= def P 1 X 2+ Q 1\u22ee X n= def P n X 1+ Q n, wherenis a positive integer and theP i and theQ i are process terms. The addition of multi-exit iteration to BPA yields a more expressive language than that obtained by augmenting BPA with the standard binary Kleene star (BPA*). As a consequence, the proof of completeness of the proposed equational axiomatization for this language, although standard in its general structure, is much more involved than that for BPA*. An expressiveness hierarchy for the family ofk-exit iteration operators proposed by\u00a0\u2026", "num_citations": "22\n", "authors": ["1648"]}
{"title": "An operational guide to monitorability\n", "abstract": " Monitorability underpins the technique of Runtime Verification because it delineates what properties can be verified at runtime. Although many monitorability definitions exist, few are defined explicitly in terms of the operational guarantees provided by monitors, i.e., the computational entities carrying out the verification. We view monitorability as a spectrum, where the fewer guarantees that are required of monitors, the more properties become monitorable. Accordingly, we present a monitorability hierarchy based on this trade-off. For regular specifications, we give syntactic characterisations in Hennessy\u2013Milner logic with recursion for its levels. Finally, we map existing monitorability definitions into our hierarchy. Hence our work gives a unified framework that makes the operational assumptions and guarantees of each definition explicit. This provides a rigorous foundation that can inform design choices and\u00a0\u2026", "num_citations": "21\n", "authors": ["1648"]}
{"title": "Is your Model Checker on Time?\n", "abstract": " This paper studies the structural complexity of model checking for (variations on) the specification formalisms used in the tools CMC and Uppaal, and fragments of a timed alternation-free \u03bc-calculus. For each of the logics we study, we characterize the computational complexity of model checking, as well as its specification and program complexity, using timed automata as our system model.", "num_citations": "21\n", "authors": ["1648"]}
{"title": "An equational axiomatization of observation congruence for prefix iteration\n", "abstract": " Fokkink ((1994) Inf. Process. Lett. 52: 333\u2013337) has recently proposed a complete equational axiomatization of strong bisimulation equivalence for MPA                 \u03b4                 *               (A\u03c4), i.e., the language obtained by extending Milner's basic CCS with prefix iteration. Prefix iteration is a variation on the original binary version of the Kleene star operation p                  *                q obtained by restricting the first argument to be an atomic action. In this paper, we extend Fokkink's results to a setting with the unobservable action \u03c4 by giving a complete equational axiomatization of Milner's observation congruence over MPA                 \u03b4                 *               (A\u03c4). The axiomatization is obtained by extending Fokkink's axiom system with two of Milner's standard \u03c4-laws, and three equations that describe the interplay between the silent nature of \u03c4 and prefix iteration. Using a technique due to Groote, we also show that the\u00a0\u2026", "num_citations": "21\n", "authors": ["1648"]}
{"title": "Equational axioms for probabilistic bisimilarity\n", "abstract": " This paper gives an equational axiomatization of probabilistic bisimulation equivalence for a class of finite-state agents previously studied by Stark and Smolka ((2000) Proof, Language, and Interaction: Essays in Honour of Robin Milner, pp. 571\u2013595). The axiomatization is obtained by extending the general axioms of iteration theories (or iteration algebras), which characterize, among others, the equational properties of the fixed point operator on (\u03c9-)continuous or monotonic functions, with three axiom schemas that express laws that are specific to probabilistic bisimilarity. Hence probabilistic bisimilarity (over finite-state agents) has an equational axiomatization relative to iteration algebras.", "num_citations": "20\n", "authors": ["1648"]}
{"title": "Failures semantics for a simple process language with refinement\n", "abstract": " We study a suitable semantic theory based on the standard failures preorder [BHR84] for a simple process algebra which includes operators for the refinement of actions by processes. We present a model-theoretic and a behavioural characterization of the largest precongruence associated with failures preorder, \u2ac7                 F                 c               , over the language we consider.             The model-theoretic characterization is in terms of a pomset failures model which is shown to be fully abstract with respect to \u2ac7                 F                 c               . Pomset failures (labelled partial orders with refusal sets) allow us to express the nonsequential as well as the nondeterministic characteristics of \u2ac7                 F                 c               . The behavioural characterization is in terms of a variation on the standard failures preorder based on ideas of ST-semantics, [Gla90].", "num_citations": "20\n", "authors": ["1648"]}
{"title": "Relating distributed, temporal and causal observations of simple processes\n", "abstract": " The noninterleaving equivalences that have been proposed in the literature may be roughly divided into three classes, depending on the kind of observational scenarios underlying them. Some of them distinguish parallelism from nondeterminism by admitting explicit observations of the causal structure of systems; some others are based on the observation of distribution and still others on the assumption that actions have duration.", "num_citations": "19\n", "authors": ["1648"]}
{"title": "On relating concurrency and nondeterminism\n", "abstract": " We present an intuitive preorder for a simple CCS-like language whose semantic theory allows us to relate concurrency and nondeterminism without reducing the former to the latter. The preorder over processes is induced by using an equationally defined preorder over computations in a bisimulation-like protocol. The relationships of the proposed preorder with pomset bisimulation and standard strong bisimulation equivalence are studied in detail. Moreover, we give an axiomatization of the preorder over recursion-free processes.", "num_citations": "19\n", "authors": ["1648"]}
{"title": "Model-based Testing of Mobile Systems--An Empirical Study on QuizUp Android App\n", "abstract": " We present an empirical study in which model-based testing (MBT) was applied to a mobile system: the Android client of QuizUp, the largest mobile trivia game in the world. The study shows that traditional MBT approaches based on extended finite-state machines can be used to test a mobile app in an effective and efficient way. Non-trivial defects were detected on a deployed system that has millions of users and was already well tested. The duration of the overall testing effort was of three months, including the construction of the models. Maintaining a single behavioral model for the app was key in order to test it in an efficient way.", "num_citations": "15\n", "authors": ["1648"]}
{"title": "Decision support for mobile cloud computing applications via model checking\n", "abstract": " Deciding whether to off load some computation is a crucial issue in Mobile Cloud Computing systems. This paper proposes a new methodology, whose goal is to provide runtime support for off loading decisions, based on a formal framework. By means of a domain specific language (MobiCa), a developer can define both system and application structure. Using the diagnostic trace generated at runtime by the well-known model checker UPPAAL, driven by some query verified on the timed automata model associated with the MobiCa specification, the framework decides which application fragments should be remotely executed. The proposed approach is exemplified on a navigator case study, probably one of the most used applications on mobile devices.", "num_citations": "15\n", "authors": ["1648"]}
{"title": "Characteristic formulae: from automata to logic\n", "abstract": " This paper discusses the classic notion of characteristic formulae for processes using variations on Hennessy-Milner logic as the underlying logical specification language. It is shown how to characterize logically (states of) finite labelled transition systems modulo bisimilarity using a single formula in Hennessy-Milner logic with recursion. Moreover, characteristic formulae for timed automata with respect to timed bisimilarity and the faster-than preorder of Moller and Tofts are offered in terms of the logic L\u03bd of Laroussinie, Larsen and Weise.", "num_citations": "15\n", "authors": ["1648"]}
{"title": "Equational theories of tropical semirings\n", "abstract": " This paper studies the equational theories of various exotic semirings presented in the literature. Exotic semirings are semirings whose underlying carrier set is some subset of the set of real numbers equipped with binary operations of minimum or maximum as sum, and addition as product. Two prime examples of such structures are the (max,+) semiring and the tropical semiring. It is shown that none of the exotic semirings commonly considered in the literature has a finite basis for its equations, and that similar results hold for the commutative idempotent weak semirings that underlie them. For each of these commutative idempotent weak semirings, the paper offers characterizations of the equations that hold in them, decidability results for their equational theories, explicit descriptions of the free algebras in the varieties they generate, and relative axiomatization results.", "num_citations": "15\n", "authors": ["1648"]}
{"title": "A theory of testing for ACP\n", "abstract": " This paper introduces a process algebra which incorporates the auxiliary operators of ACP, [BK85], and is tailored towards algebraic verifications in the theory of testing equivalence. The process algebra we consider is essentially a version of ACP with the empty process in which the nondeterministic choice operators familiar from TCSP, [BHR84], and TCCS, [DH87], are used in lieu of the internal action \u03c4 and the single choice operator favoured by CCS, [Mil89], and ACP. We present a behavioural semantics for the language based upon a natural notion of testing equivalence, [DH84], and show that, contrary to what happens in a setting with the internal action \u03c4, the left-merge operator is compatible with it. A complete equational characterization of the behavioural semantics is given for finite processes, thus providing an algebraic theory supporting the use of the auxiliary operators of ACP in algebraic\u00a0\u2026", "num_citations": "15\n", "authors": ["1648"]}
{"title": "Relating modal refinements, covariant-contravariant simulations and partial bisimulations\n", "abstract": " This paper studies the relationships between three notions of behavioural preorder that have been proposed in the literature: refinement over modal transition systems, and the covariant-contravariant simulation and the partial bisimulation preorders over labelled transition systems. It is shown that there are mutual translations between modal transition systems and labelled transition systems that preserve, and reflect, refinement and the covariant-contravariant simulation preorder. The translations are also shown to preserve the modal properties that can be expressed in the logics that characterize those preorders. A translation from labelled transition systems modulo the partial bisimulation preorder into the same model modulo the covariant-contravariant simulation preorder is also offered, together with some evidence that the former model is less expressive than the latter. In order to gain more insight into the\u00a0\u2026", "num_citations": "14\n", "authors": ["1648"]}
{"title": "Finite equational bases for fragments of CCS with restriction and relabelling\n", "abstract": " We investigate the equational theory of several fragments of CCS modulo (strong) bisimilarity with special attention to restriction and relabelling. The largest fragment we consider includes action prefixing, choice, parallel composition without communication, restriction and relabelling. We present a finite equational base (i.e., a finite ground-complete and omega-complete axiomatisation) for it, including the left merge from ACP as auxiliary operation to facilitate the axiomatisation of parallel composition.", "num_citations": "14\n", "authors": ["1648"]}
{"title": "On the axiomatizability of priority\n", "abstract": " This paper studies the equational theory of bisimulation equivalence over the process algebra BCCSP extended with the priority operator of Baeten, Bergstra and Klop. It is proven that, in the presence of an infinite set of actions, bisimulation equivalence has no finite, sound, ground-complete equational axiomatization over that language. This negative result applies even if the syntax is extended with an arbitrary collection of auxiliary operators, and motivates the study of axiomatizations using conditional equations. In the presence of an infinite set of actions, it is shown that, in general, bisimulation equivalence has no finite, sound, ground-complete axiomatization consisting of conditional equations over BCCSP. Sufficient conditions on the priority structure over actions are identified that lead to a finite, ground-complete axiomatization of bisimulation equivalence using conditional equations.", "num_citations": "14\n", "authors": ["1648"]}
{"title": "An introduction to milner\u2019s ccs\n", "abstract": " The aim of this collection of notes is to offer some support for the course on Semantics and Verification by introducing three of the basic notions that we shall use to describe, specify and analyze reactive systems, namely", "num_citations": "14\n", "authors": ["1648"]}
{"title": "On the two-variable fragment of the equational theory of the max-sum algebra of the natural numbers\n", "abstract": " This paper shows that the collection of identities in two variables which hold in the algebra N of the natural numbers with constant zero, and binary operations of sum and maximum does not have a finite equational axiomatization. This gives an alternative proof of the nonexistence of a finite basis for N\u2014a result previously obtained by the authors.", "num_citations": "14\n", "authors": ["1648"]}
{"title": "Axiomatizing weak ready simulation semantics over BCCSP\n", "abstract": " Ready simulation has proven to be one of the most significant semantics in process theory. It is at the heart of a number of general results that pave the way to a comprehensive understanding of the spectrum of process semantics. Since its original definition by Bloom, Istrail and Meyer in 1995, several authors have proposed generalizations of ready simulation to deal with internal actions. However, a thorough study of the (non-)existence of finite (in)equational bases for weak ready simulation semantics is still missing in the literature. This paper presents a complete account of positive and negative results on the axiomatizability of weak ready simulation semantics over the language BCCSP. In addition, this study offers a thorough analysis of the axiomatizability properties of weak simulation semantics.", "num_citations": "13\n", "authors": ["1648"]}
{"title": "Graphical representation of covariant-contravariant modal formulae\n", "abstract": " Covariant-contravariant simulation is a combination of standard (covariant) simulation, its contravariant counterpart and bisimulation. We have previously studied its logical characterization by means of the covariant-contravariant modal logic. Moreover, we have investigated the relationships between this model and that of modal transition systems, where two kinds of transitions (the so-called may and must transitions) were combined in order to obtain a simple framework to express a notion of refinement over state-transition models. In a classic paper, Boudol and Larsen established a precise connection between the graphical approach, by means of modal transition systems, and the logical approach, based on Hennessy-Milner logic without negation, to system specification. They obtained a (graphical) representation theorem proving that a formula can be represented by a term if, and only if, it is consistent and prime. We show in this paper that the formulae from the covariant-contravariant modal logic that admit a \"graphical\" representation by means of processes, modulo the covariant-contravariant simulation preorder, are also the consistent and prime ones. In order to obtain the desired graphical representation result, we first restrict ourselves to the case of covariant-contravariant systems without bivariant actions. Bivariant actions can be incorporated later by means of an encoding that splits each bivariant action into its covariant and its contravariant parts.", "num_citations": "13\n", "authors": ["1648"]}
{"title": "Bisimilarity is not finitely based over BPA with interrupt\n", "abstract": " This paper shows that bisimulation equivalence does not afford a finite equational axiomatization over the language obtained by enriching Bergstra and Klop's basic process algebra (BPA) with the interrupt operator. Moreover, it is shown that the collection of closed equations over this language is also not finitely based. In sharp contrast to these results, the collection of closed equations over the language BPA enriched with the disrupt operator is proven to be finitely based.", "num_citations": "13\n", "authors": ["1648"]}
{"title": "The importance of research for a modern university\n", "abstract": " University An institution of higher learning providing facilities for teaching and research and authorized to grant academic degrees; specifically: one made up of an undergraduate division which confers bachelor\u2019s degrees and a graduate division which comprises a graduate school and professional schools each of which may confer master\u2019s degrees and doctorates.(Source: Merriam-Webster OnLine)", "num_citations": "13\n", "authors": ["1648"]}
{"title": "2-nested simulation is not finitely equationally axiomatizable\n", "abstract": " 2-nested simulation was introduced by Groote and Vaan- drager [10] as the coarsest equivalence included in completed trace equiv- alence for which the tyft/tyxt format is a congruence format. In the linear time-branching time spectrum of van Glabbeek [8], 2-nested simulation is one of the few equivalences for which no finite equational axiomati- zation is presented. In this paper we prove that such an axiomatization does not exist for 2-nested simulation.", "num_citations": "13\n", "authors": ["1648"]}
{"title": "A runtime monitoring tool for actor-based systems\n", "abstract": " This chapter discusses detectEr, an experimental runtime monitoring tool that can be used to formally verify concurrent systems developed in Erlang. Formal correctness properties in detectEr are expressed using a monitorable subset of Hennessy-Milner Logic with recursion, and synthesised into actorbased runtime monitors. Our exposition focusses on how the specification logic is enriched and extended with pattern-matching and conditional constructs which allow monitors to be adept at processing the data obtained dynamically from the system\u2019s execution trace. The tool leverages the native tracing functionality provided by the Erlang language platform so as to produce asynchronous monitors that can be instrumented to run alongside the system with minimal effort. To demonstrate how detectEr can be used in practice, this material also provides a hands-on guide that is especially aimed at users wishing to use our tool to monitor Erlang applications.", "num_citations": "12\n", "authors": ["1648"]}
{"title": "A complete classification of the expressiveness of interval logics of Allen\u2019s relations: the general and the dense cases\n", "abstract": " Interval temporal logics take time intervals, instead of time points, as their primitive temporal entities. One of the most studied interval temporal logics is Halpern and Shoham\u2019s modal logic of time intervals HS, which associates a modal operator with each binary relation between intervals over a linear order (the so-called Allen\u2019s interval relations). In this paper, we compare and classify the expressiveness of all fragments of HS on the class of all linear orders and on the subclass of all dense linear orders. For each of these classes, we identify a complete set of definabilities between HS modalities, valid in that class, thus obtaining a complete classification of the family of all 4096 fragments of HS with respect to their expressiveness. We show that on the class of all linear orders there are exactly 1347 expressively different fragments of HS, while on the class of dense linear orders there are exactly 966 such\u00a0\u2026", "num_citations": "12\n", "authors": ["1648"]}
{"title": "The saga of the axiomatization of parallel composition\n", "abstract": " This paper surveys some classic and recent results on the finite axiomatizability of bisimilarity over CCS-like languages. It focuses, in particular, on non-finite axiomatizability results stemming from the semantic interplay between parallel composition and nondeterministic choice. The paper also highlights the role that auxiliary operators, such as Bergstra and Klop\u2019s left and communication merge and Hennessy\u2019s merge operator, play in the search for a finite, equational axiomatization of parallel composition both for classic process algebras and for their real-time extensions.", "num_citations": "12\n", "authors": ["1648"]}
{"title": "What is algebraic in process theory?\n", "abstract": " Process theory started in the 1970's with an emphasis on giving an algebraic treatment of its fundamental concepts. In the 1990's, with the rapid introduction of advanced features (data, time, mobility, probability, stochastics), the algebraic line was largely abandoned. I believe that a thorough abstract algebraic treatment adds a degree of mathematical maturity and elegance to the theory. In this note I discuss what is algebraic in process theory, and what is not (yet).", "num_citations": "12\n", "authors": ["1648"]}
{"title": "A complete equational axiomatization for MPA with string iteration\n", "abstract": " We study equational axiomatizations of bisimulation equivalence for the language obtained by extending Milner\u2019s basic CCS with string iteration. String iteration is a variation on the original binary version of the Kleene star operation p\u2217 q obtained by restricting the first argument to be a non-empty sequence of atomic actions. We show that, for every positive integer k, bisimulation equivalence over the set of processes in this language with loops of length at most k is finitely axiomatizable. We also offer a countably infinite equational theory that completely axiomatizes bisimulation equivalence over the whole language. We prove that this result cannot be improved upon by showing that no finite equational axiomatization of bisimulation equivalence over basic CCS with string iteration can exist, unless the set of actions is empty.", "num_citations": "12\n", "authors": ["1648"]}
{"title": "A complete equational axiomatization for prefix iteration with silent steps\n", "abstract": " Fokkink ((1994) Inf. Process. Lett. 52: 333\u2013337) has recently proposed a complete equational axiomatization of strong bisimulation equivalence for MPA\u2217 \u03b4 (A\u03c4), ie, the language obtained by extending Milner\u2019s basic CCS with prefix iteration. Prefix iteration is a variation on the original binary version of the Kleene star operation p\u2217 q obtained by restricting the first argument to be an atomic action. In this paper, we extend Fokkink\u2019s results to a setting with the unobservable action \u03c4 by giving a complete equational axiomatization of Milner\u2019s observation congruence over MPA\u2217 \u03b4 (A\u03c4). The axiomatization is obtained by extending Fokkink\u2019s axiom system with two of Milner\u2019s standard \u03c4-laws and the following three equations that describe the interplay between the silent nature of \u03c4 and prefix iteration: \u03c4. x= \u03c4\u2217 x a\u2217(x+ \u03c4. y)= a\u2217(x+ \u03c4. y+ ay) \u03c4.(a\u2217 x)= a\u2217(\u03c4. a\u2217 x).", "num_citations": "12\n", "authors": ["1648"]}
{"title": "Resource bisimilarity and graded bisimilarity coincide\n", "abstract": " Resource bisimilarity has been proposed in the literature on concurrency theory as a notion of bisimilarity over labeled transition systems that takes into account the number of choices that a system has. Independently, g-bisimilarity has been defined over Kripke models as a suitable notion of bisimilarity for graded modal logic. This note shows that these two notions of bisimilarity coincide over image-finite Kripke frames.", "num_citations": "11\n", "authors": ["1648"]}
{"title": "A cost/reward method for optimal infinite scheduling in mobile cloud computing\n", "abstract": " Computation offloading is a key concept in Mobile Cloud Computing: it concerns the capability of moving application components from a mobile device to the cloud. This technique, in general, improves the efficiency of a system, although sometimes it can lead to a performance degradation. To decide when and what to offload, we propose the use of a method for determining an optimal infinite scheduler, which is able to manage the resource assignment of components with the aim of improving the system efficiency in terms of battery consumption and time. In particular, in this paper we define a cost/reward horizon method for Mobile Cloud Computing systems specified in the language MobiCa. By means of the model checker UPPAAL, we synthesize an optimal infinite scheduler for a given system specification. We assess our approach through a case study, which highlights the importance of a scheduler for\u00a0\u2026", "num_citations": "10\n", "authors": ["1648"]}
{"title": "Over 30 years of process algebra: Past, present and future\n", "abstract": " Over 30 years of process algebra : past, present and future (2003) | www.narcis.nl KNAW KNAW Narcis Back to search results Eindhoven University of Technology Publication Over 30 years of process algebra : past, present and future (2003) Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title Over 30 years of process algebra : past, present and future Published in Process Algebra : Open Problems and Future Directions. PA '03, Bologna, Italy, 21-25 July, 2003, 7 - 12 Series BRICS notes series Author Baeten, JCM Editor Aceto, L.; \u00c9sik, Z.; Fokkink, WJ; Ing\u00f3lfsd\u00f3ttir, A. Publisher Model Driven Software Engineering; Formal System Analysis Date issued 2003 Access Closed Access Language English Type Conference Paper Publisher Elsevier Publication https://research.tue.nl/nl/publications/over-30-years-of-pro... OpenURL Search this publication in (\u2026", "num_citations": "10\n", "authors": ["1648"]}
{"title": "Structural operational semantics\n", "abstract": " Structural Operational Semantics \u2014 Aalborg University's Research Portal Skip to main navigation Skip to search Skip to main content Aalborg University's Research Portal Logo Dansk English Home Profiles Projects Publications Activities Research Units Facilities Press / Media Prizes Datasets Impacts Search by keywords, name or affiliation Structural Operational Semantics Luca Aceto, W. Fokkink, C. Verhoef Department of Computer Science Research output: Book/Report \u203a Book \u203a Research Overview Original language English Place of Publication Aalborg Publisher Aalborg Universitetsforlag Publication status Published - 2000 Cite this APA Author BIBTEX Harvard Standard RIS Vancouver Aceto, L., Fokkink, W., & Verhoef, C. (2000). Structural Operational Semantics. Aalborg Universitetsforlag. Aceto, Luca ; Fokkink, W. ; Verhoef, C. / Structural Operational Semantics. Aalborg : Aalborg Universitetsforlag, 2000. \u2026", "num_citations": "10\n", "authors": ["1648"]}
{"title": "eAOP: an aspect oriented programming framework for Erlang\n", "abstract": " Aspect oriented programming (AOP) is a paradigm ideal for defining cross-cutting concerns within an existing application. Although several AOP frameworks exist for more renowned languages such as Java and C#, little to no frameworks have been developed for actor oriented languages such as Erlang. We thus present eAOP, a new AOP framework specifically designed to instrument actor-oriented constructs in Erlang such as message sends and receives, along with other traditional constructs such as function calls.", "num_citations": "9\n", "authors": ["1648"]}
{"title": "A bisimulation-based method for proving the validity of equations in GSOS languages\n", "abstract": " This paper presents a bisimulation-based method for establishing the soundness of equations between terms constructed using operations whose semantics is specified by rules in the GSOS format of Bloom, Istrail and Meyer. The method is inspired by de Simone's FH-bisimilarity and uses transition rules as schematic transitions in a bisimulation-like relation between open terms. The soundness of the method is proven and examples showing its applicability are provided. The proposed bisimulation-based proof method is incomplete, but the article offers some completeness results for restricted classes of GSOS specifications.", "num_citations": "9\n", "authors": ["1648"]}
{"title": "Teaching concurrency: theory in practice\n", "abstract": " Teaching courses that rely on sound mathematical principles is nowadays a challenging task at many universities. On the one hand there is an increased demand for educating students in these areas, on the other hand there are more and more students being accepted with less adequate skills in mathematics. We report here on our experiences in teaching concurrency theory over the last twenty years or so to students ranging from mathsphobic bachelor students to sophisticated doctoral students. The contents of the courses, the material on which they are based and the pedagogical philosophy underlying them are described, as well as some of the lessons that we have learned over the years.", "num_citations": "9\n", "authors": ["1648"]}
{"title": "Automata, Languages and Programming: 35th International Colloquium, ICALP 2008 Reykjavik, Iceland, July 7-11, 2008, Proceedings, Part II\n", "abstract": " The two-volume set LNCS 5125 and LNCS 5126 constitutes the refereed proceedings of the 35th International Colloquium on Automata, Languages and Programming, ICALP 2008, held in Reykjavik, Iceland, in July 2008. The 126 revised full papers presented together with 4 invited lectures were carefully reviewed and selected from a total of 407 submissions. The papers are grouped in three major tracks on algorithms, automata, complexity and games, on logic, semantics, and theory of programming, and on security and cryptography foundations. LNCS 5126 contains 56 contributions of track B and track C selected from 208 submissions and 2 invited lectures. The papers for track B are organized in topical sections on bounds, distributed computation, real-time and probabilistic systems, logic and complexity, words and trees, nonstandard models of computation, reasoning about computation, and verification. The papers of track C cover topics in security and cryptography such as theory, secure computation, two-party protocols and zero-knowledge, encryption with special properties/quantum cryptography, various types of hashing, as well as public-key cryptography and authentication.", "num_citations": "9\n", "authors": ["1648"]}
{"title": "A characterization of finitary bisimulation\n", "abstract": " Following a paradigm put forward by Milner and Plotkin, a primary criterion to judge the appropriateness of denotational models for programming and specification languages is that they be in agreement with operational intuition about program behaviour. Of the \u201cgood fit\u201d criteria for such models that have been discussed in the literature, the most desirable one is that of full abstraction. Intuitively, a fully abstract denotational model is guaranteed to relate exactly all those programs that are operationally indistinguishable with respect to some chosen notion of observation.Because of its prominent role in process theory, bisimulation [12] has been a natural yardstick to assess the appropriateness of denotational models for several process description languages. In particular, when proving full abstraction results for denotational semantics based on the Scott-Strachey approach for CCS-like languages, several preorders based on bisimulation have been considered; see, eg,[6, 3, 4]. In this paper, we shall study one such bisimulationbased preorder whose connections with domain-theoretic models are by now well understood, viz. the prebisimulation preorder\u2272 investigated in, eg,[6, 3]. Intuitively, p\u2272 q holds of processes p and q if p and q can simulate each other\u2019s behaviour, but at times the behaviour of p may be less specified than that of q. A common problem in relating denotational semantics for process description languages, based on Scott\u2019s theory of domains or on the theory of algebraic semantics, with behavioural semantics based on bisimulation is that the chosen behavioural theory is, in general, too concrete. The reason for this phenomenon", "num_citations": "9\n", "authors": ["1648"]}
{"title": "CPO Models for a Class of GSOS Languages\n", "abstract": " In this paper, we present a general way of giving denotational semantics to a class of languages equipped with an operational semantics that fits the GSOS format of Bloom, Istrail and Meyer. The canonical model used for this purpose will be Abramsky's domain of synchronization trees, and the denotational semantics automatically generated by our methods will be guaranteed to be fully abstract with respect to the finitely observable part of the bisimulation preorder. In the process of establishing the full abstraction result, we also obtain several general results on the bisimulation preorder (including a complete axiomatization for it), and give a novel operational interpretation of GSOS languages.", "num_citations": "9\n", "authors": ["1648"]}
{"title": "On the specification of modal systems: A comparison of three frameworks\n", "abstract": " This paper studies the relationships between three notions of behavioural preorder that have been proposed in the literature: refinement over modal transition systems, and the covariant\u2013contravariant simulation and the partial bisimulation preorders over labelled transition systems. It is shown that there are mutual translations between modal transition systems and labelled transition systems that preserve, and reflect, refinement and the covariant\u2013contravariant simulation preorder. The translations are also shown to preserve the modal properties that can be expressed in the logics that characterize those preorders. A translation from labelled transition systems modulo the partial bisimulation preorder into the same model modulo the covariant\u2013contravariant simulation preorder is also offered, together with some evidence that the former model is less expressive than the latter. In order to gain more insight into the\u00a0\u2026", "num_citations": "8\n", "authors": ["1648"]}
{"title": "On the expressibility of priority\n", "abstract": " This short note offers results confirming that the priority operator of Baeten, Bergstra and Klop cannot be expressed using positive rule formats for operational semantics. Although expected, this inexpressibility result does not seem to have appeared before in the literature.", "num_citations": "8\n", "authors": ["1648"]}
{"title": "On the axiomatisability of priority\n", "abstract": " This paper studies the equational theory of bisimulation equivalence over the process algebra BCCSP extended with the priority operator of Baeten, Bergstra and Klop. We prove that, in the presence of an infinite set of actions, bisimulation equivalence has no finite, sound, ground-complete equational axiomatisation over that language. This negative result applies even if the syntax is extended with an arbitrary collection of auxiliary operators, and motivates the study of axiomatisations using equations with action predicates as conditions. In the presence of an infinite set of actions, it is shown that, in general, bisimulation equivalence has no finite, sound, ground-complete axiomatisation consisting of equations with action predicates as conditions over the language studied in this paper. Finally, sufficient conditions on the priority structure over actions are identified that lead to a finite, ground-complete axiomatisation of\u00a0\u2026", "num_citations": "8\n", "authors": ["1648"]}
{"title": "On the expressiveness of the interval logic of Allen\u2019s relations over finite and discrete linear orders\n", "abstract": " Interval temporal logics take time intervals, instead of time instants, as their primitive temporal entities. One of the most studied interval temporal logics is Halpern and Shoham\u2019s modal logic of time intervals HS, which associates a modal operator with each binary relation between intervals over a linear order (the so-called Allen\u2019s interval relations). A complete classification of all HS fragments with respect to their relative expressive power has been recently given for the classes of all linear orders and of all dense linear orders. The cases of discrete and finite linear orders turn out to be much more involved. In this paper, we make a significant step towards solving the classification problem over those classes of linear orders. First, we illustrate various non-trivial temporal properties that can be expressed by HS fragments when interpreted over finite and discrete linear orders; then, we provide a complete set of\u00a0\u2026", "num_citations": "7\n", "authors": ["1648"]}
{"title": "PREG Axiomatizer\u2013A ground bisimilarity checker for GSOS with predicates\n", "abstract": " PREG Axiomatizer is a tool used for proving strong bisimilarity between ground terms consisting of operations in the GSOS format extended with predicates. It automatically derives sound and ground-complete axiomatizations using a technique proposed by the authors of this paper. These axiomatizations are provided as input to the Maude system, which, in turn, is used as a reduction engine for provided ground terms. These terms are bisimilar if and only if their normal forms obtained in this fashion are equal. The motivation of this tool is the optimized handling of equivalence checking between complex ground terms within automated provers and checkers.", "num_citations": "7\n", "authors": ["1648"]}
{"title": "Algebraic process calculi: The first twenty five years and beyond\n", "abstract": " The idea for this volume of the BRICS Notes Series arose during our email discussions of issues related to the scientific content of the workshop Algebraic Process Calculi: The First Twenty Five Years and Beyond that will take place in the beautiful setting of the University Residential Centre of Bertinoro with the kind sponsorship of BICI, BRICS and Microsoft Research.Our main aim in organizing this event is to celebrate the first twenty five years of research in the field of algebraic process calculi by reflecting on the achievements within this field, and sowing the seeds for its healthy future development by highlighting the most important open problems and future directions in the field, and stimulating international cooperation. The event in part was driven by the idea of a \u201cCONCUR re-union\u201d endorsed by Jos Baeten, Jan Bergstra, Tony Hoare, Robin Milner, and Jan Willem Klop. We felt that providing a slim volume to read and discuss during our summer days in Bertinoro would be a useful way of stimulating the participants at the workshop to think about their contribution at the meeting, and to offer the rest of the community who cannot be in Bertinoro a collection of interesting pieces on process calculi to read and ponder on. The committee decided from the very start that this volume should not consist of a collection of long technical articles. After all, there are already plenty of standard outlets for those contributions. Rather, we decided to solicit from the participants at the workshop, and other selected members of our community, short essays on the theme of algebraic process calculi. Some ideas for papers that we proposed to potential contributors\u00a0\u2026", "num_citations": "7\n", "authors": ["1648"]}
{"title": "Equational axioms for probabilistic bisimilarity (preliminary report)\n", "abstract": " This paper gives an equational axiomatization of probabilistic bisimulation equivalence for a class of finite-state agents previously studied by Stark and Smolka ((2000) Proof, Language, and Interaction: Essays in Honour of Robin Milner, pp. 571-595). The axiomatization is obtained by extending the general axioms of iteration theories (or iteration algebras), which characterize the equational properties of the fixed point operator on (omega-) continuous or monotonic functions, with three axiom schemas that express laws that are specific to probabilistic bisimilarity. Hence probabilistic bisimilarity (over finite-state agents) has an equational axiomatization relative to iteration algebras.", "num_citations": "7\n", "authors": ["1648"]}
{"title": "A complete equational axiomatization for MPA with string iteration\n", "abstract": " We study equational axiomatizations of bisimulation equivalence for the language obtained by extending Milner's basic CCS with string iteration. String iteration is a variation on the original binary version of the Kleene star operation p\u2217 q obtained by restricting the first argument to be a non-empty sequence of atomic actions. We show that, for every positive integer k, bisimulation equivalence over the set of processes in this language with loops of length at most k is finitely axiomatizable, provided that the set of actions is finite. We also offer an infinite equational theory that completely axiomatizes bisimulation equivalence over the whole language. We prove that this result cannot be improved upon by showing that no finite equational axiomatization of bisimulation equivalence over basic CCS with string iteration can exist, unless the set of actions is empty.", "num_citations": "7\n", "authors": ["1648"]}
{"title": "Developing Theoretical Foundations for Runtime Enforcement\n", "abstract": " The ubiquitous reliance on software systems increases the need for ensuring that systems behave correctly and are well protected against security risks. Runtime enforcement is a dynamic analysis technique that utilizes software monitors to check the runtime behaviour of a software system with respect to a correctness specification. Whenever the runtime behaviour of the monitored system is about to deviate from the specification (either due to a programming bug or a security hijack attack), the monitors apply enforcement techniques to prevent this deviation. Current Runtime Enforcement techniques require that the correctness specification defines the behaviour of the enforcement monitor itself. This burdens the specifier with not only having to define property that needs to be enforced, but also with having to specify how this should be enforced at runtime; we thus relieve the specifier from this burden by resorting to a highly expressive logic. Using a logic we allow the specifier to define the correctness specification as a logic formula from which we can automatically synthesise the appropriate enforcement monitor. Highly expressive logics can, however, permit for defining a wide variety of formulae, some of which cannot actually be enforced correctly at runtime. We thus study the enforceability of Hennessy Milner Logic with Recursion for which we identify a subset that allows for defining enforceable formulae. This allows us to define a synthesis function that translates enforceable formulae into enforcement monitors. As our monitors are meant to ensure the correct behaviour of the monitored system, it is imperative that they work correctly\u00a0\u2026", "num_citations": "6\n", "authors": ["1648"]}
{"title": "Proving the validity of equations in GSOS languages using rule-matching bisimilarity\n", "abstract": " This paper presents a bisimulation-based method for establishing the soundness of equations between terms constructed using operations whose semantics are specified by rules in the GSOS format of Bloom, Istrail and Meyer. The method is inspired by de Simone's FH-bisimilarity and uses transition rules as schematic transitions in a bisimulation-like relation between open terms. The soundness of the method is proved and examples showing its applicability are provided. The proposed bisimulation-based proof method is incomplete, but we do offer some completeness results for restricted classes of GSOS specifications. An extension of the proof method to the setting of GSOS languages with predicates is also offered.", "num_citations": "6\n", "authors": ["1648"]}
{"title": "Automata, Languages and Programming\n", "abstract": " Automata, Languages and Programming - NASA/ADS Now on home page ads icon ads Enable full ADS view NASA/ADS Automata, Languages and Programming Abramsky, Samson ; Gavoille, Cyril ; Kirchner, Claude ; Meyer Auf der Heide, Friedhelm ; Spirakis, Paul G. Abstract Publication: Lecture Notes in Computer Science Pub Date: 2010 DOI: 10.1007/978-3-642-14162-1 Bibcode: 2010LNCS......A Keywords: Computer Science; Algorithm Analysis and Problem Complexity; Computer Communication Networks; Computation by Abstract Devices; Software Engineering; Discrete Mathematics in Computer Science; Information Systems Applications (incl.Internet) full text sources Publisher | \u00a9 The SAO/NASA Astrophysics Data System adshelp[at]cfa.harvard.edu The ADS is operated by the Smithsonian Astrophysical Observatory under NASA Cooperative Agreement NNX16AC86A NASA logo Smithsonian logo \u2026", "num_citations": "6\n", "authors": ["1648"]}
{"title": "The quest for equational axiomatizations of parallel composition: Status and open problems\n", "abstract": " This essay recounts the story of the quest for equational axiomatizations of parallel composition operators in process description languages, and of similar results in the classic field of formal language theory. Some of the outstanding open problems are also mentioned.", "num_citations": "6\n", "authors": ["1648"]}
{"title": "Bisimilarity is not finitely based over BPA with interrupt\n", "abstract": " This paper shows that bisimulation equivalence does not afford a finite equational axiomatization over the language obtained by enriching Bergstra and Klop\u2019s Basic Process Algebra with the interrupt operator. Moreover, it is shown that the collection of closed equations over this language is also not finitely based. In sharp contrast to these results, the collection of closed equations over the language BPA enriched with the disrupt operator is proven to be finitely based.", "num_citations": "6\n", "authors": ["1648"]}
{"title": "Split-2 bisimilarity has a finite axiomatization over CCS with Hennessy's merge\n", "abstract": " This note shows that split-2 bisimulation equivalence (also known as timed equivalence) affords a finite equational axiomatization over the process algebra obtained by adding an auxiliary operation proposed by Hennessy in 1981 to the recursion, relabelling and restriction free fragment of Milner's Calculus of Communicating Systems. Thus the addition of a single binary operation, viz. Hennessy's merge, is sufficient for the finite equational axiomatization of parallel composition modulo this non-interleaving equivalence. This result is in sharp contrast to a theorem previously obtained by the same authors to the effect that the same language is not finitely based modulo bisimulation equivalence.", "num_citations": "6\n", "authors": ["1648"]}
{"title": "The complexity of checking consistency of pedigree information and related problems\n", "abstract": " Consistency checking is a fundamental computational problem in genetics. Given a pedigree and information on the genotypes (of some) of the individuals in it, the aim of consistency checking is to determine whether these data are consistent with the classic Mendelian laws of inheritance. This problem arose originally from the geneticists\u2019 need to filter their input data from erroneous information, and is well motivated from both a biological and a sociological viewpoint. This paper shows that consistency checking is NP-complete, even with focus on a single gene and in the presence of three alleles. Several other results on the computational complexity of problems from genetics that are related to consistency checking are also offered. In particular, it is shown that checking the consistency of pedigrees over two alleles, and of pedigrees without loops, can be done in polynomial time.", "num_citations": "6\n", "authors": ["1648"]}
{"title": "Relating semantic models for the object calculus.\n", "abstract": " Abadi and Cardelli have investigated several versions of the object calculus, a calculus for describing central features of object-oriented programs, with particular emphasis on various type systems. In this paper we study the properties of a denotational semantics due to Abadi and Cardelli vis-a-vis the notion of observational congruence for the calculus Ob1<: \u00b5. In particular, we prove that the denotational semantics based on partial equivalence relations is correct with respect to observational congruence. By means of a counter-example, we argue that the denotational model is not fully abstract with respect to observational congruence. In fact, the model is able to distinguish objects that have the same behaviour in every Ob1<: \u00b5-context.", "num_citations": "6\n", "authors": ["1648"]}
{"title": "When are prime formulae characteristic?\n", "abstract": " In the setting of the modal logic that characterizes modal refinement over modal transition systems, Boudol and Larsen showed that the formulae for which model checking can be reduced to preorder checking, that is, the characteristic formulae, are exactly the consistent and prime ones. This paper presents general, sufficient conditions guaranteeing that characteristic formulae are exactly the consistent and prime ones. It is shown that the given conditions apply to the logics characterizing all the semantics in van Glabbeek\u2019s branching-time spectrum.", "num_citations": "5\n", "authors": ["1648"]}
{"title": "A complete classification of the expressiveness of interval logics of Allen's relations over dense linear orders\n", "abstract": " Interval temporal logics are temporal logics that take time intervals, instead of time instants, as their primitive temporal entities. One of the most studied interval temporal logics is Halpern and Shoham's modal logic of time intervals (HS), which has a distinct modality for each binary relation between intervals over a linear order. As HS turns out to be undecidable over most classes of linear orders, the study of HS fragments, featuring a proper subset of HS modalities, is a major item in the research agenda for interval temporal logics. A characterization of HS fragments in terms of their relative expressive power has been given for the class of all linear orders. Unfortunately, there is no easy way to directly transfer such a result to other meaningful classes of linear orders. In this paper, we provide a complete classification of the expressiveness of HS fragments over the class of (all) dense linear orders.", "num_citations": "5\n", "authors": ["1648"]}
{"title": "Axiomatizing gsos with predicates\n", "abstract": " In this paper, we introduce an extension of the GSOS rule format with predicates such as termination, convergence and divergence. For this format we generalize the technique proposed by Aceto, Bloom and Vaandrager for the automatic generation of ground-complete axiomatizations of bisimilarity over GSOS systems. Our procedure is implemented in a tool that receives SOS specifications as input and derives the corresponding axiomatizations automatically. This paves the way to checking strong bisimilarity over process terms by means of theorem-proving techniques.", "num_citations": "5\n", "authors": ["1648"]}
{"title": "A cook's tour of equational axiomatizations for prefix iteration\n", "abstract": " Prefix iteration is a variation on the original binary version of the Kleene star operation P                                *                              Q, obtained by restricting the first argument to be an atomic action, and yields simple iterative behaviours that can be equationally characterized by means of finite collections of axioms. In this paper, we present axiomatic characterizations for a significant fragment of the notions of equivalence and preorder in van Glabbeek's linear-time/branching-time spectrum over Milner's basic CCS extended with prefix iteration. More precisely, we consider ready simulation, simulation, readiness, trace and language semantics, and provide complete (in)equational axiomatizations for each of these notions over BCCS with prefix iteration. All of the axiom systems we present are finite, if so is the set of atomic actions under consideration.", "num_citations": "5\n", "authors": ["1648"]}
{"title": "Are Two Binary Operators Necessary to Finitely Axiomatise Parallel Composition?\n", "abstract": " Bergstra and Klop have shown that bisimilarity has a finite equational axiomatisation over ACP/CCS extended with the binary left and communication merge operators. Moller proved that auxiliary operators are necessary to obtain a finite axiomatisation of bisimilarity over CCS, and Aceto et al. showed that this remains true when Hennessy's merge is added to that language. These results raise the question of whether there is one auxiliary binary operator whose addition to CCS leads to a finite axiomatisation of bisimilarity. This study provides a negative answer to that question based on three reasonable assumptions.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "Rule formats for nominal process calculi\n", "abstract": " The nominal transition systems (NTSs) of Parrow et al. describe the operational semantics of nominal process calculi. We study NTSs in terms of the nominal residual transition systems (NRTSs) that we introduce. We provide rule formats for the specifications of NRTSs that ensure that the associated NRTS is an NTS and apply them to the operational specification of the early pi-calculus. Our study stems from the recent Nominal SOS of Cimini et al. and from earlier works in nominal sets and nominal logic by Gabbay, Pitts and their collaborators.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "The equational theory of weak complete simulation semantics over BCCSP\n", "abstract": " This paper presents a complete account of positive and negative results on the finite axiomatizability of weak complete simulation semantics over the language BCCSP. We offer finite (un)conditional ground-complete axiomatizations for the weak complete simulation precongruence. In sharp contrast to this positive result, we prove that, in the presence of at least one observable action, the (in)equational theory of the weak complete simulation precongruence over BCCSP does not have a finite (in)equational basis. In fact, the set of (in)equations in at most one variable that hold in weak complete simulation semantics over BCCSP does not have an (in)equational basis of \u2018bounded depth\u2019, let alone a finite one.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "Sigma algebras in probabilistic epistemic dynamics\n", "abstract": " This paper extends probabilistic dynamic epistemic logic from a finite setting to an infinite setting, by introducing \u03c3-algebras to the probability spaces in the models. This may extend the applicability of the logic to a real world setting with infinitely many possible measurements. It is shown that the dynamics preserves desirable properties of measurability and that completeness of the proof system holds with the extended semantics.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "The equational theory of prebisimilarity over basic CCS with divergence\n", "abstract": " This paper studies the equational theory of prebisimilarity, a bisimulation-based preorder introduced by Hennessy and Milner in the early 1980s, over basic CCS with the divergent process \u03a9. It is well known that prebisimilarity affords a finite ground-complete axiomatization over this language; this study proves that this ground-complete axiomatization is also complete in the presence of an infinite set of actions. Moreover, in sharp contrast to this positive result, it is shown that prebisimilarity is not finitely based over basic CCS with the divergent process \u03a9 when the set of actions is finite and nonempty.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "A finite equational base for CCS with left merge and communication merge\n", "abstract": " Using the left merge and communication merge from ACP, we present an equational base (i.e., a ground-complete and \u03c9-complete set of valid equations) for the fragment of CCS without restriction and relabelling. Our equational base is finite if the set of actions is finite.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "Foundations of Software Science and Computation Structures\n", "abstract": " The 28 revised full papers presented together with 1 invited paper were carefully reviewed and selected from 107 submissions. The papers are organized in topical sections on mobile processes, software science, distributed computation, categorical models, real time and hybrid systems, process calculi, automata and logic, domains, lambda calculus, types, and security.", "num_citations": "4\n", "authors": ["1648"]}
{"title": "How to Write a Paper\n", "abstract": " \u201cI do not remember having felt, as a boy, any passion for mathematics, and such notions as I may have had of the career of a mathematician were far from noble. I thought of mathematics in terms of examinations and scholarships: I wanted to beat other boys, and this seemed to be the way in which I could do so most decisively.\u201d(Godfrey Harold Hardy)", "num_citations": "4\n", "authors": ["1648"]}
{"title": "Comparing controlled system synthesis and suppression enforcement\n", "abstract": " Runtime enforcement and control system synthesis are two verification techniques that automate the process of transforming an erroneous system into a valid one. As both techniques can modify the behaviour of a system to prevent erroneous executions, they are both ideal for ensuring safety. In this paper, we investigate the interplay between these two techniques and identify control system synthesis as being the static counterpart to suppression-based runtime enforcement, in the context of safety properties.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "On the axiomatisability of parallel composition: A journey in the spectrum\n", "abstract": " This paper studies the existence of finite equational axiomatisations of the interleaving parallel composition operator modulo the behavioural equivalences in van Glabbeek\u2019s linear time-branching time spectrum. In the setting of the process algebra BCCSP over a finite set of actions, we provide finite, ground-complete axiomatisations for various simulation and (decorated) trace semantics. On the other hand, we show that no congruence over that language that includes bisimilarity and is included in possible futures equivalence has a finite, ground-complete axiomatisation. This negative result applies to all the nested trace and nested simulation semantics.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "A unified rule format for bounded nondeterminism in SOS with terms as labels\n", "abstract": " We present a unified rule format for structural operational semantics with terms as labels that guarantees that the associated labelled transition system has some bounded-nondeterminism property. The properties we consider include finite branching, initials finiteness and image finiteness.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "Logical characterisations and compositionality of input-output conformance simulation\n", "abstract": " Input-output conformance simulation has been proposed by Gregorio-Rodr\u00edguez, Llana and Mart\u00ednez-Torres as a simulation-based behavioural preorder underlying model-based testing. This relation is inspired by Tretman\u2019s classic relation, but has better worst-case complexity than and supports stepwise refinement. The goal of this paper is to develop the theory of by studying logical characterisations of this relation and its compositionality. More specifically, this article presents characterisations of in terms of modal logics and compares them with an existing logical characterisation for proposed by Beohar and Mousavi. A precongruence rule format for and a rule format ensuring that operations take quiescence properly into account are also given. Both rule formats are based on the GSOS format by Bloom, Istrail and Meyer.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "An algorithm for enumerating maximal models of Horn theories with an application to modal logics\n", "abstract": " The fragment of propositional logic known as Horn theories plays a central role in automated reasoning. The problem of enumerating the maximal models of a Horn theory (MaxMod) has been proved to be computationally hard, unless P = NP. To the best of our knowledge, the only algorithm available for it is the one based on a brute-force approach. In this paper, we provide an algorithm for the problem of enumerating the maximal subsets of facts that do not entail a distinguished atomic proposition in a definite Horn theory (MaxNoEntail). We show that MaxMod is polynomially reducible to MaxNoEntail (and vice versa), making it possible to solve also the former problem using the proposed algorithm. Addressing MaxMod via MaxNoEntail opens, inter alia, the possibility of benefiting from the monotonicity of the notion of entailment. (The notion of model does not enjoy such a property.) We also discuss an\u00a0\u2026", "num_citations": "3\n", "authors": ["1648"]}
{"title": "SOS rule formats for idempotent terms and idempotent unary operators\n", "abstract": " A unary operator f is idempotent if the equation f(x)\u2009=\u2009f(f(x)) holds. On the other end, an element a of an algebra is said to be an idempotent for a binary operator \u2299 if a\u2009=\u2009a\u2009\u2299\u2009a. This paper presents a rule format for Structural Operational Semantics that guarantees that a unary operator be idempotent modulo bisimilarity. The proposed rule format relies on a companion one ensuring that certain terms are idempotent with respect to some binary operator.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "Compositional reasoning for multi-modal logics\n", "abstract": " We provide decomposition and quotienting results for multi-modal logic with respect to a composition operator, traditionally used for epistemic models, due to van Eijck et al. (Journal of Applied Non-Classical Logics 21(3\u20134):397\u2013425, 2011), that involves sets of atomic propositions and valuation functions from Kripke models. While the composition operator was originally defined only for epistemic S5                 n                models, our results apply to the composition of any pair of Kripke models. In particular, our quotienting result extends a specific result in the above mentioned paper by van Eijck et al. for the composition of epistemic models with disjoint sets of atomic propositions to compositions of any two Kripke models regardless of their sets of atomic propositions. We also explore the complexity of the formulas we construct in our decomposition result.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "Complete and ready simulation semantics are not finitely based over BCCSP, even with a singleton alphabet\n", "abstract": " This note shows that the complete and the ready simulation preorders do not have a finite inequational basis over the language BCCSP when the set of actions is a singleton. Moreover, the equivalences induced by those preorders do not have a finite (in)equational axiomatization either. These results are in contrast with a claim of finite axiomatizability for those semantics in the literature, which was based on the erroneous assumption that they coincide with complete trace semantics in the presence of a singleton set of actions.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "On the properties of matrices defining some classes of BVMs\n", "abstract": " It is known that the matrices defining the discrete problem generated by a k-step Boundary Value Method (BVM) have a quasi-Toeplitz band structure [7]. In particular, when the boundary conditions are skipped, they become Toeplitz matrices. In this paper, by introducing a characterization of positive definiteness for such matrices, we shall prove that the Toeplitz matrices which arise when using the methods in the classes of BVMs known as Generalized BDF and Top Order Methods have such property.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "Axiomatizing tropical semirings\n", "abstract": " This paper studies the equational theory of various exotic semirings presented in the literature. Exotic semirings are semirings whose underlying carrier set is some subset of the set of real numbers equipped with binary operations of minimum or maximum as sum, and addition as product. Two prime examples of such structures are the (max, +) semiring and the tropical semiring. It is shown that none of the exotic semirings commonly considered in the literature has a finite basis for its equations, and that similar results hold for the commutative idempotent weak semirings that underlie them. For each of these commutative idempotent weak semirings, the paper offers characterizations of the equations that hold in them, explicit descriptions of the free algebras in the varieties they generate, and relative axiomatization results.", "num_citations": "3\n", "authors": ["1648"]}
{"title": "On Benchmarking for Concurrent Runtime Verification\n", "abstract": " We present a synthetic benchmarking framework that targets the systematic evaluation of RV tools for message-based concurrent systems. Our tool can emulate various load profiles via configuration. It provides a multi-faceted view of measurements that is conducive to a comprehensive assessment of the overhead induced by runtime monitoring. The tool is able to generate significant loads to reveal edge case behaviour that may only emerge when the monitoring system is pushed to its limit. We evaluate our framework in two ways. First, we conduct sanity checks to assess the precision of the measurement mechanisms used, the repeatability of the results obtained, and the veracity of the behaviour emulated by our synthetic benchmark. We then showcase the utility of the features offered by our tool in a two-part RV case study.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "A choreographed outline instrumentation algorithm for asynchronous components\n", "abstract": " The runtime analysis of decentralised software requires instrumentation methods that are scalable, but also minimally invasive. This paper presents a new algorithm that instruments choreographed outline monitors. Our instrumentation algorithm scales and reorganises monitors dynamically as the system executes. We demonstrate the implementability of choreographed outline instrumentation and compare it to inline instrumentation, subject to rigorous and comprehensive benchmarking. Our results debunk the general notion that outline monitoring is necessarily infeasible, and show that our implementation induces runtime overhead comparable to that of its inline counterpart for many practical cases.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "Interviews with the 2020 CONCUR Test-of-Time Award recipients\n", "abstract": " Earlier this year, the International Conference on Concurrency Theory (CONCUR) and the IFIP 1.8 Working Group on Concurrency Theory decided to establish the CONCUR Test-of-Time Award to recognize important achievements in Concurrency Theory that were published at the CONCUR conference and have stood the test of time. All papers published at CONCUR between 1990 and 1995 were eligible for the first installment of the award, which will be presented at the 31st International Conference on Concurrency Theory (CONCUR 2020). The conference will be held on line in the period 1\u20134 September 2020, and has Igor Konnov and Laura Kovacs as chairs of the program committee. The award winners for the CONCUR Test-of-Time Awards 2020, together with the award citations, may be found at https://concur2020. forsyte. at/test-of-time/index. htmlThey were selected by a jury composed of Jos Baeten, Patricia Bouyer-Decitre, Holger Hermanns, Alexandra Silva and myself (as chair of the jury). In order to give visibility to the CONCUR Test-of-Time Award, and to inspire young researchers to build on the work of the award recipients and to learn from their experiences, I decided to interview all the award recipients, namely S\u00f8ren Christensen, Rob van Glabbeek, Hans H\u00fcttel, Nancy Lynch, Davide Sangiorgi, Roberto Segala and Colin Stirling. I received positive answers from all of them, apart from S\u00f8ren Christensen, who has worked in the private sector since he finished his PhD, and Colin Stirling, who has retired last spring. The interviews can be accessed from my professional blog at", "num_citations": "2\n", "authors": ["1648"]}
{"title": "On the Axiomatizability of Priority III: The Return of Sequential Composition.\n", "abstract": " Aceto et al., proved that, over the process algebra BCCSP with the priority operator of Baeten, Bergstra and Klop, the equational theory of orderinsensitive bisimilarity is not finitely based. However, it has been noticed that by substituting the action prefixing operator of BCCSP with BPA\u2019s sequential composition, the infinite family of equations used to show that non-finite axiomatizability result could be proved by a finite collection of sound equations. That observation left as an open question the existence of a finite axiomatization for order-insensitive bisimilarity over BPA with the priority operator. In this paper we provide a negative answer to this question. We prove that, in the presence of at least two actions, order-insensitive bisimilarity is not finitely based over BPA with priority.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "A ground-complete axiomatization of stateless bisimilarity over Linda\n", "abstract": " This paper offers a finite, ground-complete axiomatization of stateless bisimilarity over the tuple-space-based coordination language Linda. As stepping stones towards that result, axiomatizations of stateless bisimilarity over the sequential fragment of Linda without the nask primitive, and over the full sequential sub-language are given. It is also shown that stateless bisimilarity coincides with standard bisimilarity over the sequential fragment of Linda without the nask primitive.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "Meta SOS-A Maude Based SOS Meta-Theory Framework\n", "abstract": " Meta SOS is a software framework designed to integrate the results from the meta-theory of structural operational semantics (SOS). These results include deriving semantic properties of language constructs just by syntactically analyzing their rule-based definition, as well as automatically deriving sound and ground-complete axiomatizations for languages, when considering a notion of behavioural equivalence. This paper describes the Meta SOS framework by blending aspects from the meta-theory of SOS, details on their implementation in Maude, and running examples.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "Algebraic synchronization trees and processes\n", "abstract": " We study algebraic synchronization trees, i.e., initial solutions of algebraic recursion schemes over the continuous categorical algebra of synchronization trees. In particular, we investigate the relative expressive power of algebraic recursion schemes over two signatures, which are based on those for Basic CCS and Basic Process Algebra, as a means for defining synchronization trees up to isomorphism as well as modulo bisimilarity and language equivalence. The expressiveness of algebraic recursion schemes is also compared to that of the low levels in the Caucal hierarchy.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "A cancellation theorem for BCCSP\n", "abstract": " This paper presents a cancellation theorem for the preorders in van Glabbeek's linear time-branching time spectrum over BCCSP. Apart from having some intrinsic interest, the proven cancellation result plays a crucial role in the study of the cover equations, in the sense of Fokkink and Nain, that characterize the studied semantics. The techniques used in the proof of the cancellation theorem may also have some independent interest.", "num_citations": "2\n", "authors": ["1648"]}
{"title": "A Note on Complete Lattices and Tarski\u2019s Fixed-point Theorem\n", "abstract": " The aim of this note is to collect under one roof all the mathematical notions from the theory of partially ordered sets and lattices that is needed to introduce Tarski\u2019s classic fixed point theorem. We shall then use this theorem to give an alternative definition of strong bisimulation equivalence (also known as \u201cstrong equality\u201d). This reformulation of the notion of strong bisimulation equivalence yields an algorithm for computing the largest strong bisimulation over finite labelled transition systems\u2014ie, labelled transition systems with only finitely many states and transitions.The note is organized as follows. Section 2 introduces partially ordered sets and complete lattices. We then proceed to state and prove Tarski\u2019s fixed point theorem (Section 3). Finally, we show in Section 4 how to define strong bisimulation equivalence using Tarski\u2019s fixed point theorem, and hint at the algorithm for computing strong bisimulation\u00a0\u2026", "num_citations": "2\n", "authors": ["1648"]}
{"title": "On Bidirectional Runtime Enforcement\n", "abstract": " Runtime enforcement is a dynamic analysis technique that instruments a monitor with a system in order to ensure its correctness as specified by some property. This paper explores bidirectional enforcement strategies for properties describing the input and output behaviour of a system. We develop an operational framework for bidirectional enforcement and use it to study the enforceability of the safety fragment of Hennessy-Milner logic with recursion (sHML). We provide an automated synthesis function that generates correct monitors from sHML formulas, and show that this logic is enforceable via a specific type of bidirectional enforcement monitors called action disabling monitors.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "On the axiomatisability of priority III: Priority strikes again\n", "abstract": " Aceto et al., proved that, over the process algebra BCCSP with the priority operator of Baeten, Bergstra and Klop, the equational theory of order-insensitive bisimilarity is not finitely based. However, it was noticed that by substituting the action prefixing operator of BCCSP with BPA's sequential composition, the infinite family of equations used to show that non-finite axiomatisability result could be proved by a finite collection of sound equations. That observation left as an open question the existence of a finite axiomatisation for order-insensitive bisimilarity over BPA with the priority operator. In this paper we provide a negative answer to this question. We prove that, in the presence of at least two actions, order-insensitive bisimilarity is not finitely based over BPA with priority.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "On bidirectional enforcement\n", "abstract": " Runtime enforcement is a dynamic analysis technique that instruments a monitor with a system in order to ensure its correctness as specified by some property. In particular, we explore bidirectional enforcement instrumentation to enforce properties about the input and output behaviour of a system. We develop an operational framework for bidirectional enforcement and use it to study the enforceability of the safety fragment of Hennessy-Milner logic with recursion (sHML). We provide an automated synthesis function that generates correct and optimal monitors from sHML formulas, and show that this logic is enforceable via a specific type of bidirectional enforcement monitors called action disabling monitors.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Rule formats for bounded nondeterminism in structural operational semantics\n", "abstract": " We present rule formats for structural operational semantics that guarantee that the associated labelled transition system has each of the three following finiteness properties: finite branching, initials finiteness and image finiteness.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "SOS rule formats for idempotent terms and idempotent unary operators\n", "abstract": " A unary operator f is idempotent if the equation f (x)= f (f (x)) holds. On the other end, an element a of an algebra is said to be an idempotent for a binary operator\u2299 if a= a\u2299 a. This paper presents a rule format for Structural Operational Semantics that guarantees that a unary operator be idempotent modulo bisimilarity. The proposed rule format relies on a companion one ensuring that certain terms are idempotent with respect to some binary operator. This study also offers a variety of examples showing the applicability of both formats.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Complete classification of the expressiveness of fragments of Halpern-Shoham logic over dense linear orders\n", "abstract": " Interval temporal logics are temporal logics that take time intervals, instead of time instants, as their primitive temporal entities. One of the most studied interval temporal logics is Halpern and Shoham\u2019s modal logic of time intervals (HS), which has a distinct modality for each binary relation between intervals over a linear order. As HS turns out to be undecidable over most classes of linear orders, the study of HS fragments, featuring a proper subset of HS modalities, is a major item in the research agenda for interval temporal logics. A characterization of HS fragments in terms of their relative expressive power has been given for the class of all linear orders. Unfortunately, there is no easy way to directly transfer such a result to other meaningful classes of linear orders. In this paper, we provide a complete classification of the expressiveness of HS fragments over the class of (all) dense linear orders.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Compositional Reasoning for Epistemic Logics\n", "abstract": " We provide decomposition and quotienting results for multi-modal logic with respect to a composition operator, traditionally used for epistemic models, due to van Eijck et al.(Journal of Applied Non-Classical Logics 21 (3\u20134): 397\u2013425, 2011), that involves sets of atomic propositions and valuation functions from Kripke models. While the composition operator was originally defined only for epistemic S5n models, our results apply to the composition of any pair of Kripke models. In particular, our quotienting result extends a specific result in the above mentioned paper by van Eijck et al. for the composition of epistemic models with disjoint sets of atomic propositions to compositions of any two Kripke models regardless of their sets of atomic propositions. We also explore the complexity of the formulas we construct in our decomposition result.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Characteristic Formulae for Relations with Nested Fixed Points\n", "abstract": " A general framework for the connection between characteristic formulae and behavioral semantics is described in [2]. This approach does not suitably cover semantics defined by nested fixed points, such as the n-nested simulation semantics for n greater than 2. In this study we address this deficiency and give a description of nested fixed points that extends the approach for single fixed points in an intuitive and comprehensive way.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Deciding Bisimilarity over Finite Labelled Transition Systems is P-complete\n", "abstract": " In what follows we consider finite labelled transition systems, that is, labelled transition systems with a finite set of states and finitely many transitions. We recall that, as remarked in Section 3.6 of the book, for a labelled transition system with n states and m transitions, strong bisimilarity between any two given states is decidable in deterministic polynomial time\u2014more precisely in O (nm) time (Kanellakis and Smolka, 1990). This result by Kanellakis and Smolka was subsequently improved upon by Paige and Tarjan who devised an algorithm that runs in O (mlog n) time (Paige and Tarjan, 1987). This is in strong contrast with the complexity of deciding language equivalence, where the problem is known to be PSPACE-complete (Hunt, Rosenkrantz and Szymanski, 1976)\u2014that is, one of the hardest decision problems that can be solved using a polynomial amount of space. The problem of checking observational equivalence (weak bisimilarity) over finite labelled transition systems can be reduced to that of checking strong bisimilarity using a technique called saturation. Intuitively, saturation amounts to1. first pre-computing the weak transition relation (see Definition 3.3 in the book), and then2. constructing a new pair of finite processes whose original transitions are replaced with the weak transitions.The question whether two states are weakly bisimilar now amounts to checking strong bisimilarity over the saturated systems. Since the computation of the weak transition relation can be carried out in polynomial time (and you should convince yourself of this claim), the problem of checking for weak bisimilarity can also be decided in polynomial time. The\u00a0\u2026", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Applying Concurrency Research in Industry Report on a Strategic Workshop.\n", "abstract": " This article summarizes the main discussion points that were raised during the presentations at the Workshop on Applying Concurrency Research in Industry, co-located with CONCUR 2007 in Lisbon, and the ensuing panel discussion. It also recalls some of the questions that the audience asked the panel members at the workshop and their answers, and presents the views provided by other experienced members of the concurrency-theory community.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "On the existence of a finite base for complete trace equivalence over BPA with interrupt\n", "abstract": " We study Basic Process Algebra with interrupt modulo complete trace equivalence. We show that, unlike in the setting of the more demanding bisimilarity, a ground complete finite axiomatization exists. We explicitly give such an axiomatization, and extend it to a finite complete one in the special case when a single action is present.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "A cancellation theorem for BCCSP\n", "abstract": " This paper presents a cancellation theorem for the preorders in van Glabbeek\u2019s linear time-branching time spectrum over BCCSP. Apart from having some intrinsic interest, the proven cancellation result plays a crucial role in the study of the cover equations, in the sense of Fokkink and Nain, that characterize the studied semantics. The tech-niques used in the proof of the cancellation theorem may also have some independent interest. 1", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Foundations of Software Science and Computational Structures: 9th International Conference, FOSSACS 2006, Held as Part of the Joint European Conferences on Theory and Practice\u00a0\u2026\n", "abstract": " This book constitutes the refereed proceedings of the 9th International Conference on Foundations of Software Science and Computation Structures, FOSSACS 2006, held in Vienna, Austria in March 2006 as part of ETAPS. The 28 revised full papers presented together with 1 invited paper were carefully reviewed and selected from 107 submissions. The papers are organized in topical sections on mobile processes, software science, distributed computation, categorical models, real time and hybrid systems, process calculi, automata and logic, domains, lambda calculus, types, and security.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "A note on an expressiveness hierarchy for multi-exit iteration\n", "abstract": " Multi-exit iteration is a generalization of the standard binary Kleene star operation. The addition of this construct to Basic Process Algebra (BPA) yields a more expressive language than that obtained by augmenting BPA with the standard binary Kleene star. This note offers an expressiveness hierarchy, modulo bisimulation equivalence, for the family of multi-exit iteration operators proposed by Bergstra, Bethke and Ponse.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "Nonfinitely based tropical semirings\n", "abstract": " This paper offers several nonfinite axiomatizability results for tropical semirings. In particular, it is shown that the polar semiring, Mascle's semiring and Simon's original tropical semiring are not finitely based.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "On a Question of Arto Salomaa: The Equational Theory of Regular Expressions over a Singleton Alphabet is not Finitely Based\n", "abstract": " Salomaa ((1969) Theory of Automata, page 143) asked whether the equational theory of regular expressions over a singleton alphabet has a finite equational base. In this paper, we provide a negative answer to this long standing question. The proof of our main result rests upon a model-theoretic argument. For every finite collection of equations, that are sound in the algebra of regular expressions over a singleton alphabet, we build a model in which some valid regular equation fails. The construction of the model mimics the one used by Conway ((1971) Regular Algebra and Finite Machines, page 105) in his proof of a result, originally due to Redko, to the effect that infinitely many equations are needed to axiomatize equality of regular expressions. Our analysis of the model, however, needs to be more refined than the one provided by Conway ibidem.", "num_citations": "1\n", "authors": ["1648"]}
{"title": "A menagerie of non-finitely based process semantics over BPA*: from ready simulation semantics to completed traces\n", "abstract": " Fokkink and Zantema ((1994) Computer Journal 37: 259\u2013267) have shown that bisimulation equivalence has a finite equational axiomatization over the language of Basic Process Algebra with the binary Kleene star operation (BPA\u2217). In light of this positive result on the mathematical tractability of bisimulation equivalence over BPA\u2217, a natural question to ask is whether any other (pre) congruence relation in van Glabbeek\u2019s linear time/branching time spectrum is finitely (in) equationally axiomatizable over it. In this paper, we prove that, unlike bisimulation equivalence, none of the preorders and equivalences in van Glabbeek\u2019s linear time/branching time spectrum, whose discriminating power lies in between that of ready simulation and that of completed traces, has a finite equational axiomatization. This we achieve by exhibiting a family of (in) equivalences that holds in ready simulation semantics, the finest semantics that we consider, whose instances cannot all be proven by means of any finite set of (in) equations that is sound in completed trace semantics, which is the coarsest semantics that is appropriate for the language BPA\u2217. To this end, for every finite collection of (in) equations that are sound in completed trace semantics, we build a model in which some of the (in) equivalences of the family under consideration fail. The construction of the model mimics the one used by Conway ((1971) Regular Algebra and Finite Machines, page 105) in his proof of a result, originally due to Redko, to the effect that infinitely many equations are needed to axiomatize equality of regular expressions.Our non-finite axiomatizability results apply to the language\u00a0\u2026", "num_citations": "1\n", "authors": ["1648"]}
{"title": "A Menagerie of Non-Finitely Based Process Semantics over BPA\n", "abstract": " Fokkink and Zantema ((1994) Computer Journal 37: 259\u2013267) have shown that bisimulation equivalence has a finite equational axiomatization over the language of Basic Process Algebra with the binary Kleene star operation (BPA\u2217). In the light of this positive result on the mathematical tractability of bisimulation equivalence over BPA\u2217, a natural question to ask is whether any other (pre) congruence relation in van Glabbeek\u2019s linear time/branching time spectrum is finitely (in) equationally axiomatizable over it. In this paper, we prove that, unlike bisimulation equivalence, none of the preorders and equivalences in van Glabbeek\u2019s linear time/branching time spectrum, whose discriminating power lies in between that of ready simulation and that of completed traces, has a finite equational axiomatization. This we achieve by exhibiting a family of (in) equivalences that holds in ready simulation semantics, the finest semantics that we consider, whose instances cannot all be proven by means of any finite set of (in) equations that is sound in completed trace semantics, which is the coarsest semantics that is appropriate for the language BPA\u2217. To this end, for every finite collection of (in) equations that are sound in completed trace semantics, we build a model in which some of the (in) equivalences of the family under consideration fail. The construction of the model mimics the one used by Conway ((1971) Regular Algebra and Finite Machines, page 105) in his proof of a result, originally due to Redko, to the effect that infinitely many equations are needed to axiomatize equality of regular expressions. Our non-finite axiomatizability results apply to the\u00a0\u2026", "num_citations": "1\n", "authors": ["1648"]}
{"title": "On the finitary bisimulation\n", "abstract": " The nitely observable, or nitary, part of bisimulation is a key tool in establishing full abstraction results for denotational semantics for process algebras with respect to bisimulation-based preorders. A bisimulation-like characterization of this relation for arbitrary transition systems is given, relying on Abramsky's characterization in terms of the nitary domain logic. More informative behavioural, observation-independent characterizations of the nitary bisimulation are also o ered for several interesting classes of transition systems. These include transition systems with countable action sets, those that have bounded convergent sort and the sort-nite ones. The result for sort-nite transition systems sharpens a previous behavioural characterization of the nitary bisimulation for this class of structures given by Abramsky.", "num_citations": "1\n", "authors": ["1648"]}