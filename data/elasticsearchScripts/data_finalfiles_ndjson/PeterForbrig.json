{"title": "Writing for computer science\n", "abstract": " Writing for Computer Science is an introduction to doing and describing research. For the most part the book is a discussion of good writing style and effective research strategies, with a focus on the skills required of graduate research students. Some of the material is accepted wisdom, some is controversial, and some are my opinions. The book is intended to be comprehensive; it is broad rather than deep, but, while some readers may be interested in exploring topics further, for most readers this book should be sufficient.The first edition of this book was almost entirely about writing. The second edition, in response to reader feedback, and in response to issues that arose in my own experiences as an advisor, researcher, and referee, was additionally about research methods. Indeed, the two topics\u2014writing about and doing research\u2014are not clearly separated: it is a small step from asking how do I write? to asking what", "num_citations": "349\n", "authors": ["586"]}
{"title": "Doing design ethnography\n", "abstract": " Human-Computer Interaction is a multidisciplinary field focused on human aspects of the development of computer technology. As computer-based technology becomes increasingly pervasive-not just in developed countries, but worldwide-the need to take a humancentered approach in the design and development of this technology becomes ever more important. For roughly 30 years now, researchers and practitioners in computational and behavioral sciences have worked to identify theory and practice that influences the direction of these technologies, and this diverse work makes up the field of human\u2013computer interaction. Broadly speaking it includes the study of what technology might be able to do for people and how people might interact with the technology. In this series we present work which advances the science and technology of developing systems which are both effective and satisfying for people in a\u00a0\u2026", "num_citations": "258\n", "authors": ["586"]}
{"title": "Patterns in model-based engineering\n", "abstract": " In this paper we demonstrate how patterns can act as a driving force for the development of interactive applications. As knowledge re-use is becoming more and more crucial, patterns can be an effective tool to represent knowledge of the HCI domain. Using a model-based development methodology, it is shown how patterns can act as building blocks for the establishment of these models. Starting from outlining the general process of pattern application, we discuss how and which patterns are suitable for several models. In particular we discuss the application and use of patterns for the task, dialog and presentation models. Furthermore, we suggest an interface for patterns using \u201cgeneric classes\u201d and give concrete examples to corroborate our approach. This allows for modular patterns reuse and plausible parameter exchange with the underlying system. Tool support is based on XML-representations of\u00a0\u2026", "num_citations": "63\n", "authors": ["586"]}
{"title": "Objektorientierte Softwareentwicklung mit UML\n", "abstract": " Weitere Informationen oder Bestellungen unter http://www. hanser. de/3-446-40572-0 sowie im Buchhandel", "num_citations": "62\n", "authors": ["586"]}
{"title": "Modeling patterns for task models\n", "abstract": " Models allow us to describe complex systems at different abstract and conceptual levels, hence amplify our analytical and problem solving capabilities, However, a lot of human effort and experience is needed to build correct models, and to translate them to concrete artifacts: in our case a usable user interface. This paper introduces the concept of task and pattern models to leverage the process of task modeling, and show how it can help build generic task models, link them, and instantiate them more readily. Once seen as patterns, we will demonstrate that task models can be disseminated and reused more easily by representing them as predefined types.", "num_citations": "54\n", "authors": ["586"]}
{"title": "Multi-devices \u201cMultiple\u201d user interfaces: development models and research opportunities\n", "abstract": " Today, Internet-based appliances can allow a user to interact with the server-side services and information using different kinds of computing platforms including traditional office desktops, palmtops, as well as a large variety of wireless devices including mobile telephones, Personal Digital Assistants, and Pocket Computers. This technological context imposes new challenges in user interface software engineering, as it must run on different computing platforms accommodating the capabilities of various devices and the different contexts of use. Challenges are triggered also because of the universal access requirements for a diversity of users. The existing approaches of designing a single user interface using one computing platform do not adequately address the challenges of diversity, cross-platform consistency, universal accessibility and integration. Therefore, there is an urgent need for a new integrative\u00a0\u2026", "num_citations": "53\n", "authors": ["586"]}
{"title": "Task models as basis for requirements engineering and software execution\n", "abstract": " In this paper we discuss an approach linking GUI specifications to abstract dialog models. Both specifications are based on task models describing behavioral features. It will be shown how first prototypes of interactive systems, which are generated from user interface models, can help to capture requirements. Users can interactively play with prototypes. Tool support is also provided for co-operative work of different users, which starts with abstract canonical prototypes that can evolve to concrete GUI specifications.", "num_citations": "50\n", "authors": ["586"]}
{"title": "Model-based user interface design using markup concepts\n", "abstract": " In the field of model-based development of interactive systems, several approaches have been proposed to integrate task and object knowledge into the development process and its underlying representations. This paper follows such an approach with a special focus on mobile devices. It presents a concept of device independent user interface design based on the XML-technology. The concept is applied to an e-commerce example.", "num_citations": "49\n", "authors": ["586"]}
{"title": "Linking GUI elements to tasks: supporting an evolutionary design process\n", "abstract": " In this paper we discuss an approach for linking GUI specifications to more abstract dialogue models and supporting an evolutionary design process. These specifications are linked to task models describing behavioural characteristics. First prototypes of interactive systems are interactively generated. The automatically generated XUL specifications are refined using a GUI editor, which allows replacing of user interface elements by other elements or components. Components are predesigned parts of user interfaces, and could optionally be parameterised. This enables us to support GUI design using patterns. For illustration we are going to show a design cycle from task model to abstract user interfaces and finally to a concrete user interface. The design process is supported by patterns. Additionally, a proposal is presented of how to keep connections between concrete user interface (CUI), abstract user interface\u00a0\u2026", "num_citations": "48\n", "authors": ["586"]}
{"title": "CTML: Domain and Task Modeling for Collaborative Environments.\n", "abstract": " A precise model of the behavioral dynamics is a necessary precondition for the development of collaborative environments. In this paper we present a specification framework for collaborative environments. In particular we highlight the interplay of task specifications and domain models. The framework consists of two components: A formal specification language (called CTML) and the tool CTML Editor and Simulator. CTML has a precisely defined syntax and semantics and is designed to model actors, roles, collaborative tasks and their dependency and impact on the domain. The CTML Editor and Simulator is an Eclipse IDE for the interactive creation and simulation of CTML specifications.", "num_citations": "45\n", "authors": ["586"]}
{"title": "Practical extensions for task models\n", "abstract": " The current set of temporal operators is insufficient to make effective use of task models as specifications for user interfaces. Moreover, the predominant monolithic task tree structure does not scale well for sizable applications. In order to overcome these shortcomings, a small collection of practical extensions for task models is proposed. In particular, we define new temporal operators (stop, non-deterministic choice, deterministic choice and instance iteration), concepts in support of modularization and a high-level task diagram notation. Finally, we introduce a new concept for expressing cooperative task models that distinguishes between different roles as well as between actors fulfilling these roles.", "num_citations": "45\n", "authors": ["586"]}
{"title": "Towards an integrated approach for task modeling and human behavior recognition\n", "abstract": " Mobile and ubiquitous systems require task models for addressing the challenges of adaptivity and situation-aware assistance. Today, both challenges are seen as separate issues in system development, addressed by different modeling concepts. We propose an approach for a unified modeling concept that uses annotated hierarchical task trees for synthesizing models for both areas from a common basic description.", "num_citations": "43\n", "authors": ["586"]}
{"title": "Multiple user interfaces: Towards a task-driven and patterns-oriented design model\n", "abstract": " The convergence of the Internet, mobile telephony, and handheld technologies has led to the emergence of new kinds of internet-based interactive systems. Such systems can allow a single or a group of users to interact with the server-side services using different kinds of devices. In this technological context, a Multiple User Interface (MUI) refers to an interactive system that provides both multiple views of the information and coordinates the services provided to a user. The desired views are made available on different platforms, operating systems, user interface toolkits and on a large array of devices. Each view should take into account the specific capabilities and constraints of the platform. This paper begins by describing a set of constraints and characteristics intrinsic to multiple user interfaces, and then by examining the impacts of these constraints on the specification, design and validation processes\u00a0\u2026", "num_citations": "41\n", "authors": ["586"]}
{"title": "Support for Task Modeling\u2013A\u201d Constructive\u201d Exploration\n", "abstract": " Although model-based approaches focusing on task modeling for user-interface design are well accepted among researchers, they are rarely used by industrial developers. Besides a lack of theoretical frameworks for task modeling insufficient tool support might be the reason for the low diffusion of this approach to interactive software-development processes. Thus, we explored the leading-edge tools TaOSpec, ProcessLens, and CTTE with respect to the formal representation of work tasks, and the creation of task scenarios. The results reveal that current model-based design approaches should be more conceivable by their users with respect to work tasks and their organization. This objective can be met by embedding scenario-based design elements into current tools, thus, increasing integrative tool and organizational development support.", "num_citations": "39\n", "authors": ["586"]}
{"title": "Towards generic and flexible web services for e-assessment\n", "abstract": " In computer science education, lectures are typically accompanied by exercise courses and/or lab practices are essential for the learning effect since they provide opportunities for students to apply their theoretical knowledge to practical problems. The automatic testing and assessment of assignments in a Web-based environment offers students more learning possibilities (eg, time and location-independent) with immediate feedback and helps teachers to reduce their workload so they can concentrate on issues regarding content and didactics. In this paper we present a generic, flexible, and reusable Web-based system architecture and its implementation for automatic testing of programming assignments and assignments in other formal systems. We also describe our practical experience gathered with this approach in computer science courses at two different universities.", "num_citations": "37\n", "authors": ["586"]}
{"title": "PIM Tool: Support for pattern-driven and model-based UI development\n", "abstract": " Model-based approaches describe the process of creating UI models and transforming them to build a concrete UI. Developers specify interactive systems on a more abstract and conceptual level instead of dealing with low level implementation. However, specifying the various models is a complex and time consuming task. Pattern-based approaches encapsulate frequently used solutions in form of building blocks that developers may combine to create a user interface model. Thus they enforce reuse and readability and reduce complexity. In this paper we present a comprehensive framework that unites model-based and pattern-driven approaches. We introduce the \u201cPatterns In Modelling\u201d (PIM) tool, that implements this framework. We will demonstrate the functioning of the tool by using an illustrative example. We primarily focus on the creation of the task model and give a brief outlook how patterns will be\u00a0\u2026", "num_citations": "37\n", "authors": ["586"]}
{"title": "Patterns in task-based modeling of user interfaces\n", "abstract": " The development of user interfaces is influenced by various challenges in recent years. These are foremost caused by increasing complexity of the underlying applications and the use of these applications on different devices, by different user types and in changing environments. Model-based user interface development approaches have been shown to be suitable to face these challenges. However, creating, transforming and linking the various included models are complex tasks. Employing patterns can avoid these disadvantages and provide an advanced concept of reuse. In this paper a general framework is introduced that describes how model-based approaches can be extended with patterns. The implementation of the framework is exemplarily shown in order to derive a concrete pattern-driven model-based approach for user interface development. A case study is used to illustrate the derived\u00a0\u2026", "num_citations": "36\n", "authors": ["586"]}
{"title": "Lehr-und \u00dcbungsbuch Informatik\n", "abstract": " Weitere Informationen oder Bestellungen unter http://www. hanser. de/3-446-21511-5 sowie im Buchhandel", "num_citations": "33\n", "authors": ["586"]}
{"title": "Rapid task-models development using sub-models, sub-routines and generic components\n", "abstract": " Whilst task models are perceived as critical artifacts within User Centered Design methods, task models development is often considered as a resource and time consuming activity. Structuring techniques can support handling issues such as reuse and scalability and can improve analysts\u2019 productivity and the overall quality of models. In this paper we propose (based on the notation of the HAMSTERS project) several means to structure task models and present how they can be used in order to increase reusability and scalability in task models. Besides sub-models and sub-routines, generic components are described. These mechanisms are duly illustrated within a project for the ground segments of satellite missions. This paper shows, by example, how such elements look like and how both readability and quality of models is improved by their use.", "num_citations": "32\n", "authors": ["586"]}
{"title": "The influence of improved task models on dialogues\n", "abstract": " Model-based approaches support a flexible design process and the development of consistent device-dependent applications. However, their full strength can only be achieved by expressive sub-models allowing to capture conceptual knowledge as early as possible. In this paper we demonstrate how improvements to task models, which can be seen as the heart of model-based techniques, help to develop more appropriate models and prototypes of user interfaces (UIs).", "num_citations": "26\n", "authors": ["586"]}
{"title": "A Concerted Model-driven and Pattern-based Framework for Developing User Interfaces of Interactive Ubiquitous Applications.\n", "abstract": " Modeling and building interactive user interfaces (UI) typically requires the skills of software developers and HCI experts who cooperate with platform and marketing experts in order to arrive at solutions with the required software quality, usability, and user experience. The combination of model-driven user interface development practices with pattern-based approaches that specify HCI-and softwarepatterns in a formalized way and respect emerging standards offers potentialities to facilitate and at least partially automate the user interface development process, therefore reduce the time-to-market and development costs, and lead to solutions that can easily be adapted to varying contexts and target devices. Such pattern-aided UI adaptation is not limited to design time decisions but can also be applied during runtime. This paper highlights the architecture and capabilities of the Pattern-Based Modeling and Generation of Interactive Systems (PaMGIS) framework to broadly support the construction and adaptation of user interface models. It is discussed, how pattern descriptions that capture important parts of the design knowledge should be organized in order to be automatically processed during the modeling process.", "num_citations": "25\n", "authors": ["586"]}
{"title": "Getting SW engineers on board: Task modelling with activity diagrams\n", "abstract": " This paper argues for a transfer of knowledge and experience gained in task-based design to Software Engineering. A transformation of task models into activity diagrams as part of UML is proposed. By using familiar notations, software engineers might be encouraged to accept task modelling and to pay more attention to users and their tasks. Generally, different presentations of a model can help to increase its acceptance by various stakeholders. The presented approach allows both the visualization of task models as activity diagrams as well as task modelling with activity diagrams. Corresponding tool support is presented which includes the animation of task models. The tool itself was developed in a model-based way.", "num_citations": "24\n", "authors": ["586"]}
{"title": "Patterns in model-based development\n", "abstract": " In this paper, we are exploring the roles of patterns in model-based design. In particular, we discuss the fundamental concepts underlying a generic notation for task patterns. Different views of patterns are suggested using UML and Concurrent Task Tree notations. A first classification of patterns according to models is also suggested.", "num_citations": "23\n", "authors": ["586"]}
{"title": "Continuous software engineering with special emphasis on continuous business-process modeling and human-centered design\n", "abstract": " During the last decades several trends have been recognized. An important one is the success of agile development methods. Another one is the increased importance of modeling. Specification languages like UML, BPMN or S-BPM gained a lot of attention and are applied in most projects currently. Additionally, a shifting focus from Technology-Driven Design to Human-Centered Design can be recognized. The paper discusses the existing idea of Continuous Software Engineering that extends traditional software engineering methods by business-administration approaches. It provides the idea of including maintenance into the life-cycle development. Business strategies and software development have to be integrated and have to be supported as a continuous process.", "num_citations": "21\n", "authors": ["586"]}
{"title": "Task model-based usability evaluation for smart environments\n", "abstract": " Task models are widely used within the research field of HCI for the model-based development of interactive systems. Recently introduced approaches applied task models further to model the cooperative behavior of people using devices within a smart environment. We describe a method of model-based usability evaluation to evaluate interactive systems, with a particular focus on smart environments, which are developed based on task models. We consider the evaluation in early development stages to interactively walk through the models and in later stages to execute a test case within a real environment. The paper provides results of a prototypical implementation.", "num_citations": "21\n", "authors": ["586"]}
{"title": "From Models to Interactive Systems Tool Support and XIML.\n", "abstract": " From Models to Interactive Systems Tool Support and XIML Page 1 From Models to Interactive Systems Tool Support and XIML Peter Forbrig, Anke Dittmar, Daniel Reichart, Daniel Sinnig Software Engineering Group D epartment of Computer Science,University of Rostock, D-18051 Rostock, Germany [pforbrig|ad|dreichart|dsinnig]@informatik.uni-rostock.de Transformation by patterns class diagramm task mode l user model b. -object model device model class diagramm Transformation Implementation dialogue graph abstract user interface application model dialogue model Design Design Transformation by patterns Transformation by patterns class diagram task model l use model b.-object model device model class diagram Transformation Implementation dialog graph abstract user interface application model user interface model Design Design Design Transformation by patterns Design Transformation by patterns \u2026", "num_citations": "21\n", "authors": ["586"]}
{"title": "Higher-order task models\n", "abstract": " Based on a revision of the common task understanding in model-based approaches a formal meta-model is proposed which allows more expressive task descriptions. A task is considered as a meta-action which produces models about situations, goals and actions by applying domain knowledge. The approach unifies procedural and state knowledge. As a consequence, higher-order actions are possible. The suggested approach is an answer to the need for more dynamic task models. It supports specifications of context sensitive and cooperative tasks.", "num_citations": "21\n", "authors": ["586"]}
{"title": "Programming with patterns\n", "abstract": " Language support for object-oriented programming with patterns is provided. Thereby, designs making use of design patterns can be implemented in a more direct and traceable way. The essential language constructs are nested classes and a kind of superposition for class structures. A corresponding experimental programming language PaL is discussed. The current implementation is based on a compilation to Eiffel. A library covering the 23 GoF patterns has been developed in PaL. To be able to capture reuse schemes for patterns, a new form of abstraction is introduced. A non-trivial drawing application has been developed as a case study for programming with patterns.", "num_citations": "20\n", "authors": ["586"]}
{"title": "Task-and Object-Oriented Development of Interactive Systems\u2014How many models are necessary?\n", "abstract": " In the field of model-based development of interactive systems, several approaches have been proposed to integrate task and object knowledge into the development process and its underlying representations. Within the paper different types of models are classified according to their importance for the development process. The relation between existing, envisioned and programming models are discussed and a task driven approach for object-oriented programming is suggested.", "num_citations": "20\n", "authors": ["586"]}
{"title": "ObSys-a Tool for Visualizing Usability Evaluation Patterns with Mouseirtaps\n", "abstract": " This paper presents mousemaps, multidimensional visualizations of user interactions with software systems. The source for that visualizations are data that are recorded with the event recorder ObSys. On the one hand mousemaps are proper for enhancing the effectiveness of video analyses, on the other hand it is possible to empower the efficiency of video analyses by focusing automatically critical situations. Furthermore mousemaps can substitute video analyses because the visualization offers most of the interaction information on a two-dimensional view without the need to watch video material. The low level data recorded by ObSys allow the recognition of\u00bb mouse gestures \u00abthat are characteristically for certain usability problems. Automating the analyses of usability testing sessions by applying usability evaluation patterns without the need of modeling information as required for other automating tools becomes possible.", "num_citations": "19\n", "authors": ["586"]}
{"title": "Managing the agile process of human-centred design and software development\n", "abstract": " The paper provides and discusses a life cycle model for agile software development methods like SCRUM. The process model integrates the idea of Human-Centred Design (HCD) in the agile approach. Based on the discussion of existing life cycle models and known process patterns, a process model is discussed that combines the advantages of HCD and SCRUM. The SCRUM process model was used in the discussion to be as concrete as possible. However, the suggested approach is applicable to other agile process models as well.", "num_citations": "18\n", "authors": ["586"]}
{"title": "Deriving user interfaces from task models\n", "abstract": " This position paper presents our view on model driven user interface development and relates it to other approaches. Our methodology is based on task models that are attributed and merged with a navigational model to derive user interface models. A toolset to support this development approach is introduced which is well-integrated and itself based on the eclipse modeling framework EMF.", "num_citations": "18\n", "authors": ["586"]}
{"title": "Extended features of task models for specifying cooperative activities\n", "abstract": " In this paper, an extended version of task models is discussed that allows detailed specifications of cooperative activities. Within the presented specification CoTaL (Cooperative Task Language), there exist two complementary types of task models called role model and team model. One or more instances of each role model describe the specific activities of actors. The team model represents joined activities and reflects progression in cooperation between role instances. For each scenario there exists one instance of the team model. Preconditions and events can be assigned to tasks and refer to one or all running instances of a role model. An event can be a starting or finishing trigger and is activated as result of task executions. Additionally, variables can be defined. They are bound within the specified context during runtime and get the value of the identifier of a certain role instance. In this way, communication and\u00a0\u2026", "num_citations": "17\n", "authors": ["586"]}
{"title": "Patterns, Tools and Models for Interaction Design.\n", "abstract": " In recent years the re-use of already existing solutions and ideas has become more and more crucial. Re-inventing the wheel over and over again is not feasible. Especially model based development approaches suffer from the lack of libraries populated with existing solutions and ideas which must just be tweaked in order to applicable to different context of use. Patterns have the potential to overcome this major shortcoming. In this paper we will try to stimulate and foster to idea of transferring the idea of patterns to the model-based development community. We will introduce patters as medium to capture ideas and solutions within the domain of model based design.Moreover the lack of tool support has led to situation that model\u2013based approaches have not been fully acknowledge by the developers of interactive applications. In recent years a set of tools has been developed in our group, which the developer with the establishment of the various models. Therefore In the following we will introduce our model\u2013based philosophy and the possible application and impact of patterns for each of our models. Moreover we will briefly introduce some of our tools and ideas which might be helpful with the creation of the various models.", "num_citations": "17\n", "authors": ["586"]}
{"title": "Formal pattern specifications to facilitate semi-automated user interface generation\n", "abstract": " This paper depicts potentialities of formal HCI pattern specifications with regard to facilitate the semi-automated generation of user interfaces for interactive applications. In a first step existing proven and well accepted techniques in the field of model-based user interface development are highlighted and briefly reviewed. Subsequently it is discussed how we combine model-based and pattern-oriented methods within our user interface modeling and development framework in order to partly enable automated user interface generation. In this context a concrete pattern definition approach is introduced and illustrated with tangible examples from the domain of interactive knowledge sharing applications.", "num_citations": "16\n", "authors": ["586"]}
{"title": "Pattern-based UI design: adding rigor with user and context variables\n", "abstract": " In current practice, user interface development is often based on a vague and undocumented design process, relying solely on the designer\u2019s experience. This paper defines a pattern-based design process, which adds rigor to user interface design. The process is based on the notion of user variables to capture user requirements in a formal manner \u2013 based on discrete values that are amenable for tool support and automated analysis. Other context of use information is captured as context variables. Using these values as input, design patterns are selected to leverage best design practices directly into user interface development. Pattern-Oriented Design is then employed to derive a conceptual design, or early prototype, of the user interface. A case study with a Bioinformatics information site exemplifies the feasibility and applicability of this process.", "num_citations": "16\n", "authors": ["586"]}
{"title": "A case study of software engineering methods education supported by digital game-based learning: Applying the SEMAT Essence kernel in games and course projects\n", "abstract": " Software Engineering (SE) education shapes the perspectives taken by future software engineers. SE processes/methods represent an important knowledge area demanded by industry and curriculum guidelines but belong to those knowledge areas, which are challenging to be taught intuitively accessible. Just providing islands of knowledge is not sufficient in SE education. It has to provide students with the ability to focus on details demanded by stakeholders, technology, and the project environment but to keep a holistic view of the SE endeavor at the same time. To develop demanded competencies - knowledge, skills, and attitudes - SE education has to enable learning experiences where concepts, methods, and tools are perceived as actually supportive, providing orientation and guidance. Taking the high and increasing number of varying existing SE processes/methods into account, the knowledge provided\u00a0\u2026", "num_citations": "15\n", "authors": ["586"]}
{"title": "Modeling and formally checking workflow properties using UML and OCL\n", "abstract": " In this paper, a new metamodel for workflows is described by using UML. The underlying UML class diagram is formally extended with OCL pre- and postconditions for operations and OCL invariants for system states. The metamodel allows the developer to specify processes, activities in processes and temporal relations between them. Known workflow patterns are formally captured in the metamodel and sophisticated temporal relations between activities can be expressed easily. Development of workflow models is explained as well as process instantiation and process execution on the basis of a tool realizing parts of the UML action semantics. Prototypical process execution and animation allows the designer to discover properties of the designed processes and activities in early phases of the development without the need for building a full implementation.", "num_citations": "15\n", "authors": ["586"]}
{"title": "Supporting ambient environments by extended task models\n", "abstract": " Task models are able to specify the behavior of actors in ambient environments in a compact and readable form. Their original notations have to be extended to meet the requirements in this context. The corresponding tool support has to be flexible in terms of integrating domain concepts rapidly. We propose a model-based approach for tool support of task model editors. By doing so, new modeling concepts can be introduced easily. Thus task models can be extended and provide a basis for analysis and high level design for a wide spread of domains. We fortify our approach by an example in the domain of AmI.", "num_citations": "15\n", "authors": ["586"]}
{"title": "Tool Support for Model-Based Generation of Advanced User Interfaces.\n", "abstract": " A lot of research and work has been done in the past, to develop XML based user-interface definition languages. Also languages to describe graphics and animations were created.", "num_citations": "15\n", "authors": ["586"]}
{"title": "PEICS: towards HCI patterns into engineering of interactive systems\n", "abstract": " Despite intense research activities in the last years, HCI patterns still lack in a standardized description and organization. This makes it difficult for the developers to identify the relevant patterns for solving a problem as well as to apply them accordingly to the problem context. To fully benefit from HCI patterns within the engineering of interactive computer systems they have to be prepared for integration into a model-based user interface development process. This workshop on Pattern-driven Engineering of Interactive Computer Systems (PEICS) focuses on bringing together various research approaches in order to be conjointly conductive to the state of the art. We present contributions according to semantics, formalization, languages, support, research directions as well as tools.", "num_citations": "14\n", "authors": ["586"]}
{"title": "Task-based design revisited\n", "abstract": " This paper investigates the role of task modeling in model-based design. It is shown that task models are mainly used to support a specification-driven design process. Models about current task situations and more specific task descriptions play a marginal role. Task sketching is proposed to complement specification-driven modeling activities. The co-development of representations of current and envisioned practices is encouraged to support a shared design understanding and creativity. A detailed example illustrates basic ideas. Task models are represented in HOPS. Advantages of this specification formalism over conventional task modeling are shown with respect to task sketching. Models can be combined with illustrations, narratives or other design material at different levels of abstraction. Animations of enriched models help to explore the design space.", "num_citations": "14\n", "authors": ["586"]}
{"title": "Tool support for representing task models, dialog models and user-interface specifications\n", "abstract": " This paper focuses on the visualization of task models. Models in general can be presented in different ways. We focus on tool support for different editors working on the same instance of a task model.", "num_citations": "14\n", "authors": ["586"]}
{"title": "Patterns for task-and dialog-modeling\n", "abstract": " The term Context of Use has been treated with much attention in HCI in recent years. In this paper, the integration of context information into task models will be described. The notion of context is formulated and used to annotate the task model. The reuse of such context-sensitive task models in light of task patterns is also examined.", "num_citations": "14\n", "authors": ["586"]}
{"title": "Tool support for an evolutionary design process using patterns\n", "abstract": " Within the software engineering community it is widely accepted that design patterns are very helpful to develop well-structured software. The same kind of support is expected of HCI-Patterns. In this paper we discuss an approach integrating the usage of patterns into a model-based development process. A GUI-editor is presented that has been extended by features allowing the application instances of user interface patterns. As an example the pattern of a wizard is used to improve an existing user interface by manipulating different models (UI and dialog model).", "num_citations": "14\n", "authors": ["586"]}
{"title": "Maintenance support: case study for a multimodal mobile user interface\n", "abstract": " Maintaining and repairing complex technical facilities such as  generating plants requires comprehensive knowledge on subsystems,  operational and safety procedures by the technician. Upgrades to  the facility may mean that knowledge about these becomes outdated,  raising the need for documentation at the working site. Today's  commonplace availability of mobile devices motivates the use of  digital, interactive manuals over printed ones. Such applications  should provide high-quality illustrations and interaction  techniques tailored for specific tasks, while at the same time  allow flexible deployment of these components on a multitude of  (mobile) hardware platforms. This includes the integration of  multimodal interaction facilities like speech recognition into the  user interface. To meet these demands, we propose a model-based  approach that combines task, object and dialog models to specify  platform\u00a0\u2026", "num_citations": "14\n", "authors": ["586"]}
{"title": "TTMS: A task tree based workflow management system\n", "abstract": " In this paper, an approach to use task trees in a workflow management system (WfMS) is presented. As hierarchical models task trees capture several hierarchy levels of a workflow in one model. A workflow editor visualizes the models also as flowcharts similar to UML activity diagrams. The WfMS use these models as input and instantiates and executes them. The system is web-based and can be easily accessed by users with any browser clients. This paper motivates the approach to use task trees that produce hierarchical and structured workflow specifications. The proposed language might help end-users to better understand workflow models with its problem oriented hierarchical modeling character. Temporal operators from the task models are compared with certain operators from established workflow languages. In addition, in TTMS an instantiation time concept is implemented, where decision\u00a0\u2026", "num_citations": "13\n", "authors": ["586"]}
{"title": "Task model refinement with meta operators\n", "abstract": " In model-based user interface (UI) development task models are successively refined into more detailed task specifications. To ensure that analysis information is correctly translated into requirements and design artifacts it is important to verify that for each transformation step the derived task model is a valid refinement of its base specification. In this paper we present a versatile refinement relation between task models based on the principle of mandatory scenario equivalence. Which scenarios are mandatory is determined by metaoperators. These operators are assigned to tasks by the requirements engineer depending on the role of the task model in the development lifecycle.", "num_citations": "13\n", "authors": ["586"]}
{"title": "HCI patterns as a means to transform interactive user interfaces to diverse contexts of use\n", "abstract": " This paper introduces a pattern-based method for transformation of user interfaces of interactive applications to diverse contexts of use. The method is demonstrated with the help of various examples taken from existing software solutions. The related pattern transformation rules are derived from the samples and in turn expressed in a pattern format, the so-called transformation patterns.", "num_citations": "12\n", "authors": ["586"]}
{"title": "Vise\u2013a virtual smart environment for usability evaluation\n", "abstract": " Within the research field of HCI task models are widely used for model-based development of interactive systems. Recently introduced approaches applied task models further to model cooperative behaviour of people interacting in smart environments. However there is a lack of usability methods to support the needs of evaluations during a model-based development process for smart environments. Particularly during early stages of development building a prototypical environment for user evaluations is resource consuming. To overcome the challenges we present a process model and according tool support. We provide the virtual smart environment ViSE to conduct expert evaluations and user studies during a user-centred design process, supporting iterative evaluations.", "num_citations": "12\n", "authors": ["586"]}
{"title": "Integration of usability evaluation and model-based software development\n", "abstract": " Model-based software development is carried out as a well defined process. Depending on the applied approach, different phases can be distinguished, e.g. requirements specification, design, prototyping, implementation and usability evaluation. During this iterative process manifold artifacts are developed and modified, including, e.g. models, source code and usability evaluation data. CASE tools support the development stages well, but lack a seamless integration of usability evaluation methods. We aim at bridging the gap between development and usability evaluation, through enabling the cooperative use of artifacts with the particular tools. As a result of integration usability experts save time to prepare an evaluation and evaluation results can be easier incorporated back into the development process. We show exemplary our work on enhancing the Eclipse framework to support usability evaluation for task\u00a0\u2026", "num_citations": "12\n", "authors": ["586"]}
{"title": "Agent-based architecture for interactive system design: Current approaches, perspectives and evaluation\n", "abstract": " This paper proposes a survey concerning agent-based architectures of interactive systems. This survey is focused on certain models and perspectives. Indeed, general agent-based architectures are first presented. Then agent-based approaches dedicated to CSCW systems are reviewed. The appearance of web services requires new agent-based approaches; basic ideas are introduced. Agent-based interactive systems necessitate new tools for their evaluation; an example of representative evaluation tool is presented.", "num_citations": "12\n", "authors": ["586"]}
{"title": "A programming language for design patterns\n", "abstract": " Design patterns are widely used in object-oriented design. The application of design patterns in programming, however, is usually based on manual implementation in an ordinary object-oriented programming language resulting in problems like the lack of encapsulation, traceability and reusability of the patterns. We present a design pattern oriented programming model as an extension of the object oriented programming model. The model copes with the specification and application of patterns and it is supported by a programming language PaL. The expressive power is gained by supporting a certain kind of superposition for class structures surpassing standard methods of reuse such as inheritance, genericity and composition.", "num_citations": "12\n", "authors": ["586"]}
{"title": "Tool-support for pattern-based generation of user interfaces\n", "abstract": " This paper introduces the structural and functional architecture of a framework for pattern and model-based automated design of interactive systems. It discusses the various steps and the pattern and modeling resources used by the development process. The framework exploits a broader than usual view on software patterns and provides comprehensive tool support for designing generic and context-specific pattern languages containing pattern categories for all phases and abstraction levels of the life-cycle for the usage-centered design of user interfaces.", "num_citations": "11\n", "authors": ["586"]}
{"title": "Task-based development methodology for collaborative environments\n", "abstract": " The paper presents a task-based development methodology for collaborative applications. According to our methodology a collaborative task model may be used during analysis, requirements and design. In order to ensure that analysis information is correctly translated into subsequent development phases a refinement relation is proposed supporting the incremental development of task specifications. The development methodology is exemplified by a case study in which interactive support for a conference session is developed.", "num_citations": "11\n", "authors": ["586"]}
{"title": "HCI-task models and smart environments\n", "abstract": " The paper discusses the idea of using HCI-task models to support smart environments. It introduces a collaborative task modeling language CTML that allows the specification of collaboration and comprehensive dependencies in an OCL-like style. Additionally some ideas are presented that allow informing users and usability experts about the state of actors within smart environments. The paper provides the first results of a prototypical implementation.", "num_citations": "11\n", "authors": ["586"]}
{"title": "A unified description formalism for complex HCI-systems\n", "abstract": " This paper introduces higher-order processes as a means to describe complex human-computer interaction systems by integrating different HCI theories. A higher-order process consists of components, which are (sub-)processes themselves. The behaviour of a process results from the behaviour of its components and their interaction. While processes at the lowest level describe the essential units of a system, higher-level processes focus on the way their components interact and produce a new kind of behaviour. Such a behaviour can roughly be characterized as 'more planned'. We further propose a convenient specification formalism for higher-order processes based on partial equations.", "num_citations": "11\n", "authors": ["586"]}
{"title": "User-Centered Design and Abstract Prototypes\n", "abstract": " A user-centred design approach in combination with a tool-supported development of abstract prototypes is proposed. Based on task, object and user models an editor for modelling the navigation structure of a user interface as a dialogue graph is demonstrated. This editor is based on the XIML technology and allows simulations considering temporal relations between task and design decisions for the dialogue graph.", "num_citations": "11\n", "authors": ["586"]}
{"title": "A textual domain specific language for task models: generating code for CoTaL, CTTE, and HAMSTERS\n", "abstract": " Task modeling is a fundamental activity in the model-based design of user interfaces (MB-UID). It is supported by various task notations and tools which allow users, for example, to edit and to animate task models. Most of the tools offer graphical editors. While it is commonly believed that graphical notations and an interactive specification of task models is to be preferred to textual specifications, there are also drawbacks to this approach. For instance, it is more difficult to sketch first ideas or to switch between different modeling tools although existing task notations for MB-UID share many concepts. The paper presents a text-based domain-specific language called DSL-CoTaL for writing task specifications. It integrates essential concepts from existing approaches such as hierarchical task decomposition, temporal constraints between subtasks, collaborative tasks, and generic task components. DSL-CoTaL comes\u00a0\u2026", "num_citations": "10\n", "authors": ["586"]}
{"title": "Practical aspects of pattern-supported model-driven user interface generation\n", "abstract": " Today, highly interactive software has become a crucial ingredient of the daily life. Rapidly evolving technologies and simultaneously increasing user demands make human-computer interaction (HCI) more and more a major criterion for the judgement on success or non-success of software and electronic devices. Contemporary users expect that software products run on a variety of heterogeneous devices with a consistent look and feel, invariable high usability, and a high degree of appealing user experience. In addition, people tend to be impatient and like to have their applications contemporaneously available on their different devices. In order to meet these requirements we have combined a model-driven user interface development process with pattern-based methods in order to realize the best possible reuse when constructing models which subsequently serve as basis for at least semi-automatic\u00a0\u2026", "num_citations": "10\n", "authors": ["586"]}
{"title": "Selective modeling to support task migratability of interactive artifacts\n", "abstract": " Selective modeling is suggested as a technique that encourages designers to mix exploratory, analytical, and empirical design activities in interaction design. The co-development of models and prototypes of interactive systems is proposed to support a better balance between formal and explorative design approaches. Models serve to inform design decisions but also to analyze emerging alternatives of prototypical implementations.                 Task migratability is a usability design principle that describes how control for task execution is transferred between system and user. Refined flexible task allocation is rarely achievable through pure top-down decomposition as used in many model-based approaches. The paper shows at the example of HOPS models how selective modeling can be applied to develop prototypes in a deliberated evolutionary way by using models to express different viewpoints and to\u00a0\u2026", "num_citations": "10\n", "authors": ["586"]}
{"title": "Different kinds of pattern support for interactive systems\n", "abstract": " This paper discusses two different approaches for using different kinds of patterns and the corresponding tool support aiming at pattern-supported model transformations. The patterns include GoF design patterns and task patterns.", "num_citations": "10\n", "authors": ["586"]}
{"title": "Towards a formal task-based specification framework for collaborative environments\n", "abstract": " A precise model of the behavioral dynamics involved in collaborative environments is a necessary precondition for the development of smart, proactive user interfaces (UIs). In this chapter, we present a formal task-based specification framework for collaborative environments. The framework consists of two components: A formal specification languages (called CTML) and a tool for editing and animating CTML specifications. The former has a formally defined syntax and semantics and is designed to model actors, roles, and their collaborative tasks. The latter is an Eclipse IDE for the interactive creation and simulation of CTML specifications.", "num_citations": "10\n", "authors": ["586"]}
{"title": "Methodological and tool support for a task-oriented development of interactive systems\n", "abstract": " In this paper, a model-based approach is introduced which allows beginning with the development of task and domain models a semi-automated generation of prototypes of user-interfaces.", "num_citations": "10\n", "authors": ["586"]}
{"title": "Generic components for BPMN specifications\n", "abstract": " The paper introduces generic components to BPMN that reduce modelling efforts and ensure higher quality of specifications. The idea is transferred from task models to business process models. Some of the introduced components can be considered as patterns. Therefore, the paper discusses different views on patterns and their relations to reusable generic component. Additionally, different strategies for adaptation like design time adaptation and runtime adaptation of components are discussed. Parameter substitution is supported best by tools. Requirements for such support are finally collected and discussed.", "num_citations": "9\n", "authors": ["586"]}
{"title": "User-oriented accessibility patterns for smart environments\n", "abstract": " One of the main indicators concerning the usability of an application is the corresponding level of accessibility provided by this application. Although a lot of work has been done in the software engineering domain, the accessibility problem has not been enough tackled in the HCI area. In this paper we present an idea to resolve the user-related accessibility problems since the modeling stage of smart environment applications while being assisted by patterns. The proposed idea is to provide two generic patterns used for any accessibility modeling problem, and additionally the creation of two pattern libraries presenting concrete solutions for the most common user-based accessibility problems.", "num_citations": "9\n", "authors": ["586"]}
{"title": "Human-Computer Interaction-INTERACT 2009\n", "abstract": " Human-Computer Interaction - INTERACT 2009 - NASA/ADS Now on home page ads icon ads Enable full ADS view NASA/ADS Human-Computer Interaction - INTERACT 2009 Gross, Tom ; Gulliksen, Jan ; Kotz\u00e9, Paula ; Oestreicher, Lars ; Palanque, Philippe ; Prates, Raquel Oliveira ; Winckler, Marco Abstract Publication: Lecture Notes in Computer Science Pub Date: 2009 DOI: 10.1007/978-3-642-03655-2 Bibcode: 2009LNCS......G Keywords: Computer Science; User Interfaces and Human Computer Interaction; Information Systems Applications (incl.Internet); Artificial Intelligence (incl. Robotics); Computers and Education; Computers and Society; Software Engineering full text sources Publisher | \u00a9 The SAO/NASA Astrophysics Data System adshelp[at]cfa.harvard.edu The ADS is operated by the Smithsonian Astrophysical Observatory under NASA Cooperative Agreement NNX16AC86A NASA logo Smithsonian \u2026", "num_citations": "9\n", "authors": ["586"]}
{"title": "Using task modelling concepts for achieving adaptive workflows\n", "abstract": " Business processes are usually described by abstract workflow specifications. However, existing workflow descriptions are often too restricted to reflect the true nature of work. For instance tasks might be added or deleted during execution. The presently available workflow management systems insufficiently support the desired flexibility for workflows. In this article we present an approach, how certain kinds of adaptability can be achieved on the base of task modelling combined with the principle of \u201dOrder & Supply\u201d. Task models offer means to describe the way humans perform tasks in cooperation focussing on the individual level. We show that the principles of task modelling can also be used for cooperative workflow models providing means on group level.", "num_citations": "9\n", "authors": ["586"]}
{"title": "Adaptive Task Modelling: From Formal Models to XML Representations\n", "abstract": " What does it mean for software designers to be more aware of the context of use? First, they have to analyze thoroughly the situations under which the interactive application will be executed. This analysis should consider the variety of tasks users want to perform with the aid of the interactive system, as well as the variety of environments under which tasks must be performed. Questions such as \u201cWhich platform is available in a certain task situation?\u201d must be considered. Secondly, designers must ensure that the designed system shows a reasonable behavior in specific situations of use on different platforms. This chapter shows that research results of model-based approaches can serve as a useful basis for the development of context-aware applications. We start with a short introduction to model-based development of interactive systems and to some important ideas about task modelling. Then, we consider new kinds of applications and the requirements that emerge with them. A design process which can better", "num_citations": "9\n", "authors": ["586"]}
{"title": "Model-based Development of Nomadic Applications\n", "abstract": " A model-based approach for applications on different platforms is proposed. Based on task, object and user models an editor for modelling the navigation structure of a user interface as a dialogue graph is demonstrated. This editor is based on the XIML technology and allows simulations considering temporal relations between task and design decisions for the dialogue graph.", "num_citations": "9\n", "authors": ["586"]}
{"title": "The complicity of model-based approaches and patterns for ui engineering\n", "abstract": " Starting from some general considerations, we will outline different kinds of patterns that can impact the creation of the task model. We will then introduce a 4-part \u201cstrategy\u201d about the process of pattern application followed by an analysis about what a formal notation for patterns for the task model should encapsulate. In particular, we discuss the fundamental concepts underlying a generic notation for patterns. By using task patterns, different views of patterns are suggested using UML and Concurrent Task Tree notations. A first classification of patterns according to models is also drawn. Finally, we will introduce a tool that acts as a wizard and guides pattern users throughout the process of pattern application.", "num_citations": "9\n", "authors": ["586"]}
{"title": "BizDevOps and the role of S-BPM\n", "abstract": " Recently discussed software development approaches are characterized by agility. New increments of software are developed in relatively short cycles. While previously new versions of software were delivered after several months, nowadays this happens sometimes daily. Tool chains that ensure quality attributes are needed for this purpose. They are classified as DevOps tools. The paper discusses an even broader approach that includes business process modelling activities. It can be characterized with the term BizDevOps. It has a lot of similarities with the idea of\" Continuous Software Engineering\". Additionally, it is discussed how subject-oriented modelling by S-BPM or task models can be used in this context. The domain specific language DSL-CoTaL is demonstrated as candidate for communications with domain experts.", "num_citations": "8\n", "authors": ["586"]}
{"title": "SitAdapt: an architecture for situation-aware runtime adaptation of interactive systems\n", "abstract": " New technologies for monitoring biological and visual user data can be exploited to determine the current and changing emotional user states in HCI. This paper discusses SitAdapt, a flexible software architecture for situation analytics that evaluates various visual and biological signals and synchronizes them with eye-tracking and application meta-data in order to arrive at sound decisions for runtime adaptation of the interactive system in use. The SitAdapt system accesses the tools and resource repositories of the model- and pattern-based PaMGIS development framework.", "num_citations": "8\n", "authors": ["586"]}
{"title": "Reuse of models in S-BPM process specifications\n", "abstract": " In software engineering it is commonly accepted that reuse of code is very important for productivity and quality. Generic components are one approach that helps in the reuse of already implemented knowledge. Generic components are already available in certain modeling languages (eg UML generic classes). However, there is next to no tool support for working with instances of generic components within those editors. This paper presents some ideas regarding how generic components could be introduced to S-BPM. Some of these components can be considered as patterns. Therefore, the paper discusses different views on patterns and their relations to reusable generic component. Additionally, different strategies for adaptation like design time adaptation and runtime adaptation of components are discussed. Requirements for support are finally collected and discussed.", "num_citations": "8\n", "authors": ["586"]}
{"title": "Pattern Driven Task Model Refinement\n", "abstract": " Task models have been used as a tool to elicit requirements in the early development stages. Moreover, they have recently proved to be a suitable starting point for modeling of interactive processes. During the different development stages several corresponding task models are built. Although every model is just a refined version from the previous one, this refinement process is not a trivial operation as a lot of rules and restrictions have to be respected in order to successfully infer the suitable task model concerning the current level of abstraction. In this paper we aim to assist the developer by giving him the opportunity to move with a given model from one abstraction level to another one in an easier and more seamless way. Thus, we present an approach consisting of some guideline patterns which help the developer to transform a given task model between the different development stages in a more\u00a0\u2026", "num_citations": "8\n", "authors": ["586"]}
{"title": "Making task modeling suitable for smart environments\n", "abstract": " The complicity of context information and task performance of actors in smart environment is demanding in terms of analysis, modeling and utilization. This paper proposes a task-based modeling approach, namely CTML, suitable for requirement stage of development to gain insight about the envisioned way tasks are performed. Additionally those models can be further employed to start-off the design phase of development which is also shown in the paper. Hence formal methods are employed to make CTML more amenable for software engineers due to its superior expressiveness.", "num_citations": "8\n", "authors": ["586"]}
{"title": "Using HCI-Patterns with Model-based Generation of Advanced User-Interfaces.\n", "abstract": " In the HCI community a number of pattern catalogues were created during the last years. Due to the nature of such patterns they are often described high-level and abstract. In this paper we present an approach to translate at least a certain kind of patterns into a machine readable form, while keeping them abstract in terms of problem independence.", "num_citations": "8\n", "authors": ["586"]}
{"title": "Patterns and components for enhancing reusability and systematic UI development\n", "abstract": " This paper focuses on unifying patterns and components into one process for user interface (UI) design. The Patternand Component-Based (PCB) process for systematic UI development concentrates on the reuse of design and implementation artifacts. It incorporates both patterns and components as its core constituents. Patterns are used as building blocks to establish conceptual UI design models. Components are introduced as a means to implement particular pattern instances. Two studies are employed to illustrate the applicability of the PCB process. Within the scope of first study, the UI of a web-based application is developed. The second study portrays the traceability and flexibility of the process for UI adaptation due to changed requirements. This can especially support the transfer of software to new platforms and devices.", "num_citations": "8\n", "authors": ["586"]}
{"title": "Challenges in Multi-User Interaction with a Social Humanoid Robot Pepper.\n", "abstract": " The paper discusses the challenges of engineering applications for humanoid robots like Pepper. Such robots can be used in different domains. We focus on the training aspect for patients after a stroke. The humanoid plays the role of a trainer. It should motivate the patient but also pushes when necessary. It should recognize the need for brakes and provide social interactions. A specific challenge is the collaboration of a patient, a supporting person and the robot. This collaboration should be modeled before implementation. Additionally, a model of the three roles is necessary. Based on the analyzed situation an appropriate interaction has to be selected. Domain specific languages might be helpful for modeling and engineering the applications.", "num_citations": "7\n", "authors": ["586"]}
{"title": "Integrating HCD into BizDevOps by Using the Subject-Oriented Approach\n", "abstract": " The DevOps-approach becomes more and more important because of the success of agile software development in conjunction with the continuously changing reality. It aims at unifying development and operations. A common team is responsible for both domains. Additionally, there are approaches like Continuous Software Engineering with the intention to unify business administration (Biz) and development. Even tool chains for BizDevOps are possible. The paper discusses aspects of BizDev and BizDevOps using a subject-oriented approach for supporting aspects of HCD. The focus lies on modeling user activities and business processes. Additionally, the role of domain-specific textual languages is discussed. Most important is the fact that methods from HCI like task modeling or storytelling can support BizDev and BizDevOps.", "num_citations": "7\n", "authors": ["586"]}
{"title": "Subject-Oriented specification of smart environments\n", "abstract": " In this paper, we describe a subject-oriented approach for specifying possible activities in smart environments. The approach is based on task models for subjects and a team model for representing the results of the cooperation. This model can be considered as communication model in the sense of S-BPM. Tasks in the team model have triggers for starting and finishing them. The triggers are the result of task executions in instances of models of subjects. A very restricted notation of OCL is used for those purposes. The same kind of simple OCL expressions can be used to specify preconditions of tasks. Tasks in the team model cannot be executed directly. They only present the result of other models. However, team models can also restrict the execution of other models. Additionally, context definitions are introduced for task models. Within a certain context, variables can be bound to specific values. This allows a\u00a0\u2026", "num_citations": "7\n", "authors": ["586"]}
{"title": "When do projects end?\u2013the role of continuous software engineering\n", "abstract": " Agile development methods have been proven to increase the quality of interactive systems because they allow quick adaptation to continuously changing requirements that are enforced by a fast changing reality.Additionally, models are very helpful to specify the understanding of analysts; developers and users of the domain. If models can be animated, they provide very good basis for discussions. The engagement of all participants is often much higher in this case. Currently, a lot of specification languages like UML, BPMN, or S-BPM are used to document the results of the analysis of the domain in most projects. Additionally, it can be recognized that the focus on users increases. S-BPM is already an example for that. It provides a special view on business processes that is missing in BPMN. It focusses on subjects that often are users but could also be software systems. This shifting focus goes together\u00a0\u2026", "num_citations": "7\n", "authors": ["586"]}
{"title": "A unified pattern specification formalism to support user interface generation\n", "abstract": " The development of interactive software typically requires the combined skills of software developers, HCI, platform and marketing specialists in order to create applications with good software quality, usability, and user experience. The combination of model-based user interface development practices with pattern-based approaches that specify HCI- and software-patterns in a formalized way and respect emerging standards, has the potential to facilitate and automate the software development process, reduce development costs, and provide solutions that can easily be adapted to varying contexts of use. To satisfy these goals we have developed a framework for Pattern-based Modeling and Generation of Interactive Systems (PaMGIS). The paper at hand describes the topical version of the PaMGIS Pattern Specification Language (PPSL) which is designed to accomplish both, capturing all information\u00a0\u2026", "num_citations": "7\n", "authors": ["586"]}
{"title": "Making Task Models and Dialog Graphs Suitable for Generating Assistive and Adaptable User Interfaces for Smart Environments.\n", "abstract": " Nowadays smart environments are gaining special attention among the various ubiquitous computing environment types. The main tenet of a given smart environment is to deliver proper assistance to the resident users while performing their daily life tasks. The environment aims to implicitly infer the user\u2019s intention and based on that information, it offers the optimal feasible assistance which helps the user performing his/her task. Task models seem to be a convenient starting point for developing applications for those environments, as they give the developer the opportunity to focus on the user tasks to be assisted. Already existing approaches offer solutions to make the transition between task models and the final user interfaces. However, smart environments are dynamic environments in which the inclusion of new user or device types is probable. Consequently, an optimal application to be operated in such an environment is required to consider the extensibility aspect within its design. Additionally, the implicit interaction technique has to be taken into account. Thus, in this paper we provide an attempt to include the implicit interaction paradigm within the design of our application as well as to ensure the extensibility needed to encounter the variation of the surrounding environmental settings.", "num_citations": "7\n", "authors": ["586"]}
{"title": "Interactions in smart environments and the importance of modelling\n", "abstract": " One challenge in software engineering is the development of smart environments that help users to intuitively accomplish their tasks. The ideal smart environment dynamically manages a diverse collection of devices, is accessible by multiple users and effectively supports the users\u2019 tasks. The design of smart environments relies on detailed models of devices, users and their tasks. In this paper, we present our modelling language \u201cCTML\u201d specifically developed for smart environments. We demonstrate how the language was designed and how it was used for usability evaluations in a virtual smart environment. We then discuss the importance of \u201ctask migrateability\u201d\u2013a usability principle often neglected by contemporary smart environments. We argue that the proper implementation of this usability criterion can improve the usability of smart environments. Finally, we investigate how tangible user interfaces are related to smart environments and how this interaction technique can be used to support task migrateability.", "num_citations": "7\n", "authors": ["586"]}
{"title": "HOPS: a prototypical specification tool for interactive systems\n", "abstract": " This article suggests higher-order processes as a formal framework to model interactive systems and supplies a corresponding prototypical specifi cation tool (HOPS). Processes and their components reflect the recursive nature of interaction. Each component is an independent process itself. Though higher-level processes specify the interaction between their components they do not fully control them. HOPS offers a unified description of behavioral and structural aspects. Structured sets of sub-processes (e.g. hierarchies) serve to represent specific domains of interest within a process. Operations are the smallest units for analyzing and designing behavior. However, they can be unfolded to processes and vice versa. This supports an understanding of interactive systems as open and nonmonotonic systems. Their composition/ decomposition may exhibit unpredictable behavior. It is shown that the approach\u00a0\u2026", "num_citations": "7\n", "authors": ["586"]}
{"title": "Model-based software development and usability testing\n", "abstract": " In this paper we discuss a user-centered approach of developing software, which is based on models and allows bridging the gap between software engineering and usability engineering. The development process consists of a sequence of interactive model transformations. It is demonstrated how first prototypes of interactive systems, which are animated models, can help to capture requirements and how the models evolve to the final interactive system. This model-based approach provides excellent opportunities for testing the usability of software based on the tasks users have to perform. A tool is presented, which visualizes the activities of a test person based on the models. The tool supports remote testing, which can be performed even on mobile devices.", "num_citations": "7\n", "authors": ["586"]}
{"title": "Different types of patterns for online-booking systems\n", "abstract": " With the emergence of the pattern approach for software design researchers, software engineers and designers have started an intense discussion on patterns. This topic gained currency and is still evident in recent publications. Since then, debate has contained many conflicting theories, approaches, and ideas on the nature of patterns and their use in making the software development process more efficient.", "num_citations": "7\n", "authors": ["586"]}
{"title": "Modelling the collaboration of a patient and an assisting humanoid robot during training tasks\n", "abstract": " The paper describes an approach for using a humanoid robot as a motivator for patients that recover from stroke. Specific training tasks for arm ability training exist. They were implemented in such a way that the robot gives advices and provides motivational comments. The language DSL-CoTaL was used to specify the collaboration between patient and robot. It allows the visualization and animation of the models with different tools (CoTaSE, CTTE, HAMSTERS). A task pattern was identified for the exercises with a mirror. This pattern reduces extremely the necessary modelling support. It also helps to identify requirements for a domain-specific language for robots, that will allow to generate the necessary code. The language is planned to be an extension of CoTaL.", "num_citations": "6\n", "authors": ["586"]}
{"title": "Integrating personas and use case models\n", "abstract": " Multidisciplinary design is characterized by phases of distributed work and co-design activities. An effective sharing and integration of design representations that are created by sub-teams from different disciplines is still often challenging and typically requires the reconciliation of diverging design perspectives. This paper investigates an integrated use of personas and use cases - two popular types of design representations among interaction designers and software engineers respectively. The proposed integration is particularly suitable for role-based interactive systems and differs from existing integration approaches in that it is based on a critical examination of the prevalent understandings of the goal concept in persona and use case approaches. In the paper we suggest distinguishing between organizational and user goals (while at the same time acknowledging their interplay). Corresponding\u00a0\u2026", "num_citations": "6\n", "authors": ["586"]}
{"title": "Making task modeling suitable for stakeholder-driven workflow specifications\n", "abstract": " This paper discusses approaches for specifying workflows based on task models. These task models represent activities of stakeholders in different ways. It is shown how the development process of workflow specifications can be supported to get hierarchical, structured and sound specifications. Further on, a language CTML is introduced that was developed to specify activities in smart environment. The language has the potential to be used to specify general workflow specifications as well. It is demonstrated how cooperative work can be specified using this language.", "num_citations": "6\n", "authors": ["586"]}
{"title": "Modellierung von Entscheidungen und Interpretation von Entscheidungsoperatoren in einem WfMS\n", "abstract": " In diesem Artikel wird die Modellierung von Entscheidungen in Workflows aus diversen Blickwinkeln betrachtet. Es existieren verschiedene Arten von Entscheidungen, die bei der Modellierung oder w\u00e4hrend des Ablaufs der Workflows getroffen werden m\u00fcssen. F\u00fcr die Modellierung gibt es unterschiedliche Sprachmittel bzw. Modellierungsweisen in Prozesssprachen wie zB EPKs, UML Aktivit\u00e4tsdiagrammen oder YAWL um Entscheidungen auszudr\u00fccken. Der Prozessmodellierer kann zum einen die Art der Entscheidung und zum anderen die Phase festlegen, in der die Entscheidung getroffen werden soll. F\u00fcr EPKs wird das Konzept der Entscheidungsfunktion um Entscheidungsprozesse erweitert, die es erm\u00f6glichen komplexere Entscheidungen mit Hilfe von hierarchischer Verfeinerung von Prozessen und Ereignissen zu modellieren. Des Weiteren werden implementierte Konzepte zur Endnutzer-Darstellung von unterschiedlichen Entscheidungsoperatoren an einem Workflow Management System (WfMS) vorgestellt.", "num_citations": "6\n", "authors": ["586"]}
{"title": "Requirements elicitation and elaboration in task-based design needs more than task modelling: a case study\n", "abstract": " In this paper, a small case study is presented to illustrate our conceptual understanding of a task-based requirements process. We argue that sub-models as known in model-based design (e.g. task models, dialog models) support the reflection about an existing work situation at a conceptual level and allow a formal specification of requirements. However, it is also shown that the integration of complementary analysis approaches facilitates a richer consideration of social as well as technical aspects. An intertwined creation of models differing in their focus and in the degree of abstraction and formality supports a more effective requirements elicitation and elaboration.               In addition, the paper discusses some crucial issues in task- and model-based design such as the \u2018myth\u2019 of generalised task models, the different roles of task and dialog models, or the influence of intentions on models of current\u00a0\u2026", "num_citations": "6\n", "authors": ["586"]}
{"title": "Tool Support for an Evolutionary Design Process using XML and User-Interface Patterns\n", "abstract": " Design patterns are very helpful to develop well-structured software. This fact is widely accepted by the software engineering community. The same kind of support is expected by UI-Patterns.", "num_citations": "6\n", "authors": ["586"]}
{"title": "Modeling the Usability Evaluation Process with the Perspective of Developing a Computer Aided Usability Evaluation (CAUE) System\n", "abstract": " Usability testing deals with improving the usability of the inspected artefacts. The process that leads to these results is hardly known by people who are not used to work in that field. Only large companies are able to engage usability engineers and to install usability laboratories. So many systems to be used by end users are build by the vast majority of designers and developers that are not able to conduct usability evaluations.It is considered as a fact that usability results in usability efforts which have to be accompanied by usability evaluation. As a consequence the usability of systems can be improved by increasing the efficiency of the usability process. Today the usability inspection works with only small support through computer-systems whereas the complete process could be supported. To fill this leak in future we try to understand the usability evaluation as a process comparable to the process of software engineering.", "num_citations": "6\n", "authors": ["586"]}
{"title": "Supporting the Arm Ability Training of Stroke Patients by a Social-Humanoid Robot\n", "abstract": " The number of people affected by stroke increased during the last decades. However, the number of therapists is not large enough to fulfill the demands for specific training for stroke survivors. Within the project E-BRAiN (Evidence-based Robot-Assistance in Neurorehabilitation) we want to develop software that allows a humanoid robot to give instructions to perform and to observe carefully selected exercises, provide feedback and in addition to motivate patients.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Use Cases, User Stories and BizDevOps.\n", "abstract": " DevOps is currently discussed a lot in computer science communities. BizDev (business development) is only mentioned once in a computer science paper in connection with Continuous Software Engineering. Otherwise it is used in the domain of business administration only. Additionally, there seems to be a different interpretation of the term in the two communities. The paper discusses the different interpretations found in the literature. Additionally, the idea of BizDevOps is discussed in conjunction with further ideas of taking new requirements for software features into account. These requirements can be described by models on different level of granularity. Starting points are use cases, use-case slices, user stories, and scenarios. They have to be communicated between stakeholders. It is argued in this paper that storytelling can be a solution for that. It is used in as well in software development as in management.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Does Continuous Requirements Engineering need Continuous Software Engineering?\n", "abstract": " Agile development methods allow rapid adaptations of requirements to fast changing needs in businesses and society. Their combination with Continuous Requirements Engineering seems to be very effective. However, agile methods are applied to the development process only. Maintenance is often not organized in the same way. Continuous Delivers might be a solution for that. Additionally, the focus on users is important. Currently, often customers are mentioned only.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Cognition, technology, and work: special issue on cognitive ergonomics for designing collaborative activities\n", "abstract": " This special issue presents six papers organized by the theme:\u2018\u2018Cognitive Ergonomics for Designing Collaborative Activities\u2019\u2019. Originally, the focus of cognitive ergonomics has been on the performance of single users, on understanding their cognitive abilities, needs and preferences while interacting with machines and computers. Human activities are inherently collaborative, though, and in the past two decades, the field has gradually broadened its perspective on the analysis and the design of work systems, tasks and supporting technology. It is common ground now that designing for use requires a deep understanding of collaborative aspects and of appropriation processes of artefacts in complex social settings. The special issue on collaboration in context: cognitive and organizational artefacts, published by Cognition, Technology and Work in 2005 (Jones et al. 2005) is an example of reflecting this development\u00a0\u2026", "num_citations": "5\n", "authors": ["586"]}
{"title": "Towards the generation of assistive user interfaces for smart meeting rooms based on activity patterns\n", "abstract": " The main purpose of a given smart meeting room is to increase the efficiency of the meetings taking place in this room by assisting the resident actors performing their tasks and thus offering them the opportunity to focus on the exchange of information among each other. However, a proper assistance should be based on a clear understanding of the nature of tasks the users are performing in the environment. Therefore, in this paper we present an attempt to base the design of the assistive system to be operated in smart meeting rooms on activity patterns collected in the analysis stage and resulting from the perception of the human behavior in those environments. The end goal is to tailor individualized user interfaces for each actor depending on his/her current role and user profile.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Structured digital storytelling for eliciting software requirements in the ICT4D domain\n", "abstract": " Due to the specific challenges that ICT4D projects present, conventional requirements elicitation techniques are often inapplicable or insufficient. We address this shortcoming by introducing structured digital storytelling (SDS) as an alternative elicitation technique especially suited for the ICD4D domain. SDS is supported by our mobile elicitation tool designed around the needs and capabilities of the targeted user population. We embed SDS in a requirements elicitation and specification process which commences with an initial domain analysis of the needs, goals, and tasks of the target population with respect to the high-level social development goals. The outcome of the preliminary domain analysis is used to formulate a set of questions for guiding the story narration. Once the stories are elicited, they are processed and the results are fed into a traditional requirements specification process. In this paper\u00a0\u2026", "num_citations": "5\n", "authors": ["586"]}
{"title": "Human-computer interaction\n", "abstract": " The IFIP World Computer Congress (WCC) is one of the most important conferences in the area of computer science at the worldwide level and it has a federated structure, which takes into account the rapidly growing and expanding interests in this area. Informatics is rapidly changing and becoming more and more connected to a number of human and social science disciplines. Human\u2013computer interaction is now a mature and still dynamically evolving part of this area, which is represented in IFIP by the Technical Committee 13 on HCI. In this WCC edition it was interesting and useful to have again a Symposium on Human\u2013Computer Interaction in order to present and discuss a number of contributions in this field. There has been increasing awareness among designers of interactive systems of the importance of designing for usability, but we are still far from having products that are really usable, and usability\u00a0\u2026", "num_citations": "5\n", "authors": ["586"]}
{"title": "Spezifikation von \u201eMultiple User Interfaces \u201cmit Dialoggraphen\n", "abstract": " Die Anpassung der Navigation einer Anwendung an die Bedingungen unterschiedlicher Ger\u00e4te ist einerseits eine wichtige Aufgabenstellung f\u00fcr die Softwaretechnik. Der Beitrag pr\u00e4sentiert eine M\u00f6glichkeit, wie eine automatische Anpassung an unterschiedliche Ger\u00e4te erfolgen kann.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Programmierung: Paradigmen und Konzepte\n", "abstract": " Weitere Informationen oder Bestellungen unter http://www. hanser. de/3-446-40301-9 sowie im Buchhandel", "num_citations": "5\n", "authors": ["586"]}
{"title": "Interactive Systems. Design, Specification, and Verification: 9th International Workshop, DSV-IS 2002, Rostock Germany, June 12-14, 2002\n", "abstract": " This book constitutes the thoroughly refereed post-proceedings of the 9th International Workshop on the Design, Specification, and Verification of Interactive Systems, DSV-IS 2002, held in Rostock, Germany in June 2002. The 19 revised full papers presented have gone through two rounds of reviewing, selection, and improvement. All aspects of the design, specification, and verification of interactive systems from the human-computer interaction point of view are addressed. Particular emphasis is given to models and their role in supporting the design and development of interactive systems and user interfaces for ubiquitous computing.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Software development and open user communities.\n", "abstract": " The request for software systems which can be used by different groups of people under different conditions asks for support by new modularization principles on the modeling level.This paper follows the idea of combining several submodels, as eg task and object models, to specify different views on software systems and their situations of use as known from modelbased approaches. But further, a separate specification of the general aspects of a model and the constraints imposed by concrete situations is suggested. At the example of the adapted action model this specification strategy is deeper explained and it is shown how it can contribute to a more flexible modeling for open user communities.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Using XML for Model-based User Interface Design\n", "abstract": " Using XML for Model-Based User Interface Design - IuK Repository IuK Repository Home About Browse Login Using XML for Model-Based User Interface Design M\u00fcller, Andreas and Forbrig, Peter and Cap, Clemens H. (2001) Using XML for Model-Based User Interface Design. In: Workshop on Transforming the UI for anyone anywhere, Human Computer Interaction with Mobile Devices (HCI'01). Full text not available from this repository. Item Type: Conference or Workshop Item (Paper) Subjects: Q Science > QA Mathematics > QA75 Electronic computers. Computer science Depositing User: Lehrstuhl Informations- und Kommunikationsdienste Date Deposited: 24 Oct 2018 Actions (login required) View Item View Item EPrints Logo IuK Repository is powered by EPrints 3 which is developed by the School of Electronics \u2026", "num_citations": "5\n", "authors": ["586"]}
{"title": "Software specification methods and attribute grammars\n", "abstract": " An important problem of modern computer science is the development of quality software. The necessary design of large systems in the 1980s requires other methods than the design of smaller systems in the 1960s and becomes more and more an engineering problem.There are many different methods to cope with this problem. These methods range for example from data driven program development by Jackson [Jac 75] to information hiding or data encapsulation by Parnas [Par 72]. Computer science calls for programming development systems, which support the programming development process by the computer itself. After a short suvery of the fundamentals of software specification we want to illustrate the use of attribute grammars in commercial data processing. It will be presented how the well known methods of data driven programming and data encapsulation, usually classified as contrary concepts, can be combined by using attribute grammars with abstract data types.", "num_citations": "5\n", "authors": ["586"]}
{"title": "Digitalization of training tasks and specification of the behaviour of a social humanoid robot as coach\n", "abstract": " The number of physiotherapists and occupational therapists is not sufficient to cope with the demands of the increasing number of stroke survivors worldwide. These patients need specific training to promote recovery and prevent stroke-related disability. The paper discusses aspects how a social humanoid robots might serve as therapeutic assistant. It is not intended to replace human therapists, but to provide them with therapeutic assistance once therapeutic decisions are taken and the therapy has been introduced to the patient by the human therapists and the day to day practice needs to be supervised. The paper provides a case study of an HCD approach and exemplifies the strategy of digitalizing training tasks, the identification of exceptions, and ways of modelling the dynamic behaviour of the humanoid robot. This is demonstrated by task models. Some extensions of task models are suggested.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Applying agile methods and personas to S-BPM\n", "abstract": " The paper discusses the application of stories, use-case slices and personas to S-BPM specifications. Stories are used to specify the behavior of a system in an abstract way. Personas drive the specification of such stories. Use-case slices as part of a use case specification combine one or several stories. A slice allows the the corresponding implementation in one cycle of agile software development. The paper suggests the usage of stories and slices of S-BPM behavioral models. The stories are inspired by personas. Additionally, the splitting of subjects of S-BPM into sub-roles that are related to personas is suggested. The suggested extensions allow an agile development of S-BPM specifications and delivers more precise subject-interaction diagrams.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Towards a Task Driven Approach Enabling Continuous User Requirements Engineering.\n", "abstract": " The digital transformation of traditional workflows challenges small and medium-sized and industrial enterprises likewise. Interactive systems have to be built to assist the people within their daily tasks as suitable as possible. Existing software engineering methods seems to be unsufficient because they don\u2019t consider end users in terms of active involvement during the development process and thus lack in the quality of the resulting product. In addition, digital transformation is an ongoing process and needs user participation as well as a continuous requirements refinement. Therefore, this paper describes an iterative task-driven approach to enable an incremental development based on a sustainable model that is continuously improved due to user reviews on runnable parts of the user interface.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Informatik f\u00fcr Ingenieure kompakt\n", "abstract": " Das Buch beschreibt die wichtigsten Themen der Informatik exakt und kompakt, wie sie f\u00fcr Ingenieure wichtig sind. Die Abschnitte des Buches sind modular angeordnet und k\u00f6nnen einzeln, voneinander unabh\u00e4ngig gelesen werden. Die f\u00fcr Ingenieure wichtigen Themen wie Internet, Simulation, Datenbanken und Multimedia werden anhand zahlreicher Praxisbeispiele dargestellt. Neben dem kompakten Format des Buches wird auch durch das Layout die Information kompakt angeboten.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Alternative representations of workflow control-flow patterns using HOPS\n", "abstract": " This paper analyzes the applicability of HOPS on describing the workflow patterns, originally published by van der Aalst. The workflow patterns is a widely accepted collection of recurring fragments used for workflow modeling. These patterns can be used for evaluating the capabilities of workflow systems and models. We adopt this, to investigate the application of HOPS. HOPS is a universal specification formalism that can be used to describe cooperating and interacting systems. For this, we provide HOPS implementations of the workflow patterns. This can be used as a basis for future research and to compare HOPS with other formalisms.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Model-driven user interface development with the eclipse modeling project\n", "abstract": " Model-driven development nowadays often is done using the tools from the Eclipse Modeling Project (EMP). We developed a number of meta-models and transformations to support a model-driven user interface development within EMP. This paper presents our Swing and XUL meta-models and demonstrates what they can be used for.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Entwurf und Transformationskonzepte f\u00fcr flexible klinische Workflow Modelle\n", "abstract": " Prozesse der realen Welt werden in der Informationstechnologie oft in Form von Workflows abgebildet. Besondere Anforderungen stellen hierbei hoch flexible klinische Prozesse (insbesondere im und um dem OP-Saal) aufgrund von Notf\u00e4llen, Ausf\u00e4llen, Komplikationen und Verschiebungen von Personal, R\u00e4umlichkeiten, Ger\u00e4ten und Material dar. Zur Beschreibung solcher Eigenschaften ist eine Workflow- Sprache mit Flexibilisierungskonzepten erforderlich. Dar\u00fcber hinaus stellt sich der Entwurf solcher Workflows mit teilweise schwierig zu erfassenden Parametern sehr aufwendig und fehlerbehaftet dar. Der Entwurf mittels HOPS und YAWL sowie die Analyse und Umsetzung von ad\u00e4quaten Flexibilisierungskonzepten, im Rahmen des Projektes Peri- kles, ist Kernthema dieses Artikels.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Rapid prototyping and evaluation of intention analysis for smart environments\n", "abstract": " The development of smart environments is cumbersome and time-consuming compared to traditional software, since lacking a standard development process and according tool support. Smart environments are termed \u201csmart\u201d due to pro-active user assistance: User behavior is anticipated by an \u201cintention analysis\u201d software employing machine learning algorithms. In this paper we present a tool that facilitates the development of intention analysis by guiding the domain expert through the development process. Initially, the tool allows the user-centered design of HCI task models, without taking care of implementation details. Subsequently annotated task models are transformed into low level models, which are applied within the machine learning inference engine. We support both evaluation at early and later development stages. At early stages we evaluate designed models with expert-generated scenarios\u00a0\u2026", "num_citations": "4\n", "authors": ["586"]}
{"title": "Model Based Reengineering Of User Interfaces.\n", "abstract": " This position paper shortly describes methods and tools under development to support a model-based reengineering process of user interfaces of legacy applications. This reengineering process enables the use of HCI patterns and allows an adaption of user interfaces to different contexts of use.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Advanced Multi-Modal User Interfaces for Mobile Devices\u2014Integration of Visualization, Speech Interaction and Task Modeling\n", "abstract": " The use of techniques from the fields of visualization, natural language and task modeling provides a new complementary style of human computer interaction, where the computer becomes an intelligent, active and personalized collaborator. In this paper we present an adaptive, platform independent integration strategy of visualization, speech and task modeling techniques for technically oriented applications with the special focus on advance human-computer interfaces for mobile devices. The implemented system is illustrated on a maintenance support case study.", "num_citations": "4\n", "authors": ["586"]}
{"title": "Supporting the HCI aspect of agile software development by tool support for UI-pattern transformations\n", "abstract": " Continuous changing requirements of software are the result of continuously changing reality. This reality can be considered as the context of the software. Agile development methods allow quick adaptations to changing requirements. Initially, agile development methods were focused on the development of the application core only. Recently, process models were discussed that integrate HCI aspects. This paper will discuss ideas to integrate user evaluations into the development process. User interfaces are structured as UI-pattern instances. Tool support is provided that allows the specification of pattern instances as XAML specifications. Additionally, the tool allows the replacement of one pattern instance by another one. In this way, different versions of the same user interface can be generated rapidly without much effort. These different versions can be evaluated with the help of users. Based on these\u00a0\u2026", "num_citations": "3\n", "authors": ["586"]}
{"title": "Human-Centered and Error-Resilient Systems Development\n", "abstract": " With this IFIP working conference, we premiered joining the International Conference on Human-Centered Software Engineering (HCSE) and the International Conference on Human Error, Safety, and System Development (HESSD). Together they became HCSE+ HESSD 2016.In the tradition of both conference series, HCSE+ HESSD 2016 was a single track working conference which aimed at bringing together researchers and practitioners interested in different areas of human-centered software engineering and in the development of systems, in particular safety-critical systems, that are resilient to human error. HCSE\u2019s focus is on strengthening the scientific foundations of user interface design, examining the relationship between software engineering and human-computer interaction, and on establishing user-centered design as an essential part of software engineering processes. HESSD emphasizes the\u00a0\u2026", "num_citations": "3\n", "authors": ["586"]}
{"title": "Towards Contextual Task Patterns for Smart Meeting Rooms.\n", "abstract": " The main idea of smart environments is to deliver proper assistance to the resident users while performing their daily life tasks. Thus, task models are convenient as a starting point for developing applications for those environments, as they give the developer the opportunity to focus on the users and their tasks. In such an environment, mutual dependencies between different types of entities are taking place and affecting the way the user is executing the tasks. Therefore, other models (eg device model, location model\u2026 etc.) have to be developed and linked to the task model in order to truly illustrate how the tasks are executed in those environments. Due to the increasing number of models and the dependencies among them, modeling an interactive application to be operated in such an environment is a tedious and overwhelming process. In this paper, we present an attempt to overcome the modeling complexity by fostering the concept of reuse on a high level of abstraction using task patterns. We extend the former definition of task patterns by integrating the environmental preconditions and effects within the pattern structure in order to maximise the benefit of the usage of those patterns.", "num_citations": "3\n", "authors": ["586"]}
{"title": "5th Workshop on Software and Usability Engineering Cross-Pollination: Patterns, Usability and User Experience\n", "abstract": " The workshop focuses on how process models, methods and knowledge from the area of Human-Computer Interaction can be integrated and adopted to support and enhance traditional software engineering processes. In its 5                     th                    edition this workshop will investigate the application of usability engineering methods that are adapted to fit the evaluation of advanced interfaces and how usability and user experience evaluation methods can be incorporated to support design decisions and changes in standard software development. This workshop is organized by the IFIP working group 13.2 \"Methodologies for User-Centered Systems Design\".", "num_citations": "3\n", "authors": ["586"]}
{"title": "Pattern catalogs using the pattern language meta language\n", "abstract": " This article focuses on the pattern language PLML. Some enhancements and corrections to it are proposed to make use of PLML in pattern catalogs. Additionally, a textual domain specific language as human-readable variant of PLML is proposed. Supporting editors, textual and graphical, which were developed using model-based techniques are presented.", "num_citations": "3\n", "authors": ["586"]}
{"title": "HOPS zur Modellierung flexibler, klinischer Prozesse als Grundlage eines workflowbasierten Assistenzsystems\n", "abstract": " Die vorliegende Arbeit beschreibt die Modellierung von Prozessabl\u00e4ufen f\u00fcr ein workflowbasiertes Assistenzsystem zur Unterst\u00fctzung des OP-Managements in einem Krankenhaus. Dabei wird ein Ansatz benutzt, der die aktive Einbeziehung der Nutzer und anderer Stakeholder am Modellierungsprozess unterst\u00fctzt. Durch die Einbeziehung von Fachexperten in die Erstellung und Validierung von Prozessmodellen, erh\u00f6ht sich nicht nur die Akzeptanz gegen\u00fcber den Ergebnissen, sondern dar\u00fcber hinaus k\u00f6nnen fr\u00fchzeitig Mehrdeutigkeiten, Ungenauigkeiten und Fehler eliminiert werden. Die Qualit\u00e4t der so erzeugten Modelle erh\u00f6ht sich erheblich, was insbesondere in Anwendungsbereichen mit sehr komplexen, hochflexiblen oder auch stark kooperativen Arbeitsabl\u00e4ufen von Vorteil ist.", "num_citations": "3\n", "authors": ["586"]}
{"title": "Defining expected behavior for usability testing\n", "abstract": " Within HCI task models are widely used for development and evaluation of interactive systems. Current evaluation approaches provide support for capturing performed tasks and for analyzing them in comparison to a usability experts\u2019 captured behavior. Analyzing the amount of data works fine for the evaluation of smaller systems, but becomes cumbersome and time-consuming for larger systems. Our developed method aims at making the implicitly existing expectations of a usability expert explicit to pave the way for automatically identifying candidates for usability issues. We have enhanced a CTT-like task modeling notation with a language to express expected behavior of test users. We present tool support to graphically compose expectations and to integrate them into the usability evaluation process.", "num_citations": "3\n", "authors": ["586"]}
{"title": "Behaviour of flow operators connected with object flows in workflow specifications\n", "abstract": " This paper takes a look at object flows in workflow diagrams in connection with flow operators like fork or choice operators. Firstly, we focus on UML activity diagrams, where the object flow concept is basically reformed in version 2. There are several possibilities to interpret the behaviour of flow operators in connection with object flows. Secondly, we take a look at the BPMN, to see how the same problems are handled in that language and discuss the same modelled situations there. Finally, we make suggestions how to improve UML activity diagram concepts to clarify the presented interpretations of object flows in connection with flow operators.", "num_citations": "3\n", "authors": ["586"]}
{"title": "Task-Action Consistency in Multi-Device Systems\n", "abstract": " This paper reconsiders task-action consistency with respect to multi-device systems. We show how this concept influences our understanding of an appropriate model-based design approach. In addition, we argue that concepts like consistency, their evaluation and their integration into formal methods cannot replace user-centered design approaches with an active user involvement.", "num_citations": "3\n", "authors": ["586"]}
{"title": "Bridging the gap between scenarios and formal models\n", "abstract": " A software design process has to consider both the user-and system-oriented aspects. On the one hand, scenarios are often used to illustrate the interface between a system and its application context. On the other hand, abstract design models with a preferably constructive character are requested for implementing software systems. This paper shows a combination of the scenarioand model-based approaches to fulfil the demands mentioned above.", "num_citations": "3\n", "authors": ["586"]}
{"title": "Relations between Use Cases and Task Analysis\n", "abstract": " Relations between Use Cases and Task Analysis | Proceedings of the Workshop on Object-Oriented Technology ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of the Workshop on Object-Oriented TechnologyRelations between Use Cases and Task Analysis Article Relations between Use Cases and Task Analysis Share on Authors: Peter Forbrig View Profile , Anke Dittmar View Profile Authors Info & Affiliations Publication: Proceedings of the Workshop on Object-Oriented TechnologyJune 1999 Pages 250\u2013252 0citation", "num_citations": "3\n", "authors": ["586"]}
{"title": "Unterst\u00fctzung des Software-Design-Prozesses durch EXPOSE\n", "abstract": " Durch den Design-Proze\u00df der Benutzungsoberfl\u00e4che von Software wird festgelegt, wie der Benutzer das System f\u00fcr seine Zwecke einsetzen kann und handhaben mu\u00df. In der Software-Ergonomie sind unter dem Stichwort Benutzerfreundlichkeit eine F\u00fclle von Kriterien und Regeln f\u00fcr eine human-orientierte Systemgestaltung aufgestellt worden. Dieses in der Praxis schwer handhabbare software-ergonomische Wissen stellt das System EXPOSE (Expertensystem zur phasenorientierten Software-Ergonomie-Beratung bei der Benutzerschnittstellen-Entwicklung) dem Entwickler w\u00e4hrend des Design-Prozesses beratend und kontextbezogen zur Verf\u00fcgung, damit Gestaltungsentscheidungen begr\u00fcndet getroffen und vollzogene Entscheidungen proze\u00dfbegleitend \u00fcberpr\u00fcft werden k\u00f6nnen.", "num_citations": "3\n", "authors": ["586"]}
{"title": "Supporting Collaborative Decision Making in Software Engineering\n", "abstract": " Smart factories or Industry 4.0 are names of domains of assistive systems. Such systems become more and more important and ask for new technologies in software engineering. They provide support for decision making of users. Humancentered software engineering and subject-oriented modeling seem to be promising approaches. However, decisions have also to be made during software development. The awareness of modelling and discussing alternative solutions have to be teached and tool support has to be developed. The paper discusses aspects of using heterogeneous modeling for specifying applications and collaborative activities. It is asked for education in different paradigms, Domains-specific textual specification languages can be used for this purpose. Additionally, work practices in collaborative design of software are analyzed and corresponding tool support is presented. Task migratability is discussed and characterized as success factor for assistive software systems of the future.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Continuous Requirements Engineering and Human-Centered Agile Software Development.\n", "abstract": " The idea of Continuous Requirements Engineering in relation to a Human-Centered Agile Development Process is discussed. First, it is argued that Continuous Requirements Engineering has to cover design-time and runtime aspects. In this way maintenance is covered as well. Second, arguments are provided for integrating aspects of usability and user experience into requirements specifications. This has to be done continuously. Therefore, the term Continuous Human-Centered Development is introduced and discussed. Based on a process model for SCRUM some aspects of integrating HCD into the development process are discussed.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Ein Werkzeug zur Spezifikation von Dialoggraphen\n", "abstract": " Die Anpassung der Navigation einer Anwendung an die Bedingungen unterschiedlicher Ger\u00e4te ist einerseits eine wichtige Aufgabenstellung f\u00fcr die Wartung und andererseits bedeutend f\u00fcr die Benutzbarkeit von Softwaresystemen. Der Beitrag pr\u00e4sentiert eine Vorgehensweise, wie auf der Basis von", "num_citations": "2\n", "authors": ["586"]}
{"title": "Analyse von Handlungsprotokollen zur Modellbildung\n", "abstract": " Dieser Beitrag beschreibt die Konstruktion von hierarchischen T\u00e4tigkeitsmodellen mittels der Analyse von protokollierten Handlungsstr\u00e4ngen. Ziel ist es, die Erstellung von Ist-Modellen zur weiteren Verwendung im Softwareentwicklungsprozess durch werkzeuggest\u00fctzte teilautomatisierte Verfahren zu erleichtern.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Extending scxml by a feature for creating dynamic state instances\n", "abstract": " Statecharts have been demonstrated as an appropriate way for specifying the behavior of technical systems. In recent time they have been applied for specifying the behavior of navigation models of interactive systems. However, there is certain behavior of interactive systems that is difficult to specify with state charts. The creation of states that are concurrent to existing instances is such an example.The development of SCXML might be the chance to introduce such a feature for navigation models based on statecharts of GUIs. The paper discusses an approach for extending statecharts and SCXML in this direction. It allows specifying the dynamic behavior of several instances of a certain window. Additionally, a specific characterization of states as modal is suggested. For both extensions examples are discussed that are intended to convince the reader that the extensions to SCXML are useful.", "num_citations": "2\n", "authors": ["586"]}
{"title": "HDI 2014\u2013Gestalten von \u00dcberg\u00e4ngen. 6\n", "abstract": " Die Tagung HDI 2014 in Freiburg zur Hochschuldidaktik der Informatik (HDI) wurde erneut vom Fachbereich Informatik und Ausbildung/Didaktik der Informatik (IAD) in der Gesellschaft f\u00fcr Informatik e. V.(GI) organisiert. Sie dient den Lehrenden der Informatik in Studieng\u00e4ngen an Hochschulen als Forum der Information und des Austauschs \u00fcber neue didaktische Ans\u00e4tze und bildungspolitische Themen im Bereich der Hochschulausbildung aus der fachlichen Perspektive der Informatik.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Mobile Data Collection Forms Based on DSLs with Different Levels of Abstraction\n", "abstract": " Model-based software development is based on the idea that experts can express their knowledge by domain-specific models. Domain-specific languages (DSLs)[2, 16] allow the representation of knowledge in textual human-readable form. Approaches grounded on DSLs could be used for data collection applications.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Combining design of models for smart environments with pattern-based extraction\n", "abstract": " There are two different types of approaches for smart environments. The first group provides an infrastructure that contains mechanisms from artificial intelligence that allow to adapt to certain behavior of users and to support them by performing their tasks. These approaches work fine if the conditions in the environment are not experiencing too many changes. However, when different types of activities have to be supported and participants change a lot there is the problem of getting enough training data to recognize the users\u2019 activities with sufficient reliability. In such cases, designing support by providing models for activities of participating users seems to be a solution. Thus, mechanisms from artificial intelligence can be supported by reducing the search space for possible actions.               Designing of activity models can be performed by employing the top-down approach through predefined generic\u00a0\u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "A domain-specific model-based design approach for end-user developers\n", "abstract": " The paper investigates model-based design (MBD) ideas for supporting end-user developers in creating mobile data collection tools. End-user developers cannot assumed to be able (or willing) to specify formal task models as they are common in MBD approaches. They use their knowledge about domain objects and general task characteristics to specify constraints on the execution of tasks. The paper shows that the restriction to specific task domains makes it possible to tailor the underlying meta-models and transfor-mation rules accordingly and to provide end-users with convenient tool support. In particular, dialog models and their stepwise enrichment and refinement are considered in the paper. General implications of the suggested ideas for MBD are discussed. The proposed approach is implemented using the Eclipse Modeling Framework and a case study demonstrates the applicability of the approach.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Modellbasierte Entwicklung mobiler multimodaler Nutzungsschnittstellen\n", "abstract": " Die Entwicklung von Nutzungsschnittstellen f\u00fcr mobile Ger\u00e4te stellt neue Herausforderungen an Softwareentwickler. Durch den Entwurf von Aufgaben-und Dialogmodellen k\u00f6nnen ger\u00e4te\u00fcbergreifend Nutzungsschnittstellen spezifiziert werden. Konkrete Ger\u00e4te und Kontextsituationen erfordern auch die Nutzung alternativer Interaktions-und Pr\u00e4sentationstechniken. Wir stellen hier einen Ansatz vor, der die Integration von Sprache und Visualisierung am Beispiel einer Anwendung im Bereich Instandhaltungsmanagement vorantreibt.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Special challenges for models and patterns in smart environments\n", "abstract": " Smart environments aim at inferring the intention of the user and based on that information, they offer optimal assistance for the users while performing their tasks. This paper discusses the role of supportive user interfaces for explicitly interacting with the environment in such cases where implicit interactions of the users fail or the users want to get informed about the state of the environment. It will be shown by small examples how patterns help to specify the intended support with implicit and explicit interactions. A notation for presentation patterns will be introduced that allows users dynamically to change the presentation style. It will be discussed how extended task models can be combined with presentation patterns and how this information can be used in supportive user interfaces on mobile devices.", "num_citations": "2\n", "authors": ["586"]}
{"title": "End-user software development: tool support for mobile data collections\n", "abstract": " Creating mobile applications is a process of device-specific programming. In this way new devices ask for new solutions. Additionally, experts with programming skills are necessary. There is an urgent need for more efficient approaches. Abstract specifications for domain-specific areas in combination with tool support for end-user development seem to be a solution. This paper presents an approach that is grounded on model-based techniques and is focused on the domain of data collection. The language UsiXML and corresponding platform-dependent interpreters allow to run specifications on different devices. A set of tools will be introduced that supports the creation of model-based user interface specifications. Additionally, the distribution to different devices is supported. In combination all these tools enable end-users to create applications in their domain of data collection.", "num_citations": "2\n", "authors": ["586"]}
{"title": "A methodology for generating an assistive system for smart environments based on contextual activity patterns\n", "abstract": " Despite the existence of various approaches addressing the development of nowadays interactive systems, smart environments impose an additional set of challenges for the designer. The main tenet of those environments is to deliver proper assistance to resident users who are performing their daily life tasks. However, an assistive system to be deployed in a smart environment has to meet some crucial requirements in order to successfully accomplish its mission. Thus, a well-defined development methodology for the generation of such a system to be employed in a given smart environment is highly beneficial. In this paper, we present a development methodology enabling the generation of tailored (user-specific) assistive user interfaces based on contextual activity patterns. We illustrate step by step the various stages by which the development of a supportive system for smart environments has to pass.", "num_citations": "2\n", "authors": ["586"]}
{"title": "A new framework for the Development of CRM Business Intelligence applications\n", "abstract": " While Business intelligence (BI) is a flourishing research area that has mostly been driven by business and IT vendors, The research area of DSS can provide a set of theoretical foundations upon which to build future BI development and applications. this paper deals with this issue and provide a framework for building BI applications for CRM depending on survy and case study. It provides a conceptual overview of CRM and its relationship to the main reference disciplines (DSS, KM and SE). It describes a model of building business intelligence systems for the CRM, using two case studies. The first case study explore issues related to current CRM practice and identify challenges and future opportunities using survey. The second case study tries to exploit the main basic reference disciplines to develop possible CRM application.", "num_citations": "2\n", "authors": ["586"]}
{"title": "On the Suitability of Activity Diagrams and ConcurTaskTrees for Complex Event Modeling\n", "abstract": " In this paper, we analyze and extend modeling possibilities for complex events in the semiformal business process modeling languages UML activity diagrams and ConcurTaskTrees (CTT). The goal of this paper is to provide an intuitive abstract starting point for complex event specifications in a model-based approach. The resulting models should increase the understandability of the models themselves and the discussion taking place with the developers and the stakeholders. A hierarchy concept for advanced visual event modeling is introduced to activity diagrams. In these models time, data and cardinality aspects can be expressed. A different approach for complex event modeling is proposed using hierarchical task models with CTT. We transform given temporal operators from CTT that are based on process algebra to event algebra. Some extensions for CTT-operators are used to express specific\u00a0\u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "Human-Centered Software Engineering: 4th International Conference, HCSE 2012, Toulouse, France, October 29-31, 2012, Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the 4th International Conference on Human-Centered Software Engineering, HCSE 2012, held in Toulouse, France, in October 2012. The twelve full papers and fourteen short papers presented were carefully reviewed and selected from various submissions. The papers cover the following topics: user interface design, examining the relationship between software engineering and human-computer interaction and on how to strengthen user-centered design as an essential part of software engineering process.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Categorize web sites based on design issues\n", "abstract": " Interface design is one of the most important topics during web development process. The final design is a tradeoff between the owner\u2019s personal idea and the web developer\u2019s perception of what he wants. In this paper, we have proposed a new model called WLDM (Web layout design model) to cover the important components of interface design. There are three components in the WLDM, including structure, content and visual. We have selected three features for structure, two for content, and three for visual component. Thereafter, we have made a dataset using 1088 most visited web sites. Finally, applying K-means algorithm, we have clustered this dataset. According to our result, six clusters were identified. Considering WLDM, web layout designer have a blueprint to cover areas of research related to this issue. The result of this clustering can be used for recommender systems to map owner groups\u00a0\u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "Patterns for Usable Accessible Design\n", "abstract": " Accessibility barriers exist on most websites and systems, making them difficult to use for individuals with disabilities and other functional limitations. Usable Accessible Design aims to design usable software that addresses the potential needs of all users in the user-centered design process with special consideration for users experiencing functional limitations. This paper showcases how accessibility concerns affect us all and that a proper definition of accessibility goes beyond individuals with disabilities. We then identify existing accessibility standards and guidelines, and propose design patterns as a proactive medium to capture and disseminate best accessibility design practices. The patterns provide usable solutions to specific accessibility problems, within a defined context, that take into account the physical, cognitive and functional limitations of users. Finally we propose a classification scheme for\u00a0\u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "A comparative study of task concepts in usixml and ctml and their applications\n", "abstract": " In this paper we compare the task concepts of two modeling languages, namely UsiXML and CTML. We begin with a classification of application types which can be created via a model-based UI processes. Then we evaluate not only the pure task concepts but also the embedding of task modeling in the process lifecycle. One of the results of the study is that the task concepts are actually similar but UsiXML and CTML differ in the high level modeling concepts which in turn use task modeling. In order to compare the languages also the application domains for each are examined.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Use Cases and Task Models as Driving Forces to Identify Requirements in Smart Environments\n", "abstract": " Smart environments have made the way from an abstract idea to prototypes. Assistance through smart environments can be provided for narrow scenario nowadays. From our point of view the crucial issue for those technologies is the user needs. User-centered requirements engineering can narrow the gap between technology driven smartness and those needs. Within the paper we propose a special requirements engineering process to identify the desired functionalities to implement a smart system with respect to the user. Additionally we give an outlook how design can be started based on the requirements engineering process.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Deriving emf models from java source code\n", "abstract": " A simple approach is presented to derive Ecore models from Java source code. Using the standard documentation framework\" JavaDoc\" with customized doclets, ecore models are generated without any further external tools.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Some thoughts about the horizontal development of software engineers\n", "abstract": " We argue that current patterns of thought and action in software engineering and in HCI will simply be reproduced if we are not able to become more aware of their impact on our own behaviour, attitudes and values. We suggest that a more balanced and intertwined vertical and horizontal development of people can contribute to human-centred design processes. The case study presented describes a modest attempt to demonstrate this with future software engineers and managers. Though not a spectacular example, it shows a small tight network of activities and roles over time with feedback loops to facilitate deep reflection, mutual awareness and respect. The paper supports the idea of design as an ongoing intervention process beyond problem setting and problem solving.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Unterschiedliche Pr\u00e4sentationen von Aufgabenmodellen\n", "abstract": " Aufgabenmodelle k\u00f6nnen auf unterschiedlichste Art und Weise Visualisiert werden. Das Papier fokussiert auf die M\u00f6glichkeit der Werkzeugunterst\u00fctzung f\u00fcr die Nutzung von Editoren die gleichzeitig die Bearbeitung eines Modells in unterschiedlichen Darstellungen erm\u00f6glicht. Die Editoren sind in Java geschriebene Plugins f\u00fcr die Eclipse-Entwicklungsumgebung.", "num_citations": "2\n", "authors": ["586"]}
{"title": "User Interfaces from Task Models\n", "abstract": " User-interface design is a very time consuming process. A lot of efforts have especially to be made if different platforms have to be supported. Different product lines have to be managed in this case. The paper presents a model-based development process based on task and dialog specifications. It especially focuses on a method of interactively developed platform specific user interfaces.The notion of hierarchical dialog graphs is used to specify platform independent dialog models. Platform specific models are generated automatically. They are the basis for the generation of final user interfaces specified in XUL. While model-to-model transformations are used to construct a barebone and rough sketch of the UI, it is further refined and designed by using a well-integrated graphical editor. Limitations and expected boundaries of this approach are discussed as well.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Methoden zur Adaptiven Anpassung von EPKs an Individuelle Anforderungen vor der Abarbeitung.\n", "abstract": " In diesem Artikel werden Methoden vorgestellt, wie Prozessmodelle an individuelle Anforderungen vor der Abarbeitung des Workflows angepasst werden k\u00f6nnen. Bei vielen Prozessen entscheidet sich dann, welche Teile von der zugeh\u00f6rigen Ereignisgesteuerten Prozesskette (EPK) ausgef\u00fchrt werden und welche nicht. Beispielsweise entscheidet der Kunde zu diesem Zeitpunkt h\u00e4ufig, welche von den angebotenen Dienstleistungen er in Anspruch nehmen m\u00f6chte. Au\u00dferdem k\u00f6nnten zus\u00e4tzliche Anforderungen vom Kunden aufgestellt werden, die im bisherigen Prozessmodell noch nicht ber\u00fccksichtigt wurden. Um Prozessmodelle zu erhalten, die den individuellen Anforderungen gen\u00fcgen, werden im Folgenden Methoden vorgeschlagen und an bestimmten Stellen die Sprachmittel der Ereignisgesteuerten Prozesskette erweitert, um Prozessdefinitonen zu Beginn des Prozesses adaptiver zu machen.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Task Models and Remote Usability Testing\n", "abstract": " This paper discusses the integration of remote usability testing into a model-based approach of software development. The development process consists of a sequence of interactive model transformations. It is shown how first prototypes of interactive systems, which in our approach are animated models or interactively generated applications can help to capture requirements and how the models evolve to the final interactive system. We also demonstrate how to enable usability experts to use this model-based approach for testing the usability of software in early development stages based on the tasks users have to perform. A tool is presented, which visualizes the activities of a test user based on the models. The tool supports remote usability tests, which even can be performed on mobile devices.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Models and Patterns for the Specification of Context of Use\n", "abstract": " Interactive systems have to be designed in a more flexible way to better cope with different contexts of use. We follow the idea of model-based approaches, which foster a systematic task-oriented design process but suggest some improvements. We argue that a stronger coupling of sub-models in use allows a more expressive specification of context-sensitivity. Such a coupling is supported by a general specification mechanism, which we propose. It combines behavioral and state descriptions. We further argue that appropriate description mechanisms for submodels are not sufficient to support a model-based approach. We illustrate that patterns can guide the mutual development of the sub-models in use.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Design for Change: Patterns and Components for Flexible UI Development\n", "abstract": " The paper studies relations between patterns and components for user-interface design. It demonstrates how components can be considered as implementations of patterns. It also discusses the support of patterns for reverse-and reengineering of existing software. This can especially support the transfer of software to new platforms and devices.", "num_citations": "2\n", "authors": ["586"]}
{"title": "Beziehungen zwischen Aufgabenmodellierung und objektorientierter Softwareentwicklung'\n", "abstract": " Softwareentwicklung beginnt mit der Anforderungsanalyse, um die wirklichen Bed\u00fcrfnisse der Anwender zu identifizieren. Basierend auf intuitiven Ideen und den Zielen eines Projektes m\u00fcssen pr\u00e4zise Spezifikationen entwickelt werden. Der Prozess der Pr\u00e4zisierung der Spezifikationen kann nur erfolgreich sein, wenn er gut organisiert und dokumentiert ist. Aus diesem Grunde sind gute Methoden zur Ermittlung von Anforderungsspezifikationen notwendig, die garantieren, dass die Spezifikationen einerseits f\u00fcr den weiteren Entwicklungsprozess nutzbar und andererseits zwischen Entwicklern und Anwendern kommunizierbar sind. Eine M\u00f6glichkeit daf\u00fcr ist die Anwendung formaler und halbformaler Methoden in Kombination mit verschiedenen Sichten auf das gleiche Entwurfsmodell. Der aufgaben-und der objektorientierte Ansatz stellen zwei verschiedene prinzipielle M\u00f6glichkeiten der Herangehensweise dar\u00a0\u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "Appliance independent specification of user interfaces by XML-a model-based view.\n", "abstract": " Modern software systems have to be applicable via different devices. Therefore it is important to have a chance to specify a user interface once appliance independent and then to generate interactively different presentations. This paper follows such an approach with a special focus on mobile devices. It presents a concept of device independent user interface design based on the XML-technology. The concept is applied to a small e-commerce example.", "num_citations": "2\n", "authors": ["586"]}
{"title": "How Software Engineers Deal with Task Models\n", "abstract": " How Software Engineers Deal with Task Models | Proceedings of HCI International (the 8th International Conference on Human-Computer Interaction) on Human-Computer Interaction: Ergonomics and User Interfaces-Volume I - Volume I ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of HCI International (the 8th International Conference on Human-Computer Interaction) on Human-Computer Interaction: Ergonomics and User Interfaces-Volume I - Volume IHow Software Engineers Deal with Task Models ARTICLE How Software Engineers Deal with Task Models Share on Author: Peter Forbrig profile image \u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "Integration von Literaturdatenbanken uber das WWW\n", "abstract": " Diese Arbeit bietet eine L osung f ur die Integration der unterschiedlichen Literaturdatenbankformate von BibTEX, refdbms und NCSTRL in einer Datenbank, auf die uber das WWW zugegri en wird. Dazu werden zun achst die einzelnen Literaturdatenbankformate betrachtet. Im Anschlu daran wird ein objektorientiertes Datenbankschema entwickelt, das die ad aquate Speicherung der Eintr age aller betrachteten Literaturverwaltungssysteme erlaubt. Danach werden die Strukturkon ikte, die bei der Integration auftreten, diskutiert und L osungen vorgeschlagen. Aufbauend auf diesem Schema wird ein Datenbanksystem entwickelt, das folgende M oglichkeiten bietet: Import von Eintr agen in den einzelnen Formaten, Anderung/Reklassi zierung von Eintr agen, Anfragen an die Datenbank, Export von Eintr agen in die einzelnen Formate. Das Ergebnis der Arbeit ist ein auf O2basierendes Datenbanksystem mit einer\u00a0\u2026", "num_citations": "2\n", "authors": ["586"]}
{"title": "Assistance App for a Humanoid Robot and Digitalization of Training Tasks for Post-stroke Patients\n", "abstract": " During the last decades the number of people affected by stroke increased a lot. Unfortunately, the number of therapists is not large enough to fulfill the demands for specific training for stroke survivors. Within the project E-BRAiN (Evidence-based Robot Assistance in Neurorehabilitation), we want to develop software that allows a social humanoid robot to give instructions to perform and to observe carefully selected exercises and provide feedback. In addition, the robot should motivate patients in continuing their training tasks. We focus in this paper on the Arm Ability Training (AAT). Conventionally, some AAT exercises are performed with paper and pencil under the supervision of therapists. To improve the collaboration between patient and a humanoid the training tasks have to be digitalized. Such a digitalization of one training task is discussed by using a tablet computer. This allows the social humanoid robot to\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Using the social humanoid robot pepper for training tasks\n", "abstract": " In this position paper we discuss the opportunity of using social humanoid robots like Pepper for training tasks of patients.Within our project E-BRAiN (Evidence-Based Robot Assistance in Neurorehabilitation) we try to support post-stroke patients in their arm-ability training. Such a robot has a lot of sensors. However, it is difficult to check the correct performance of tasks on paper. Therefore, we digitalized some training tasks in such a way that paper is replaced by tablets. In this way, the correct observation of the performance of tasks has been improved.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Adapting User Interface Models by Transformations Based on UI Patterns\n", "abstract": " Models used for software designs are artifacts of today\u2019s development culture. Generators and interpreters for models reduce the implementation effort and open a broader range of applications. This also is true for user interface models in any context of use (The Context of Use:                      http://www.w3.org/2005/Incubator/model-based-ui/XGR-mbui/#the-context-of-use                                        .). UI models that are designed independently of end users together with varying platforms in alternating environments can be used in many contexts. Of course, derived transformations can be complex and are not as simple as needed. Applying reusable solutions to model-based user interface specifications implies transformations that could be performed automatically and adapt user interfaces to specific contexts of use. UIs can benefit from proven structures that are commonly used in cross-domain software\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Elaboration on Terms and Techniques for Reuse of Submodels for Task and Workflow Specifications\n", "abstract": " In this paper, terms and techniques are revisited to discuss a terminology for different kinds of reuse. It identifies problems of currently used terminology and suggests using the term generic submodel. An ontology for terms like template, component, subroutine, pattern, and generic submodel is provided.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Applying UI patterns for modeling dialogs.\n", "abstract": " Software designs for use on interactive devices can be specified with models. Model-based languages allow layout specifications of UIs on different levels of abstraction. Specifications of dialogs can for instance be made with statecharts. Languages that allow specifications based on statecharts need to be adapted for use together with UI layout models. UI patterns can be applied to user interface layout and behavior designs. Corresponding specifications based on UI models can be created and changed with editors for use with platformspecific interpreters afterwards. The paper focusses the effects of UI pattern application on model-based specifications.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Managing Complexity in Activity Specifications by Separation of Concerns.\n", "abstract": " The specification of activities of the different stakeholders is an important activity during the requirements engineering phase of software development. Currently, a lot of specification languages like task models, activity diagrams, state charts, and business specifications are used to document the results of the analysis of the domain in most projects. In the paper the aspect of the separation of concerns of global cooperation and individual work by subject-oriented specifications is discussed. It will be demonstrated how task models can be used to support subject-oriented specification by so called team models and role models. This can be done in a more precise way than S-BPM specifications. Restrictions in instances of roles can be specified.", "num_citations": "1\n", "authors": ["586"]}
{"title": "IFIP WG 13.2 Workshop on User Experience and User-Centered Development Processes\n", "abstract": " This workshop focusses on the interplay of user experience (UX) and user-centered development processes of interactive systems. It is organized by the IFIP Working Group 13.2 on Human-Centered Software Methodologies. It is proposed as a follow-up activity started at an interactive session organized at HCSE 2014. Our ultimate goal is bringing together researchers and practitioners to discuss real-life case studies featuring success and/or failure stories of development processes that take into account UX as an important dimension for the interactive system at concern. Based on these discussions, we expect to deepen the understanding of problems and challenges when dealing with UX in the software development process.", "num_citations": "1\n", "authors": ["586"]}
{"title": "From Collaborative Scenario Recording to Smart Room Assistance Models\n", "abstract": " There is still much to be done in implementing assistance systems for Intelligent Environments. Different approaches exist that aim at providing the user with useful and pleasant functionality. One group of methods uses behavioral models to derive supportive actions from the observation by sensors. This is a promising approach but creating such models is a laborious and error-prone task. Examples of the behavior of persons in intelligent environments and their interactions with the devices are a starting point for the (partial) generation of such models. In this paper we present an approach to record user behavior without the need of real users performing in the real environment. As a special thematic priority we will focus on the preparation phase of collaborative scenario recording and the used notation. Additionally, the paper will explain the generation of models from the recorded traces.", "num_citations": "1\n", "authors": ["586"]}
{"title": "A Pattern Framework for Task Modeling in Smart Environments\n", "abstract": " Although, the wide range of tools that exist to support model-based approaches, creating various models, transforming, and linking them is still a time consuming and complex activity. In addition, model-based approaches lack an advanced concept of reuse of already modeled solutions. In this chapter, an attempt to overcome the high complexity of the modelling process of applications is presented. It will be shown that patterns may be employed to avoid these disadvantages, since they provide an advanced concept of reuse by definition. After introducing the concept of pattern-driven and task-based development in general concrete tool support will be discussed. In addition, the role of task models for smart environments will be discussed. Specific task patterns for this domain will be discussed as well.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Human-Centered Software Engineering: 5th IFIP WG 13.2 International Conference, HCSE 2014, Paderborn, Germany, September 16-18, 2014. Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the 5th IFIP WG 13.2 International Conference on Human-Centered Software Engineering, HCSE 2014, held in Paderborn, Germany, in September 2014. The 13 full papers and 10 short papers presented together with one keynote were carefully reviewed and selected from 35 submissions. The papers cover various topics such as integration of software engineering and user-centered design; HCI models and model-driven engineering; incorporating guidelines and principles for designing usable products in the development process; usability engineering; methods for user interface design; patterns in HCI and HCSE; software architectures for user interfaces; user interfaces for special environments; representations for design in the development process; working with iterative and agile process models in HCSE; social and organizational aspects in the software development lifecycle; human-centric software development tools; user profiles and mental models; user requirements and design constraints; and user experience and software design.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Models as a Starting Point of Software Development for Smart Environments\n", "abstract": " Creating a smart environment is a challenging task because of the excessive software development and adaptation required. Additionally, hardware in form of stationary as well as dynamic devices has to be installed. Similar to traditional software development, evaluating only the end product is often very costly in terms of time and effort needed. This is due to the fact that usually a lot of changes have to take place since the system fails to deliver the expected behaviour. Therefore, modelling is of great benefit. Models help to get a shared and thorough understanding of a specific domain. Making the animation of those models feasible allows getting a first impression of the system under development. Such prototypes of a system can be created on different levels of abstraction. The paper aims to demonstrate how modelling the human behaviour from the perspective of the activities performed in the\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Supportive User Interfaces and Task Migratability in Smart Environments.\n", "abstract": " This paper discusses supportive user interfaces as a special kind of distributed user interfaces. It introduces tangible objects as elements of a supportive user interface and discusses the role of metaphors. Furthermore, the role of supportive user interfaces for implementing the usability criteria of task migratability in smart environments is discussed. Some challenges are identified and the combination of tangible user interfaces and graphical user interfaces is suggested.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Collecting users profiles for web applications\n", "abstract": " Currently providers are trying to personalize their websites according to user profiles. With respect to the wide variety and great volume of websites, providers look for a design that is more attractive than that of competitors. They look for a unique solution. In this uniqueness, any point such as design, user-friendliness, and content offered to the customer plays a key role in its success. The main objective of this study is to provide profiles of different kinds of users. Later on, this information can be used to design appropriate websites. This kind of information can be explored from social networks. We obtained a dataset of 500 users and we have clustered this dataset to 12 clusters, and then applied Collaborative Filtering on user data to improve the results. The paper will present the corresponding results and provide an interesting overview of different profiles of users in different parts of the world.", "num_citations": "1\n", "authors": ["586"]}
{"title": "iETL: Flexibilisierung der Datenintegration in Data Warehouses\n", "abstract": " Data Warehouses bestehen aus zwei Hauptkomponenten: einer flexiblen Anfrageschnittstelle zur Datenanalyse (OLAP) und einer relativ starren ETL-Komponente zum Laden der Daten ins Data Warehouse. In diesem Artikel soll vorgestellt werden, wie die Datenintegration bedarfsabh\u00e4ngig zu flexibilisieren ist, welche Vorteile sich daraus ergeben und welche Herausforderungen bei der Entwicklung eines solchen interaktiven ETL (iETL)-Prozesses bestehen.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Smart user assistance based on dynamic model composition\n", "abstract": " Ubiquitous computing environments are complex systems since they support a variety of different input modalities such as voice, touch and keyboard/mouse input. Especially inexperienced users (e.g., elderly or novel) might be confused with the abundance of interaction opportunities. This paper presents an approach to specify smart user assistance for mobile devices. The mobile application shows performable tasks, explains modalities and commands, and provides interactive exercises in order to get the user familiar with the system interaction. The complexity of the interactive exercises and the selection of most suitable modalities are adapted based on user characteristics. The advantage is that users become acquainted with the use of different modalities step by step.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Coordination in Perioperative Systems-A Tacit View.\n", "abstract": " Coordination of perioperative systems is a deeply collaborative process, distributed over time and space. The paper analyses coordination in a perioperative centre along the three temporal levels suggested in [1]: allocation, scheduling, and synchronization. In particular, the tension between schedules and actual demands in synchronization work is reflected by looking at example situations. It is shown how dedicated coordination workers try to find a balance between different co-existing values and goals of all stakeholders. Their abilities to analyze a situation, to negotiate problems and to react flexibly are needed in systems such as modern hospitals. It has to be taken into account in systems design.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Pattern-driven engineering of interactive computing systems (PEICS)\n", "abstract": " Since almost over one decade, patterns have been gaining a lot of interest in the domain of Human-Computer-Interaction (HCI) engineering. It is generally agreed upon that patterns can be used to facilitate the exchange of best practices and knowledge between the interdisciplinary team members, involved in interactive systems design process. Despite intense research activities in the last years, HCI patterns still lack in a standardized description and organization. This makes it difficult for the developers to identify the relevant patterns for solving a problem as well as to apply them accordingly to the problem context.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Human-centred software engineering\n", "abstract": " The conference series HCSE (Human-Centred Software Engineering) was established four years ago in Salamanca. HCSE 2010 is the third working conference of IFIP Working Group 13.2, Methodologies for User-Centered Systems Design. The goal of HCSE is to bring together researchers and practitioners interested in strengthening the scientific foundations of user interface design, examining the relationship between software engineering and human-computer interaction and focusing on how to strengthen user-centered design as an essential part of software engineering processes. As a working conference, substantial time was devoted to the open and lively discussion of papers.The interest in the conference was positive in terms of submissions and participation. We received 42 contributions that resulted in 10 long papers, 5 short papers and 3 poster papers. The selection was carried out carefully by the\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Integrating usability methods into model-based software development\n", "abstract": " Model-based software development is carried out as a well-defined process. Depending on the applied approach, different phases can be distinguished, for example, requirements specification, design, prototyping, implementation, and usability evaluation. During this iterative process, manifold artifacts are developed and modified, including models, source code, and usability evaluation data. CASE tools support the development stages well, but lack a seamless integration of usability evaluation methods. We aim at bridging the gap between development and usability, through enabling the cooperative use of artifacts with the particular tools. As a result of integration usability, experts save time to prepare an evaluation and evaluation results can be easily incorporated back into the development process. We show exemplary our work on enhancing the Eclipse framework to support usability evaluation for task\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Transactions in Task Models\n", "abstract": " In this paper we propose a method to model the behaviour of task models in error situations. For these purposes we follow the idea of transactions in database systems. By encapsulating tasks in transactions the atomicity of complex tasks can be asserted. Corresponding tool support is presented which includes modelling and simulating task models. The tools themselves were developed in a model-based way.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Towards activity representations for describing task dynamics\n", "abstract": " Activity representations are proposed as an extension to traditional task models. Basically, an activity representation describes fragments of knowledge about several tasks and how to interleave or merge them. Knowledge about single tasks is spread over several representations at different levels of abstraction. Lower-level models are more ephemeral and help people to organise their day-to-day activities. On the one hand, their creation is supported by more stable representations reflecting goals, activity rhythms, domain knowledge etc. On the other hand, situated action is necessary to create such (task) knowledge.                 We show that higher-order activity representations provide a better explanation of some task-related aspects than monolithic single task models. For example, they support re-/on-the-fly planning and contribute to dispel the belief in complete and consistent task descriptions. The\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Results of Mousemap-based Usability Evaluations\u2013Towards Automating Analyses of Behavioral Aspects\n", "abstract": " In this paper, we present selected results from 23 test sessions that were recorded and analyzed with our usability evaluation environment ObSys. The central topic is the question what information we do obtain from MouseMaps (see [6] and [7]). MouseMap is the working name for the visualization ObSys offers. For analyzing this, several usability tests with contrasting situations (fluid workflows vs. the occurrence of constructed failures) were created and executed with testing persons. Then, we analyzed which errors lead to behaviors that could be recognized reliably in the Mouse Map visualization. The analysis of the test data identified two classes of patterns: behavioral patterns in failure situations and general behavioral patterns. Both data were sampled to understand how ordinary software usage and exceptional acting look alike in MouseMaps. A view discusses in which ways this information will be used to automate the recognition of usability problems.", "num_citations": "1\n", "authors": ["586"]}
{"title": "User interface design patterns for interactive modeling in demography and biostatistics\n", "abstract": " The paper is focused on the interface design patterns for interactive modeling and it is an effort to systematically describe the usage of UID patterns in this area. Main objectives were to develop the UID patterns to increase the usability of the software for numerical computing and to make the process of numerical simulation highly interactive. On the basis of these UID patterns authors developed reusable software components in several programming languages: Java, Python, C++ and Matlab. The patterns described in the paper were verified in the development of practical software tools for demographers and biostatisticians, but can be readily applicable to other domains of numerical computing.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Design, specification and verification of interactive systems\n", "abstract": " Design, specification and verification of interactive systems | DIAL.pr - BOREAL Skip to main content User menu Cart Login Home DIAL.pr - BOREAL Search form Search Home All Publications Export Help You are here Home\u00bb Design, specification and verification of interactive systems Acc\u00e8s \u00e0 distance ? S'identifier sur le proxy UCLouvain | Saint-Louis Design, specification and verification of interactive systems Primary tabs view(active tab) attached files FNRS validity Forbrig, Peter [NA] Limbourg, Quentin [UCL] Urban, Bodo [NA] Vanderdonckt, Jean [UCL] metadata Document type Document de travail (Working Paper) Publication date 2002 Language Anglais Collection IAG - LSM Working Papers - 02/63 Affiliation Louvain School of Management - Operations and Information Links http://hdl.handle.net/2078/18264[Handle] Bibliographic reference Forbrig, Peter ; Limbourg, Quentin ; Urban, Bodo ; Vanderdonckt, Jean\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Konzeption und Implementierung eines Prototypen zur Pr\u00e4sentation von Versicherungsdiensten im WWW\n", "abstract": " Diese Diplomarbeit ist ein Bestandteil einer Kooperation zwischen der AVSG, der TU Ilmenau (FB Telematik) und des Fachbereiches Informatik der Universit at Rostock zur Erstellung eines Prototypen, mit dessen Hilfe sich Kunden im WWW Angebote f ur eine Kapital-und Lebensversicherung der Gothaer Versicherungen aG erstellen lassen k onnen. Die Angebote werden in einer Datenbank verwaltet und automatisch an zust andige Sachbearbeiter weitergeleitet. Diese Arbeit besch aftigt sich mit der Datenbankanbindung und dem Weiterleiten der Angebote.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Transaktionssteuerung in einer verteilten kooperativen CSCW-Anwendungsumgebung\n", "abstract": " Im Bereich der Verarbeitungsmechanismen sind fr Datenbanksysteme in letzter Zeit eine Reihe neuartiger Transaktionskonzepte, wie zB geschachtelte und Mehrschicht-Transaktionen, Sagas und Entwurfstransaktionen vorgeschlagen worden. Sie wenden sich alle dem Problem langer und komplexer Transaktionen zu, wie sie insbesondere in verteilten, kooperativen Anwendungsumgebungen, etwa der rechnergest tzten Konstruktion, anzutre en sind. Ausgangspunkt der Arbeit ist zun chst eine Klassi zierung und Beschreibung der erweiterten Transaktionsmodelle. Dazu sollen die spezi schen Anforderungen in einer CSCW-Anwendungsumgebung analysiert werden. Der Schwerpunkt wird in der Erarbeitung eines geeigneten allgemeing ltigen und erweiterbaren Transaktionskonzeptes auf Basis des Object Transaction Service (OTS) und der Common Object Request Broker Architecture (CORBA) der Object\u00a0\u2026", "num_citations": "1\n", "authors": ["586"]}
{"title": "Untersuchungen zur Nutzung objektorientierter CASE\u25a1 Werkzeuge in der Versicherungsbranche\n", "abstract": " Diese Diplomarbeit untersucht CASE-Werkzeugumgebungen auf ihre Einsatzf\u00e4higkeit in der Versicherungsbranche. Am Anfang der Arbeit wird die Situation der Software-Entwicklung bei den Gothaer Versicherungen beschrieben. Im Anschlu\u00df daran wird ein Kriterienkatalog erstellt. Er beinhaltet sowohl allgemeine Kriterien als auch Kriterien, welche auf die Situation bei den Gothaer Versicherungen bezogen sind. Das Kapitel 4 untersucht mit Hilfe des Kriterienkataloges am Markt verf\u00fcgbare Werkzeugumgebungen auf ihre Einsatzf\u00e4higkeit in der Versicherungsbranche. Am Ende der Untersuchung wird das Produkt empfohlen, welches am dichtesten an die Idealvorstellung heran gekommen ist, und es werden Hinweise zur Verbesserung der vorhandenen Werkzeuge gegeben.", "num_citations": "1\n", "authors": ["586"]}
{"title": "A War against the People\n", "abstract": " In a Maputo church, light streams down from the broken stained glass windows at the back, blinding the congregation. As birds flap in and out of the high Portuguese vaults, squawking through the cool architecture, the Mozambican churchgoers sing quietly, as if exhausted.", "num_citations": "1\n", "authors": ["586"]}
{"title": "Ein Konzept zur Wiederverwendung von Dokumenten der Strukturierten Analyse\n", "abstract": " Die strukturierte Analyse hat sich als eine sehr tragf\u00e4hige Vorgehensweise zu Beginn der Entwicklung eines Softwareproduktes herausgestellt. Die Dokumente der strukturierten Analyse sind die entscheidenden Unterlagen zur Kommunikation der Softwareentwickler mit dem Auftraggeber. Wichtige Einsichten \u00fcber die Struktur und den Inhalt des zu erarbeitenden Softwareproduktes werden bei der Erstellung dieser Unterlagen gewonnen.", "num_citations": "1\n", "authors": ["586"]}