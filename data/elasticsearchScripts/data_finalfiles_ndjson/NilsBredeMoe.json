{"title": "A case study of coordination in distributed agile software development\n", "abstract": " Global Software Development (GSD) has gained significant popularity as an emerging paradigm. Companies also show interest in applying agile approaches in distributed development to combine the advantages of both approaches. However, in their most radical forms, agile and GSD can be placed in each end of a plan-based/agile spectrum because of how work is coordinated. We describe how three GSD projects applying agile methods coordinate their work. We found that trust is needed to reduce the need of standardization and direct supervision when coordinating work in a GSD project, and that electronic chatting supports mutual adjustment. Further, co-location and modularization mitigates communication problems, enables agility in at least part of a GSD project, and renders the implementation of Scrum of Scrums possible.", "num_citations": "43\n", "authors": ["1352"]}
{"title": "The future of information security incident management training: A case study of electrical power companies\n", "abstract": " Recent attacks and threat reports indicate that industrial control organizations are attractive targets for attacks. Emerging threats create the need for a well-established capacity for responding to unwanted incidents. Such a capacity is influenced by organizational, human, and technological factors. We have conducted extensive fieldwork for 2.5 years in Norwegian electric power companies with the aim of identifying challenges for improving information security incident management practices. Semi-structured interviews, document analysis, a survey and participant observations have been performed as part of this case study.We describe how training for responding to information security incidents is given low priority and that different types of personnel, such as business managers and technical personnel, have different perspectives and priorities in regard to information security. Moreover, there is a gap in how IT\u00a0\u2026", "num_citations": "38\n", "authors": ["1352"]}
{"title": "Enabling knowledge sharing in agile virtual teams\n", "abstract": " Virtual teams, with a high level of interdependence and cooperation among team members, are one of the building blocks of successful global software organizations. Shared team knowledge is vital for effective collaboration in virtual teams. Hence, it makes sense for organizations to put in place efforts to ensure that teams have a sufficient level of shared knowledge. A successful agile virtual team needs to have shared knowledge on the tasks and how to do them, who knows what in the team, the development process, and the goals of the team. While shared knowledge helps on communication and collaboration, virtual teams meet several challenges in the form of values and norms, lack of face-to-face communication, time-zone differences, and difficulties in building and maintaining trust. We describe and discuss how a framework for establishing shared knowledge was applied to a global virtual agile team in a\u00a0\u2026", "num_citations": "28\n", "authors": ["1352"]}
{"title": "Key challenges of improving agile teamwork\n", "abstract": " Inspect and adapt is essential to succeed with agile software development. Our objective was to understand the challenges of software process improvement in agile software development teams. We designed a multiple case study consisting of five projects in three software product companies that applied Scrum. We collected data in semi-structured interviews. We found that long-term quality was often in conflict with short-term progress, specialization hinders self-management, process related problems are difficult to solve and there are major organizational barriers to self-management. The main conclusion drawn from this work is that software process improvement challenges in agile software development are the problems of increasing redundancy to create conditions for the team to self-manage, to learn how to learn, and to improving agile software development as a large long-term organizational\u00a0\u2026", "num_citations": "23\n", "authors": ["1352"]}
{"title": "Understanding collaborative challenges in it security preparedness exercises\n", "abstract": " IT security preparedness exercises allow for practical collaborative training, which in turn leads to improved response capabilities to information security incidents for an organization. However, such exercises are not commonly performed in the electric power industry. We have observed a tabletop exercise as performed by three organizations with the aim of understanding challenges of performing such exercises. We argue that challenges met during exercises could affect the response process during a real incident as well, and by improving the exercises the response capabilities would be strengthened accordingly. We found that the response team must be carefully selected to include the right competences and all parties that would be involved in a real incident response process, such as technical, managerial, and business responsible. Further, the main goal of the exercise needs to be well understood\u00a0\u2026", "num_citations": "19\n", "authors": ["1352"]}
{"title": "Challenges in IT security preparedness exercises: A case study\n", "abstract": " The electric power industry is currently implementing major technological changes in order to achieve the goal of smart grids. However, these changes are expected to increase the susceptibility of the industry to IT security incidents. IT security preparedness exercises are not commonly performed in the electric power industry, even though this industry is considered part of society's critical infrastructure. Resolving an IT security incident requires inter-departmental collaborations between various categories of personnel, and to successfully achieve this, training is required. The process of preparing a response to incidents enhances the nature of collaboration, coordination, and communication within an organization. Our objective is to understand the challenges faced when performing IT security preparedness exercises, as challenges experienced during these exercises affect the response process during a real\u00a0\u2026", "num_citations": "16\n", "authors": ["1352"]}
{"title": "Agile Digital Transformation: A Case Study of Interdependencies.\n", "abstract": " Current digital transformation moves information systems development into larger transformation programs with higher strategic significance and increased complexity in organization. Agile and BizDev are among the practical methods used to practice digital transformation. These methods are characterized by autonomous and diverse teams, and experimental development with the aim of achieving faster time-to-market and customer centric digital offerings. While empirical evidence points to positive effects of such methods in smaller projects, we know less about how key aspects of agile work with increasing interdependencies resulting from larger, more complex organization. Driven by our research question-how are interdependencies addressed in agile digital transformation\u2013we contribute by presenting findings from an empirical case study of a bank practicing agile digital transformation. Applying a theoretical lens of dynamic interactions, our findings sensitize us to the necessity of negotiations, and suggest the need for more research on of the role of divergent evaluative principles in agile digital transformation", "num_citations": "15\n", "authors": ["1352"]}
{"title": "An ISO 9001: 2000 certificate and quality awards from outside-: What's inside?-a case study\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "12\n", "authors": ["1352"]}
{"title": "From Improving Processes To Improving Practice: Software Process Improvement in Transition from Plan-driven to Change-driven Development\n", "abstract": " As information technology\u2019s role in the modern economy grows in importance, society makes exponentially greater demands on the diversity and quality of the software being produced. To develop high quality software, a good software development process is important. Software process improvement is about improving software quality and reliability, employee and client satisfaction, and return on investment. From the mid 1990s onwards, agile software development has been challenging the traditional (plandriven) view of software development. Agile software development accords primacy to uniqueness, ambiguity, complexity, and change, as opposed to prediction, verifiability, and control.  The fundamental differences between traditional and agile software process improvement and the lack of research on these differences, gave rise to the overall problem addressed by this thesis: \u201cHow does Software Process Improvement work change with the introduction of agile software development in plan-driven companies?\u201d This thesis focus on answering the following research questions: What characterizes SPI in plan-driven companies?, What characterizes SPI in change-driven companies?, and What are the key SPI challenges when implementing change-driven development?  This thesis summarizes six years of studies in three small and medium-sized companies in Norway. The overall research method has been the same: case study and action research. Qualitative data in the form of interviews and participant observations constitute the most important source of evidence.  Through a synthesis of contributions from twelve papers, ten key findings\u00a0\u2026", "num_citations": "11\n", "authors": ["1352"]}
{"title": "Re-conceptualizing requirements engineering: findings from a large-scale, agile project\n", "abstract": " Agile development is a force that reshapes requirements engineering (RE). Agile RE processes are not constrained to pre-development phase like in traditional RE; they're evenly spread throughout development. High-level RE occurs at the project beginning, and then agile RE continues at each development cycle. Each development cycle starts with customer representatives discussing requirements with the development teams. To seek new understanding of the requirements engineering process in agile projects, we have applied the model of software development as a conversation. In this paper we describe this model and use it to explain a selection of findings from a case study in a large-scale agile project.", "num_citations": "8\n", "authors": ["1352"]}
{"title": "MAFIIA\u2014an architectural description framework: experience from the health care domain\n", "abstract": " Healthcare information systems are characterized by having many stakeholders, roles, complex and diverse information systems, high degree of formalized working practices and an intense focus on quality concerns like interoperability, security and reliability. There is an emerging need for a structured architectural tool for supporting system developers and architects working with this kind of critical infrastructure. This paper presents MAFIIA - an architectural description framework specialized for the health care domain. The framework has been used in the development of three different healthcare information systems: a system for individual care plans, a platform for image-guided surgery and a patient evacuation support system. The experience from the case studies shows that the framework is a useful and flexible tool for creating an architectural description, and assists in keeping the focus on selected\u00a0\u2026", "num_citations": "8\n", "authors": ["1352"]}
{"title": "Understanding Barriers to Internal Startups in Large Organizations: Evidence from a Globally Distributed Company\n", "abstract": " Large global companies need to speed up their innovation activities to increase competitive advantage. However, such companies' organizational structures impede their ability to capture trends they are well aware of due to bureaucracy, slow decision-making, distributed departments, and distributed processes. One way to strengthen the innovation capability is through fostering internal startups. We report findings from an embedded multiple-case study of five internal startups in a globally distributed company to identify barriers for software product innovation: late involvement of software developers, executive sponsor is missing or not clarified, yearly budgeting and planning, unclear decision-making authority, lack of digital infrastructure for experimentation and access to data from external actors. Drawing on the framework of continuous software engineering proposed by Fitzgerald and Stol, we discuss the role of BizDev in software product innovation. We suggest that lack of continuity, rather than the lack of speed, is an ultimate challenge for internal startups in large global companies.", "num_citations": "6\n", "authors": ["1352"]}
{"title": "Large-Scale Agile Transformation: A Case Study of Transforming Business, Development and Operations\n", "abstract": " Today, product development organizations are adopting agile methods in units outside the software development unit, such as in sales, market, legal, operations working with the customer. This broader adoption of agile methods has been labeled large-scale agile transformation and is considered a particular type of organizational change, originating in the software development units. So far, there is little research-based advice on conducting such transformations. Aiming to contribute towards providing relevant research advice on large-scale agile transformation, we apply a research-based framework for evaluating organizational agility on a product development program in a maritime service provider organization. We found that doing a large-scale agile transformation involves many significant challenges, such as having a shared understanding of the problem, getting access to users, and getting commitment to\u00a0\u2026", "num_citations": "3\n", "authors": ["1352"]}
{"title": "Using guilds to foster internal startups in large organizations: a case study\n", "abstract": " Software product innovation in large organizations is fundamentally challenging because of restrained freedom and flexibility to conduct experiments. As a response, large agile companies form internal startups to initiate employdriven innovation, inspired by Lean startup. This case study investigates how communities of practice support five internal startups in developing new software products within a large organization. We observed six communities of practice meetings, two workshops and conducted ten semi-structured interviews over the course of a year. Our findings show that a community of practice, called the Innovation guild, allowed internal startups to help each other by collectively solving problems, creating shared practices, and sharing knowledge. This study confirms that benefits documented in earlier research into CoPs also hold true in the context of software product innovation in large organizations. Henceforth, we suggest that similar innovation guilds, as described in this paper, can support large companies in the innovation race for new software products.", "num_citations": "1\n", "authors": ["1352"]}
{"title": "Employee-driven innovation to fuel internal software startups: preliminary findings\n", "abstract": " To keep up with the pace of innovation, established companies are increasingly relying on internal software startups. However, succeeding with such startups is a challenging task because internal startups need to find a balance between the interests of the company and the interest of the innovator. One approach that is argued to strengthen innovation in existing companies is employee-driven innovation (EDI). This study explores this argument by examining two internal software startups in companies aligned with the principles of EDI and with a strong focus on innovation. The preliminary findings indicate that startups with EDI are characterized by commitment towards innovation, cooperative orientation, and autonomy. The findings suggest that internal software startups may be strengthened when the parent companies practice EDI.", "num_citations": "1\n", "authors": ["1352"]}
{"title": "Combining Knowledge Acquisition with User Centred Design\n", "abstract": " Combining Knowledge Acquisition with User Centred Design | Proceedings of HCI International (the 8th International Conference on Human-Computer Interaction) on Human-Computer Interaction: Ergonomics and User Interfaces-Volume I - Volume I ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of HCI International (the 8th International Conference on Human-Computer Interaction) on Human-Computer Interaction: Ergonomics and User Interfaces-Volume I - Volume ICombining Knowledge Acquisition with User Centred Design Article Combining Knowledge Acquisition with User Centred Design Share on \u2026", "num_citations": "1\n", "authors": ["1352"]}