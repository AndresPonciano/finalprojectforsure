{"title": "Introducing Aesthetics to Software Visualization\n", "abstract": " In software visualization, but also in information visualization in general, there is a great need for evaluation of visualization metaphors. To reduce the amount of empirical studies a computational approach has been applied successfully, e.g., to graph visualization. It is based on measurable aesthetic heuristics that are used to estimate the human perception and the processing of visualizations. This paper lays a foundation for adopting this approach to any field of information visualization by providing a method, the repertory grid technique, to identify aesthetics that are measurable, metaphor-specific, and relevant to the user in a structured and repeatable way. We identified 25 unique aesthetics and revealed that the visual appearance of the investigated visualizations is mainly influenced by the package structure whereby methods are underrepresented. These findings were used to improve existing visualizations.", "num_citations": "7\n", "authors": ["964"]}
{"title": "Visualization and machine learning for data center management\n", "abstract": " In this paper, we present a novel tool for data center management that incorporates data visualization and machine learning capabilities. We developed the tool in the context of an action design research project conducted at a large government agency in Germany, which hosts three highly available data centers containing more than 10,000 servers. We derived the requirements for the tool from qualitative interviews with agency employees who are familiar with monitoring the data center infrastructure as well as from a review of existing data center and other large infrastructure monitoring solutions. We implemented a web-based 3D prototype for the tool as an Angular 6 application running on Node.js, and evaluated it with the same employees. Most participants preferred the new tool, which provided a significantly better option and enabled visualization of historical data for all server instances at the same time, as well as real-time charts. Planned improvements will take advantage of the full potential of machine learning for time series forecasting.", "num_citations": "5\n", "authors": ["964"]}
{"title": "A User-centered approach for optimizing information visualizations\n", "abstract": " The optimization of information visualizations is time consuming and expensive. To reduce this we propose an improvement of existing optimization approaches based on user-centered design, focusing on readability, comprehensibility, and user satisfaction as optimization goals. The changes comprise (1) a separate optimization of user interface and representation, (2) a fully automated evaluation of the representation, and (3) qualitative user studies for simultaneously creating and evaluating interface variants. On the basis of these results we are able to find a local optimum of an information visualization in an efficient way.", "num_citations": "2\n", "authors": ["964"]}
{"title": "Understanding conditional compilation through integrated representation of variability and source code\n", "abstract": " The C preprocessor (CPP) is a standard tool for introducing variability into source programs and is often applied either implicitly or explicitly for implementing a Software Product Line (SPL). Despite its practical relevance, CPP has many drawbacks. Because of that it is very difficult to understand the variability implemented using CPP. To facilitate this task we provide an innovative analytics tool which bridges the gap between feature models as more abstract representations of variability and its concrete implementation with the means of CPP. It allows to interactively explore the entities of a source program with respect to the variability realized by conditional compilation. Thus, it simplifies tracing and understanding the effect of enabling or disabling feature flags.", "num_citations": "2\n", "authors": ["964"]}