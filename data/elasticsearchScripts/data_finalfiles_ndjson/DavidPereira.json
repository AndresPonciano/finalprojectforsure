{"title": "Towards an architecture for emotional BDI agents\n", "abstract": " In this paper we present the emotional-BDI architecture, an extension to the BDI architecture supporting artificial emotions and including internal representations for agent's capabilities and resources. The architecture we present here is conceptual, defining which components should exist so that emotional-BDI agents can use effective capabilities as well as effective resources in order to better cope with highly dynamic environments", "num_citations": "75\n", "authors": ["1665"]}
{"title": "Formal modelling of emotions in BDI agents\n", "abstract": " Emotional-BDI agents are BDI agents whose behaviour is guided not only by beliefs, desires and intentions, but also by the role of emotions in reasoning and decision-making. The  logic is a formal system for expressing the concepts of the Emotional-BDI model of agency. In this paper we present an improved version of the  logic and show how it can be used to model the role of three emotions in Emotional-BDI agents: fear, anxiety and self-confidence. We also focus in the computational properties of  which can lead to its use in automated proof systems.", "num_citations": "63\n", "authors": ["1665"]}
{"title": "Modelling emotional BDI agents\n", "abstract": " Emotional-BDI agents are agents whose behaviour is guided not only by beliefs, desires and intentions, but also by the role of emotions in reasoning and decision-making. In this paper we introduce the logic EBDI for specifying Emotional-BDI agents in general and a special kind of Emotional-BDI agent under the effect of fear. The focus of this work is in the expressiveness of EBDI and on using it to establish some properties which agents under the effect of an emotion should exhibit.", "num_citations": "29\n", "authors": ["1665"]}
{"title": "Partial Derivative Automata Formalized in Coq\n", "abstract": " In this paper we present a computer assisted proof of the correctness of a partial derivative automata construction from a regular expression within the Coq proof assistant. This proof is part of a formalization of Kleene algebra and regular languages in Coq towards their usage in program certification.", "num_citations": "27\n", "authors": ["1665"]}
{"title": "RTFM-core: Language and Implementation\n", "abstract": " Robustness, real-time properties and resource efficiency are key properties to embedded devices of the CPS/IoT era. In this paper we propose a language approach RTFM-core, and show its potential to facilitate the development process and provide highly efficient and statically verifiable implementations. Our programming model is reactive, based on the familiar notions of concurrent tasks and (single-unit) resources. The language is kept minimalistic, capturing the static task, communication and resource structure of the system. Whereas C-source can be arbitrarily embedded in the model, and/or externally referenced, the instep to mainstream development is minimal, and a smooth transition of legacy code is possible. A prototype compiler implementation for RTFM-core is presented. The compiler generates C-code output that compiled together with the RTFM-kernel primitives runs on bare metal. The RTFM-kernel\u00a0\u2026", "num_citations": "20\n", "authors": ["1665"]}
{"title": "A real-time semantics for the IEC 61499 standard\n", "abstract": " The IEC 61499 standard provides an executable model for distributed control systems in terms of interacting function blocks. However, the current IEC 61499 standard lacks appropriate timing semantics for the specification of timing requirements, reasoning on timing properties at the model level, and for the timing verification of a specific deployment. In this paper we address this fundamental shortcoming by proposing Real-Time-4-FUN, a real-time semantics for IEC 61499. The key property is the preservation of non-determinism, allowing us to reason on (and verify) timing properties at the model level without assuming any specific scheduling policy or stipulating specific order of execution for the deployment. This provides for a clear separation of concerns, where the designer can focus on properties of the application prior to, and separately from, deployment verification. The proposed timing semantics is\u00a0\u2026", "num_citations": "18\n", "authors": ["1665"]}
{"title": "Deciding regular expressions (in-) equivalence in Coq\n", "abstract": " This work presents a mechanically verified implementation of an algorithm for deciding regular expression (in-)equivalence within the Coq proof assistant. This algorithm decides regular expression equivalence through an iterated process of testing the equivalence of their partial derivatives and also does not construct the underlying automata. Our implementation has a refutation step that improves the general efficiency of the decision procedure by enforcing the in-equivalence of regular expressions at early stages of computation. Recent theoretical and experimental research provide evidence that this method is, on average, more efficient than the classical methods based in automata. We present some performance tests and comparisons with similar approaches.", "num_citations": "18\n", "authors": ["1665"]}
{"title": "Logic-based schedulability analysis for compositional hard real-time embedded systems\n", "abstract": " Over the past decades several approaches for schedulability analysis have been proposed for both uni-processor and multi-processor real-time systems. Although different techniques are employed, very little has been put forward in using formal specifications, with the consequent possibility for misinterpretations or ambiguities in the problem statement. Using a logic based approach to schedulability analysis in the design of hard real-time systems eases the synthesis of correct-by-construction procedures for both static and dynamic verification processes. In this paper we propose a novel approach to schedulability analysis based on a timed temporal logic with time durations. Our approach subsumes classical methods for uni-processor scheduling analysis over compositional resource models by providing the developer with counter-examples, and by ruling out schedules that cause unsafe violations on the system\u00a0\u2026", "num_citations": "17\n", "authors": ["1665"]}
{"title": "A novel run-time monitoring architecture for safe and efficient inline monitoring\n", "abstract": " Verification and testing are two of the most costly and time consuming steps during the development of safety critical systems. The advent of complex and sometimes partially unpredictable computing architectures such as multicore commercial-of-the-shelf platforms, together with the composable development approach adopted in multiple industrial domains such as avionics and automotive, rendered the exhaustive testing of all situations that could potentially be encountered by the system once deployed on the field nearly impossible. Run-time verification (RV) is a promising solution to help accelerate the development of safety critical applications whilst maintaining the high degree of reliability required by such systems. RV adds monitors in the application, which check at run-time if the system is behaving according to predefined specifications. In case of deviations from the specifications during the\u00a0\u2026", "num_citations": "15\n", "authors": ["1665"]}
{"title": "Formal verification of aadl models using uppaal\n", "abstract": " Cyber-Physical Systems (CPS) are known to be highly complex systems which can be applied to a variety of different environments, covering both civil and military application domains. As CPS are typically complex systems, its design process requires strong guarantees that the specified functional and non-functional properties are satisfied on the designed application. Model-Driven Engineering (MDE) and high-level specification languages are a valuable asset to help the design and evaluation of such complex systems. However, when looking at the existing MDE tool-support, it is observed that there is still little support for the automated integration of formal verification techniques in these tools. Given that formal verification is necessary to ensure the levels of reliability required by safety critical CPS, this paper presents an approach that aims to integrate the Model Checking technique in the CPS design process for\u00a0\u2026", "num_citations": "14\n", "authors": ["1665"]}
{"title": "End-to-end response time of IEC 61499 distributed applications over switched ethernet\n", "abstract": " The IEC 61499 standard provides means to specify distributed control systems in terms of function blocks. For the deployment, each device may hold one or many logical resources, each consisting of a function block network with service interface blocks at the edges. The execution model is event driven (asynchronous), where triggering events may be associated with data (and seen as messages). In this paper, we propose a low-complexity implementation technique allowing to assess end-to-end response times of event chains spanning over a set of networked devices. Based on a translation of IEC 61499 to RTFM<;xref rid=\"fn1\" ref-type=\"fn\"><;sup>1<;/sup><;/xref><;fn id=\"fn1\"><;label><;sup>1<;/sup> <;/label><;p>Real-time for the masses.", "num_citations": "13\n", "authors": ["1665"]}
{"title": "Towards improved validation of autonomous systems for smart farming\n", "abstract": " ENABLE-S3 is a use-case driven European research project focusing on the implementation and validation of autonomous cyber-physical systems (CPS) in different application domains. This work describes the efforts done so far in the development of infrastructure and tools to make improved validation concepts in agriculture, being part of one of the thirteen use cases included in the project. Aspects related to communication, autonomous vehicles, hyperspectral images, image processing, Unmanned Aerial Vehicles (UAVs), and simulation environments are described. The combination and interaction of these key technologies give rise to social, economic and environmental implications with enormous benefits, increasing the quality of the crops and reducing efforts during their growth and harvesting.", "num_citations": "10\n", "authors": ["1665"]}
{"title": "KAT and PHL in Coq\n", "abstract": " In this article we describe an implementation of Kleene algebra with tests (KAT) in the Coq theorem prover. KAT is an equational system that has been successfully applied in program verification and, in particular, it subsumes the propositional Hoare logic (PHL). We also present an PHL encoding in KAT, by deriving its deduction rules as theorems of KAT. Some examples of simple program's formal correctness are given. This work is part of a study of the feasibility of using KAT in the automatic production of certificates in the context of (source-level) Proof-Carrying-Code (PCC). .", "num_citations": "10\n", "authors": ["1665"]}
{"title": "Design and implementation of secret key agreement for platoon-based vehicular cyber-physical systems\n", "abstract": " In a platoon-based vehicular cyber-physical system (PVCPS), a lead vehicle that is responsible for managing the platoon\u2019s moving directions and velocity periodically disseminates control messages to the vehicles that follow. Securing wireless transmissions of the messages between the vehicles is critical for privacy and confidentiality of the platoon\u2019s driving pattern. However, due to the broadcast nature of radio channels, the transmissions are vulnerable to eavesdropping. In this article, we propose a cooperative secret key agreement (CoopKey) scheme for encrypting/decrypting the control messages, where the vehicles in PVCPS generate a unified secret key based on the quantized fading channel randomness. Channel quantization intervals are optimized by dynamic programming to minimize the mismatch of keys. A platooning testbed is built with autonomous robotic vehicles, where a TelosB wireless node is\u00a0\u2026", "num_citations": "8\n", "authors": ["1665"]}
{"title": "A comparison of formal verification approaches for IEC 61499\n", "abstract": " Engineering and computer science have come up with a variety of techniques to increase the confidence in systems, increase reliability, facilitate certification, improve reuse and maintainability, improve interoperability and portability. Among them are various techniques based on formal models to enhance testing, validation and verification. In this paper, we are concentrating on formal verification both at runtime and design time of a system. Formal verification of a system property at design time is the process of mathematically proving that the property indeed holds. At runtime, one can check the validity of the property and report deviations by monitoring the system execution. Formal verification relies on semantic models, descriptions of the system and its properties. We report on ongoing verification work and present two different approaches for formal verification of IEC 61499-based programs. We provide two\u00a0\u2026", "num_citations": "8\n", "authors": ["1665"]}
{"title": "Monitoring for a decidable fragment of mtl-\u222b\n", "abstract": " Temporal logics targeting real-time systems are traditionally undecidable. Based on a restricted fragment of MTL-R, we propose a new approach for the runtime verification of hard real-time systems. The novelty of our technique is that it is based on incremental evaluation, allowing us to effectively treat duration properties (which play a crucial role in real-time systems). We describe the two levels of operation of our approach: o\u270f ine simplification by quantifier removal techniques; and online evaluation of a three-valued interpretation for formulas of our fragment. Our experiments show the applicability of this mechanism as well as the validity of the provided complexity results.", "num_citations": "7\n", "authors": ["1665"]}
{"title": "Towards a runtime verification framework for the ada programming language\n", "abstract": " Runtime verification is an emerging discipline that investigates methods and tools to enable the verification of program properties during the execution of the application. The goal is to complement static analysis approaches, in particular when static verification leads to the explosion of states. Non-functional properties, such as the ones present in real-time systems are an ideal target for this kind of verification methodology, as are usually out of the range of the power and expressiveness of classic static analyses. In this paper, we present a framework that allows real-time programs written in Ada to be augmented with runtime verification capabilities. Our framework provides the infrastructures which is needed to instrument the code with runtime monitors. These monitors are responsible for observing the system and reaching verdicts about whether its behavior is compliant with its non-functional properties. We\u00a0\u2026", "num_citations": "7\n", "authors": ["1665"]}
{"title": "Rtfm-lang static semantics for systems with mixed criticality\n", "abstract": " In an embedded system, functions often operate under different requirements. In the extreme, a failing safety critical function may cause collateral damage (and hence consider to be a system failure) while non critical functions affect only the quality of service. Approaches by partitioning the system\u2019s functions into sandboxes require virtualization mechanisms by the underlying platform and thus prohibit deployment to the bulk of microcontroller based systems. In this paper we discuss an alternative approach based on static semantic analysis performed directly on the system specification expressed in the form of an object oriented (OO) model in the experimental language RTFM-lang. This would allow to (at compile time) to discriminate in between critical and non-critical functions, and assign these (by means of statically checkable typing rules) appropriate access rights. In particular, one can imagine dynamic memory allocations to be allowed only in non-critical functions, while on the other hand, direct interaction with the environment may be restricted to the critical parts. With respect to scheduling, a static task and resource configuration allows eg Stack Resource Policy (SRP) based approaches to be deployed. In this paper we discuss how this can be achieved in a mixed critical setting.", "num_citations": "7\n", "authors": ["1665"]}
{"title": "A compositional monitoring framework for hard real-time systems\n", "abstract": " Runtime Monitoring of hard real-time embedded systems is a promising technique for ensuring that a running system respects timing constraints, possibly combined with faults originated by the software and/or hardware. This is particularly important when we have real-time embedded systems made of several components that must combine different levels of criticality, and different levels of correctness requirements. This paper introduces a compositional monitoring framework coupled with guarantees that include time isolation and the response time of a monitor for a predicted violation. The kind of monitors that we propose are automatically generated by synthesizing logic formulas of a timed temporal logic, and their correctness is ensured by construction.", "num_citations": "7\n", "authors": ["1665"]}
{"title": "Towards certified program logics for the verification of imperative programs\n", "abstract": " 2.3 ConclusionsIn this chapter we have introduced the Coq proof assistant, the tool that we have used to", "num_citations": "7\n", "authors": ["1665"]}
{"title": "Runtime verification of autopilot systems using a fragment of MTL-\u222b\n", "abstract": " Current real-time embedded systems development frameworks lack support for the verification of properties using explicit time where counting time (ie, durations) may play an important role in the development process. Focusing on the real-time constraints inherent to these systems, we present a framework that addresses the specification of duration properties for runtime verification by employing a fragment of metric temporal logic with durations. We also provide an overview of the framework, the synthesis tools, and the library to support monitoring properties for real-time systems developed in C++ 11. The results obtained provide clear evidence of the feasibility and advantages of employing a duration-sensitive formalism to increase the dependability of avionic controller systems such as the PX4 and the Ardupilot flight stacks.", "num_citations": "6\n", "authors": ["1665"]}
{"title": "SMT-based Schedulability Analysis using RMTL-\u222b\n", "abstract": " Several methods have been proposed for performing schedulability analysis for both uni-processor and multi-processor real-time systems. Very few of these works use the power of formal logic to write unambiguous specifications and to allow the usage of theorem provers for building the proofs of interest with greater correctness guarantees. In this paper we address this challenge by: 1) defining a formal language that allows to specify periodic resource models; 2) describe a transformational approach to reasoning about timing properties of resource models by transforming the latter specifications into a SMT problem.", "num_citations": "6\n", "authors": ["1665"]}
{"title": "On the mechanization of Kleene algebra in Coq\n", "abstract": " Kleene algebra (KA) is an algebraic system that captures properties of several important structures arising in Computer Science like automata and formal languages, among others. In this paper we present a formalization of regular languages as a KA in the Coq theorem prover. In particular, we describe the implementation of an algorithm for deciding regular expressions equivalence based on the notion of derivative. We envision the usage of (an extension of) our formalization as the formal system in which we can encode and prove proof obligations for the mechanization and automation of the process of formal software verification, in the context of the Proof Carrying Code paradigm.", "num_citations": "5\n", "authors": ["1665"]}
{"title": "The VALU3S ECSEL Project: Verification and Validation of Automated Systems Safety and Security\n", "abstract": " Manufacturers of automated systems and their components have been allocating an enormous amount of time and effort in R&D activities. This effort translates into an overhead on the V&V (verification and validation) process making it time-consuming and costly. In this paper, we present an ECSEL JU project (VALU3S) that aims to evaluate the state-of-the-art V&V methods and tools, and design a multi-domain framework to create a clear structure around the components and elements needed to conduct the V&V process. The main expected benefit of the framework is to reduce time and cost needed to verify and validate automated systems with respect to safety, cyber-security, and privacy requirements. This is done through identification and classification of evaluation methods, tools, environments and concepts for V&V of automated systems with respect to the mentioned requirements. To this end, VALU3S brings\u00a0\u2026", "num_citations": "4\n", "authors": ["1665"]}
{"title": "Abstract timers and their implementation onto the arm cortex-m family of mcus\n", "abstract": " Real-Time For the Masses (RTFM) is a set of languages and tools being developed to facilitate embedded software development and provide highly efficient implementations geared to static verification. The RTFM-kernel is an architecture designed to provide highly efficient and predicable Stack Resource Policy based scheduling, targeting bare metal (single-core) platforms. We contribute by introducing a platform independent timer abstraction that relies on existing RTFM-kernel primitives. We develop two alternative implementations for the ARM Cortex-M family of MCUs: a generic implementation, using the ARM defined SysTick/DWT hardware; and a target specific implementation, using the match compare/free running timers. While sacrificing generality, the latter is more flexible and may reduce overall overhead. Invariants for correctness are presented, and methods to static and run-time verification are\u00a0\u2026", "num_citations": "4\n", "authors": ["1665"]}
{"title": "A formal perspective on IEC 61499 execution control chart semantics\n", "abstract": " The IEC 61499 standard proposes an event driven execution model for distributed control applications for which an informal execution semantics is provided. Consequently, run-time implementations are not rigorously described and therefore their behavior relies on the interpretation made by the tool provider. In this paper, as a step towards a formal semantics, we focus on the Execution Control Chart semantics, which is fundamental to the dynamic behavior of Basic Function Block elements. In particular we develop a well-formedness criterion that ensures a finite number of Execution Control Chart transitions for each triggering event. We also describe the first step towards the mechanization of the well-formedness checking algorithm in the Coq proof-assistant so that, ultimately, we are able to show, once and for all, that this algorithm is effectively correct with respect to our proposed execution semantics. The\u00a0\u2026", "num_citations": "4\n", "authors": ["1665"]}
{"title": "Runtime verification of autopilot systems using a fragment of MTL-                               \u222b\n", "abstract": " Current real-time embedded systems development frameworks lack support for the verification of properties using explicit time where counting time (i.e., durations) may play an important role in the development process. Focusing on the real-time constraints inherent to these systems, we present a framework that addresses the specification of duration properties for runtime verification by employing a fragment of metric temporal logic with durations. We also provide an overview of the framework, the synthesis tools, and the library to support monitoring properties for real-time systems developed in C++11. The results obtained provide clear evidence of the feasibility and advantages of employing a duration-sensitive formalism to increase the dependability of avionic controller systems such as the PX4 and the Ardupilot flight stacks.", "num_citations": "2\n", "authors": ["1665"]}
{"title": "Contract based verification of IEC 61499\n", "abstract": " The IEC 61499 standard proposes an event driven execution model for component based (in terms of Function Blocks), distributed industrial automation applications. However, the standard provides only an informal execution semantics, thus in consequence behavior and correctness relies on the design decisions made by the tool vendor. In this paper we present the formalization of a subset of the IEC 61499 standard in order to provide an underpinning for the static verification of Function Block models by means of deductive reasoning. Specifically, we contribute by addressing verification at the component, algorithm, and ECC levels. From Function Block descriptions, enriched with formal contracts, we show that correctness of component compositions, as well as functional and transitional behavior can be ensured. Feasibility of the approach is demonstrated by manually encoding a set of representative use-cases\u00a0\u2026", "num_citations": "2\n", "authors": ["1665"]}
{"title": "Response time for IEC 61499 over Ethernet\n", "abstract": " The IEC 61499 standard provides means to specify distributed control systems in terms of function blocks. The execution model is event driven (asynchronous), where triggering events may be associated with data (and seen as a message). In this paper we propose a low complexity implementation technique allowing to assess end-to-end response time of event chains spanning over a set of networked devices. In this paper we develop a method to provide safe end-to-end response time taking both intra- and inter-device delivery delays into account. As a use case we study the implementation onto (single-core) ARM-cortex based devices communicating over a switched Ethernet network. For the analysis we define a generic switch model and an experimental setup allowing us to study the impact of network topology as well as 802.1Q quality of service in a mixed critical setting. Our results indicate that safe sub\u00a0\u2026", "num_citations": "2\n", "authors": ["1665"]}
{"title": "Deciding kleene algebra terms equivalence in Coq\n", "abstract": " This paper presents a mechanically verified implementation of an algorithm for deciding the equivalence of Kleene algebra terms within the Coq proof assistant. The algorithm decides equivalence of two given regular expressions through an iterated process of testing the equivalence of their partial derivatives and does not require the construction of the corresponding automata. Recent theoretical and experimental research provides evidence that this method is, on average, more efficient than the classical methods based on automata. We present some performance tests, comparisons with similar approaches, and also introduce a generalization of the algorithm to decide the equivalence of terms of Kleene algebra with tests. The motivation for the work presented in this paper is that of using the libraries developed as trusted frameworks for carrying out certified program verification.", "num_citations": "2\n", "authors": ["1665"]}
{"title": "On the mechanisation of rely-guarantee in Coq\n", "abstract": " In this report we describe the formalisation of a simple imperative language with concurrent/parallel and atomic execution statements within the Coq theorem prover. Our formalisation includes the specification of a simple imperative programming language with statements for parallel and atomic execution of code, an underlying small-step structural semantics and a proof system that is sound with respect to such semantics. With this formalisation we give a first step towards the certified verification of sharedvariable concurrent/parallel programs under the context of Cliff Jones\u2019 Rely-Guarantee reasoning and in the logic of Coq.", "num_citations": "2\n", "authors": ["1665"]}
{"title": "David Pereira\n", "abstract": " David Pereira was born in Porto, Portugal, in 1980. In 2003 he received his degree in Computer Science at University of Porto. In 2007 he finished his Master's degree in Computer Science also in University of Porto, in the areas of formal logics for specifying and reasoning about intelligent agents. He has a PhD in Computer Science, in the MAP-i PhD program, organized by the Universities of Minho, of Porto and of Aveiro. His research is focused in the mechanization of Kleene algebra and Kleene algebra with tests in the Coq theorem prover (see http://coq. inria. fr/). He also mechanized a deductive proof system for dealing with the partial correctness of parallel programs, under the spirit of Rely/Guarantee thinking. The aim is to apply such mechanizations to conduct partial verification of correctness of both sequential and parallel imperative programs.Besides being a happy Coq user and adept of formal program\u00a0\u2026", "num_citations": "2\n", "authors": ["1665"]}
{"title": "Validation of Automated Farming\n", "abstract": " This chapter presents first concepts for the improved validation of automated farming solutions. Within the ENABLE-S3 ECSEL JU project, the farming use case team presents developments within the agricultural domain, that can in the future improve the life and working environment of farmers. Applications such as autonomous driving of farming vehicles equipped with sensors and drones supporting hyperspectral cameras, validated by newly defined testing systems like co-simulation of farming vehicles, model-based simulation of farming systems and verification and testing of in-vehicle communication are advances developed during the project. As agricultural activities are very dependent on environmental parameters (e.g. weather, harvest ripeness) and the availability of the actual vehicles (which is very often not the case), the use case team opted for realistic simulators for first validation approaches. In this\u00a0\u2026", "num_citations": "1\n", "authors": ["1665"]}
{"title": "Demo Abstract: Run-Time Monitoring Environments for Real-Time and Safety Critical Systems\n", "abstract": " With the increasing complexity of embedded systems, it becomes unrealistic to formally verify that all the system requirements will be respected under any possible execution scenario. Moreover, the worst-case analyses that are usually performed before the system deployment are also based on a set of assumptions (e.g., minimum activation period, worst-case execution time, maximum release jitter) that may not always be respected at run-time. For those reasons, run-time monitoring and run-time verification become an interesting alternative to the traditional offline verification. Run-time verification is based on the instrumentation of the target applications. Monitors are then added to the system to verify at run-time that the system requirements are respected during the execution. If a misbehaviour is detected, an alarm can be raised so as to trigger appropriate counter-measures (e.g., execution mode change, reset or\u00a0\u2026", "num_citations": "1\n", "authors": ["1665"]}
{"title": "Mechanization of an algorithm for deciding KAT terms equivalence\n", "abstract": " This work presents a mechanically verified implementation of an algorithm for deciding the (in-) equivalence of Kleene algebra with tests (KAT) terms. This mechanization was carried out in the Coq proof assistant. The algorithm decides KAT terms equivalence through an iterated process of testing the equivalence of their partial derivatives. It is a purely syntactical decision procedure and so, it does not construct the underlying automata. The motivation for this work comes from the possibility of using KAT encoding of propositional Hoare logic for reasoning about the partial correctness of imperative programs.", "num_citations": "1\n", "authors": ["1665"]}
{"title": "Modela\u00e7\u00e3o num\u00e9rica de ensaios de arranque de geossint\u00e9ticos\n", "abstract": " O cont\u00ednuo aumento do uso de geossint\u00e9ticos em obras geot\u00e9cnicas, nomeadamente no refor\u00e7o de solos, em que a interac\u00e7\u00e3o solo-geossint\u00e9tico \u00e9 da mais elevada import\u00e2ncia, imp\u00f5e o recurso a ensaios que permitam, de um modo consistente, obter par\u00e2metros caracterizadores fi\u00e1veis para utiliza\u00e7\u00e3o no dimensionamento de tais obras. O ensaio de arranque de geossint\u00e9ticos tem sido estudado e desenvolvido por v\u00e1rios investigadores em todo o mundo, com o objectivo de promover a defini\u00e7\u00e3o de um m\u00e9todo normalizado para a caracteriza\u00e7\u00e3o da interac\u00e7\u00e3o solo-geossint\u00e9tico. Na Europa, o procedimento associado a este ensaio j\u00e1 atingiu o estatuto de pr\u00e9-norma (prEN 13738), sendo de registar a significativa contribui\u00e7\u00e3o da FEUP em todo esse processo. A modela\u00e7\u00e3o num\u00e9rica do ensaio de arranque levada a cabo no presente trabalho tem como finalidade investigar em pormenor a evolu\u00e7\u00e3o do comportamento do solo, do geossint\u00e9tico e das interfaces no decorrer do mesmo, de forma a compreender a import\u00e2ncia relativa dos v\u00e1rios par\u00e2metros f\u00edsicos intervenientes com o fim de quantificar com rigor a respectiva influ\u00eancia. A vasta informa\u00e7\u00e3o experimental dispon\u00edvel desempenhou um importante papel na calibra\u00e7\u00e3o do modelo num\u00e9rico, conferindo-lhe a capacidade de esclarecer alguns aspectos menos bem compreendidos, o que permitiu a formula\u00e7\u00e3o de algumas sugest\u00f5es pr\u00e1ticas de aperfei\u00e7oamento dos procedimentos de ensaio utilizados.", "num_citations": "1\n", "authors": ["1665"]}