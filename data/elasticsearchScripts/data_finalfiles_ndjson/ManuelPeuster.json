{"title": "MeDICINE: Rapid prototyping of production-ready network services in multi-PoP environments\n", "abstract": " Virtualized network services consisting of multiple individual network functions are already today deployed across multiple sites, so called multi-PoP (points of presence) environments. This allows to improve service performance by optimizing its placement in the network. But prototyping and testing of these complex distributed software systems becomes extremely challenging. The reason is that not only the network service as such has to be tested but also its integration with management and orchestration systems. Existing solutions, like simulators, basic network emulators, or local cloud testbeds, do not support all aspects of these tasks. To this end, we introduce MeDICINE, a novel NFV prototyping platform that is able to execute production-ready network functions, provided as software containers, in an emulated multi-PoP environment. These network functions can be controlled by any third-party management\u00a0\u2026", "num_citations": "121\n", "authors": ["1957"]}
{"title": "Understand your chains: Towards performance profile-based network service management\n", "abstract": " Allocating resources to virtualized network functions and services to meet service level agreements is a challenging task for NFV management and orchestration systems. This becomes even more challenging when agile development methodologies, like DevOps, are applied. In such scenarios, management and orchestration systems are continuously facing new versions of functions and services which makes it hard to decide how much resources have to be allocated to them to provide the expected service performance. One solution for this problem is to support resource allocation decisions with performance behavior information obtained by profiling techniques applied to such network functions and services. In this position paper, we analyze and discuss the components needed to generate such performance behavior information within the NFV DevOps workflow. We also outline research questions that identify\u00a0\u2026", "num_citations": "35\n", "authors": ["1957"]}
{"title": "Containernet 2.0: A rapid prototyping platform for hybrid service function chains\n", "abstract": " One of the biggest challenges for the real-world application of network function virtualization (NFV) is reducing the development complexity of both virtualized network functions (VNF) and service functions chains (SFC). This is in particular important for the upcoming 5th generation of networks in which service agility is one of the key concepts to allow quick development and integration cycles and to reduce costs. Still, the availability of tools to support VNF and service developers is limited and existing solutions mainly focus on packaging support and static validation of descriptors. To change this, we introduce  Containernet 2.0  a novel, open-source NFV prototyping platform supporting the creation and local execution of complex SFCs.  Containernet 2.0  is the first prototyping tool that explicitly supports hybrid SFCs composed of both container-based and virtual machine-based VNFs that are combined in a single\u00a0\u2026", "num_citations": "25\n", "authors": ["1957"]}
{"title": "E-State: Distributed state management in elastic network function deployments\n", "abstract": " Elastic deployments of virtualized network functions (VNFs) can automatically scale the amount of used resources in relation to their workload. This is often done by starting new VNF instances or stopping old ones. A problem of these scale operations is that most network functions are stateful and their internal state is not automatically migrated when traffic is redistributed. As a result, mechanisms are needed to exchange or migrate internal network function state between VNF instances. This paper presents a state management framework that creates logically distributed state memory on top of elastically deployed VNFs used to share state information between these VNFs. We introduce a novel programming model that provides both a local and a global view of the state to each VNF instance. Further, we compare the performance of our prototype to a centralized and a distributed in-memory database solution.", "num_citations": "22\n", "authors": ["1957"]}
{"title": "Profile Your Chains, Not Functions: Automated Network Service Profiling in DevOps Environments\n", "abstract": " Benchmarking and profiling virtual network functions (VNFs) generates input knowledge for resource management decisions taken by management and orchestration systems. Such VNFs are usually not executed in isolation but are often deployed as part of a service function chain (SFC) that connects single functions into complex structures. To manage such chains, isolated performance profiles of single functions have to be combined to get insights into the overall behavior of an SFC. This becomes particularly challenging in highly agile DevOps environments in which profiling processes need to be fully automated and detailed insights about a chain's internal structures are not always available. In this paper, we introduce a fully automatable, flexible, and platform-agnostic profiling system that allows to profile entire SFCs at once. This obviates manual modeling procedures to combine profiling results from single\u00a0\u2026", "num_citations": "20\n", "authors": ["1957"]}
{"title": "A network service development kit supporting the end-to-end lifecycle of NFV-based telecom services\n", "abstract": " Ongoing evolutions in the Network Function Virtualization (NFV) area show that software will play an increasingly important role within the telecommunication industry. It enables telco providers to faster introduce telecom services, combined with new possibilities to optimize and fine-tune operational performance. New virtualization and softwarization methods support fine-grained scaling of resources and highly-customizable configuration settings. Additionally, multi-datacenter topologies are available to deploy the Virtual Network Functions (VNFs) a service consists of. In this context, specialized tools are needed for debugging and validating the deployment, placement, chaining, configuration and scaling of network services, before the operator deploys the service in production. This demo showcases an open-source Software Development Kit (SDK), built to support NFV-based services throughout their whole\u00a0\u2026", "num_citations": "18\n", "authors": ["1957"]}
{"title": "Benchmarking and Profiling 5G Verticals' Applications: An Industrial IoT Use Case\n", "abstract": " The Industry 4.0 sector is evolving in a tremendous pace by introducing a set of industrial automation mechanisms tightly coupled with the exploitation of Internet of Things (IoT), 5G and Artificial Intelligence (AI) technologies. By combining such emerging technologies, interconnected sensors, instruments, and other industrial devices are networked together with industrial applications, formulating the Industrial IoT (IIoT) and aiming to improve the efficiency and reliability of the deployed applications and provide Quality of Service (QoS) guarantees. However, in a 5G era, efficient, reliable and highly performant applications' provision has to be combined with exploitation of capabilities offered by 5G networks. Optimal usage of the available resources has to be realised, while guaranteeing strict QoS requirements such as high data rates, ultra-low latency and jitter. The first step towards this direction is based on the\u00a0\u2026", "num_citations": "13\n", "authors": ["1957"]}
{"title": "Prototyping and demonstrating 5G verticals: the smart manufacturing case\n", "abstract": " 5G together with software defined networking (SDN) and network function virtualisation (NFV) will enable a wide variety of vertical use cases. One of them is the smart manufacturing case which utilises 5G networks to interconnect production machines, machine parks, and factory sites to enable new possibilities in terms of flexibility, automation, and novel applications (industry 4.0). However, the availability of realistic and practical proof-of-concepts for those smart manufacturing scenarios is still limited. This demo fills this gap by not only showing a real-world smart manufacturing application entirely implemented using NFV concepts, but also a lightweight prototyping framework that simplifies the realisation of vertical NFV proof-of-concepts. During the demo, we show how an NFV-based smart manufacturing scenario can be specified, on-boarded, and instantiated before we demonstrate how the presented NFV\u00a0\u2026", "num_citations": "12\n", "authors": ["1957"]}
{"title": "Understand your chains and keep your deadlines: Introducing time-constrained profiling for nfv\n", "abstract": " Fully-automated resource dimensioning is one of the key requirements for agile, DevOps-enabled network function virtualization (NFV) scenarios in which new service versions are continuously delivered and deployed to production. To enable and support these dimensioning processes, a priori knowledge about the performance behavior of the deployed service function chains (SFC) is collected using profiling solutions that automatically generate so-called SFC performance profiles. A challenge in those profiling processes is the huge configuration space of typical SFCs that need to be explored to collect enough information to accurately describe the performance behavior of the profiled SFC. In this paper, we introduce the concept of time-constrained profiling (T-CP) which profiles only a small subset of all possible SFC configurations and uses machine learning techniques to predict performance values for the\u00a0\u2026", "num_citations": "12\n", "authors": ["1957"]}
{"title": "5G as key technology for networked factories: Application of vertical-specific network services for enabling flexible smart manufacturing\n", "abstract": " In recent years, the interest in interconnecting production machines has grown and new technologies such as augmented reality enter the shop floor. This evolution is driven by hyped topics such as Industry 4.0 and Internet of Things. These topics promise benefits through increasing transparency in factories, such as improvement in efficiency and reduced costs, e.g., due to data analysis. As a result, the demand on new concepts and technologies for factory networks is rising to fulfill the upcoming new requirements. Therefore, the development of 5G comes just in time. This paper is focused on one of the 5G core technologies network function virtualization (NFV). We propose two use cases that demonstrate how NFV enables flexible smart manufacturing. In NFV technology, virtual network functions (VNF) are composed to network services. We introduce the application of our vertical-specific network services that\u00a0\u2026", "num_citations": "11\n", "authors": ["1957"]}
{"title": "An evaluation testbed for adaptive, topology-aware deployment of elastic applications\n", "abstract": " Cloud application providers who deploy their application at different cloud sites usually aim for close-by processing of user requests, benefiting from improved quality of service, and traffic reduction [4]. In this context, we dynamically scale applications to reduce costs by automating their deployment and adapting their resource allocation dynamically. We research the following questions: Where to allocate how many resources and how to apply the allocation? Which information is needed and how to exchange it? How can applications cope with ever changing resource allocations?To practically evaluate our solutions, we created a flexible testbed. We share our insides and implementation to researchers tackling the diverse subproblems, various optimization goals, potentials for cost savings, and QoS improvements. We provide software with install instructions to construct your own private testbed [5]. Our testbed is\u00a0\u2026", "num_citations": "11\n", "authors": ["1957"]}
{"title": "Machine learning for dynamic resource allocation in network function virtualization\n", "abstract": " Network function virtualization (NFV) proposes to replace physical middleboxes with more flexible virtual network functions (VNFs). To dynamically adjust to ever-changing traffic demands, VNFs have to be instantiated and their allocated resources have to be adjusted on demand. Deciding the amount of allocated resources is non-trivial. Existing optimization approaches often assume fixed resource requirements for each VNF instance. However, this can easily lead to either waste of resources or bad service quality if too many or too few resources are allocated. To solve this problem, we train machine learning models on real VNF data, containing measurements of performance and resource requirements. For each VNF, the trained models can then accurately predict the required resources to handle a certain traffic load. We integrate these machine learning models into an algorithm for joint VNF scaling and\u00a0\u2026", "num_citations": "9\n", "authors": ["1957"]}
{"title": "Automated testing of NFV orchestrators against carrier-grade multi-PoP scenarios using emulation-based smoke testing\n", "abstract": " Future large-scale network function virtualization (NFV) environments will be based on hundreds or even thousands of NFV infrastructure installations, the so called points of presence (PoP). All their resources and the services deployed on top of them will be controlled by management and orchestration (MANO) systems. Such large-scale scenarios need to be automatically tested during the development phase of a MANO system. This task becomes very challenging because large-scale NFV testbeds are hard to maintain, too expensive, or simply not available. In this paper, we introduce the concept of emulation-based smoke testing, which enables automated, large-scale testing of MANO systems. We show that our test platform prototype can easily emulate up to 1024 PoPs on a single physical machine and that it can reduce the setup time of a single test PoP by a factor of 232 \u00d7 compared to a DevStack-based PoP\u00a0\u2026", "num_citations": "9\n", "authors": ["1957"]}
{"title": "The softwarised network data zoo\n", "abstract": " More and more management and orchestration approaches for (software) networks are based on machine learning paradigms and solutions. These approaches depend not only on their program code to operate properly, but also require enough input data to train their internal models. However, such training data is barely available for the software networking domain and most presented solutions rely on their own, sometimes not even published, data sets. This makes it hard, or even infeasible, to reproduce and compare many of the existing solutions. As a result, it ultimately slows down the adoption of machine learning approaches in softwarised networks.To this end, we introduce the \u201csoftwarised network data zoo\u201d (SNDZoo), an open collection of software networking data sets aiming to streamline and ease machine learning research in the software networking domain. We present a general methodology to\u00a0\u2026", "num_citations": "9\n", "authors": ["1957"]}
{"title": "Monitoring and debugging using an SDK for NFV-powered telecom applications\n", "abstract": " The next generation of telecom services will require an unprecedented level of flexibility and functionality. In this 5G network context, Software-Defined-Networking (SDN) and Network Function Virtualization (NFV) offer new ways of managing the network and the connected traffic processing nodes. This leads to a programmable way to do Service Function Chaining (SFC), effectively automating the deployment and management of such network services. The growing interest and development in the field of virtualization techniques such as virtual machines or containers further proves that software can indeed play an increasingly important role within telecom services, an area previously dominated by hardware appliances. As a side effect, these softwarization and virtualization techniques also enable a very high degree of customization and configurability, which can also introduce bugs into the service definition, complicating and potentially slowing down service provisioning. In order to close the gap between the development and operations side of a provided service (DevOps), adequate tools are required that allow rapid testing and verification of any modified parameter. To this end we present a set of monitoring and debugging functionalities in the context of aSoftware Development Kit (SDK) that allows a service developer to rapidly setup and provision a network service. By demonstrating how several example services can be deployed in this SDK, we show how this light-weight toolchain can be used to rapidly develop and debug NFV-based services.", "num_citations": "9\n", "authors": ["1957"]}
{"title": "Putting 5G into Production: Realizing a Smart Manufacturing Vertical Scenario\n", "abstract": " As 5G and network function virtualization (NFV) are maturing, it becomes crucial to demonstrate their feasibility and benefits by means of vertical scenarios. While 5GPPP has identified smart manufacturing as one of the most important vertical industries, there is still a lack of specific, practical use cases.Using the experience from a large-scale manufacturing company, Weidm\u00fcller Group, we present a detailed use case that reflects the needs of real-world manufacturers. We also propose an architecture with specific network services and virtual network functions (VNFs) that realize the use case in practice. As a proof of concept, we implement the required services and deploy them on an emulation-based prototyping platform. Our experimental results indicate that a fully virtualized smart manufacturing use case is not only feasible but also reduces machine interconnection and configuration time and thus improves\u00a0\u2026", "num_citations": "8\n", "authors": ["1957"]}
{"title": "Programmable and flexible management and orchestration of virtualized network functions\n", "abstract": " Supporting the vast variety of network services' management and orchestration requirements is one of the main challenges that Network Function Virtualization (NFV) is dealing with. While general management requirements such as Virtual Network Function (VNF) resource requirements can be specified by the service developers using service descriptors, specific management operations like VNF-specific configuration cannot be performed by these descriptors. On the other hand, it is inefficient and also very challenging for Management and Orchestration (MANO) frameworks to provide all specific-management operations for every individual network service and their constituent VNFs. To mitigate this issue, we propose the use of service-specific programs called Specific Managers (SMs) that can customize management and orchestration of network services and also extend the capability of MANO frameworks to\u00a0\u2026", "num_citations": "8\n", "authors": ["1957"]}
{"title": "A flexible multi-pop infrastructure emulator for carrier-grade MANO systems\n", "abstract": " Developing a virtualized network service does not only involve the implementation and configuration of the network functions it is composed of but also its integration and test with management solutions that will control the service in its production environment. These integration tasks require testbeds that offer the needed network function virtualization infrastructure (NFVI), like OpenStack, introducing a lot of management and maintenance overheads. Such testbed setups become even more complicated when the multi point-of-presence (PoP) case, with multiple infrastructure installations, is considered. In this demo, we showcase an emulation platform that executes containerized network services in user-defined multi-PoP topologies. The platform does not only allow network service developers to locally test their services but also to connect realworld management and orchestration solutions to the emulated PoPs\u00a0\u2026", "num_citations": "8\n", "authors": ["1957"]}
{"title": "Methodology for VNF benchmarking automation\n", "abstract": " Methodology for VNF Benchmarking Automation Page 1 Methodology for VNF Benchmarking Automation R. Rosa C. Rothenberg M. Peuster H. Karl IETF 102 - BMWG Page 2 \u274f Main changes to approach automation, as discussed in IETF 101 \u274f New title: \u201cMethodology for VNF Benchmarking Automation\u201d \u274f We do not aim to explore all possible VNF benchmarking methodologies \u274f VNF Developer/Vendor is responsible to specify target metrics and specific benchmarking methodology (able to be automated) \u274f New Contributors: Manuel Peuster and Holger Karl (Paderborn University) Why the draft was updated? Which issues was it trying to address? Page 3 Which are the major technical changes? \u2756 VNF might be composed of components (VNFC) \u2756 Defined VNF Benchmark Report (VNF-BR) composed of: \u27a2 VNF Benchmark Descriptor (VNF-BD) \u25a0 Procedures Configuration \u25a0 Target Information \u25a0 Deployment \u2026", "num_citations": "7\n", "authors": ["1957"]}
{"title": "Joint testing and profiling of microservice-based network services using TTCN-3\n", "abstract": " The ongoing softwarization of networks creates a big need for automated testing solutions to ensure service quality. This becomes even more important if agile environments with short time to market and high demands, in terms of service performance and availability, are considered. In this paper, we introduce a novel testing solution for virtualized, microservice-based network functions and services, which we base on TTCN-3, a well known testing language defined by the European standards institute\u00a0(ETSI). We use TTCN-3 not only for functional testing but also answer the question whether TTCN-3 can be used for performance profiling tasks as well. Finally, we demonstrate the proposed concepts and solutions in a case study using our open-source prototype to test and profile a chained network service.", "num_citations": "6\n", "authors": ["1957"]}
{"title": "Generating resource and performance models for service function chains: the video streaming case\n", "abstract": " Understanding the behavior of the components of service function chains (SFCs) in different load situations is important for efficient and automatic management and orchestration of services. For this purpose and for practical research in network function virtualization in general, there is a great need for benchmarks and experimental data. In this paper, we describe our experiments for characterizing the relationship between resource demands of virtual network functions (VNFs) and the expected performance of the SFC, considering the individual performance of the VNFs as well as the interdependencies among VNFs within the SFC. We have designed our experiments focusing on video streaming, an important application in this context. We present examples of models for predicting the interdependence between resource demands and performance characteristics of SFCs using support vector regression and\u00a0\u2026", "num_citations": "6\n", "authors": ["1957"]}
{"title": "Let the state follow its flows: An SDN-based flow handover protocol to support state migration\n", "abstract": " Dynamically steering flows through virtualized network function instances is a key enabler for elastic, on-demand deployments of virtualized network functions. This becomes particular challenging when stateful functions are involved, necessitating state management. The problem with existing solutions is that they typically embrace state migration and flow rerouting jointly, imposing a huge set of requirements on the on-boarded VNFs, e.g., solution-specific state management interfaces. In this paper, we introduce the seamless handover protocol (SHarP). It provides an easy-to-use, loss-less, and order-preserving flow rerouting mechanism that is not fixed to a single state management approach. This allows VNF vendors to implement or use the state management solution of their choice. SHarP supports these solutions with additional information when flows are migrated. Further, we show how SHarP significantly\u00a0\u2026", "num_citations": "6\n", "authors": ["1957"]}
{"title": "Fop4: Function offloading prototyping in heterogeneous and programmable network scenarios\n", "abstract": " Offloading packet processing tasks to programmable switches and/or to programmable network interfaces, so called \u201cSmartNICs\u201d, is one of the key concepts to prepare softwarized networks for the high traffic demands of the future. However, implementing network functions that make use of those offloading technologies is still challenging and usually requires the availability of specialized hardware. It becomes even harder if heterogeneous services, making use of different offloading and network virtualization technologies, should be developed. In this paper, we introduce FOP4 (Function Offloading Prototyping with P4), a novel prototyping platform that allows to prototype heterogeneous software network scenarios, including container-based, P4-switch-based, and SmartNIC-based network functions. The presented work substantially extends our existing Containernet platform with the means to prototype offloading\u00a0\u2026", "num_citations": "5\n", "authors": ["1957"]}
{"title": "NFV-driven intrusion detection for smart manufacturing\n", "abstract": " The significant progress in softwarization of hardware components with technologies like Network Function Virtualization (NFV) enables manifold applications for the industry, especially for smart manufacturing. The gained agility and flexibility leverages data gathering and analysis. In this work, we focus on a very important precondition for networked manufacturing: cyber security. We provide concepts and a first proof-of-work for an cloud-native NFV-driven Intrusion Detection System using Kubernetes, stating challenges we solved during the process and the used software tools. Focusing on traffic monitoring and filtering to enable certain guidelines to ensure the integrity of the factory network by an automatic reconfiguration of the Network Services.", "num_citations": "5\n", "authors": ["1957"]}
{"title": "A flow handover protocol to support state migration in softwarized networks\n", "abstract": " Softwarized networks are the key enabler for elastic, on\u2010demand service deployments of virtualized network functions. They allow to dynamically steer traffic through the network when new network functions are instantiated, or old ones are terminated. These scenarios become in particular challenging when stateful functions are involved, necessitating state management solutions to migrate state between the functions. The problem with existing solutions is that they typically embrace state migration and flow rerouting jointly, imposing a huge set of requirements on the on\u2010boarded virtualized network functions (VNFs), eg, solution\u2010specific state management interfaces. To change this, we introduce the seamless handover protocol\u00a0(SHarP). An easy\u2010to\u2010use, loss\u2010less, and order\u2010preserving flow rerouting mechanism that is not fixed to a single state management approach. Using SHarP, VNF vendors are empowered to\u00a0\u2026", "num_citations": "5\n", "authors": ["1957"]}
{"title": "\u201cProducing Cloud-Native\u201d: Smart Manufacturing Use Cases on Kubernetes\n", "abstract": " Building on 5G and network function virtualization (NFV), smart manufacturing has the potential to drastically increase productivity, reduce cost, and introduce novel, flexible manufacturing services. Current work mostly focuses on highlevel scenarios or emulation-based prototype deployments. Extending our previous work, we showcase one of the first cloud-native 5G verticals focusing on the deployment of smart manufacturing use cases on production infrastructure. In particular, we use the 5GTANGO service platform to deploy our developed network services on Kubernetes. For this demo, we implemented a series of cloud-native virtualized network functions (VNFs) and created suitable service descriptors. Their light-weight, stateless deployment on Kubernetes enables quick instantiation, scalability, and robustness.", "num_citations": "4\n", "authors": ["1957"]}
{"title": "A topology-aware adaptive deployment framework for elastic applications\n", "abstract": " In Distributed Cloud Computing, applications are deployed over thousands of geographically distributed cloud sites. This new deployment approach promises not only improved application's quality of service but enables deploying network-critical applications otherwise not possible. A previously settled, static allocation of enough resources at each site is expensive. Adapting resource allocations during application lifetime could dramatically reduce expenses. They are triggered by complex algorithms as a reaction of changes in measured performance data. However, such adaptation algorithms and their performance data depends on specific application's requirements, constrains, and on optimization goals. Some interactive applications need a low packet round trip time. Other streaming applications need a high data rate to the user. Besides these individual characteristics of an adaptation, similarities exists in the\u00a0\u2026", "num_citations": "4\n", "authors": ["1957"]}
{"title": "Emulation-based smoke testing of NFV orchestrators in large multi-PoP environments\n", "abstract": " Management and orchestration (MANO) systems are the key components of future large-scale NFV environments. They will manage resources of hundreds or even thousands of NFV infrastructure installations, so called points of presence (PoP). Such scenarios need to be automatically tested during the development phase of a MANO system. This task becomes very challenging because large-scale NFV testbeds are hard to maintain, too expensive, or simply not available. In this paper, we present a multi-PoP NFV infrastructure emulation platform that enables automated, large-scale testing of MANO stacks. We show that our platform can easily emulate hundreds of PoPs on a single physical machine and reduces the setup time of a test PoP by a factor of 232\u00d7 compared to a DevStack-based test PoP installation. Further, we present a case study in which we test ETSI's Open Source MANO (OSM) against our\u00a0\u2026", "num_citations": "3\n", "authors": ["1957"]}
{"title": "Putting NFV into Reality: Physical Smart Manufacturing Testbed\n", "abstract": " 5G and network function virtualization (NFV) have the potential to make factory networks more flexible and scalable. For this purpose, we defined use cases in previous work and demonstrated them using emulation-based prototype deployments. In this paper, we extend our previous work and deploy our developed vertical-specific network services and cloud-native virtualized network functions (VNFs) in a physical NFV testbed that is located on the shop floor to analyze the potential of NFV in real-life environments. We use the 5GTANGO service platform to deploy them on Kubernetes. Both are running on top of OpenStack.", "num_citations": "2\n", "authors": ["1957"]}
{"title": "Demonstrating FOP4: A Flexible Platform to Prototype NFV Offloading Scenarios\n", "abstract": " Emulation platforms supporting Virtual Network Functions (VNFs) allow developers to rapidly prototype network services. None of the available platforms, however, supports experimenting with programmable data planes to enable VNF offloading. In this demonstration, we show FOP4, a flexible platform that provides support for Docker-based VNFs, and VNF offloading, by means of P4-enabled switches. The platform provides interfaces to program the P4 devices and to deploy network functions. We demonstrate FOP4 with two complex example scenarios, demonstrating how developers can exploit data plane programmability to implement network functions.", "num_citations": "2\n", "authors": ["1957"]}
{"title": "A generic emulation framework for reusing and evaluating VNF placement algorithms\n", "abstract": " In recent years, a variety of different approaches have been proposed to tackle the problem of scaling and placing network services, consisting of interconnected virtual network functions (VNFs). This paper presents a placement abstraction layer (PAL) that provides a clear and simple northbound interface for using such algorithms while hiding their internal functionality and implementation. Through its southbound interface, PAL can connect to different back ends that evaluate the calculated placements, e.g., using simulations, emulations, or testbed approaches. As an example for such evaluation back ends, we introduce a novel placement emulation framework (PEF) that allows executing calculated placements using real, container- based VNFs on real-world network topologies. In a case study, we show how PAL and PEF facilitate reusing and evaluating placement algorithms as well as validating their underlying\u00a0\u2026", "num_citations": "2\n", "authors": ["1957"]}
{"title": "A fully integrated multi-platform nfv sdk\n", "abstract": " A key challenge of network function virtualization (NFV) is the complexity of developing and deploying new network services. Currently, development requires many manual steps that are time-consuming and error-prone (e.g., for creating service descriptors). Furthermore, existing management and orchestration (MANO) platforms only offer limited support of standardized descriptor models or package formats, limiting the re-usability of network services.To this end, we introduce a fully integrated, open-source NFV service development kit (SDK) with multi-MANO platform support. Our SDK simplifies many NFV service development steps by offering initial generation of descriptors, advanced project management, as well as fully automated packaging and submission for on-boarding. To achieve multi-platform support, we present a package format that extends ETSI's VNF package format. In this demonstration, we\u00a0\u2026", "num_citations": "2\n", "authors": ["1957"]}
{"title": "Towards predicting resource demands and performance of distributed cloud services\n", "abstract": " Understanding the behavior of distributed cloud service components in different load situations is important for efficient and automatic management and orchestration of these services. For this purpose and for practical research in distributed cloud computing in general, there is need for benchmarks and experimental data. In this paper, we describe our experiments for characterizing the relationship between resource demands of application components and the expected performance of applications. We present initial results for predicting the interdependence between resource demands and performance characteristics using support vector regression and polynomial regression models. The data gathered from our experiments is publicly available.", "num_citations": "2\n", "authors": ["1957"]}
{"title": "A Prototyping Platform to Validate and Verify Network Service Header-based Service Chains\n", "abstract": " Network service header (NSH) is considered to be a key enabler for the wide adoption of service function chaining (SFC), but the availability of NSH-enabled components, such as network functions, forwarders, or classifiers, is still very limited. One reason for this is the lack of experimentation and prototyping platforms for NSH. This paper aims to rectify this shortcoming by introducing a novel prototyping platform for NSH. Our platform uses an emulation-based approach to build a lightweight environment for containerized network functions and allows to create complex SFC experiments and prototypes, as we show in our evaluation. The presented platform is publicly available and aims to be a rapid prototyping tool for researchers and developers.", "num_citations": "1\n", "authors": ["1957"]}
{"title": "An Architecture for Energy-aware On-demand Mobile Network Management\n", "abstract": " The increasing amount of mobile traffic leads to a significantly higher energy consumption of mobile networks that is mainly caused by the high number of required base stations. One recent solution for this is based on a two-layered network that uses long-range macro cells to provide a full coverage signaling overlay and short-range small cells for fast data transmissions. These small cells can be switched off when they are not needed and allow network-wide energy optimizations. This paper presents an architecture that extends existing mobile networks to integrate a small cell layer that supports on-demand cell activation. We discuss how additional small cells can be interconnected with existing core components and how they can be controlled by a resource management component. Finally, a Wi-Fi based proof of concept testbed implementation is presented that demonstrates the feasibility of the approach.", "num_citations": "1\n", "authors": ["1957"]}