{"title": "A comparison of static, dynamic, and hybrid analysis for malware detection\n", "abstract": " In this research, we compare malware detection techniques based on static, dynamic, and hybrid analysis. Specifically, we train Hidden Markov Models (HMMs) on both static and dynamic feature sets and compare the resulting detection rates over a substantial number of malware families. We also consider hybrid cases, where dynamic analysis is used in the training phase, with static techniques used in the detection phase, and vice versa. In our experiments, a fully dynamic approach generally yields the best detection rates. We discuss the implications of this research for malware detection based on hybrid techniques.", "num_citations": "240\n", "authors": ["352"]}
{"title": "Evaluating advantages of test driven development: a controlled experiment with professionals\n", "abstract": " Test driven development (TDD) is gaining interest among practitioners and researchers: it promises to increase the quality of the code. Even if TDD is considered a development practice, it relies on the use of unit testing. For this reason, it could be an alternative to the testing after coding (TAC), which is the usual approach to run and execute unit tests after having written the code. We wondered which are the differences between the two practices, from the standpoint of quality and productivity. In order to answer our research question, we carried out an experiment in a Spanish Software House. The results suggest that TDD improves the unit testing but slows down the overall process.", "num_citations": "116\n", "authors": ["352"]}
{"title": "A family of experiments to validate metrics for software process models\n", "abstract": " Process modelling is a key activity of software process management and it is the starting point for enacting, evaluating and improving software processes. The current competitive marketplace calls for the continuous improvement of processes and therefore, it is fundamental to have software process models with a high maintainability. In this paper we introduce a set of metrics for software process models and discuss how these can be used as maintainability indicators. In particular, we report the results of a family of experiments that assess relationships between the structural properties, as measured by the defined metrics, of the process models and their maintainability.", "num_citations": "107\n", "authors": ["352"]}
{"title": "Building measure-based prediction models for UML class diagram maintainability\n", "abstract": " The usefulness of measures for the analysis and design of object oriented (OO) software is increasingly being recognized in the field of software engineering research. In particular, recognition of the need for early indicators of external quality attributes is increasing. We investigate through experimentation whether a collection of UML class diagram measures could be good predictors of two main subcharacteristics of the maintainability of class diagrams: understandability and modifiability. Results obtained from a controlled experiment and a replica support the idea that useful prediction models for class diagrams understandability and modifiability can be built on the basis of early measures, in particular, measures that capture structural complexity through associations and generalizations. Moreover, these measures seem to be correlated with the subjective perception of the subjects about the complexity of\u00a0\u2026", "num_citations": "105\n", "authors": ["352"]}
{"title": "Evaluating performances of pair designing in industry\n", "abstract": " Pair programming has attracted an increasing interest from practitioners and researchers: there is initial empirical evidence that it has positive effects on quality and overall delivery time, as demonstrated by several controlled experiments. The practice does not only regard coding, since it can be applied to any other phase of the software process: analysis, design, and testing. Because of the asymmetry between design and coding, applying pair programming to the design phase might not produce the same benefits as those it produces in the development phase. In this paper, we report the findings of a controlled experiment on pair programming, applied to the design phase and performed in a software company. The results of the experiment suggest that pair programming slows down the task, yet improves quality. Furthermore we compare our results with those of a previous exploratory experiment involving\u00a0\u2026", "num_citations": "94\n", "authors": ["352"]}
{"title": "FMESP: Framework for the modeling and evaluation of software processes\n", "abstract": " Nowadays, organizations face with a very high competitiveness and for this reason they have to continuously improve their processes. Two key aspects to be considered in the software processes management in order to promote their improvement are their effective modeling and evaluation. The integrated management of these key aspects is not a trivial task: the huge number and diversity of elements to take into account makes it complex the management of software processes. To ease and effectively support this management, in this paper we propose FMESP: a framework for the integrated management of the modeling and measurement of software processes. FMESP incorporates the conceptual and technological elements necessary to ease the integrated management of the definition and evaluation of software processes. From the measurement perspective of the framework and in order to provide the\u00a0\u2026", "num_citations": "74\n", "authors": ["352"]}
{"title": "Clustering for malware classification\n", "abstract": " In this research, we apply clustering techniques to the malware classification problem. We compute clusters using the well-known K-means and Expectation Maximization algorithms, with the underlying scores based on Hidden Markov Models. We compare the results obtained from these two clustering approaches and we carefully consider the interplay between the dimension (i.e., number of models used for clustering), and the number of clusters, with respect to the accuracy of the clustering.", "num_citations": "57\n", "authors": ["352"]}
{"title": "SURF: summarizer of user reviews feedback\n", "abstract": " Continuous Delivery (CD) enables mobile developers to release small, high quality chunks of working software in a rapid manner. However, faster delivery and a higher software quality do neither guarantee user satisfaction nor positive business outcomes. Previous work demonstrates that app reviews may contain crucial information that can guide developer's software maintenance efforts to obtain higher customer satisfaction. However, previous work also proves the difficulties encountered by developers in manually analyzing this rich source of data, namely (i) the huge amount of reviews an app may receive on a daily basis and (ii) the unstructured nature of their content. In this paper, we propose SURF (Summarizer of User Reviews Feedback), a tool able to (i) analyze and classify the information contained in app reviews and (ii) distill actionable change tasks for improving mobile applications. Specifically, SURF\u00a0\u2026", "num_citations": "51\n", "authors": ["352"]}
{"title": "Lessons learned about distributed pair programming: what are the knowledge needs to address?\n", "abstract": " We have realized an experiment aimed at understanding the impact of distribution on time and quality of code developed with pair programming. From this experimental data's analysis the pair dismissal phenomenon has stemmed. After the experiment, we have conducted an assessment discussion guided by a questionnaire. The assessment confirmed the dismissal hypothesis and highlighted knowledge needs to be addressed when managing distributed pair programming in software projects. This paper focuses on the results of the assessment and discusses the lessons learned.", "num_citations": "47\n", "authors": ["352"]}
{"title": "Session management vulnerabilities in today's web\n", "abstract": " Many cyberattacks exploit session management vulnerabilities that allow attackers to be recognized as valid website users. This article describes Web application design flaws that could be exploited for session management attacks and discusses these flaws' current prevalence.", "num_citations": "38\n", "authors": ["352"]}
{"title": "Static analysis for the detection of metamorphic computer viruses using repeated-instructions counting heuristics\n", "abstract": " Metamorphic viruses are particularly insidious as they change their form at each infection, thus making detection hard. Many techniques have been proposed to produce metamorphic malware, and many approaches have been explored to detect it. This paper introduces a detection technique that relies on the assumption that a side effect of the most common metamorphic engines is the dissemination of a high number of repeated instructions in the body of the virus program. We have evaluated our technique on a population of 1,000 programs and the experimentation outcomes indicate that it is accurate in classifying metamorphic viruses and viruses of other nature, too. Virus writers use to introduce code from benign files in order to evade antivirus; our technique is able to recognize virus even if benign code is added to it.", "num_citations": "35\n", "authors": ["352"]}
{"title": "Applying a framework for the improvement of software process maturity\n", "abstract": " This article presents the results and lessons learned in the application of the Framework for the Modelling and Measurement of Software Processes (FMESP) in a software company dedicated to the development and maintenance of software for information systems. The aim of FMESP is to provide companies with a conceptual and technological framework for the management of their process models and measurement models in an integrated way. Modelling and measurement are two key factors to promote continuous process improvement. As a result, important benefits were obtained. The company improved the maturity of its processes which allowed it to obtain the ISO 9000 certification. From a research point of view, Action\u2010Research was successfully applied and as a result the framework was improved and important feedback was obtained, bringing to light new important issues which will be tacked in future\u00a0\u2026", "num_citations": "29\n", "authors": ["352"]}
{"title": "Pair designing as practice for enforcing and diffusing design knowledge\n", "abstract": " Evolving software's design requires that the members of the team acquire a deep and complete knowledge of the domain, the architectural components, and their integration. Such information is scarcely addressed within the design documentation and it is not trivial to derive it. A strategy for enforcing the consciousness of such hidden aspects of software's design is needed. One of the expected benefits of pair programming is fostering (tacit) knowledge building between the components of the pair and fastening its diffusion within the project's team. We have applied the paradigm of pair programming to the design phase and we have named it \u2018pair designing\u2019. We have realized an experiment and a replica in order to understand if pair designing can be used as an effective means for diffusing and enforcing the design knowledge while evolving the system's design. The results suggest that pair designing could be a\u00a0\u2026", "num_citations": "29\n", "authors": ["352"]}
{"title": "Evaluation of BPMN models quality-a family of experiments\n", "abstract": " The design phase is of special importance in the development of a business process. This phase refers to the modeling, handling and redesigning of processes, but when maintenance tasks have to be performed, this stage may be rather complicated. It implies a heavy investment of time and resources, since it involves both technical developers and business analysts. Moreover, process modeling should permit not only the production of models which are understandable to the users, but also the early detection and correction of errors. All of this adds to the overall quality of the model. We therefore propose a set of measures with which to assess the structural complexity of conceptual business process models. Our aim is to obtain useful indicators to be used when carrying out maintenance tasks on these models, thus obtaining higher quality models by means of an early evaluation of the model\u2019s given quality\u00a0\u2026", "num_citations": "28\n", "authors": ["352"]}
{"title": "Summarizing vulnerabilities\u2019 descriptions to support experts during vulnerability assessment activities\n", "abstract": " Vulnerabilities affecting software and systems have to be promptly fixed, to prevent violations to integrity, availability and confidentiality policies of targeted organizations. Once a vulnerability is discovered, it is published on the Common Vulnerabilities and Exposures (CVE) database, freely available on the web. However, vulnerabilities are described using natural language, which makes them hard to be automatically interpreted by machines. As a consequence, vulnerability assessment activities tend to be time-consuming and imprecise, as the assessors must manually read the majority of the vulnerabilities concerning the perimeter to be protected, to make a decision on which vulnerabilities have the highest priority for patching. In this paper we present CVErizer, an approach able to automatically generate summaries of daily posted vulnerabilities and categorize them according to a taxonomy modeled for industry\u00a0\u2026", "num_citations": "24\n", "authors": ["352"]}
{"title": "Working in pairs as a means for design knowledge building: an empirical study\n", "abstract": " Pair programming is increasingly attracting researchers' and practitioners' attention. One of the claimed benefits of pair programming consists of easing socialization among programmers, with the effect of transferring tacit knowledge. Designing software systems requires a strong employment of tacit knowledge, such as individual experience and skills. In this paper, the authors, explore the hypothesis that working in pairs can speed up and enforce the knowledge building process among designers. We name \"pair designing\" the application of pair programming concepts to the design stage. An experiment has been performed to test the effect of pair designing on knowledge building. This paper discusses preliminary results, which confirm the hypothesis of a positive effect of working in pairs on the process of knowledge building.", "num_citations": "24\n", "authors": ["352"]}
{"title": "Empirical study on the productivity of the pair programming\n", "abstract": " Many authors complain the lack of empirical studies which assess the benefits and the drawbacks of agile practices. Particularly, pair programming rises an interesting question for managers: does pair programming mean to pay two developers in the place of one? We realized an experiment to compare the productivity of a developer when performing pair programming and when working as solo programmer. We obtained empirical evidence that pair programming decreases the effort of the single programmer.", "num_citations": "21\n", "authors": ["352"]}
{"title": "A three-layered model to implement data privacy policies\n", "abstract": " An increasing number of business-to-business and business-to-customer services are accomplished by means of web technologies and mobile devices. As a consequence, sensitive data are continuously exposed to the risk of being delivered to final users or intermediary actors taking part to the data transactions, who could not have the proper access rights to obtain those data. These new generation of services are often characterized by high dynamism and untrustworthiness: existing technologies for managing and applying data privacy policies could be unsuccessful when dealing with this kind of contexts, as they could require too many resources, degrade the data quality to an unacceptable level, be too pervasive for data sources or data requestors. Moreover, industrial and research community is beginning to perceive the need to embed the mechanisms for preserving data privacy within the software product\u00a0\u2026", "num_citations": "20\n", "authors": ["352"]}
{"title": "A systematic literature review of blockchain and smart contract development: Techniques, tools, and open challenges\n", "abstract": " Blockchain platforms and languages for writing smart contracts are becoming increasingly popular. However, smart contracts and blockchain applications are developed through non-standard software life-cycles, in which, for instance, delivered applications can hardly be updated or bugs resolved by releasing a new version of the software. Therefore, this systematic literature review oriented to software engineering aims at highlighting current problems and possible solutions concerning smart contracts and blockchain applications development. In this paper, we analyze 96 articles (written from 2016 to 2020) presenting solutions to tackle software engineering-specific challenges related to the development, test, and security assessment of blockchain-oriented software. In particular, we review papers (that appeared in international journals and conferences) relating to six specific topics: smart contract testing, smart\u00a0\u2026", "num_citations": "19\n", "authors": ["352"]}
{"title": "Classic cryptanalysis using hidden Markov models\n", "abstract": " In this article, the authors present a detailed introduction to hidden Markov models (HMM). They then apply HMMs to the problem of solving simple substitution ciphers, and they empirically determine the accuracy as a function of the ciphertext length and the number of random restarts. Application to homophonic substitutions and other classic ciphers is briefly considered.", "num_citations": "18\n", "authors": ["352"]}
{"title": "An empirical study of metric-based methods to detect obfuscated code\n", "abstract": " Protecting data and applications from malware and other forms of malicious code has assumed a great relevance in the current era of pervasive web-based applications. Attackers often use code obfuscation to hide harmful programs from automatic detection. Several researchers have proposed methods to classify an unknown program as malicious or benign; however, little work has been done to identify obfuscated code. A promising approach to detect obfuscated code consists of using a set of metrics, collected by static analysis, to classify a program.In this paper we present an empirical evaluation of three text-based metrics to identify obfuscated code. Our experiment shows that the effectiveness of these metrics depends on the obfuscators: there are cases in which the metrics allow the proliferation of false positives (ie, misclassification of clear code as obfuscated code), which is bothering but not dangerous, and cases where false negatives (ie misclassification of obfuscated as clear code) proliferate, which is definitely more dangerous. Based on our experiment, we propose a combination of these three metrics and show how this combination outperforms the individual metrics.", "num_citations": "17\n", "authors": ["352"]}
{"title": "Performances of pair designing on software evolution: a controlled experiment\n", "abstract": " Evolving software design is a critical activity for many reasons: inadequate documentation, loss of strategic knowledge due to personnel's turnover, intrinsic complexity of software design. As a consequence, performances in the evolution tasks may deteriorate. Some experiments demonstrate that pair programming is able to reduce the time spent for accomplishing the tasks while increasing the overall work quality. Pair programming is usually applied to coding; the term 'pair designing' refers to applying the practice of working in pairs to the design phase. Because of the asymmetry existing between coding and designing, pair designing could not replicate all the benefits of pair programming. This paper discusses a controlled experiment for understanding which are the effects of pair designing when evolving software design", "num_citations": "17\n", "authors": ["352"]}
{"title": "Productivity of test driven development: A controlled experiment with professionals\n", "abstract": " With the growing interest for Extreme Programming, test driven development (TDD) has been increasingly investigated, and several experiments have been executed with the aim of understanding if and when it is preferable to the traditional practice of testing the code after having written it (named TAC in the paper). However, the research concerning TDD is at its beginning and the body of knowledge is largely immature. This paper discusses an experiment carried out within a Spanish software company with the aim of comparing productivity in TDD and TAC.", "num_citations": "15\n", "authors": ["352"]}
{"title": "A set of features to detect web security threats\n", "abstract": " The increasing growth of malicious websites and systems for distributing malware through websites is making it urgent the adoption of effective techniques for timely detection of web security threats. Current mechanisms may exhibit some limitations, mainly concerning the amount of resources required, and a low true positives rate for zero-day attacks. With this paper, we propose and validate a set of features extracted from the content and the structure of webpages, which could be used as indicators of web security threats. The features are used for building a predictor, based on five machine learning algorithms, which is applied to classify unknown web applications. The experimentation demonstrated that the proposed set of features is able to correctly classify malicious web sites with a high level of precision, corresponding to 0.84 in the best case, and recall corresponding to 0.89 in the best case. The\u00a0\u2026", "num_citations": "13\n", "authors": ["352"]}
{"title": "Confirming the influence of educational background in pair-design knowledge through experiments\n", "abstract": " The sharing of tacit knowledge is a strategic factor for the success of software process, from a number of perspectives: training, project assimilation, and reducing noise in knowledge transfer. Pair programming is supposed to be a practice suitable for this purpose. Unfortunately, the building of tacit knowledge is determined by factors that are difficult to isolate and capture because they concern personal attitude and capability. Thus, we have focused on the possible causes forming the individual ability, that can be isolated and studied, such as the individual education background. We have applied the practice of working in pairs to the design phase. We have made an experiment and a replica in academic environment, in order to understand the relationship between the building of knowledge through the practice and the individual background. In this paper we discuss the replica and compare the results with the first\u00a0\u2026", "num_citations": "13\n", "authors": ["352"]}
{"title": "Promise: A framework for process models customization to the operative context\n", "abstract": " Process diversity has recently become a target for the attention of a large part of the software engineering community. It implies that in order for a process model to be effective it must be specialized with respect to the context in which the process is executed. The authors face this problem by proposing ProMisE, a process pattern based framework able to capitalize the experiences gained in using a process model in diverse environments. It is an experience base focused on process models. By using ProMisE, two major advantages can be observed: it improves context comprehension; it improves the comprehension of the relationship between context characterization and process tailoring.", "num_citations": "12\n", "authors": ["352"]}
{"title": "Full reuse maintenance process for reducing software degradation\n", "abstract": " It is known that during maintenance activities system quality tends to degrade. This work presents a field investigation carried out on two industrial projects with the aim of comparing the effectiveness of the \"full reuse\" maintenance process with an \"iterative enhancement\" one. The results of the work confirm the greater effectiveness of the first process in slowing down the degradation of software quality. Furthermore, through the analysis of both process and product metrics, we show that monitoring maintenance performances is a poor indicator of system quality degradation. In fact, when the reduction of maintenance performance becomes large, quality has degraded considerably and to a point that ordinary maintenance may no longer be considered.", "num_citations": "11\n", "authors": ["352"]}
{"title": "Adversarial deep learning for energy management in buildings.\n", "abstract": " Deep learning is a powerful means to classify and thus optimize Energy management in Buildings. Deep learning is effective especially when the training dataset has a reduced volume or when the test set changes at a higher frequency than the training set. Notwithstanding these favourable properties, the classification with deep learning could be distorted by an adversary who can be interested to alter the classification of the energy consumption. Several kinds of fraud could require this attack, as those aimed at energy theft. In this paper we will provide experimental implants where a dataset is tampered with in order to lead the classifier to acquire it as valid, while it contains samples attributable to energy thefts.", "num_citations": "10\n", "authors": ["352"]}
{"title": "Ransomware at x-rays\n", "abstract": " Ransomware is a new form of malware that is plaguing an impressive number of victims, by applying a very effective paradigm of attack: to block data or computers and require a ransom to the victim for restoring the functionality of the infected machine. Different families and variants of this malware arose in a few years, rapidly diffusing in the wild and quickly increasing the robustness of the attack procedures. In this paper we discuss the most peculiar characteristics of this kind of malware, that we extracted from 76 samples.", "num_citations": "8\n", "authors": ["352"]}
{"title": "A NLP-based solution to prevent from privacy leaks in social network posts\n", "abstract": " Private and sensitive information is often revealed in posts appearing in Social Networks (SN). This is due to the users' willingness to increase their interactions within specific social groups, but also to a poor knowledge about the risks for privacy. We argue that technologies able to evaluate the sensitiveness of information while it is being published could enhance privacy protection by warning the user about the risks deriving from the disclosure of a certain information. To this aim, we propose a method, and an accompanying tool, to automatically intercept the sensitive information which is delivered in a social network post, through the exploitation of recurrent natural language patterns that are often used by users to disclose private data. A comparison with several machine learning techniques reveals that our method outperforms them, since it is more precise, accurate and not dependent on (i) a specific training set\u00a0\u2026", "num_citations": "7\n", "authors": ["352"]}
{"title": "Managing Trust in Social Networks\n", "abstract": " The huge diffusion of Web-based social networks increases the risks for users, including identity theft, personalized phishing, and malware. Effective mechanisms for trust evaluation can help to identify malicious users and contrast these risks. In this paper, we propose an approach to evaluate trust based on the history of the activity of each user. This guarantees robustness (it is difficult to be artificially reproduced by an attacker) and is reliable (as it does not rely on user-generated tags or keyword but it makes an analysis of users' conversation).", "num_citations": "7\n", "authors": ["352"]}
{"title": "A proposal and empirical validation of metrics to evaluate the maintainability of software process models\n", "abstract": " Software measurement is essential for understanding, defining, managing and controlling the software development and maintenance processes and it is not possible to characterize the various aspects of development in a quantitative way without having a deep understanding of software development activities and their relationships The current competitive marketplace calls for the continuous improvement of processes and as consequence companies have to change their processes in order to adapt to these new emerging needs. It implies the continuous change of their software process models and therefore, it is fundamental to facilitate the evolution of these models by evaluating its easiness of maintenance (maintainability). In this paper we introduce a set of metrics for software process models and discuss how these can be used as maintainability indicators. In particular, we report the results of a family of\u00a0\u2026", "num_citations": "7\n", "authors": ["352"]}
{"title": "Empirical validation of pair programming\n", "abstract": " This paper discusses an empirical assessment of pair programming. Several agile processes arose and have been adopted in industry with the promise of producing working software in the early phases of production process and to make the organization flexible and adaptable with respect to the changing environment. The outcomes of the experiments can be summarized as follows: (i) pair programming improves the productivity of developers with respect to solo programming; (ii) it also fosters knowledge transfer between the developers of the pair: the experiment suggests that this effect is emphasized when both the components own the same educational background; and, finally, (iii) distributing the components of a pair could seriously deteriorate expected benefits, if an appropriate support for communication and collaboration is not set up.", "num_citations": "6\n", "authors": ["352"]}
{"title": "The impact of educational background on design knowledge sharing during pair programming: an empirical study\n", "abstract": " The management of knowledge in software processes is becoming a challenging concern for researchers and practitioners. Explicit knowledge can be formalized in many kinds of documents and rules, and consequently transferred in a number of manners. On the contrary, tacit knowledge cannot be formalized, because it is mainly retained in personal cognitive models and consists of individual capabilities of dealing with problems. The design of software systems requires a consistent deployment of tacit knowledge, and pair programming has shown great promises for helping to share knowledge between programmers. It is a common experience that programmers come not only from computer science and engineering curricula, but also from other education degrees, such as mathematics, natural sciences, and social sciences. In this case they attend proper specialist post graduation courses. We have\u00a0\u2026", "num_citations": "5\n", "authors": ["352"]}
{"title": "Maintainability of software process models: an empirical study\n", "abstract": " Adequate process modeling is one of the key factors for the success of software organizations. Currently, organizations face with a very high competition and consequently they have to continuously improve their processes. This improvement could require changes of the process models so it is important to evaluate the maintainability of these models to facilitate their evolution. In this paper we present the results obtained with the replication of an experiment to validate a set of metrics for software process models (SPMs). The replicas were performed at the Italian Universities of Sannio (Italy) and Federico II (Naples). They are part of a family of experiments and have confirmed the results obtained in the original experiment carried out at the University of Castilla-La Mancha (Spain). As a result a set of useful indicators of the understandability and modifiability of the SPMs, which are two key sub-characteristics of their\u00a0\u2026", "num_citations": "5\n", "authors": ["352"]}
{"title": "SocioBot: a Twitter-based botnet\n", "abstract": " A botnet is a collection of computers controlled by a botmaster, often used for malicious activity. Social media provides an ideal platform for controlling a botnet, and also an avenue for botnets to spread their reach. In this research, we develop a botnet, SocioBot, that uses Twitter for its command and control (C&C) system. We conduct a variety of simulations based on this botnet. Epidemic models are used to validate and analyse our botnet simulations.", "num_citations": "4\n", "authors": ["352"]}
{"title": "A Test Framework for Assessing Effectiveness of the Data Privacy Policy's Implementation into Relational Databases\n", "abstract": " The growing migration of business transactions toward the web made data privacy a critical issue to cope with. Many technologies have been proposed in order to preserve sensitive data from illegal disclosure, also known as privacy enhancing technology (PET). Unfortunately, under certain conditions, sensitive data could be obtained by leveraging different malicious mechanisms which exploit actions permitted to the user. Thus, it is needed to face the problem also at the system design level, and not only by integrating a specific PET into the final system. We propose a framework for testing the software systempsilas capability of respecting established data privacy policy. Our test framework aims at detecting the sequence of legal actions which could allow a user to breach the mechanisms for preserving data privacy. The test output helps designers to properly modify those usage scenarios which could compromise\u00a0\u2026", "num_citations": "4\n", "authors": ["352"]}
{"title": "Tuning anonymity level for assuring high data quality: an empirical study.\n", "abstract": " Preserving data privacy is posing new challenges to software engineering researchers. Current technologies can be too cumbersome, pervasive or costly to be successfully applied in dynamic and complex scenarios where data exchange occurs among a large number of applications. Anonymization techniques seem to be a promising candidate, even if preliminary investigations suggest that they could deteriorate the quality of data. An empirical study has been carried out in order to understand the relationship between the anonymization level and the degradation of data quality.", "num_citations": "4\n", "authors": ["352"]}
{"title": "Process Diversity and how practitioners can manage it\n", "abstract": " Since IT projects are unique regarding their combination of specific goals, technologies in use, and characteristics, providing \u2018general\u2019processes it is not an effective solution. Instead effective and efficient processes custom tailored to a project and based on experience collected during past projects execution are required. This is in contrast with the industry practices where reuse-oriented process descriptions and goaloriented planning are often missing. Usually a process can undergo a certain numbers of modifications, due to the different operative contexts in which it is executed. The modifications generate many different versions of the process, named specialized processes. Each one of these must be managed properly in order to govern a just evolution consistently with all the others. Considered the dimension of the actual scenarios, maintaining all the processes and their specialized versions is not a trivial task. We have defined a process pattern based framework to accomplish this purpose. In this paper we present the framework, that we are realizing with an Italian enterprise, and an explanatory case study we are developing within the Research Centre on Software Technology in Bari, Italy.", "num_citations": "4\n", "authors": ["352"]}
{"title": "From knowledge management concepts toward software engineering practices\n", "abstract": " Knowledge Management spans on three abstraction layers: the first one is concerned with organisations, the second one regards engineering practices, and the third one is about tools. The organisation level encloses concepts strongly tied with strategies and resources management; the engineering level regards processes, methods and heuristics, tested or empirically validated, that support effective processes design, management and enactment; the third level comprehends software tools for storing and operating with knowledge. Currently, a major concern is a gap between the first and the second level in order to properly exploit theory and to cope with the nowadays turmoil of the marketplace. In this paper we propose a map linking a significant set of selected theories in knowledge management with a set of appropriate engineering practices able to realise them; furthermore we wish to determine the\u00a0\u2026", "num_citations": "4\n", "authors": ["352"]}
{"title": "Advanced transcriptase for JavaScript malware\n", "abstract": " Previous work has shown that JavaScript malware can manipulate its internal code with relative ease using an approach known as Transcriptase. However, the resulting malware remained susceptible to software similarity based scoring techniques. In this research, we develop and analyze an advanced version of Transcriptase that is entirely practical and is not detectable using any of several scoring techniques considered. Our technique, which is based on entropy manipulations and multiple layers of encryption, is applicable generally for use in malware obfuscation.", "num_citations": "3\n", "authors": ["352"]}
{"title": "Malware Detection employed by Visualization and Deep Neural Network\n", "abstract": " With the fast growth of malware\u2019s volume circulating in the wild, to obtain a timely and correct classification is increasingly difficult. Traditional approaches to automatic classification suffer from some limitations. The first one concerns the feature extraction: static approaches are hindered by code obfuscation techniques, while dynamic approaches are time consuming and evasion techniques often impede the correct execution of the code. The second limitation regards the building of the prediction models: the adequateness of a training dataset may degrade over time or can not be sufficient for some malware families or instances. With this paper we investigate the effectiveness of a new approach that uses malware visualization, for overcoming the problems related to the features selection and extraction, along with deep learning classification, whose performances are less sensitive to a small dataset than machine\u00a0\u2026", "num_citations": "2\n", "authors": ["352"]}
{"title": "Investigating the vulnerability fixing process in OSS projects: Peculiarities and challenges\n", "abstract": " Although vulnerabilities can be considered and treated as bugs, they present numerous peculiarities compared to other types of bugs (canonical bugs in the remainder of the paper). A vulnerability adds functionality to a system, as it allows an adversary to misuse or abuse the system, while a canonical bug is an incomplete or incorrect implementation of a requirement, and thus degrades the functionality of the system. This difference can affect the fixing process of vulnerabilities. By mining the repositories of 6 open source projects, we characterize the differences in the fixing process between vulnerabilities and canonical bugs, highlighting critical issues which could represent challenges for future research. Results of our study demonstrate that: (i) more re-assignments (than the ones observed in canonical bugs) are required for finding the developers able to handle vulnerability-related bugs, (ii) developers\u2019 security\u00a0\u2026", "num_citations": "2\n", "authors": ["352"]}
{"title": "Measuring the impact of testing on code structure in Test Driven Development: metrics and empirical analysis.\n", "abstract": " Test Driven Development (TDD) strictly interleaves testing activity with development; we conjecture that the testing activity could produce some effects on the internal code quality. This paper proposes three metrics for evaluating such relationship and applies them in order to compare TDD with the traditional unit testing after coding. Two experiments were carried out in two European universities producing evidence about how the testing process affects code structure in different ways in the two practices.", "num_citations": "2\n", "authors": ["352"]}
{"title": "A System for Managing Security Knowledge using Case Based Reasoning and Misuse Cases.\n", "abstract": " Making secure a software system is a very critical purpose, especially because it is very hard to consolidate an exhaustive body of knowledge about security risks and related countermeasures. To define a technological infrastructure for exploiting this knowledge poses many challenges. This paper introduces a system to capture, share and reuse software security knowledge within a Software Organization. The system collects knowledge in the form of misuse cases and makes use of Case Based Reasoning for implementing knowledge management processes.", "num_citations": "2\n", "authors": ["352"]}
{"title": "Integrating Software Competences and Managerial Skills from Humanistic Background: a case study on University-Industry Higher Education Programs\n", "abstract": " The paper points out how approaches to analyze the overall process of Junior Software TechnologistsManagement in ICT Firms could take advantage shifting from a \u2018knowledge-based approach\u2019to a \u2018knowing organization approach\u2019. In the latter approach, instead of regarding the knowledge as an object to transfer, it is suggested that knowing is something that people, especially knowledge workers, collectively do and construct. The design of University-Industry higher education programs is studied as a \u2018process of cognitive construction\u2019and as a \u2018process of political construction\u2019, identifying a community of practices involved in multiple mediations between actors, objects, and tools of educational processes. This framework allows to overcome a simplistic view of educational programs as linear processes of knowledge transferring from teachers to students and as series of evaluations carried out by actors with formal hierarchical authority (eg teachers during the examination, project leaders during the milestones, managers during the selection interview, etc.). The paper presents preliminary findings from a case study developed on the pilot project of a Master Program on Software Technology and Management, carried out within a partnership between RCOST University of Sannio and several ICT leader companies. The degree of actual integration between technological skills, business skills, and behavioral repertories is linked to degree of common knowledge developed by the actors (University teachers, Companytutors, knowledge workers). The degree of ICT companies involvement in higher education programs seems to be linked to a shared\u00a0\u2026", "num_citations": "2\n", "authors": ["352"]}
{"title": "Dynamic Software Community of Practice through Three-layered Competence Model\n", "abstract": " Dynamic Software Community of Practice through Three-layered Competence Model IRIS nascondi/visualizza icone a destra nascondi/visualizza menu in alto Aiuto Sfoglia Scorri i prodotti per: Autore Titolo Riviste Serie Login IRIS Archivio della ricerca dell'Universit\u00e0 degli studi del Sannio Catalogo Ricerca 2 Contributo in Volume 2.1 Contributo in volume (Capitolo o Saggio) Dynamic Software Community of Practice through Three-layered Competence Model Italiano Italiano English Dynamic Software Community of Practice through Three-layered Competence Model / Canfora, G.; Cimitile, A.; Visaggio, C. - (2003). Scheda breve Scheda completa Titolo: Dynamic Software Community of Practice through Three-layered Competence Model Autori interni: CANFORA, Gerardo CIMITILE, Aniello VISAGGIO, CORRADO AARON Data di pubblicazione: 2003 Handle: http://hdl.handle.net/20.500./8996 Appare nelle tipologie: (: \u2026", "num_citations": "2\n", "authors": ["352"]}
{"title": "A Comparative Study of Adversarial Attacks to Malware Detectors Based on Deep Learning\n", "abstract": " Machine learning is widely used for detecting and classifying malware. Unfortunately, machine learning is vulnerable to adversarial attacks. In this chapter, we investigate how generative adversarial approaches could affect the performance of a detection system based on machine learning. In our evaluation, we trained several neural networks for malware detection on the EMBER [3] dataset and then we built ten parallel GANs based on convolutional layer architecture (CNNs) for the generation of adversarial examples with a gradient-based method. We then evaluated the performance of our GANs, in a gray-box scenario, by computing the evasion rate reached by the adversarial generated samples. Our findings suggest that machine- and deep-learning-based malware detectors could be fooled by adversarial malicious samples with an evasion rate of around 99% providing further attack opportunities.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Gasmet: Profiling gas leaks in the deployment of solidity smart contracts\n", "abstract": " Nowadays, blockchain technologies are increasingly adopted for different purposes and in different application domains. Accordingly, more and more applications are developed for running on a distributed ledger technology (ie,\\textit {dApps}). The business logic of a dApp (or part of it) is usually implemented within one (or more) smart contract (s) developed through Solidity, an object-oriented programming language for writing smart contracts on different blockchain platforms, including the popular Ethereum. In Ethereum, once compiled, the smart contracts run on the machines of miners who can earn Ethers (a cryptographic currency like Bitcoin) by contributing their computing resources and the\\textit {gas}(in Ether) corresponds to the execution fee compensating such computing resources. However, the deployment and execution costs of a smart contract strictly depend on the choices done by developers while\u00a0\u2026", "num_citations": "1\n", "authors": ["352"]}
{"title": "6th International Workshop on Emerging Trends in Software Metrics (WETSoM 2015)\n", "abstract": " WETSoM is a gathering of researchers and practitioners to discuss the progress on software metrics knowledge. Motivations for this workshop include the low impact that software metrics have on current software development and the increased interest in research. The goals of this workshop include critically examining the evidence for the effectiveness of existing metrics and identifying new directions for metrics. Evidence for existing metrics includes how the metrics have been used in practice and studies showing their effectiveness. Identifying new directions includes use of new theories, such as complex network theory, on which to base metrics.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Automated Capturing System of Object VR Movie for Unmovable Objects\n", "abstract": " In this paper, we propose an automated capturing system for creating the Object VR Movie (OVRM) which suit for the inconvenient moving objects and the irregularly objects. In our system, the real object wouldn\u2019t be rotated on the turntable. Instead, we designed a rotatable bracket which installs the webcams, backdrop and the lights to rotate around objects for capturing images. Therefore, we have possibility to design a high efficiency and low-cost device. Users could control the device easily and obtain the source images quickly.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Managing Security Knowledge through Case based Reasoning.\n", "abstract": " Making secure a software system is a very critical purpose, especially because it is very hard to consolidate an exhaustive body of knowledge about security risks and related countermeasures. To define a technological infrastructure for exploiting this knowledge poses many challenges. This paper introduces a system to capture, share and reuse software security knowledge within a Software Organization. The system collects knowledge in the form of misuse cases and makes use of Case Based Reasoning for implementing knowledge management processes. A reasoned analysis of the system was performed throughout a case study, in order to identify weaknesses and opportunities of improvement.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Does enforcing anonymity mean decreasing data usefulness?\n", "abstract": " Preserving data privacy is becoming an urgent issue to cope with. Among different technologies, anonymization techniques offer many advantages, even if preliminary investigations suggest that they could deteriorate the usefulness of data. We carried out an empirical study in order to understand to which extent it is possible to enforce anonymization, and thus protect sensitive information, without degrading usefulness of data under unacceptable thresholds. Moreover, we analyzed also if re-writing queries could help reduce drawbacks of anonymization.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Evaluation of BPMN Models Quality\n", "abstract": " The design phase is of special importance in the development of a business process. This phase refers to the modeling, handling and redesigning of processes, but when maintenance tasks have to be performed, this stage may be rather complicated. It implies a heavy investment of time and resources, since it involves both technical developers and business analysts. Moreover, process modeling should permit not only the production of models which are understandable to the users, but also the early detection and correction of errors. All of this adds to the overall quality of the model. We therefore propose a set of measures with which to assess the structural complexity of conceptual business process models. Our aim is to obtain useful indicators to be used when carrying out maintenance tasks on these models, thus obtaining higher quality models by means of an early evaluation of the model\u2019s given quality properties. With the development of a family of experiments, it has been possible to discover a set of measures which may be useful in assessing the usability and maintainability of conceptual business process models.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Valutazione Empirica di Sistemi ERP Open Source.\n", "abstract": " La crescente diffusione del software open source, sia in termini di acquisizione, che quale opportunit\u00e0 per lo sviluppo di nuovi modelli di business, richiede una comprensione pi\u00f9 profonda delle dinamiche che sottendono la sua realizzazione ed evoluzione. Questo lavoro riporta i risultati preliminari di una ricerca empirica finalizzata a caratterizzare le strategie di progettazione ed evoluzione del software open source.", "num_citations": "1\n", "authors": ["352"]}
{"title": "Introducing Quality System in small and medium enterprises: An experience report\n", "abstract": " The institutionalization of a Quality System improves the levels of technical and managerial efficiency of Enterprises. Moreover, the market itself solicits the acquisition of a Quality Certification for getting a steady confirmation of Enterprise\u2019s capabilities. The introduction of a Quality System in Small and Medium Enterprises can entail prohibitive costs for them and affect their agility and flexibility. The paper proposes a lightweight approach as a solution to either avoid or reduce such drawbacks; it consists of a method for re-designing processes and a software system to control and monitoring processes\u2019 execution. Consequently, a research question arises: is the approach suitable for establishing a Quality System effectively in a Small Medium Enterprise? In order to have a preliminary evaluation of the proposed approach, a case study has been carried out in an Italian Enterprise, aiming at owning VISION 2000\u00a0\u2026", "num_citations": "1\n", "authors": ["352"]}