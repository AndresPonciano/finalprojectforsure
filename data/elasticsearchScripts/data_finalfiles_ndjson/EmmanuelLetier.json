{"title": "Reasoning about agents in goal-oriented requirements engineering\n", "abstract": " The thesis proposes a number of techniques for elaborating requirements constructively from high-level goals. The techniques are based on the KAOS goal-oriented method for requirements engineering. This method consists in identifying goals and refining them into subgoals until the latter can be assigned as responsibilities of single agents such as humans, devices and software. Domain properties and assumptions about the software environment are also used during the goal refinement process. The method supports the exploration of alternative goal refinements and alternative responsibility assignments of goals to agents. It also supports the identification and resolution of conflicts between goals, and the identification and resolution of exceptional agent behaviors, called obstacles, that violate goals and assumptions produced during the goal refinement process. The thesis enriches the KAOS framework through three kinds of techniques:(a) techniques for identifying agents, goal refinements, and alternative responsibility assignments, and for deriving agent interfaces from such responsibility assignments;(b) techniques for deriving operational requirements from goal specifications;(c) techniques for generating obstacles to the satisfaction of idealized goals and assumptions, and for generating alternative obstacle resolutions. The result is a coherent body of systematic techniques for requirements elaboration that are both theoretically well-founded (a formal model of agent is defined) and effective in practice (the techniques are validated on two real case studies of sign...", "num_citations": "238\n", "authors": ["1475"]}
{"title": "Generating and evaluating choices for fixing inconsistencies in UML design models\n", "abstract": " Our objective is to provide automated support for assisting designers in fixing inconsistencies in UML models. We have previously developed techniques for efficiently detecting inconsistencies in such models and identifying where changes need to occur in order to fix problems detected by these means. This paper extends previous work by describing a technique for automatically generating a set of concrete changes for fixing inconsistencies and providing information about the impact of each change on all consistency rules. The approach is integrated with the design tool IBM Rational Rose . We demonstrate the computational scalability and usability of the approach through the empirical evaluation of 39 UML models of sizes up to 120,000 elements.", "num_citations": "162\n", "authors": ["1475"]}
{"title": "Uncertainty, risk, and information value in software requirements and architecture\n", "abstract": " Uncertainty complicates early requirements and architecture decisions and may expose a software project to significant risk. Yet software architects lack support for evaluating uncertainty, its impact on risk, and the value of reducing uncertainty before making critical decisions. We propose to apply decision analysis and multi-objective optimisation techniques to provide such support. We present a systematic method allowing software architects to describe uncertainty about the impact of alternatives on stakeholders' goals; to calculate the consequences of uncertainty through Monte-Carlo simulation; to shortlist candidate architectures based on expected costs, benefits and risks; and to assess the value of obtaining additional information before deciding. We demonstrate our method on the design of a system for coordinating emergency response teams. Our approach highlights the need for requirements engineering\u00a0\u2026", "num_citations": "113\n", "authors": ["1475"]}
{"title": "Deriving event-based transition systems from goal-oriented requirements models\n", "abstract": " Goal-oriented methods are increasingly popular for elaborating software requirements. They offer systematic support for incrementally building intentional, structural, and operational models of the software and its environment. Event-based transition systems on the other hand are convenient formalisms for reasoning about software behaviour at the architectural level.               The paper relates these two worlds by presenting a technique for translating formal specification of software operations built according to the KAOS goal-oriented method into event-based transition systems analysable by the LTSA toolset. The translation involves moving from a declarative, state-based, timed, synchronous formalism typical of requirements modelling languages to an operational, event-based, untimed, asynchronous one typical of architecture description languages. The derived model can be used for the formal analysis\u00a0\u2026", "num_citations": "109\n", "authors": ["1475"]}
{"title": "Monitoring and control in scenario-based requirements analysis\n", "abstract": " Scenarios are an effective means for eliciting, validating and documenting requirements. At the requirements level, scenarios describe sequences of interactions between the software-to-be and agents in the environment. Interactions correspond to the occurrence of an event that is controlled by one agent and monitored by another. This paper presents a technique to analyse requirements-level scenarios for unforeseen, potentially harmful, consequences. Our aim is to perform analysis early in system development, where it is highly cost-effective. The approach recognises the importance of monitoring and control issues and extends existing work on implied scenarios accordingly. These so-called input-output implied scenarios expose problematic behaviours in scenario descriptions that cannot be detected using standard implied scenarios. Validation of these implied scenarios supports requirements elaboration\u00a0\u2026", "num_citations": "89\n", "authors": ["1475"]}
{"title": "Simulating and optimising design decisions in quantitative goal models\n", "abstract": " Making decisions among a set of alternative system designs is an essential activity of requirements engineering. It involves evaluating how well each alternative satisfies the stakeholders' goals and selecting one alternative that achieves some optimal tradeoffs between possibly conflicting goals. Quantitative goal models support such activities by describing how alternative system designs - expressed as alternative goal refinements and responsibility assignments - impact on the levels of goal satisfaction specified in terms of measurable objective functions. Analyzing large numbers of alternative designs in such models is an expensive activity for which no dedicated tool support is currently available. This paper takes a first step towards providing such support by presenting automated techniques for (i) simulating quantitative goal models so as to estimate the levels of goal satisfaction contributed by alternative system\u00a0\u2026", "num_citations": "81\n", "authors": ["1475"]}
{"title": "Fluent temporal logic for discrete-time event-based models\n", "abstract": " Fluent model checking is an automated technique for verifying that an event-based operational model satisfies some state-based declarative properties. The link between the event-based and state-based formalisms is defined through\" fluents\" which are state predicates whose value are determined by the occurrences of initiating and terminating events that make the fluents values become true or false, respectively. The existing fluent temporal logic is convenient for reasoning about untimed event-based models but difficult to use for timed models. The paper extends fluent temporal logic with temporal operators for modelling timed properties of discrete-time event-based models. It presents two approaches that differ on whether the properties model the system state after the occurrence of each event or at a fixed time rate. Model checking of timed properties is made possible by translating them into the existing\u00a0\u2026", "num_citations": "51\n", "authors": ["1475"]}
{"title": "Understanding clusters of optimal solutions in multi-objective decision problems\n", "abstract": " Multi-objective decisions problems are ubiquitous in requirements engineering. A common approach to solve them is to apply search-based techniques to generate a set of non-dominated solutions, formally known as the Pareto front, that characterizes all solutions for which no other solution performs better on all objectives simultaneously. Analysing the shape of the Pareto front helps decision makers understand the solution space and possible tradeoffs among the conflicting objectives. Interpreting the optimal solutions, however, remains a significant challenge. It is in particular difficult to identify whether solutions that have similar levels of goals attainment correspond to minor variants within a same design or to very different designs involving completely different sets of decisions. Our goal is to help decision makers identify groups of strongly related solutions in a Pareto front so that they can understand more easily\u00a0\u2026", "num_citations": "43\n", "authors": ["1475"]}
{"title": "Goal-oriented system modelling for managing environmental sustainability\n", "abstract": " Large organizations play an important role in helping to mitigate and adapt to the consequences of climate change. As a result, they face increasing pressure from Governments and non-governmental organizations to report on the sustainability of their operations. Beyond simple reporting, however, it is difficult for them to identify the most effective actions to take to address the risks associated with climate change and rising energy costs. The problem is hard because it involves tradeoffs between multiple longterm and short-term objectives that must be made under strong budgetary constraints, uncertainties about the future evolution of many system variables, and sometimes simply a lack of shared understanding of what the real objectives are and the potential impacts of various decisions on such objectives. The overall aim of our research is to develop fundamental techniques to help organizations make decisions\u00a0\u2026", "num_citations": "29\n", "authors": ["1475"]}
{"title": "Radar: A lightweight tool for requirements and architecture decision analysis\n", "abstract": " Uncertainty and conflicting stakeholders' objectives make many requirements and architecture decisions particularly hard. Quantitative probabilistic models allow software architects to analyse such decisions using stochastic simulation and multi-objective optimisation, but the difficulty of elaborating the models is an obstacle to the wider adoption of such techniques. To reduce this obstacle, this paper presents a novel modelling language and analysis tool, called RADAR, intended to facilitate requirements and architecture decision analysis. The language has relations to quantitative AND/OR goal models used in requirements engineering and to feature models used in software product lines. However, it simplifies such models to a minimum set of language constructs essential for decision analysis. The paper presents RADAR's modelling language, automated support for decision analysis, and evaluates its\u00a0\u2026", "num_citations": "27\n", "authors": ["1475"]}
{"title": "Requirements modelling by synthesis of deontic input-output automata\n", "abstract": " Requirements modelling helps software engineers understand a system's required behaviour and explore alternative system designs. It also generates a formal software specification that can be used for testing, verification, and debugging. However, elaborating such models requires expertise and significant human effort. The paper aims at reducing this effort by automating an essential activity of requirements modelling which consists in deriving a machine specification satisfying a set of goals in a domain. It introduces deontic input-output automata - an extension of input-output automata with permissions and obligations - and an automated synthesis technique over this formalism to support such derivation. This technique helps modellers identifying early when a goal is not realizable in a domain and can guide the exploration of alternative models to make goals realizable. Synthesis techniques for input-output or\u00a0\u2026", "num_citations": "26\n", "authors": ["1475"]}
{"title": "Early failure prediction in feature request management systems: an extended study\n", "abstract": " Online feature request management systems are popular tools for gathering stakeholders\u2019 change requests during system evolution. Deciding which feature requests require attention and how much upfront analysis to perform on them is an important problem in this context: too little upfront analysis may result in inadequate functionalities being developed, costly changes, and wasted development effort; too much upfront analysis is a waste of time and resources. Early predictions about which feature requests are most likely to fail due to insufficient or inadequate upfront analysis could facilitate such decisions. Our objective is to study whether it is possible to make such predictions automatically from the characteristics of the online discussions on feature requests. This paper presents a study of feature request failures in seven large projects, an automated tool-implemented framework for constructing failure\u00a0\u2026", "num_citations": "23\n", "authors": ["1475"]}
{"title": "Early failure prediction in feature request management systems\n", "abstract": " Online feature request management systems are popular tools for gathering stakeholder requirements during system evolution. Deciding which feature requests require attention and how much upfront analysis to perform on them is an important problem in this context: too little upfront analysis may result in inadequate functionalities being developed, costly changes, and wasted development effort; too much upfront analysis is a waste of time and resources. Early predictions about which feature requests are most likely to fail due to insufficient or inadequate upfront analysis could facilitate such decisions. Our objective is to study whether it is possible to make such predictions automatically from the characteristics of the online discussions on feature requests. The paper presents a tool-implemented framework that automatically constructs failure prediction models using machine-learning classification algorithms and\u00a0\u2026", "num_citations": "19\n", "authors": ["1475"]}
{"title": "Clustering stakeholders for requirements decision making\n", "abstract": " [Context and motivation] Novel web-based requirements elicitation tools offer the possibility to collect requirements preferences from large number of stakeholders. Such tools have the potential to provide useful data for requirements prioritization and selection. [Question/problem] However, existing requirements prioritization and selection techniques do not work in this context because they assume requirements ratings from a small number of stakeholders groups, rather than from a large number of individuals. They also assume that the relevant groups of stakeholders have been identified a priori, and that all stakeholders within a group have the same preferences. [Principal ideas/ results] This paper aims at addressing these problems by applying cluster analysis techniques used in the area of market segmentation for identifying relevant groups of stakeholders to be used for requirements decision making\u00a0\u2026", "num_citations": "13\n", "authors": ["1475"]}
{"title": "Goal-oriented elaboration of requirements for a safety injection control system\n", "abstract": " The specification of a safety injection control system for a nuclear power plant is a wellknown example used to illustrate the SCR method. A first SCR specification of this system can be found in [Cou93], a revised SCR specification is presented in [Heit96] where it is used to illustrate the consistency and completeness checking of the SCR* tool set; this example is also used to illustrate the model-checking capabilities of the tool set [Ram99], the generation of invariants from SCR tables [Jef98]; and the generation of test cases from SCR tables [Gar99].This working draft describes a KAOS specification for the safety injection control system. The purpose of this specification is to provide a first small example to compare KAOS and SCR, and to investigate potential links between the two methods. The case study also shows interesting examples of conflicts between goals, and of obstacles to the satisfaction of goals. The KAOS specification includes an operation model so that it could be used to illustrate the new animation prototype and the algorithm for deriving SCR tables from KAOS operations.", "num_citations": "13\n", "authors": ["1475"]}
{"title": "Supporting Sustainability Decisions in Large Organisations.\n", "abstract": " Sustainability management systems are important technologies used by large organisations to monitor and control their CO2 emissions and other environmental impacts. So far, these systems have been designed to support data collection and reporting mandated by regulations, but they provide little support for decision making in order to improve an organisation\u2019s environmental sustainability. In this paper, we present a systematic method to help organisations make such decisions. Our method builds on goal-oriented requirements engineering for modelling an organisation\u2019s sustainability goals and on statistical decision analysis for guiding decisions under uncertainty. By being explicit about uncertainty, our method provides a sound assessment of the risks associated with alternative options (including the \u201cbusiness as usual\u201d option), and, through the concept of information value, informs decision makers whether reducing uncertainty through additional data collection will be useful for their decisions. We illustrate our approach on real sustainability decision questions at UCL\u2019s Department of Computer Science.", "num_citations": "11\n", "authors": ["1475"]}
{"title": "Intentional fragments: bridging the gap between organizational and intentional levels in business processes\n", "abstract": " Business process models provide a natural way to describe real-world processes to be supported by software-intensive systems. These models can be used to analyze processes in the system-as-is and describe potential improvements for the system-to-be. There is however little support to analyze how well a given business process models satisfies its business goals. Our objective is to address these problems by relating business process models to goal models so that goal-oriented requirements engineering techniques can be used to analyze how well the business processes for the system-as-is satisfy the business goals. The paper establishes relationships between BPMN\u00a02.0 and the KAOS goal-oriented requirements modelling framework. We present the notion of intentional fragment to bridge the gap between process models and goal models. We conducted an evaluation to analyze use of this\u00a0\u2026", "num_citations": "9\n", "authors": ["1475"]}
{"title": "Improving security decision under uncertainty: A multidisciplinary approach\n", "abstract": " Security decision-making is a critical task in tackling security threats affecting a system or process. It often involves selecting a suitable resolution action to tackle an identified security risk. To support this selection process, decision-makers should be able to evaluate and compare available decision options. This article introduces a modelling language that can be used to represent the effects of resolution actions on the stakeholders' goals, the crime process, and the attacker. In order to reach this aim, we develop a multidisciplinary framework that combines existing knowledge from the fields of software engineering, crime science, risk assessment, and quantitative decision analysis. The framework is illustrated through an application to a case of identity theft.", "num_citations": "8\n", "authors": ["1475"]}
{"title": "Building a National E-Service using Sentire experience report on the use of Sentire: A volere-based requirements framework driven by calibrated personas and simulated user feedback\n", "abstract": " User experience (UX) is difficult to quantify and thus more challenging to require and guarantee. It is also difficult to gauge the potential impact on users' lived experience, especially at the earlier stages of the development life cycle, particularly before hi fidelity prototypes are developed. We believe that the enrolment process is a major hurdle for e-government service adoption and badly designed processes might result in negative repercussions for both the policy maker and the different user groups involved; non-adoption and resentment are two risks that may result in low return on investment (ROI), lost political goodwill and ultimately a negative lived experience for citizens. Identity assurance requirements need to balance out the real value of the assets being secured (risk) with the user groups' acceptance thresholds (based on a continuous cost-benefit exercise factoring in cognitive and physical workload\u00a0\u2026", "num_citations": "8\n", "authors": ["1475"]}
{"title": "Using intentional fragments to bridge the gap between organizational and intentional levels\n", "abstract": " ContextBusiness process models provide a natural way to describe real-world processes to be supported by software-intensive systems. These models can be used to analyze processes in the system-as-is and describe potential improvements for the system-to-be. But, how well does a given business process model satisfy its business goals? How can different perspectives be integrated in order to describe an inter-organizational process?ObjectiveThe aim of the present paper is to link the local and the global perspectives of the inter-organizational business process defined in BPMN 2.0 (Business Process Model and Notation) to KAOS goal models (Keep All Objectives Satisfied). We maintain a separation of concerns between the intentional level captured by the goal model and the organizational level captured by the process model. The paper presents the concept of intentional fragment (a set of flow elements of\u00a0\u2026", "num_citations": "7\n", "authors": ["1475"]}
{"title": "Giving a voice to personas in the design of e-government identity processes\n", "abstract": " Personas as defined by Cooper (2004) are static archetypal representations of specific user groups, each bringing onto the drawing board more scope for discussion, and a deeper understanding of what the persona might want, like and dislike. These personas also facilitate group discussion while directing the designers\u2019 energy towards a unified direction. Various methods are proposed in requirements engineering literature, and many of these methods suggest the use of personas as a technique to understand the eventual user and inform design decisions (Faily & Fl\u00e9chais, 2010a; Faily & Fl\u00e9chais, 2011; Faily & Fl\u00e9chais, 2010b; Olsen, 2004; Nielsen, 2004; van Velsen, van der Geest, ter Hedde, & Derks, 2009).", "num_citations": "7\n", "authors": ["1475"]}
{"title": "Designing acceptable user registration processes for e-services\n", "abstract": " User registration can have a serious impact on the success of online government services. Different services require different levels of identity assurance, and different registration processes are put in place to deliver them. But from the citizen\u2019s perspective, these processes often require a disproportionate amount of effort, which reduces users\u2019 acceptance. Typically, when sign-up to high-effort services is not mandatory, take-up is low; when it is compulsory, it causes resentment, and neither is desirable. Designers of services requiring registration currently have no way of assessing likely user acceptance at design time. We are introducing a tool that allows system designers to identify the impact of registration processes on different groups of users, in terms of workload and friction. Personas have been successfully applied to assist security designers, and we extend the concept with statistical properties, and introduce the Persona Group Calibration (PGC) exercise to calibrate the different personas for sensitivity to specific identity-related elements.", "num_citations": "6\n", "authors": ["1475"]}
{"title": "Scalability analysis of the RADAR decision support tool\n", "abstract": " This report presents a theoretical complexity analysis and empirical scalability analysis of the Requirements and Architecture Decision Analyser (RADAR).", "num_citations": "3\n", "authors": ["1475"]}
{"title": "Optimizing the incremental delivery of software features under uncertainty\n", "abstract": " [Context] Lean and agile software development processes encourage delivering software in small increments so as to generate early business value, be able to adapt to changes, and reduce risks. Deciding what to build in each iteration is an important requirements engineering activity. The Incremental Funding Method (IFM) partly supports such decisions by identifying sequences of features delivery that optimize Net Present Value (NPV). [Problem] The IFM, however, does not deal explicitly with uncertainty and considers the maximization of NPV as the only objective, without explicit consideration for other objectives such as minimizing upfront investment costs and maximizing learning so as to reduce uncertainty and risk for future iterations. [Ideas] This short paper presents our ongoing research to address these limitations by extending IFM with Bayesian decision analysis to reason about uncertainty\u00a0\u2026", "num_citations": "3\n", "authors": ["1475"]}
{"title": "Measure what counts: An evaluation pattern for software data analysis\n", "abstract": " The `Measure what counts' pattern consists in evaluating software data analysis techniques against problem-specific measures related to cost and other stakeholders' goals instead of relying solely on generic metrics such as recall, precision, F-measure, and Receiver Operating Characteristic area.", "num_citations": "1\n", "authors": ["1475"]}