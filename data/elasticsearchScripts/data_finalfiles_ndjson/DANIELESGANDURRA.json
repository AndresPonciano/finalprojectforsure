{"title": "A survey on security for mobile devices\n", "abstract": " Nowadays, mobile devices are an important part of our everyday lives since they enable us to access a large variety of ubiquitous services. In recent years, the availability of these ubiquitous and mobile services has significantly increased due to the different form of connectivity provided by mobile devices, such as GSM, GPRS, Bluetooth and Wi-Fi. In the same trend, the number and typologies of vulnerabilities exploiting these services and communication channels have increased as well. Therefore, smartphones may now represent an ideal target for malware writers. As the number of vulnerabilities and, hence, of attacks increase, there has been a corresponding rise of security solutions proposed by researchers. Due to the fact that this research field is immature and still unexplored in depth, with this paper we aim to provide a structured and comprehensive overview of the research on security solutions for mobile\u00a0\u2026", "num_citations": "652\n", "authors": ["360"]}
{"title": "MADAM: a multi-level anomaly detector for android malware\n", "abstract": " Currently, in the smartphone market, Android is the platform with the highest share. Due to this popularity and also to its open source nature, Android-based smartphones are now an ideal target for attackers. Since the number of malware designed for Android devices is increasing fast, Android users are looking for security solutions aimed at preventing malicious actions from damaging their smartphones.               In this paper, we describe MADAM, a Multi-level Anomaly Detector for Android Malware. MADAM concurrently monitors Android at the kernel-level and user-level to detect real malware infections using machine learning techniques to distinguish between standard behaviors and malicious ones. The first prototype of MADAM is able to detect several real malware found in the wild. The device usability is not affected by MADAM due to the low number of false positives generated after the learning phase.", "num_citations": "498\n", "authors": ["360"]}
{"title": "MADAM: Effective and Efficient Behavior-based Android Malware Detection and Prevention\n", "abstract": " Android users are constantly threatened by an increasing number of malicious applications (apps), generically called malware. Malware constitutes a serious threat to user privacy, money, device and file integrity. In this paper we note that, by studying their actions, we can classify malware into a small number of behavioral classes, each of which performs a limited set of misbehaviors that characterize them. These misbehaviors can be defined by monitoring features belonging to different Android levels. In this paper we present MADAM, a novel host-based malware detection system for Android devices which simultaneously analyzes and correlates features at four levels: kernel, application, user and package, to detect and stop malicious behaviors. MADAM has been specifically designed to take into account those behaviors that are characteristics of almost every real malware which can be found in the wild. MADAM\u00a0\u2026", "num_citations": "303\n", "authors": ["360"]}
{"title": "Cloud security is not (just) virtualization security: a short paper\n", "abstract": " Cloud infrastructure commonly relies on virtualization. Customers provide their own VMs, and the cloud provider runs them often without knowledge of the guest OSes or their configurations. However, cloud customers also want effective and efficient security for their VMs. Cloud providers offering security-as-a-service based on VM introspection promise the best of both worlds: efficient centralization and effective protection. Since customers can move images from one cloud to another, an effective solution requires learning what guest OS runs in each VM and securing the guest OS without relying on the guest OS functionality or an initially secure guest VM state.", "num_citations": "274\n", "authors": ["360"]}
{"title": "Automated dynamic analysis of ransomware: Benefits, limitations and use for detection\n", "abstract": " Recent statistics show that in 2015 more than 140 millions new malware samples have been found. Among these, a large portion is due to ransomware, the class of malware whose specific goal is to render the victim's system unusable, in particular by encrypting important files, and then ask the user to pay a ransom to revert the damage. Several ransomware include sophisticated packing techniques, and are hence difficult to statically analyse. We present EldeRan, a machine learning approach for dynamically analysing and classifying ransomware. EldeRan monitors a set of actions performed by applications in their first phases of installation checking for characteristics signs of ransomware. Our tests over a dataset of 582 ransomware belonging to 11 families, and with 942 goodware applications, show that EldeRan achieves an area under the ROC curve of 0.995. Furthermore, EldeRan works without requiring that an entire ransomware family is available beforehand. These results suggest that dynamic analysis can support ransomware detection, since ransomware samples exhibit a set of characteristic features at run-time that are common across families, and that helps the early detection of new variants. We also outline some limitations of dynamic analysis for ransomware and propose possible solutions.", "num_citations": "175\n", "authors": ["360"]}
{"title": "Lightweight classification of IoT malware based on image recognition\n", "abstract": " The Internet of Things (IoT) is an extension of the traditional Internet, which allows a very large number of smart devices, such as home appliances, network cameras, sensors and controllers to connect to one another to share information and improve user experiences. IoT devices are micro-computers for domain-specific computations rather than traditional function-specific embedded devices. This opens the possibility of seeing many kinds of existing attacks, traditionally targeted at the Internet, also directed at IoT devices. As shown by recent events, such as the Mirai and Brickerbot botnets, DDoS attacks have become very common in IoT environments as these lack basic security monitoring and protection mechanisms. In this paper, we propose a novel light-weight approach for detecting DDos malware in IoT environments. We extract the malware images (i.e., a one-channel gray-scale image converted from a\u00a0\u2026", "num_citations": "158\n", "authors": ["360"]}
{"title": "Evolution of attacks, threat models, and solutions for virtualized systems\n", "abstract": " Virtualization technology enables Cloud providers to efficiently use their computing services and resources. Even if the benefits in terms of performance, maintenance, and cost are evident, however, virtualization has also been exploited by attackers to devise new ways to compromise a system. To address these problems, research security solutions have evolved considerably over the years to cope with new attacks and threat models. In this work, we review the protection strategies proposed in the literature and show how some of the solutions have been invalidated by new attacks, or threat models, that were previously not considered. The goal is to show the evolution of the threats, and of the related security and trust assumptions, in virtualized systems that have given rise to complex threat models and the corresponding sophistication of protection strategies to deal with such attacks. We also categorize threat\u00a0\u2026", "num_citations": "80\n", "authors": ["360"]}
{"title": "Exact inference techniques for the analysis of Bayesian attack graphs\n", "abstract": " Attack graphs are a powerful tool for security risk assessment by analysing network vulnerabilities and the paths attackers can use to compromise network resources. The uncertainty about the attacker's behaviour makes Bayesian networks suitable to model attack graphs to perform static and dynamic analysis. Previous approaches have focused on the formalization of attack graphs into a Bayesian model rather than proposing mechanisms for their analysis. In this paper we propose to use efficient algorithms to make exact inference in Bayesian attack graphs, enabling the static and dynamic network risk assessments. To support the validity of our approach we have performed an extensive experimental evaluation on synthetic Bayesian attack graphs with different topologies, showing the computational advantages in terms of time and memory use of the proposed techniques when compared to existing approaches.", "num_citations": "57\n", "authors": ["360"]}
{"title": "Hierarchical, model-based risk management of critical infrastructures\n", "abstract": " Risk management is a process that includes several steps, from vulnerability analysis to the formulation of a risk mitigation plan that selects countermeasures to be adopted. With reference to an information infrastructure, we present a risk management strategy that considers a sequence of hierarchical models, each describing dependencies among infrastructure components. A dependency exists anytime a security-related attribute of a component depends upon the attributes of other components. We discuss how this notion supports the formal definition of risk mitigation plan and the evaluation of the infrastructure robustness. A hierarchical relation exists among models that are analyzed because each model increases the level of details of some components in a previous one. Since components and dependencies are modeled through a hypergraph, to increase the model detail level, some hypergraph nodes are\u00a0\u2026", "num_citations": "57\n", "authors": ["360"]}
{"title": "Risk analysis of Android applications: A user-centric solution\n", "abstract": " Android applications (apps) pose many risks to their users, e.g., by including code that may threaten user privacy or system integrity. Most of the current security countermeasures for detecting dangerous apps show some weaknesses, mainly related to users\u2019 understanding and acceptance. Hence, users would benefit from an effective but simple technique that indicates whether an app is safe or risky to be installed. In this paper, we present MAETROID (Multi-criteria App Evaluator of TRust for AndrOID), a framework to evaluate the trustworthiness of Android apps, i.e., the amount of risk they pose to users, e.g., in terms of confidentiality and integrity. MAETROID performs a multi-criteria analysis of an app at deploy-time and returns a single easy-to-understand evaluation of the app\u2019s risk level (i.e., Trusted, Medium Risk, and High Risk), aimed at driving the user decision on whether or not installing a new app. The\u00a0\u2026", "num_citations": "51\n", "authors": ["360"]}
{"title": "Building trustworthy intrusion detection through vm introspection\n", "abstract": " Psyco-Virt is a high assurance intrusion detection tool that merges host and network intrusion detection technologies with virtual machine introspection. Psyco-Virt architecture includes a cluster of virtual machines, the monitored VMs, which run the OS and applications of interest, and a further VM, the introspection one. Several agents distributed across the monitored VMs execute network and host IDS tools to discover attempted intrusions/attacks on the monitored VMs. The introspection VM makes the detection tools trustworthy by running an introspector and a director to discover any attempt to maliciously modify the kernel, the agents and the IDSes hosted on a monitored VM. On each monitored VM a collector gathers the alerts generated by the agents and forwards them to the director through a control network dedicated to data exchange among the agents and the introspection VM. The director on the\u00a0\u2026", "num_citations": "51\n", "authors": ["360"]}
{"title": "Automating the assessment of ICT risk\n", "abstract": " We present a pair of tools to assess the risk of an ICT system through a scenario-based method. In each scenario, rational threat agents compose attacks against the system to reach some predefined goal. The first tool builds a description of the target system by automatically discovering and classifying the vulnerabilities in its components and the attacks they enable. Starting from this description and from the one of the agents, the other tool applies a Monte Carlo method to simulate step by step each agent and its attacks. By collecting samples on the agent attacks, the number of times they reach a goal and the corresponding impact this tool returns a database to compute statistics to support the assessment. After describing both tools, we exemplify their adoption in the assessment of an industrial control system that supervises a power production plant.", "num_citations": "45\n", "authors": ["360"]}
{"title": "Efficient attack graph analysis through approximate inference\n", "abstract": " Attack graphs provide compact representations of the attack paths that an attacker can follow to compromise network resources by analysing network vulnerabilities and topology. These representations are a powerful tool for security risk assessment. Bayesian inference on attack graphs enables the estimation of the risk of compromise to the system's components given their vulnerabilities and interconnections, and accounts for multi-step attacks spreading through the system. Whilst static analysis considers the risk posture at rest, dynamic analysis also accounts for evidence of compromise, e.g. from SIEM software or forensic investigation. However, in this context, exact Bayesian inference techniques do not scale well. In this paper we show how Loopy Belief Propagation - an approximate inference technique - can be applied to attack graphs, and that it scales linearly in the number of nodes for both static and dynamic analysis, making such analyses viable for larger networks. We experiment with different topologies and network clustering on synthetic Bayesian attack graphs with thousands of nodes to show that the algorithm's accuracy is acceptable and converge to a stable solution. We compare sequential and parallel versions of Loopy Belief Propagation with exact inference techniques for both static and dynamic analysis, showing the advantages of approximate inference techniques to scale to larger attack graphs.", "num_citations": "41\n", "authors": ["360"]}
{"title": "A new security middleware architecture based on fog computing and cloud to support IoT constrained devices\n", "abstract": " The increase of sensitive data in the current Internet of Things (IoT) raises demands of computation, communication and storage capabilities. Indeed, thanks to RFID tags and wireless sensor networks, anything can be part of IoT. As a result, a large amount of data is generated, which is hard for many IoT devices to handle, as many IoT devices are resource-constrained and cannot use the existing standard security protocols. Cloud computing might seem like a convenient solution, since it offers on-demand access to a shared pool of resources such as processors, storage, applications and services. However this comes as a cost, as unnecessary communications not only burden the core network, but also the data center in the cloud. Therefore, considering suitable approaches such as fog computing and security middleware solutions is crucial.", "num_citations": "37\n", "authors": ["360"]}
{"title": "Detection of repackaged mobile applications through a collaborative approach\n", "abstract": " Repackaged applications are based on genuine applications, but they subtlety include some modifications. In particular, trojanized applications are one of the most dangerous threats for smartphones. Malware code may be hidden inside applications to access private data or to leak user credit. In this paper, we propose a contract\u2010based approach to detect such repackaged applications, where a contract specifies the set of legal actions that can be performed by an application. Current methods to generate contracts lack information from real usage scenarios, thus being inaccurate and too coarse\u2010grained. This may result either in generating too many false positives or in missing misbehaviors when verifying the compliance between the application and the contract. In the proposed framework, application contracts are generated dynamically by a central server merging execution traces collected and shared\u00a0\u2026", "num_citations": "32\n", "authors": ["360"]}
{"title": "Securing a community cloud\n", "abstract": " Virtual Interacting Network CommunIty (Vinci) is a software architecture that exploits virtualization to secure a community cloud, i.e. a cloud system shared among communities with distinct security levels and reliability requirements. A community consists of a set of users, their applications, a set of services and of shared resources. Users with distinct privileges and applications with distinct trust levels belong to distinct communities. Rather than acquiring and managing its own physical infrastructure, a community defines a virtual ICT infrastructure, i.e. an overlay, by instantiating and interconnecting virtual machines (VMs) defined from a small set of templates. Vinci includes templates to run user applications, protect shared resources and control traffic among communities to filter out malware or distributed attacks. The adoption of alternative VM templates minimizes the complexity of each VM and increases the\u00a0\u2026", "num_citations": "31\n", "authors": ["360"]}
{"title": "Assessing ict risk through a monte carlo method\n", "abstract": " To assess and manage the risk due to an information and communication system before its deployment, data of interest can be produced by a Monte Carlo method. This paper presents Haruspex, a software tool that applies a Monte Carlo method to simulate intelligent and adaptive threat agents that reach predefined goals through plan with several attacks. The samples that Haruspex collects are used to compute statistics on the agent\u2019s impacts and their plans as well as to select cost-effective countermeasures. We describe the rationale and the implementation of Haruspex, the inputs it requires and the simulation of how the agents select and implement their plans. After discussing the validation and the performance of the first version of Haruspex, we present a case study and the first set of experimental results.", "num_citations": "29\n", "authors": ["360"]}
{"title": "A multi-criteria-based evaluation of android applications\n", "abstract": " Android users can face the risk of downloading and installing bad applications on their devices. In fact, many applications may either hide malware, or their expected behavior do not fully follow the user\u2019s expectation. This happens because, at install-time, even if the user is warned with the potential security threat of the application, she often skips this alert message. On Android this is due to the complexity of the permission system, which may be tricky to fully understand.               We propose a multi-criteria evaluation of Android applications, to help the user to easily understand the trustworthiness degree of an application, both from a security and a functional side. We validate our approach by testing it on more than 180 real applications found either on official and unofficial markets.", "num_citations": "27\n", "authors": ["360"]}
{"title": "Measuring semantic integrity for remote attestation\n", "abstract": " We propose a framework for the attestation of the integrity of a remote system that considers not only the configuration of the system to be attested but also its current behaviour. The resulting architecture, called Virtual machine Integrity Measurement System (VIMS), is based upon virtualization technology and it runs two virtual machines on a system to be attested, i.e. the Client (C-VM) and the Assurance VM (A-VM). A generic remote server (REM-S) accepts incoming connections and cooperates with the A-VM to authenticate and attest the integrity of the C-VM and of the software it runs. The A-VM is a shadow machine that exploits virtual machine introspection to apply a set of consistency checks on the configuration of the C-VM and on the software it currently runs. The checks depend upon the security policies that the REM-S establishes in the initial connection handshake. The REM-S defines both the\u00a0\u2026", "num_citations": "25\n", "authors": ["360"]}
{"title": "Classifying android malware through subgraph mining\n", "abstract": " Current smartphones are based upon the concept of apps, which are lightweight applications that are distributed through on-line marketplaces, such as Google Play (for Android devices). Unfortunately, this market-centric model is affected by several major security and trust issues, due to the fact that anyone can easily create, and deploy through the market, a malicious app that could potentially lead to a massive malware spread.                 In this paper, we propose a framework to classify Android malware based upon the concept of common patterns of actions executed by malicious applications. The basic idea is to extract, from known malware, a subset of frequent subgraphs of system calls that are executed by most of the malware. This set of subgraphs constitutes a database of known malicious features. Then, when a new application is downloaded from a market, it is first run in a sandbox to monitor its\u00a0\u2026", "num_citations": "21\n", "authors": ["360"]}
{"title": "Transparent process monitoring in a virtual environment\n", "abstract": " PsycoTrace is a system that integrates static and dynamic tools to protect a process from attacks that alter the process self as specified by the program source code. The static tools build a context-free grammar that describes the sequences of system calls the process may issue and a set of assertions on the process state, one for each invocation. The dynamic tools parse the call trace of the process to check that it belongs to the grammar language and evaluate the assertions. This paper describes the architecture of PsycoTrace, which exploits virtualization to introduce two virtual machines, the monitored and the monitoring virtual machines, to increase both the robustness and the transparency of the monitoring because the machine that implements all the checks is strongly separated from the monitored one. We discuss the modification to the kernel of the monitored machine to trace system call invocations, the\u00a0\u2026", "num_citations": "20\n", "authors": ["360"]}
{"title": "Towards enforcing on-the-fly policies in BYOD environments\n", "abstract": " The Bring Your Own Device (BYOD) paradigm is becoming extremely popular across all kind of organizations. In fact, employees are continually trying to incorporate their personal devices, e.g. smartphones and tablets, into the office to perform some of their work or simply to access the Internet with a device they trust or they are more familiar with. Unfortunately, several security issues may arise from all these external devices accessing the corporate network. To address these issues, in this paper we propose a framework that enforces on-the-fly instantiated policies inside organizations using trusted BYOD technologies. The proposed framework implements a role-based access control system based upon user identity and her current context. To this end, each user receives a specific policy from a server based upon the current role and context. The effective user identity is confirmed using OAuth 2.0, while the device\u00a0\u2026", "num_citations": "19\n", "authors": ["360"]}
{"title": "Evaluating the trust of android applications through an adaptive and distributed multi-criteria approach\n", "abstract": " New generation mobile devices, and their app stores, lack of a methodology to associate a level of trust to applications to faithfully represent their potential security risks. This problem is even more critical with newly published applications, for which either user reviews are missing or the number of downloads is still low. In this scenario, users may not fully estimate the risk associated with downloading apps found on on-line stores. Hence, here we propose a methodology for evaluating the trust level of an application through an adaptive, flexible, and dynamic framework. The evaluation of an application trust is performed using both static and dynamic parameters, which consider the application meta-data, its run-time behavior and the reports of users with respect to the software critical operations. We have validated the proposed approach by testing it on more than 180 real applications found both on official and\u00a0\u2026", "num_citations": "19\n", "authors": ["360"]}
{"title": "Internet of Things: realising the potential of a trusted smart world\n", "abstract": " Internet of Things: realising the potential of a trusted smart world \u2014 University of Bristol Skip to main navigation Skip to search Skip to main content University of Bristol Logo Help & Terms of Use Home Profiles Research Units Research Outputs Projects Student theses Datasets Activities Prizes Facilities/Equipment Search by expertise, name or affiliation Internet of Things: realising the potential of a trusted smart world P Taylor (Editor), S Allpress (Editor), M Carr, E Lupu, J Norton, L Smith, J Blackstock, H Boyes, A Hudson-Smith, I Brass, H Chizari, R Cooper, P Coulton, Barney Craggs, N Davies, D De Roure, M Elsden, M Huth, J Lindley, C Marple Show 17 more Show less Mittelstadt B, Nicolescu R, Nurse J, Proctor R, P Radanliev, Awais Rashid, Sgandurra D, Anya Skatova, M Taddeo, L Tanczer, R Vieira-Steiner, JDM Watson, S Wachter, S Wakenshaw, G Carvalho, RJ Thompson, PS Westbury Department of Science /\u2026", "num_citations": "17\n", "authors": ["360"]}
{"title": "Probabilistic contract compliance for mobile applications\n", "abstract": " We propose PICARD (ProbabIlistic Contract on Android), a framework to generate probabilistic contracts to detect repackaged applications for Android smart phones. A contract describes the sequences of actions that an application is allowed to perform at run-time, i.e. its legal behavior. In PICARD, contracts are generated from the set of traces that represent the usage profile of the application. Both the contract and the application's run-time behavior are represented through clustered probabilistic automata. At run-time, the PICARD monitoring system verifies the compliance of the application trace with the contract. This approach is useful in detecting repackaged applications, whose behavior is strongly similar to the original application but it differs only from small paths in the traces. In this paper, we discuss the framework of PICARD for describing and generating contracts through probabilistic automata and\u00a0\u2026", "num_citations": "16\n", "authors": ["360"]}
{"title": "A scenario method to automatically assess ict risk\n", "abstract": " We present an assessment of ICT systems that merges a scenario approach and a Monte Carlo method. To automate the assessment, we have developed two tools. The first one builds a formal description of the vulnerabilities in the target system and of the attacks they enable. Starting from this description, the second tool consider each scenario of interest and it simulate several times how intelligent and adaptive threat agents compose these attacks to reach some goals. By collecting samples in these simulations, this tool returns a database to compute statistics of interest for the assessment, such as the success probability of the agents or their average impacts. After outlining the design of the tools, we discuss a test case to show how they are exploited in a real assessment to manage the corresponding risk.", "num_citations": "15\n", "authors": ["360"]}
{"title": "Introducing probabilities in contract-based approaches for mobile application security\n", "abstract": " Security for mobile devices is a problem of capital importance, especially due to new threats coming from malicious applications. This has been proved by the increasing interest of the research community on the topic of security on mobile devices. Several security solutions have been recently proposed, to address the uprising threats coming from malicious applications. However, several mechanisms may result not flexible enough, hard to apply, or too coarse grained, e.g. several critics have been raised against the Android permission system.                 We argue that, it is possible to obtain more flexible security tools and finer grained security requirements by introducing probability measurements.                 In this paper we discuss how to introduce probabilistic clauses into the Security-by-Contract and the Security-by-Contract-with-Trust frameworks, revising the main building blocks and providing tools to\u00a0\u2026", "num_citations": "13\n", "authors": ["360"]}
{"title": "Psycotrace: Virtual and transparent monitoring of a process self\n", "abstract": " PsycoTrace is a set of tools to protect a process P from attacks that alter P self as specified by its source code. P self is specified in terms of legal traces of system calls and of assertions on P status paired with each call. In turn, legal traces are specified through a context-free grammar returned by a static analysis of P program that may also compute assertions. At run-time, each time P invokes a system call, PsycoTrace checks that the trace is coherent with the grammar and assertions are satisfied. To increase overall robustness, PsycoTrace's run-time tool relies on two virtual machines that run, respectively, P and the monitoring system. This strongly separates the monitored machine that runs P from the monitoring one. The current implementation is fully transparent to P but not to the OS because a kernel module in the monitored machine intercepts system calls. We describe PsycoTrace overall architecture and focus\u00a0\u2026", "num_citations": "13\n", "authors": ["360"]}
{"title": "On deception-based protection against cryptographic ransomware\n", "abstract": " In order to detect malicious file system activity, some commercial and academic anti-ransomware solutions implement deception-based techniques, specifically by placing decoy files among user files. While this approach raises the bar against current ransomware, as any access to a decoy file is a sign of malicious activity, the robustness of decoy strategies has not been formally analyzed and fully tested. In this paper, we analyze existing decoy strategies and discuss how they are effective in countering current ransomware by defining a set of metrics to measure their robustness. To demonstrate how ransomware can identify existing deception-based detection strategies, we have implemented a proof-of-concept anti-decoy ransomware that successfully bypasses decoys by using a decision engine with few rules. Finally, we discuss existing issues in decoy-based strategies and propose practical solutions\u00a0\u2026", "num_citations": "12\n", "authors": ["360"]}
{"title": "Towards a Framework for Testing the Security of IoT Devices Consistently\n", "abstract": " The Internet of Things (IoT) permeates society in many areas, such as automotive, smart-homes, smart-cities, healthcare, and critical infrastructures. Even if the IoT promises economic growth as well as convenience for users, the security (and safety) implications of the IoT are equally significant. In fact, weak security in IoT devices could have dangerous consequences, such as to a car crash, or an intruder entering in our home. As an example, in October 2016, the distributed denial of service attack on Dyn, a company controlling and managing several DNS services, brought down most of America\u2019s Internet, and was caused by an IoT botnet (Mirai). This is mainly due to an increasing number of vulnerabilities in IoT devices being discovered on a daily basis, and that are the consequence of poor IoT security practices. To properly address the security and testing of IoT devices, the first step is the description of\u00a0\u2026", "num_citations": "11\n", "authors": ["360"]}
{"title": "Semantics-driven introspection in a virtual environment\n", "abstract": " Semantics-driven monitoring discovers attacks against a process by evaluating invariants on the process state. We propose an approach that increases the robustness and the transparency of the run-time monitoring system by introducing two virtual machines (VMs) running on the same platform. One VM runs the monitored process, i.e. the process P to be protected, while the other one evaluates invariants on P state each time P invokes a system call. To this purpose, an Introspection Library allows the monitoring VM to access the memory and the processor registers of the monitored VM. After describing the overall architecture, we focus on the Introspection Library and the problems posed by the introspection of variables in the memory of a program running in a distinct VM to evaluate invariants. A first prototype implementation is also presented together with preliminary performance results.", "num_citations": "11\n", "authors": ["360"]}
{"title": "Security and integrity of a distributed file storage in a virtual environment\n", "abstract": " Virtual environment secure file system (VSFS) is a software architecture for secure file sharing among applications with different trust levels that consists of a set of interconnected virtual machines (VMs). Application VMs (APP-VMs) run the application processes that transparently access remote shared files hosted by file system VMs (FS-VMs). Each FS-VM implements a mandatory access control (MAC) security policy to control file sharing. To define and enforce this policy, VSFS uses SELinux. Each APP-VM is labeled with a security context paired with the IP address of the VM. FS-VMs use this context to check access rights of the APP-VMs with respect to the requested files and operations. A third set of VMs, the administrative VMs (A-VMs), provides assurance about the integrity of the FS-VMs and implements anti-spoofing techniques to authenticate each file request sent by the APP-VMs. After describing the overall\u00a0\u2026", "num_citations": "10\n", "authors": ["360"]}
{"title": "An improved SMURF scheme for cleaning RFID data\n", "abstract": " RFID technology is widely used in the Internet of Things (IoT) environment for object tracking. With the expansion of its application areas, the demand for reliability of business data is increasingly important. In order to fulfil the needs of upper-level applications, data cleaning is essential and directly affects the correctness and completeness of the business data, so it needs to filter and handle RFID data. The traditional statistical smoothing for unreliable RFID data (SMURF) algorithm is only aimed at constant speed data flow during the process of data cleaning. In this paper, we overcome the shortage of SMURF algorithm, and an improved SMURF scheme in two aspects is proposed. The first one is based on dynamic tags, and the second one considers the influence of data redundancy. The experiments verify that the improved scheme is reasonable in dynamic settings of sliding window, and the accuracy is improved\u00a0\u2026", "num_citations": "9\n", "authors": ["360"]}
{"title": "A collaborative framework for generating probabilistic contracts\n", "abstract": " We propose a collaborative framework for generating probabilistic contracts for Android smartphones aimed at detecting repackaged applications. To this end, a network of users sends to the application server the sequences of actions that represent the usage profile of the application. Then, the application server generates a contract from this set of traces. Contracts are represented through clustered probabilistic automata. At run-time, a monitoring system on the smartphone verifies the compliance of the running application against the contract through the Pearson's Chi Squared test. In the preliminary tests, the proposed framework has been able to detect repackaged applications whose behavior is strongly similar to the original application but hide malware.", "num_citations": "9\n", "authors": ["360"]}
{"title": "Analysing the resilience of the internet of things against physical and proximity attacks\n", "abstract": " The Internet of Things (IoT) technology is being widely integrated in many areas like smart-homes, smart-cities, healthcare, and critical infrastructures. As shown by some recent incidents, like the Mirai and BrickerBot botnets, security is a key issue for current and future IoT systems. In this paper, we examine the security of different categories of IoT devices to understand their resilience under different security conditions for attackers. In particular, we analyse IoT robustness against attacks performed under two threat models, namely (i) physical access of the attacker, (ii) close proximity of the attacker (i.e., RFID and WiFi ranges). We discuss the results of the tests we performed on different categories of IoT devices, namely IP cameras, OFo bike locks, RFID-based smart-locks, and smart-home WiFi routers. The results show that most of IoT devices do not address basic vulnerabilities, which can be exploitable\u00a0\u2026", "num_citations": "8\n", "authors": ["360"]}
{"title": "Anticheetah: Trustworthy computing in an outsourced (cheating) environment\n", "abstract": " The increasing need for performing expensive computations has motivated outsourced computing, as in crowdsourced applications leveraging worker cloud nodes. However, these outsourced computing nodes can potentially misbehave or fail. Exploiting the redundancy of nodes can help guaranteeing correctness and availability of results. This entails that reliable distributed computing can be achieved at the expense of convenience.In this paper, we provide a solution for a generic class of problems that distribute a parallel computation over a set of nodes where trustworthiness of the outsourced computation is important. In particular, we discuss AntiCheetah, an approach modeling the assignment of input elements to cloud nodes as a multi-round system. AntiCheetah is resilient to node cheating, even in scenarios where smart cheaters return the same fake values. To this end, cost-efficient redundancy is used to\u00a0\u2026", "num_citations": "7\n", "authors": ["360"]}
{"title": "Haruspex\u2014Simulation-driven Risk Analysis for Complex Systems\n", "abstract": " Haruspex1 is a risk evaluation methodology defined and implemented by the research group on risk management in the Department of Computer Science at the University of Pisa, Italy. It may be adopted in various risk assessment and management frameworks to evaluate the probability that an intelligent threat agent could successfully implement a multistep attack. The framework should be paired with others to discover these threats, the vulnerabilities they can exploit and the assets to be protected.", "num_citations": "7\n", "authors": ["360"]}
{"title": "Are photos on social networks really private?\n", "abstract": " Everyday, people upload thousand of private photos on Social Networks. Usually, these photos are available only to their social friends but, in some cases, users inadvertently allow third-party applications to access their data or, analogously, friends allow applications to access their friends' data. Hence, uploaded private pictures may also be accessed by third parties. In this paper, we introduce Phook (Photo-Book), which is a Web application available at www.myphook.com, aimed at searching among users' photos of online Social Network. After two months of activity, Phook was capable of collecting more than 70 Millions private pictures of Facebook users.", "num_citations": "6\n", "authors": ["360"]}
{"title": "An obfuscation-based approach against injection attacks\n", "abstract": " We present an obfuscation strategy to protect a program against injection attacks. The strategy represents the program as a set of code fragments in-between two consecutive system calls (the system blocks) and a graph that represents the execution order of the fragment (the system block graph). The system blocks and the system block graph are partitioned between two virtual machines (VMs). The Blocks-VM stores and executes the system blocks but does not store any information on how control flows across the system blocks. This information is represented only by the system block graph stored in the Graph-VM, which correctly sequentializes the system blocks by analyzing the system block graph and accessing the Blocks-VM. At run-time, each time a system block ends, i.e. the program issues a system call, the execution of the Blocks-VM is frozen and control is transferred to the Graph-VM. After deducing the\u00a0\u2026", "num_citations": "6\n", "authors": ["360"]}
{"title": "VSMURF: A Novel Sliding Window Cleaning Algorithm for RFID Networks\n", "abstract": " Radio Frequency Identification (RFID) is one of the key technologies of the Internet of Things (IoT) and is used in many areas, such as mobile payments, public transportation, smart lock, and environment protection. However, the performance of RFID equipment can be easily affected by the surrounding environment, such as electronic productions and metal appliances. These can impose an impact on the RF signal, which makes the collection of RFID data unreliable. Usually, the unreliability of RFID source data includes three aspects: false negatives, false positives, and dirty data. False negatives are the key problem, as the probability of false positives and dirty data occurrence is relatively small. This paper proposes a novel sliding window cleaning algorithm called VSMURF, which is based on the traditional SMURF algorithm which combines the dynamic change of tags and the value analysis of confidence. Experimental results show that VSMURF algorithm performs better in most conditions and when the tag\u2019s speed is low or high. In particular, if the velocity parameter is set to 2\u2009m/epoch, our proposed VSMURF algorithm performs better than SMURF. The results also show that VSMURF algorithm has better performance than other algorithms in solving the problem of false negatives for RFID networks.", "num_citations": "5\n", "authors": ["360"]}
{"title": "Attestation of integrity of overlay networks\n", "abstract": " Security of overlay networks requires that the integrity of the software stack of a node is attested not only when a node joins an overlay but continuously, to discover updates of its configuration due to malware. We present a framework that integrates an initial attestation and a continuous node monitoring that strongly separates the software of a node from the attestation system by running them in two virtual machines (VMs). The Monitored VM (Mon-VM) runs the applicative software while the Assurance VM (A-VM) exploits virtual machine introspection to access the status of the Mon-VM to attest and monitor the integrity of its software stack. Before a node can join an overlay, the A-VM of one overlay node interacts with the A-VM of the joining node to attest the integrity of the Mon-VM. After this start-up attestation, the A-VM continuously monitors the behavior of the Mon-VM of its node to detect the injection of malware\u00a0\u2026", "num_citations": "5\n", "authors": ["360"]}
{"title": "Formalizing Threat Models for Virtualized Systems\n", "abstract": " We propose a framework, called FATHoM (FormAlizing THreat Models), to define threat models for virtualized systems. For each component of a virtualized system, we specify a set of security properties that defines its control responsibility, its vulnerability and protection states. Relations are used to represent how assumptions made about a component\u2019s security state restrict the assumptions that can be made on the other components. FATHoM includes a set of rules to compute the derived security states from the assumptions and the components\u2019 relations. A further set of relations and rules is used to define how to protect the derived vulnerable components. The resulting system is then analysed, among others, for consistency of the threat model. We have developed a tool that implements FATHoM, and have validated it with use-cases adapted from the literature.", "num_citations": "4\n", "authors": ["360"]}
{"title": "Anticheetah: An autonomic multi-round approach for reliable computing\n", "abstract": " Outsourced computing is increasingly popular thanks to the effectiveness and convenience of cloud computing *-as-a-Service offerings. However, cloud nodes can potentially misbehave in order to save resources. As such, some guarantee over the correctness and availability of results is needed. Exploiting the redundancy of cloud nodes can be of help, even though smart cheating strategies render the detection and correction of fake results much harder to achieve in practice. In this paper, we analyze the above issues and provide a solution for a specific problem that, nevertheless, is quite representative for a generic class of problems in the above setting: computing a vectorial function over a set of nodes. In particular, we introduce AntiCheetah, a novel autonomic multi-round approach performing the assignment of input elements to cloud nodes as an autonomic, self-configuring and self-optimizing cloud system\u00a0\u2026", "num_citations": "4\n", "authors": ["360"]}
{"title": "CheR: Cheating resilience in the cloud via smart resource allocation\n", "abstract": " Cloud computing offers unprecedented ways to split and offload the workload of parallel algorithms to remote computing nodes. However, such remote parties can potentially misbehave, for instance by providing fake computation results in order to save resources. In turn, these erroneous partial results can affect the timeliness and correctness of the overall outcome of the algorithm. The widely successful cloud approach increases the economic feasibility of leveraging computational redundancy to enforce some degree of assurance about the results. However, na\u00efve solutions that dumbly replicate the same computation over several sets of nodes are not cost-efficient.                 In this paper, we provide several contributions as for the distribution of workload over (heterogeneous) cloud nodes. In particular, we first formalize the problem of computing a parallel function over a set of nodes; later, we introduce\u00a0\u2026", "num_citations": "4\n", "authors": ["360"]}
{"title": "Modeling and managing risk in billing infrastructures\n", "abstract": " This paper discusses risk modeling and risk management in information and communications technology (ICT) systems for which the attack impact distribution is heavy tailed (e.g., power law distribution) and the average risk is unbounded. Systems with these properties include billing infrastructures used to charge customers for services they access. Attacks against billing infrastructures can be classified as peripheral attacks and backbone attacks. The goal of a peripheral attack is to tamper with user bills; a backbone attack seeks to seize control of the billing infrastructure. The probability distribution of the overall impact of an attack on a billing infrastructure also has a heavy-tailed curve. This implies that the probability of a massive impact cannot be ignored and that the average impact may be unbounded \u2013 thus, even the most expensive countermeasures would be cost effective. Consequently, the only\u00a0\u2026", "num_citations": "4\n", "authors": ["360"]}
{"title": "A game of\" Cut and Mouse\" bypassing antivirus by simulating user inputs\n", "abstract": " To protect their digital assets from malware attacks, most users and companies rely on anti-virus (AV) software. But AVs' protection is a full-time task and AVs are engaged in a cat-and-mouse game where malware, eg, through obfuscation and polymorphism, denial of service attacks and malformed packets and parameters, try to circumvent AV defences or make them crash. On the other hand, AVs react by complementing signature-based with anomaly or behavioral detection, and by using OS protection, standard code, and binary protection techniques. Further, malware counter-act, for instance by using adversarial inputs to avoid detection, et cetera. This paper investigates two novel moves for the malware side. The first one consists in simulating mouse events to control AVs, namely to send them mouse\" clicks\" to deactivate their protection. We prove that many AVs can be disabled in this way, and we call this class\u00a0\u2026", "num_citations": "3\n", "authors": ["360"]}
{"title": "Addressing privacy issues in location-based collaborative and distributed environments\n", "abstract": " In the past few years collaborative environments have been growing fast thanks to the ubiquitousness of smartphones and to their rich features. These devices are nowadays very sophisticated by being able to receive GPS signal, communicate with other devices through mobile network, and to analyze several different kinds of data received with their sensors. In some collaborative environments, users need to access the correct geo-location, for example when they collaboratively contribute to build a collection of data about specific objects, such as for traffic news. On other hand, sharing the exact location may imply violations to the user privacy. In this paper we discuss the importance of the correct location in collaborative environments and we address the problem of privacy for users and show how current solutions, which aim to preserve the user privacy, can interfere with the correct behavior of some applications\u00a0\u2026", "num_citations": "3\n", "authors": ["360"]}
{"title": "Invariant evaluation through introspection for proving security properties\n", "abstract": " Semantics-driven monitoring discovers attacks against a process by evaluating invariants on the process state. To increase the robustness and the transparency of semantics-driven monitoring, we propose an approach that introduces two virtual machines (VMs) running on the same platform. One VM runs the monitored process, ie the process to be protected, while the other one evaluates invariants on the process state each time a process invokes a system call. The evaluation of invariant exploits an Introspection Library that enables the monitoring VM to access the memory and the processor registers of the monitored VM.After describing the overall architecture of the proposed approach, we focus on the Introspection Library and the problems posed by the introspection of variables in the memory of a program running in a distinct VM to evaluate invariants. A first prototype implementation is also presented together with a set of performance results.", "num_citations": "3\n", "authors": ["360"]}
{"title": "PS (2018)\n", "abstract": " The aim of this study was to characterize the effects of HCV infection on gene expression in the peripheral blood of infected patients. PBMC samples were collected from patients with chronic HCV infections and from healthy volunteers and incubated in culture for 24 h. RNA was isolated from these samples and analyzed using Affymetrix microarrays. Differential expression analysis using LIMMA indicated that a total of 66 genes were up-regulated in PBMC samples from HCV infected individuals with greater than 2-fold change at a false discovery rate of 5%, whereas 70 genes were down-regulated in the same samples. Interferon-related genes such as IL1RN, a series of CXCL chemokines, and the interleukins IL6 and IL8 were all found to be down-regulated in HCV infection. However other genes associated with IFN activity, such as members of the OAS and MX families, CXCL10, and CXCL11 were elevated in the HCV infected cells indicating different methods of controlling ISGs. Functional analysis using DAVID indicated that both the up-and down-regulated gene lists were significantly enriched for GO terms relating to viral infection and immune response, representing a number of genes associated with the interferon pathway. In addition, the down-regulated gene list was significantly enriched for terms related to cytokine activity, which included genes such as CXCL5 and CCL24. These differential responses may indicate differences in the T-cell and B-cell populations in the respective samples, or differential regulation of cytokine genes. We conclude that infection with HCV has a pronounced effect on gene expression in the blood of infected\u00a0\u2026", "num_citations": "3\n", "authors": ["360"]}
{"title": "Sharing Data Through Confidential Clouds: An Architectural Perspective\n", "abstract": " Cloud and mobile are two major computing paradigms that are rapidly converging. However, these models still lack a way to manage the dissemination and control of personal and business-related data. To this end, we propose a framework to control the sharing, dissemination and usage of data based on mutually agreed Data Sharing Agreements (DSAs). These agreements are enforced uniformly, and end-to-end, both on Cloud and mobile platforms, and may reflect legal, contractual or user-defined preferences. We introduce an abstraction layer that makes available the enforcement functionality across different types of nodes whilst hiding the distribution of components and platform specifics. We also discuss a set of different types of nodes that may run such a layer.", "num_citations": "2\n", "authors": ["360"]}
{"title": "How to grant less permissions to facebook applications\n", "abstract": " Single Sign-On (SSO) is an authentication procedure that allows users to adopt the same credentials to access multiple services. On the other hand, OAuth 2.0 is a protocol that enables authorized applications to access data that are stored in a resource server. A practical example of the adoption of SSO with OAuth 2.0 is given by all the websites or applications that use the \u201cLog in with Facebook\u201d procedure to authenticate users already registered with Facebook. In this paper, we propose a mechanism that exploits a weakness of OAuth 2.0 and a missing control of the website to show how it is possible to register a user by reducing the number of scopes that the website requires with the \u201cLog in with Facebook\u201d procedure. Finally, we illustrate two examples that exploit the proposed mechanism and provide a solution to address the problem.", "num_citations": "2\n", "authors": ["360"]}
{"title": "Remote policy enforcement for trusted application execution in mobile environments\n", "abstract": " Both in the cloud and mobile environments, a large number of online services is daily accessed through smartphones and tablets. Since several security, safety and trust concerns may arise when using these services, providers may require a usage policy to be enforced on the devices while accessing these services. This kind of policy enforcements enables service providers to have assurance that remote devices are in an acceptable state when using the provided service, according to their terms and conditions.               In this paper, we propose a framework which allows service providers to have assurance about the enforcement of some functional policies directly on the device. The proposed framework inserts an enforcer into the client\u2019s device, which is responsible for enforcing the provider\u2019s policy to abide by the terms and conditions of the service. To assure the integrity of the enforcer and of the policy\u00a0\u2026", "num_citations": "2\n", "authors": ["360"]}
{"title": "A simulation-driven approach for assessing risks of complex systems\n", "abstract": " The most critical steps in the risk assessment of a system are the discovery of attacks against the system as well as the computation of the probabilities that attacks are successful and their impacts. We present a framework to support these steps driven by a detailed simulation of the attacks implemented by intelligent threat agents. The framework can evaluate the role of factors such as the probability of discovering a vulnerability, the resources available to agents, how an agent composes attacks into plans to reach a goal. The agents and their plans are described through a proper extension of attack graphs. A simulation defined in terms of attack graphs can fully exploit an important feature of these graphs, namely their ability of describing both attack plans and the countermeasures to stop these plans. Furthermore, a simulation-driven approach can evaluate how the availability of information about the system\u00a0\u2026", "num_citations": "2\n", "authors": ["360"]}
{"title": "Towards High Assurance Networks of Virtual Machines\n", "abstract": " We propose a methodology to check software integrity based upon virtual machines (VMs) that integrates controls at distinct execution levels. The baseline of the proposed approach is the virtual machine monitor (VMM) capability to access the memory of a VM to apply a set of consistency checks to the VM operating system (OS). In turn, the OS can apply a different set of consistency checks to the application processes, and applications can also enforce a further set of security controls. The union of all the consistency checks forms a chain of trust, where each level controls the integrity of the one above it through the proper interface for that level. In this way, the proposed approach minimizes the semantic gap in-between two different levels, because each level only applies those security controls that are coherent with the view of the level. We apply this methodology to build a distributed intrusion detection\u00a0\u2026", "num_citations": "2\n", "authors": ["360"]}
{"title": "Cut-and-Mouse and Ghost Control: Exploiting Antivirus Software with Synthesized Inputs\n", "abstract": " To protect their digital assets from malware attacks, most users and companies rely on antivirus (AV) software. AVs\u2019 protection is a full-time task against malware: This is similar to a game where malware, e.g., through obfuscation and polymorphism, denial of service attacks, and malformed packets and parameters, tries to circumvent AV defences or make them crash. However, AVs react by complementing signature-based detection with anomaly or behavioral analysis, and by using OS protection, standard code, and binary protection techniques. Further, malware counter-acts, for instance, by using adversarial inputs to avoid detection, and so on. In this cat-and-mouse game, a winning strategy is trying to anticipate the move of the adversary by looking into one\u2019s own weaknesses, seeing how the adversary can penetrate them, and building up appropriate defences or attacks. In this article, we play the role of malware\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}
{"title": "Clust-IT: clustering-based intrusion detection in IoT environments\n", "abstract": " Low-powered and resource-constrained devices are forming a greater part of our smart networks. For this reason, they have recently been the target of various cyber-attacks. However, these devices often cannot implement traditional intrusion detection systems (IDS), or they can not produce or store the audit trails needed for inspection. Therefore, it is often necessary to adapt existing IDS systems and malware detection approaches to cope with these constraints.", "num_citations": "1\n", "authors": ["360"]}
{"title": "Case Study: Analysis and Mitigation of a Novel Sandbox-Evasion Technique\n", "abstract": " Malware is one of the most popular cyber-attack methods in the digital world. According to the independent test company AV-TEST, 350,000 new malware samples are created every day. To analyze all samples by hand to discover whether they are malware does not scale, so antivirus companies automate the process eg, using sandboxes where samples can be run, observed, and classified. Malware authors are aware of this fact, and try to evade detection. In this paper we describe one of such evasion technique: unprecedented, we discovered it while analyzing a ransomware sample. Analyzed in a Cuckoo Sandbox, the sample was able to avoid triggering malware indicators, thus scoring significantly below the minimum severity level. Here, we discuss what strategy the sample follows to evade the analysis, proposing practical defense methods to nullify, in our turn, the sample's furtive strategy.", "num_citations": "1\n", "authors": ["360"]}
{"title": "A Logic-Based Reasoner for Discovering Authentication Vulnerabilities between Interconnected Accounts\n", "abstract": " With users being more reliant on online services for their daily activities, there is an increasing risk for them to be threatened by cyber-attacks harvesting their personal information or banking details. These attacks are often facilitated by the strong interconnectivity that exists between online accounts, in particular due to the presence of shared (e.g., replicated) pieces of user information across different accounts. In addition, a significant proportion of users employs pieces of information, e.g. used to recover access to an account, that are easily obtainable from their social networks accounts, and hence are vulnerable to correlation attacks, where a malicious attacker is either able to perform password reset attacks or take full control of user accounts.                 This paper proposes the use of verification techniques to analyse the possible vulnerabilities that arises from shared pieces of information among\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}
{"title": "Design and Development of a Facebook Application to Raise Privacy Awareness\n", "abstract": " Everyday people upload a large number of private pictures on online social networks (OSNs). Users trust OSNs to keep their pictures private, e.g. by making them available to their social friends only. Unfortunately, OSN security controls are not always strong enough and malicious people may exploit these weaknesses to potentially see any user's private pictures. It might even possible to access private photos posted on an OSN without circumventing its security policies. In fact, users sometimes add to their social circles acquaintances, recently met people, which might not be completely trusted. Furthermore, they occasionally allow third-party applications to access their pictures. These conditions imply that, to keep their photos private, users must trust all the security controls implemented by OSNs and all of their social friends (and how they interact with third-party applications). Actually, there are some situations in\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}
{"title": "Enforcing Mobile Application Security Through Probabilistic Contracts\n", "abstract": " Security for mobile devices is a problem of capital importance, especially due to new threats coming from malicious applications. Though several security solutions have already been proposed, security requirements have been always considered as binary: allow or deny. We argue that a more realistic vision of security can be given using probabilistic and quantitative requirements. In this paper, we introduce a probabilistic description of the behavior of an application that a user is going to execute. We also allow the definition of finer grained user security requirements, by introducing probabilistic clause modifiers. Later, we present a probabilistic version of the Security-by-Contract framework to guarantee probabilistic security requirements.", "num_citations": "1\n", "authors": ["360"]}
{"title": "Simulating Attack Plans Against ICT Infrastructures\n", "abstract": " Goal-oriented, rational threat agents attack a complex ICT infrastructure by composing elementary attacks against distinct components into an attack chain or attack plan. To compute statistics on the success probabilities of these plans, we have designed and implemented Haruspex, a tool that implements a Monte Carlo method by simulating the agent plans. A proper set of Haruspex experiments returns a set of data to compute statistics on the agent plans and their success probabilities even before deploying a system. In this way, we can assess with high confidence the robustness of a system and the risk it poses by considering scenarios where it is attacked by a set of agents. To fully automate the assessment, we have also developed GVScan, a tool that maps the output of a vulnerability scanning into the inputs of Haruspex. This paper describes both Haruspex and GVScan and their adoption to automate the\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}
{"title": "A framework for probabilistic contract compliance\n", "abstract": " We propose PICARD (ProbabIlistic Contract on AndRoiD), a framework to detect repackaged applications for Android smartphones based upon probabilistic contract matching. A contract describes the sequences of actions that an application is allowed to perform at run-time, ie its legal behavior. In PICARD, contracts are generated from the set of traces that represent the usage profile of the application. Both the contract and the application\u2019s run-time behavior are represented through clustered probabilistic automata. At run-time, a monitoring system verifies the compliance of the application trace with the contract. This approach is useful in detecting repackaged applications, whose behavior is strongly similar to the original application but it differs only from small paths in the traces.In this paper, we discuss the framework of PICARD for describing and generating contracts through probabilistic automata and introduce the notion of ActionNode, a cluster of related system calls. Then, we present a first set of results using a prototype implementation of PICARD for Android smartphones to prove the efficacy of the framework in detecting two classes of applications, repackaged and trojanized ones.", "num_citations": "1\n", "authors": ["360"]}
{"title": "Unbounded impacts and risk mitigation in billing infrastructures\n", "abstract": " A billing infrastructure is an information and communications technology system that bills a set of customers for some service they access. We discuss how the minimisation of the infrastructure cost may introduce components that are points of catastrophic failure in a security perspective because successful attacks against these components result in a full control of the infrastructure. We describe a classification of both attacks and threats and a mathematical model of attack impacts to prove that the introduction of points of catastrophic failure result in a heavy-tailed probability distribution of impacts. A heavy-tailed distribution has several implications on risk management because the probability of very large impacts may not be neglected and countermeasures cannot be selected according to their cost effectiveness because even the most expensive ones are convenient. For these reasons, risk management should\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}
{"title": "Virtual interacting network community: exploiting multi-core architectures to increase security\n", "abstract": " Vinci is an architecture that exploits multi-core processors and virtualization to share in a secure way an ICT infrastructure among users with distinct trust levels and reliability requirements. To this end, Vinci decomposes the applicative and middle-ware components into a large number of software modules. These modules are mapped onto Virtual Machines (VMs) dedicated to user applications, infrastructure management and monitoring that, in turn, are supported by the physical cores. In this framework, the integration of multi-core architectures and virtualization technologies greatly simplifies the decomposition of the functions of a monolithic and complex infrastructure into several lighter modules. Vinci partitions users into several communities, according to the user privileges and to the trust level of the applications the user executes. For each community, Vinci defines a distinct security policy for accessing the\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}
{"title": "Architetture di sicurezza e tecnologie di virtualizzazione: rilevamento delle intrusioni tramite introspezione.\n", "abstract": " Negli ultimi tempi c&# 39; \u00e8 stato un rinnovato e crescente interesse per la virtualizzazione, il cui compito \u00e8 quello di creare degli ambienti di esecuzione software (chiamati anche macchine virtuali) tramite l&# 39; astrazione delle risorse.< br>< br> Questa tecnologia fornisce degli strumenti utili a rilevare le intrusioni e gli attacchi portati ad un sistema informatico: infatti, \u00e8 possibile avere una visione completa, ea pi\u00f9 livelli, dello stato dell&# 39; host che viene eseguito all&# 39; interno di un ambiente virtuale. Ad esempio, la virtualizzazione permette di esaminare lo stato della memoria, dei registri del processore e dei dispositivi di I/O della macchina virtuale. Inoltre, queste informazioni sullo stato della macchina virtuale sono meno suscettibili di manomissione da parte di un attaccante.< br>< br> La virtualizzazione offre anche strumenti efficaci che permettono di reagire ad attacchi e ad intrusioni: ad esempio, \u00e8 possibile sospendere l&# 39; esecuzione o salvare lo stato della macchina virtuale su cui l&# 39; host \u00e8 in esecuzione, per potere eseguire successivamente controlli pi\u00f9 accurati sul suo stato.< br>< br> Questa tesi presenta un&# 39; architettura per il rilevamento delle intrusioni su macchine virtuali che fa uso sia di tecniche di introspezione, per analizzare lo stato delle macchine virtuali tramite il Virtual Machine Monitor, che dei tradizionali metodi per il rilevamento delle intrusioni. L&# 39; architettura \u00e8 distribuita su pi\u00f9 macchine virtuali: una di queste ha funzionalit\u00e0 di introspezione e di controllo delle altre macchine virtuali e, in caso di intrusione, pu\u00f2 agire sullo stato di esecuzione delle macchine virtuali, ad esempio bloccandone l&# 39\u00a0\u2026", "num_citations": "1\n", "authors": ["360"]}