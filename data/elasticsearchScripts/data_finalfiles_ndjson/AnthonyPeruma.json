{"title": "Understanding software vulnerabilities related to architectural security tactics: An empirical investigation of chromium, php and thunderbird\n", "abstract": " To satisfy security requirements, software architects often adopt security tactics. These architectural tactics provide mechanisms for resisting, detecting, reacting to and recovering from attacks. Consequently, flaws in the implementation of security tactics or their deterioration during software evolution and maintenance can introduce severe vulnerabilities that could be exploited by attackers. However, we currently lack an in-depth understanding of the types and impact of vulnerabilities related to security tactics. Therefore, in this paper, we conduct a first-of-its-kind in-depth case study involving three large-scale open-source systems. We investigate the most common types of vulnerabilities associated with security tactics, how frequently they may occur over time, and how fixing them differs from fixing vulnerabilities that are not related to security tactics. Key findings are (i) most tactic-related vulnerabilities were related to\u00a0\u2026", "num_citations": "18\n", "authors": ["2168"]}
{"title": "Investigating user perception and comprehension of android permission models\n", "abstract": " Do you know the permissions your favorite apps use? You probably don't, and you aren't alone. Everyone seemingly talks about how important app security and privacy is to them, but research has shown that users are generally not well informed about the permissions their apps use. This leads to serious ramifications for security, privacy and user perception (rating) of an app. Understanding the current Android permission model and how it can be improved offers significant benefits for both developers and users.", "num_citations": "10\n", "authors": ["2168"]}
{"title": "What the smell? an empirical investigation on the distribution and severity of test smells in open source android applications\n", "abstract": " The widespread adoption of mobile devices, coupled with the ease of developing mobile-based applications (apps) has created a lucrative and competitive environment for app developers. Solely focusing on app functionality and time-to-market is not enough for developers to ensure the success of their app. Quality attributes exhibited by the app must also be a key focus point; not just at the onset of app development, but throughout its lifetime.", "num_citations": "10\n", "authors": ["2168"]}
{"title": "Permission issues in open-source Android apps: An exploratory study\n", "abstract": " Permissions are one of the most fundamental components for protecting an Android user's privacy and security. Unfortunately, developers frequently misuse permissions by requiring too many or too few permissions, or by not adhering to permission best practices. These permission-related issues can negatively impact users in a variety of ways, ranging from creating a poor user experience to severe privacy and security implications. To advance the understanding permission-related issues during the app's development process, we conducted an empirical study of 574 GitHub repositories of open-source Android apps. We analyzed the occurrences of four types of permission-related issues across the lifetime of the apps. Our findings reveal that (i) permission-related issues are a frequent phenomenon in Android apps, (ii) the majority of issues are fixed within a few days after their introduction, (iii) permission-related\u00a0\u2026", "num_citations": "7\n", "authors": ["2168"]}
{"title": "Apps for everyone: mobile accessibility learning modules\n", "abstract": " Mobile applications (apps) should be accessible to everyone, yet many of even the most popular are not. To address the lack of accessibility problem, we created a set of educational modules. These modules may be used to teach students and developers about proper methods of creating accessible apps, and on the importance of accessibility guidelines. Each module contains a well-defined accessibility problem, provides details about the accessibility issue, and simulates the effects of the accessibility barrier. Information is provided on how to fix the accessibility issue. Additionally, each module includes augmenting educational materials (slides, instructional videos, etc.), and example apps.", "num_citations": "7\n", "authors": ["2168"]}
{"title": "An empirical history of permission requests and mistakes in open source android apps\n", "abstract": " Android applications (apps) rely upon proper permission usage to ensure that the user's privacy and security are adequately protected. Unfortunately, developers frequently misuse app permissions in a variety of ways ranging from using too many permissions to not correctly adhering to Android's defined permission guidelines. The implications of these permissionissues (possible permission problems) can range from harming the user's perception of the app to significantly impacting their privacy and security. An imperative component to creating more secure apps that better protect a user's privacy is an improved understanding of how and when these issues are being introduced and repaired. While there are existing permissions-analysis tools and Android datasets, there are no available datasets that contain a large-scale empirical history of permission changes and mistakes. This limitation inhibits both\u00a0\u2026", "num_citations": "6\n", "authors": ["2168"]}
{"title": "A preliminary study of android refactorings\n", "abstract": " Throughout the lifetime of a software system, developers continuously refactor the source code as a means of improving the quality of the code. Android apps, like traditional software systems, are not exempt from such refactoring activities. We conducted an empirical study to show the common refactoring operations in Android apps and discussed how they differ from traditional Java systems. Additionally, by contextualizing refactorings with commit messages, we identified the motivations for developers to perform these refactoring operations.", "num_citations": "4\n", "authors": ["2168"]}
{"title": "Towards a model to appraise and suggest identifier names\n", "abstract": " Unknowingly, identifiers in the source code of a software system play a vital role in determining the quality of the system. Ambiguous and confusing identifier names lead developers to not only misunderstand the behavior of the code but also increases comprehension time and thereby causes a loss in productivity. Even though correcting poor names through rename operations is a viable option for solving this problem, renaming itself is an act of rework and is not immune to defect injection. In this study, we aim to understand the motivations that drive developers to name and rename identifiers and the decisions they make in determining the name. Using our results, we propose the development of a linguistic model that determines identifier names based on the behavior of the identifier. As a prerequisite to constructing the model, we conduct multiple studies to determine the features that should feed into the model\u00a0\u2026", "num_citations": "3\n", "authors": ["2168"]}
{"title": "Providing an experiential cybersecurity learning experience through mobile security labs\n", "abstract": " The reality of today's computing landscape already suffers from a shortage of cybersecurity professionals, and this gap only expected to grow. We need to generate interest in this STEM topic early in our student's careers and provide teachers the resources they need to succeed in addressing this gap. To address this shortfall we present Practical LAbs in Security for Mobile Applications (PLASMA), a public set of educational security labs to enable instruction in creation of secure Android apps. These labs include example vulnerable applications, information about each vulnerability, steps for how to repair the vulnerabilities, and information about how to confirm that the vulnerability has been properly repaired. Our goal is for instructors to use these activities in their mobile, security, and general computing courses ranging from secondary school to university settings. Another goal of this project is to foster interest in\u00a0\u2026", "num_citations": "3\n", "authors": ["2168"]}
{"title": "Understanding the relationship between quality and security: a large-scale analysis of Android applications\n", "abstract": " Android applications (apps) are not immune to the problems which also plague conventional software including security vulnerabilities, quality defects, permission misuse, and numerous other issues. Many developers even intentionally create vulnerable or malicious apps (malware) for often highly lucrative purposes. We need to better understand current trends in app quality and security to create higher quality software, and more effectively battle malware. To gather this critical information, we collected and reverse engineered 70,785 Android apps from the Google Play store, along with 1,420 malicious apps from other sources. Each app was analyzed using several static analysis tools to record a variety of information about each of them including requested permissions, size (LOC), possible defects and permission misuse. Our findings conclude that: 1) app categories substantially differ in terms of permissions\u00a0\u2026", "num_citations": "3\n", "authors": ["2168"]}
{"title": "Security: a critical quality attribute in self-adaptive systems\n", "abstract": " Self-Adaptive Systems (SAS) are revolutionizing many aspects of our society. From server clusters to autonomous vehicles, SAS are becoming more ubiquitous and essential to our world. Security is frequently a priority for these systems as many SAS conduct mission-critical operations, or work with sensitive information. Fortunately, security is being more recognized as an indispensable aspect of virtually all aspects of computing systems, in all phases of software development. Despite the growing prominence in security, from computing education to vulnerability detection systems, it is just another concern of creating good software. Despite how critical security is, it is a quality attribute like other aspects such as reliability, stability, or adaptability in a SAS.", "num_citations": "3\n", "authors": ["2168"]}
{"title": "CollabAll: inclusive discussion support system for deaf and hearing students\n", "abstract": " Even with advances in technology, group meetings between hearing and deaf and hard-of-hearing (D/HH) students can be challenging for all participants. This paper introduces CollabAll, a system that aims to better facilitate productive meetings between D/HH and hearing students. CollabAll provides D/HH individuals with a mechanism to actively participate in making decisions and getting their point across in team meetings. CollabAll enables every team member to create discussion topics for their meeting, track the person currently communicating and the current topic being discussed along with providing a mechanism for\" polite\" interruptions. Early feedback from participatory design and focus group studies indicated a positive user experience.", "num_citations": "2\n", "authors": ["2168"]}