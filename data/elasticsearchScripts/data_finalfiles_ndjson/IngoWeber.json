{"title": "Optimized execution of business processes on blockchain\n", "abstract": " Blockchain technology enables the execution of collaborative business processes involving untrusted parties without requiring a central authority. Specifically, a process model comprising tasks performed by multiple parties can be coordinated via smart contracts operating on the blockchain. The consensus mechanism governing the blockchain thereby guarantees that the process model is followed by each party. However, the cost required for blockchain use is highly dependent on the volume of data recorded and the frequency of data updates by smart contracts. This paper proposes an optimized method for executing business processes on top of commodity blockchain technology. Our optimization targets three areas specifically: initialization cost for process instances, task execution cost by means of a space-optimized data structure, and improved runtime components for maximized throughput. The\u00a0\u2026", "num_citations": "178\n", "authors": ["644"]}
{"title": "Detecting regulatory compliance for business process models through semantic annotations\n", "abstract": " A given business process may face a large number of regulatory obligations the process may or comply with. Providing tools and techniques to evaluate the compliance degree of a given process is a key objective in emerging business process platforms. We propose a diagnostic framework to assess the compliance gaps present in a given process. Checking whether a process is compliant with the rules involves enumerating all reachable states and is hence, in general, a hard search problem. The approach taken here allows to provide useful diagnostic information in polynomial time based on two underlying techniques. A conceptually faithful representation for regulatory obligations is firstly provided by a formal rule language based on a non-monotonic deontic logic of violations. Secondly, processes are formalized through semantic annotations that allow a logical state space to be created. The\u00a0\u2026", "num_citations": "139\n", "authors": ["644"]}
{"title": "Elastic Business Process Management: State of the art and open challenges for BPM in the cloud\n", "abstract": " With the advent of cloud computing, organizations are nowadays able to react rapidly to changing demands for computational resources. Not only individual applications can be hosted on virtual cloud infrastructures, but also complete business processes. This allows the realization of so-called elastic processes, i.e., processes which are carried out using elastic cloud resources. Despite the manifold benefits of elastic processes, there is still a lack of solutions supporting them.In this paper, we identify the state of the art of elastic Business Process Management with a focus on infrastructural challenges. We conceptualize an architecture for an elastic Business Process Management System and discuss existing work on scheduling, resource allocation, monitoring, decentralized coordination, and state management for elastic processes. Furthermore, we present two representative elastic Business Process Management\u00a0\u2026", "num_citations": "138\n", "authors": ["644"]}
{"title": "Beyond soundness: on the verification of semantic business process models\n", "abstract": " The verification of control-flow soundness is well understood as an important step before deploying business process models. However, the control flow does not capture what the process activities actually do when they are executed. Semantic annotations offer the opportunity to take this into account. Inspired by semantic Web service approaches such as OWL-S and WSMO, we consider process models in which the individual activities are annotated with logical preconditions and effects, specified relative to an ontology that axiomatizes the underlying business domain. Verification then addresses the overall process behavior, arising from the interaction between control-flow and behavior of individual activities. To this end, we combine notions from the workflow community with notions from the AI actions and change literature. We introduce a formal execution semantics for annotated business processes. We\u00a0\u2026", "num_citations": "131\n", "authors": ["644"]}
{"title": "User-Friendly Semantic Annotation in Business Process Modeling\n", "abstract": " Current problems in Business Process Management consist of terminology mismatches and unstructured and isolated knowledge representation in process models. Semantic Business Process Management aims at overcoming many of those weaknesses of Business Processes Management through the use of explicit semantic descriptions of process artifacts. However, this vision has a prerequisite: semantic annotations need to be added to the process models. In this paper, we present an approach that allows flexibly annotating semantics in a user-friendly way, by exposing ontological knowledge to the business user in appropriate forms and by employing matchmaking and filtering techniques to display options with high relevance only. By adding semantic information the precision of process models increases, ultimately supporting Web Service discovery and composition. As a proof-of-concept, the work\u00a0\u2026", "num_citations": "131\n", "authors": ["644"]}
{"title": "Runtime verification for business processes utilizing the Bitcoin blockchain\n", "abstract": " The usage of process choreographies and decentralized Business Process Management Systems has been named as an alternative to centralized business process orchestration. In choreographies, control over a process instance is shared between independent parties, and no party has full control or knowledge during process runtime. Nevertheless, it is necessary to monitor and verify process instances during runtime for purposes of documentation, accounting, or compensation.To achieve business process runtime verification, this work explores the suitability of the Bitcoin blockchain to create a novel solution for choreographies. The resulting approach is realized in a fully-functional software prototype. This software solution is evaluated in a qualitative comparison. Findings show that our blockchain-based approach enables a seamless execution monitoring and verification of choreographies, while at the same\u00a0\u2026", "num_citations": "128\n", "authors": ["644"]}
{"title": "On availability for blockchain-based systems\n", "abstract": " Blockchain has recently gained momentum. Startups, enterprises, banks, and government agencies around the world are exploring the use of blockchain for broad applications including public registries, supply chains, health records, and voting. Dependability properties, like availability, are critical for many of these applications, but the guarantees offered by the blockchain technology remain unclear, especially from an application perspective. In this paper, we identify the availability limitations of two mainstream blockchains, Ethereum and Bitcoin. We demonstrate that while read availability of blockchains is typically high, write availability - for transaction management - is actually low. For Ethereum, we collected 6 million transactions over a period of 97 days. First, we measured the time for transactions to commit as required by the applications. Second, we observed that some transactions never commit, due to the\u00a0\u2026", "num_citations": "125\n", "authors": ["644"]}
{"title": "Caterpillar: A Blockchain-Based Business Process Management System.\n", "abstract": " This demonstration introduces Caterpillar, an open-source Business Process Management System (BPMS) that runs on top of the Ethereum blockchain. Like any BPMS, Caterpillar supports the creation of instances of a process model (captured in the Business Process Model and Notation\u2013BPMN) and allows users to track the state of process instances and to execute tasks thereof. The specificity of Caterpillar is that the state of each process instance is maintained on the Ethereum blockchain, and the workflow routing is performed by smart contracts generated by a BPMN-to-Solidity compiler. The compiler supports a wide array of BPMN constructs, including user, script and service tasks, parallel and exclusive gateways, subprocesses, multi-instance activities and event handlers. The target audience of this demonstration includes researchers in the area of business process management and blockchain technology.", "num_citations": "113\n", "authors": ["644"]}
{"title": "How do machine learning, robotic process automation, and blockchains affect the human factor in business process management?\n", "abstract": " This paper summarizes a panel discussion at the 15th International Conference on Business Process Management. The panel discussed to what extent the emergence of recent technologies including machine learning, robotic process automation, and blockchain will reduce the human factor in business process management. The panel discussion took place on 14 September, 2017, at the Universitat Polit\u00e8cnica de Catalunya in Barcelona, Spain. Jan Mendling served as a chair; Gero Decker, Richard Hull, Hajo Reijers, and Ingo Weber participated as panelists. The discussions emphasized the impact of emerging technologies at the task level and the coordination level. The major challenges that the panel identified relate to employment, technology acceptance, ethics, customer experience, job design, social integration, and regulation.", "num_citations": "105\n", "authors": ["644"]}
{"title": "Caterpillar: a business process execution engine on the Ethereum blockchain\n", "abstract": " Blockchain platforms, such as Ethereum, allow a set of actors to maintain a ledger of transactions without relying on a central authority and to deploy programs, called smart contracts, that are executed whenever certain transactions occur. These features can be used as basic building blocks for executing collaborative business processes between mutually untrusting parties. However, implementing business processes using the low\u2010level primitives provided by blockchain platforms is cumbersome and error\u2010prone. In contrast, established business process management systems (BPMSs), such as those based on the standard Business Process Model and Notation (BPMN), provide convenient abstractions for rapid development of process\u2010oriented applications. This article demonstrates how to combine the advantages of a BPMS with those of a blockchain platform. The article introduces a blockchain\u2010based BPMN\u00a0\u2026", "num_citations": "98\n", "authors": ["644"]}
{"title": "Increasing recall of process model matching by improved activity label matching\n", "abstract": " Comparing process models and matching similar activities has recently emerged as a research area of business process management. However, the problem is fundamentally hard when considering realistic scenarios: e.g., there is a huge variety of terms and various options for the grammatical structure of activity labels exist. While prior research has established important conceptual foundations, recall values have been fairly low (around 0.26) \u2013 arguably too low to be useful in practice. In this paper, we present techniques for activity label matching which improve current results (recall of 0.44, without sacrificing precision). Furthermore, we identify categories of matching challenges to guide future research.", "num_citations": "98\n", "authors": ["644"]}
{"title": "Report: The process model matching contest 2013\n", "abstract": " Process model matching refers to the creation of correspondences between activities of process models. Applications of process model matching are manifold, reaching from model validation over harmonization of process variants to effective management of process model collections. Recently, this demand led to the development of different techniques for process model matching. Yet, these techniques are heuristics and, thus, their results are inherently uncertain and need to be evaluated on a common basis. Currently, however, the BPM community lacks established data sets and frameworks for evaluation. The Process Model Matching Contest 2013 aimed at addressing the need for effective evaluation by defining process model matching problems over published data\u00a0sets.               This paper summarizes the setup and the results of the contest. Besides a description of the contest matching problems, the\u00a0\u2026", "num_citations": "91\n", "authors": ["644"]}
{"title": "On compliance checking for clausal constraints in annotated process models\n", "abstract": " Compliance management is important in several industry sectors where there is a high incidence of regulatory control. It must be ensured that business practices, as reflected in business processes, comply with the rules. Such compliance checks are challenging due to (1) the different life cycles of rules and processes, and (2) their disparate representations. (1) requires retrospective checking of process models. To address (2), we herein devise a framework where processes are annotated to capture the semantics of task execution, and compliance is checked against a set of constraints posing restrictions on the desirable process states. Each constraint is a clause, i.e., a disjunction of literals. If a process can reach a state that falsifies all literals of one of the constraints, then that constraint is violated in that state, and indicates non-compliance. Naively, such compliance can be checked by enumerating all\u00a0\u2026", "num_citations": "85\n", "authors": ["644"]}
{"title": "Lorikeet: A Model-Driven Engineering Tool for Blockchain-Based Business Process Execution and Asset Management.\n", "abstract": " Blockchain has attracted broad interest as a distributed ledger technology for building the next generation of applications to address lack-of-trust issues in business. Business processes that manage assets (eg transferring car/grain/land titles) are a promising domain for applying blockchain technology: secure asset management (including tokens and crypto-currency) is a major application area of blockchain. Solutions for non-fungible assets (like cars and houses, but also supply chain goods) are recurrently addressed case by case and traditionally rely on a centralised trusted authority. This can cause trust issues and introduce inefficiencies or counterparty risks. However, developing blockchain applications is far from easy, and mistakes may not be fixable. Thus, in this paper, we present a model-driven engineering (MDE) tool named Lorikeet for the implementation of business processes on blockchain, which can manage assets. Lorikeet can automatically create well-tested smart contract code from specifications that are encoded in the business process and data registry models based on the implemented model transformations. We demonstrate the tool with an industrial use case.", "num_citations": "84\n", "authors": ["644"]}
{"title": "Predicting latency of blockchain-based systems using architectural modelling and simulation\n", "abstract": " Blockchain is an emerging technology for sharing transactional data and computation without using a central trusted third party. It is an architectural choice to use a blockchain instead of traditional databases or protocols, and this creates trade-offs between non-functional requirements such as performance, cost, and security. However, little is known about predicting the behaviour of blockchain-based systems. This paper shows the feasibility of using architectural performance modelling and simulation tools to predict the latency of blockchain-based systems. We use established tools and techniques, but explore new blockchain-specific issues such as the configuration of the number of confirmation blocks and inter-block times. We report on a lab-based experimental study using an incident management system, showing predictions of median system level response time with a relative error mostly under 10%. We\u00a0\u2026", "num_citations": "76\n", "authors": ["644"]}
{"title": "The process model matching contest 2015\n", "abstract": " Process model matching refers to the automatic identification of correspondences between the activities of process models. Application scenarios of process model matching reach from model validation over harmonization of process variants to effective management of process model collections. Recognizing this, several process model matching techniques have been developed in recent years. However, to learn about specific strengths and weaknesses of these techniques, a common evaluation basis is indispensable. The second edition of the Process Model Matching Contest in 2015 hence addresses the need for effective evaluation by defining process model matching problems over published data sets. This paper summarizes the setup and the results of the contest. Next to a description of the contest matching problems, the paper provides short descriptions of all matching techniques that have been submitted for participation. In addition, we present and discuss the evaluation results and outline directions for future work in the field of process model matching.", "num_citations": "71\n", "authors": ["644"]}
{"title": "New kids on the block: an analysis of modern blockchains\n", "abstract": " Half a decade after Bitcoin became the first widely used cryptocurrency, blockchains are receiving considerable interest from industry and the research community. Modern blockchains feature services such as name registration and smart contracts. Some employ new forms of consensus, such as proof-of-stake instead of proof-of-work. However, these blockchains are so far relatively poorly investigated, despite the fact that they move considerable assets. In this paper, we explore three representative, modern blockchains---Ethereum, Namecoin, and Peercoin. Our focus is on the features that set them apart from the pure currency use case of Bitcoin. We investigate the blockchains' activity in terms of transactions and usage patterns, identifying some curiosities in the process. For Ethereum, we are mostly interested in the smart contract functionality it offers. We also carry out a brief analysis of issues that are introduced by negligent design of smart contracts. In the case of Namecoin, our focus is how the name registration is used and has developed over time. For Peercoin, we are interested in the use of proof-of-stake, as this consensus algorithm is poorly understood yet used to move considerable value. Finally, we relate the above to the fundamental characteristics of the underlying peer-to-peer networks. We present a crawler for Ethereum and give statistics on the network size. For Peercoin and Namecoin, we identify the relatively small size of the networks and the weak bootstrapping process.", "num_citations": "64\n", "authors": ["644"]}
{"title": "Automated derivation of executable business processes from choreographies in virtual organisations\n", "abstract": " In this paper, we address the challenge of deriving both executable WSBPEL processes and their respective WSDL interface specifications from choreographies written in WS-CDL for business processes in Virtual Organisations (VOs). The major issues hereby, are the differences in the vocabulary of WS-CDL and WSBPEL as well as the information gap between a choreography and an executable orchestration. The information gap results from the requirement imposed by the VO environment to establish a process-based collaboration in a top-down fashion. High-level choreography descriptions are hereby the basis for the derivation of detailed executable processes. The first issue is addressed with a detailed translation table; the second one requires the use of a role specific knowledge base. This knowledge base delivers process subsets modelling detailed role of internal activities while avoiding their exposure\u00a0\u2026", "num_citations": "53\n", "authors": ["644"]}
{"title": "Listen to me: Improving process model matching through user feedback\n", "abstract": " Many use cases in business process management rely on the identification of correspondences between process models. However, the sparse information in process models makes matching a fundamentally hard problem. Consequently, existing approaches yield a matching quality which is too low to be useful in practice. Therefore, we investigate incorporating user feedback to improve matching quality. To this end, we examine which information is suitable for feedback analysis. On this basis, we design an approach that performs matching in an iterative, mixed-initiative approach: we determine correspondences between two models automatically, let the user correct them, and analyze this input to adapt the matching algorithm. Then, we continue with matching the next two models, and so forth. This approach improves the matching quality, as showcased by a comparative evaluation. From this study, we\u00a0\u2026", "num_citations": "47\n", "authors": ["644"]}
{"title": "Method and system for validating process models\n", "abstract": " A method and system are described for validating process models. A process semantic model including a semantic directed graph including nodes associated with tasks and edges associated with a direction of flow of execution of the tasks may be obtained. Edges entering nodes include annotations including precondition semantic indicators associated with the entering edges and edges exiting nodes include annotations including postcondition semantic indicators associated with the exiting edges. The process semantic model may be traversed to determine a flow of execution of activities associated with the tasks based on visiting the nodes based on a depth-first traversal. A validity of execution associated with a flow of execution of the activities associated with the tasks may be determined based on checking a validity of execution status based on a semantic processing of one or more semantic annotation\u00a0\u2026", "num_citations": "43\n", "authors": ["644"]}
{"title": "Business process improvement with the AB-BPM methodology\n", "abstract": " A fundamental assumption of Business Process Management (BPM) is that redesign delivers refined and improved versions of business processes. This assumption, however, does not necessarily hold, and any required compensatory action may be delayed until a new round in the BPM life-cycle completes. Current approaches to process redesign face this problem in one way or another, which makes rapid process improvement a central research problem of BPM today. In this paper, we address this problem by integrating concepts from process execution with ideas from DevOps. More specifically, we develop a methodology called AB-BPM that offers process improvement validation in two phases: simulation and AB tests. Our simulation technique extracts decision probabilities and metrics from the event log of an existing process version and generates traces for the new process version based on this knowledge\u00a0\u2026", "num_citations": "42\n", "authors": ["644"]}
{"title": "Auto-completion for executable business process models\n", "abstract": " This work presents an auto-completion mechanism for supporting the creation of executable business process models. Currently, process modeling tools provide only little support to identify the relevant services that are needed to execute the process model \u2013 the selection of appropriate services is left to the skills of the modeler. A novel solution technique for this problem is proposed here as the combination of (1) a context-based analysis, (2) by taking pre and post-conditions into account, and by (3) evaluating the non-functional properties of the functionally and context-wise fitting services.", "num_citations": "41\n", "authors": ["644"]}
{"title": "SAP speaks PDDL: Exploiting a software-engineering model for planning in business process management\n", "abstract": " Planning is concerned with the automated solution of action sequencing problems described in declarative languages giving the action preconditions and effects. One important application area for such technology is the creation of new processes in Business Process Management (BPM), which is essential in an ever more dynamic business environment. A major obstacle for the application of Planning in this area lies in the modeling. Obtaining a suitable model to plan with--ideally a description in PDDL, the most commonly used planning language--is often prohibitively complicated and/or costly. Our core observation in this work is that this problem can be ameliorated by leveraging synergies with model-based software development. Our application at SAP, one of the leading vendors of enterprise software, demonstrates that even one-to-one model re-use is possible.", "num_citations": "40\n", "authors": ["644"]}
{"title": "Semantic Methods for Execution-level Business Process Modeling: Modeling Support Through Process Verification and Service Composition\n", "abstract": " Ingo Weber develops new approaches for the rapid development and flexible adaption of business processes, which are often the main requirements in today\u2019s IT support for enterprises. Key issues covered by his work are the automatic composition of processes out of predefined components and the verification of specific process properties. His research aims at quickly creating executable process models, which orchestrate the usage of Web services. He investigates how process modelers can be supported by semantic technologies, eg, by semantically enriched process models or annotated Web services, and puts special emphasis on expressiveness and scalability.", "num_citations": "40\n", "authors": ["644"]}
{"title": "Semantic annotation and composition of business processes with maestro\n", "abstract": " One of the main problems when creating execution-level process models is finding implementations for process activities. Carrying out this activity manually can be time consuming, since it involves searching in large service repositories. We present Maestro for BPMN, a tool that allows to annotate and automatically compose activities within business processes. We explain the main assumptions and algorithms underlying the tool, and we overview what will be demonstrated at ESWC.", "num_citations": "38\n", "authors": ["644"]}
{"title": "Combining scalability and expressivity in the automatic composition of semantic web services\n", "abstract": " Automatic Web service composition (WSC) is a key component of flexible SOAs. We address WSC at the profile/capability level, where preconditions and effects of services are described in an ontology. In its most expressive formulation, WSC has two sources of complexity: (A) a combinatorial explosion of the services composition space, and (B) worst-case exponential reasoning is needed to determine whether the underlying ontology implies that a particular composition is a solution. Any WSC technology must hence choose a trade-off between scalability and expressivity. We devise new methods for finding better trade-offs. We address (A) by techniques for the automatic generation of heuristic functions. We address (B) by approximate reasoning techniques for the fully expressive case, and by identifying a sub-class where the required reasoning is tractable. We show empirically that our approach scales\u00a0\u2026", "num_citations": "37\n", "authors": ["644"]}
{"title": "Scalable business process execution in the cloud\n", "abstract": " Business processes orchestrate service requests in a structured fashion. Process knowledge, however, has rarely been used to predict and decide about cloud infrastructure resource usage. In this paper, we present an approach for BPM-aware cloud computing that builds on process knowledge to improve the timeliness and quality of resource scaling decisions. We introduce an IaaS resource controller based on fuzzy theory that monitors process execution and that is used to predict and control resource requirements for subsequent process tasks. In a laboratory experiment, we evaluate the controller design against a commercially available state-of-the-art auto scaler. Based on the results, we discuss improvements and limitations, and suggest directions for further research.", "num_citations": "35\n", "authors": ["644"]}
{"title": "A platform architecture for multi-tenant blockchain-based systems\n", "abstract": " Blockchain has attracted a broad range of interests from start-ups, enterprises and governments to build next generation applications in a decentralized manner. Similar to cloud platforms, a single blockchain-based system may need to serve multiple tenants simultaneously. However, design of multi-tenant blockchain-based systems is challenging to architects in terms of data and performance isolation, as well as scalability. First, tenants must not be able to read other tenants' data and tenants with potentially higher workload should not affect read/write performance of other tenants. Second, multi-tenant blockchain-based systems usually require both scalability for each individual tenant and scalability with number of tenants. Therefore, in this paper, we propose a scalable platform architecture for multi-tenant blockchain-based systems to ensure data integrity while maintaining data privacy and performance isolation\u00a0\u2026", "num_citations": "34\n", "authors": ["644"]}
{"title": "Approximate compliance checking for annotated process models\n", "abstract": " We describe a method for validating whether the states reached by a process are compliant with a set of constraints. This serves to (i) check the compliance of a new or altered process against the constraints base, and (ii) check the whole process repository against a changed constraints base, eg, when new regulations come into being. For these purposes we formalize a particular class of compliance rules as well as annotated process models, the latter by combining a notion from the workflow literature with a notion from the AI actions and change literature. The compliance rules in turn pose restrictions on the desirable states. Each rule takes the form of a clausal constraint, ie, a disjunction of literals. If for a given state there is a grounded clause none of whose literals are true, then the constraint is violated and indicates non-compliance. Checking whether a process is compliant with the rules involves enumerating all reachable states and is in general a hard search problem. Since long waiting times undesirable, it is important to explore restricted classes and approximate methods. We present a polynomial-time algorithm that, for a particular class of processes, computes the sets of literals that are necessarily true at particular points during process execution. Based on this information, we devise two approximate compliance checking methods. One of these is sound but not complete (it guarantees to find only non-compliances, but not to find all non-compliances); the other method is complete but not sound. We sketch how one can trace the state evolution back to the process activities which caused the (potential) non-compliance, and hence\u00a0\u2026", "num_citations": "34\n", "authors": ["644"]}
{"title": "Semantic extensions of business process modeling tools\n", "abstract": " A method and a system directed to semantically annotating business process modeling components of a business process model are described. For example, a definition of a business process modeling component and an association of a domain element with the business process modeling component are received. Then, the definition of the business process modeling component is semantically annotated using the domain element.", "num_citations": "33\n", "authors": ["644"]}
{"title": "A conceptual framework for composition in business process management\n", "abstract": " In this work, we present a conceptual framework for deriving executable business process models from high-level, graphical business process models based on the paradigm of Service-Oriented Architectures and Semantic Web technology. We hereby envision a direct, but implicit link from a business analyst\u2019s view on a process model to its execution driven by an IT system. This linkage enables the derivation of an execution-level model for newly created business process models as well as adaptation of the execution model after re-engineering processes, possibly under certain re-design goals (such as quality, cost, execution time, flexibility, or others).               The framework includes a component architecture and an algorithm that describes how to combine executable artifacts, such as (Semantic) Web services, in order to find an implementation that matches a given business process model. An extensible\u00a0\u2026", "num_citations": "33\n", "authors": ["644"]}
{"title": "SAP speaks PDDL\n", "abstract": " In several application areas for Planning, in particular helping with the creation of new processes in Business Process Management (BPM), a major obstacle lies in the modeling. Obtaining a suitable model to plan with is often prohibitively complicated and/or costly. Our core observation in this work is that, for software-architectural purposes, SAP is already using a model that is essentially a variant of PDDL. That model describes the behavior of Business Objects, in terms of status variables and how they are affected by system transactions. We show herein that one can leverage the model to obtain (a) a promising BPM planning application which incurs hardly any modeling costs, and (b) an interesting planning benchmark. We design a suitable planning formalism and an adaptation of FF, and we perform large-scale experiments. Our prototype is part of a research extension to the SAP NetWeaver platform.", "num_citations": "29\n", "authors": ["644"]}
{"title": "SUPER-raising business process management back to the business level\n", "abstract": " The SUPER project (Semantics Utilized for Process Management within and between Enterprises) is working on improving the modelling and management of business processes. This will be achieved by integrating semantic technology with business process management (BPM), and would provide answers to two of the most prominent issues emerging in this area: shifting control of processes from IT professionals to business experts, and scaling up BPM to support processes of higher complexity.SUPER is an EU-funded Integrated Project that has a duration of three years and is under the coordination of SAP. It started in April 2006 and unites nineteen partners and approximately sixty researchers. The project consortium is a balanced blend of industrial partners, use case partners and academic research teams from all over Europe.", "num_citations": "29\n", "authors": ["644"]}
{"title": "Mining blockchain processes: Extracting process mining data from blockchain applications\n", "abstract": " Blockchain technology has been gaining popularity as a platform for developing decentralized applications and executing cross-organisational processes. However, extracting data that allows analysing the process view from blockchains is surprisingly hard. Therefore, blockchain data are rarely used for process mining. In this paper, we propose a framework for alleviating that pain. The framework comprises three main parts: a manifest specifying how data is logged, an extractor for retrieving data (structured according to the XES standard), and a generator that produces logging code to support smart contract developers. Among others, we propose a convenient way to encode logging data in a compact form, to achieve relatively low cost and high throughput for on-chain logging. The proposal is evaluated with logs created from generated logging code, as well as with existing blockchain applications that do\u00a0\u2026", "num_citations": "28\n", "authors": ["644"]}
{"title": "Dynamic role binding in blockchain-based collaborative business processes\n", "abstract": " Blockchain technology enables the execution of collaborative business processes involving mutually untrusted parties. Existing tools allow such processes to be modeled using high-level notations and compiled into smart contracts that can be deployed on blockchain platforms. However, these tools brush aside the question of who is allowed to execute which tasks in the process, either by deferring the question altogether or by adopting a static approach where all actors are bound to roles upon process instantiation. Yet, a key advantage of blockchains is their ability to support dynamic sets of actors. This paper presents a model for dynamic binding of actors to roles in collaborative processes and an associated binding policy specification language. The proposed language is endowed with a Petri net semantics, thus enabling policy consistency verification. The paper also outlines an approach to compile\u00a0\u2026", "num_citations": "28\n", "authors": ["644"]}
{"title": "Regerator: a Registry Generator for Blockchain.\n", "abstract": " A registry is a list of information recorded by a trusted authority. Registries have security requirements for data integrity and availability, and for the ability to connect with other registries. Building registries on a blockchain leverages key properties of blockchains, including data integrity, immutability, and availability. By using a blockchain as uniform infrastructure, different registries can also more easily interact with each other. In this paper, we present a browser-based tool for the model-driven generation and deployment of registries as smart contracts on blockchain. The tool also generates web-based RESTful APIs and user interfaces to interact with the generated registries. We evaluate the feasibility and transaction costs for this approach using metadata from data. gov. au, stored on a decentralised derivative of CKAN (a web-based open-source data registration system) built on the Ethereum blockchain3.", "num_citations": "27\n", "authors": ["644"]}
{"title": "Modeling and enforcing blockchain-based choreographies\n", "abstract": " Distributed Ledger Technology (DLT) and blockchains in particular have been identified as promising foundations to realize inter-organizational business processes. Capabilities such as shared data and decision logic defined as smart contracts open up entirely new ways to implement process choreographies. However, current choreography modeling languages solely focus on direct interactions between organizations; they do not take into account the conceptually new features of blockchains, like shared data and smart contracts. To bridge the gap between choreography modeling and implementation, this paper critically analyzes the assumptions of choreography languages. We propose new language concepts specifically targeting blockchain capabilities, and we define their operational semantics. Our work is evaluated with a proof-of-concept implementation and an analysis of three real-world case\u00a0\u2026", "num_citations": "26\n", "authors": ["644"]}
{"title": "Optimizing the performance of automated business processes executed on virtualized infrastructure\n", "abstract": " With few exceptions, the opportunities cloud computing offers to business process management (BPM) technologies have been neglected so far. We investigate opportunities and challenges of implementing a BPM-aware cloud architecture for the benefit of process runtime optimization. Processes with predominantly automated tasks such as data transformation processes are key targets for this runtime optimization. In theory, off-the-shelf mechanisms offered by cloud providers, such as horizontal scaling, should already provide as much computational resources as necessary for a process to execute in a timely fashion. However, we show that making process data available to scaling decisions can significantly improve process turnaround time and better cater for the needs of BPM. We present a model and method of cloud-aware business process optimization which provides computational resources based on\u00a0\u2026", "num_citations": "25\n", "authors": ["644"]}
{"title": "Beyond soundness: On the semantic consistency of executable process models\n", "abstract": " Executable business process models build on the specification of process activities, their implemented business functions (e.g., Web services) and the control flow between these activities. Before deploying such a model, it is important to verify control-flow correctness. A process is sound if its control-flow guarantees proper completion and there are no deadlocks. However, a sound control flow is not sufficient to ensure that an executable process model indeed behaves as expected. This is due to business functions requiring certain preconditions to be fulfilled for execution and having an effect on the process (postconditions). Semantic annotations provide a means for taking such further aspects into account. Inspired by OWL-S and WSMO, we consider process models in which the individual activities are annotated with logical preconditions and postconditions specified relative to an ontology that axiomatizes the\u00a0\u2026", "num_citations": "22\n", "authors": ["644"]}
{"title": "Analyzing control flow information to improve the effectiveness of process model matching techniques\n", "abstract": " Process model matchers automatically identify activities that represent similar functionality in different process models. As such, they support various tasks in business process management including model collection management and process design. Yet, comparative evaluations revealed that state-of-the-art matchers fall short of offering high performance across varied datasets. To facilitate the development of more effective matchers, we systematically study, if and how the analysis of control flow information in process models can contribute to the matching process. In particular, we empirically examine the validity of analysis options and use our findings to automate the adaptation of matcher configurations to model collections.", "num_citations": "19\n", "authors": ["644"]}
{"title": "Requirements for implementing business process models through composition of semantic web services\n", "abstract": " Despite significant research efforts, automated service composition is neither taken up broadly nor can it be considered a solved problem. We believe that this is partly the case due to an unclear formulation of the actual business requirements and frame for this technology. In this paper, we formulate a list of 14 requirements for composition in the contexts of business process implementation, enterprise application integration, and interoperability, which can be considered quite challenging not only for current technology but also in terms computational complexity. However, if these requirements are met by an approach to composition \u2014 potentially by combining existing technology \u2014 the relevance of automated composition to enterprise application software could increase significantly, and also quicken its success in other usage scenarios. We give a list of requirements towards service composition along with\u00a0\u2026", "num_citations": "19\n", "authors": ["644"]}
{"title": "Planning@SAP: An application in business process management\n", "abstract": " Business processes control the flow of activities within and between enterprises. Business Process Management is concerned, amongst other things, with the maintenance of these processes. In particular, it becomes ever more important to be able to quickly create modified processes for changed market conditions. We show that AI Planning can help with this, by automatically composing process skeletons. We formalize this as a particular form of planning with non-deterministic actions. Since there is no fixed ``domain'' -- business processes may talk about almost anything -- a major problem in applying the method is a practical way of obtaining the planning model. We show that, at SAP, one of the leading providers of enterprise software, one can obtain the models for free, by leveraging existing semi-formal models of software behavior. We finally show that, by arranging some known planning techniques in a suitable way, one can obtain tooling that solves practical examples in a matter of seconds, and that is hence suitable for use in a real-time BPM process modeling environment. Our prototype of such an environment is part of a research extension to the SAP NetWeaver platform.", "num_citations": "18\n", "authors": ["644"]}
{"title": "Composing services for third-party service delivery\n", "abstract": " This paper proposes a model-based technique for lowering the entrance barrier for service providers to register services with a marketplace broker, such that the service is rapidly configured to utilize the brokerpsilas local service delivery management components. Specifically, it uses process modeling for supporting the execution steps of a service and shows how service delivery functions (e.g. payment points) ldquolocalrdquo to a service broker can be correctly configured into the process model. By formalizing the different operations in a service delivery function (like payment or settlement) and their allowable execution sequences (full payments must follow partial payments), including cross-function dependencies, it shows how through tool support, the non-technical user can quickly configure service delivery functions in a consistent and complete way.", "num_citations": "17\n", "authors": ["644"]}
{"title": "Supporting execution-level business process modeling with semantic technologies\n", "abstract": " When creating execution-level process models from conceptual to-be process models, challenges are to find implementations for process activities and to use these implementations correctly. Carrying out these activities manually can be time consuming, since it involves searching in large service repositories and cycles of testing and re-designing. We present Maestro for BPMN, a tool that allows to annotate and automatically compose activities within business processes, and to verify the consistency of an annotated process.", "num_citations": "16\n", "authors": ["644"]}
{"title": "Validation of process models\n", "abstract": " In computer-implemented methods to validate process models, the models carry semantic information that is related to the process steps, including pre-conditions that indicate whether a step would be executable under certain conditions and post-conditions relating to results from executing a step. Steps are related as predecessor/successor so that a post-condition of the predecessor step can be the pre-condition of a successor step. During model validation, variables are exchanged and propagated between the step conditions. Instead of validating the model for potentially all initial values of variables and conditions, the system identifies portions of the model that can be validated separately for a reduced set of initial states.", "num_citations": "15\n", "authors": ["644"]}
{"title": "Interpreted execution of business process models on blockchain\n", "abstract": " Blockchain technology provides a tamper-proof mechanism to execute inter-organizational business processes involving mutually untrusted parties. Existing approaches to blockchain-based process execution are based on code generation. In these approaches, a process model is compiled into one or more smart contracts, which are then deployed on a blockchain platform. Given the immutability of the deployed smart contracts, these compiled approaches ensure that all process instances conform to the process model. However, this advantage comes at the price of inflexibility. Any changes to the process model require the redeployment of the smart contracts (a costly operation). In addition, changes cannot be applied to running process instances. To address this lack of flexibility, this paper presents an interpreter of BPMN process models based on dynamic data structures. The proposed interpreter is embedded\u00a0\u2026", "num_citations": "14\n", "authors": ["644"]}
{"title": "Method and system for process composition\n", "abstract": " A method and system for model composition. A business process model defined by a plurality of tasks may be accessed. A plurality of available executable elements capable of implementing the plurality of tasks may be identified. Each of the plurality of available executable elements may be capable of providing functionality to implement parts of the business process model. One or more executable elements may be selected among the plurality of available executable elements for each of the plurality of tasks. The selection may be based on functionality of an available executable element. The selected elements may be combined for the plurality of tasks to create an executable process for the business process model.", "num_citations": "14\n", "authors": ["644"]}
{"title": "Facilitating enterprise service discovery for non-technical business users\n", "abstract": " Enterprise Services (ES) are Web services with which enterprise applications expose a subset of their functionality. Due to the often high number of different ES, as well as the complex nature of their names, it is difficult for non-technical business users to discover services in ES repositories. However, most of this complexity stems from a SOA governance-driven service design process that is essential to the development of harmonized and long-lasting ES. Based on the example of SAP\u2019s ES, we describe a representational model that consolidates existing models and patterns used during the service design process. We created an iterative search approach that uses this consolidated metadata. The evaluation of the approach with real business users, based on a prototypical implementation, demonstrates that our iterative search is more efficient and effective than the currently offered search.", "num_citations": "14\n", "authors": ["644"]}
{"title": "Aodv\u2013based routing for payment channel networks\n", "abstract": " Payment Channel Networks such as the Lightning Network (LN), Raiden or COMIT were created to tackle the scalability problems of their underlying blockchains, by moving from expensive and slow on-chain transactions to inexpensive and fast off-chain ones. However, those networks are unregulated and decentralised, comprise point-to-point channels that may be opened or closed without coordination or warning, and fees may change at any time \u2013 making routing over these networks a hard problem. In addition, by connecting different blockchains using such off-chain networks, an immense network of channels will evolve which is under continues change. Routing needs to take into account the current network status, availability and distributions of channels\u2019 funding, fees for each node, and exchange rates between different currencies. In this work, we identify requirements for such a routing protocol\u00a0\u2026", "num_citations": "13\n", "authors": ["644"]}
{"title": "OAR: A Formal Framework for Multi-Agent Negotiation\n", "abstract": " In Multi-Agent systems, agents often need to make decisions about how to interact with each other when negotiating over task allocation. In this paper, we present OAR, a formal framework to address the question of how the agents should interact in an evolving environment in order to achieve their different goals. The traditional categorization of selfinterested and cooperative agents is unified by adopting a utility view. We illustrate mathematically that the degree of cooperativeness of an agent and the degree of its self-directness are not directly related. We also show how OAR can be used to evaluate different negotiation strategies and to develop distributed mechanisms that optimize the performance dynamically. This research demonstrates that sophisticated probabilistic modeling can be used to understand the behaviors of a system with complex agent interactions.", "num_citations": "13\n", "authors": ["644"]}
{"title": "Practical undoability checking via contingent planning\n", "abstract": " We consider a general concept of undoability, asking whether a given action can always be undone, no matter which state it is applied to. This generalizes previous concepts of invertibility, and is relevant for search as well as applications. Na\u00efve undoability checking requires to enumerate all states an action is applicable to. Extending and operationalizing prior work in this direction, we introduce a compilation into contingent planning, replacing such enumeration by standard techniques handling large belief states. We furthermore introduce compilations for checking whether one can always get back to an at-least-as-good state, as well as for determining partial undoability, ie, undoability on a subset of states an action is applicable to. Our experiments on IPC benchmarks and in a cloud management application show that contingent planners are often effective at solving this kind of problem, hence providing a practical means for undoability checking.", "num_citations": "12\n", "authors": ["644"]}
{"title": "Execution-level process modeling\n", "abstract": " A system includes a semantic process validator that includes a state construction component that is configured to collect state information for an instance of a process model, a parallelity checker that is configured to determine a set of one or more process tasks within the instance of the process model that may be executed in parallel to a selected task, and a validation coordinator that is configured to coordinate requests to the state construction component and to the parallelity checker. The system includes a process modeling tool that includes a goal creator that is configured to construct a constraint set for the selected task using the set of process tasks, where the selected task has a goal. The system includes a task composer that is configured to find one or more services to fulfill the goal for the selected task using the constraint set.", "num_citations": "12\n", "authors": ["644"]}
{"title": "Modelling, simulation, and performance analysis of business processes involving ubiquitous systems\n", "abstract": " A recent trend in Ubiquitous Computing is that embedded software (e.g. in production machines, wired or wireless networked sensors and actuators, or RFID readers) directly offers Web Services. This allows it to directly participate in IT business processes. Our work suggests an approach to assess and compare the performance of such hybrid process models. It critically evaluates BPEL, the standard instrument for creating executable process descriptions, for its support of the dynamic nature of ubiquitous services, e.g. due to device mobility and unreliable wireless communication.", "num_citations": "12\n", "authors": ["644"]}
{"title": "Polynomial-time reasoning for semantic web service composition\n", "abstract": " Automatic composition of semantic Web services should make use of the ontology in which the services are specified. While the approaches can strongly benefit from doing so, they have to deal with the frame and ramification problems, necessitating worst-case exponential reasoning even to determine the outcome of applying a single Web service. The existing approaches to composition either ignore the background ontology, matching Web services based on concept names and hence removing the need for reasoning; or they employ full-scale reasoning and suffer from the unavoidable performance deficiencies. In our work, we instead look for interesting classes of ontologies where the required reasoning is polynomial. We define a formalism for semantic Web service composition. We present polynomial-time methods for dealing with several of the most commonly used ontology modelling constructs; further\u00a0\u2026", "num_citations": "12\n", "authors": ["644"]}
{"title": "Brokered service delivery\n", "abstract": " A selected activity of a service process model displayed in a process view of a graphical user interface may be determined. The service process model may represent a software service to be provided from a service provider to a consumer by way of a service broker. At least one service delivery entity associated with the service broker and providing service delivery functionality to be included in a brokered service process model may be determined, the service delivery entity including a state machine comprising states and transitions between the states. Configuration options may be provided in a configuration view of the graphical user interface. The configuration options may include goal states of the states to be reached as part of the brokered service process model and in association with the selected activity. A selected goal state of the goal states may be determined. The brokered service process model may be\u00a0\u2026", "num_citations": "11\n", "authors": ["644"]}
{"title": "Web Service Composition.\n", "abstract": " The prevalent architectural model of modern enterprise application software and other distributed systems is Service-Oriented Architecture (SOA): applications are split into reusable blocks of functionality\u2013the services\u2013which are exposed to respective consumers. A Web service is a \u201cselfdescribing, self-contained software module available via a network, such as the Internet, which completes tasks, solves problems, or conducts transactions on behalf of a user or application\u201d[24]. Examples for publicly available Web services include US National Weather\u2019s weather service1 or Amazon\u2019s book search service2. An important aspect of designing services is to assure they can be usefully applied in various contexts [7]. As such, Web service composition refers to both the activity and the result of combining multiple Web services into a higher-value service. Two flavours of Web service compositions are commonly distinguished: orchestration and choreography. An orchestration of Web services is the \u201cinside-out view\u201d[26] on an implemented business process of an organization\u2013while containing the information how to interact with business partners, it also describes how and when to invoke Web services of the organization itself. In contrast, a choreography \u201cdefines the sequence and conditions under which multiple cooperating independent agents exchange messages in order to perform a task to achieve a goal state\u201d[33]. Orchestrations are scripts that are detailed enough to be actively executed, typically implementing a composition from the viewpoint of one organization. In contrast, choreographies are global contracts between participants of equal\u00a0\u2026", "num_citations": "10\n", "authors": ["644"]}
{"title": "Hyper-parameter optimization in classification: To-do or not-to-do\n", "abstract": " Hyper-parameter optimization is a process to find suitable hyper-parameters for predictive models. It typically incurs highly demanding computational costs due to the need of the time-consuming model training process to determine the effectiveness of each set of candidate hyper-parameter values. A priori, there is no guarantee that hyper-parameter optimization leads to improved performance. In this work, we propose a framework to address the problem of whether one should apply hyper-parameter optimization or use the default hyper-parameter settings for traditional classification algorithms. We implemented a prototype of the framework, which we use a basis for a three-fold evaluation with 486 datasets and 4 algorithms. The results indicate that our framework is effective at supporting modeling tasks in avoiding adverse effects of using ineffective optimizations. The results also demonstrate that incrementally\u00a0\u2026", "num_citations": "9\n", "authors": ["644"]}
{"title": "Towards reliable predictive process monitoring\n", "abstract": " Predictive process monitoring is concerned with anticipating the future behavior of running process instances. Prior work primarily focused on the performance of monitoring approaches and spent little effort on understanding other aspects such as reliability. This limits the potential to reuse the approaches across scenarios. From this starting point, we discuss how synthetic data can facilitate a better understanding of approaches and then use synthetic data in two experiments. We focus on prediction as classification of process instances during execution, solely considering the discrete event behavior. First, we compare different feature representations and reveal that sub-trace occurrence can cover a broader variety of relationships in the data than other representations. Second, we present evidence that the popular strategy of cutting traces to certain prefix lengths to learn prediction models for ongoing\u00a0\u2026", "num_citations": "9\n", "authors": ["644"]}
{"title": "AB-BPM: performance-driven instance routing for business process improvement\n", "abstract": " A fundamental assumption of Business Process Management (BPM) is that redesign delivers new and improved versions of business processes. This assumption, however, does not necessarily hold, and required compensatory action may be delayed until a new round in the BPM life-cycle completes. Current approaches to process redesign face this problem in one way or another, which makes rapid process improvement a central research problem of BPM today. In this paper, we address this problem by integrating concepts from process execution with ideas from DevOps. More specifically, we develop a technique called AB-BPM that offers AB testing for process versions with immediate feedback at runtime. We implemented this technique in such a way that two versions (A and B) are operational in parallel and any new process instance is routed to one of them. The routing decision is made at runtime\u00a0\u2026", "num_citations": "9\n", "authors": ["644"]}
{"title": "System and method of automatic interoperability checking for BPEL\n", "abstract": " In one embodiment the present invention includes a method of determining whether computer processes can interact without deadlocks. The computer processes may be modeled in a process modeling language. The method includes (optionally) generating state diagrams from the processes as modeled by process modeling language, generating step actions from the state diagrams, and executing model checking on the step actions. A computer program may implement the method, and a computer system may execute the computer program. Performing model checking on processes modeled by the process modeling language allows for increased interoperability checking.", "num_citations": "9\n", "authors": ["644"]}
{"title": "Towards an Implementation of the EU Services Directive with Semantic Web Services\n", "abstract": " The EU Services Directive aims at easing the burdens for the EU\u2019s citizens to open up new businesses by providing a single-point-of-contact for the complete business lifecycle. It has to be implemented by all EU member states by the end of 2009. The key technical challenge is the strong dependency between the individual situation of each citizen and the underlying business process: the resulting large variability of possible processes makes it difficult to pre-configure a system for dealing with all required variants. To overcome this bottleneck we present a method and a prototype for automatic service composition, visualization, monitoring, and execution based on Semantic Web Services.", "num_citations": "9\n", "authors": ["644"]}
{"title": "Information gathering for semantic service discovery and composition in business process modeling\n", "abstract": " When creating an execution-level process model today, two crucial problems are how to find the right services (service discovery and composition), and how to make sure they are in the right order (semantic process validation). While isolated solutions for both problems exist, a unified approach has not yet been available. Our approach resolves this shortcoming by gathering all existing information in the process, thus making the basis of semantic service discovery and task composition both broader and more targeted. Thereby we achieve the following benefits: (i) less modeling overhead for semantic annotations to the process, (ii) more information regarding the applicability of services, and (iii) early avoidance of inconsistencies in the interrelation between all process parts. Consequently, new or changed business processes can be realized in IT more efficiently and with fewer errors, thus making\u00a0\u2026", "num_citations": "9\n", "authors": ["644"]}
{"title": "Verification of annotated process models\n", "abstract": " Semantic annotations in business process models enable additional automatic checks to analyze if the way in which a process arranges the activities is correct - i.e., if the process model is consistent with respect to the control flow, the semantic annotations, and the domain ontology-based background knowledge which is now available. This chapter deals specifically with the latter two kinds of checks, which we term verification of annotated process models. This kind of verification assumes that the process is correct in terms of control flow, and proceeds to check whether the process is correct with respect to the semantic annotations and their ontological axiomatization. As such, classical verification techniques become a pre-process to the verification of annotated process models. This form of verification should be able to check questions as the ones raised in the modeling extension requirements from\u00a0\u2026", "num_citations": "8\n", "authors": ["644"]}
{"title": "A conceptual framework for semantic business process configuration\n", "abstract": " In this work, we present a conceptual framework for deriving executable business process models from conceptual business process models, based on the paradigm of Service-Oriented Architectures and Semantic Web technology. The framework yields higher automation in the process configuration phase through the use of semantic annotations of the process activities. Based on the annotations, a more direct link is established between a business view on a process and its execution driven by an IT system. This link enables the derivation of an execution-level model for newly created business process models as well as adaptation of the execution model after reengineering processes, possibly under certain re-design goals (such as quality, cost, execution time, flexibility, or others). The framework includes a component architecture and an algorithm that describes how to combine executable artifacts, such as (Semantic) Web services, in order to find an implementation that matches a given business process model. An extensible set of criteria can be used for validating the composition. 1", "num_citations": "8\n", "authors": ["644"]}
{"title": "Discovering process models for the analysis of application failures under uncertainty of event logs\n", "abstract": " Computer applications, such as servers, databases and middleware, ubiquitously emit execution traces stored in log files. The use of logs for the analysis of application failures is known since the early days of computers. Field data studies have shown that application logs are fraught with uncertainty, i.e., missing or noisy events in the logs. A body of research that has dealt successfully with uncertainty in event logs is process mining from the business process management community, specifically by discovering process models. The literature has shown the value of process mining across several domains, but as yet there is no study that quantifies possible improvements from using process models, and the impact of uncertainty in the context of application failures. This work addresses the use of process mining for detecting failures from application logs. First, process models are discovered from logs; then\u00a0\u2026", "num_citations": "7\n", "authors": ["644"]}
{"title": "Why model-driven engineering fits the needs for blockchain application development\n", "abstract": " Blockchain has attracted a broad range of interests from start-ups, enterprises and governments. A large number of projects have been conducted to explore how to use blockchain to re-architect systems and to build new applications and business models. The application areas for blockchain are diverse, including digital currency, payments, trade finance, asset registry, identity management, and business processes.However, building blockchain applications is challenging for developers. First, blockchain is a new technology with still limited tooling and documentation, so there can be a steep learning curve for developers. According to a survey by Gartner [1], 23% of [relevant surveyed] CIOs said that blockchain requires the newest skills for implementation at various application areas, while 18% said that blockchain technique itself is one of the most difficult. Second, the blockchain is by design an immutable record\u00a0\u2026", "num_citations": "7\n", "authors": ["644"]}
{"title": "External data monitoring using oracles in blockchain-based process execution\n", "abstract": " In blockchain-based process execution, operational aspects of business processes are encoded in smart contracts on blockchains, enabling powerful auditing and compliance capabilities due to the platforms\u2019 trust and integrity guarantees. However, smart contracts are subject to the blockchain\u2019s conceptual limitations, which particularly restrict the real-time integration of external data. This potentially leads to non-compliant runtime behavior of process instances when data updates are missed and conditional constraints are wrongly evaluated. In this paper, we analyze the semantics of established external data interaction patterns in business processes with regards to their support on blockchain platforms. We extend and propose various oracle-based implementation strategies to alleviate conceptual issues independent of the concrete blockchain used, and discuss their properties and merits.", "num_citations": "6\n", "authors": ["644"]}
{"title": "Composing and executing service processes\n", "abstract": " A computer-implemented method for automatically and dynamically composing and executing workflow-based service processes may include receiving a request, the request including a user-selected service type, guided by one or more rules for questionnaire creation, dynamically generating a sequence of one or more electronic inquiries in accordance with the user-selected service type, receiving information based on the sequence of the one or more electronic inquiries, based on the information received, creating a goal for the request by constructing logical state representations of a current state constituting a pre-condition of the goal and of a target state constituting a post-condition of the goal and generating a service process by determining a sequence of services which together fulfill the goal, where the services are selected from a plurality of services such that pre-conditions and post-conditions associated\u00a0\u2026", "num_citations": "6\n", "authors": ["644"]}
{"title": "Business Process Modeling, Task Management, and the Semantic Link.\n", "abstract": " In the current paper we describe how to combine web services and task patterns in a joint infrastructure. The central intention is to make up executable business processes by including generic pattern based web services which establish a relation between the service infrastructure and task management. This approach significantly increases the flexibility of process modeling due to the flexible definition and introduction of new task patterns and their incorporation in the web service framework. Semantic technologies are the common ground which enables the combination of the two approaches. Thus gaps in service compositions can be closed and later completed by automated services if a demand is asserted.", "num_citations": "6\n", "authors": ["644"]}
{"title": "Every apprentice needs a master: Feedback-based effectiveness improvements for process model matching\n", "abstract": " Process models are a central element of modern business process management technology. When adopting such technology, organizations inevitably establish process model collections which, depending on the degree of adoption, can reach sizes of thousands of models. Process model matching techniques are intended to assist experts in the management of such large collections, eg, in querying the collections and in comparing process models. Yet, as demonstrated in comparative evaluations, existing techniques struggle to achieve a high effectiveness on real-world datasets, limiting their practical applicability. This is partly due to these techniques being fully automated and relying on universal knowledge bases that insufficiently represent the domain semantics of model collections. To increase effectiveness and to progress on the path to practical applicability, we pursue the idea of integrating expert\u00a0\u2026", "num_citations": "5\n", "authors": ["644"]}
{"title": "Behavioral classification of business process executions at runtime\n", "abstract": " Current automated methods to identify erroneous or malicious executions of a business process from logs, metrics, or other observable effects are based on detecting deviations from the normal behavior of the process. This requires a \u201csingle model of normative behavior\u201d: the current execution either conforms to that model, or not. In this paper, we propose a method to automatically distinguish different behaviors during the execution of a process, so that a timely reaction can be triggered, e.g., to mitigate the risk of an ongoing attack. The behavioral classes are learned from event logs of a process, including branching probabilities and event frequencies. Using this method, harmful or problematic behavior can be identified during or even prior to its occurrence, raising alarms as early as undesired behavior is observable. The proposed method has been implemented and evaluated on a set of artificial logs\u00a0\u2026", "num_citations": "5\n", "authors": ["644"]}
{"title": "Automating Form-based Processes through Annotation\n", "abstract": " Despite all efforts to support processes through IT, processes based on paper forms are still prevalent. In this paper, we propose a cost-effective and non-technical approach to automate form-based processes. The approach builds on several types of annotations: to help collect and distribute information for form fields; to choose appropriate process execution paths; and to support email distribution or approval for filled forms. We implemented the approach in a prototype, called EzyForms. We conducted a user study with 15 participants, showing that people with little technical background were able to automate the existing form-based processes efficiently.", "num_citations": "5\n", "authors": ["644"]}
{"title": "Efficient logging for blockchain applications\n", "abstract": " Second generation blockchain platforms, like Ethereum, can store arbitrary data and execute user-defined smart contracts. Due to the shared nature of blockchains, understanding the usage of blockchain-based applications and the underlying network is crucial. Although log analysis is a well-established means, data extraction from blockchain platforms can be highly inconvenient and slow, not least due to the absence of logging libraries. To close the gap, we here introduce the Ethereum Logging Framework (ELF) which is highly configurable and available as open source. ELF supports users (i) in generating cost-efficient logging code readily embeddable into smart contracts and (ii) in extracting log analysis data into common formats regardless of whether the code generation has been used during development. We provide an overview of and rationale for the framework's features, outline implementation details, and demonstrate ELF's versatility based on three case studies from the public Ethereum blockchain.", "num_citations": "4\n", "authors": ["644"]}
{"title": "Shadow testing for business process improvement\n", "abstract": " A fundamental assumption of improvement in Business Process Management (BPM) is that redesigns deliver refined and improved versions of business processes. These improvements can be validated online through sequential experiment techniques like AB Testing, as we have shown in earlier work. Such approaches have the inherent risk of exposing customers to an inferior process version during the early stages of the test. This risk can be managed by offline techniques like simulation. However, offline techniques do not validate the improvements because there is no user interaction with the new versions. In this paper, we propose a middle ground through shadow testing, which avoids the downsides of simulation and direct execution. In this approach, a new version is deployed and executed alongside the current version, but in such a way that the new version is hidden from the customers and\u00a0\u2026", "num_citations": "4\n", "authors": ["644"]}
{"title": "Method and system for automatically generating executable processes from inter-organizational workflows\n", "abstract": " A method and system to automatically translate a definition of a choreography workflow process to an executable process are provided. The method includes processing a collaboration element from the definition, mapping the collaboration element to an executable element based on a knowledge database system that contains the collaboration element and the corresponding executable element and mapping the collaboration element to the executable element statically if the corresponding executable element is unavailable in the knowledge database system.", "num_citations": "4\n", "authors": ["644"]}
{"title": "Semantic web services fundamentals\n", "abstract": " The research area of Semantic Web Services investigates the annotation of services, typically in a SOA, with a precise mathematical meaning in a formal ontology. These annotations allow a higher degree of automation. The last decade has seen a wide proliferation of such approaches, proposing different ontology languages, and paradigms for employing these in practice. The next chapter gives an overview of these approaches. In the present chapter, we provide an understanding of the fundamental techniques, from Artificial Intelligence and Databases, on which they are built. We give a concise, ontology-language independent, overview of the techniques most frequently used to automate service discovery and composition.", "num_citations": "4\n", "authors": ["644"]}
{"title": "Service functionality and behavior\n", "abstract": " One of the most essential parts of every service description language is to provide suitable means for describing the following three aspects of services: (1) what the service does, i.e., which functionality it provides, (2) where the service resides, i.e., where it can be accessed and via which means it can be consumed, and (3) how the service behaves, i.e., how to interact with the service in order to properly consume it. These are subject to various existing and well established standards. In order to capture these aspects in an all-embracing manner, USDL defines three separate modules \u2014the Functional, the Technical, and the Interaction Module \u2014 that each cover one aspect and together provide a holistic description of the functionality and behavior of services. The modules are commonly designed to provide a unifying description structure that abstracts from details and allows for the re-use and integration of\u00a0\u2026", "num_citations": "4\n", "authors": ["644"]}
{"title": "Process Mining on Blockchain Data: a Case Study of Augur\n", "abstract": " Through its smart contract capabilities, blockchain has become a technology for automating cross-organizational processes on a neutral platform. Process mining has emerged as a popular toolbox for understanding processes and how they are executed in practice. While researchers have recently created techniques for the challenging task of extracting authoritative data from blockchains to facilitate the analysis of blockchain applications using process mining, as yet there has been no clear evaluation of the usefulness of process mining on blockchain data. With this paper, we close that gap with an in-depth case study of process mining on the popular Ethereum application Augur, a prediction and betting marketplace. We were able to generate value-adding insights for application-redesign and security analysis, as validated by the application\u2019s chief architect and revealed blind spots in Augur\u2019s white paper.", "num_citations": "3\n", "authors": ["644"]}
{"title": "Controlled flexibility in blockchain-based collaborative business processes\n", "abstract": " Blockchain technology enables the execution of collaborative business processes involving mutually untrusted parties. Existing tools allow such processes to be modeled using high-level notations and compiled into smart contracts that can be deployed on blockchain platforms. However, these tools do not provide mechanisms to cope with the flexibility requirements inherent to open and dynamic collaboration environments. In particular, existing tools adopt a static role binding approach wherein roles are bound to actors upfront when a process instance is created. Also, these tools do not allow participants to collectively make choices regarding alternative sub-processes or branches in the process model, at runtime. This paper presents a model for dynamic binding of actors to roles in collaborative processes and an associated binding policy specification language. The proposed language is endowed with a Petri\u00a0\u2026", "num_citations": "3\n", "authors": ["644"]}
{"title": "Blockchain and Services\u2013Exploring the Links\n", "abstract": " Blockchain is a novel distributed ledger technology which has attracted a wide range of interests for building the next generation of applications. The broad range of blockchain applications is made possible by so-called smart contracts, which transform a blockchain system into a general compute platform. As a new paradigm and technology platform in the integration space, this bears the question to which degree there is a connection to services, and in how far lessons learned on services can be applied to Blockchain.               In the talk, I explored four different facets of this topic, as follows. First, application-level service interfaces for interaction with blockchain-based applications enable easy integration with existing infrastructure. Second, service composition can be achieved through smart contracts, and enable different approaches to orchestrations and choreographies. Third, Blockchain-aaS offerings\u00a0\u2026", "num_citations": "3\n", "authors": ["644"]}
{"title": "AB Testing for process versions with contextual multi-armed bandit algorithms\n", "abstract": " Business process improvement ideas can be validated through sequential experiment techniques like AB Testing. Such approaches have the inherent risk of exposing customers to an inferior process version, which is why the inferior version should be discarded as quickly as possible. In this paper, we propose a contextual multi-armed bandit algorithm that can observe the performance of process versions and dynamically adjust the routing policy so that the customers are directed to the version that can best serve them. Our algorithm learns the best routing policy in the presence of complications such as multiple process performance indicators, delays in indicator observation, incomplete or partial observations, and contextual factors. We also propose a pluggable architecture that supports such routing algorithms. We evaluate our approach with a case study. Furthermore, we demonstrate that our\u00a0\u2026", "num_citations": "3\n", "authors": ["644"]}
{"title": "Rollback mechanisms for cloud management APIs using AI planning\n", "abstract": " Human-induced faults play a large role in systems reliability. In cloud platforms, system administrators may inadvertently make catastrophic mistakes, like deleting a virtual disk with important data. Providing rollback for cloud operations can reduce the severity and impact of such mistakes, by allowing to revert to a known, good state. However, in the context of cloud management this is non-trivial, since cloud consumers only have limited visibility and indirect control. In this paper, we present a scalable approach to rollback operations that change the state of a system on proprietary cloud platforms. In our previous work, we provided a system that augments cloud APIs and provides rollback operation using an AI planner. In this paper, we build upon our previous work, but parallelize the rollback plan generation based on characteristics unique to rollback scenario. Furthermore, we introduce a distributed anytime\u00a0\u2026", "num_citations": "3\n", "authors": ["644"]}
{"title": "Scalable rollback for cloud operations using AI planning\n", "abstract": " Human-induced faults play a large role in systems reliability. In cloud platforms, system administrators may inadvertently make catastrophic mistakes, like deleting a virtual disk with important data. Providing rollback for cloud operations can reduce the severity and impact of such mistakes by allowing to revert back to a known, good state. In this paper, we present a scalable approach to rollback operations that change state of a system on proprietary cloud platforms. In our previous work, we provided a system that augments cloud APIs and provides roll-back operation using an AI planner. However, the previous system eventually suffers from the exponential complexity inherent to AI planning tasks. In this paper, we divide and parallelize rollback plan generation, based on characteristics unique to the rollback scenario. Through experimental evaluation, we show that this approach scales better than the previous, naive\u00a0\u2026", "num_citations": "3\n", "authors": ["644"]}
{"title": "Modeling and analyzing cooperation parameters in a multi-agent system\n", "abstract": " In a multi-agent system, an environment imposes tasks on a group of agents. Upon successful completion, the agents get rewarded. Any interesting environment requires the agents to decide, which tasks they want to work on. By modeling a multi-agent system statistically and exploring the model, we can gain deep insights into the way such decisions should be made. In preliminary work, a statistical model for a three-agent system has been developed. Two of the agents receive tasks from the environment, that require only their attention. The third agent, however, receives tasks that need the collaboration of all the three agents. When the model was examined, there were three major simplifications: the reward for the shared task was divided between the participants by fixed ratios, an agent could only account for the other agents\u2019 gains in a certain way, and decommitment from a shared task was not communicated explicitly. This work analyzes how the mentioned simplifications impact the rewards. It also takes a close look at the statistical model and the structure of the resulting functions. A bi-product of the analysis is the conclusion that traditional approaches to take the other agents\u2019 rewards into account are in general suboptimal.", "num_citations": "3\n", "authors": ["644"]}
{"title": "BPM: Foundations, Engineering, Management\n", "abstract": " This paper reports on the introduction of a track system at the BPM conference series and the experiences made during the organization of BPM 2018, the first issue implementing the track system. By introducing dedicated tracks for foundations, engineering, and management, with dedicated evaluation criteria and program committees, the BPM steering committee aims at providing a fair chance for acceptance to all submissions to the conference. By introducing a management track, the conference reaches out to the management community, which investigates phenomena in business process management from a non-technical perspective that complements the technical orientation of traditional BPM papers. We elaborate on the background of and motivation for the track system, and we discuss the lessons learned in the first iteration of the track structure at BPM 2018.", "num_citations": "2\n", "authors": ["644"]}
{"title": "Predicting the performance of privacy-preserving data analytics using architecture modelling and simulation\n", "abstract": " Privacy-preserving data analytics is an emerging technology which allows multiple parties to perform joint data analytics without disclosing source data to each other or a trusted third-party. A variety of platforms and protocols have been proposed in this domain. However, these systems are not yet widely used, and little is known about them from a software architecture and performance perspective. Here we investigate the feasibility of using architectural performance modelling and simulation tools for predicting the performance of privacy-preserving data analytics systems. We report on a lab-based experimental study of a privacy-preserving credit scoring application that uses an implementation of a partial homomorphic encryption scheme. The main experiments are on the impact of analytic problem size (number of data items and number of features), and cryptographic key length for the overall system performance\u00a0\u2026", "num_citations": "2\n", "authors": ["644"]}
{"title": "Checking undoability of an API-controlled computing system\n", "abstract": " The present invention generally relates to an application program interface (API)-controlled computing system (100). A computer-implemented method is proposed for determining undoability of an action to be conducted in the API-controlled computing system (100) represented by a formal domain model. A set of pre-states of the API-controlled computing system (100) for the action are obtained. A set of post-states of the API-controlled computing system (100) corresponding to each pre-state in the set of pre-states for the action are obtained. The method automatically determines if each post-state in each set of post-states of the API-controlled computing system can be undone to its pre-state in the set of pre-states by using a reachability task for the post-state and its pre-state. The action to be conducted in the API-controlled computing system (100) is undoable if each post-state in each set of post-states of the API\u00a0\u2026", "num_citations": "2\n", "authors": ["644"]}
{"title": "Automatic Resource Allocation in Business Processes: A Systematic Literature Survey\n", "abstract": " For delivering products or services to their clients, organizations execute manifold business processes. During such execution, upcoming process tasks need to be allocated to internal resources. Resource allocation is a complex decision-making problem with high impact on the effectiveness and efficiency of processes. A wide range of approaches was developed to support research allocation automatically. This systematic literature survey provides an overview of approaches and categorizes them regarding their resource allocation goals and capabilities, their use of models and data, their algorithmic solutions, and their maturity. Rule-based approaches were identified as dominant, but heuristics and learning approaches also play a relevant role.", "num_citations": "1\n", "authors": ["644"]}
{"title": "Objectivity in Process Descriptions\n", "abstract": " Process models are central artifacts for many business process management activities. They are often manually crafted, which means that modelers capture many details in the way they consider appropriate\u2013but the problem also applies to discovered models. We, therefore, argue that we need objectivity of granularity level, objectivity of perspective, and objectivity of terminology to enable broader use of models, like comparing processes. This is currently not available, which is a roadblock for automatic analysis, empirical research, and generally use for purposes that differ from the initial model creation purpose.", "num_citations": "1\n", "authors": ["644"]}
{"title": "Enabling financing in agricultural supply chains through blockchain\n", "abstract": " Global agricultural industries produce the food, feed, fiber, and many other products that are essential for feeding and clothing the world\u2019s population. In 2018, these combined industries had a total production value of US $3.4 trillion (World Bank, 2019). In a globalized world, the production, processing, and distribution methods of agri-commodities, such as crops and livestock, have created long and complex supply chains with networks of farmers, processors, traders, logistics providers, financiers, consumers, and many others, each with its own, sometimes competing, interests.In a typical agricultural supply chain, farmers provide their harvested crop to a first buyer (exporter, trader, processor, feedlot) but do not receive payment until much later. Commodity buyers usually have limited funds, so that they need financing before they can pay the farmers, which can take weeks to months. Thus, the farmer has to bear\u00a0\u2026", "num_citations": "1\n", "authors": ["644"]}
{"title": "Business Process Execution on a Blockchain Platform\n", "abstract": " Methods and apparatus for utilising a distributed ledger, such as the Ethereum blockchain, to monitor and execute a process instance (170) between parties that may not trust each other. The proposed methods and apparatus integrate blockchain into the choreography of processes in such a way that no central authority is needed, but trust maintained. The combination of a set of components (a translator 160, a process instance 170 and a trigger/interface 120, 130) allows for monitoring or coordination of business processes on the blockchain (150) and off the blockchain (140).", "num_citations": "1\n", "authors": ["644"]}
{"title": "Optimising architectures for performance, cost, and security\n", "abstract": " Deciding on the optimal architecture of a software system is difficult, as the number of design alternatives and component interactions can be overwhelmingly large. Adding security considerations can make architecture evaluation even more challenging. Existing model-based approaches for architecture optimisation usually focus on performance and cost constraints. This paper proposes a model-based architecture optimisation approach that advances the state-of-the-art by adding security constraints. The proposed approach is implemented in a prototype tool, by extending Palladio Component Model (PCM) and PerOpteryx. Through a laboratory-based evaluation study of a multi-party confidential data analytics system, we show how our tool discovers secure architectural design options on the Pareto frontier of cost and performance.", "num_citations": "1\n", "authors": ["644"]}
{"title": "Classification of log data\n", "abstract": " This disclosure relates to analyzing log data of a system. This comprises evaluating a first graph model with multiple log events in the log data. The first graph model comprises a first set of nodes connected by a first set of edges representing a first behaviour. A processor determines a first correspondence value based on the first graph model and indicative of a correspondence between the multiple log events and the first behaviour. The processor repeats the steps of evaluating the first graph model for one or more further graph models representing one or more further behaviors and determining the first correspondence value to determine one or more further correspondence values. The processor finally determines a classification of the multiple log events as representing one of the behaviors based on the correspondence values. The use of multiple graph models allows a more granular classification than binary\u00a0\u2026", "num_citations": "1\n", "authors": ["644"]}
{"title": "Business Process Management: 16th International Conference, BPM 2018, Sydney, NSW, Australia, September 9\u201314, 2018, Proceedings\n", "abstract": " This book constitutes the proceedings of the 16th International Conference on Business Process Management, BPM 2018, held in Sydney, Australia, in September 2018. The 27 papers presented in this volume were carefully reviewed and selected from 140 submissions. They were organized in topical sections named: reflections on BPM; concepts and methods in business process modeling and analysis; foundations of process discovery; alignments and conformance checking; process model analysis and machine learning; digital process innovation; and method analysis and selection.", "num_citations": "1\n", "authors": ["644"]}
{"title": "Technical report: Anomaly detection for a critical industrial system using context logs and metrics\n", "abstract": " Recent advances in contextual anomaly detection attempt to combine resource metrics and event logs to uncover unexpected system behaviors and malfunctions at runtime. These techniques are highly relevant for critical software systems, where monitoring is often mandated by international standards and guidelines. In this technical report, we analyze the effectiveness of a metrics-logs contextual anomaly detection technique in a middleware for Air Traffic Control systems. Our study addresses the challenges of applying such techniques to a new case study with a dense volume of logs, and finer monitoring sampling rate. We propose an automated abstraction approach to infer system activities from dense logs and use regression analysis to infer the anomaly detector. We observed that the detection accuracy is impacted by abrupt changes in resource metrics or when anomalies are asymptomatic in both resource metrics and event logs. Guided by our experimental results, we propose and evaluate several actionable improvements, which include a change detection algorithm and the use of time windows on contextual anomaly detection.This technical report accompanies the paper \u201cContextual Anomaly Detection for a Critical Industrial System based on Logs and Metrics\u201d[1] and provides further details on the analysis method, case study and experimental results.", "num_citations": "1\n", "authors": ["644"]}
{"title": "Control Flow Information Analysis in Process Model Matching Techniques\n", "abstract": " Online Appendix to: \"Analyzing Control Flow Information to Improve the Effectiveness of Process Model Matching Techniques\" by the same authors.", "num_citations": "1\n", "authors": ["644"]}
{"title": "Formal Analysis of Negotiation Protocols for Task Allocation\n", "abstract": " To formally understand the complex behaviors of negotiating agents so as to design appropriate mechanisms to approximate optimal performance, we have constructed a unified framework to model and analyze the task allocation problem in agent societies with different objectives. This OAR framework includes three aspects: agent\u2019s objective (O), its negotiation attitude (A) and the reward splitting (R) among agents who cooperate to accomplish tasks. An agent\u2019s objective can span the spectrum from totally self-interested to completely cooperative, and there can be a mixture of agents with varying objectives in one agent society. This work focuses on understanding how these different aspects interact in order to achieve individual agent\u2019s objective and to produce effective system performance as well. Using the OAR framework, we develop a closed form statistical analysis to mathematically analyze the interaction between attitude parameters and reward splitting and their relationship with different objective", "num_citations": "1\n", "authors": ["644"]}
{"title": "Task composition\n", "abstract": " Automatic Web service composition (WSC) is a key component of flexible SOAs - inside the business process setting investigated in this work and in general. In the specific context of this work,WSC is required for task composition, i.e., automatically composingWeb services and other executable artifacts to construct an implementation for a process task. Further, as mentioned in Section 4.7, task composition can make suggestions how inconsistencies in annotated process models may be resolved.", "num_citations": "1\n", "authors": ["644"]}