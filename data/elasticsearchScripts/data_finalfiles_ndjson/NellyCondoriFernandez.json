{"title": "Testar: Tool support for test automation at the user interface level\n", "abstract": " Testing applications with a graphical user interface (GUI) is an important, though challenging and time consuming task. The state of the art in the industry are still capture and replay tools, which may simplify the recording and execution of input sequences, but do not support the tester in finding fault-sensitive test cases and leads to a huge overhead on maintenance of the test cases when the GUI changes. In earlier works the authors presented the TESTAR tool, an automated approach to testing applications at the GUI level whose objective is to solve part of the maintenance problem by automatically generating test cases based on a structure that is automatically derived from the GUI. In this paper they report on their experiences obtained when transferring TESTAR in three different industrial contexts with decreasing involvement of the TESTAR developers and increasing participation of the companies when\u00a0\u2026", "num_citations": "74\n", "authors": ["597"]}
{"title": "Usability evaluation of multi-device/platform user interfaces generated by model-driven engineering\n", "abstract": " Nowadays several Computer-Aided Software Engineering environments exploit Model-Driven Engineering (MDE) techniques in order to generate a single user interface for a given computing platform or multi-platform user interfaces for several computing platforms simultaneously. Therefore, there is a need to assess the usability of those generated user interfaces, either taken in isolation or compared to each other. This paper describes an MDE approach that generates multi-platform graphical user interfaces (eg, desktop, web) that will be subject to an exploratory controlled experiment. The usability of user interfaces generated for the two mentioned platforms and used on multiple display devices (ie, standard size, large, and small screens) has been examined in terms of satisfaction, effectiveness and efficiency. An experiment with a factorial design for repeated measures was conducted for 31 participants, ie\u00a0\u2026", "num_citations": "47\n", "authors": ["597"]}
{"title": "Evaluating the TESTAR tool in an industrial case study\n", "abstract": " [Context] Automated test case design and execution at the GUI level of applications is not a fact in industrial practice. Tests are still mainly designed and executed manually. In previous work we have described TESTAR, a tool which allows to set-up fully automatic testing at the GUI level of applications to find severe faults such as crashes or non-responsiveness.[Method] This paper aims at the evaluation of TESTAR with an industrial case study. The case study was conducted at SOFTEAM, a French software company, while testing their Modelio SaaS system, a cloud-based system to manage virtual machines that run their popular graphical UML editor Modelio.[Goal] The goal of the study was to evaluate how the tool would perform within the context of SOFTEAM and on their software application. On the other hand, we were interested to see how easy or difficult it is to learn and implant our academic prototype within\u00a0\u2026", "num_citations": "30\n", "authors": ["597"]}
{"title": "What do we know about the defect types detected in conceptual models?\n", "abstract": " In Model-Driven Development (MDD), defects are managed at the level of conceptual models because the other artefacts are generated from them, such as more refined models, test cases and code. Although some studies have reported on defect types at model level, there still does not exist a clear and complete overview of the defect types that occur at the abstraction level. This paper presents a systematic mapping study to identify the model defect types reported in the literature and determine how they have been detected. Among the 282 articles published in software engineering area, 28 articles were selected for analysis. A total of 226 defects were identified, classified and their results analysed. For this, an appropriate defect classification scheme was built based on appropriate dimensions for models in an MDD context.", "num_citations": "29\n", "authors": ["597"]}
{"title": "Towards a proposal to capture usability requirements through guidelines\n", "abstract": " Usability is a quality attribute related to effectiveness, efficiency and satisfaction of the end-users when they interact with a system. There are sound usability design guidelines that aim to optimize the system usability. However, it is difficult to work with them if there is not a previous background in the Human-Computer Interaction area. Moreover, in the Software Engineering community, there are not specific methods to capture usability requirements. Usually, usability requirements are gathered with other non-functional requirements such as security or reliability, even though the goals of these non-functional requirements are not the same as the goals of usability. This problem arises when we aim to include the usability requirements capture in a Model Driven Development (MDD) process, where an effective capture technique with an unambiguous notation is needed to represent these requirements. In this paper, we\u00a0\u2026", "num_citations": "28\n", "authors": ["597"]}
{"title": "Towards the automated generation of abstract test cases from requirements models\n", "abstract": " In a testing process, the design, selection, creation and execution of test cases is a very time-consuming and error-prone task when done manually, since suitable and effective test cases must be obtained from the requirements. This paper presents a model-driven testing approach for conceptual schemas that automatically generates a set of abstract test cases, from requirements models. In this way, tests and requirements are linked together to find defects as soon as possible, which can considerably reduce the risk of defects and project reworking. The authors propose a generation strategy which consists of: two meta-models, a set of transformations rules which are used to generate a Test Model, and the Abstract Test Cases from an existing approach to communication-oriented Requirements Engineering; and an algorithm based on Breadth-First Search. A practical application of our approach is included.", "num_citations": "23\n", "authors": ["597"]}
{"title": "Mutation operators for UML class diagrams\n", "abstract": " Mutation Testing is a well-established technique for assessing the quality of test cases by checking how well they detect faults injected into a software artefact (mutant). Using this technique, the most critical activity is the adequate design of mutation operators so that they reflect typical defects of the artefact under test. This paper presents the design of a set of mutation operators for Conceptual Schemas (CS) based on UML Class Diagrams (CD). In this paper, the operators are defined in accordance with an existing defects classification for UML CS and relevant elements identified from the UML-CD meta-model. The operators are subsequently used to generate first order mutants for a CS under test. Finally, in order to analyse the usefulness of the mutation operators, we measure some basic characteristics of mutation operators with three different CSs under test.", "num_citations": "22\n", "authors": ["597"]}
{"title": "An empirical approach for evaluating the usability of model-driven tools\n", "abstract": " MDD tools are very useful to draw conceptual models and to automate code generation. Even though this would bring many benefits, wide adoption of MDD tools is not yet a reality. Various research activities are being undertaken to find why and to provide the required solutions. However, insufficient research has been done on a key factor for the acceptance of MDD tools: usability. With the help of end-users, this paper presents a framework to evaluate the usability of MDD tools. The framework will be used as a basis for a family of experiments to get clear insights into the barriers to usability that prevent MDD tools from being widely adopted in industry. To illustrate the applicability of our framework, we instantiated it for performing a usability evaluation of a tool named INTEGRANOVA. Furthermore, we compared the outcome of the study with another usability evaluation technique based on ergonomic criteria.", "num_citations": "21\n", "authors": ["597"]}
{"title": "A systematic literature review on service description methods\n", "abstract": " [Context and Motivation] As a result of recent trends in enhancing Service Oriented Requirement Engineering activities, a number of service description methods have been proposed for describing services. The availability of different service description methods can give developers a range of options to choose from so that they can have an appropriate description method that fits best their services. [Question/problem] But there is neither holistic information on service description methods nor a clear understanding of the strengths and weaknesses of each service description method. The aim of this paper is to identify problems of service descriptions that have been researched so far, and the techniques or methods available to tackle these problems. [Principle ideas/results] Thus, to gather this relevant information available in the literature, a systematic review was conducted. A total of 191\u00a0\u2026", "num_citations": "20\n", "authors": ["597"]}
{"title": "Unit testing tool competition\n", "abstract": " This paper describes the Java Unit Testing Tool Competition that ran in the context of the Search Based Software Testing (SBST) workshop at ICST 2013. It describes the main objective of the benchmark, the Java classes that were selected, the data that was collected, the tools that were used for data collection, the protocol that was carried out to execute the benchmark and how the final benchmark score for each participating tool can be calculated.", "num_citations": "19\n", "authors": ["597"]}
{"title": "Updating oo-method function points\n", "abstract": " In the framework of function points associated to OO-method conceptual models (OOmFP), measuring the functional size of an information system in a precise and automatic way starting from its conceptual model is today a reality. The industrial application of the OO-Method modelling tools has resulted in their evolution, incorporating support for new functional elements. The present work shows the measurement rules associated to the new functional elements supported by OO-Method conceptual models, applying these rules in tools that generate executable code from OO-Method conceptual models. Finally, a comparative analysis is performed over OO-Method models of real systems. The comparative analysis shows the impact of new rules on the functional size measurement.", "num_citations": "15\n", "authors": ["597"]}
{"title": "Evaluating the productivity and reproducibility of a measurement procedure\n", "abstract": " This paper reports an empirical study that used computer science major students as experimental subjects to evaluate the productivity and the reproducibility of RmFFP. This is a functional size measurement procedure designed according to the COSMIC-FFP method for object-oriented systems that are specified using the OO-Method approach. The results show that the productivity of RmFFP is acceptable when compared to other procedures found in the literature. Furthermore, RmFFP produces reproducible functional size assessments.", "num_citations": "15\n", "authors": ["597"]}
{"title": "HAPPYNESS: an emotion-aware QoS assurance framework for enhancing user experience\n", "abstract": " In this paper, we introduce the idea of exploiting the emotional information as a key element in providing personalized context-aware software services and consequently enhancing quality of User Experience(UX). We argue that emotional measurements can be integrated in Quality of Service (QoS) assurance frameworks. The idea builds on the strength of technological advances in emotion measurement tools, nonobtrusive and ubiquitous monitoring technology.", "num_citations": "14\n", "authors": ["597"]}
{"title": "Design of an adaptive persuasive mobile application for stimulating the medication adherence\n", "abstract": " There is a variety of persuasive applications that have been proposed in different application domains like well-being, health-care and e-commerce. However many have been designed largely for a general audience. Designers of these technologies may achieve more success if applications consider contextual information of the user for making them more adaptable. This paper is an proposal for improving medication adherence by sending personalized persuasive message and reinforcing feedback. To do this, we propose an adaptive services oriented architecture, and a persuasion strategy defined for selecting the appropriate persuasiveness level according to contextual information such as time and stress. Stress measure is derived from physiological data (e.g. Electro Dermal Activity, heart rate, temperature), which is collected through a wearable wireless multi-sensor device.", "num_citations": "14\n", "authors": ["597"]}
{"title": "Evaluating applicability of combinatorial testing in an industrial environment: A case study\n", "abstract": " Case studies for evaluating tools in software engineering are powerful. Although they cannot achieve the scientific rigour of formal experiments, the results can provide sufficient information to help companies judge if a specific technology being evaluated will benefit their organization.", "num_citations": "14\n", "authors": ["597"]}
{"title": "An empirical study on the likelihood of adoption in practice of a size measurement procedure for requirements specification\n", "abstract": " Software size is one of the essential parameters of the estimation models used for project management purposes, and therefore being able to measure the size of software at an early stage of the development lifecycle is in theory of crucial importance. However, although some proposals for functional size measurement in industry do currently exist, there is as yet little validating evidence for such proposals. This paper describes an empirical study, based on the method evaluation model (MEM), of users' perceptions resulting from actual experience of use of a measurement procedure called RmFFP. This procedure was designed in accordance with the COSMIC-FFP standard method for estimating the functional size of object-oriented systems from requirements specifications obtained in the context of the OO-Method approach. In addition, an analysis of MEM relationships was also carried out using the regression\u00a0\u2026", "num_citations": "14\n", "authors": ["597"]}
{"title": "Calidad en modelos conceptuales: un an\u00e1lisis multidimensional de modelos cuantitativos basados en la ISO 9126\n", "abstract": " Resumen La ISO 9126 [3] es un est\u00e1ndar internacional para evaluar la calidad del software en base a un conjunto de caracter\u00edsticas y sub-caracter\u00edsticas de la calidad. Cada sub-caracter\u00edstica consta de un conjunto de atributos que son medidos por una serie de m\u00e9tricas. Estas m\u00e9tricas miden artefactos obtenidos en etapas tard\u00edas del desarrollo de software, aumentando el costo de detecci\u00f3n y correcci\u00f3n de errores. Por esta raz\u00f3n, en la literatura ha surgido un mayor inter\u00e9s por la definici\u00f3n de m\u00e9tricas que pretenden evaluar una o varias de las caracter\u00edsticas de calidad definidas en el est\u00e1ndar ISO 9126, en etapas tempranas del desarrollo de software. En el presente art\u00edculo se revisa un conjunto representativo de m\u00e9tricas para medir modelos conceptuales y se identifican las sub-caracter\u00edsticas de calidad a las que contribuye cada m\u00e9trica. Adem\u00e1s, se presentan los resultados de un an\u00e1lisis llevado a cabo\u00a0\u2026", "num_citations": "13\n", "authors": ["597"]}
{"title": "Change impact analysis of indirect goal relations: Comparison of NFR and TROPOS approaches based on industrial case study\n", "abstract": " Along with recent trends in using goal-oriented approaches for requirements engineering and system development activities, various techniques for managing adaptable stakeholder goals and requirements are proposed and used by the software engineering industry. Enterprise Architecture (EA) models which tie business goals, business processes and supporting IT systems are also expected to support reasoning on impact of changes on goals and requirements. Unfortunately common Enterprise Architecture (EA) frameworks like The Open Group Architecture Framework (TOGAF) and EA modeling languages like Archimate lacks support for analyzing goal and requirement change impacts in EA goal models. This paper reports an effort to fill this gap by extending a metamodel of already existing requirements and goal modeling language. The extension adds semantically reach definitions for goal influence\u00a0\u2026", "num_citations": "12\n", "authors": ["597"]}
{"title": "CoSTest: A tool for validation of requirements at model level\n", "abstract": " We present CoSTest, a tool that supports the validation of Conceptual Schemas by using testing. The tool implements techniques for transforming instantiations from a Requirements Model into test case implementations by supporting a Model-driven architecture.", "num_citations": "9\n", "authors": ["597"]}
{"title": "Effectiveness assessment of an early testing technique using model-level mutants\n", "abstract": " While modern software development technologies enhance the capabilities of model-based/driven development, they introduce challenges for testers such as how to perform early testing at model level to ensure the quality of the model. In this context, we have developed an early testing technique supported by the CoSTest tool to validate requirements at model level. In this paper we describe an empirical evaluation of CoSTest with respect to its effectiveness in terms of its fault detection and test suite adequacy. This evaluation is carried out by model-level mutation testing using first order mutants (created by injection of a single fault) and high order mutants (containing more than one fault) with seven conceptual schemas (of different sizes) that represent the functionality of different software systems in different domains. Our findings show that the tests generated by CoSTest are effective at killing a large number of\u00a0\u2026", "num_citations": "9\n", "authors": ["597"]}
{"title": "Evaluating the fittest automated testing tools: An industrial case study\n", "abstract": " This paper aims at evaluating a set of automated tools of the FITTEST EU project within an industrial case study. The case study was conducted at the IBM Research lab in Haifa, by a team responsible for building the testing environment for future development versions of an IBM system management product. The main function of that product is resource management in a networked environment. This case study has investigated whether current IBM Research testing practices could be improved or complemented by using some of the automated testing tools that were developed within the FITTEST EU project. Although the existing Test Suite from IBM Research (TSibm) that was selected for comparison is substantially smaller than the Test Suite generated by FITTEST (TSfittest), the effectiveness of TSfittest, measured by the injected faults coverage is significantly higher (50% vs 70%). With respect to efficiency, by\u00a0\u2026", "num_citations": "9\n", "authors": ["597"]}
{"title": "Systematic Testing of Web Applications with the Classification Tree Method.\n", "abstract": " Testing of user interfaces of web applications has not yet received enough attention. One reason might be the lack of appropriate methodology and tool support. In this paper, we present a systematic approach for test design, implementation and execution of web applications. Instead of error prone capture and replay tools, we use Selenium in a custom framework to extract details of the system under test automatically. The classification tree method in terms of combinatorial test is then used for a systematic test design. Obtained test cases are executed using our custom framework again. This allows for a both, flexible and systematic test approach. We evaluate our approach and framework using a set of experiments. Our results indicate the applicability of approach and tool.", "num_citations": "8\n", "authors": ["597"]}
{"title": "Combinatorial testing tool learnability in an industrial environment\n", "abstract": " [Context] Numerous combinatorial testing techniques are available for generating test cases. However, many of them are never used in practice. [Objective] Considering that learn ability plays a vital role in initial adoption or rejection of a technology, in this paper we aim to investigate the learnability of a combinatorial testing tool in an industrial environment. [Method] A case study research method was designed and conducted, by including i) the definition of learnability measures for test cases models built using a combinatorial testing tool. ii) A training program was also implemented. iii) Qualitative and quantitative evaluation based on a three-level strategy was carried out (Reaction, Learning, and Performance). [Results] At the first level, the tool was perceived as easy to learn by the trainees (from a five-point ordinal scale). However, at the second level, during hands-on learning, it changed slightly: According to the\u00a0\u2026", "num_citations": "8\n", "authors": ["597"]}
{"title": "Towards a Method for Evaluating the Precision of Software Measures (Short Paper)\n", "abstract": " Software measurement currently plays a crucial role in software engineering given that the evaluation of software quality depends on the values of the measurements carried out. One important quality attribute is measurement precision. However, this attribute is frequently used indistinctly and confused with accuracy in software measurement. In this paper, we clarify the meaning of precision and propose a method for assessing the precision of software measures in accordance with ISO 5725. This method was used to assess a functional size measurement procedure. A pilot study was designed for the purpose of revealing any deficiencies in the design of our study.", "num_citations": "8\n", "authors": ["597"]}
{"title": "Towards a Functional Requirements Prioritization with early Mutation Testing\n", "abstract": " Researchers have proposed a number of prioritization techniques to help decision makers select an optimal combination of (non-) functional requirements to implement. However, most of them are defined based on an ordinal or nominal scale, which are not reliable because they are limited to simple operations of ranked or ordered requirements. We argue that the importance of certain requirements could be determined by their criticality level, which can be assessed using a ratio scale.", "num_citations": "7\n", "authors": ["597"]}
{"title": "A Model-level Mutation Tool to Support the Assessment of the Test Case Quality\n", "abstract": " Although mutation testing is a well-known technique for assessing the quality of tests, there is not a lot of support available for model-level mutation analysis. It is also considered to be expensive due to: (i) the large number of mutants generated; (ii) the time-consuming activity of determining equivalent mutants; and (iii) the mutant execution time. It should also be remembered that real software artefacts of appropriate size including real faults are hard to find and prepare appropriately. In this paper we propose a mutation tool to generate valid First Order Mutants (FOM) for Conceptual Schemas (CS) based on UML Class Diagrams and evaluate its effectiveness and efficiency in generating valid and non-equivalent mutants. Our main findings were: (1) FOM mutation operators can be automated to avoiding non-valid mutants (49.1%). (2) Fewer equivalent mutants were generated (7.2%) and 74.3% were reduced\u00a0\u2026", "num_citations": "7\n", "authors": ["597"]}
{"title": "Design of a functional size measurement procedure for a model-driven software development method\n", "abstract": " The capability to accurately quantify the size of software developed with a Model-Driven Development (MDD) method is critical to software project managers for evaluating risks, developing project estimates, and having early project indicators. This paper presents a measurement procedure defined according to the last version of the ISO 19761 standard measurement method. The measurement procedure has been designed to measure the functional size of object-oriented applications generated from their conceptual models by means of model transformations. The measurement procedure is structured in three phases: the strategy phase, where the purpose of the measurement is defined; the mapping phase, where the elements of the conceptual model that contribute to the functional size are selected; and the measurement phase, where the functional size of the generated application is obtained.", "num_citations": "7\n", "authors": ["597"]}
{"title": "Analyzing the influence of certain factors on the acceptance of a model-based measurement procedure in practice: An empirical study\n", "abstract": " Full automatic software measurement from conceptual models is now accepted by academics, although take-up of these model-based measurement procedures in practice by software practitioners has been slow. To encourage acceptance in industry, an acceptance model for measurement procedures is proposed, identifying a set of factors that influence perceived usefulness and perceived ease of use when a user employs a measurement procedure. Analyzing the results of an empirical study carried out with software engineering academics, we find which factors have an influence on other factors. Using regression analysis, certain factors are identified that affect perceived usefulness and ease of use, and which in turn will affect intention to use.", "num_citations": "7\n", "authors": ["597"]}
{"title": "Using emotions to empower the self-adaptation capability of software services\n", "abstract": " Traditional self-adaptive systems research has focused on external contextual aspects such as performance, system reaction to environment. In this paper, we introduce the idea of measuring emotions in order to empower the adaptability of software services at runtime. We present two type of monitoring mechanisms and an adaptive adaptation strategy, which were implemented as part of the HAPPYNESS middleware. A preliminary test using data from the Empatica repository was carried out with the purpose of assessing the goodness of the controller (i.e. inference engine), a component of our middleware. The obtained results were consistent with the expected values. Moreover, we test also the connectivity and synchronization between E4-Wristband and an adaptive mobile application that were used by two volunteer users.", "num_citations": "6\n", "authors": ["597"]}
{"title": "Re-assessing the intention to use a measurement procedure based on COSMIC-FFP\n", "abstract": " This paper describes the replication of an empirical study that was designed to evaluate the adoption of RmFFP in practice. RmFFP is a measurement procedure designed to measure the functional size of objectoriented systems from requirements specifications obtained in the context of the OO-Method approach. This procedure has been designed in accordance with the COSMIC-FFP standard method. The evaluation is based on the Method Adoption Model (MAM), where the intention to use a method is determined by the users\u2019 perceptions. The results show that an intention to use RmFFP exists, and that it is more influenced by usefulness than ease of use.", "num_citations": "6\n", "authors": ["597"]}
{"title": "Combinatorial Testing in an Industrial Environment--Analyzing the Applicability of a Tool\n", "abstract": " Numerous combinatorial testing tools are available for generating test cases. However, many of them are never used in practice. One of the reasons is the lack of empirical studies that involve human subjects applying testing techniques. This paper aims to investigate the applicability of a combinatorial testing tool in the company SOFTEAM. A case study is designed and conducted within the development team responsible for a new product. The participants consist of 3 practitioners from the company. The applicability of the tool has been examined in terms of efficiency, effectiveness and learning effort.", "num_citations": "5\n", "authors": ["597"]}
{"title": "Assessing the applicability of a combinatorial testing tool within an industrial environment\n", "abstract": " This paper describes a case study executed to evaluate a combinatorial test design approach within the industrial setting of IBM Research. An existing combinatorial test suite was compared against a prioritized combinatorial test suite that was generated with the Combinatorial Tree Editor XL Profesional (CTE). The prioritization technique was recently developed and added to the CTE in the context of the FITTEST project. Test design for the new test suite was carried out by the developers of the prioritization technique. Test implementation and execution was done by the industrial partner of the System Under Test. This case study has investigated whether the prioritized combinatorial technique is useful to complement current testing practices at IBM Research. The focus of this study is on fault finding capability of artificially injected faults that have been selected and prioritized using domain knowledge and expertise, and efficiency of test case execution. Conclusions of this study are that for the testing of the target product in a simulated environment, the improved combinatorial testing tools do qualify as useful and this type of testing will be included in current practices.", "num_citations": "5\n", "authors": ["597"]}
{"title": "Towards an experimental framework for measuring usability of model-driven tools\n", "abstract": " According to the Model-Driven Development (MDD) paradigm, analysts can substantially improve the software development process concentrating their efforts on a conceptual model, which can be transformed into code by means of transformation rules applied by a model compiler. However, MDD tools are not widely used in industry. One of the reasons for this poor adoption is the lack of usability of MDD tools. This paper presents a framework to evaluate the usability of such tools. The framework will be used as a basis for a family of experiments to get clear insights into the barriers to usability that prevent MDD tools from being widely adopted in industry.", "num_citations": "5\n", "authors": ["597"]}
{"title": "Scriptless testing at the GUI level in an industrial setting\n", "abstract": " TESTAR is a traversal-based and scriptless tool for test automation at the Graphical User Interface (GUI) level. It is different from existing test approaches because no test cases need to be defined before testing. Instead, the tests are generated during the execution, on-the-fly. This paper presents an empirical case study in a realistic industrial context where we compare TESTAR to a manual test approach of a web-based application in the rail sector. Both qualitative and quantitative research methods are used to investigate learnability, effectiveness, efficiency, and satisfaction. The results show that TESTAR was able to detect more faults and higher functional test coverage than the used manual test approach. As far as efficiency is concerned, the preparation time of both test approaches is identical, but TESTAR can realize test execution without the use of human resources. Finally, TESTAR turns out to be a\u00a0\u2026", "num_citations": "4\n", "authors": ["597"]}
{"title": "A focus group for operationalizing software sustainability with the MEASURE platform\n", "abstract": " Measuring the sustainability of software products is sill in the early stages of development. However, there are different approaches how to assess sustainability issues of software and its engineering-including metrics with a practical orientation as well as more theoretical models covering software sustainability. As an example for one step in moving forward bringing existing approaches together, the paper presents a focus group study conducted to find out in which extent the quality attributes related to the technical sustainability can be measured by using existing metrics available at the MEASURE platform. Our first results show that the extent of measurability varies across the software development phases. Functional correctness, robustness, maturity, and testability are the most measurable quality attributes.", "num_citations": "4\n", "authors": ["597"]}
{"title": "A Proposal to Elicit Usability Requirements within a Model-Driven Development Environment\n", "abstract": " Nowadays there are sound Model-Driven Development (MDD) methods that deal with functional requirements, but in general, usability is not considered from the early stages of the development. Analysts that work with MDD implement usability features manually once the code has been generated. This manual implementation contradicts the MDD paradigm and it may involve much rework. This paper proposes a method to elicit usability requirements at early stages of the software development process such a way non-experts at usability can use it. The approach consists of organizing several interface design guidelines and usability guidelines in a tree structure. These guidelines are shown to the analyst through questions that she/he must ask to the end-user. Answers to these questions mark the path throughout the tree structure. At the end of the process, the paper gathers all the answers of the end-user to\u00a0\u2026", "num_citations": "4\n", "authors": ["597"]}
{"title": "Towards a Theoretical Model for Evaluating the Acceptance of Model-driven Measurement Procedures.\n", "abstract": " Software development based on transformation models has resulted in increasing interest in full automatic software measurement from conceptual models. In this paper, we propose a theoretical model for evaluation of the extent to which a model-driven measurement procedure would be accepted in practice. We identified a number of factors that could affect perceived usefulness and ease of use, and which would in turn affect the intention to use.", "num_citations": "4\n", "authors": ["597"]}
{"title": "Evaluating the FITTEST automated testing tools in SOFTEAM: an industrial case study\n", "abstract": " [Context] Many test automation tools are currently available. However, most of them do not yet support automated test case design and evaluation.[Method] The FITTEST EU project has developed such automated tools. This paper aims at their evaluation within an industrial case study. The case study was conducted at SOFTEAM for testing Modelio SaaS, a web administration console written in PHP, which allows an administrator to connect to his account for managing modeling projects created with SOFTEAMs Modelio UML Modeling tool.[Objective] This case study has investigated whether current SOFTEAM testing practices could be improved or complemented by using some of the automated testing tools that were developed within the FITTEST EU project.[Results] Although the existing Test Suite from SOFTEAM (TSsof t) that was selected for comparison is substantially smaller than the Test Suite generated by FITTEST (TSf ittest), the effectiveness of TSf ittest, measured by the injected faults coverage is significantly higher (50% vs 70%). With respect to efficiency,..[Conclusions] Within SOFTEAM and for the testing of the target product in SOFTEAMs testing environment: the FITTEST tools can increase the effectiveness of the current practice and the test cases automatically generated by the FITTEST tools can help in more efficient identification of the source of the identified faults. Moreover, the FITTEST tools have shown the ability to automate testing within a real industry case.", "num_citations": "3\n", "authors": ["597"]}
{"title": "Analyzing the applicability of a combinatorial testing tool in an industrial environment\n", "abstract": " \u2014Numerous combinatorial testing tools are available for generating test cases. However, many of them are never used in practice. One of the reasons is the lack of empirical studies that involve human subjects applying testing techniques. This paper aims to investigate the applicability of a combinatorial testing tool in the company SOFTEAM. A case study is designed and conducted within the development team responsible for a new product. The participants consist of 3 practitioners from the company. The applicability of the tool has been examined in terms of efficiency, effectiveness and learning effort.", "num_citations": "3\n", "authors": ["597"]}
{"title": "Analysis of indirect influence relations in goal-oriented requirements engineering\n", "abstract": " Business environments nowadays are becoming increasingly more dynamic, demanding continuous adaptation in business process designs and realizations. Regardless of their causes, most changes in the business environment have often dramatic consequences upon business processes and supporting/enabling IT systems. In most cases, these changes manifest as alterations in one or more goals of stakeholders of the system. These goal changes will then propagate to the requirements, designs, implementations and test cases of a system development process. Along with recent trends in using goal-oriented approaches for requirements engineering, various techniques for managing evolutionary goals and requirements are proposed and used by the software engineering community. Enterprise Architecture (EA) models which tie business goals, business processes and supporting IT systems are also expected to have a technique for analyzing changes in goals and requirements. Unfortunately common Enterprise Architecture (EA) frameworks like The Open Group Architecture Framework (TOGAF) and EA modeling languages like ArchiMate lacks support for analyzing goal and requirement change impacts. This reduces the adaptability of EA in addition to limiting the dynamicity of the organization employing the EA. Furthermore, lack of reasoning support on influence relations on goal models limits the decision-making capability of EA users by reducing the amount of available information about goal change impacts. This thesis endeavors to fill these gaps by extending a metamodel of an existing requirements modeling language called\u00a0\u2026", "num_citations": "3\n", "authors": ["597"]}
{"title": "Analyzing the Applicability of a Theoretical Model in the Evaluation of Functional Size Measurement Procedures.\n", "abstract": " A number of current proposals for software functional size measurement (FSM) exist in the literature; however there is as yet little validating evidence and no model to facilitate such validation. In the absence of tailor-made evaluation models, the Method Evaluation Model (MEM), used to evaluate Information Systems (IS) design methods, was adapted to evaluate three procedures based on two of the standard FSM methods. This paper analyses the applicability of the MEM in the software measurement context, with a review of three empirical studies.", "num_citations": "3\n", "authors": ["597"]}
{"title": "Verifying the Construction of a Software Model from a Requirements Model.\n", "abstract": " The quality of results obtained with a measurement procedure is reliant on the quality of the design and application of its software model. A software model is the abstraction of relevant elements that contribute to the functional size according to measurement method. The purpose of this paper is to verify the construction of the software model when applying the RmFFP measurement procedure. The RmFFP procedure was designed according to the COSMIC-FFP standard method for estimating the functional size of objectoriented systems from requirements specifications obtained in the context of the OO-Method approach.", "num_citations": "3\n", "authors": ["597"]}
{"title": "PANEL: Successful Empirical Research in Software Testing with Industry\n", "abstract": " Numerous combinatorial testing techniques and tools are available for generating test cases. However, many of them are never used in practice. Why is it so difficult to introduce software testing research into testing practice? In this paper, by means of a panel conducted at 25th International Conference on Advanced information Systems Engineering, we attempt to provide an answer to this question by identifying mainly obstacles and challenges from two different perspectives: Industry and Academy.", "num_citations": "2\n", "authors": ["597"]}
{"title": "How Do Negative Emotions Influence on the Conceptual Models Verification? A live study proposal\n", "abstract": " The present live study is proposed with the objective of investigating the influence of negative emotions (ie, stress) in the efficiency for verifying conceptual models. To conduct this study, we use a Model-driven Testing tool, named CoSTest, and our own version of stress detector within a competition setting. The experiment design, overview of the empirical procedure, instrumentation and potential threats are presented in the proposal.", "num_citations": "1\n", "authors": ["597"]}
{"title": "Exploring users perception on security and satisfaction requirements of context-aware applications: An Online Survey\n", "abstract": " Our lives are being transformed by innovative software applications with important social, environmental, and economic implications. For instance, context-aware software systems can be found in different domains such as health-care, telecommunication, transportation, etc. It is expected that in the near future software-intensive systems will behave autonomously thanks to the continuous sensing and monitoring. In this proposal, given the complexity of this kind of systems, and the social implications behind emerging wearable sensing technologies, we aim to empirically investigate some quality attributes that contribute to the social sustainability from a consumer perspective.", "num_citations": "1\n", "authors": ["597"]}
{"title": "End-user perceptions on social sustainability in context-aware applications: Validation of an experiment design\n", "abstract": " Our lives are being transformed by innovative software applications with important social, environmental, and economic implications. Social sustainability must be considered by software engineers to address human physical, emotional and social needs. In order to investigate how users understand and perceive the social sustainability of context-aware software applications, that are built based on the HAPPYNESS framework, we investigate a set of social sustainability-quality requirements from an end-user perspective. The perceived importance of social acceptance and perceived success are also measured. In this paper, we present the experiment design and the main outcomes of our pilot study conducted with the MEGSUS workshop participants.", "num_citations": "1\n", "authors": ["597"]}
{"title": "AB= \u15faA: execution equivalence as a new type of testing oracle\n", "abstract": " This paper introduces a new type of automated testing oracle, called the execution equivalence (EE) invariants. These invariants can be mined from application logs that capture both application events and application states. The EE-invariants express an equivalence relation on the sequences of application events in terms of equality of respective initial and final states, which these sequences leave in the logs during the run-time. We claim that even equivalences up to a length of four events already provide useful testing oracle. We extended our tool LOPI (LOg-based Pattern Inferencer) with the algorithm for mining EE-invariants, and evaluated the effectiveness of these invariants on a case-study---the web application Flex Store. The evaluation is carried out based on two parameters: the false positive rate and the fault finding capability. Moreover, we compared the strength of LOPI's execution equivalences with\u00a0\u2026", "num_citations": "1\n", "authors": ["597"]}
{"title": "Evaluating rogue user an industrial case study at softeam\n", "abstract": " technical report UU-CS-2014-010 | Department of Information and Computing Sciences Department of Information and Computing Sciences Departement Informatica contact intern people education research library calendar archive services jobs technical report UU-CS-2014-010 select other reports technical report index page report techrep_id file title / author UU-CS-2014-010 pdf Evaluating Rogue User an Industrial Case Study at Softeam Sebastian Bauersfeld, Nelly Condori-Fernandez, Tanja Vos, Etienne Brosse and Alessandra Bagnato indexed authors author group Vos, dr. TEJ all reports Software Technology all reports BibTeX entry @TECHREPORT{UUCS2014010, author = {Bauersfeld, Sebastian and Condori-Fernandez, Nelly and Vos, Tanja~ and Brosse, Etienne and Bagnato, Alessandra}, year = 2014, title = {Evaluating Rogue User an Industrial Case Study at Softeam}, number = {UU-CS-2014-010}, \u2026", "num_citations": "1\n", "authors": ["597"]}