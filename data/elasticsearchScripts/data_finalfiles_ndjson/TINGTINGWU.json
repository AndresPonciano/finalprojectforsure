{"title": "Formal specification and transformation method of system requirements from B method to AADL model\n", "abstract": " This article presents a method to describe system requirements with B abstract machine, and transformation rules from B method to the Architecture Analysis and Design Language (AADL) model. We aim at solving the problems of requirements non-deterministic and ensuring requirements consistency during conversion procedure, AADL architecture model is consistent with requirements. Furthermore, in the early phrase of software development, various verification methods could be used to test software functional or non-functional attributes based on Model Driven Architecture (MDA). Firstly, we extract the subset of B method in this paper. Secondly, we describe this subset with formal method in terms of syntax and semantic. Thirdly, the derivation rules from B method to AADL model are proposed. The requirements consistency is then illustrated on a case study.", "num_citations": "5\n", "authors": ["2130"]}
{"title": "Testing Artificial Intelligence System Towards Safety and Robustness: State of the Art.\n", "abstract": " With the increasing development of machine learning, conventional embedded systems cannot meet the requirement of current academic researches and industrial applications. Artificial Intelligence System (AIS) based on machine learning has been widely used in various safety-critical systems, such as machine vision, autonomous vehicles, collision avoidance system. Different from conventional embedded systems, AIS generates and updates control strategies through learning algorithms which make the control behaviors nondeterministic and bring about the test oracle problem in AIS testing procedure. There have been various testing approaches for AIS to guarantee the safety and robustness. However, few researches explain how to conduct AIS testing with a complete workflow systematically. This paper provides a comprehensive survey of existing testing techniques to detect the erroneous behaviors of AIS, and sums up the involved key steps and testing components in terms of test coverage criterion, test data generation, testing approach and common dataset. This literature review aims at organizing a standardized workflow and leading to a practicable insight and research trend towards AIS testing.", "num_citations": "4\n", "authors": ["2130"]}
{"title": "On schedulability analysis for embedded systems with aadl model\n", "abstract": " In order to predicate the schedulability of real-time embedded system in the model design stage, a new schedulability analysis method for embedded system models using Architecture Analysis and Design Language (AADL) is presented in this paper. Through analyzing system architecture, component properties and component connections, we build the Resource Competition Model (RCM) for the AADL model. Based on the RCM, the respond time of thread components can be calculated, and we get the schedulability of system AADL model. This approach is on the model level to analyze the schedulability of systems without code implement. It has higher calculation efficiency, and a lower requirement for the system description. At last, a case-study is carried out to show the schedulability analysis process for an AADL model.", "num_citations": "3\n", "authors": ["2130"]}
{"title": "ExtendAIST: Exploring the Space of AI-in-the-Loop System Testing\n", "abstract": " The AI-in-the-loop system (AIS) has been widely used in various autonomous decision and control systems, such as computing vision, autonomous vehicle, and collision avoidance systems. AIS generates and updates control strategies through learning algorithms, which make the control behaviors non-deterministic and bring about the test oracle problem in AIS testing procedure. The traditional system mainly concerns about properties of safety, reliability, and real-time, while AIS concerns more about the correctness, robustness, and stiffness of system. To perform an AIS testing with the existing testing techniques according to the testing requirements, this paper presents an extendable framework of AI-in-the-loop system testing by exploring the key steps involved in the testing procedure, named ExtendAIST, which contributes to define the execution steps of ExtendAIST and design space of testing techniques. Furthermore, the ExtendAIST framework provides three concerns for AIS testing, which include:(a) the extension points;(b) sub-extension points; and (c) existing techniques commonly present in each point. Therefore, testers can obtain the testing strategy using existing techniques directly for corresponding testing requirements or extend more techniques based on these extension points. View Full-Text", "num_citations": "1\n", "authors": ["2130"]}