{"title": "An extensible SAT-solver\n", "abstract": " In this article, we present a small, complete, and efficient SAT-solver in the style of conflict-driven learning, as exemplified by Chaff. We aim to give sufficient details about implementation to enable the reader to construct his or her own solver in a very short time. This will allow users of SAT-solvers to make domain specific extensions or adaptions of current state-of-the-art SAT-techniques, to meet the needs of a particular application area. The presented solver is designed with this in mind, and includes among other things a mechanism for adding arbitrary boolean constraints. It also supports solving a series of related SAT-problems efficiently by an incremental SAT-interface.", "num_citations": "3876\n", "authors": ["1793"]}
{"title": "Translating pseudo-boolean constraints into SAT\n", "abstract": " In this paper, we describe and evaluate three different techniques for translating pseudo-boolean constraints (linear constraints over boolean variables) into clauses that can be handled by a standard SAT-solver. We show that by applying a proper mix of translation techniques, a SAT-solver can perform on a par with the best existing native pseudo-boolean solvers. This is particularly valuable in those cases where the constraint problem of interest is naturally expressed as a SAT problem, except for a handful of constraints. Translating those constraints to get a pure clausal problem will take full advantage of the latest improvements in SAT research. A particularly interesting result of this work is the efficiency of sorting networks to express pseudo-boolean constraints. Although tangential to this presentation, the result gives a suggestion as to how synthesis tools may be modified to produce arithmetic circuits more\u00a0\u2026", "num_citations": "761\n", "authors": ["1793"]}
{"title": "Temporal induction by incremental SAT solving\n", "abstract": " We show how a very modest modification to a typical modern SAT-solver enables it to solve a series of related SAT-instances efficiently. We apply this idea to checking safety properties by means of temporal induction, a technique strongly related to bounded model checking. We further give a more efficient way of constraining the extended induction hypothesis to so called loop-free paths. We have also performed the first comprehensive experimental evaluation of induction methods for safety-checking.", "num_citations": "483\n", "authors": ["1793"]}
{"title": "Efficient implementation of property directed reachability\n", "abstract": " Last spring, in March 2010, Aaron Bradley published the first truly new bit-level symbolic model checking algorithm since Ken McMillan's interpolation based model checking procedure introduced in 2003. Our experience with the algorithm suggests that it is stronger than interpolation on industrial problems, and that it is an important algorithm to study further. In this paper, we present a simplified and faster implementation of Bradley's procedure, and discuss our successful and unsuccessful attempts to improve it.", "num_citations": "328\n", "authors": ["1793"]}
{"title": "Symbolic reachability analysis based on SAT-solvers\n", "abstract": " The introduction of symbolic model checking using Binary Decision Diagrams (BDDs) has led to a substantial extension of the class of systems that can be algorithmically verified. Although BDDs have played a crucial role in this success, they have some well-known drawbacks, such as requiring an externally supplied variable ordering and causing space blowups in certain applications. In a parallel development, SAT-solving procedures, such as St\u00e5lmarck\u2019s method or the Davis-Putnam procedure, have been used successfully in verifying very large industrial systems. These efforts have recently attracted the attention of the model checking community resulting in the notion of bounded model checking. In this paper, we show how to adapt standard algorithms for symbolic reachability analysis to work with SAT-solvers. The key element of our contribution is the combination of an algorithm that removes\u00a0\u2026", "num_citations": "277\n", "authors": ["1793"]}
{"title": "MiniSat: A SAT solver with conflict-clause minimization\n", "abstract": " CiNii \u8ad6\u6587 - MiniSat : A SAT solver with conflict-clause minimization CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005 \u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3 \u696d\u52d9\u306e\u518d\u958b\u306b\u3064\u3044\u3066 MiniSat : A SAT solver with conflict-clause minimization EEN N. \u88ab\u5f15\u7528\u6587\u732e : 1\u4ef6 \u8457\u8005 EEN N. \u53ce\u9332\u520a\u884c\u7269 Proc. SAT-05 : 8th Int. Conf. on Theory and Applications of Satisfiability Testing Proc. SAT-05 : 8th Int. Conf. on Theory and Applications of Satisfiability Testing, 502-518, 2005 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u30e2\u30c7\u30eb\u5217\u6319\u3068\u30e2\u30c7\u30eb\u8a08\u6570(<\u7279\u96c6>\u6700\u8fd1\u306e SAT\u6280\u8853\u306e\u767a\u5c55) \u9577\u8c37\u5ddd \u9686\u4e09 , \u85e4\u7530 \u535a , \u8d8a\u6751 \u4e09\u5e78 , Ryuzo Hasegawa , Hiroshi Fujita , Miyuki Koshimura \u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u8a8c = Journal of Japanese Society for Artificial Intelligence 25(1), \u2026", "num_citations": "248\n", "authors": ["1793"]}
{"title": "Minisat v1. 13-a sat solver with conflict-clause minimization\n", "abstract": " In this poster we summarize the features of the MiniSat version entering the SAT Competition 2005. The main new feature is a resolution based conflict clause minimization technique based on self-subsuming resolution. Experiments show that on industrial examples, it is not unusual for more than 30% of the literals in a conflict clause to be redundant. Removing these literals reduces memory consumption and produce stronger clauses which may propagate under fewer decisions in the DPLL search procedure. We also want to raise attention to the particular version of VSIDS implemented in MiniSat, which we believe is a consistent improvement over the original VSIDS decision heuristic of the same magnitude as many of the recently proposed alternatives [GY02, Ry03].", "num_citations": "221\n", "authors": ["1793"]}
{"title": "Improvements to combinational equivalence checking\n", "abstract": " The paper explores several ways to improve the speed and capacity of combinational equivalence checking based on Boolean satisfiability (SAT). State-of-the-art methods use simulation and BDD/SAT sweeping on the input side (i.e. proving equivalence of some internal nodes in a topological order), interleaved with attempts to run SAT on the output (i.e. proving equivalence of the output to constant 0). This paper improves on this method by (a) using more intelligent simulation, (b) using CNF-based SAT with circuit-based decision heuristics, and (c) interleaving SAT with low-effort logic synthesis. Experimental results on public and industrial benchmarks demonstrate substantial reductions in runtime, compared to the current methods. In several cases, the new solver succeeded in solving previously unsolved problems", "num_citations": "170\n", "authors": ["1793"]}
{"title": "Deepmath-deep sequence models for premise selection\n", "abstract": " We study the effectiveness of neural sequence models for premise selection in automated theorem proving, a key bottleneck for progress in formalized mathematics. We propose a two stage approach for this task that yields good results for the premise selection task on the Mizar corpus while avoiding the hand-engineered features of existing state-of-the-art models. To our knowledge, this is the first time deep learning has been applied theorem proving on a large scale.", "num_citations": "98\n", "authors": ["1793"]}
{"title": "Applying logic synthesis for speeding up SAT\n", "abstract": " SAT solvers are often challenged with very hard problems that remain unsolved after hours of CPU time. The research community meets the challenge in two ways: (1) by improving the SAT solver technology, for example, perfecting heuristics for variable ordering, and (2) by inventing new ways of constructing simpler SAT problems, either using domain specific information during the translation from the original problem to CNF, or by applying a more universal CNF simplification procedure after the translation. This paper explores preprocessing of circuit-based SAT problems using recent advances in logic synthesis. Two fast logic synthesis techniques are considered: DAG-aware logic minimization and a novel type of structural technology mapping, which reduces the size of the CNF derived from the circuit. These techniques are experimentally compared to CNF-based preprocessing. The conclusion is that\u00a0\u2026", "num_citations": "98\n", "authors": ["1793"]}
{"title": "The minisat page\n", "abstract": " CiNii \u8ad6\u6587 - The MiniSat Page CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092 \u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248 \u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3\u696d\u52d9\u306e\u518d\u958b\u306b\u3064\u3044\u3066 The MiniSat Page EEN N. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 EEN N. \u53ce\u9332\u520a\u884c\u7269 http://minisat.se/ http://minisat.se/ \u88ab\u5f15\u7528 \u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u30e2\u30c7\u30eb\u751f\u6210\u578b\u5b9a\u7406\u8a3c\u660e\u3068\u8981\u7d20\u6280\u8853 \u9577\u8c37\u5ddd \u9686\u4e09 , \u85e4\u7530 \u535a , \u8d8a\u6751 \u4e09\u5e78 , Ryuzo Hasegawa , Hiroshi Fujita , Miyuki Koshimura , \u4e5d\u5dde\u5927\u5b66\u5927\u5b66\u9662\u30b7\u30b9\u30c6\u30e0\u60c5\u5831\u79d1\u5b66\u7814\u7a76 \u9662 , \u4e5d\u5dde\u5927\u5b66\u5927\u5b66\u9662\u30b7\u30b9\u30c6\u30e0\u60c5\u5831\u79d1\u5b66\u7814\u7a76\u9662 , \u4e5d\u5dde\u5927\u5b66\u5927\u5b66\u9662\u30b7\u30b9\u30c6\u30e0\u60c5\u5831\u79d1\u5b66\u7814\u7a76\u9662 , Faculty of Information Science and Electrical Engineering Kyushu University , Faculty of Information Science and Electrical Engineering Kyushu University , Faculty of Information Science and \u2026", "num_citations": "92\n", "authors": ["1793"]}
{"title": "DeepMath-deep sequence models for premise selection\n", "abstract": " We study the effectiveness of neural sequence models for premise selection in automated theorem proving, one of the main bottlenecks in the formalization of mathematics. We propose a two stage approach for this task that yields good results for the premise selection task on the Mizar corpus while avoiding the hand-engineered features of existing state-of-the-art models. To our knowledge, this is the first time deep learning has been applied to theorem proving on a large scale.", "num_citations": "84\n", "authors": ["1793"]}
{"title": "A single-instance incremental SAT formulation of proof-and counterexample-based abstraction\n", "abstract": " This paper presents an efficient, combined formulation of two widely used abstraction methods for bit-level verification: counterexample-based abstraction (CBA) and proof-based abstraction (PBA). Unlike previous work, this new method is formulated as a single, incremental SAT-problem, interleaving CBA and PBA to develop the abstraction in a bottom-up fashion. It is argued that the new method is simpler conceptually and implementation-wise than previous approaches. As an added bonus, proof-logging is not required for the PBA part, which allows for a wider set of SAT-solvers to be used.", "num_citations": "55\n", "authors": ["1793"]}
{"title": "Minisat 2.1 and minisat++ 1.0-sat race 2008 editions\n", "abstract": " MINISAT is a SAT solver designed to be easy to use, understand, and modify while still being efficient. Originally inspired by ZCHAFF [10] and LIMMAT [1], MINISAT features the now commonplace two-literal watcher scheme for BCP, first-UIP conflict clause learning, and the VSIDS variable heuristic (see [5] for a detailed description). Additionally, it has support for incremental SAT solving, and it exists in variations that support user defined Boolean constraints and proof-logging. Since it\u2019s inception, the most important improvements have been the heap-based VSIDS implementation, conflict clause minimization [4], and variable elimination based pre-processing [2].", "num_citations": "54\n", "authors": ["1793"]}
{"title": "Mapping into LUT structures\n", "abstract": " Mapping into K-input lookup tables (K-LUTs) is an important step in synthesis for Field-Programmable Gate Arrays (FPGAs). The traditional FPGA architecture assumes all interconnects between individual LUTs are \u201croutable\u201d. This paper proposes a modified FPGA architecture which allows for direct (non-routable) connections between adjacent LUTs. As a result, delay can be reduced but area may increase. This paper investigates two types of LUT structures and the associated tradeoffs. A new mapping algorithm is developed to handle such structures. Experimental results indicate that even when regular LUT structures are used, area and delay can be improved 7.4% and 11.3%, respectively, compared to the high-effort technology mapping with structural choices. When the dedicated architecture is used, the delay can be improved up to 40% at the cost of some area increase.", "num_citations": "43\n", "authors": ["1793"]}
{"title": "Minisat v2. 0 (beta)\n", "abstract": " This document describes the current state of the open source SAT solver MINISAT. The latest version brings new features that was proven to be successful during the SAT competition 2005, namely the variable elimination based simplification techniques of SATELITEGTI (winner of the industrial category). The resulting solver is mainly intended to be easier to use, understand, and extend\u2014therefore performance is estimated to be roughly similar to that of SATELITEGTI.", "num_citations": "25\n", "authors": ["1793"]}
{"title": "GLA: Gate-level abstraction revisited\n", "abstract": " Verification benefits from removing logic that is not relevant for a proof. Techniques for doing this are known as localization abstraction. Abstraction is often performed by selecting a subset of gates to be included in the abstracted model; the signals feeding into this subset become unconstrained cut-points. In this paper, we propose several improvements to substantially increase the scalability of automated abstraction. In particular, we show how a better integration between the BMC engine and the SAT solver is achieved, resulting in a new hybrid abstraction engine, that is faster and uses less memory. This engine speeds up computation by constant propagation and circuit-based structural hashing while collecting UNSAT cores for the intermediate proofs in terms of a subset of the original variables. Experimental results show improvements in the abstraction depth and size.", "num_citations": "22\n", "authors": ["1793"]}
{"title": "Cut sweeping\n", "abstract": " This paper presents a light-weight sweeping method, similar to SAT-and BDD-sweeping. Performance are on the order of 10x to 100x faster than SAT-sweeping for large designs, while achieving about 50-90% of the reductions.", "num_citations": "22\n", "authors": ["1793"]}
{"title": "A toolbox for counter-example analysis and optimization\n", "abstract": " Counter-examples are produced by formal verification engines to witness failures of safety properties. A counterexample is a sequence of input assignments bringing the design from the initial state into a state where some property fails. In practice, these input assignments contain redundancies. This paper focuses on methods for analyzing counter-examples to detect don\u2019t-care, optional, and essential input assignments. The proposed analysis of counter-examples helps design debugging. Additionally, it is useful to reduce the length of counter-examples derived by random simulation and for efficient refinement in localization abstraction. 1.", "num_citations": "13\n", "authors": ["1793"]}
{"title": "A semi-canonical form for sequential AIGs\n", "abstract": " In numerous EDA flows, time-consuming computations are repeatedly applied to sequential circuits. This motivates developing methods to determine what circuits have been processed already by a tool. This paper proposes an algorithm for semi-canonical labeling of nodes in a sequential AIG, allowing problems or sub-problems solved by an EDA tool to be cached with their computed results. This can speed up the tool when applied to designs with isomorphic components or design suites exhibiting substantial structural similarity.", "num_citations": "11\n", "authors": ["1793"]}
{"title": "Using speculation for sequential equivalence checking\n", "abstract": " An improved method for speculative reduction is proposed and applied to (suspected) hard verification problems. Several variations of the algorithm were tested:(a) applying speculation initially to the original problem;(b) applying speculation after simplification, before our regular model checker, super_prove is applied, as well as (c) using different filters to reduce the number of speculated equivalences tried. On the benchmarks coming from sequential equivalence checking, the speculationfirst strategy with filtering proved to be faster than super_prove. On other benchmarks that may have come from property checking, super_prove is found superior. 1", "num_citations": "11\n", "authors": ["1793"]}
{"title": "Magic: An industrialstrength logic optimization, technology mapping, and formal verification tool\n", "abstract": " This paper presents an industrial-strength CAD system for logic optimization, technology mapping, and formal verification of synchronous designs. The new system, Magic, is based on the code of ABC that has been improved by adding industrial requirements. Distinctive features include: global-view optimizations for area and delay, scalable sequential synthesis, the use of white-boxes for instances that should not be mapped, and a built-in formal verification framework to run combinational and sequential equivalence checking. Comparison against a reference industrial flow shows that Magic is capable of reducing both area and delay. Experiments on a suite of industrial FPGA designs show that LUT count is reduced by 12.7%, flip-flop (FF) count is reduced by 9.4%, FF-to-FF level is reduced by 22.3%, and fMAX is improved by 11.8%. A remarkable consequence of these reductions is that, although Magic itself takes time to run, the total runtime of the design flow is reduced. 1.", "num_citations": "10\n", "authors": ["1793"]}
{"title": "SAT Based Model Checking\n", "abstract": " This Thesis is a study of automatic reasoning about finite state machines (FSMs). Two techniques used in hardware verification are presented. In both, the verification is carried out by a translation of the problem into propositional logic. Satisfiability and validity of propositional formulas are decided by the use of a SAT solver. For this reason, the fundamental techniques of a modern SAT solver are also presented. The material belongs in the research field of symbolic model checking (SMC). The field comprises different methods of verifying (temporal) properties of finite systems, such as hardware designs, with a high degree of automation. The scope of current methods, and the level of automation, is such that SMC is frequently applied in industry. One way to prove a property of a system is to explicitly enumerate all reachable states, and check the property for each one. This is known as explicit state model checking\u00a0\u2026", "num_citations": "9\n", "authors": ["1793"]}
{"title": "The benefit of concurrency in model checking\n", "abstract": " Model checking (MC) offers an application amenable to the use of concurrency in some innovative ways. In this paper we focus on solving single, hard properties, and show how concurrency can be used to orchestrate the MC engines in a more robust way compared to traditional, non-concurrent solutions. Through a Python front-end to ABC, with concurrency capabilities, we demonstrate enhanced performance on both academic and industrial problems.", "num_citations": "8\n", "authors": ["1793"]}
{"title": "Variable time-frame abstraction\n", "abstract": " Verification benefits from removing logic that is not relevant for a proof. Techniques for doing this are generally known as localization abstraction. Abstraction is often performed by selecting a subset of gates to be included in the abstracted model; the signals feeding into this subset become unconstrained cutpoints. In this paper, a novel approach to gate-level abstraction is presented, which allows for including gates in some but not all time-frames of the abstracted model. The \u201cvariable time-frame\u201d approach is motivated by the hope of building a more scalable abstraction, because the complete logic of the abstracted model in not used in each time-frame of the unrolling. Furthermore, a similar method could make BMC and interpolation-based model checking more scalable, by considering only a subset of gates belonging to the cone-ofinfluence of the property. Preliminary results suggest that it may be a promising approach. 1.", "num_citations": "5\n", "authors": ["1793"]}
{"title": "Minisat v1. 13-a sat solver with conflict-clause minimization. 2005. sat-2005 poster. 1 perhaps under a generous notion of \u201cpart-time\u201d, but still concurrently taking a\u00a0\u2026\n", "abstract": " In this poster we summarize the features of the MiniSat version entering the SAT Competition 2005. The main new feature is a resolution based conflict clause minimization technique based on self-subsuming resolution. Experiments show that on industrial examples, it is not unusual for more than 30% of the literals in a conflict clause to be redundant. Removing these literals reduces memory consumption and produce stronger clauses which may propagate under fewer decisions in the DPLL search procedure. We also want to raise attention to the particular version of VSIDS implemented in MiniSat, which we believe is a consistent improvement over the original VSIDS decision heuristic of the same magnitude as many of the recently proposed alternatives [GY02, Ry03].", "num_citations": "4\n", "authors": ["1793"]}
{"title": "A Fast Reparameterization Procedure.\n", "abstract": " Reparameterization, also known as range preserving logic synthesis, replaces a logic cone by another logic cone, which has fewer inputs while producing the same output combinations as the original cone. It is expected that a smaller circuit leads to a shorter verification time. This paper describes an approach to reparameterization, which is faster but not as general as the previous work. The new procedure is particularly well-suited for circuits derived by localization abstraction.", "num_citations": "3\n", "authors": ["1793"]}
{"title": "Symbolic reachability analysis based on SAT-solvers\n", "abstract": " In this report we present an implementation of a symbolic reachability analyzer, FIXIT, based on SAT-methods. The problem of reachability is to determine for a given transition system, whether a set of bad states is reachable from a set of initial states. We call our approach symbolic, as we use formulas to represent set of states. The representation includes the standard connectives AND, EQUIV, and NOT, plus sharing of common subformulas. We show how the operations of a standard reachability algorithm can be implemented on this representation, and especially how boolean quantification can be performed. Finally, we present some experimental results, and conclude that a straightforward quantification algorithm together with local simplification procedures suffice for making SAT-based methods an interesting alternative to BDD-based methods.", "num_citations": "3\n", "authors": ["1793"]}
{"title": "Continued relevance of bit-level verification research\n", "abstract": " Formal verification methods are making great strides. Motivated by the improvements in the core technologies and successful industrial applications, a number of new areas have emerged. These are exemplified by the list of topics discussed at FMCAD 2010: SMT, verification of RTL designs, software, systems on the chip, protocols, concurrent systems, etc.", "num_citations": "2\n", "authors": ["1793"]}
{"title": "Minisat v2. 0 (beta), Solver description\n", "abstract": " CiNii \u8ad6\u6587 - Minisat v2.0 (beta), Solver description CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf [\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3\u696d\u52d9\u306e\u518d\u958b \u306b\u3064\u3044\u3066 Minisat v2.0 (beta), Solver description EEN N. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 EEN N. \u53ce\u9332 \u520a\u884c\u7269 SAT Race 2006 SAT Race 2006, 2006 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 Accelerating Boolean Matching Using Bloom Filter ZHANG Chun , HU Yu , WANG Lingli , HE Lei , TONG Jiarong IEICE transactions on fundamentals of electronics, communications and computer sciences 93(10), 1775-1781, 2010-10-01 \u53c2\u8003\u6587\u732e21\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) 10027638210 \u8cc7\u6599\u7a2e\u5225 \u4f1a\u8b70\u8cc7\u6599 \u30c7\u30fc\u30bf\u63d0\u4f9b\u5143 CJP\u5f15\u7528 \u66f8\u304d\u51fa\u3057 RefWorks\u306b\u66f8\u304d\u51fa\u3057 EndNote\u306b\u2026", "num_citations": "2\n", "authors": ["1793"]}
{"title": "An extensible SAPsolver. 6m international conference\n", "abstract": " CiNii \u8ad6\u6587 - An extensible SAPsolver. 6m international conference CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092 \u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005 ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 An extensible SAPsolver. 6m international conference EEN N. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 EEN N. \u53ce\u9332 \u520a\u884c\u7269 SAT 2003 SAT 2003 502.518, 2003 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 Conflict-Based Checking the Integrity of Linux Package Dependencies LAN Yuqing , KUANG Mingxia , ZHOU Wenbin IEICE transactions on information and systems 94(12), 2431-2439, 2011-12-01 \u53c2\u8003 \u6587\u732e22\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) 10030538129 \u8cc7\u6599\u7a2e\u5225 \u4f1a\u8b70\u8cc7\u6599 \u30c7\u30fc\u30bf\u63d0\u4f9b\u5143 CJP\u5f15\u7528 \u66f8\u304d\u51fa\u3057 RefWorks\u306b\u66f8\u304d\u51fa\u3057 EndNote\u306b\u66f8\u304d\u51fa\u3057 Mendeley\u306b\u66f8\u304d\u51fa\u3057 Refer/BiblX\u3067\u2026", "num_citations": "1\n", "authors": ["1793"]}