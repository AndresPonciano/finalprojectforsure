{"title": "Software Engineering Methods for the Internet of Things: A Comparative Review\n", "abstract": " Accessing different physical objects at any time from anywhere through wireless network heavily impacts the living style of societies worldwide nowadays. Thus, the Internet of Things has now become a hot emerging paradigm in computing environments. Issues like interoperability, software reusability, and platform independence of those physical objects are considered the main current challenges. This raises the need for appropriate software engineering approaches to develop effective and efficient IoT applications software. This paper studies the state of the art of design and development methodologies for IoT software. The aim is to study how proposed approaches have been solved issues of interoperability, reusability, and independence of the platform. A comparative study is presented for the different software engineering methods used for the Internet of Things. Finally, the key research gaps and open issues are highlighted as future directions.", "num_citations": "0\n", "authors": ["1568"]}
{"title": "User Interface Design for Mobile Financial Services: Users Perspective\n", "abstract": " Users belonging to different countries have different exposure and perception to trust the technology to adopt it. Users\u2019 trust and adoption rate are challenging issues in mobile financial services. Thus, the purpose of the research is how to design trustful user interface. Market research is conducted to collect data. Using the data, personas and use cases developed. The result of personas and use cases used to develop prototypes. Prototype A and B designed differently to give choice to users to investigate users' trust. Prototype A is designed to make it easy to use and clear workflow. Whereas prototype B is designed to make it navigate more in detail vertically to accomplish tasks. Finally, users asked to choose one of the prototypes as their best preference. The easiness to use, clear workflow and attractiveness make prototype A to be preferred and better trusted.", "num_citations": "0\n", "authors": ["1568"]}
{"title": "A comprehensive study for modern models: linking requirements with software architectures\n", "abstract": " Several models recently have been addressed in software engineering for requirements transformation. However, such transformation models have encountered many problems due to the nature of requirements. In the classical transformation modeling, some requirements are discovered to be missing or erroneous at later stages, in addition to major assumptions that may affect the quality of the software. This has created a crucial need for new approaches to requirements transformation. In this paper, a comprehensive study is presented in the main modern models of linking requirements to software architectures. An extensive evaluation is conducted to investigate the capabilities of such modern models to overcome those limitations when transforming requirements, validating their consideration of bringing quality for the software development process. Key research gaps and open issues are discussed, highlighting the possible future directions that can be considered in this field.", "num_citations": "0\n", "authors": ["1568"]}
{"title": "Model-driven Engineering for Big Data\n", "abstract": " Accessing heterogeneous and huge amount of data through different sources heavily impacts users of data nowadays worldwide. Thus, Big Data has now become a hot emerging paradigm in computing environments. Issues in scalability, interoperability, platform independency, adaptability and reusability in big data systems are considered the main current challenges. This raises the need for appropriate software engineering approaches to develop effective and efficient Big Data system models, ie an approach which reduce investment cost and development time.", "num_citations": "0\n", "authors": ["1568"]}