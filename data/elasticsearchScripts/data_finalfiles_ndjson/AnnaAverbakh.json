{"title": "Exploiting user feedback to improve semantic web service discovery\n", "abstract": " State-of-the-art discovery of Semantic Web services is based on hybrid algorithms that combine semantic and syntactic matchmaking. These approaches are purely based on similarity measures between parameters of a service request and available service descriptions, which, however, fail to completely capture the actual functionality of the service or the quality of the results returned by it. On the other hand, with the advent of Web 2.0, active user participation and collaboration has become an increasingly popular trend. Users often rate or group relevant items, thus providing valuable information that can be taken into account to further improve the accuracy of search results. In this paper, we tackle this issue, by proposing a method that combines multiple matching criteria with user feedback to further improve the results of the matchmaker. We extend a previously proposed dominance-based approach for\u00a0\u2026", "num_citations": "45\n", "authors": ["1561"]}
{"title": "An experience base with rights management for global software engineering\n", "abstract": " Software engineering projects result in experiences that are valuable for continuous improvement. Experience and Knowledge Management (EKM) deals with the proper presentation, engineering, and reuse of experiences, eg training new project members or supporting future projects. In globally distributed projects proper EKM is even more important: Communication between project partners is more difficult than in co-located projects and may impair the awareness of knowledge residing at a project partner's location. Project members might hesitate to share experience because of security considerations. We propose a hierarchical experience base with rights management aiming to positively influence their willingness to share. Our concept includes special support for experience engineers to refine local experiences into best practices in globally distributed software projects. In this paper we show how our\u00a0\u2026", "num_citations": "7\n", "authors": ["1561"]}
{"title": "Experiences from establishing knowledge management in a joint research project\n", "abstract": " Joint research projects are create new knowledge and lessons learned from experience. A research project with several partners is a challenging environment for systematic reuse of knowledge and experience. Knowledge management is often considered overhead, with several tasks added to the workload of the project. This overhead can become overwhelming, since partners from academia and industry have different backgrounds, and may associate different goals and priorities with the project. Industry partners tend to follow strict security guidelines that hamper experience exchange. An extension of project duration is not possible in many publicly funded joint projects. In this paper, we describe our experiences from the initial phase of a major German joint research project with partners from academia and industry. We describe the applied techniques and the lessons learned during the first year the\u00a0\u2026", "num_citations": "6\n", "authors": ["1561"]}
{"title": "Recommend me a Service: Personalized Semantic Web Service Matchmaking.\n", "abstract": " In the Semantic Web the discovery of appropriate Semantic Web Services for a given service request, the so-called matchmaking, is a crucial task in order to bring together Web Service provider and users in an automatic manner. While most of the current matchmaking algorithms focus on purely syntactic or semantic similarity or a combination of both (hybrid approaches), the user is not taken into account in the matchmaking process itself. Hence, specific preferences and needs of a user are not taken into account in the matchmaking process. In this paper we show how users can be engaged in the matchmaking process by providing Web 2.0 interaction to collect user feedback. Furthermore, we present the ongoing work of the integration of collaborative filtering algorithms into the matchmaking process to generate personalized matchmaking results.", "num_citations": "6\n", "authors": ["1561"]}
{"title": "Light-weight experience collection in distributed software engineering\n", "abstract": " Nowadays, distributed software development has become more common. In a distributed project setting, managing experience is even more crucial than in a co-located project. Problems like ineffective communication, lack of awareness and trust and restrictive information flow policies impede experience exchange and raise the overall effort for software engineers to collaborate. Moreover, sharing experiences is usually not part of the development process and considered additional effort. This often leads to failure of the experience management initiative due to a lack of participation. This thesis proposes a framework for qualitative and quantitative assessment of light-weight experience collection. Light-weight methods primarily aim at lowering the perceived effort and return a reasonable benefit to the experience bearers. This thesis proposes characterizing criteria of light-weight experience collection and a measurement system to measure gradations of expected effort and benefit of an experience collection method. To support knowledge managers in choosing the appropriate collection method, this thesis provides a catalogue of strategies from different categories and areas of application in distributed development projects.", "num_citations": "5\n", "authors": ["1561"]}
{"title": "Knowledge from Document Annotations as By-Product in Distributed Software Engineering\n", "abstract": " Knowledge management can play a major role in the success of a distributed software engineering project promising huge increases in efficiency and effectivity. However, it often suffers from a lack of participation. Major problems are that sharing knowledge is time consuming and bears additional effort for the knowledge worker.In the course of development projects, software engineers create, read and annotate (particularly during reviews) a lot of documents. These annotations can contain valuable knowledge which should be made persistent and sharable with project partners. To lower the sharing effort for project participants, we present a light-weight approach to collect annotations as byproduct from project (-related) documents. The annotations are extracted from documents and interlinked with other experience and knowledge artifacts in a shared Wiki-based experience infrastructure for global software\u00a0\u2026", "num_citations": "3\n", "authors": ["1561"]}
{"title": "Dedicated Support for Experience Sharing in Distributed Software Projects\n", "abstract": " Systematic management of experience and knowledge in distributed software development promises huge increases in effectivity and efficiency. Yet, specific problems need to be overcome: Communication between partners is difficult and awareness about the knowledge available at different locations is impaired. Even motivated developers are often reluctant to share experiences, because they do not know where and how to submit them as well as if they are allowed to share sensitive information or intellectual property. If they submit, their experiences are often presented in a way not useful for others and cannot be easily refined into best practices. In this paper we identify barriers of knowledge sharing in a literature review and discuss how dedicated tool support and automated heuristic critiques can mitigate such problems by offering the following features and qualities: guidance of project participants in creating experiences that will more likely be helpful, positive influence of their motivation to share, and easily accessible and integrated into a trustworthy experience engineering processes. Preliminary evaluation with a prototype shows that this concept can increase willingness to submit experience as well as their quality.", "num_citations": "3\n", "authors": ["1561"]}