{"title": "Model driven design of secure high assurance systems: an introduction to the open platform from the user perspective\n", "abstract": " We present DIME, an integrated solution for the rigorous model-driven development of sophisticated web applications based on the Dynamic Web Application (DyWA) Framework, that is designed to flexibly integrate features such as high assurance and security. DIME provides a family of Graphical Domain-Specific Languages (GDSL), each of which tailored towards a specific aspect of typical web applications, including persistent entities (ie, a data model), data retrieval (ie, search queries), business logic in form of various types of process models, the structure of the user interface, and security. They are modeled on a high level of abstraction in a simplicity-driven fashion that focuses on describing what application is sought, instead of how the application is realized. The choice of platform, programming language, and frameworks is moved to the corresponding (full) code generator which may be changed without touching the models leading to high assurance systems.", "num_citations": "21\n", "authors": ["1737"]}
{"title": "A Fully Model-Based Approach to Software Development for Industrial Centrifuges\n", "abstract": " We present a model-based approach to software development for industrial process automation, overall aiming at decreased development efforts, increased quality, and reduced time to market. Key to this approach is the high-level specification of all required aspects using dedicated domain-specific modeling languages. This abstraction provides both a standardized framework supporting the communication between experts on industrial processes and PLC software developers, as well as the reduction of implementation overhead through full code generation. As a proof of concept, processes for industrial centrifuges are considered. We present the standardized models and tools used to fully generate code for Beckhoff Twin CAT 3. The presented work is the result of a cooperation project at TU Dortmund with the GEA Group AG involving 12\u00a0students.", "num_citations": "12\n", "authors": ["1737"]}
{"title": "Semantics-Based Composition of EMBOSS Services with Bio-jETI\n", "abstract": " Bio-jETI is a framework for model-based, graphical design, execution and management of bioinformatics analysis processes. Formal methodology like automatic service composition extends the framework and, in particular, allows for semantically aware workflow development. In this study we apply the workflow synthesis methodology to the EMBOSS suite of sequence analysis tools. As neither the tool suite itself nor its various interfaces provide ready-to-use semantic annotations, we set up a domain model that uses a high-level, semantically meaningful type nomenclature to describe the input/output behavior of the single EMBOSS tools. Based on this domain model, we demonstrate how working with the large, heterogeneous, and hence manually intractable EMBOSS collection is simplified by our service composition methodology.", "num_citations": "11\n", "authors": ["1737"]}
{"title": "Automatische Generierung von Prozessen im jABC\n", "abstract": " Seit etwa 6.000 Jahren gibt es das Rad. Und noch heute wird es in der Softwareentwicklung t\u00e4glich neu erfunden, indem dieselben Programmfeatures immer wieder nahezu identisch implementiert werden. Es gibt unterschiedliche Ans\u00e4tze, diesem Ph\u00e4nomen entgegenzuwirken. Das beginnt beim einfachen Copy & Paste des Quelltextes und geht \u00fcber das Verteilen von Softwarebibliotheken bis hin zu externen Services. Letztere sind Kernst\u00fcck von Serviceorientierten Architekturen (SOA)[RHS05] und der Lightweight Process Coordination (LPC)[MS04]. All diese Ans\u00e4tze haben jedoch gemeinsam, dass eine gro\u00dfe Menge von Bibliotheken und Services schnell un\u00fcbersichtlich wird. Ein einsteigender Entwickler oder Modellierer muss sich trotz eventuell vorhandener Sortier-und Filterfunktionen zun\u00e4chst langwierig orientieren.Dies legt die Idee nahe, die Orchestrierung von Services automatisieren zu wollen, um den Modellierer bei dieser Orientierung zu unterst\u00fctzen. Bereits vor \u00fcber zehn Jahren bot die Electronic Tool Integration Platform (ETI)[SMB97] eine solche Funktionalit\u00e4t als Onlinedienst. So konnten Anwender Rahmenanforderungen angeben, aus denen Toolsequenzen synthetisiert wurden. Da sich seitdem die Technologien\u2013insbesondere in Hinblick auf Internetdienste\u2013stark weiterentwickelt haben, ist diese Plattform mittlerweile nicht mehr in Betrieb.", "num_citations": "9\n", "authors": ["1737"]}
{"title": "Heavy meta: model-driven domain-specific generation of generative domain-specific modeling tools\n", "abstract": " Software is so prevalent in all areas of life that one could expect we have come up with more simple and intuitive ways for its creation by now. However, software development is still too complicated to easily and efficiently cope with individual demands, customizations, and changes. Model-based approaches promise improvements through a more comprehensible layer of abstraction, but they are rarely fully embraced in practice. They are perceived as being overly complex, imposing additional work, and lacking the flexibility required in the real world. This thesis presents a novel approach to model-driven software engineering that focuses on simplicity through highly specialized tools. Domain experts are provided with development tools tailored to their individual needs, where they can easily specify the intent of the software using their known terms and concepts. This domain specificity (D) is a powerful mechanism\u00a0\u2026", "num_citations": "7\n", "authors": ["1737"]}