{"title": "Empirical research in requirements engineering: trends and opportunities\n", "abstract": " Requirements engineering (RE) being a foundation of software development has gained a great recognition in the recent era of prevailing software industry. A number of journals and conferences have published a great amount of RE research in terms of various tools, techniques, methods, and frameworks, with a variety of processes applicable in different software development domains. The plethora of empirical RE research needs to be synthesized to identify trends and future research directions. To represent a state-of-the-art of requirements engineering, along with various trends and opportunities of empirical RE research, we conducted a systematic mapping study to synthesize the empirical work done in RE. We used four major databases IEEE, ScienceDirect, SpringerLink and ACM and Identified 270 primary studies till the year 2012. An analysis of the data extracted from primary studies shows that\u00a0\u2026", "num_citations": "72\n", "authors": ["1373"]}
{"title": "Causes of requirement change-a systematic literature review\n", "abstract": " Context: Research shows that one of the main reasons of project failure is changing requirements. The success or failure of software projects largely depends upon how we respond to changing requirements. The knowledge about the causes of requirements change can improve our ability to make better decisions and manage changing requirements effectively. Objective: In this paper we present findings from an empirical study that was aimed at identifying the causes of requirement change and the frequency of these causes in different software development phases. Methods: We performed a systematic literature review and went through all the stages required by the process. Although our search strings yielded a large amount of papers but after careful filtration we were left with only five papers (six studies) which reported empirical knowledge about the causes of requirement change. Results: We have identified\u00a0\u2026", "num_citations": "47\n", "authors": ["1373"]}
{"title": "GlobReq: A framework for improving requirements engineering in global software development projects: Preliminary results\n", "abstract": " CONTEXT: Previous work suggests that half of the companies that have tried global software development (GSD) have failed to realise the anticipated outcomes, the root cause of which is often related to requirements problems. Despite the importance of this problem, little research has been carried out to improving requirements engineering process in the GSD projects. OBJECTIVE: In this paper an ongoing project is discussed which will bring together the work of researchers and software development experts to develop a framework for the requirements engineering process of global software development projects (GlobReq). Managers of GSD projects will be able to use GlobReq to plan a requirements engineering process suitable for a specific GSD project. In this paper the need for such a framework along with the proposed methodology, novelty and the preliminary results are discussed. METHODOLOGY: The\u00a0\u2026", "num_citations": "36\n", "authors": ["1373"]}
{"title": "Evidence in software architecture, a systematic literature review\n", "abstract": " Context: Software architecture (SA) plays pivotal role in development and maintenance of large software systems. Architectural decisions impact all subsequent phases in software development life cycle. Structure of large software systems has been in discussion since early 70s but software architecture started emerging as separate discipline since mid-90s. Objective: Researchers have been publishing empirical studies (ie case studies, experiments, experience reports) in SA discipline. Empirical literature has been aggregated in other disciplines of software engineering but no such effort has been made in SA. Objective of this study is to aggregate and synthesize the empirical evidence from literature of software architecture to report the trends, patterns and knowledge gaps. Method: To synthesize the empirical work in SA, we conducted a systematic literature review (SLR). This study reports the results of SLR\u00a0\u2026", "num_citations": "22\n", "authors": ["1373"]}
{"title": "Motivational and de-motivational factors for software engineers: An empirical investigation\n", "abstract": " This paper is based on an industrial survey conducted on software engineer motivation as previous research shows that motivation is amongst the most frequently highlighted causes of software projects failure. Motivation greatly impacts practitioner's productivity. Yet motivation is mostly ignored in software engineering literature and practice. Researchers have conducted studies on motivation in software engineering mostly in western culture. There have been very few studies on motivation of software engineers from Asia. We have not been able to find any empirical study conducted on this subject in South Asia, which is an important region in information technology industry worldwide. We therefore decided to conduct an empirical study in Pakistan to identify factors that motivate or de-motivate software engineers. Given the nature of the research we used an online questionnaire based on Job Characteristic Theory\u00a0\u2026", "num_citations": "16\n", "authors": ["1373"]}
{"title": "Impact of changing communication media on conflict resolution in distributed software development projects\n", "abstract": " Distributed software development (DSD) is a setting in which geographically distributed software teams develop software. Communication plays a critical role in conflict resolution in DSD projects. Different communication media such as email, phone, instant messaging etc. are used during conflict resolution. We investigated the impact of changing sequence of communication media on conflict resolution during requirements engineering in DSD setting. A controlled experiment was conducted, in DSD setting, to see whether changing the sequence of communication media impacts conflict resolution or not? Five teams were made comprising of students from two different universities for the experiment wherein the customer team was from one university and development team from the other university. The results of the experiment show that changing sequence of communication media impacts conflict resolution. We\u00a0\u2026", "num_citations": "11\n", "authors": ["1373"]}
{"title": "Software engineering curriculum: A systematic mapping study\n", "abstract": " Software Engineering (SE) discipline has come a long way since the 1968 NATO conference when the term SE was first used. Lot of work has been done for developing and revising SE curriculum and body of knowledge (e.g. SE 2004, GSwE2009, SWEBOK efforts). Different universities are developing and revising SE program and curricula at graduate and undergraduate levels all over the world. Large number of SE curriculum related efforts are being published in conferences such as CSEET, FIE and REET etc. There is a need to see the state of the art of this abundant literature. In this paper, we report a systematic mapping study conducted to synthesize and aggregate the SE curriculum related reported efforts and to provide a broad overview of the area. Systematic mapping studies are performed to evaluate quantity and types of primary studies in an area of interest in an unbiased and systematic manner.", "num_citations": "9\n", "authors": ["1373"]}
{"title": "Empirical evidence in software architecture: a systematic literature review protocol\n", "abstract": " Software Architecture (SA) plays important role in software development as it acts as a skeleton and the whole development revolves around it. As the SA as a discipline is maturing, large number of empirically supported studies are being reported in SA. There is a need to systematically aggregate, analyze and synthesize evidence based studies in SA. We plan to systematically investigate evidence-based SA studies to see and report state of the art in evidence based SA reported research. This paper aims at providing a brief description of systematic literature review (SLR) protocol to describe a process for synthesizing the empirically supported work in the area of SA. Protocol for this review has already been developed and its implementation is in progress. Expected outcome of this review will be state-of-the-art of empirical work in the field of software architecture, strength and effectiveness of empirical work, best practices and future research directions.", "num_citations": "9\n", "authors": ["1373"]}
{"title": "An empirical study identifying high perceived value requirements engineering practices in global software development projects\n", "abstract": " Requirements-related problems are reported to be the main reason in failures of global software development (GSD) projects. There is not much work done to improve requirements practices for GSD projects. In this paper, we report results of a study conducted in an ongoing project whose aim is to develop a framework for the requirements engineering process of global software development projects. The objective of this paper is to report a recent empirical study which was aimed in identifying high perceived value RE practices in the GSD projects. We used an online survey questionnaire to collect data from 39 RE practitioners of GSD organizations. We have identified 11 frequently cited high value RE practices that should be planned and implemented in GSD projects to avoid frequently occurring requirements related problems.", "num_citations": "8\n", "authors": ["1373"]}
{"title": "Supporting effort estimation in agile software development\n", "abstract": " Background: In Agile Software Development (ASD) planning is valued more than the resulting plans. Planning and estimation are carried out at multiple levels in ASD. Agile plans and estimates are frequently updated to reflect the current situation. It supports shorter release cycles and flexibility to incorporate changing market and customer needs. Many empirical studies have been conducted to investigate effort estimation in ASD. However, the evidence on effort estimation in ASD has not been aggregated and organized.Objective: This thesis has two main objectives: First, to identify and aggregate evidence, from both literature and industry, on effort estimation in ASD. Second, to support research and practice on effort estimation in ASD by organizing the identified knowledge.Method: In this thesis we conducted a Systematic Literature Review (SLR), a systematic mapping study, a questionnaire based industrial survey and an interview based survey.Results: The SLR and survey results showed that agile teams estimate effort, mostly during release and iteration planning, using techniques that are based on experts' subjective assessments. During effort estimation team related cost drivers, such as team members\u2019 expertise, are considered important. The results also highlighted that implementation and testing are the only activities that are accounted for in effort estimates by most agile teams. Our mapping study identified that taxonomies in SE are mostly designed and presented in an ad-hoc manner. To fill this gap we updated an existing method to design taxonomies in a systematic way. The method is then used to design taxonomy on effort\u00a0\u2026", "num_citations": "6\n", "authors": ["1373"]}
{"title": "Security at software architecture level: A systematic mapping study\n", "abstract": " Background: Non functional requirements (NFRs) are greatly influenced by the architectural choices and designs made during architecture phase. Security is an important concern in today's world in most applications. Security, like other NFRs, is also related with software architecture. A lot of work is being reported to deal with security at architecture level. Aim: This paper synthesizes the work that has been reported about security at architecture level. Results: This paper reports a mapping study conducted to see the quantity and type of work reported about security at software architecture level. Results show that most of the work in this area is about proposing and evaluating a solution. Conclusion: The mapping study identified the efforts that have been reported about security at architecture level. The use of systematic mapping technique can bring a significant contribution to research areas and based on the\u00a0\u2026", "num_citations": "6\n", "authors": ["1373"]}
{"title": "Knowledge Management Practices in GSD: A Systematic Literature Review\n", "abstract": " Global software Development (GSD) is a popular software development setting that aims at developing software at low cost with geographically distributed teams. Knowledge Management (KM) is an important issue in GSD. Plethora of research is available to solve GSD issues with Knowledge management practices (KMPs). Evidence about the effectiveness of these practices is scattered among different studies. The need exists to collect, synthesize and review this research at one place. This study explores GSD issues due to lack of knowledge management (KM) and knowledge management practices (KMPs) used to solve these issues. Systematic literature review (SLR) is performed for the identification of KMPs used in GSD projects to handle GSD issues. The study has identified GSD issues due to lack of KM and KMPs used to address these issues.", "num_citations": "4\n", "authors": ["1373"]}
{"title": "VRRM: A VALUE-BASED REQUIREMENTS\u2019RISK MANAGEMENT PROCESS\n", "abstract": " The technological, cost, people and schedule issues faced by software development, make it vulnerable for several types of risks. Among these the requirements\u2019 risks are proven to have the highest contribution. An effective risk management is critical while developing software systems. Moreover, a project can never be successful if stakeholders don\u2019t get their \u201cvalued\u201d things. Every requirement contributes towards some value for a stakeholder. Therefore it is important to manage requirement risks effectively. Also, as different stakeholders have different perception of risk, it is necessary to have a process that can manage requirements\u2019 risks and fulfills the values of stakeholders as well. This paper contributes by presenting a VRRM process that is designed to manage requirements related risks in a value based manner.", "num_citations": "4\n", "authors": ["1373"]}
{"title": "Pedagogical and Structural Analysis of SE Courses\n", "abstract": " One of the ways of improving quality of Software Engineering (SE) education is to develop mechanisms for quantitatively analyzing SE courses taught in universities. We propose a new multidimensional approach for analyzing SE courses. Two aspects are important for this analysis. One is what is covered (how much of the total SE knowledge space is covered in the course)? And second is how is it covered (how effectively SE topics and subtopics are covered in lectures)? We call the first one structural analysis and second one pedagogical analysis. Techniques and metrics for structural and pedagogical analysis of SE courses are presented in this paper together with results from implementation of the work on four SE courses.", "num_citations": "3\n", "authors": ["1373"]}
{"title": "Improving expert estimation of software development effort in agile contexts\n", "abstract": " Background: Expert judgment is the most frequently practiced approach to estimate software development effort. In Agile Software Development (ASD), effort is typically estimated by teams using expert judgment based approaches. Expert effort estimation, being lightweight and practitioner/team-centric, aligns well with ASD contexts. However, in the absence of explicit guidelines, expert effort estimation can be ad-hoc with inconsistent results. Further, due to the lack of emphasis on documentation in ASD, important estimation experience is also likely to be lost. Objective: This thesis has two main objectives: First, to identify and organize evidence from both literature and industry on effort estimation in ASD contexts. Second, using the identified and organized knowledge, to develop and evolve checklists to support and improve the expert effort estimation processes of agile teams. Method: In this thesis we conducted a combination of primary (one industrial survey, one industrial case study involving one company and one multi-case study involving three companies) and secondary studies (one systematic literature review and one systematic mapping study).Results: The systematic literature review and survey showed that most agile teams estimate software development effort using expert estimation approaches. Further, teamrelated cost drivers, such as a team\u2019s skill level, are considered most important. The results showed that organizing the knowledge on effort estimation in agile contexts as a taxonomy was helpful in characterizing the effort estimation cases from the literature and industry. Furthermore, the idea of using estimation checklists\u00a0\u2026", "num_citations": "2\n", "authors": ["1373"]}
{"title": "Evidence in requirements engineering: a systematic literature review protocol\n", "abstract": " Requirements Engineering (RE) is recognized as one of the critical phases in software development. RE has its own journals and conferences where lots of work has been published. As the area is maturing, increasingly large numbers of empirically supported studies have been reported in RE. There is a need to synthesize evidence based RE literature. We plan to systematically investigate evidence based RE studies to see and report state of the art in evidence based RE reported research. This paper aims at providing a systematic literature review (SLR) protocol to describe a process for synthesizing the empirically supported work in the area of RE that will eventually present a state of the art of the field. This SLR intends to not only summarize the empirical data regarding RE but will also be helpful for various practitioners in this field to find out areas of RE rich in terms of tools, techniques, frameworks, models and guidelines to aid in their work. It will also facilitate RE researchers to identify knowledge gaps to recognize needs and chances for future research directions in this field.", "num_citations": "1\n", "authors": ["1373"]}