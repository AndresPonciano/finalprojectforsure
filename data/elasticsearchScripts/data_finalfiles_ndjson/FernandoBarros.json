{"title": "Modeling formalisms for dynamic structure systems\n", "abstract": " We present a new concept for a system network to represent systems that are able to undergo structural change. Change in structure is defined in general terms, and includes the addition and deletion of systems and the modification of the relations among components. The structure of a system network is stored in the network executive. Any change in structure-related information is mapped into modifications in the network structure.Based on these concepts, we derive three new system specifications that provide a shorthand notation to specify classes of dynamic structure systems. These new formalisms are: dynamic structure discrete time system, dynamic structure differential equation specified systems, and dynamic structure discrete event system specification. We demonstrate  that these formalisms are closed under coupling, making hierarchical model construction possible. formalisms are described using set\u00a0\u2026", "num_citations": "276\n", "authors": ["2189"]}
{"title": "Dynamic structure discrete event system specification: a new formalism for dynamic structure modeling and simulation\n", "abstract": " Traditional simulation methodologies do not support changes in model structure during a simulation run. Current methodologies support only changes in model descriptive variables. Changes in structure are thus forced to be represented at the simple behavioral level. Many models are better represented at both behavioral and structural level. We present a new simulation formalism that fully supports changes in model structure and its closure under coupling. The Dynamic Structure Discrete Event System Specification formalism (DSDEVS) supports a new simulation paradigm, structural simulation, as opposed to conventional trajectory simulation. This new formalism supports changes in structure to the full extent, ranging from simple model/connection add/deletion to the exchange of models between network of models. The DELTA simulation environment, an implementation of the DSDEVS formalism, is briefly\u00a0\u2026", "num_citations": "122\n", "authors": ["2189"]}
{"title": "The dynamic structure discrete event system specification formalism\n", "abstract": " The dynamic structure discrete event system specification formalism | Transactions of the Society for Computer Simulation International ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Transactions of the Society for Computer Simulation International Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsTransactions of the Society for Computer Simulation InternationalVol. , No. The dynamic structure discrete event system specification formalism article The dynamic structure discrete event system specification formalism Share on Author: Fernando J Barros profile image FJ Barros View Profile Authors Info & Affiliations Publication: Transactions of the \u2026", "num_citations": "93\n", "authors": ["2189"]}
{"title": "Dynamic structure multiparadigm modeling and simulation\n", "abstract": " This article presents the Heterogeneous Flow System Specification (HFSS), a formalism aimed to represent hierarchical and modular hybrid flow systems with dynamic structure. The concept of hybrid flow systems provides a generalization of the conventional concept of hybrid system and it can represent a whole plethora of systems, namely: discrete event systems, multicomponent and multirate numerical methods, multirate and multicomponent sampling systems, event locators and time-varying systems. The ability to join all these types of models makes HFSS an excellent framework for merging components built in different paradigms. We present several examples of model definition in the HFSS formalism and we also exploit the ability of the HFSS formalism to represent mutirate numerical integrators.", "num_citations": "73\n", "authors": ["2189"]}
{"title": "Abstract simulators for the DSDE formalism\n", "abstract": " We present the DSDE (Dynamic Structure of Discrete Events) formalism, a methodology for representing discrete event systems that change structure dynamically. We prove that the DSDE formalism is closed under coupling and that it can be used to construct hierarchical and modular models. The abstract simulators which are necessary to execute dynamic structure models are also presented. These simulators allow a description of models independent of the actual simulation procedure, and thus encourage model reuse.", "num_citations": "69\n", "authors": ["2189"]}
{"title": "Virtual travel training for autism spectrum disorder: proof-of-concept interventional study\n", "abstract": " Background: Autism Spectrum Disorder (ASD) is a neurodevelopmental disorder characterized by impairments in social interaction and repetitive patterns of behavior, which can lead to deficits in adaptive behavior. In this study, a serious game was developed to train individuals with ASD for an important type of outdoor activity, which is the use of buses as a means of transportation.Objective: The aim of this study was to develop a serious game that defines a \u201csafe environment\u201d where the players became familiar with the process of taking a bus and to validate if it could be used effectively to teach bus-taking routines and adaptive procedures to individuals with ASD.Methods: In the game, players were placed in a three-dimensional city and were submitted to a set of tasks that involved taking buses to reach specific destinations. Participants with ASD (n= 10) underwent between 1 to 3 training sessions. Participants with typical development (n= 10) were also included in this study for comparison purposes and received 1 control session.Results: We found a statistically significant increase in the measures of knowledge of the process of riding a bus, a reduction in the electrodermal activity (a metric of anxiety) measured inside the bus environments, and a high success rate of their application within the game (93.8%).Conclusions: The developed game proved to be potentially useful in the context of emerging immersive virtual reality technologies, of which use in therapies and serious games is still in its infancy. Our findings suggest that serious games, using these technologies, can be used effectively in helping people with ASD become more\u00a0\u2026", "num_citations": "41\n", "authors": ["2189"]}
{"title": "A serious game with virtual reality for travel training with autism spectrum disorder\n", "abstract": " Autism Spectrum Disorder (ASD) is a neurodevelopmental disorder characterized by impairments in social interaction and repetitive patterns of behavior. This article describes the creation of a serious game that prepares individuals with ASD to use buses as a mean of transportation. Virtual reality (VR) support was added, increasing the feeling of presence and the realism of the experience, thus increasing its potential as a learning tool. The game is currently being developed using the Unity game engine and uses the Oculus Rift as virtual reality headset. Preliminary results prove the viability of the experiment and the acceptance from individuals with ASD towards the use of the VR setup. In conclusion, the project aims to understand how games and virtual reality can be used to improve the capabilities of individuals with ASD, and help them live more independently.", "num_citations": "40\n", "authors": ["2189"]}
{"title": "A working prototype of a dynamic geographical information system\n", "abstract": " The objective of this work is to develop a dynamic geographical information system (DGIS) applicable for the simulation of spatio-temporal phenomena. DGIS is designed and implemented as a dynamic raster GIS in a fully integrated systems strategy using theory of modelling and simulation, discrete event systems specifications, and knowledge-based simulation methodologies. The approach accommodates the representations and operators of current GIS in a broader systems representation scheme that includes the constructs for handling continuous time, model base, multiple resolution, hierarchy, taxonomy, variable structure, and intelligent agents. DGIS is defined as an endomorphic system that can be transformed by the user into different, application-specific, spatial dynamic simulation environments depending on the models selected to fit the various aspects of its structure. In this paper we describe the theory\u00a0\u2026", "num_citations": "40\n", "authors": ["2189"]}
{"title": "Towards a theory of continuous flow models\n", "abstract": " We present the continuous flow system specification formalism (CFSS). This formalism provides a digital computer approach to the representation of continuous systems based on a broad interpretation of the sampling concept. Continuous flow models permit to represent systems with both time-varying and multirate sampling. The equivalent dynamic system of a CFSS model is defined. Based on the CFSS formalism a multirate integration method is developed.", "num_citations": "37\n", "authors": ["2189"]}
{"title": "Modeling and simulation of dynamic structure heterogeneous flow systems\n", "abstract": " The author presents the Heterogeneous Flow System Specification (HFSS), a formalism suited to represent combined (discrete/continuous) systems. The new formalism is based on the concept of sampling that is described in general terms to include multirate sampling systems. The HFSS formalism permits the construction of continuous/discrete input/output models in a modular and hierarchical manner. Hierarchical systems have a dynamic structure nature that can be changed over time. To show an application of the HFSS formalism, the author presents a new formalism to numerically solve differential equations with discontinuities using multirate integration methods. Applications of combined and dynamic structure systems are presented.", "num_citations": "34\n", "authors": ["2189"]}
{"title": "Semantics of dynamic structure event-based systems\n", "abstract": " This paper presents the semantics of the Heterogeneous Flow System Specification (HFSS). HFSS is a modular formalism able to describe hierarchical event-based systems with a time-varying structure. While using a traditional representation of discrete event systems it introduces the concept of generalized sampling to achieve a description of continuous signals on digital computers. Sampling is treated as a first order concept being explicitly supported. While push event-based systems can be formalized by discrete event systems, sampling is consider here as a formalization of pull event-based systems. We introduce the new concepts of basic and network HFSS components to describe the semantics of the corresponding HFSS models.", "num_citations": "30\n", "authors": ["2189"]}
{"title": "Multimodels and dynamic structure models: an integration of DSDE/DEVS and OOPM\n", "abstract": " Constructing models of systems that change their structure over time has proved to be a challenging problem, with several proposed solutions. We present two of these approaches and discuss their integration. The parallel Dynamic Structure Discrete Event (DSDE) system specification is based on systems-theoretic concepts and provides a formal specification of variable structure models. Object-oriented physical modeling (OOPM) extends the design approaches of software engineering and employs both static and dynamic models to describe physical objects. OOPM is based on the multi-model concept to support adaptive structures. The integration is achieved by representing multi-models within the dynamic-structure Discrete Event System Specification (DEVS) formalism. Since the latter has been implemented in HLA (High-Level Architecture) compliant form, the integration has the practical consequence that\u00a0\u2026", "num_citations": "29\n", "authors": ["2189"]}
{"title": "Forest fire modelling and simulation in the DELTA environment\n", "abstract": " Traditional simulation methodology supports only changes in models state variables. Some models are better expressed by a combination of both changes in state variables and changes in structure. Dynamic Structure Discrete Event Specification (DSDEVS) is a recently introduced modelling and simulation formalism that provides full support for representing models with time varying structure. The DELTA simulation environment is an implementation of the DSDEVS formalism and provides full support to Structural Simulation. We show the advantages of the Dynamic Structure Cellular Automata describing the model of forest fire spreading and its implementation in the DELTA environment.", "num_citations": "29\n", "authors": ["2189"]}
{"title": "System and method for programming using independent and reusable software units\n", "abstract": " A programming implementation providing support for reusable software units built in a hierarchical and modular form. The implementation includes a repository of the reusable software units, where each are arranged to behave independently, communicate transparently, and facilitate creation of new reusable software units.", "num_citations": "24\n", "authors": ["2189"]}
{"title": "Variable DEVS-variable structure modeling formalism: an adaptive computer architecture application\n", "abstract": " Conventional modeling theory gives support only for representing model behavior, providing little aid for describing changes in model structure. Some models are better represented by changes in their structure. Instead of forcing this changes to be represented at the simple behavioral level, a strong theoretical support is needed to allow the representation of structural changes in a natural way. We present a modeling methodology for representing variable structure systems. Examples of such systems include adaptive computer architectures, ecological systems, fault tolerating computers. We describe an application of this methodology to the modeling and simulation of an adaptive computer architecture.< >", "num_citations": "20\n", "authors": ["2189"]}
{"title": "Increasing software quality through design reuse\n", "abstract": " The development of new applications based on existing design and code increases software quality, since tested assets are more likely to exhibit fewer errors than software developed from scratch. Modular and hierarchical software topologies promote reuse by allowing the development of applications based on independent software units that can be arbitrarily interconnected. In this paper we introduce a different dimension to software reuse based on topology. This kind of reuse is termed here by inheritance of topology and permits the use of existing software topologies to define new ones without incurring in the cost of creating designs from scratch. To illustrate this concept we employ Connectons, a software topology that combines a modular and hierarchical software definition with the request reply paradigm. In this paper we show that inheritance of topology promotes software quality and in particular we show\u00a0\u2026", "num_citations": "16\n", "authors": ["2189"]}
{"title": "Handling simultaneous events in dynamic structure models\n", "abstract": " Simultaneous events are usually a source of modeling errors, not only for this is a difficult concept to capture, but also because current modeling methodologies usually do not provide good solutions for the problem. This topic has been subjected to a large number of discussion and solutions. Most common approaches are based on the assignment of static priorities to events, activities, or processes, in, respectively, event, activity and process world views. In modular methodologies a common approach is to assign priorities to components. Recently, these modeling formalisms have introduced the possibility for handling simultaneous events at the same time, i.e., in parallel. Parallelism removes the difficult task of assigning priorities to models. Dynamic structure models introduced a new dimension to this subject: how to define model structure when simultaneous transitions occur. The parallel dynamic structure\u00a0\u2026", "num_citations": "15\n", "authors": ["2189"]}
{"title": "A Framework for representing numerical multirate integration methods\n", "abstract": " We present the concept of continuous flow specified system (CFSS), which provides a digital computer approach to the representation of continuous systems. From the CFSS formalism is derived a new formalism to represent and numerically solve differential equations. This formalism can integrate differential equations with different time steps, possibly one for each equation.", "num_citations": "11\n", "authors": ["2189"]}
{"title": "On the representation of time in modeling & simulation\n", "abstract": " The representation of time plays a key role in the modeling and simulation of dynamic systems. Traditionally, time has been represented by real numbers for continuous and discrete event models, and integer numbers for what is commonly defined as discrete time models. These choices have been found to be insufficient for achieving deterministic models when representing systems subjected to changes in topology or when simultaneous events occur. In this paper we study the advantages of using the set of hyperreal numbers for the time base. For demonstrating the advantages of Hyperreals over the set of reals we use the Hybrid Flow System Specification (HyFlow) formalism. This formalism uses a single hyperreal time base to achieve a unifying representation of sampling and discrete event semantics. We show that a hyperreal time base (HRTB) enables the definition of deterministic, dynamic topology, hybrid\u00a0\u2026", "num_citations": "10\n", "authors": ["2189"]}
{"title": "Asynchronous, polynomial ODE solvers based on error estimation\n", "abstract": " The efficient integration of systems of ODEs requires the use of adaptive step size able to adjust the computational effort while keeping some desired level of numerical accuracy. Traditional methods use synchronous solvers, where the most demanding equation imposes its time step to all others ODEs. More efficient methods can be developed if one can support asynchronous solvers enabling each ODE to be run with its own step size. In this paper we present the new (A) synchronous (E) rror-Based (C) ontrol step-size solver (AEC), that supports variable and independent step-size ODE integration. The new method is mainly asynchronous, being step size and synchronization controlled by error estimation information. A comparison between AEC and quantized-based solvers is presented.", "num_citations": "9\n", "authors": ["2189"]}
{"title": "Simulating data generated by a network of track-while-scan radars\n", "abstract": " The echoes generated by single conventional rotating track-while-scan beam radars can be approximately described by a stream of uniformly sampled data. However, the combined stream of a multisite radar network can only be represented by non-uniformly sampled data. To combine several data streams a rigorous calculation of the sampling instants is necessary. The ability to simulate the data produced by a radar network permits to study the performance of tracking algorithms when operating under irregular sampled data. To simulate the radar network we employ the heterogeneous flow system specification (HFSS), a modeling and simulation formalism designed to represent dynamic structure hybrid systems. We present the performance of a /spl alpha/-/spl beta/ filter based on the data obtained through the simulation of a network of three track-while-scanning radars.", "num_citations": "9\n", "authors": ["2189"]}
{"title": "A modular representation of fluid stochastic petri nets\n", "abstract": " In this paper we develop a modular representation of Fluid Stochastic Petri Nets (FSPNs) using the Hybrid Flow Systems Specification (HFSS), a formalism that combines the concepts of sampling and discrete events to describe hybrid systems. We show that HFSS provides a sound representation of FSPNs supporting a direct mapping between FSPNs elements and HFSS components. FSPNs can be modeled by a composition of HFSS components preserving the structure of the original FSPNs, removing the need for a model transformation layer to simulate FSPNs, or making it easy to develop such a mapping mechanism. We show that the continuous flow representation used by HFSS enables an efficient simulation of FSPNs. Simulation results are presented for a simple manufacturing system with machines subjected to breakdowns.", "num_citations": "8\n", "authors": ["2189"]}
{"title": "Session-based fault-tolerant design patterns\n", "abstract": " Despite offering reliability against dropped and reordered packets, the widely adopted Transmission Control Protocol (TCP) provides nearly no recovery options for longterm network outages. When the network fails, developers must rollback the application to some coherent state on their own, using error-prone solutions. Overcoming this limitation is, therefore, a deeply investigated and challenging problem. Existing solutions range from transport-layer to application-layer protocols, including additions to TCP, usually transparent to the application. None of these solutions is perfect, because they all impact TCP's simplicity, performance or ubiquity, if not all. To avoid these shortcomings, we contain TCP connection crashes inside a single session layer exposed as a sockets interface. Based on this interface, we create a blocking and a non-blocking fault-tolerant design pattern. We explore the blocking design in an\u00a0\u2026", "num_citations": "8\n", "authors": ["2189"]}
{"title": "Representing hierarchical mobility in software architectures\n", "abstract": " The ability to move components from one hierarchical model to another becomes necessary to support arbitrary changes in software topologies. Mobility allows the access to the hidden interface of a hierarchical component without breaking encapsulation, keeping the architecture modular. Mobility permits also the introduction of new functionally in the application without requiring changes in the architecture, enabling its adaptation to dynamic requirements. To illustrate hierarchical mobility we employ the connecton software architecture (CSA). CSA combines a modular and hierarchical software construction with the object- oriented architectural style to achieve an innovative software architecture that eliminates the limitations of the classical object-oriented technology in supporting modular components. The simulation of a queuing system whose clients are represented by mobile components is provided.", "num_citations": "8\n", "authors": ["2189"]}
{"title": "Efficient Simulation of Large Scale Dynamic Structure Cell Spaces\n", "abstract": " We present the aggregated abstract simulators for the Dynamic Structure Discrete Time System Specification (DSDTSS) formalism. These simulators allow to simulate large scale cell spaces undergoing structural changes efficiently. A generic algorithm for the optimisation of large scale transport processes simulation is provided. This algorithm consists in dynamically controlling the calculation domain (the set of cells whose state is computed at a given time step) during the simulation. Finally, a fire spreading application using the DSDTSS formalism is provided to pinpoint the advantages of using the DSDTSS formalism for modelling and simulating large dynamic structure cell spaces.", "num_citations": "7\n", "authors": ["2189"]}
{"title": "Dynamic-structure discrete event systems: a comparison of methodologies and environments\n", "abstract": " Conventional methodologies constraint models to be static during the all simulation. However, some systems are better perceived if represented by dynamic structure models. Recent work on modeling methodologies and environments has focused on the representation of discrete event systems that undergo structural changes. We describe the dynamic structure discrete event system specification (DSDEVS) and several other approaches to dynamic structure modeling and simulation. The DSDEVS formalism and its implementation in the DELTA simulation environment provide support for building dynamic structure simulation models in an hierarchical and modular manner. We conclude that general systems theory based formalisms offer sound semantics for dynamic structure modeling and simulation.", "num_citations": "7\n", "authors": ["2189"]}
{"title": "Modeling mobility through dynamic topologies\n", "abstract": " The representation of spatially moving entities with models exhibiting a static topology is, in many cases, very difficult to accomplish due to the computational complexity of the communication cost: O(n2), in the general case. Actually, in systems involving sensors, like radars, many messages will also be discarded when entities become out of communication range, burden the simulation with unwanted messages that need to be discarded. To improve model efficiency and expressiveness we develop a solution based on dynamic topologies and peer-to-peer communication (P2PC). In this approach, the topology undergoes a runtime adaptation in order to reflect the current interaction pattern among entities, being peer-to-peer communication links created and destroyed according to the characteristics of emitters and sensors, that include, for example, a minimum threshold power on signal detection. We show that time\u00a0\u2026", "num_citations": "6\n", "authors": ["2189"]}
{"title": "A system theory approach to the representation of mobile digital controllers agents\n", "abstract": " In this paper we provide a formal definition of the component concept using the Heterogeneous Flow Systems Specification formalism (HFFS) a general system theory approach to the representation of timed systems. The HFFS formalism permits the development of hierarchical and modular components whose structure evolves over time. HFSS mobile components, a particular form of structural evolution, can represent mobile entities that exist in many systems like, for example, mobile communication devices and mobile software agents. The formal description is used to model a simple control application, based on mobile software agents, where a mobile hybrid component acts as a digital controller, allowing the runtime update of the control system of a vehicle.", "num_citations": "6\n", "authors": ["2189"]}
{"title": "A formal representation of hybrid mobile components\n", "abstract": " The Heterogeneous Flow System Specification (HFSS) is a modeling formalism that                 represents hybrid simulation components in a modular and hierarchical form. The HFSS                 formalism exploits the hierarchical aspects of modeling by permitting the                 representation of dynamic structure components. An important type of structural                 change involves the migration of a component between two models. This type of                 component is called a mobile component. Component mobility provides a natural                 representation for many complex systems composed of dynamic entities that move                 between places, providing a representation that structurally mimics the reality. The                 author identifies the key operations to support component mobility\u2014namely,                 the ability to remove a component; transmit the component through a channel,                 possibly with some time\u00a0\u2026", "num_citations": "6\n", "authors": ["2189"]}
{"title": "Describing the HLA using the DFSS formalism\n", "abstract": " The High Level Architecture (HLA) is a standard for enabling the interoperability of simulation systems in a distributed computer environment. The HLA has been established by the US/DMSO and it is aimed to promote the communication among complex simulators. In this paper, we present a formal representation of the modeling aspects of the HLA using the Discrete Flow System Specification (DFSS), a modeling formalism aimed to represent dynamic structure systems. The HLA has introduced concepts not typically used in the modeling and simulation field. A formal representation of the HLA permits its description using standard constructs, making the HLA more easily intelligible by a larger community of users. A formal description also permits to highlight the current limitations of the HLA when compared with a more complete formal framework like the DFSS formalism that supports a wider range of\u00a0\u2026", "num_citations": "6\n", "authors": ["2189"]}
{"title": "A modular representation of asynchronous, geometric solvers\n", "abstract": " The representation of complex systems requires the ability to combine several types of models. The simultaneous use of different formalisms to describe distinct aspects of the same system enables the most adequate representation of each sub-model. Although a large number of numerical methods and modeling formalisms have been developed, a common language that enables these algorithms and formalisms to inter-operate is still a major research challenge. In previous work we have developed a representation for several families of models using the Heterogeneous Flow Systems Specification (HFSS). In this paper we extend this set of models by providing a description of geometric ODE solvers in HFSS. Geometric solvers play an essential role for simulation 2nd order energy preserving systems, offering an alternative to the decomposition of systems into 1st order Ordinary Differential Equations (ODEs). This\u00a0\u2026", "num_citations": "5\n", "authors": ["2189"]}
{"title": "Aspect\u2010oriented programming and pluggable software units: a comparison based on design patterns\n", "abstract": " The support for software reuse has been a major goal in the design of programming languages. This goal, however, has proven difficult to reach, being only partially enabled by current software tools. In particular, reuse is not fully supported by object\u2010oriented programming (OOP). Aspect\u2010oriented programming (AOP) has introduced new operators that extend OOP, enabling a superior support for reusability. However, AOP operators exhibit limitations in supporting software reuse and more powerful constructs are still required. We consider the ability to define software in an independent manner as the key construct to enable systematic software reuse. To bridge the gap between independence and practical software tools, we have developed the concept of Independent and Pluggable Software Unit (PU), a construct that supports the definition of software topologies. In this paper, we compare PUs with AOP in their\u00a0\u2026", "num_citations": "5\n", "authors": ["2189"]}
{"title": "Achieving reuse with pluggable software units\n", "abstract": " In this paper we present a solution to software reuse based on Pluggable Units (PUs) that can be used to compose new applications from existing parts. Although this goal has been achieved in hardware design through the creation of integrated circuits (ICs), the attempts to build a software equivalent were not fully successful. Pluggable units are a full fledged software implementation of the IC concept while providing new features not existing in hardware, namely the ability to compose software hierarchically. An application example is provided in JUse, a new Java-based language supporting pluggable units and in JWidget, a pluggable version of Java/Swing.", "num_citations": "5\n", "authors": ["2189"]}
{"title": "Modeling and simulation of parallel adaptive divide-and-conquer algorithms\n", "abstract": " Conventional modeling and simulation formalisms only give support to the representation of model behavior, providing no constructs for describing changes in model structure. However, some systems are better modeled by self-reconfigurable formalisms. We have developed the Discrete Flow System Specification (DFSS) to exploit dynamic structure, component-based and hierarchical model construction. Due to structural similarity, dynamic self-configuring DFSS models offer a\u00a0good description of systems, like adaptive algorithms and reconfigurable computer architectures. In this paper, we present the modeling and simulation of a\u00a0parallel adaptive divide-and-conquer integration algorithm in the CaosTalk modeling and simulation framework, a\u00a0realization of the DFSS formalism.", "num_citations": "5\n", "authors": ["2189"]}
{"title": "Model interoperability in the discrete event paradigm: Representation of continuous models\n", "abstract": " Model interoperability requires that models can be mapped into a common formalism. To achieve this goal in the realm of discrete event Systems we propose a standardization of the DEVS formalism. The DEVS formalism created in the earlier 70s has accommodated several changes since its creation. These changes have, for example, allowed expressing models with dynamic structure, and handling simultaneous events. We overview different DEVS flavors and we present both basic and port/link based formalisms. To increase the scope of model interoperability we also present guidelines for transforming continuous models specified in the Continuous Flow System Specification formalism into discrete event models. This adds to existing alternatives for simulating continuous Systems with discrete event approaches whose asynchronous time flow Supports efficient parallel and distributed execution\u00a0\u2026", "num_citations": "5\n", "authors": ["2189"]}
{"title": "Composition of numerical integrators in the hyflow formalism\n", "abstract": " The representation of complex Cyber-Physical Systems usually requires the ability to combine models described in different modeling formalisms and involving several numerical methods. While ordinary differential equations (ODEs) are a common formalism for representing continuous systems, their solution cannot be efficiently and accurately accomplished by a single numerical integrator. A plethora of methods have been developed to tackle several issues including efficiency, accuracy, and stiffness. Given the variety of methods, a common representation to enable their interoperability is still a major research challenge. In this paper, we introduce the Hybrid Flow System Specification formalism (HyFlow) as a general framework for describing numerical integrators in a modular form. Each numerical method is represented as a particular model in the formalism. Co-simulation is then enabled, since all HyFlow\u00a0\u2026", "num_citations": "4\n", "authors": ["2189"]}
{"title": "Chattering avoidance in hybrid simulation models: A modular approach based on the hyflow formalism\n", "abstract": " The possibility that a hybrid simulation model can change its state infinitely often in a finite time interval impacts negatively, or even disables, the ability to simulate some hybrid systems. This behavior also known as chattering occurs in models that can switch continuously between different modes of operation. In this paper we provide two solutions to different kinds of chattering behavior. One solution is based on model discretization and on sliding mode control, enabling the elimination of chattering in linear systems with relay components. Another approach is based on dynamic topology models. This solution helps eliminate chattering in models that must be prevented to change their operation mode. We provide examples for these approaches and we show that chattering is avoided enabling an efficient simulation of hybrid systems. Solutions are described in HyFlow, a formalism supporting the definition and the interoperability of modular hybrid components.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "On the representation of dynamic topologies: the case for centralized and modular approaches\n", "abstract": " In the development of formalism for representing models with a dynamic structure two policies have emerged: centralized and distributed. In this paper we compare these two approaches under several criteria, including, modularity, implementability and predictability. While distributed control strategies seem to enable a better representation for some systems that have no centralized control over their topology, we show that this advantage is only apparent since ultimately a central manager is required to enforce decisions, irrespective to the nature of the decision process itself. To make the comparison we use HFSS, a centralized formalism, and an hypothetical version of HFSS based on distributed principles.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "On the representation of product lines using pluggable software units: results from an exploratory study\n", "abstract": " The effective development of software product lines (SPLs) requires the ability to create a large variety of applications from a repository of assets. These assets provide the basic building blocks for supporting the creation of each specific product. In this paper we exploit the potential of independent and pluggable software units (PUs) for assembling the products of a related family. PUs support application variability through Inheritance of Topology (IT), a construct that reuses the topology of PUs network models. IT enables new applications to be derived from existing ones by just requiring the definition of the differences. We present results from the development of a microwave oven SPL.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "Modeling and simulation of mobile phones using dynamic topologies\n", "abstract": " Modeling and simulation of mobile devices, like cellular phones, is a challenging task can be better accomplished by mapping the structural changes occurring in the physical system into the corresponding representation. In particular, mobile devices change their interconnections due to displacement, and communication links need to be dynamically created and destroyed according to the physical vicinity. We consider here a dynamic representation for the structure of the real system where changes are reflected into model topology in order to obtain concise and intuitive models. In this paper we analyze an idealized system of mobile cellular phones and the requirements for topology adaptation. This study is based on the Heterogeneous Flow Systems Specification (HFSS), a modular modeling formalism designed to represent hybrid systems with time-variant topologies. This formalism enables the representation of\u00a0\u2026", "num_citations": "4\n", "authors": ["2189"]}
{"title": "An evolving hierarchical & modular approach to resilient software\n", "abstract": " Hierarchical and modular software is a sound paradigm to achieve resilient software. Modularity provides the basic construct to identify faulty software units. Since modular software units have well defined input and output interfaces they simplify some operations, like software replacement. Once identified, a faulty modular software unit can be easily exchanged by a new version, enabling fault correction. In this paper we exploit hierarchical mobility, a particular form of topology adaptation, that involves the transfer of a software unit between two hierarchical units, as a sound construct to enable the development of both evolutive and resilient software. For illustration purposes in achieving resilient software, we use Connectons, a hierarchical, modular and self-modifying software specification formalism and its implementation, in the Desmos software system.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "Comparing synchronous and asynchronous variable step size explicit ODE solvers: A simulation study\n", "abstract": " The efficient integration of ordinary differential equations (ODEs) is an important topic in continuous and hybrid systems research. Current solutions involve variable step size solvers based on synchronous and asynchronous approaches. In this paper we evaluate, by means of simulation, the performance and accuracy of adaptive explicit asynchronous ODE solvers and we compare them with explicit synchronous solvers. Simulation results show that explicit synchronous solvers can exhibit better performance than the corresponding asynchronous methods. We consider a family of systems that can be dynamically partitioned into asynchronous clusters of synchronous ODEs. We show that the ability to independently solve each cluster can lead to significant computation gains.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "04041 Abstracts Collection--Component-Based Modeling and Simulation\n", "abstract": " From 18.01. 04 to 23.01. 04, the Dagstuhl Seminar 04041``Component-Based Modeling and Simulation''was held in the International Conference and Research Center (IBFI), Schloss Dagstuhl. During the seminar, several participants presented their current research, and ongoing work and open problems were discussed. Abstracts of the presentations given during the seminar as well as abstracts of seminar results and ideas are put together in this paper. The first section describes the seminar topics and goals in general. Links to extended abstracts or full papers are provided, if available.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "Hierarchical testing of dynamic structure models: A practical approach\n", "abstract": " Hierarchical testing of dynamic structure models: a practical approach: Transactions of the Society for Computer Simulation International: Vol 15, No 4 ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Transactions of the Society for Computer Simulation International Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsTransactions of the Society for Computer Simulation InternationalVol. , No. Hierarchical testing of dynamic structure models: a practical approach article Hierarchical testing of dynamic structure models: a practical approach Share on Author: Fernando J Barros profile image Fernando J. Barros View Profile Authors Info & Affiliations \u2026", "num_citations": "4\n", "authors": ["2189"]}
{"title": "Adaptive queueing: A study using dynamic structure DEVS\n", "abstract": " Conventional modeling methodologies only give support for the representation of model behavior, providing no help for describing changes in model structure. Some models are better represented by changes in their structure. Instead of forcing these changes to be represented at the simple behavioral level, a strong theoretical support is needed to allow the representation of structural changes in a natural way. In this paper we present a new modeling methodology for representing Dynamic Structure Systems. To illustrate this methodology we describe a dynamic structure queueing system. This system dynamically changes its structure to improve performance.", "num_citations": "4\n", "authors": ["2189"]}
{"title": "Modular representation of asynchronous geometric integrators with support for dynamic topology\n", "abstract": " Geometric integrators play an essential role for simulating second-order energy preserving systems, offering an alternative to the decomposition of systems into first-order Ordinary Differential Equations. This approach, although commonly used nowadays in modeling and simulation software, is not acceptable when long simulation runs are required. In this work we develop a modular representation of geometric, adaptive step-size integrators using the Heterogeneous Flow Systems Specification (HyFlow) formalism. Modularity is achieved in HyFlow through the use of an explicit definition of sampling that is treated as a first-order construct, enabling a novel representation of continuous systems and their seamless integration. We show that the HyFlow representation enables the interoperability of geometrical integrators with other families of models including, for example, conventional integrators, enhancing the\u00a0\u2026", "num_citations": "3\n", "authors": ["2189"]}
{"title": "Towards a universal formalism for modeling & simulation\n", "abstract": " The representation of hybrid systems has shown to be one of the greatest challenges in Modeling & simulation. While discrete event systems can be represented without error, continuous models rely on approximations based in numerical methods. Given the large variety of numerical integrators a unified representation has been elusive due the lack of an universal formalism that can describe all numerical methods and to provide their seamless integration. In this paper, we propose the Hybrid Flow System Specification (HYFLOW) as a unifying representation for different families of numerical integrators for solving ordinary differential equations (ODEs). HYFLOW combines the conventional discrete event approach with a novel representation based on sampling and the support for dense outputs to describe modular and hierarchical hybrid systems. We demonstrate that HYFLOW can describe 1st-order, geometric\u00a0\u2026", "num_citations": "3\n", "authors": ["2189"]}
{"title": "Semantics of multisampling systems\n", "abstract": " We present the semantics of the continuous flow system specification (CFSS). CFSS is a modular formalism able to describe hierarchical sampling-based systems with a time-varying topology. CFSS introduces the concept of multisampling to achieve a description of continuous signals on digital computers. Sampling is treated as a first order concept being explicitly supported. Traditional discrete time machines operate at the same rate simplifying the semantics of their interconnection. However, complex systems require machines to specify their sampling rate independently, making their coordination a challenging problem. The CFSS formalism enables sampling to change over time and from component to component, making CFSS a framework for representing multisampling systems. The ability to join machines with different sampling periods is enabled by a novel representation of continuous systems based on\u00a0\u2026", "num_citations": "3\n", "authors": ["2189"]}
{"title": "Representing dynamic pluggable software units\n", "abstract": " Evolvable systems need to adapt their behavior to a changing environment. Modular systems provide a new perspective on evolvable systems by enabling complex behavior to be represented through changes in system topology. For this purpose, we present Pluggable Units (PUs), a hierarchical, modular and self-modifying software formalism and its realization: JUse, a Java implementation. PUs have reflective capabilities and support ad-hoc topology changes that include the ability to add/remove software units and their interconnections. The expressiveness and the evolvable characteristics of PUs are demonstrated through the description of an ATM simulator.", "num_citations": "3\n", "authors": ["2189"]}
{"title": "Fusion of radar data: A modeling and simulation approach\n", "abstract": " Target tracking plays a major role in traffic management and defense applications. While tracking algorithms can be tested with real data, this situation is often not possible due to the high costs evolved in real experiments and to the impracticability of some unsafe scenarios. To overcome the limitation of accessing algorithm efficiency with real data we describe a modeling environment based on the Heterogeneous Flow Systems Specification methodology (HFSS) that can be used to simulate radar detection. The HFSS formalism can describe multiple radars and multiple targets. To illustrate our approach we test a scenario with two radars and one target.", "num_citations": "3\n", "authors": ["2189"]}
{"title": "Dynamic structure modeling and simulation of the Eratosthenes Sieve for prime numbers\n", "abstract": " Although in most of the modeling methodologies the structure of the models is viewed as time-invariant, dynamic structure models offers a better paradigm to represent certain type of systems. We describe the Dynamic Structure Discrete Event System Specification (DSDEVS) formalism and its implementation, the DELTA modeling and simulation environment. The DSDEVS formalism is used to model the Eratosthenes Sieve for prime numbers. The sieve is modeled in two different perspectives: iterative and recursive. These approaches are compared with respect to performance and model expressiveness. A variation of the iterative solution will be extended to find relatively prime numbers in a scrambled list, showing the generality of the DELTA system.", "num_citations": "3\n", "authors": ["2189"]}
{"title": "A COMPOSITIONAL APPROACH FOR MODELING AND SIMULATION OF BIO-MOLECULAR SYSTEMS\n", "abstract": " The simulation of biological systems is a challenge to modeling methodologies. Living entities are supported by a complex hierarchical network of chemical reactions. The accurate representation of organisms require the use of stochastic chemical equations (SCE) organized into compartments in order to reflect the organization into cells, tissues and organs. In this paper we introduce a modeling and simulation framework based on the Heterogeneous Flow System Specification formalism (HFSS). HFSS provides an hybrid representation of dynamic systems, being able to describe sampled and discrete event systems. These features enable a modular representation of stochastic chemical reactions. In particular, we show that SCE require only two types of HFSS models defined in this paper: molecule holders, and chemical reactors. We provide a description of a HFSS implementation based on pluggable software units (PUs), a component-based framework that supports the development of SCE libraries.", "num_citations": "3\n", "authors": ["2189"]}
{"title": "Design of multi-threaded fault-tolerant connection-oriented communication\n", "abstract": " Fault-tolerance is vital for dependable distributed applications that can deliver service, even in the presence of faults. Over the last few decades, above all protocols proposed to offer reliability and fault-tolerance, TCP grew to become one of the cornerstones of the Internet. However, despite emulating reliable communication in distributed environments, TCP does not handle connection failures when the connectivity is lost for some time, even if both endpoints are still running. When this occurs, developers must rollback the peers to some coherent state, many times with error-prone, ad hoc, or custom application-level solutions. In this paper, we refine the Acceptor-Connector design pattern to tackle the TCP unreliability problem. The pattern decouples the failure-related processing from the connection and service processing, efficiently handling different connections and their possible crashes concurrently, thereby\u00a0\u2026", "num_citations": "2\n", "authors": ["2189"]}
{"title": "Design and Development of a Fault-Tolerant Multi-Threaded Acceptor\n", "abstract": " Fault-tolerance is vital for dependable distributed applications that can deliver service, even in the presence of faults. Over the last few decades, above all protocols proposed to offer reliability and fault-tolerance, TCP grew to become one of the cornerstones of the Internet. However, despite emulating reliable communication in distributed environments, TCP does not handle connection failures when the connectivity is lost for some time, even if both endpoints are still running. When this occurs, developers must rollback the peers to some coherent state, many times with error-prone, ad hoc, or custom application-level solutions.In this report, we refine the Acceptor-Connector design pattern to tackle the TCP unreliability problem. The pattern decouples the failure-related processing from the connection and service processing, efficiently handling different connections and their possible crashes concurrently, thereby yielding more reusable, extensible, and efficient distributed communication. The solution we propose incorporates proven multi-threaded solutions and a buffering scheme that discards the need for an application-layer acknowledgment scheme. This simplifies the development of reliable connection-oriented applications using the ubiquitous TCP protocol.", "num_citations": "2\n", "authors": ["2189"]}
{"title": "On the representation of spatially moving entities using time-variant topologies\n", "abstract": " The representation of spatially moving systems is a complex task since communication is unstructured, making it difficult to assess what are the entities currently communicating. Given that interaction is mainly governed by the physical location of the entities, the communication pattern changes over time requiring a dynamic topology. To solve this problem we use the Heterogeneous Flow Systems Specification (HFSS), a modular modeling formalism designed to represent hybrid systems with time-variant topologies. We exploit the ability to represent dynamic topologies as an alternative to a representation using publish/subscribe (pub/sub) communication. We demonstrate that pub/sub can be modeled with a point-to-point communication framework with a dynamic topology. Additionally, we show that HFSS dynamic topologies can support a large variety of representations taking advantage of the specificities of the\u00a0\u2026", "num_citations": "2\n", "authors": ["2189"]}
{"title": "Event Ordering in Discrete Flow Models\n", "abstract": " A major goal in the design of modeling and simulation formalisms is to guarantee deterministic behavior. To achieve this aim we have developed an approach to establish a total order among events based on a formal and operational definition of causality. The proposed solution is very general enabling its application to any kind of discrete event system irrespective to the simulation engines used to perform model experimentation. Examples of event ordering are given in the DFSS and DEVS formalisms.", "num_citations": "2\n", "authors": ["2189"]}
{"title": "Modeling and simulation of switched systems: A dynamic structure approach\n", "abstract": " We present a new modeling approach to the representation of switched systems based on hybrid flow dynamic structure models. This solution permits to exploit the incremental changes between two models in contrast to more traditional approaches that involve the exchange of complete models. The proposed solution is based on the Heterogeneous Flow System Specification (HFSS), a formalism aimed to represent hierarchical hybrid systems with a time-varying structure. The approach is exemplified by modeling an electrical switched system. Numerical simulation results of this system illustrate the ability of the HFSS formalism to represent multi-rate numerical methods.", "num_citations": "2\n", "authors": ["2189"]}
{"title": "Representation of dynamic structure discrete event models: A systems theory approach\n", "abstract": " The Parallel Dynamic Structure Discrete Event System Specification (DSDE) can represent systems with a time-varying structure. Changes in structure are broadly defined and include changes in models, components and their interactions. We show that the DSDE is closed under the composition operation. This property allows the construction of hierarchical and modular models. The abstract simulators necessary to execute dynamic structure models are presented. These simulators allow a description of models independently of the actual simulation procedure. The DSDE formalism handles simultaneous events in parallel, and it determines, without ambiguity, the network composition when structural changes occur.", "num_citations": "2\n", "authors": ["2189"]}
{"title": "Connection handler: A design pattern for recovery from connection crashes\n", "abstract": " Creating dependable distributed applications for the cloud is a challenging task that heavily depends on the communication middleware. Such middleware will invariably depend on the Transmission Control Protocol (TCP), as TCP stands at the core of reliable communication on the Internet. Despite offering reliability against dropped and out-of-order packets, the ubiquitous TCP provides no recovery options when connections crash due to, for example, lost connectivity. Should this happen, developers must rollback the communication endpoints to some coherent state, using their own error-prone solutions. In fact, overcoming this limitation is a difficult and unsolved problem, and so far, no solution managed to gain wide acceptance, as they all impact TCP\u2019s simplicity, performance, or pervasiveness. In this chapter, we present the Connection Handler design pattern, a reusable design solution that allows the\u00a0\u2026", "num_citations": "1\n", "authors": ["2189"]}
{"title": "On the use of Dynamic Topologies for Representing Spatially Moving Entities\n", "abstract": " In many psychical systems, entities can only communicate when within the range of their sensors. When entities are static, the topology of the communication infrastructure can be known in advance and kept unchanged during simulation. However, representing moving entities becomes more complex since interconnections change with time as the relative distances between entities evolve. Given the dynamic nature of the problem, a common solution involves the use of publish/subscribe communication and the corresponding multicast message passing. In this paper we exploit the use of a peer-to-peer infrastructure (p2p) exhibiting a dynamic topology as an alternative representation for spatially moving entities. We use the Heterogeneous Flow Systems Specification (HFSS), a modular modeling formalism designed to represent hybrid systems with time-variant topologies. We present a simplified model of a\u00a0\u2026", "num_citations": "1\n", "authors": ["2189"]}
{"title": "Extending the groovy language using ast transformations to monitor variables and methods\n", "abstract": " Groovy is a dynamic language based on Java. Groovy enables the development of new operators in order to overcome the language\u2019s own limitations. The extensions to Groovy can be made through Abstract Syntax Tree (AST) Transformations. In this paper, we present two AST Transformations to monitor variables and methods in an AspectJ inspired manner. These transformations make it possible to execute custom closures (lambda expressions) at specific points of the application, enabling the improvement of software development.", "num_citations": "1\n", "authors": ["2189"]}
{"title": "Parallel implementation of a SDM using a GPU for vision-based robot navigation\n", "abstract": " Mobile robotics navigation is an area that has been subject to constant innovation. Possible forms of autonomous navigation may involve visual information and/or odometry. Unlike conventional odometry-based navigation where information from wheel encoders is used to track motion, vision-based navigation performs robot localization using images captured by digital cameras. In the current approach, images are stored in a type of associative memory-Sparse Distributed Memory (SDM), proposed by Pentti Kanerva as a model of the long-term human memory. To speed up processing in real-time, the SDM is implemented in a GPU, taking advantage of GPU parallel processing capabilities. This paper describes the implementation and the performance of a SDM in a GPU, using CUDA programming. The results obtained in the CPU and GPU show that parallelization can improve the performance of the robot.", "num_citations": "1\n", "authors": ["2189"]}
{"title": "MODELING AND SIMULATION OF DYNAMIC TOPOLOGY MODELS: AN OVERVIEW OF APPLICATIONS\n", "abstract": " Many systems undergo changes in their topology. The ability to mimic these changes into systems representations produces models that are easier to understand and to maintain when compared with the corresponding static topology models. The Heterogeneous Flow System Specification (HFSS) is a formalism able to represent hybrid systems with a dynamic topology. HFSS supports the representation of topologies that can reconfigure themselves with the addition/removal of components and their interconnections. In this paper we present several systems modeled with dynamic topologies. We consider the representation of switched systems, mobile components, and unbounded cellular automata. We also provide the HFSS representation of spatially moving entities, a particular class of models where dynamic topologies can provide an effective representation.", "num_citations": "1\n", "authors": ["2189"]}
{"title": "A formal definition of dynamic structure hybrid simulation model\n", "abstract": " Summary form only given. The heterogeneous flow system specification (HFSS) is a modular formalism able to describe hybrid hierarchical models with a time-varying structure. The HFSS support for structural changes ranges from the addition/deletion of components and connections to the representation of mobile components. While using a traditional representation of discrete event systems, HFSS introduces the concept of generalized sampling to achieve the description of continuous signals. Sampling is treated as a first order concept being explicitly supported. We present the semantics of the HFSS formalism by introducing the new concept of HFSS component. This concept makes a clear distinction between model and component that have been usually employed interchangeably in M&S. The herein developed concept of component introduces a novel abstraction in modeling and simulation and we expect it\u00a0\u2026", "num_citations": "1\n", "authors": ["2189"]}
{"title": "Deterministic simulation of hybrid flow components\n", "abstract": " Determinism plays a key role in both model verification and in achieving accurate simulation statistical results. In this paper we present a general framework for achieving determinism in the execution of hybrid simulation models. This framework guarantees that models will produce the same results irrespective to the simulation kernel they are executed. Thus, hybrid models can produce the same trace when executed in sequential or parallel machines and in this case when conservative or optimistic approaches are employed. For describing hybrid flow models we use the Heterogeneous Flow System Specification (HFSS), a hierarchical and modular formalism that can represent systems with a dynamic topology. The paper also solves the problems introduced by these systems in achieving deterministic simulations.", "num_citations": "1\n", "authors": ["2189"]}
{"title": "Estudo do desempenho de VoIP na presence de tr\u00e1fego best-effort\n", "abstract": " O VoIP (Voice over Internet Protocol) tem assumido uma import\u00e2ncia crescente no mercado de telecomunica\u00e7\u00f5es. Ao usar a Internet como meio de transmiss\u00e3o da voz, o VoIP permite uma redu\u00e7\u00e3o de custos significativa, ligando quaisquer dois pontos que lhe tenham acesso. No entanto, um servi\u00e7o de voz requer restri\u00e7\u00f5es especiais de modo a ser obtida uma comunica\u00e7\u00e3o que satisfa\u00e7a as exig\u00eancias de Qualidade de Servi\u00e7o dos interlocutores. Neste artigo explicam-se os conceitos b\u00e1sicos da VoIP e realizam-se alguns testes num ambiente de simula\u00e7\u00e3o simplificado, usando tr\u00e1fego best-effort e o User Datagram Protocol (UDP), para determinar a performance de uma transmiss\u00e3o gen\u00e9rica de VoIP. S\u00e3o analisados os efeitos da utiliza\u00e7\u00e3o de uma rede com classes de prioridades distintas e o efeito de alguns par\u00e2metros sobre a transmiss\u00e3o\u2013lat\u00eancia, jitter, perda de pacotes, tamanho dos buffers.", "num_citations": "1\n", "authors": ["2189"]}