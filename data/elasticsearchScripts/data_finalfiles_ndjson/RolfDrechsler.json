{"title": "Advanced formal verification\n", "abstract": " Modern circuits may contain up to several hundred million transistors. In the meantime it has been observed that verification becomes the major bottleneck in design flows, ie up to 80% of the overall design costs are due to verification. This is one of the reasons why recently several methods have been proposed as alternatives to classical simulation. Simulation alone cannot guarantee sufficient coverage of the design resulting in bugs that may remain undetected. As alternatives formal verification techniques have been proposed. Instead of simulating a design the correctness is proven by formal techniques. There are many different areas where these approaches can be used, like equivalence checking, property checking or symbolic simulation. Meanwhile these methods have been successfully applied in many industrial projects and have become the state-of-the-art technique in several fields. But the deployment\u00a0\u2026", "num_citations": "185\n", "authors": ["1866"]}
{"title": "RTL-datapath verification using integer linear programming\n", "abstract": " Satisfiability of complex word-level formulas often arises as a problem informal verification of hardware designs described at the register transfer level (RTL). Even though most designs are described in a hardware description language (HDL), like Verilog or VHDL, usually this problem is solved in the Boolean domain, using Boolean solvers, These engines often show a poor performance for data path verification. Instead of solving the problem at the bit-level, a method is proposed to transform conjunctions of bitvector equalities and inequalities into sets of integer linear arithmetic constraints. It is shown that it is possible to correctly model the modulo semantics of HDL operators as linear constraints. Integer linear constraint solvers are used as a decision procedure for bitvector arithmetic. In the implementation we focus on verification of arithmetic properties of Verilog-HDL designs. Experimental results show\u00a0\u2026", "num_citations": "170\n", "authors": ["1866"]}
{"title": "Binary decision diagrams in theory and practice\n", "abstract": " Decision diagrams (DDs) are the state-of-the-art data structure in VLSI CAD and have been successfully applied in many other fields. DDs are widely used and are also integrated in commercial tools. This special section comprises six contributed articles on various aspects of the theory and application of DDs. As preparation for these contributions, the present article reviews the basic definitions of binary decision diagrams (BDDs). We provide a brief overview and study theoretical and practical aspects. Basic properties of BDDs are discussed and manipulation algorithms are described. Extensions of BDDs are investigated and by this we give a deeper insight into the basic data structure. Finally we outline several applications of BDDs and their extensions and suggest a number of articles and books for those who wish to pursue the topic in more depth.", "num_citations": "169\n", "authors": ["1866"]}
{"title": "Robust multi-objective optimization in high dimensional spaces\n", "abstract": " In most real world optimization problems several optimization goals have to be considered in parallel. For this reason, there has been a growing interest in Multi-Objective Optimization (MOO) in the past years. Several alternative approaches have been proposed to cope with the occurring problems, e.g.\u00a0how to compare and rank the different elements. The available techniques produce very good results, but they have mainly been studied for problems of \u201clow dimension\u201d, i.e.\u00a0with less than 10 optimization objectives.               In this paper we study MOO for high dimensional spaces. We first review existing techniques and discuss them in our context. The pros and cons are pointed out. A new relation called \u03b5-Preferred is presented that extends existing approaches and clearly outperforms these for high dimensions. Experimental results are presented for a very complex industrial scheduling problem, i.e.\u00a0a\u00a0\u2026", "num_citations": "132\n", "authors": ["1866"]}
{"title": "Implementing a multiple-valued decision diagram package\n", "abstract": " Decision diagrams are the state-of-the-art representation for logic functions, both binary and multiple-valued. Here we consider issues regarding the efficient implementation of a package for the creation and manipulation of multiple-valued decision diagrams (MDDs). In particular we identify issues that differ from binary decision diagram packages. We describe a matrix method for level interchange in MDDs that is essential for implementing variable reordering strategies. In addition, it is the basis for a novel approach to performing logic operations on MDDs, which we also present. Experimental results demonstrate the efficiency of this approach.", "num_citations": "132\n", "authors": ["1866"]}
{"title": "Fast exact minimization of BDDs\n", "abstract": " We present a new exact algorithm for finding the optimal variable ordering for reduced ordered Binary Decision Diagrams (BDDs). The algorithm makes use of a lower bound technique known from VLSI design. Up to now this technique has been used only for theoretical considerations and if is adapted here for our purpose. Furthermore, the algorithm supports symmetry aspects and makes use of a hashing based data structure. Experimental results are given to demonstrate the efficiency of our approach. We succeeded in minimizing adder functions with up to 64 variables, while all other previously presented approaches fail.", "num_citations": "126\n", "authors": ["1866"]}