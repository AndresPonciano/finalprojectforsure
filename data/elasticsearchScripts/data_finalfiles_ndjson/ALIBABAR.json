{"title": "Identifying relevant studies in software engineering\n", "abstract": " ContextSystematic literature review (SLR) has become an important research methodology in software engineering since the introduction of evidence-based software engineering (EBSE) in 2004. One critical step in applying this methodology is to design and execute appropriate and effective search strategy. This is a time-consuming and error-prone step, which needs to be carefully planned and implemented. There is an apparent need for a systematic approach to designing, executing, and evaluating a suitable search strategy for optimally retrieving the target literature from digital libraries.ObjectiveThe main objective of the research reported in this paper is to improve the search step of undertaking SLRs in software engineering (SE) by devising and evaluating systematic and practical approaches to identifying relevant studies in SE.MethodWe have systematically selected and analytically studied a large number\u00a0\u2026", "num_citations": "431\n", "authors": ["160"]}
{"title": "Establishing and maintaining trust in software outsourcing relationships: An empirical investigation\n", "abstract": " Our research objective is to understand software outsourcing practitioners\u2019 perceptions of the role of trust in managing client\u2013vendor relationships and the factors that are critical to trust in off-shore software outsourcing relationships. Participants were 12 Vietnamese software development practitioners developing software for Far Eastern, European, and American clients. They identified that cultural understanding, creditability, capabilities, and personal visits are important factors in gaining the initial trust of a client, while cultural understanding, communication strategies, contract conformance, and timely delivery are vital factors in maintaining that trust. We contrast Vietnamese and Indian practitioners\u2019 views on factors affecting trust relationships.", "num_citations": "255\n", "authors": ["160"]}
{"title": "Towards an evidence-based understanding of electronic data sources\n", "abstract": " Systematic Literature Reviews and Systematic Mapping Studies are relatively new forms of secondary studies in software engineering. Identifying relevant papers from various Electronic Data Sources (EDS) is one of the key activities of conducting these kinds of studies. Hence, the selection of EDS for searching the potentially relevant papers is an important decision, which can affect a study\u2019s coverage of relevant papers. Researchers usually select EDS mainly based on personal knowledge, experience, and preferences and/or recommendations by other researchers. We believe that building an evidence-based understanding of EDS can enable researchers to make more informed decisions about the selection of EDS. This paper reports our initial effort towards this end. We propose an initial set of metrics for characterizing the EDS from the perspective of the needs of secondary studies. We explain the usage and benefits of the proposed metrics using the data gathered from two secondary studies. We also tried to synthesize the data from the two studies and that from literature to provide initial evidence-based heuristics for EDS selection.", "num_citations": "143\n", "authors": ["160"]}
{"title": "Software Process Improvement barriers: A cross-cultural comparison\n", "abstract": " ContextSoftware Process Improvement initiatives have been around for many years with the growing globalisation of software development is making them increasingly important.ObjectiveThe objective of this exploratory research is to gain an in-depth understanding of barriers that can undermine SPI, in the context of Global Software Development, from the perspective of software development practitioners; this will enable SPI managers to better manage SPI initiatives. We intend to discover if the barriers to SPI initiatives in a developed country are different to those in a developing country.MethodIn an empirical study, Vietnamese software practitioners\u2019 experiences of SPI barriers are compared with barriers identified by Australian practitioners. Face-to-face questionnaire-based survey sessions with 23 Vietnamese SPI practitioners were conducted. Our survey included barriers to SPI improvement initiatives\u00a0\u2026", "num_citations": "136\n", "authors": ["160"]}
{"title": "Systematic reviews in software engineering: An empirical investigation\n", "abstract": " BackgroundSystematic Literature Reviews (SLRs) have gained significant popularity among Software Engineering (SE) researchers since 2004. Several researchers have also been working on improving the scientific and methodological infrastructure to support SLRs in SE. We argue that there is also an apparent and essential need for evidence-based body of knowledge about different aspects of the adoption of SLRs in SE.ObjectiveThe main objective of this research is to empirically investigate the adoption, value, and use of SLRs in SE research from various perspectives.MethodWe used mixed-methods approach (systematically integrating tertiary literature review, semi-structured interviews and questionnaire-based survey) as it is based on a combination of complementary research methods which are expected to compensate each others\u2019 limitations.ResultsA large majority of the participants are convinced of\u00a0\u2026", "num_citations": "132\n", "authors": ["160"]}
{"title": "A tale of migration to cloud computing for sharing experiences and observations\n", "abstract": " Cloud computing is an emerging paradigm, which promises to make the utility computing model comprehensively implemented by using virtualization technologies. An increasing number of enterprises have started providing and using Cloud-enabled infrastructures and services. However, the advancement of cloud computing poses several new challenges to existing methods and approaches to develop and evolve software intensive systems. This paper reports our experiences and observations gained from migrating an Open Source Software (OSS), Hackystat, to cloud computing. We expect that our description of Hackystat's architecture prior and after migration and design decisions can provide some guidance about modifying architecture of a service-based system for cloud computing. Moreover, we also hope that our experiences reported in this paper can contribute to the identification of some research\u00a0\u2026", "num_citations": "127\n", "authors": ["160"]}
{"title": "Systematic literature reviews in software engineering: Preliminary results from interviews with researchers\n", "abstract": " Systematic Literature Reviews (SLRs) have been gaining significant attention from software engineering researchers since 2004. Several researchers have reported their experiences of and lessons learned from applying systematic reviews to different subject matters in software engineering. However, there has been no attempt at independently exploring experiences and perceptions of the practitioners of systematic reviews in order to gain an in-depth understanding of various aspects of systemic reviews as a new research methodology in software engineering. We assert that there is a need of evidence based body of knowledge about the application of systematic reviews in software engineering. To address this need, we have started an empirical research program that aims to contribute to the growing body of knowledge about systematic reviews in software engineering. This paper reports the design, logistics\u00a0\u2026", "num_citations": "114\n", "authors": ["160"]}
{"title": "An automated tool for generating UML models from natural language requirements\n", "abstract": " This paper describes a domain independent tool, named, UML Model Generator from Analysis of Requirements (UMGAR), which generates UML models like the Use-case Diagram, Analysis class model, Collaboration diagram and Design class model from natural language requirements using efficient Natural Language Processing (NLP) tools. UMGAR implements a set of syntactic reconstruction rules to process complex requirements into simple requirements. UMGAR also provides a generic XMI parser to generate XMI files for visualizing the generated models in any UML modeling tool. With respect to the existing tools in this area, UMGAR provides more comprehensive support for generating models with proper relationships, which can be used for large requirement documents.", "num_citations": "110\n", "authors": ["160"]}
{"title": "Collaborative software development platforms for crowdsourcing\n", "abstract": " Outsourcing to the crowd, or crowdsourcing, has launched extremely successful businesses, such as Linux. But platforms for efficient collaboration and crowdsourcing support are still emerging. This article provides an overview of current technologies for crowdsourcing.", "num_citations": "99\n", "authors": ["160"]}
{"title": "On searching relevant studies in software engineering\n", "abstract": " BACKGROUND: Systematic Literature Review (SLR) has become an important research methodology in software engineering since 2004. One critical step in applying this methodology is to design and execute appropriate and effective search strategy. This is quite time consuming and error-prone step, which needs to be carefully planned and implemented. There is an apparent need of a systematic approach to designing, executing, and evaluating a suitable search strategy for optimally retrieving the target literature from digital libraries. OBJECTIVE: The main objective of the research reported in this paper is to improve the search step of doing SLRs in SE by devising and evaluating systematic and practical approaches to identifying relevant studies in SE. OUTCOMES: We have systematically selected and analytically studied a large number of papers to understand the state-of-the-practice of search strategies in EBSE. Having identified the limitations of the current ad-hoc nature of search strategies used by SE researchers for SLR, we have devised a systematic approach to developing and executing optimal search strategies in SLRs. The proposed approach incorporates the concept of \u2018quasi-gold standard\u2019, which consists of collection of known studies and corresponding \u2018quasi-sensitivity\u2019 into the search process for evaluating search performance. We report the case study and its finding to demonstrate that the approach is able to improve the rigor of search process in an SLR, and can serves as the supplements to the guidelines for SLRs in EBSE. We plan to further evaluate the proposed approach using several case studies with varying topics\u00a0\u2026", "num_citations": "93\n", "authors": ["160"]}
{"title": "Agile Software Architecture: Aligning Agile Processes and Software Architectures\n", "abstract": " Agile software development approaches have had significant impact on industrial software development practices. Today, agile software development has penetrated to most IT companies across the globe, with an intention to increase quality, productivity, and profitability. Comprehensive knowledge is needed to understand the architectural challenges involved in adopting and using agile approaches and industrial practices to deal with the development of large, architecturally challenging systems in an agile way. Agile Software Architecture focuses on gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox. Readers will learn how agile and architectural cultures can co-exist and support each other according to the context. Moreover, this book will also provide useful leads for future research in architecture and agile to bridge such gaps by developing appropriate approaches that incorporate architecturally sound practices in agile methods. Presents a consolidated view of the state-of-art and state-of-practice as well as the newest research findings Identifies gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox Explains whether or not and how agile and architectural cultures can co-exist and support each other depending upon the context Provides useful leads for future research in both architecture and agile to bridge such gaps by developing appropriate approaches, which incorporate architecturally sound practices in agile methods", "num_citations": "92\n", "authors": ["160"]}
{"title": "Migrating service-oriented system to cloud computing: An experience report\n", "abstract": " Cloud computing has gained significant attention of industry and academic sectors which are interested in adopting or experimenting with this technology. An increasing number of companies are expected to migrate their systems to cloud enabled infrastructures. However, there has not been much attention paid to provide sufficient process support. Since migration projects are likely to encounter several kinds of challenges, it is important to identify and share the process and logistical requirements of migration projects in order to build a body of knowledge of appropriate process, methods, and tools. This paper purports to contribute to the growing knowledge of how to migrate existing systems to cloud computing by reporting our effort aimed at migrating an Open Source Software (OSS) framework, Hackystat, to cloud computing. We report the main steps followed, the process and technical challenges faced, and\u00a0\u2026", "num_citations": "88\n", "authors": ["160"]}
{"title": "Identifying high perceived value practices of CMMI level 2: An empirical study\n", "abstract": " ObjectiveIn this paper, we present findings from an empirical study that was aimed at identifying the relative \u201cperceived value\u201d of CMMI level 2 specific practices based on the perceptions and experiences of practitioners of small and medium size companies. The objective of this study is to identify the extent to which a particular CMMI practice is used in order to develop a finer-grained framework, which encompasses the notion of perceived value within specific practices.MethodWe used face-to-face questionnaire based survey sessions as the main approach to collecting data from 46 software development practitioners from Malaysia and Vietnam. We asked practitioners to choose and rank CMMI level 2 practices against the five types of assessments (high, medium, low, zero or do not know). From this, we have proposed the notion of \u2018perceived value\u2019 associated with each practice.ResultsWe have identified three\u00a0\u2026", "num_citations": "80\n", "authors": ["160"]}
{"title": "An exploratory study of architectural practices and challenges in using agile software development approaches\n", "abstract": " Agile software development approaches have recently gained popularity as a mechanism for reducing cost and increasing ability to handle change in dynamic market conditions. However, there is also a significant concern about the role and importance of the issues related to the software architecture of a system being developed using agile approaches. There is to date little empirical evidence available on what software architecture related practices are followed by teams using agile approaches and the kinds of architectural challenges resulting from using agile approaches. This paper reports a case study aimed to empirically identify and understand the architectural practices and challenges of teams using agile approaches. The findings provide useful information about the researched issues and also highlight the areas that need to be focused on for integrating agile and architecture-centric approaches.", "num_citations": "73\n", "authors": ["160"]}
{"title": "Critical factors in establishing and maintaining trust in software outsourcing relationships\n", "abstract": " Trust is considered one of the most important factors for successfully managing software outsourcing relationships. However, there is lack of research into understanding the factors that are considered important in establishing and maintaining trust between clients and vendors. The goal of this research is to gain an understanding of software outsourcing vendors' perceptions of the importance of factors that are critical to the establishment and maintenance of trust in software outsourcing projects in Vietnam. We used a multiple case study design to guide our research and in-depth interviews to collect qualitative data from 12 Vietnamese software development practitioners drawn from 8 companies that have been developing software for Far Eastern, European, and American clients. Vendor companies identified that cultural understanding, creditability, capabilities, and personal visits are important factors in gaining the\u00a0\u2026", "num_citations": "63\n", "authors": ["160"]}
{"title": "Software architectures for robotic systems: A systematic mapping study\n", "abstract": " ContextSeveral research efforts have been targeted to support architecture centric development and evolution of software for robotic systems for the last two decades.ObjectiveWe aimed to systematically identify and classify the existing solutions, research progress and directions that influence architecture-driven modeling, development and evolution of robotic software.Research MethodWe have used Systematic Mapping Study (SMS) method for identifying and analyzing 56 peer-reviewed papers. Our review has (i) taxonomically classified the existing research and (ii) systematically mapped the solutions, frameworks, notations and evaluation methods to highlight the role of software architecture in robotic systems.Results and ConclusionsWe have identified eight themes that support architectural solutions to enable (i) operations, (ii) evolution and (iii) development specific activities of robotic software. The research\u00a0\u2026", "num_citations": "62\n", "authors": ["160"]}
{"title": "Data exfiltration: A review of external attack vectors and countermeasures\n", "abstract": " ContextOne of the main targets of cyber-attacks is data exfiltration, which is the leakage of sensitive or private data to an unauthorized entity. Data exfiltration can be perpetrated by an outsider or an insider of an organization. Given the increasing number of data exfiltration incidents, a large number of data exfiltration countermeasures have been developed. These countermeasures aim to detect, prevent, or investigate exfiltration of sensitive or private data. With the growing interest in data exfiltration, it is important to review data exfiltration attack vectors and countermeasures to support future research in this field.ObjectiveThis paper is aimed at identifying and critically analysing data exfiltration attack vectors and countermeasures for reporting the status of the art and determining gaps for future research.MethodWe have followed a structured process for selecting 108 papers from seven publication databases\u00a0\u2026", "num_citations": "60\n", "authors": ["160"]}
{"title": "Assessing architectural drift in commercial software development: a case study\n", "abstract": " Objectives: Software architecture is perceived as one of the most important artefacts created during a system's design. However, implementations often diverge from their intended architectures: a phenomenon called architectural drift. The objective of this research is to assess the occurrence of architectural drift in the context of de novo software development, to characterize it, and to evaluate whether its detection leads to inconsistency removal. Method: An in vivo, longitudinal case study was performed during the development of a commercial software system, where an approach based on Reflexion Modelling was employed to detect architectural drift. Observation and think\u2010aloud data, captured during the system's development, were assessed for the presence and types of architectural drift. When divergences were identified, the data were further analysed to see if identification led to the removal of these\u00a0\u2026", "num_citations": "58\n", "authors": ["160"]}
{"title": "Architectural tactics for big data cybersecurity analytics systems: a review\n", "abstract": " ContextBig Data Cybersecurity Analytics (BDCA) systems leverage big data technologies for analyzing security events data to protect organizational networks, computers, and data from cyber attacks.ObjectiveWe aimed at identifying the most frequently reported quality attributes and architectural tactics for BDCA systems.MethodWe used Systematic Literature Review (SLR) method for reviewing 74 papers.ResultOur findings are twofold: (i) identification of 12 most frequently reported quality attributes for BDCA systems; and (ii) identification and codification of 17 architectural tactics for addressing the identified quality attributes. The identified tactics include six performance tactics, four accuracy tactics, two scalability tactics, three reliability tactics, and one security and usability tactic each.ConclusionOur study reveals that in the context of BDCA (a) performance, accuracy and scalability are the most important quality\u00a0\u2026", "num_citations": "55\n", "authors": ["160"]}
{"title": "Searching the web of things: State of the art, challenges, and solutions\n", "abstract": " Technological advances allow more physical objects to connect to the Internet and provide their services on the Web as resources. Search engines are the key to fully utilize this emerging Web of Things, as they bridge users and applications with resources needed for their operation. Developing these systems is a challenging and diverse endeavor due to the diversity of Web of Things resources that they work with. Each combination of resources in query resolution process requires a different type of search engine with its own technical challenges and usage scenarios. This diversity complicates both the development of new systems and assessment of the state of the art. In this article, we present a systematic survey on Web of Things Search Engines (WoTSE), focusing on the diversity in forms of these systems. We collect and analyze over 200 related academic works to build a flexible conceptual model for WoTSE\u00a0\u2026", "num_citations": "54\n", "authors": ["160"]}
{"title": "Towards process support for migrating applications to cloud computing\n", "abstract": " Cloud computing is an active area of research for industry and academia. There are a large number of organizations providing cloud computing infrastructure and services. In order to utilize these infrastructure resources and services, existing applications need to be migrated to clouds. However, a successful migration effort needs well-defined process support. It does not only help to identify and address challenges associated with migration but also provides a strategy to evaluate different platforms in relation to application and domain specific requirements. This paper present a process framework for supporting migration to cloud computing based on our experiences from migrating an Open Source System (OSS), Hackystat, to two different cloud computing platforms. We explained the process by performing a comparative analysis of our efforts to migrate Hackystate to Amazon Web Services and Google App\u00a0\u2026", "num_citations": "53\n", "authors": ["160"]}
{"title": "Demotivators of software process improvement: an empirical investigation\n", "abstract": " We have conducted an empirical study with 23 Vietnamese software practitioners to determine Software Process Improvement (SPI) demotivators. We have compared the demotivators identified by the Vietnamese practitioners with the demotivators identified by UK practitioners. The main objective of this study is to provide SPI managers with insight into the nature of factors that can hinder the success of a SPI program, so that SPI managers can better manage those demotivators to maximize practitioners' support for an SPI program. We used face\u2010to\u2010face questionnaire\u2010based survey sessions for gathering data. We also asked the participants to rank each identified SPI demotivator on a five\u2010point scale (high, medium, low, zero or do not know) to determine the perceived importance of each demotivator. From this, we proposed the notion of \u2018perceived value\u2019 associated with each identified demotivator. Our findings\u00a0\u2026", "num_citations": "53\n", "authors": ["160"]}
{"title": "Global software engineering: Identifying challenges is important and providing solutions is even better\n", "abstract": " Editorial: Global software engineering: Identifying challenges is important and providing solutions is even better: Information and Software Technology: Vol 56, No 1 ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Information and Software Technology Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsInformation and Software TechnologyVol. , No. Editorial: Global software engineering: Identifying challenges is important and providing solutions is even better article Editorial: Global software engineering: Identifying challenges is important and providing solutions is even better Share on Authors: Muhammad Ali Babar profile image Muhammad , : :\u2026", "num_citations": "49\n", "authors": ["160"]}
{"title": "An industrial case of exploiting product line architectures in agile software development\n", "abstract": " There has been an increased interest in exploring the ways of integrating agile software development and software product line approaches. Both approaches share several common goals, which provide the motivation for integrating them. However, there has been little empirical research for understanding how these approaches can be integrated in industrial settings. This paper presents the findings from a case study of a software development company that has successfully integrated software product line architecture and agile software development practices. The company\u2019s processes are described based on product line and agile practices. The results are expected to provide useful insights into the mechanics of exploiting product line practices in agile software development despite apparent philosophical clashes between the two approaches.", "num_citations": "48\n", "authors": ["160"]}
{"title": "De-motivators of software process improvement: An analysis of vietnamese practitioners\u2019 views\n", "abstract": " We have conducted face-to-face questionnaire based survey sessions with twenty-three Vietnamese software practitioners in order to determine software process improvement (SPI) de-motivators. The main objective of this study is to provide SPI practitioners with some insight into designing appropriate SPI implementation strategies and to maximize practitioners support for SPI.               We asked practitioners to choose and rank various SPI de-motivator against the five types of assessments (high, medium, low, zero or do not know). From this, we propose the notion of \u2019perceived value\u2019 associated with each SPI de-motivator. We have identified \u2019high\u2019 and \u2019medium\u2019 perceived values demotivators that can undermine SPI initiatives. We have identified what demotivates developers and managers to be actively involved in SPI initiatives. We have also identified SPI de-motivators of small-medium and large sized\u00a0\u2026", "num_citations": "47\n", "authors": ["160"]}
{"title": "An empirical investigation of systematic reviews in software engineering\n", "abstract": " BACKGROUND: Systematic Literature Reviews (SLRs) have gained significant popularity among software engineering (SE) researchers since 2004. Several researchers have also been working on improving the scientific and technological support for SLRs in SE. We argue that there is also an essential need for evidence-based body of knowledge about different aspects of the adoption of SLRs in SE. OBJECTIVE: The main objective of this research is to empirically investigate the adoption and use of SLRs in SE research from various perspectives. METHOD: We used multi-method approach as it is based on a combination of complementary research methods which are expected to compensate each others' limitations. RESULTS: A large majority of the participants are convinced of the value of using a rigorous and systematic methodology for literature reviews. However, there are concerns about the required time\u00a0\u2026", "num_citations": "44\n", "authors": ["160"]}
{"title": "'Limited'Democracy in Ghana and Uganda. What Is Most Important to International Actors: Stability or Political Freedom?\n", "abstract": " Until the early 1990s very few governments in sub-Saharan Africa were democratically elected. With military, one-party or personalist regimes the norm, and beset by economic problems and often riven by growing societal strife, Africa was a region which seemed, to many observers, to be in crisis. As Villal\u00f3n noted, things in many African countries seemed \u201csomehow [to have]\u2018gone wrong\u2019since independence\u201d(1998: 3). As a result, many observers, not to mention large numbers of ordinary Africans, believed that wholesale reform of state structures and institutions was necessary to try to overcome the region\u2019s myriad political and economic problems.At this time, Africa was swept up in the massive changes that characterised the third wave of democracy. Typically involving a combination of domestic and international imperatives, changes in African countries were primarily the product of intentional reform, amounting to\u00a0\u2026", "num_citations": "44\n", "authors": ["160"]}
{"title": "Guidelines for building a private cloud infrastructure\n", "abstract": " Cloud computing has become an extremely attractive area of research and practice over the last few years. An increasing number of public and private sector organizations have either adopted cloud computing based solutions or are seriously considering a move to cloud computing. However, there are many concerns about adopting and using public cloud solutions. Hence, private cloud solutions are becoming an attractive alternative to a large number of companies. We initiated a project aimed at designing and setting up a private cloud infrastructure in an academic and scientific environment based on open source software. One of the key objectives of this project was to create relevant material for providing a reference guide on the use of open source software for designing and implementing a private cloud.The primary focus on this document is to provide a brief background on different theoretical concepts of cloud computing and then elaborate on the practical aspects concerning the design, installation and implementation of a private cloud using open source solution. It is expected that organizations looking at the possibilities for implementing cloud solutions would benefit from getting the basics, and a view on the different aspects of cloud computing in this document. Defining the cloud computing; analysis of the economical, security, legality, privacy, confidentiality aspects. There is also a short discussion about the potential impact on the employee\u2019s future roles, and the challenges of migrating to cloud.", "num_citations": "43\n", "authors": ["160"]}
{"title": "A model for requirements change management: Implementation of CMMI level 2 specific practice\n", "abstract": " OBJECTIVE \u2013 The objective of this research is to implement CMMI Level 2 specific practice \u2013 SP 1.3-1 manage requirements changes. In this paper we have proposed a model for requirements change management and also discussed initial validation of this model. This model is based on both an empirical study that we have carried out and our extensive literature review of software process improvement (SPI) and requirements engineering (RE).                 METHOD \u2013 For data collection we have interviewed SPI experts from reputed organisations. Further work includes analysing research articles, published experience reports and case studies. The initial evaluation of the model was performed via an expert review process.                 RESULTS \u2013 Our model is based on five core elements identified from literature and interviews: request, validate, implement, verify and update. Within each of these elements\u00a0\u2026", "num_citations": "41\n", "authors": ["160"]}
{"title": "Quality assessment of systematic reviews in software engineering: A tertiary study\n", "abstract": " Context: The quality of an Systematic Literature Review (SLR) is as good as the quality of the reviewed papers. Hence, it is vital to rigorously assess the papers included in an SLR. There has been no tertiary study aimed at reporting the state of the practice of quality assessment used in SLRs in Software Engineering (SE).Objective: We aimed to study the practices of quality assessment of the papers included in SLRs in SE.Method: We conducted a tertiary study of the SLRs that have performed quality assessment of the reviewed papers.Results: We identified and analyzed different aspects of the quality assessment of the papers included in 127 SLRs.Conclusion: Researchers use a variety of strategies for quality assessment of the papers reviewed, but report little about the justification for the used criteria. The focus is creditability but not relevance aspect of the papers. Appropriate guidelines are required for\u00a0\u2026", "num_citations": "40\n", "authors": ["160"]}
{"title": "Comparing distributed and face-to-face meetings for software architecture evaluation: A controlled experiment\n", "abstract": " Scenario-based methods for evaluating software architecture require a large number of stakeholders to be collocated for evaluation meetings. Collocating stakeholders is often an expensive exercise. To reduce expense, we have proposed a framework for supporting software architecture evaluation process using groupware systems. This paper presents a controlled experiment that we conducted to assess the effectiveness of one of the key activities, developing scenario profiles, of the proposed groupware-supported process of evaluating software architecture. We used a cross-over experiment involving 32 teams of three 3rd and 4th year undergraduate students. We found that the quality of scenario profiles developed by distributed teams using a groupware tool were significantly better than the quality of scenario profiles developed by face-to-face teams (p\u2009<\u20090.001). However, questionnaires indicated\u00a0\u2026", "num_citations": "40\n", "authors": ["160"]}
{"title": "An industrial case study of architecture conformance\n", "abstract": " A software designer often has little control over, or means of checking, whether his design is being adhered to, once the implementation begins. This' architectural drift', where the original design of the system and the as-implemented design of the system diverge, can cause serious problems for evolution, maintenance and the comprehensibility of a system if it remains undocumented or uncorrected. The earlier such discrepancies can be identified, the better.", "num_citations": "39\n", "authors": ["160"]}
{"title": "Evaluating the usefulness and ease of use of a groupware tool for the software architecture evaluation process\n", "abstract": " We have developed a framework for groupware tool support for the software architecture evaluation process in the context of global software development. We have empirically assessed the effectiveness of the groupware-supported software architecture evaluation process in a set of controlled experiments. While we found that groupware-supported distributed meetings can be very effective, we saw the need to investigate users' acceptance of the tool used in these empirical studies. In this paper we report on the \"perceived usefulness\" and \"ease of use\" of the groupware tool based on the adapted Davis' technology acceptance model (TAM), a widely used general-purpose instrument for measuring users' attitude towards a particular technology. Main results from analyzing the TAM data are: a majority of the participants found the tool quite useful and easy to use for supporting collaborative tasks like architecture\u00a0\u2026", "num_citations": "38\n", "authors": ["160"]}
{"title": "An empirical investigation of the influence of persona with personality traits on conceptual design\n", "abstract": " Persona, an archetypical user, is increasingly becoming a popular tool for Software Engineers to design and communicate with stakeholders. A persona is a representative of a class of end users of a product or service. However, the majority of personas presented in the literature do not take into consideration that the personality of users affects the way they interact with a product or service. This study empirically explores variations in conceptual design based on the personality of a persona. We carried out two studies in Australia and one study in Denmark. We presented four personas with different personalities to 91 participants who collectively completed 218 design artifacts. The results from the studies indicate that the participants\u2019 views and prioritization of the needs and system requirements were influenced by the personality traits of the provided personas. For an introverted and emotionally unstable\u00a0\u2026", "num_citations": "36\n", "authors": ["160"]}
{"title": "Implementing software process improvement initiatives: an analysis of Vietnamese practitioners' views\n", "abstract": " There is a vital need for gaining a solid understanding of different aspects of implementing SPI initiatives in organizations involved in software outsourcing and/or off-shoring, which are parts of Global Software Development (GSD) phenomenon. However, little attention has been paid to understand difficulties and challenges involved in implementing SPI programs in developing countries like Vietnam and Malaysia, which are emerging as key players in the context of GSD. This paper presents findings from an empirical study aimed at exploring practitioners' experiences and perceptions of different aspects of implementing SPI initiatives. Face-to-face meeting sessions were conducted with twenty-three software development practitioners from eight Vietnamese software development organisations, which were involved in software outsourcing contracts and had initiated SPI programs. The results provide interesting\u00a0\u2026", "num_citations": "35\n", "authors": ["160"]}
{"title": "Trust in software outsourcing relationships: an analysis of Vietnamese practitioners\u2019 views\n", "abstract": " Trust is considered one of the most important factors for successfully managing software outsourcing relationships. However, there is lack of research into factors that are considered important in establishing and maintaining trust between clients and vendors. The goal of this research is to gain an understanding of vendors\u2019 perceptions of the importance of factors that are critical to the establishment and maintenance of trust in software outsourcing projects in Vietnam. We used a multiple case study methodology to guide our research and in-depth interviews to collect qualitative data. The participants of study were 12 Vietnamese software development practitioners drawn from 8 companies that have been developing software for off shore clients. Vendor companies identified that cultural understanding, creditability, capabilities, and personal visits are important factors in gaining the initial trust of a client, while cultural understanding, communication strategies, contract conformance, and timely delivery are vital factors in maintaining that trust. We also identify similarities and differences between Vietnamese and Indian practitioners\u2019 views on factors affecting trust relationships.", "num_citations": "33\n", "authors": ["160"]}
{"title": "A multi-vocal review of security orchestration\n", "abstract": " Organizations use diverse types of security solutions to prevent cyber-attacks. Multiple vendors provide security solutions developed using heterogeneous technologies and paradigms. Hence, it is a challenging rather impossible to easily make security solutions to work an integrated fashion. Security orchestration aims at smoothly integrating multivendor security tools that can effectively and efficiently interoperate to support security staff of a Security Operation Centre (SOC). Given the increasing role and importance of security orchestration, there has been an increasing amount of literature on different aspects of security orchestration solutions. However, there has been no effort to systematically review and analyze the reported solutions. We report a Multivocal Literature Review that has systematically selected and reviewed both academic and grey (blogs, web pages, white papers) literature on different aspects of\u00a0\u2026", "num_citations": "32\n", "authors": ["160"]}
{"title": "Effectiveness of persona with personality traits on conceptual design\n", "abstract": " Conceptual design is an important skill in Software Engineering. Teaching conceptual design that can deliver a useful product is challenging, particularly when access to real users is limited. This study explores the effects of the use of Holistic Personas (i.e. a persona enriched with personality traits) on students' performance in creating conceptual designs. Our results indicate that the students were able to identify the personality traits of personas and their ratings of the personalities match closely with the intended personalities. A majority of the participants stated that their designs were tailored to meet the needs of the given personas' personality traits. Results suggest that the Holistic Personas can help students to take into account personality traits in the conceptual design process. Further studies are warranted to assess the value of incorporating Holistic Personas in conceptual design training for imparting skills of\u00a0\u2026", "num_citations": "32\n", "authors": ["160"]}
{"title": "A framework for architecture-driven migration of legacy systems to cloud-enabled software\n", "abstract": " With the widespread adoption of cloud computing, an increasing number of organizations view it as an important business strategy to evolve their legacy applications to cloud-enabled infrastructures. We present a framework, named Legacy-to-Cloud Migration Horseshoe, for supporting the migration of legacy systems to cloud computing. The framework leverages the software reengineering concepts that aim to recover the architecture from legacy source code. Then the framework exploits the software evolution concepts to support architecture-driven migration of legacy systems to cloud-based architectures. The Legacy-to-Cloud Migration Horseshoe comprises of four processes:(i) architecture migration planning,(ii) architecture recovery and consistency,(iii) architecture transformation and (iv) architecture-based development of cloud-enabled software. We aim to discover, document and apply the migration process\u00a0\u2026", "num_citations": "32\n", "authors": ["160"]}
{"title": "Cloud infrastructure for providing tools as a service: quality attributes and potential solutions\n", "abstract": " Cloud computing is being increasingly adopted in various domains for providing on-demand infrastructure and Software as a service (SaaS) by leveraging the utility computing model and virtualization technologies. One of the domains, where cloud computing is expected to gain huge traction is Global Software Development (GSD) that has emerged as a popular software development model. Despite several promised benefits, GSD is characterized by not only technical issues but also the complexities associated with its processes. One of the key challenges of GSD is to provide appropriate tools more efficiently and cost-effectively. Moreover, variations in tools available/used by different GSD team members can also pose challenges. We assert that providing Tools as a Service (TaaS) to GSD teams through a cloud-based infrastructure can be a promising solution to address the tools related challenges in GSD\u00a0\u2026", "num_citations": "31\n", "authors": ["160"]}
{"title": "A status Rreport on the evaluation of variability management approaches\n", "abstract": " OBJECTIVE\u2013The objective of this study is to review the status of evaluation of Variability Management (VM) approaches in Software Product Line Engineering (SPLE).METHOD\u2013We have carried out a systematic review of studies of VM in SPLE reported in any publication venue and published before September 2007.RESULTS\u201397 papers were selected according to our inclusion and exclusion criteria. The selected papers appeared in 56 publication venues and the dominance of well-known publication venues of SPLE is not very clear. Only a small portion of the identified approaches were evaluated using rigorous scientific methods. A detailed investigation of the studies employing empirical research methods revealed significant quality deficiencies in various quality assessment aspects. Even more disappointing finding is that the trends of scientific evaluation of VM approaches do not appear to be improving based on the analysis of the data extracted from the reviewed studied.CONCLUSIONS\u2013The status of evaluation of VM approaches in SPLE is poor. Most of the approaches proposed are amenable to empirical evaluation, but the available evidence is sparse and the quality of the presented evidence is very low. The findings highlight the areas of improvement for rigorous evaluation of VM approaches.", "num_citations": "28\n", "authors": ["160"]}
{"title": "Discovering\" unknown known\" security requirements\n", "abstract": " Security is one of the biggest challenges facing organisations in the modern hyper-connected world. A number of theoretical security models are available that provide best practice security guidelines and are widely utilised as a basis to identify and operationalise security requirements. Such models often capture high-level security concepts (eg, whitelisting, secure configurations, wireless access control, data recovery, etc.), strategies for operationalising such concepts through specific security controls, and relationships between the various concepts and controls. The threat landscape, however, evolves leading to new tacit knowledge that is embedded in or across a variety of security incidents. These unknown knowns alter, or at least demand reconsideration of the theoretical security models underpinning security requirements. In this paper, we present an approach to discover such unknown knowns through multi\u00a0\u2026", "num_citations": "24\n", "authors": ["160"]}
{"title": "Supporting the software architecture process with knowledge management\n", "abstract": " The aim of this chapter is to describe how the software architecture process can benefit from providing knowledge management support to the software development professional in general and software architects in particular. This chapter focuses on the kinds of support that can be provided to capture and manage architectural knowledge consumed or generated during the software architecture process. The chapter briefly describes different activities of the software architecture process and identifies the kinds of actors involved and their respective knowledge needs. It shows how to organize different elements of architectural knowledge into a meta-model that can be initiated for tailoring organizational specific knowledge models and developing tool support. This chapter is based on the premise that managing knowledge is a management task rather than a technical problem of representing knowledge\u00a0\u2026", "num_citations": "23\n", "authors": ["160"]}
{"title": "Synthesizing qualitative research in software engineering: A critical review\n", "abstract": " Synthesizing data extracted from primary studies is an integral component of the methodologies in support of Evidence Based Software Engineering (EBSE) such as System Literature Review (SLR). Since a large and increasing number of studies in Software Engineering (SE) incorporate qualitative data, it is important to systematically review and understand different aspects of the Qualitative Research Synthesis (QRS) being used in SE. We have reviewed the use of QRS methods in 328 SLRs published between 2005 and 2015. We also inquired the authors of 274 SLRs to confirm whether or not any QRS methods were used in their respective reviews. 116 of them provided the responses, which were included in our analysis. We found eight QRS methods applied in SE research, two of which, narrative synthesis and thematic synthesis, have been predominantly adopted by SE researchers for synthesizing\u00a0\u2026", "num_citations": "22\n", "authors": ["160"]}
{"title": "Understanding the heterogeneity of contributors in bug bounty programs\n", "abstract": " Background: While bug bounty programs are not new in software development, an increasing number of companies, as well as open source projects, rely on external parties to perform the security assessment of their software for reward. However, there is relatively little empirical knowledge about the characteristics of bug bounty program contributors. Aim: This paper aims to understand those contributors by highlighting the heterogeneity among them. Method: We analyzed the histories of 82 bug bounty programs and 2,504 distinct bug bounty contributors, and conducted a quantitative and qualitative survey. Results: We found that there are project-specific and non-specific contributors who have different motivations for contributing to the products and organizations. Conclusions: Our findings provide insights to make bug bounty programs better and for further studies of new software development roles.", "num_citations": "22\n", "authors": ["160"]}
{"title": "Scenarios, quality attributes, and patterns: Capturing and using their synergistic relationships for product line architectures\n", "abstract": " Typically, architectural choices determine the achievement of desired goals (such as reusability and maintainability) of product line software development. Several methods have been proposed to design and analyze product line architectures with respect to desired quality attributes. Most of these methods encourage the use of architectural patterns to develop architectures with known characteristics and apply scenarios to evaluate those architectures for desired quality attributes. We observe an increased awareness of the links that exist among scenarios, quality attributes, and patterns. However, there are very few attempts to systematically capture and suitably document such synergistic relationships to support architecture design and evaluation. This paper presents our thoughts on exploiting the above-mentioned synergy. It also proposes some techniques of improving the product line architecture design and\u00a0\u2026", "num_citations": "22\n", "authors": ["160"]}
{"title": "Cloud for e-learning: Determinants of its adoption by University students in a developing country\n", "abstract": " Cloud computing is an innovative technology that can provide huge benefits to universities to improve their teaching and learning processes. While it has been widely adopted for e-Learning across universities in developed countries, its adoption in developing countries is very low and there is a lack of empirical studies that investigate the factors that influence its adoption by university students. In this paper, we identify and examine the factors that influence university students' intention to adopt cloud services in a developing country, Saudi Arabia. An empirical case study on a Software as a Service (SaaS) was conducted across two universities and a survey questionnaire modified from Technology Acceptance Model 3 (TAM3) was administered to 527 students. The results show that perceived usefulness and perceived ease of use are the main determinants of students' behavioural intention to adopt the provided\u00a0\u2026", "num_citations": "21\n", "authors": ["160"]}
{"title": "Activity theory applied to global software engineering: Theoretical foundations and implications for tool builders\n", "abstract": " Although a plethora of tools are available for Global Software Engineering (GSE) teams, it is being realized increasingly that the most prevalent desktop metaphor underpinning the majority of tools have several inherent limitations. We have proposed that Activity-Based Computing (ABC) can be a promising alternative to build tools for GSE. However, significant effort is required to introduce a new paradigm; there is a need of sound theoretical foundation based on activity theory to address challenges faced by tools in GSE. This paper reports our effort aimed at building theoretical foundations for applying activity theory to GSE. We analyze and explain the fundamental concepts of activity theory, and how they can be applied by using examples of software architecture design and evaluation processes. We describe the kind of data model and architectural support required for applying activity theory in building\u00a0\u2026", "num_citations": "21\n", "authors": ["160"]}
{"title": "Deep learning for source code modeling and generation: Models, applications, and challenges\n", "abstract": " Deep Learning (DL) techniques for Natural Language Processing have been evolving remarkably fast. Recently, the DL advances in language modeling, machine translation, and paragraph understanding are so prominent that the potential of DL in Software Engineering cannot be overlooked, especially in the field of program learning. To facilitate further research and applications of DL in this field, we provide a comprehensive review to categorize and investigate existing DL methods for source code modeling and generation. To address the limitations of the traditional source code models, we formulate common program learning tasks under an encoder-decoder framework. After that, we introduce recent DL mechanisms suitable to solve such problems. Then, we present the state-of-the-art practices and discuss their challenges with some recommendations for practitioners and researchers as well.", "num_citations": "20\n", "authors": ["160"]}
{"title": "Architectural resilience in cloud, fog and edge systems: A survey\n", "abstract": " An increasing number of large-scale distributed systems are being built by incorporating Cloud, Fog, and Edge computing. There is an important need of understanding how to ensure the resilience of systems built using Cloud, Fog, and Edge computing. This survey reports the state-of-the-art of architectural approaches that have been reported for ensuring the resilience of Cloud-, Fog- and Edge-based systems. This work reports a flexible taxonomy for reviewing architectural resilience approaches for distributed systems. In addition, this work also presents a capability-based cyber-foraging framework intended to improve the overall system resilience in the context of a physical node's capabilities. This survey also highlights the trust-related issues and solutions in the context of system resilience and reliability. This survey will help improve the understanding of the current state of system resilience solutions and raise\u00a0\u2026", "num_citations": "20\n", "authors": ["160"]}
{"title": "Gathering cyber threat intelligence from Twitter using novelty classification\n", "abstract": " Preventing organizations from Cyber exploits needs timely intelligence about Cyber vulnerabilities and attacks, referred as threats. Cyber threat intelligence can be extracted from various sources including social media platforms where users publish the threat information in real time. Gathering Cyber threat intelligence from social media sites is a time consuming task for security analysts that can delay timely response to emerging Cyber threats. We propose a framework for automatically gathering Cyber threat intelligence from Twitter by using a novelty detection model. Our model learns the features of Cyber threat intelligence from the threat descriptions published in public repositories such as Common Vulnerabilities and Exposures (CVE) and classifies a new unseen tweet as either normal or anomalous to Cyber threat intelligence. We evaluate our framework using a purpose-built data set of tweets from 50 influential Cyber security related accounts over twelve months (in 2018). Our classifier achieves the F1-score of 0.643 for classifying Cyber threat tweets and outperforms several baselines including binary classification models. Our analysis of the classification results suggests that Cyber threat relevant tweets on Twitter do not often include the CVE identifier of the related threats. Hence, it would be valuable to collect these tweets and associate them with the related CVE identifier for cyber security applications.", "num_citations": "20\n", "authors": ["160"]}
{"title": "Design decisions and design rationale in software architecture\n", "abstract": " Editorial: Design decisions and design rationale in software architecture: Journal of Systems and Software: Vol 82, No 8 ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Journal of Systems and Software Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsJournal of Systems and SoftwareVol. , No. Editorial: Design decisions and design rationale in software architecture article Editorial: Design decisions and design rationale in software architecture Share on Authors: Muhammad Ali Babar profile image Muhammad Ali Babar Lero, University of Limerick, Limerick, Ireland Lero, University of Limerick, Limerick, Ireland View Profile , P. Lago profile VU , .\u2026", "num_citations": "20\n", "authors": ["160"]}
{"title": "Dynamic software product line architectures using service based computing for automotive systems\n", "abstract": " Our research is aimed at applying the notion of dynamic runtime variability of software product lines in the embedded automotive software systems to create adaptable and reconfigurable software architectures. We argue that Service-Oriented Architecture (SOA) can be used to describe and compose the software architecture of an in-vehicle Distributed Real-time Embedded System (DRES) software application. This paper describes how the SOA is, in general, an appropriate architectural style for automotive DRES and in particular it has the potential to help achieve the run time variability in product line architectures. The architecture of such a product line is composed of a set of interacting services. These services are \u201cadaptively\u201d connected together with adaptive connectors. The variability of the product line architecture lies and managed within these connectors.", "num_citations": "20\n", "authors": ["160"]}
{"title": "Assessment of a framework for comparing software architecture analysis methods\n", "abstract": " We have developed a framework, FOCSAAM, for comparing software architecture analysis methods. FOCSAAM can help architects and managers to choose a specific method to support architecture analysis process. We have been assessing the suitability of the framework\u2019s elements in different ways. During the development of FOCSAAM, a theoretical assessment was performed by relating each of its elements to the published literature on quality assurance, process improvement, and software development approaches. Moreover, we have also found that most of the elements of FOCSAAM can also be mapped onto the elements of a well-known framework for comparing information systems development methods, NIMSAD framework. Our goal of this study was to further assess the suitability of different elements of FOCSAAM by using the expert opinion approach. We asked 17 practicing architects with extensive experience to assess the suitability of the elements of FOCSAAM for selecting a particular method to support the software architecture analysis process. The findings of this study provide support for each element of FOCSAAM to be included in forming criteria for comparing software architecture analysis methods.", "num_citations": "20\n", "authors": ["160"]}
{"title": "Why does site visit matter in global software development: A knowledge-based perspective\n", "abstract": " ContextFace-to-Face (F2F) interaction is a strong means to foster social relationships and effective knowledge sharing within a team. However, communication in Global Software Development (GSD) teams is usually restricted to computer-mediated conversation that is perceived to be less effective and interpersonal. Temporary collocation of dispersed members of a software development team is a well-known practice in GSD. Despite broad realization of the benefits of visits, there is lack of empirical evidence that explores how temporary F2F interactions are organized in practice and how they can impact knowledge sharing between sites.ObjectiveThis study aimed at empirically investigating activities that take place during temporary collocation of dispersed members and analyzing the outcomes of the visit for supporting and improving knowledge sharing.MethodWe report a longitudinal case study of a GSD team\u00a0\u2026", "num_citations": "19\n", "authors": ["160"]}
{"title": "Conducting empirical studies in industry: Balancing rigor and relevance\n", "abstract": " Empirical Software Engineering research has achieved considerable results in building our knowledge about selecting and applying appropriate empirical methods for technology evaluation. Empirical studies in general and empirical studies in industrial settings in particular have played an important role in successful transition of many Software Engineering technologies to industry, for example, defect detection techniques and automated test cases. However, conducting empirical research in industrial settings remains a challenging undertaking for a variety of reasons. There is no substantial literature reporting on the challenges and complexities involved in conducting empirical studies in an industry in general and in settings whose business models are built around global sourcing. This paper reports some of our experiences and lessons learned from conducting empirical research in industry. Some of the\u00a0\u2026", "num_citations": "19\n", "authors": ["160"]}
{"title": "Requirements for an infrastructure to support activity-based computing in global software development\n", "abstract": " Global Software Development (GSD) has become an established paradigm of developing software. One of the most important prerequisites of successfully supporting GSD projects is the provision of appropriate tooling support. Researchers and practitioners have developed several dozens of tools to support the GSD paradigm. However, there has been an increased realization that the most commonly used desktop metaphor underpinning existing tools has several limitations in terms of supporting communication, coordination, collaboration and awareness among distributed team members. We propose to leverage the Activity-Based Computing (ABC) paradigm that has been successfully applied to support collaboration and mobility in healthcare environments. We are exploring the viability of leveraging the ABC paradigm for addressing many of the limitations of the existing GSD tools. This paper identifies the\u00a0\u2026", "num_citations": "19\n", "authors": ["160"]}
{"title": "An empirical study identifying high perceived value practices of CMMI level 2\n", "abstract": " We have conducted face-to-face questionnaire based interview sessions with twenty-three Malaysian software practitioners in order to determine the perceived value associated with the specific practices of \u201crequirements management\u201d, \u201cprocess and product quality assurance\u201d and \u201cconfiguration management\u201d process areas of CMMI level 2 in the stage representation. The objective of this study is to identify the extent to which a CMMI practice is used in order to develop a finer-grained framework, which encompasses the notion of perceived value within specific practices. This will provide software process improvement (SPI) practitioners with some insight into designing appropriate SPI implementation strategies.               We asked practitioners to choose and rank \u201crequirements management\u201d, \u201cprocess and product quality assurance\u201d and \u201cconfiguration management\u201d practices against the five types of\u00a0\u2026", "num_citations": "19\n", "authors": ["160"]}
{"title": "Reflections on Applying Constructive Alignment with Formative Feedback for Teaching Introductory Programming and Software Architecture\n", "abstract": " Constructive alignment is a student-centred approach to teaching and learning that aims to enhance student learning through a combination of constructivist learning theories and aligned curriculum. This paper presents two case studies where units have been developed to apply the principles of constructive alignment in the area of computer science and software engineering. It outlines the role of formative feedback and delayed summative assessment as a means of embedding constructivist learning theories in the application of constructive alignment. The discussion outlines some of the challenges and advantages gained from the greater focus on formative feedback during the teaching period, and presents some recommendations for others considering applying constructive alignment.", "num_citations": "18\n", "authors": ["160"]}
{"title": "A framework for supporting the software architecture evaluation process in global software development\n", "abstract": " Software Architecture (SA) evaluation process requires a large number of stakeholders to be collocated for evaluation sessions. Given the increasing trend of using globally distributed software development teams, organizations are likely to be discouraged from introducing disciplined architectural evaluation practices that require stakeholders to be collocated. To address this issue, we propose that SA evaluation can be carried out using suitable groupware systems. In this paper, we present a framework for supporting the SA evaluation process using groupware systems. The framework highlights the changes required in the existing SA evaluation processes. We provide an illustrated example of modeling and mapping the activities of the proposed process on electronic workspaces provided by a groupware system. We have also identified some of the features a groupware system should have to successfully\u00a0\u2026", "num_citations": "17\n", "authors": ["160"]}
{"title": "Structural complexity evolution in free software projects: A case study\n", "abstract": " The fundamental role of Free Software in contemporary IT Industry is sometimes threatened by the lack of understanding of its development process, which sometimes leads to distrust regarding quality of Free Software projects. While Free Software projects do have quality assurance activities, there is still room for improvement and introduction of new methods and tools. This paper presents a case study of structural complexity evolution in a small project written in C. The approach used can be used by Free Software developers in their own projects to understand and control complexity, and the results provide initial understanding on the study of structural complexity evolution.", "num_citations": "17\n", "authors": ["160"]}
{"title": "Smart cities: Socio-technical innovation for empowering citizens\n", "abstract": " By 2020, 80% of the world's population is expected to be living in cities. Some estimates are predicting that the cost of urban congestion will reach $37.7 billion by 2030. Under the pressure of such drivers, governments, councils and leaders in all spheres of life are rethinking urbanisation and are conceptualising futuristic solutions to improve the liveability, sustainability and economy of our urban spaces.", "num_citations": "16\n", "authors": ["160"]}
{"title": "Architecture-centric methods and agile approaches\n", "abstract": " Agile practices have recently gained popularity among large number of companies as a mechanism for reducing cost and increasing ability to handle change in dynamic market conditions. Based on the principles of the Agile manifesto [1, 2], researchers and practitioners have proposed several software development approaches such as Extreme Programming, Scrum and Feature-Driven Development. These and other agile approaches have had significant impact on industrial software development practices. However, there is also a significant concern and perplexity about the role and importance of the issues related to a system\u2019s software architecture, which is considered one of the most important initial design artefacts. It is argued that software architecture is an effective tool to cut development cost and time and to increase the quality of a system. Many practitioners of Agile approaches appear to view\u00a0\u2026", "num_citations": "16\n", "authors": ["160"]}
{"title": "An automated implementation of hybrid cloud for performance evaluation of distributed databases\n", "abstract": " A Hybrid cloud is an integration of resources between private and public clouds. It enables users to horizontally scale their on-premises infrastructure up to public clouds in order to improve performance and cut up-front investment cost. This model of applications deployment is called cloud bursting that allows data-intensive applications especially distributed database systems to have the benefit of both private and public clouds. In this work, we present an automated implementation of a hybrid cloud using (i) a robust and zero-cost Linux-based VPN to make a secure connection between private and public clouds, and (ii) Terraform as a software tool to deploy infrastructure resources based on the requirements of hybrid cloud. We also explore performance evaluation of cloud bursting for six modern and distributed database systems on the hybrid cloud spanning over local OpenStack and Microsoft Azure. Our results\u00a0\u2026", "num_citations": "15\n", "authors": ["160"]}
{"title": "Modeling security for service oriented applications\n", "abstract": " Security is an important quality attribute for Service Oriented Architecture (SOA) based system. However, there is no sufficient support for modelling security-centric concerns for SOA based application. This paper presents a metamodel called SoaML4Security, which introduces QoS concepts into Service oriented Modelling Language (SoaML) in order to support the modelling of security aspect. We motivate the need of extending SoaML for modelling security concerns from different viewpoints. We describe the process of developing the metamodel, which can support Model Driven Engineering (MDE) approach for service-oriented applications. The use of the extended metamodel has been demonstrated by modelling a real world service-oriented application for security requirements.", "num_citations": "15\n", "authors": ["160"]}
{"title": "The application of knowledge-sharing workspace paradigm for software architecture processes\n", "abstract": " Management of architectural knowledge is vital for improving an organisation's capabilities in software architecture. Recently, there have been many efforts to develop various kinds of tools for managing architectural knowledge. However, most of these efforts overlook the fact that most of the working teams in today's organisations are distributed. This paper proposes the application of electronic workspace paradigm for capturing and sharing knowledge to support the software architecture processes.", "num_citations": "15\n", "authors": ["160"]}
{"title": "Modeling, analyzing and predicting security cascading attacks in smart buildings systems-of-systems\n", "abstract": " Software systems intelligence and complexity have been continuously increasing to deliver more and more features to support business critical and mission critical processes in numerous domains such as defense, health-care, and smart cities. Contemporary software-based solutions are composed of several software systems, that form System-of-Systems (SoS). SoS differentiating characteristics, such as emergent behavior, introduce specific issues that render their security modeling, simulation and analysis a critical challenge. The aim of this work is to investigate how Software Engineering (SE) approaches can be leveraged to model and analyze secure SoS solutions for predicting high impact (cascading) attacks at the architecture stage. In order to achieve this objective, we propose a Model Driven Engineering method, Systems-of-Systems Security (SoSSec), that comprises: (1) a modeling language\u00a0\u2026", "num_citations": "14\n", "authors": ["160"]}
{"title": "Automated software vulnerability assessment with concept drift\n", "abstract": " Software Engineering researchers are increasingly using Natural Language Processing (NLP) techniques to automate Software Vulnerabilities (SVs) assessment using the descriptions in public repositories. However, the existing NLP-based approaches suffer from concept drift. This problem is caused by a lack of proper treatment of new (out-of-vocabulary) terms for the evaluation of unseen SVs over time. To perform automated SVs assessment with concept drift using SVs' descriptions, we propose a systematic approach that combines both character and word features. The proposed approach is used to predict seven Vulnerability Characteristics (VCs). The optimal model of each VC is selected using our customized time-based cross-validation method from a list of eight NLP representations and six well-known Machine Learning models. We have used the proposed approach to conduct large-scale experiments\u00a0\u2026", "num_citations": "14\n", "authors": ["160"]}
{"title": "Global software development: A review of the state-of-the-art (2007\u20132011)\n", "abstract": " Context: Global Software Development (GSD) paradigm has gained significant popularity and widespread adoption. There has been a large amount of research efforts dedicated to gain understanding and knowledge about the GSD challenges and benefits in order to devise and evaluate appropriate solutions to address the challenges. It is equally important to provide period review of the published literature on GSD challenges, benefits, and proposed solution to inform practitioners and researchers about the state-of-the-art in this area.Objectives: This research has been motivated by the need of providing a state-of-the-art review of the GSD research literature published in the main venue of Global Software Engineering in order to identify the main research trends and gaps that needs to be filled by future research. We were also interested placing the findings of our review with respect to a practice-driven GSD research agenda.Method: We used structured literature review methodology for which we decided to select and review the recently published research papers (ie, 2007-2011) from the International Conference in Global Software Engineering (ICGSE). We used a framework for organizing GSD research challenges and threats and a practice-driven research agenda for extracting and organizing the data from the reviewed papers. We used theoretical reasoning for classifying the reviewed papers under different categories, which were mainly based on the framework, a decision that also enabled us to propose certain extensions to the framework.Results: Given the resources and time available, we decided to review 50 out of the 97 research\u00a0\u2026", "num_citations": "14\n", "authors": ["160"]}
{"title": "A reference architecture for provisioning of tools as a service: meta-model, ontologies and design elements\n", "abstract": " Software Architecture (SA) plays a critical role in designing, developing and evolving cloud-based platforms that can be used to provision different types of services for consumers on demand. In this paper, we present a Reference Architecture (RA) for designing cloud-based Tools as a service SPACE (TSPACE), which can provision a bundled suite of tools following the Software as a Service (SaaS) model. The reference architecture has been designed by leveraging information structuring approaches and by using well-known architecture design principles and patterns. The RA has been documented using view-based approach and has been presented in terms of its context, goals, the RA meta-model, information structuring and relationship models using ontologies and components of the RA. We have demonstrated the feasibility and applicability of the RA with the help of a prototype and have used the prototype\u00a0\u2026", "num_citations": "13\n", "authors": ["160"]}
{"title": "A framework for groupware\u2010supported software architecture evaluation process in global software development\n", "abstract": " A software architecture evaluation process requires a large number of stakeholders to be collocated for evaluation sessions. Given an increasing trend to using globally distributed software development teams, organizations are likely to be discouraged from introducing disciplined software architecture evaluation practices that require collocated stakeholders. To address this issue, we propose that a software architecture evaluation can be carried out using suitable groupware systems. In this paper, we present a framework for supporting the software architecture evaluation process using a groupware system. The framework highlights the changes that are required in the existing software architecture evaluation methods. We provide an illustrated example of modeling and mapping the activities of the presented process on electronic workspaces provided by a groupware system. We also identify some of the features\u00a0\u2026", "num_citations": "13\n", "authors": ["160"]}
{"title": "Understanding container isolation mechanisms for building security-sensitive private cloud\n", "abstract": " Security is one of the key factors of consideration for a cloud-based Information and Communication Technology (ICT) infrastructure or applications. The security of a cloud deployment is dependant upon the security of each of the deployed components. This leads to the need for an overview of the security of the containerised technologies that are available to be deployed on a cloud infrastructure. In this second volume of our report on secure and private cloud for submarine mission systems, we report the findings from our study of container technologies; we will be covering the evaluation procedure, each of the container technologies architecture, the isolation mechanisms that are employed in the technologies, how each isolation mechanism is utilised by the container technologies, and suggestions for improvements to the isolation of each technology based on their weaknesses.There are some major challenges faced while performing this form of analysis of different open source technologies. One primary one is that in open source technologies the documentation has a tendency to be outof-date, incomplete, or created as a sales pitch for the technology. This can lead to statements within the documentation being misleading and as these technologies are open source the liability will be on the user of the technology. This lead to the analysis needing to be done by verifying each claim of an isolation related mechanism or feature which can be challenging as some of the features claimed are found in other technologies the analysed technology is dependent on.", "num_citations": "12\n", "authors": ["160"]}
{"title": "A systematic mapping study of tools for distributed software development teams\n", "abstract": " Context: A wide variety of technologies have been developed to support Global Software Development (GSD). However, the information about the dozens of available solutions is quite diverse and scattered making it quite difficult to have an overview able to identify common trends and unveil research gaps.Objective: The objective of this research is to systematically identify and classify a comprehensive list of the technologies that have been developed and/or used for supporting GSD teams. Method: This study has been undertaken as a Systematic Mapping Study (SMS). Our searches identified 1958 papers out of which 182 were found suitable for inclusion in this study.Results: We have identified 412 technologies reported to be developed and/or used for supporting GSD teams from 182 papers. The identified technologies have been analyzed in order to categorize them using four main classification schemas for providing a framework that can help identify the categories that have attracted significant amount of research and commercial efforts, and the research areas where there are gaps to be filled. Conclusions: The findings show that whilst commercial and open source solutions are predominantly focused on specialized tools as well as platforms, research effort was concentrated on providing integrated environments, frameworks, and plug-in based solutions. Considering the findings in the context of previously proposed research agendas, some of the key challenges for GSD research (ie, collaborative tools and innovative knowledge management systems) shows that lots of collaborative technologies have been reported, but knowledge\u00a0\u2026", "num_citations": "12\n", "authors": ["160"]}
{"title": "Eliciting better quality architecture evaluation scenarios: a controlled experiment on top-down vs. bottom-up\n", "abstract": " Scenarios are extensively used in software architecture evaluation. These scenarios are elicited from stakeholders using either a topdown or bottom-up approach. The former approach uses categorization schemes to focus stakeholders on developing scenarios for each required category. The latter approach uses brainstorming without any explicit categories of scenarios. It is claimed that top-down approach can result in improved quality of scenarios. However, there has been no empirical evidence on the relative effectiveness of the scenario elicitation techniques. In this paper we report on a controlled experiment with 24 subjects (postgraduate and final year undergraduate students with industry experience) in an academic context with the goal to assess the relative effectiveness of the two scenario elicitation approaches. Two groups developed scenarios to characterize quality attributes: the treatment group was\u00a0\u2026", "num_citations": "12\n", "authors": ["160"]}
{"title": "PUMiner: Mining Security Posts from Developer Question and Answer Websites with PU Learning\n", "abstract": " Security is an increasing concern in software development. Developer Question and Answer (Q&A) websites provide a large amount of security discussion. Existing studies have used human-defined rules to mine security discussions, but these works still miss many posts, which may lead to an incomplete analysis of the security practices reported on Q&A websites. Traditional supervised Machine Learning methods can automate the mining process; however, the required negative (non-security) class is too expensive to obtain. We propose a novel learning framework, PUMiner, to automatically mine security posts from Q&A websites. PUMiner builds a context-aware embedding model to extract features of the posts, and then develops a two-stage PU model to identify security content using the labelled Positive and Un-labelled posts. We evaluate PUMiner on more than 17.2 million posts on Stack Overflow and 52\u00a0\u2026", "num_citations": "11\n", "authors": ["160"]}
{"title": "Mining questions asked about continuous software engineering: A case study of stack overflow\n", "abstract": " Context: With the growing popularity of rapid software delivery and deployment, the methods, practices and technologies of Continuous Software Engineering (CSE) are evolving steadily. This creates the need for understanding the recent trends of the technologies, practitioners' challenges and views in this domain. Objective: In this paper, we present an empirical study aimed at exploring CSE from the practitioners' perspective by mining discussions from Q&A websites. Method: We have analyzed 12,989 questions and answers posted on Stack Overflow. Topic modelling is conducted to derive the dominant topics in this domain. Further, a qualitative analysis was conducted to identify the key challenges discussed. Findings: Whilst the trend of posted questions is sharply increasing, the questions are becoming more specific to technologies and more difficult to attract answers. We identified 32 topics of discussions\u00a0\u2026", "num_citations": "11\n", "authors": ["160"]}
{"title": "Partial selection of agile software requirements\n", "abstract": " Prioritization And Selection (PAS) of requirements is an important concern of Agile software development. Existing PAS techniques are primarily binary selection of requirements and postponing lower-priority requirements to the future. As a result, lower-priority requirements may be constantly delayed until they never have a chance to be implemented at all. However, ignoring lower-priority requirements may threaten the quality of software. In this paper, we propose the concept of partial selection as an alternative to binary selection of Agile software requirements rather than ignoring them altogether or postponing them to the future releases. We further contribute a goaloriented framework that allows requirements to be partially satisfied when tolerated. The framework specifies the fuzzy priority of requirements and accomplishes partial selection through relaxing the satisfaction level of requirements with respect to their priority in the release backlog of software. The experimental results show that partial selection of requirements will reduce the number of neglected requirements when compared to binary selection.", "num_citations": "11\n", "authors": ["160"]}
{"title": "Knowledge sharing for common understanding of technical specifications through artifactual culture\n", "abstract": " Context: Software engineering is a knowledge intensive activity that is supported by documenting and sharing the required knowledge through a wide variety of artifacts. Global Software Development (GSD) teams heavily rely on artifacts as a vital means of knowledge sharing. However, there is little empirical knowledge about the key reasons and practices of using artifacts in GSD for knowledge sharing to support common understanding of technical specifications. Objective: This study aims at empirically studying the key motivators, practices, and drawbacks of artifact-based knowledge sharing for achieving common understanding of technical specifications in the context of GSD. Method: We conducted an exploratory case study in an organization that was involved in several GSD projects. Results: Our findings revealed the key challenges that necessitated the use of artifacts for sharing technical specification\u00a0\u2026", "num_citations": "11\n", "authors": ["160"]}
{"title": "Identifying and understanding architectural risks in software evolution: An empirical study\n", "abstract": " Software risk management studies commonly focus on project level risks and strategies. Software architecture investigations are often concerned with the design, implementation and maintenance of the architecture. However, there has been little effort to study risk management in the context of software architecture. We have identified risks and corresponding management strategies specific to software architecture evolution as they occur in industry, from interviews with 16 Norwegian IT-professionals. The most influential (and frequent) risk was \u201cLack of stakeholder communication affected implementation of new and changed architectural requirements negatively\u201d. The second most frequent risk was \u201cPoor clustering of functionality affected performance negatively\u201d. Architects focus mainly on architecture creation. However, their awareness of needed improvements in architecture evaluation and\u00a0\u2026", "num_citations": "11\n", "authors": ["160"]}
{"title": "A dataflow optimisation mechanism for service\u2013oriented cloud workflow\n", "abstract": " While service\u2013oriented cloud workflow shows potentials of inherent scalability, loose coupling and expenditure reduction, such issues as data transfer and efficiency have popped up as major concerns. In this paper, a dataflow optimisation mechanism is proposed, including data transfer strategy and data placement strategy. The data transfer strategy uses integrated data structures to enable the elimination of the SOAP serialisation and de\u2013serialisation within the web service invocation by the exchange of their references. In addition, the data placement strategy groups the existing datasets and dynamically clusters newly generated datasets to minimise data transfers while keeping a polynomial time complexity. By integrating the optimisation mechanism into service\u2013oriented cloud workflow system, we can expect efficiency improvements in data transfer and workflow execution. Experiments and analysis supported\u00a0\u2026", "num_citations": "10\n", "authors": ["160"]}
{"title": "Design requirements for an architecture consistency tool\n", "abstract": " Software architecture and its related documentation are acknowledged as some of the most important artefacts created during system design. However, often the implemented system diverges, over time, from the designed architecture. This phenomenon is called architectural drift and is either a result of inconsistent evolution of the system, or a failure to keep the architectural documentation up to date. A case study, performed at IBM, over two years showed how architectural drift can occur in small development teams over time. It suggested that even when approaches are in place to identify architectural drift, they may prove insufficient for subsequent removal of the drift, and some possible reasons for this were derived. Consequently, this document outlines the resultant design requirements for an approach to inhibit architectural drift, primarily by identifying it as, or before, it is introduced.", "num_citations": "10\n", "authors": ["160"]}
{"title": "Risks and risk management in software architecture evolution: An industrial survey\n", "abstract": " The effort that has been made to study risk management in the context of software architecture and its evolution, has so far focused on output from structured evaluations. However, earlier research shows that formal, structured evaluation is not commonly used in industry. We have performed a survey among software architects, in order to capture a more complete picture of the risk and management issues in software architecture evolution. Our survey is specifically about their current knowledge of actual challenges they have anticipated and experienced, as well as strategies they have employed in response. We received completely filled questionnaires from 82 respondents out of a total distribution of 511 architects from the software industry in Norway. While many of the risks we have identified can be aligned with results from earlier studies, we have also identified several risks which appear not to fit these risk\u00a0\u2026", "num_citations": "10\n", "authors": ["160"]}
{"title": "Distributed versus face-to-face meetings for architecture evalution: a controlled experiment\n", "abstract": " Scenario-based methods for evaluating software architecture require a large number of stakeholders to be collocated for evaluation sessions. Collocating stakeholders is often an expensive exercise. To reduce expense, we have proposed a framework for supporting software architecture evaluation process using groupware systems. This paper presents a controlled experiment that we conducted to assess the effectiveness of scenario profile construction using distributed meetings. We used a cross-over experiment involving 32 teams of three 3rd and 4th year undergraduate students. We found that the quality of scenarios produced by distributed teams using a groupware tool were significantly better than the quality of scenarios produced by face-to-face teams (p< 0.001). However, questionnaires indicated that most participants preferred the face-toface arrangement (82%) and 60% thought the distributed meetings\u00a0\u2026", "num_citations": "10\n", "authors": ["160"]}
{"title": "Revenue maximizing markets for zero-day exploits\n", "abstract": " Markets for zero-day exploits (software vulnerabilities unknown to the software vendor) have a long history and a growing popularity. We study these markets from a revenue-maximizing mechanism design perspective. We first propose a theoretical model for zero-day exploits markets. In our model, one exploit is being sold to multiple buyers. There are two kinds of buyers, which we call the defenders and the offenders. The defenders are buyers who buy vulnerabilities in order to fix them (eg, software vendors). The offenders, on the other hand, are buyers who intend to utilize the exploits (eg, national security agencies and police). We study the problem of selling one zero-day exploit to multiple defenders and offenders. Our model has a few unique features that make it different from single-item auctions. First, an exploit is a piece of information, so one exploit can be sold to multiple buyers. Second, buyers have\u00a0\u2026", "num_citations": "9\n", "authors": ["160"]}
{"title": "Internet of Things search engine\n", "abstract": " Tracing the complicated yet still relatively unripe area of the Internet of Things search engine---from concepts, to classification, and open issues.", "num_citations": "9\n", "authors": ["160"]}
{"title": "How developers discuss architecture smells? an exploratory study on stack overflow\n", "abstract": " Architecture Smells (ASs) are design decisions that can have significant negative effects on a system's quality attributes such as reusability and testability. ASs are focused on higher level of software systems than code smells, which are implementation-level constructs. ASs can have much wider impact on a system than code smells. However, ASs usually receive less attention than code smells in both research and practice. We have conducted an exploratory study of developers' conception of ASs by analyzing related discussions in Stack Overflow. We used 14 ASs related terms to search the relevant posts in Stack Overflow and extracted 207 posts. We used Grounded Theory method for analyzing the extracted posts about developers' description of ASs, causes of ASs, approaches and tools for detecting and refactoring ASs, quality attributes affected by ASs, and difficulties in detecting and refactoring ASs. Our\u00a0\u2026", "num_citations": "9\n", "authors": ["160"]}
{"title": "A review of edge computing: Features and resource virtualization\n", "abstract": " With the advent of Internet of Things (IoT) connecting billions of mobile and stationary devices to serve real-time applications, cloud computing paradigms face some significant challenges such as high latency and jitter, non-supportive location-awareness and mobility, and non-adaptive communication types. To address these challenges, edge computing paradigms, namely Fog Computing (FC), Mobile Edge Computing (MEC) and Cloudlet, have emerged to shift the digital services from centralized cloud computing to computing at edges. In this article, we analyse cloud and edge computing paradigms from features and pillars perspectives to identify the key motivators of the transitions from one type of virtualized computing paradigm to another one. We then focus on computing and network virtualization techniques as the essence of all these paradigms, and delineate why virtualization features, resource richness\u00a0\u2026", "num_citations": "8\n", "authors": ["160"]}
{"title": "Concealing Jitter in Multi-Player Online Games through Predictive Behaviour Modeling\n", "abstract": " Network latency imposes a major hinderance on the responsiveness and consistency of a Multi-Player Online Game (MPOG). In past decades, several network topologies and latency handling solutions have been proposed and adopted in a variety of MPOGs. Another issue closely related to latency is jitter, which is caused by the variation of latency. Most of the existing MPOGs adopt a simplistic approach to tackling jitter: when one's varying latency exceeds a threshold, one will be forced to leave the game; otherwise latency is treated constant or estimated from historical data. However, forcing a player to quit in the middle of a game simply because of a spike of unusual lengthy latency has a significant negative impact on both the fairness of the game and the player's gameplay quality of experience (QoE). In this paper, we propose an alternative approach that instead conceals jitter by seamlessly and transparently\u00a0\u2026", "num_citations": "8\n", "authors": ["160"]}
{"title": "Making software architecture and agile approaches work together: Foundations and approaches\n", "abstract": " Software architecture (SA) is one of the most significant areas of research and practice in software engineering. It has been shown that getting architecture of large-scale complex systems right is not only extremely important but hugely challenging. The increasing popularity and adoption of Agile Software Development (ASD) methods have brought architecture-centric methods and practices into question as agile followers tend to perceive architecture in the context of plan-driven software development. It is widely recognized that SA needs sufficient attention for successful development and evolution of software-intensive systems and services irrespective of the software development paradigm. Given the nature of the discipline, SA methods and approaches tend to be effort-intensive and heavyweight for certain kinds of projects. There is an increasing interest in finding ways to apply architecture-centric principles and\u00a0\u2026", "num_citations": "8\n", "authors": ["160"]}
{"title": "Tool support for automating architectural knowledge extraction\n", "abstract": " Development of large projects is a knowledge intensive task. Applying knowledge management techniques to project activities can enhance productivity and reduce risks of failures. However, it has been observed that knowledge management activities suffer from problems such as unavailability of structured information and lack of incentives to put extra efforts for these activities. In this paper, we present a tool that captures architectural knowledge from documents and emails and stores it in more structured manner in knowledge repositories with minimum user intervention, thus minimizing the required amount of effort.", "num_citations": "8\n", "authors": ["160"]}
{"title": "Impact of experience and team size on the quality of scenarios for architecture evaluation\n", "abstract": " Software and systems architecture is a success-critical issue in software projects. Changing nonfunctional quality requirements, e.g., performance, modifiability, and maintainability, can have strong impact on software architecture and can result in a high rework effort in case of changes. Architecture reviews help evaluating architectural design with scenarios in early stages of product development. Quality-sensitive scenarios represent a set of software requirements (including non-functional quality attributes). In this paper we empirically investigate the impact of potentially important factors on the number and quality of scenarios elicited in an architecture evaluation workshop: (a) scoring schemes for scenario quality, (b) workshop participant experience, and (c) team size for workshop group work. We report data analysis results from an empirical study where 24 reviewers at different experience levels identified over 100 scenarios. Main findings are: (a) results of different scoring approaches (frequency-based and expert scoring) agree very well regarding critical scenarios, (b) the scenario elicitation method was more important than individual experience, and (c) adding a new person to a team of size 3 or more increases scenario coverage by less than 10%.", "num_citations": "8\n", "authors": ["160"]}
{"title": "Evaluating Product Line Architectures: Methods and Techniques\n", "abstract": " Summary form only given. Good software architecture is one of the key factors in successfully developing and evolving a system or a family of systems. Software architecture provides the key framework for the earliest design decisions taken to achieve functional and quality requirements. In addition, it has a profound influence on project organizations' functioning and structure. Poor architecture usually results in project inefficiencies, poor communication, and poor decision making. Software architecture for a family of systems also helps identify the commonality among different systems and explicitly document variability. Since software architecture plays a significant role in the life of a system, it is important to evaluate a system's architecture as early as possible. Architecture evaluation is considered one of the most important and effective techniques of addressing quality related issues at the software architecture level\u00a0\u2026", "num_citations": "8\n", "authors": ["160"]}
{"title": "An evidence-based inquiry into the use of grey literature in software engineering\n", "abstract": " Context: Following on other scientific disciplines, such as health sciences, the use of Grey Literature (GL) has become widespread in Software Engineering (SE) research. Whilst the number of papers incorporating GL in SE is increasing, there is little empirically known about different aspects of the use of GL in SE research. Method: We used a mixed-methods approach for this research. We carried out a Systematic Literature Review (SLR) of the use of GL in SE, and surveyed the authors of the selected papers included in the SLR (as GL users) and the invited experts in SE community on the use of GL in SE research. Results: We systematically selected and reviewed 102 SE secondary studies that incorporate GL in SE research, from which we identified two groups based on their reporting: 1) 76 reviews only claim their use of GL; 2) 26 reviews report the results by including GL. We also obtained 20 replies from the\u00a0\u2026", "num_citations": "7\n", "authors": ["160"]}
{"title": "Challenges in docker development: A large-scale study using stack overflow\n", "abstract": " Background: Docker technology has been increasingly used among software developers in a multitude of projects. This growing interest is due to the fact that Docker technology supports a convenient process for creating and building containers, promoting close cooperation between developer and operations teams, and enabling continuous software delivery. As a fast-growing technology, it is important to identify the Docker-related topics that are most popular as well as existing challenges and difficulties that developers face.Aims: This paper presents a large-scale empirical study identifying practitioners' perspectives on Docker technology by mining posts from the Stack Overflow (SoF) community. Method: A dataset of 113, 922 Docker-related posts was created based on a set of relevant tags and contents. The dataset was cleaned and prepared. Topic modelling was conducted using Latent Dirichlet Allocation\u00a0\u2026", "num_citations": "7\n", "authors": ["160"]}
{"title": "Security and privacy for mhealth and uhealth systems: A systematic mapping study\n", "abstract": " An increased adoption of mobile health (mHealth) and ubiquitous health (uHealth) systems empower users with handheld devices and embedded sensors for a broad range of healthcare services. However, m/uHealth systems face significant challenges related to data security and privacy that must be addressed to increase the pervasiveness of such systems. This study aims to systematically identify, classify, compare, and evaluate state-of-the-art on security and privacy of m/uHealth systems. We conducted a systematic mapping study (SMS) based on 365 qualitatively selected studies to (i) classify the types, frequency, and demography of published research, (ii) synthesize and categorize research themes, (iii) recurring challenges, (iv) prominent solutions (i.e., research outcomes) and their (v) reported evaluations (i.e., practical validations). Results suggest that the existing research on security and privacy of m\u00a0\u2026", "num_citations": "7\n", "authors": ["160"]}
{"title": "Towards a reference architecture to provision tools as a service for global software development\n", "abstract": " Organizations involve in Global Software Development (GSD) face challenges in terms of having access to appropriate set of tools for performing distributed engineering and development activities, integration between heterogeneous desktop and web-based tools, management of artifacts developed and maintained over distant locations using different kind of tools, traceability among artifacts, and access to artifacts and data of sensitive nature. These challenges pose additional constraints on specific projects and reduce the possibility to carry out their engineering and development in globally distributed environment. In this paper, we argue the need to have a cloud-enabled platform for supporting GSD and propose reference architecture of a cloud based Platform for providing support to provision ecosystem of the Tools as a Service (PTaaS).", "num_citations": "7\n", "authors": ["160"]}
{"title": "Empirical study of architectural knowledge management practices\n", "abstract": " Most current literature on Software Architecture Knowledge Management (AKM) reports research aimed at developing AKM approaches or identifying challenges in and potential solutions to AKM. However, there has been little effort aimed at empirically studying and describing how AKM is practiced in real-world projects. This paper reports a study aimed at empirically understanding how AKM is currently practiced in industry. Our findings are based on a systematic and rigorous analysis of reports of AKM practices in 29 industrial projects.", "num_citations": "7\n", "authors": ["160"]}
{"title": "A Systematic Mapping Study of Software Architectures for Cloud Based Systems\n", "abstract": " Context: Cloud computing has gained significant attention of researchers and practitioners. This emerging paradigm is being used to provide solutions in multiple domains without huge upfront investment because of its on demand recourseprovisioning model. However, the information about how software systems are constructed for cloud based systems and what architecture approaches are used to build these systems in not available in synthesized form, which makes it hard to find common architecture solutions for building applications for cloud and identify research gaps.Object: The main objective of this study is to systematically identify and analyze the currently published research on the topics related to software architectures for cloudbased systems in order to identify architecture solutions for achieving quality requirements.Method: We decided to carry out a systematic mapping study to find as much peerreviewed literature on the topics related to software architectures for cloud-based systems as possible. This study has been carried out by following the guidelines for conducting systematic literature reviews and systematic mapping studies as reported in the literature. Based on our paper selection criteria defined by the requirements of the study\u2019s objectives and research questions, we have found 86 papers to be included in this study out of initial set of 1491 papers. Results: We have grouped selected papers into different categories of themes including: quality attributes (15%), multi-tenancy (3%), frameworks (3%), workflow based systems (4%), support for hybrid devices (7%), middleware infrastructure for managing services and resources\u00a0\u2026", "num_citations": "7\n", "authors": ["160"]}
{"title": "The impact of group size on software architecture evaluation: a controlled experiment\n", "abstract": " An important element in scenario-based architecture evaluation is the development of scenario profiles by stakeholders working in groups. In practice groups can vary in size from 2 to 20 people. Currently, there is no empirical evidence about the impact of group size on the scenario development activity. Our experimental goal was to investigate the impact of group size on the quality of scenario profiles developed by different sizes of groups. We had 165 subjects, who were randomly assigned to 10 groups of size 3, 13 groups of size 5, and 10 groups of size 7. Participants were asked to develop scenario profiles. After the experiment each participant completed a questionnaire aimed at identifying their opinion of the group activity. The average quality score for group scenario profiles for 3 person groups was 362.4, for groups of 5 person groups was 534.23 and for 7 person groups was. 444.5. The quality of scenario\u00a0\u2026", "num_citations": "7\n", "authors": ["160"]}
{"title": "Distilling Scenarios from Patterns for Software Architecture Evaluation\u2013A Position Paper\n", "abstract": " Software architecture (SA) evaluation is a quality assurance technique that is increasingly attracting significant research and commercial interests. A number of SA evaluation methods have been developed. Most of these methods are scenario-based, which relies on the quality of the scenarios used for the evaluation. Most of the existing techniques for developing scenarios use stakeholders and requirements documents as main sources of collecting scenarios. Recently, architectures of large software systems are usually composed of patterns and styles. One of the purposes of using patterns is to develop systems with predictable quality attributes. Since patterns are documented in a format that requires the inclusion of problem, solution and quality consequences, we observed that scenarios are, though as informal text, pervasive in patterns description, which can be extracted and documented for the SA\u00a0\u2026", "num_citations": "7\n", "authors": ["160"]}
{"title": "A Large-scale Study of Security Vulnerability Support on Developer Q&A Websites\n", "abstract": " Context: Security Vulnerabilities (SVs) pose many serious threats to software systems. Developers usually seek solutions to addressing these SVs on developer Question and Answer (Q&A) websites. However, there is still little known about on-going SV-specific discussions on different developer Q&A sites. Objective: We present a large-scale empirical study to understand developers' SV discussions and how these discussions are being supported by Q&A sites. Method: We first curate 71,329 SV posts from two large Q&A sites, namely Stack Overflow (SO) and Security StackExchange (SSE). We then use topic modeling to uncover the topics of SV-related discussions and analyze the popularity, difficulty, and level of expertise for each topic. We also perform a qualitative analysis to identify the types of solutions to SV-related questions. Results: We identify 13 main SV discussion topics on Q&A sites. Many topics do not follow the distributions and trends in expert-based security sources such as Common Weakness Enumeration (CWE) and Open Web Application Security Project (OWASP). We also discover that SV discussions attract more experts to answer than many other domains, but some difficult SV topics (e.g., Vulnerability Scanning Tools) still receive quite limited support from experts. Moreover, we identify seven key types of answers given to SV questions on Q&A sites, in which SO often provides code and instructions, while SSE usually gives experience-based advice and explanations. Conclusion: Our findings provide support for researchers and practitioners to effectively acquire, share and leverage SV knowledge on Q&A sites.", "num_citations": "6\n", "authors": ["160"]}
{"title": "Game theoretical modelling of network/cybersecurity\n", "abstract": " Game theory is an established branch of mathematics that offers a rich set of mathematical tools for multi-person strategic decision making that can be used to model the interactions of decision makers in security problems who compete for limited and shared resources. This article presents a review of the literature in the area of game theoretical modelling of network/cybersecurity and identifies a number of challenges in this area that need to be addressed.", "num_citations": "6\n", "authors": ["160"]}
{"title": "A Reference Architecture for a Cloud-Based Tools as a Service Workspace\n", "abstract": " Software Architecture (SA) plays a critical role in developing and evolving cloud-based applications. We present a Reference Architecture (RA) for designing Cloud-based Tools as a service work SPACE (TSPACE) - a platform for provisioning chain of tools following the Software as a Service (SaaS) model. The TSPACE RA has been designed by leveraging well-known design principles and patterns and has been documented using a view-based approach. The RA has been presented in terms of its context, goals and design elements by describing the requirements, design tactics, and components of the RA. We evaluate the RA in terms of completeness and feasibility. Our proposed RA can provide valuable guidance and insights for designing and implementing concrete software architectures of TSPACE.", "num_citations": "6\n", "authors": ["160"]}
{"title": "Towards an understanding of enabling process knowing in global software development: A case study\n", "abstract": " Shared understanding of Software Engineering (SE) processes, that we call process knowing, is required for effective communication and coordination and communication within a team in order to improve team performance. SE Process knowledge can include roles, responsibilities and flow of information over a project lifecycle. Developing and sustaining process knowledge can be more challenging in Global Software Development (GSD). GSD distances can limit the ability of a team to develop a common understanding of processes. Anecdotes of the problems caused by lack of common understanding of processes in GSD are pervasive, but there is no reported empirical effort aimed at exploring the solutions to enable process knowing in GSD. We report a case study aimed at understanding an effort to enable process knowing for improving processes in GSD. The findings provide useful insights into the potential\u00a0\u2026", "num_citations": "6\n", "authors": ["160"]}
{"title": "Understanding structures and affordances of extended teams in global software development\n", "abstract": " Growing popularity of Global Software Development (GSD) has resulted in an increasing number of cross-organizational teams that are formed according to Extended Team Model (ETM). There is little known about the structures (work, social, and communication) that may exist in ETM and what affordances those structures provide to support collaboration and coordination. This paper reports a case study that has studied the structures of an ETM in GSD and how those structures provide affordances for dealing with known GSD challenges. This study has revealed that whilst the current structures in the studied team help deal with different GSD challenges, these structures appear to have certain challenges inherent in them and the affordances they provide. We make a few recommendations for improving the current structures to deal with the observed challenges. Our findings are expected to provide insights into the\u00a0\u2026", "num_citations": "6\n", "authors": ["160"]}
{"title": "Software Architecture\n", "abstract": " Software Architecture - NASA/ADS Now on home page ads icon ads Enable full ADS view NASA/ADS Software Architecture Babar, Muhammad Ali ; Gorton, Ian Abstract Publication: Lecture Notes in Computer Science Pub Date: 2010 DOI: 10.1007/978-3-642-15114-9 Bibcode: 2010LNCS......B Keywords: Computer Science; Software Engineering; Logics and Meanings of Programs; Computer Communication Networks; Management of Computing and Information Systems; Information Systems Applications (incl.Internet); Programming Languages; Compilers; Interpreters full text sources Publisher | \u00a9 The SAO/NASA Astrophysics Data System adshelp[at]cfa.harvard.edu The ADS is operated by the Smithsonian Astrophysical Observatory under NASA Cooperative Agreement NNX16AC86A NASA logo Smithsonian logo Resources About ADS ADS Help What's New Careers@ADS Social @adsabs ADS Blog Project to ? \u2026", "num_citations": "6\n", "authors": ["160"]}
{"title": "On the role of software architecture in DevOps transformation: An industrial case study\n", "abstract": " Development and Operations (DevOps), a particular type of Continuous Software Engineering, has become a popular Software System Engineering paradigm. Software architecture is critical in succeeding with DevOps. However, there is little evidence-based knowledge of how software systems are architected in the industry to enable and support DevOps. Since architectural decisions, along with their rationales and implications, are very important in the architecting process, we performed an industrial case study that has empirically identified and synthesized the key architectural decisions considered essential to DevOps transformation by two software development teams. Our study also reveals that apart from the chosen architecture style, DevOps works best with modular architectures. In addition, we found that the performance of the studied teams can improve in DevOps if operations specialists are added to the\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "An ontology-driven approach to automating the process of integrating security software systems\n", "abstract": " A wide variety of security software systems need to be integrated into a Security Orchestration Platform (SecOrP) to streamline the processes of defending against and responding to cybersecurity attacks. Lack of interpretability and interoperability among security systems are considered the key challenges to fully leverage the potential of the collective capabilities of different security systems. The processes of integrating security systems are repetitive, time-consuming and error-prone; these processes are carried out manually by human experts or using ad-hoc methods. To help automate security systems integration processes, we propose an Ontology-driven approach for Security OrchestrAtion Platform (OnSOAP). The developed solution enables interpretability, and interoperability among security systems, which may exist in operational silos. We demonstrate OnSOAP's support for automated integration of security\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "Using reference architectures for design and evaluation of web of things systems: A case of smart homes domain\n", "abstract": " Web of Things (WoT) provides abstraction that simplifies the creation of Internet of Things (IoT) systems. IoT systems are designed to support a number of ubiquitous devices and management subsystems. The devices and subsystems can be a part of safety critical operations as well as smart management of multiple actuators that control the smart home devices. The devices and subsystems need to comply to standardized business and quality requirements of a specific IoT domain. Designing subsystems and actuators for the individual devices as independent software can result in lack of standardization, which can negatively impact the overall quality of a WoT system. Standardisation of the IoT applications and subsystems constituting a WoT system can be facilitated by providing a standardisation at the architecture level. As using Reference Architectures (RA) is a well established approach to achieve\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "Mining source code topics through topic model and words embedding\n", "abstract": " Developers nowadays can leverage existing systems to build their own applications. However, a lack of documentation hinders the process of software system reuse. We examine the problem of mining topics (i.e., topic extraction) from source code, which can facilitate the comprehension of the software systems. We propose a topic extraction method, Embedded Topic Extraction (EmbTE), that considers word semantics, which are never considered in mining topics from source code, by leveraging word embedding techniques. We also adopt Latent Dirichlet Allocation (LDA) and Non-negative Matrix Factorization (NMF) to extract topics from source code. Moreover, an automated term selection algorithm is proposed to identify the most contributory terms from source code for the topic extraction task. The empirical studies on Github (                     https://github.com/                                        ) Java projects show that\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "Towards a pattern language for self-adaptation of cloud-based architectures\n", "abstract": " Cloud computing enables organisations to deploy their software systems over a pool of available services--exploiting pay-per-use models--rather than upfront purchase of an overprovisioned infrastructure. In an architectural context for cloud systems that demand elasticity in terms of service availability, reliability, and efficiency, there is a need to capitalise on the'build-once, use-often'solutions that support reuse-driven self-adaptations of cloud-based architectures. We support the composition and application of a pattern language that exploits adaptation patterns and their relations to support'adaptation-off-the-shelf'for cloud-based software architectures. We unify the concepts of software repository mining and software evolution to support the composition and application of an adaptation pattern language. First, we exploit the software repository mining concepts by investigating adaptation logs to empirically discover\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "On identifying the skills needed for software architects\n", "abstract": " This position paper claims that software architects need a unique set of skills that may be difficult to gain solely from academic qualifications and/or training courses. We believe that socio-cognitive factors and artifacts with which software engineers work have a vital role in identifying the skill-set for software architects. Based on social cognitive theory and an artifact-centric framework, we have designed an instrument to investigate the skills needed by software architects. We believe that such an instrument will enable researchers and practitioners to gather the skill-set information by considering the personal traits of software architects, their behaviors, and the organization they work in together with the artifacts they use. This paper explains how the different concepts of social cognitive theory and an artifact-centric framework can stimulate discussion with software architects in order to gather information about their\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "Assessment of a framework for designing and evaluating security sensitive architecture\n", "abstract": " Background: We have developed an Architectural Level Security Analysis Framework (ALSAF), which can be used to consider and address security related issues at software architecture level. Goal: Our goal was to empirically assess the usefulness of ALSAF for identifying security attributes and security design patterns for satisfying those attributes during architecture design and evaluation. Assessment approach: The reported assessment was performed with one pilot study and one Quasiexperiment. In the main study, there were 19 software development professionals who participated in the study after attending a training course. The participants were required to identify security attributes and security design patterns suitable for achieving those attributes based on a given list of security properties. One group (control group) was given the textual description of security patterns, attributes, and properties, the other group (treatment group) was given ALSAF as well as the document provided to the control group. The outcome variables were security attributes and security patterns for a web-based system, whose requirements were provided to the participants. Result: The average score for identifying security attributes for the treatment group was 4.56 and for the control group was 2.60. The difference between the groups was significant using Mann-Whiney test (p=0.011). The average score for identifying the security patterns for the treatment group was 5.78 and for the control group was 2.8. Mann-Whitney test revealed that the difference between the groups was again significant at (p=0.022). Post-study questionnaire revealed that majority of the\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "Assessing the value of architectural information extracted from patterns for architecting\n", "abstract": " Background: We have developed an approach to identifying and capturing architecturally significant information from patterns (ASIP), which can be used to improve architecture design and evaluation.Goal: Our goal was to evaluate whether the use of the ASIP provides more effective support in understanding or designing software architecture composed of the software design patterns which are the source of the ASIP compared with the original design pattern documentation.Experimental design: Our subjects were 20 experienced software engineers who had returned to University for a post graduate course. All participants were taking a course in software architecture. The participants were randomly assigned to two groups of equal size. Both groups performed two tasks: understanding the use of J2EE design pattern in a given architecture based on the quality requirements the architecture was supported to satisfy\u00a0\u2026", "num_citations": "5\n", "authors": ["160"]}
{"title": "Integrating blockchain and Internet of Things systems: A systematic review on objectives and designs\n", "abstract": " Recent years have witnessed the emergence of the Internet of Things (IoT) systems that incorporate blockchain (BC) elements in their architecture. Due to discrepancies between the requirements of IoT systems and the characteristics of BC networks, the motivations and design of these blockchain-enabled IoT systems (BC-IoT) are not only intriguing from a research perspective but also invaluable in practice. This paper presents an inductive study of the \u201cwhy\u201d and \u201chow\u201d of BC-IoT systems through a Systematic Literature Review of 120 peer-reviewed studies. To capture the diverse nature of BC-IoT integration, we proposed and applied a multi-perspective framework to analyse the existing systems. Regarding their motivations, we studied the improvement objectives and technical problems that drive the integration of BC. Regarding the design, we captured the position of BC within IoT systems as well as the content\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Software Security Patch Management--A Systematic Literature Review of Challenges, Approaches, Tools and Practices\n", "abstract": " Context: Software security patch management purports to support the process of patching known software security vulnerabilities. Patching security vulnerabilities in large and complex systems is a hugely challenging process that involves multiple stakeholders making several interdependent technological and socio-technical decisions. Objective: This paper reports our work aimed at systematically reviewing the state of the art of software security patch management to identify the socio-technical challenges in this regard, reported solutions (i.e., approaches and associated tools, and practices), the rigour of the evaluation and the industrial relevance of the reported solutions, and to identify the gaps for the future research. Method: We conducted a systematic literature review of 72 studies on software security patch management published from 2002 to March 2020, with extended coverage until September 2020 through forward snowballing. Results: We identify 14 key socio-technical challenges in security patch management with 6 common challenges encountered throughout the process. Similarly, we provide a classification of the reported solutions mapped onto the patch management process. The analysis also reveals that only 20.8% of the reported solutions have been rigorously evaluated in industrial settings. Conclusion: Our results reveal that two-thirds of the common challenges have not been directly addressed in the solutions and that most of them (37.5%) address the challenges in one stage of the process. Based on the results that highlight the important concerns in software security patch management and the lack of solutions, we\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Architecture-centric support for integrating security tools in a security orchestration platform\n", "abstract": " Security Operation Centers (SOC) leverage a number of tools to detect, thwart and deal with security attacks. One of the key challenges of SOC is to quickly integrate security tools and operational activities. To address this challenge, an increasing number of organizations are using Security Orchestration, Automation and Response (SOAR) platforms, whose design needs suitable architectural support. This paper presents our work on architecture-centric support for designing a SOAR platform. Our approach consists of a conceptual map of SOAR platform and the key dimensions of an architecture design space. We have demonstrated the use of the approach in designing and implementing a Proof of Concept (PoC) SOAR platform for (i) automated integration of security tools and (ii) automated interpretation of activities to execute incident response processes. We also report a preliminary evaluation of the\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Ethnographic research in software engineering: a critical review and checklist\n", "abstract": " Software Engineering (SE) community has recently been investing significant amount of effort in qualitative research to study the human and social aspects of SE processes, practices, and technologies. Ethnography is one of the major qualitative research methods, which is based on constructivist paradigm that is different from the hypothetic-deductive research model usually used in SE. Hence, the adoption of ethnographic research method in SE can present significant challenges in terms of sufficient understanding of the methodological requirements and the logistics of its applications. It is important to systematically identify and understand various aspects of adopting ethnography in SE and provide effective guidance. We carried out an empirical inquiry by integrating a systematic literature review and a confirmatory survey. By reviewing the ethnographic studies reported in 111 identified papers and 26 doctoral\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "An Architecture-driven Adaptation Approach for Big Data Cyber Security Analytics\n", "abstract": " Big Data Cyber Security Analytics (BDCA) systems leverage big data technologies (e.g., Hadoop and Spark) for collecting, storing, and analyzing large volume of security event data to detect cyber-attacks. Accuracy and response time are the two most important quality concerns for BDCA systems. However, the frequent changes in the operating environment of a BDCA system (such as quality and quantity of security event data) significantly impact these qualities. In this paper, we first study the impact of such environmental changes. We then present ADABTics, an architecture-driven adaptation approach that (re)composes the system at runtime with a set of components to ensure optimal accuracy and response time. We finally evaluate our approach both in a single node and multinode settings using a Hadoop-based BDCA system and different adaptation scenarios. Our evaluation shows that on average ADABTics\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "A mapping study on mining software process\n", "abstract": " Background: Mining Software Process (MSP) helps distill important information about software process enactment from software data repositories. An increasing amount of research effort is being dedicated to MSP. These studies differ in various aspects (e.g., topics, data, and techniques) of MSP. Objective: We aim to study the state of the art on MSP from following aspects, i.e., research topics, data sources, data types, mining techniques, and mining tools. Method: We conducted a systematic mapping study on the research relevant to MSP at both microprocess and macroprocess levels. Results: Our mapping study identified 40 relevant studies that can be grouped into microprocess and macroprocess levels. The identified mining techniques have been mapped onto the associated mining tools that fall into four types. Driven by the three research questions which represented in a meta-model, the findings revealed the\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "A kernel-based approach to developing adaptable and reusable sensor retrieval systems for the Web of Things\n", "abstract": " In the era of the Web of Things, a vast number of sensors and data streams are accessible to client applications as Web resources. Web Sensor Retrieval systems (WSR) help client applications to access Web-enabled sensors needed for their operation dynamically in an ad-hoc manner. Due to the diversity of sensors and query types, a functional WSR instance must be adaptable to different usage and deployment scenarios to ensure its utility. In this paper, we focus on the systematic reuse of components to enable adaptable WSR. In particular, we propose a modular architecture for WSR and develop a kernel to support the development and composition of WSR modules. We demonstrate our solution with a reference WSR instance deployed on a Raspberry Pi 3. This instance provides five types of queries on eight types of sensors deployed across two sensor platforms. We provide our kernel and reference WSR\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Introducing learning mechanism for class responsibility assignment problem\n", "abstract": " Assigning responsibilities to classes is a vital task in object-oriented design, which has a great impact on the overall design of an application. However, this task is not easy for designers due to its complexity. Though many automated approaches have been developed to help designers to assign responsibilities to classes, none of them considers extracting the design knowledge (DK) about the relations between responsibilities in order to adapt designs better against design problems. To address the issue, we propose a novel Learning-based Genetic Algorithm (LGA) for the Class Responsibility Assignment (CRA) problem. In the proposed algorithm, a learning mechanism is introduced to extract DK about which responsibilities have a high probability to be assigned to the same class, and the extracted DK is employed to improve the design qualities of generated solutions. An experiment was conducted\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Perspectives and reflections on cloud computing and internet technologies from NordiCloud 2012\n", "abstract": " The Nordic Symposium on Cloud Computing and Internet Technologies (NordiCloud) has been found with the key aim of promoting and supporting Cloud computing and Internet Technologies research and practice in Nordic and Baltic regions. It would provide a bridge between researchers and practitioners from Nordic/Baltic countries and Cloud computing communities in other parts of the World. The first symposium was organized as a collocated event with WICSA/ECSA 2012 in Helsinki, Finland. This report summarizes the key points from the symposium based on the presented talks and discussions. It highlights some of the areas that the participants considered worth pursuing in order to help organizations to not only exploit the opportunities that cloud computing offers but also to deal with the challenges when adopting cloud computing. This report points out some of the key challenges and potential solutions\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Supporting activity based computing paradigm in global software development\n", "abstract": " Global software development (GSD) teams have to use multiple tools to perform both complex and even simple tasks involving many context switches that can be frustrating. To lessen these issues, researchers are looking at providing new plug-ins whereas commercial vendors are flooding the market with comprehensive solutions often in the form of platforms. The current file- and application- oriented desktop metaphor can hardly support the collaborative and distributed nature of GSD teams. We assert that the Activity-Based Computing (ABC) paradigm has the potential for addressing the tool support related challenges of GSD. We have been incrementally designing and developing a flexible middleware (ABC4GSD) for supporting ABC in GSD. In this paper we present the theoretical foundations underpinning our approach and the architectural overview of a middleware for supporting ABC in GSD. Moreover, we\u00a0\u2026", "num_citations": "4\n", "authors": ["160"]}
{"title": "Implementing software process improvement initiatives: an analysis of vietnamese practitioners' views\n", "abstract": " There is a vital need for gaining a solid understanding of different aspects of implementing SPI initiatives in organizations involved in software outsourcing and/or off-shoring, which are parts of Global Software Development (GSD) phenomenon. However, little attention has been paid to understand difficulties and challenges involved in implementing SPI programs in developing countries like Vietnam and Malaysia, which are emerging as key players in the context of GSD. This paper presents findings from an empirical study aimed at exploring practitioners\u2019 experiences and perceptions of different aspects of implementing SPI initiatives. Face-to-face meeting sessions were conducted with twenty-three software development practitioners from eight Vietnamese software development organisations, which were involved in software outsourcing contracts and had initiated SPI programs. The results provide interesting insights into different aspects of SPI initiatives. We expect that the findings can provide some advice to SPI practitioners on what needs to be addressed when developing SPI implementation initiatives in countries like Vietnam.", "num_citations": "4\n", "authors": ["160"]}
{"title": "A survey on data-driven software vulnerability assessment and prioritization\n", "abstract": " Software Vulnerabilities (SVs) are increasing in complexity and scale, posing great security risks to many software systems. Given the limited resources in practice, SV assessment and prioritization help practitioners devise optimal SV mitigation plans based on various SV characteristics. The surge in SV data sources and data-driven techniques such as Machine Learning and Deep Learning have taken SV assessment and prioritization to the next level. Our survey provides a taxonomy of the past research efforts and highlights the best practices for data-driven SV assessment and prioritization. We also discuss the current limitations and propose potential solutions to address such issues.", "num_citations": "3\n", "authors": ["160"]}
{"title": "QuickAdapt: Scalable Adaptation for Big Data Cyber Security Analytics\n", "abstract": " Big Data Cyber Security Analytics (BDCA) leverages big data technologies for collecting, storing, and analyzing a large volume of security events data to detect cyber-attacks. Accuracy and response time, being the most important quality concerns for BDCA, are impacted by changes in security events data. Whilst it is promising to adapt a BDCA system's architecture to the changes in security events data for optimizing accuracy and response time, it is important to consider large search space of architectural configurations. Searching a large space of configurations for potential adaptation incurs an overwhelming adaptation time, which may cancel the benefits of adaptation. We present an adaptation approach, QuickAdapt, to enable quick adaptation of a BDCA system. QuickAdapt uses descriptive statistics (e.g., mean and variance) of security events data and fuzzy rules to (re) compose a system with a set of\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "Automated interpretation and integration of security tools using semantic knowledge\n", "abstract": " A security orchestration platform aims at integrating the activities performed by multi-vendor security tools to streamline the required incident response process. To make such a platform useful in practice in a Security Operation Center (SOC), we need to address three key challenges: interpretability, interoperability, and automation. In this paper, we proposed a novel semantic integration approach to automatically select and integrate security tools with essential capability for auto-execution of an incident response process in a security orchestration platform. The capability of security tools and the activities of the incident response process are formalized using ontologies, which have been used for NLP based approach to classify the activities for the emerging incident response processes. The developed ontologies and NLP approaches have been used for an interoperability model for selection and\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "Cost sharing security information with minimal release delay\n", "abstract": " We study a cost sharing problem derived from bug bounty programs, where agents gain utility by the amount of time they get to enjoy the cost shared information. Once the information is provided to an agent, it cannot be retracted. The goal, instead of maximizing revenue, is to pick a time as early as possible, so that enough agents are willing to cost share the information and enjoy it for a premium time period, while other agents wait and enjoy the information for free after a certain amount of release delay. We design a series of mechanisms with the goal of minimizing the maximum delay and the total delay. Under prior-free settings, our final mechanism achieves a competitive ratio of 4 in terms of maximum delay, against an undominated mechanism. Finally, we assume some distributions of the agents\u2019 valuations, and investigate our mechanism\u2019s performance in terms of expected delays.", "num_citations": "3\n", "authors": ["160"]}
{"title": "Evaluating docker for secure and scalable private cloud with container technologies\n", "abstract": " This is the third volume of a set of reports describing different aspects of a collaborative project with the Defence Science and Technology Group (DST Group), Maritime Division. The project investigated secure and scalable private clouds focussing on container virtualisation.In the previous two volumes, we have reported the details and results of our study of security of container technologies, when deployed on a cloud and when used in isolation. Since security is considered one of the biggest barriers to adoption of container technologies in enterprise environments, it is important to experimentally study and thoroughly understand the security aspects of container technologies. Software developers are increasingly adopting containers because of their better usability and performance compared with the traditional virtual machines that are launched by a type-1/2 hypervisor.", "num_citations": "3\n", "authors": ["160"]}
{"title": "On the communication variability analysis of the NeCTAR research Cloud system\n", "abstract": " A national research Cloud is being created as part of the National eResearch Collaboration Tools and Resources (NeCTAR) project, to supply a cost-effective computational infrastructure to Australian scholars. Since it is hard to comprehensively understand the available Cloud resources through the open indicators, we decided to empirically investigate the infrastructural performance of the NeCTAR Research Cloud. In particular, our current evaluation work shows that the communication data throughput vary significantly within and between the five existing Cloud nodes. Although operated as one Cloud system, the NeCTAR Research Cloud might have employed heterogeneous network equipment and/or technologies. As the NeCTAR project is still ongoing, the one-off evaluation results could be quickly out of date, and the evaluation implementations should be frequently repeated or replicated for monitoring or\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "Ant colony algorithm based scheduling for handling software project delay\n", "abstract": " Delay on a critical path may cause the failure in meeting the software project deadline. By adding extra employees with similar skills for help, the delay is expected to be eliminated or reduced. However, the originally scheduled activities may be suspended due to reallocation of employees, which may lead to the problem of delay propagation. So how to minimize and even eliminate the delay without delay propagation is worth investigation. In this paper, we first use a simple scenario to demonstrate the problem of employee scheduling which shows that in the scheduling process, one activity can have many ways for selecting employees from another project. In fact, the searching path in a multi-branch tree and its complete traversal is a NP hard problem. Furthermore when the scale of the problem becomes large, it is impractical to generate a search tree for implementation. Therefore, we propose an ant colony\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "A web-based system for managing software architectural knowledge\n", "abstract": " The Management of architectural knowledge is vital for improving an organization\u2019s architectural capabilities. Despite the recognition of the importance of capturing and reusing architectural knowledge, there is no suitable support mechanism. We have developed a conceptual framework for capturing and using architectural knowledge to support the software architecture process. A knowledge management system is envisioned to support the proposed framework. Such a system should facilitate architectural knowledge sharing among stakeholders, who may be collocated or geographically distributed. This chapter presents and discusses the design, implementation, and deployment details of a web-based architectural knowledge management system, called PAKME, to support the software architecture process. This chapter also discusses different usages of PAKME in the context of the software architecture\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "Going Agile? Beware of architecture-related changes and challenges\n", "abstract": " Agile approaches have undoubtedly been gaining popularity an increasing number of companies as a mechanism for reducing cost and increasing ability to handle change in dynamic market conditions. However, there is also a significant concern about the role and importance of architecture-related issues when using agile approaches. Many practitioners of agile approaches view software architecture in the context of the plan-driven development paradigm. That is why they appear to consider upfront architecture design and evaluation of very little value to the customers of a system. On the other hand, software architecture researchers and practitioners appear to be sceptics of using agile approaches for developing large scale software systems. Despite these opposing views about the role and importance of software architecture in two camps, there is a growing interest in identifying the mechanics and\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "Groupware requirements for supporting software architecture evaluation process\n", "abstract": " Scenario-based software architecture (SA) evaluation methods require a large number of stakeholders to be collocated for evaluation sessions. Since collocating stakeholders usually causes scheduling difficulties and can be an expensive exercise, especially in the context of the increasing global software development trend, such issues may discourage organizations from introducing disciplined architectural evaluation practices. In an attempt to find a cost effective and efficient alternative to face-to-face meetings, we have developed a concept of groupware-supported distributed SA evaluation process. In this paper, we analyze the unique characteristics of the proposed process to identify the requirements for a suitable collaborative tool that can effectively and efficiently support the process. We also describe the design and execution of an empirically motivated approach to gather the requirements for such a tool\u00a0\u2026", "num_citations": "3\n", "authors": ["160"]}
{"title": "Distilling scenarios from patterns for software architecture evaluation\n", "abstract": " Software architecture (SA) evaluation is a quality assurance technique that is increasingly attracting significant research and commercial interests. A number of SA evaluation methods have been developed. Most of these methods are scenario-based, which relies on the quality of the scenarios used for the evaluation. Most of the existing techniques for developing  scenarios use stakeholders and requirements documents as main sources of collecting scenarios. Recently, architectures of large software systems are usually composed of patterns and styles. One of the purposes of using patterns is to develop systems with predictable quality attributes. Since patterns are documented in a format that requires the inclusion of problem, solution and quality consequences, we observed that scenarios are, though as informal text, pervasive in patterns description, which can be extracted and documented for the SA evaluation. Thus, we claim that the patterns can be another source of collecting quality attributes sensitive scenarios. This position paper presents arguments and examples to support our claim.", "num_citations": "3\n", "authors": ["160"]}
{"title": "Machine Learning for Detecting Data Exfiltration: A Review\n", "abstract": " Context: Research at the intersection of cybersecurity, Machine Learning (ML), and Software Engineering (SE) has recently taken significant steps in proposing countermeasures for detecting sophisticated data exfiltration attacks. It is important to systematically review and synthesize the ML-based data exfiltration countermeasures for building a body of knowledge on this important topic. Objective: This article aims at systematically reviewing ML-based data exfiltration countermeasures to identify and classify ML approaches, feature engineering techniques, evaluation datasets, and performance metrics used for these countermeasures. This review also aims at identifying gaps in research on ML-based data exfiltration countermeasures. Method: We used Systematic Literature Review (SLR) method to select and review 92 papers. Results: The review has enabled us to: (a) classify the ML approaches used in the\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "Machine Learning for Detecting Data Exfiltration: A Review\n", "abstract": " Context: Research at the intersection of cybersecurity, Machine Learning (ML), and Software Engineering (SE) has recently taken significant steps in proposing countermeasures for detecting sophisticated data exfiltration attacks. It is important to systematically review and synthesize the ML-based data exfiltration countermeasures for building a body of knowledge on this important topic. Objective: This paper aims at systematically reviewing ML-based data exfiltration countermeasures to identify and classify ML approaches, feature engineering techniques, evaluation datasets, and performance metrics used for these countermeasures. This review also aims at identifying gaps in research on ML-based data exfiltration countermeasures. Method: We used a Systematic Literature Review (SLR) method to select and review {92} papers. Results: The review has enabled us to (a) classify the ML approaches used in the countermeasures into data-driven, and behaviour-driven approaches, (b) categorize features into six types: behavioural, content-based, statistical, syntactical, spatial and temporal, (c) classify the evaluation datasets into simulated, synthesized, and real datasets and (d) identify 11 performance measures used by these studies. Conclusion: We conclude that: (i) the integration of data-driven and behaviour-driven approaches should be explored; (ii) There is a need of developing high quality and large size evaluation datasets; (iii) Incremental ML model training should be incorporated in countermeasures; (iv) resilience to adversarial learning should be considered and explored during the development of countermeasures to avoid poisoning\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "The Impact of Distance on Performance and Scalability of Distributed Database Systems in Hybrid Clouds\n", "abstract": " The increasing need for managing big data has led the emergence of advanced database management systems. There has been increased efforts aimed at evaluating the performance and scalability of NoSQL and Relational databases hosted by either private or public cloud datacenters. However, there has been little work on evaluating the performance and scalability of these databases in hybrid clouds, where the distance between private and public cloud datacenters can be one of the key factors that can affect their performance. Hence, in this paper, we present a detailed evaluation of throughput, scalability, and VMs size vs. VMs number for six modern databases in a hybrid cloud, consisting of a private cloud in Adelaide and Azure based datacenter in Sydney, Mumbai, and Virginia regions. Based on results, as the distance between private and public clouds increases, the throughput performance of most databases reduces. Second, MongoDB obtains the best throughput performance, followed by MySQL C luster, whilst Cassandra exposes the most fluctuation in through performance. Third, vertical scalability improves the throughput of databases more than the horizontal scalability. Forth, exploiting bigger VMs rather than more VMs with less cores can increase throughput performance for Cassandra, Riak, and Redis.", "num_citations": "2\n", "authors": ["160"]}
{"title": "An evasion attack against ml-based phishing url detectors\n", "abstract": " Background: Over the year, Machine Learning Phishing URL classification (MLPU) systems have gained tremendous popularity to detect phishing URLs proactively. Despite this vogue, the security vulnerabilities of MLPUs remain mostly unknown. Aim: To address this concern, we conduct a study to understand the test time security vulnerabilities of the state-of-the-art MLPU systems, aiming at providing guidelines for the future development of these systems. Method: In this paper, we propose an evasion attack framework against MLPU systems. To achieve this, we first develop an algorithm to generate adversarial phishing URLs. We then reproduce 41 MLPU systems and record their baseline performance. Finally, we simulate an evasion attack to evaluate these MLPU systems against our generated adversarial URLs. Results: In comparison to previous works, our attack is: (i) effective as it evades all the models with an average success rate of 66% and 85% for famous (such as Netflix, Google) and less popular phishing targets (e.g., Wish, JBHIFI, Officeworks) respectively; (ii) realistic as it requires only 23ms to produce a new adversarial URL variant that is available for registration with a median cost of only $11.99/year. We also found that popular online services such as Google SafeBrowsing and VirusTotal are unable to detect these URLs. (iii) We find that Adversarial training (successful defence against evasion attack) does not significantly improve the robustness of these systems as it decreases the success rate of our attack by only 6% on average for all the models. (iv) Further, we identify the security vulnerabilities of the considered MLPU\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "Anatomy, Concept, and Design Space of Blockchain Networks\n", "abstract": " Blockchain technologies have been increasingly adopted by enterprises to increase operational efficiency and enable new business models. These enterprise blockchain applications generally run on dedicated blockchain networks due to regulations and security requirements. The design process of these networks involves many decisions and trade-offs that impact security, governance, and performance of applications that run on them. The challenge is further exacerbated by the lack of a common architecture and concept map to communicate about blockchain networks, as blockchain technologies tend to use different concepts and architecture. This paper presents a concept map, an anatomy and the principal dimensions of the design space of blockchain networks. We applied the proposed design space in a case study about designing and deploying a blockchain network for an ad-hoc IoT infrastructure. We\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "A review on requirements engineering for internet of things (lot) applications\n", "abstract": " Organizations and customers are adopting Internet of things (loT) due to many advantages that have impacted human life in various ways - smart homes, smart transportation, smart parking, and many smart applications in the medical, defense and other sectors. As these loT applications are emerging rapidly, there is a need to focus on software development life cycle (SDLC) of these systems to ensure necessary levels of quality. Requirements engineering for loT based systems did not get that much attention in its early years and thus has not been well explored by the Software Requirements Engineering (SRE) research community. Hence, it required to identify and recognize the challenges in loT development especially from the SRE perspectives. This article presents a comprehensive and inclusive overview of the issues pertaining to requirements engineering in the context of loT-based smart applications. Each\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "Decision support for project rescheduling to reduce software development delays based on ant colony optimization\n", "abstract": " Delays often occur during some activities in software development projects. Without handling of project delays effectively, many software development projects fail to meet their deadlines. If extra employees with same or similar skills and domain knowledge can be rescheduled for the remaining activities of the delayed projects, it can be possible to reduce or even eliminate existing delays in concurrent software development projects of similar nature. However, it is evident that employee rescheduling may result in delaying other activities, which may lead to the problem of delay propagation. Hence, it is important to investigate how to reduce or even eliminate the delay in one project without impacting other projects. By nature this is an NP-hard problem. Therefore, we propose a novel generic rescheduling strategy based on adaptive ant colony optimization algorithm to provide decision support for software project managers to select appropriate employees to deal with project delays. We have carried out a set of comprehensive experiments to evaluate the performance of the proposed strategy. In addition, three real world software project instances are also utilized to evaluate our strategy. The results show that our strategy is effective, efficient and able to outperform its representative counterparts significantly.", "num_citations": "2\n", "authors": ["160"]}
{"title": "A process framework for designing software reference architectures for providing tools as a service\n", "abstract": " Software Reference Architecture (SRA), which is a generic architecture solution for a specific type of software systems, provides foundation for the design of concrete architectures in terms of architecture design guidelines and architecture elements. The complexity and size of certain types of software systems need customized and systematic SRA design and evaluation methods. In this paper, we present a software Reference Architecture Design process Framework (RADeF) that can be used for analysis, design and evaluation of the SRA for provisioning of Tools as a Service as part of a cloud-enabled workSPACE (TSPACE). The framework is based on the state of the art results from literature and our experiences with designing software architectures for cloud-based systems. We have applied RADeF SRA design two types of TSPACE: software architecting TSPACE and software implementation TSPACE\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "Exploring social structures in extended team model\n", "abstract": " Extended Team Model (ETM) as a type of offshore outsourcing is increasingly becoming popular mode of Global Software Development (GSD). There is little knowledge about the social structures in ETM and their impact on collaboration. Within a large interdisciplinary project to develop the next generation of GSD technologies, we are exploring the role of social structures to support collaboration. This paper reports some details of our research design and initial findings about the mechanisms to support social structures and their impact on collaboration in an ETM.", "num_citations": "2\n", "authors": ["160"]}
{"title": "Troubleshooting during Installing Ubuntu Enterprise Cloud\n", "abstract": " This document provides supplemental material to the book \u201cGuidelines for building a private cloud infrastructure\u201d. This document describes the issues that can be expected during the different phases of the setup and installation of Ubuntu Enterprise Cloud. This document also contains some useful practical information concerning the technologies involved.", "num_citations": "2\n", "authors": ["160"]}
{"title": "Installing Ubuntu Enterprise Cloud in a Physical Environment\n", "abstract": " This document contains the supplemental material to \u201cGuidelines for Building a Private Cloud Infrastructure.\u201d This supplemental material provides guidance on how to install Ubuntu Enterprise Cloud in a physical environment. The purpose of this document is to provide a practical, step-by-step, detailed guide on how to pre-configure and install the machines and network. For more detailed description of the steps, a reader is advised to refer to another supplemental book named \u201cInstalling and Scaling out Ubuntu Enterprise Cloud in Virtual Environment.\u201d There are a few more details, accompanied with screenshots.The material included in this supplemental document is based on the installation that was performed in a physical environment based on HP ProLiant DL380 G41 servers, 100 Mbit/s witches, and a firewall/router that isolated the whole solution. The cloud installation was performed using the (for the time being) newest version of the UEC, based on the Ubuntu 11.04. The installation was performed using \u201cCD Install\u201d method2 (otherwise, there was also a \u201cPackage Install\u201d method3). This material in this document is based on Eucalyptus version installed is 2.0. 2.", "num_citations": "2\n", "authors": ["160"]}
{"title": "Installing and Scaling out Ubuntu Enterprise Cloud in Virtual Environment\n", "abstract": " This document contains the supplemental material to the book \u201cGuidelines for Building a Private Cloud Infrastructure\u201d. This document provides guidance on how to install Ubuntu Enterprise Cloud (UEC) in virtual environment, and afterwards how to scale out when needed.The purpose of this supplemental book is to provide a practical, step-by-step, detailed guide on how to dimension and install the machines and network. Some initial steps of configuring the cloud are also covered. The installation is performed in a virtual environment based on Windows 7 and VMware Workstation 7.", "num_citations": "2\n", "authors": ["160"]}
{"title": "Towards an evidence-based understanding of search engines in systematic literature reviews\n", "abstract": " Secondary studies, such as Systematic Literature Reviews (SLR) and Systematic Mapping Studies (SMS), are the core methods of Evidence-Based Software Engineering (EBSE)(Kitchenham et al., 2004), which is expected to help practitioners to make informed decisions about technology selection and adoption (Dyba et al., 2005). Recently, there has been a growing interest in performing SLR and SMS in Software Engineering (SE). Retrieval of relevant papers is an important concern in any SLR and SMS (Dieste et al., 2009). This activity determines the coverage of the relevant papers to be considered in an SLR or SMS. Automatic search, ie, executing search strings on Electronic Data Sources (EDS1), is the dominant method for identifying relevant papers2. However, researchers\u2019 selection of EDS is usually based on their personal preferences or ad hoc experiences, rather than an evidence-based decision on\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "A Joint Workshop of QACOS and OSSPL\n", "abstract": " The OSS movement, which originated from a pragmatic need to share code among individuals, has grown to become a major force behind inter-organizational reuse of platforms, components and code. The use of open source software to build single or family of systems (i.e., product line development) appears to be a profitable way to quality software products. On the other hand, because of the diverse use of open source software, product line development is an attractive way of working in open source communities. The configuration mechanisms used in open source communities may be applicable within software product lines variability management. In addition, product line organizations are usually involved in distributed development, which works very efficiently within open source communities, leading to high quality products. However, at present, there is limited interaction between the open source\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "Service oriented architecture\n", "abstract": " I present a survey that describes service oriented architecture. I made an sample application on Oracle BPEL by using Oracle SOA Suite for demonstration issues using it. I made researches about properties of service oriented architecture, advantages and disadvantages of it. Besides, the past studies that were made by using SOA has been analyzed. In this thesis principles of service oriented architecture are explained. Service oriented architecture can be used in different areas by the help of its properties and advantages. It can be adopted to different platforms easily. The use of SOA in applications decreases the development time but making services at the beginning is not good in terms effort. The main advantage of service oriented architecture is reusability, a service can be used in different applications and there is no need to make any changes on the service. To have the description of any service is adequate to use it. A service can be used by sending the necessary parameters to the service. In application part, an application has been developed step by step by using the properties of service oriented architecture.", "num_citations": "2\n", "authors": ["160"]}
{"title": "Improving the reuse of pattern-based knowledge in software architecting\n", "abstract": " Software architecture (SA) of a product family constrains the achievement of various quality attributes (such as reusability, performance, security, maintainability and usability)[1]. A number of methods, such as Architecture Tradeoff Analysis Method (ATAM)[2], Quality Attribute-oriented Software Architecture design method (QASAR)[3] and Quality-driven Architecture Design and Analysis (QADA)[4], have been developed to pay significant attention to quality related issues at the software architecture level. These approaches heavily depend on architectural styles and patterns to design candidate architectures and on scenarios and associated reasoning frameworks to evaluate software architecture for desired quality attributes.A quality attribute is a non-functional requirement of a system, eg, reliability, modifiability and so forth. Scenarios are widely used in product line software engineering: abstract scenarios to capture behavioural requirements and quality-sensitive scenarios to specify architecturally significant quality attributes. Patterns1 embody proven solutions to recurring problems by capturing concentrated wisdom of many experienced practitioners. Patterns are a vital means of designing software architecture of large complex systems. One of the major objectives of using patterns is to develop a software system with predictable nonfunctional properties [1]. Each pattern helps achieve one or more quality attribute and may hinder others. In product line development, an architect designs a desirable software architecture by composing a number of architectural styles and patterns. Scenarios are used to characterize quality goals and patterns are\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "The value of architecturally significant information extracted from patterns for architecture evaluation: a controlled experiment\n", "abstract": " We have developed an approach to identify and capture architecturally significant information from patterns (ASIP), which can be used to improve architecture design and evaluation. Our experimental goal was to evaluate whether the use of the ASIP improves the quality of scenarios developed to evaluate software architecture. Out of 24 subjects 21 were experienced software engineers who had returned to University for a postgraduate studies and remaining 3 were fourth year undergraduate students. All participants were taking a course in software architecture. The participants were randomly assigned to two groups of equal size. Both groups developed scenarios for architecture evaluation. One group (treatment group) was given ASIP information the other (control group) was not. The outcome variable was the quality of the scenarios produced by each participant working individually. The treatment group\u00a0\u2026", "num_citations": "2\n", "authors": ["160"]}
{"title": "Teaching three quality assurance techniques in tandem-lessons learned\n", "abstract": " This paper presents our experiences gained in teaching software quality to undergraduate computer science and engineering students at The University of New South Wales. We argue that increasing demand of high quality software makes it imperative to teach a wide variety of skills which are required to deliver quality product or design and implement a quality focused process. We taught three quality improvement techniques to give students a greater appreciation of the range of the techniques available, and their respective strengths and weaknesses. We found it challenging but rewarding to inculcate programming minded students with the skills required to deal with product and process quality related issues. We believe that the experiences gained from this exercise is valuable to those interested in designing and offering software quality education and training at tertiary level.", "num_citations": "2\n", "authors": ["160"]}
{"title": "An Empirical Study of Rule-Based and Learning-Based Approaches for Static Application Security Testing\n", "abstract": " Background: Static Application Security Testing (SAST) tools purport to assist developers in detecting security issues in source code. These tools typically use rule-based approaches to scan source code for security vulnerabilities. However, due to the significant shortcomings of these tools (ie, high false positive rates), learning-based approaches for Software Vulnerability Prediction (SVP) are becoming a popular approach. Aims: Despite the similar objectives of these two approaches, their comparative value is unexplored. We provide an empirical analysis of SAST tools and SVP models, to identify their relative capabilities for source code security analysis. Method: We evaluate the detection and assessment performance of several common SAST tools and SVP models on a variety of vulnerability datasets. We further assess the viability and potential benefits of combining the two approaches. Results: SAST tools\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "DeepCVA: Automated Commit-level Vulnerability Assessment with Deep Multi-task Learning\n", "abstract": " It is increasingly suggested to identify Software Vulnerabilities (SVs) in code commits to give early warnings about potential security risks. However, there is a lack of effort to assess vulnerability-contributing commits right after they are detected to provide timely information about the exploitability, impact and severity of SVs. Such information is important to plan and prioritize the mitigation for the identified SVs. We propose a novel Deep multi-task learning model, DeepCVA, to automate seven Commit-level Vulnerability Assessment tasks simultaneously based on Common Vulnerability Scoring System (CVSS) metrics. We conduct large-scale experiments on 1,229 vulnerability-contributing commits containing 542 different SVs in 246 real-world software projects to evaluate the effectiveness and efficiency of our model. We show that DeepCVA is the best-performing model with 38% to 59.8% higher Matthews Correlation Coefficient than many supervised and unsupervised baseline models. DeepCVA also requires 6.3 times less training and validation time than seven cumulative assessment models, leading to significantly less model maintenance cost as well. Overall, DeepCVA presents the first effective and efficient solution to automatically assess SVs early in software systems.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Challenges and solutions when adopting DevSecOps: A systematic review\n", "abstract": " Context: DevOps has become one of the fastest growing software development paradigms in the industry. However, this trend has presented the challenge of ensuring secure software delivery while maintaining the agility of DevOps. The requirement of secure outputs in DevOps led to the DevSecOps paradigm, which is gaining the interest of both the industry and academia. However, the adoption of DevSecOps in practice has been challenging. Objective: This study aims to identify the challenges faced by practitioners when adopting DevSecOps and the solutions proposed by peer-reviewed studies. We intend our study to aid practitioners planning to adopt DevSecOps, foresee problems and decide on solutions early. We also aim to find specific gap areas for future research and development. Method: We have conducted a Systematic Literature Review of 52 peer-reviewed studies. The thematic analysis method was applied to analyze the extracted data. Results: We identified 21 challenges related to adopting DevSecOps, 31 specific solutions, and key gap areas in this domain. The results were classified into four themes: People, Practices, Tools, and Infrastructure. Our findings show that tools-related challenges and solutions were the most frequently reported, driven by the need for automation in this paradigm. Shift-left security and continuous security assessment were two key practices recommended for DevSecOps. People-related factors were considered critical for adoption success but less studied. Conclusions: We highlight the need for developer-centered application security testing tools that target the continuous practices in DevOps\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "ReinforceBug: A Framework to Generate Adversarial Textual Examples\n", "abstract": " Adversarial Examples (AEs) generated by perturbing original training examples are useful in improving the robustness of Deep Learning (DL) based models. Most prior works, generate AEs that are either unconscionable due to lexical errors or semantically or functionally deviant from original examples. In this paper, we present ReinforceBug, a reinforcement learning framework, that learns a policy that is transferable on unseen datasets and generates utility-preserving and transferable (on other models) AEs. Our results show that our method is on average 10% more successful as compared to the state-of-the-art attack TextFooler. Moreover, the target models have on average 73.64% confidence in the wrong prediction, the generated AEs preserve the functional equivalence and semantic similarity (83.38% ) to their original counterparts, and are transferable on other models with an average success rate of 46%.", "num_citations": "1\n", "authors": ["160"]}
{"title": "An Empirical Study on Developing Secure Mobile Health Apps: The Developers' Perspective\n", "abstract": " Mobile apps exploit embedded sensors and wireless connectivity of a device to empower users with portable computations, context-aware communication, and enhanced interaction. Specifically, mobile health apps (mHealth apps for short) are becoming integral part of mobile and pervasive computing to improve the availability and quality of healthcare services. Despite the offered benefits, mHealth apps face a critical challenge, i.e., security of health-critical data that is produced and consumed by the app. Several studies have revealed that security specific issues of mHealth apps have not been adequately addressed. The objectives of this study are to empirically (a) investigate the challenges that hinder development of secure mHealth apps, (b) identify practices to develop secure apps, and (c) explore motivating factors that influence secure development. We conducted this study by collecting responses of 97\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Sam-sos: A stochastic software architecture modeling and verification approach for complex system-of-systems\n", "abstract": " A System-of-Systems (SoS) is a complex, dynamic system whose Constituent Systems (CSs) are not known precisely at design time, and the environment in which they operate is uncertain. SoS behavior is unpredictable due to underlying architectural characteristics such as autonomy and independence. Although the stochastic composition of CSs is vital to achieving SoS missions, their unknown behaviors and impact on system properties are unavoidable. Moreover, unknown conditions and volatility have significant effects on crucial Quality Attributes (QAs) such as performance, reliability and security. Hence, the structure and behavior of a SoS must be modeled and validated quantitatively to foresee any potential impact on the properties critical for achieving the missions. Current modeling approaches lack the essential syntax and semantics required to model and verify SoS behaviors at design time and cannot\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Security Awareness of End-Users of Mobile Health Applications: An Empirical Study\n", "abstract": " Mobile systems offer portable and interactive computing, empowering users, to exploit a multitude of context-sensitive services, including mobile healthcare. Mobile health applications (i.e., mHealth apps) are revolutionizing the healthcare sector by enabling stakeholders to produce and consume healthcare services. A widespread adoption of mHealth technologies and rapid increase in mHealth apps entail a critical challenge, i.e., lack of security awareness by end-users regarding health-critical data. This paper presents an empirical study aimed at exploring the security awareness of end-users of mHealth apps. We collaborated with two mHealth providers in Saudi Arabia to gather data from 101 end-users. The results reveal that despite having the required knowledge, end-users lack appropriate behaviour , i.e., reluctance or lack of understanding to adopt security practices, compromising health-critical data with social, legal, and financial consequences. The results emphasize that mHealth providers should ensure security training of end-users (e.g., threat analysis workshops), promote best practices to enforce security (e.g., multi-step authentication), and adopt suitable mHealth apps (e.g., trade-offs for security vs usability). The study provides empirical evidence and a set of guidelines about security awareness of mHealth apps.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Demystifying the Mysteries of Security Vulnerability Discussions on Developer Q&A Sites\n", "abstract": " Detection and mitigation of Security Vulnerabilities (SVs) are integral tasks in software development and maintenance. Software developers often explore developer Question and Answer (Q&A) websites to find solutions for securing their software. However, there is empirically little known about the on-going SV-related discussions and how the Q&A sites are supporting such discussions. To demystify such mysteries, we conduct large-scale qualitative and quantitative experiments to study the characteristics of 67,864 SV-related posts on Stack Overflow (SO) and Security StackExchange (SSE). We first find that the existing SV categorization of formal security sources is not frequently used on Q&A sites. Therefore, we use Latent Dirichlet Allocation topic modeling to extract a new taxonomy of thirteen SV discussion topics on Q&A sites. We then study the characteristics of such SV topics. Brute-force/Timing Attacks and Vulnerability Testing are found the most popular and difficult topics, respectively. We discover that despite having higher user expertise than other domains, the difficult SV topics do not gain as much attention from experienced users as the more popular ones. Seven types of answers to SV-related questions are also identified on Q&A sites, in which SO usually gives instructions and code, while SSE provides more explanations and/or experiencebased advice. Our findings can help practitioners and researchers to utilize Q&A sites more effectively to learn and share SV knowledge.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Automatic Identification of Architecture Smell Discussions from Stack Overflow.\n", "abstract": " Architecture Smells (ASs), as one source of technical debt, indicate underlying problems at a high level of systems and negatively impact various system qualities, such as maintainability and evolvability. Detecting and refactoring ASs requires the relevant architectural knowledge and experience. Therefore, gathering the knowledge of ASs from various sources can facilitate ASs detecting and refactoring. However, manually identifying AS knowledge is time-consuming. Automatically and correctly identifying AS-related posts from Stack Overflow is a step toward utilizing the AS knowledge to help developers better maintain their systems. In this work, we propose an approach to automatically identify AS-related posts from Stack Overflow (SoF) by using machine learning algorithms. We evaluate the performance of 12 classifiers based on 3 feature extraction techniques and 4 classification algorithms with a created dataset of SoF posts (including 208 AS-related posts and 187 AS-unrelated posts). The results demonstrate that the SVM algorithm with Word2Vec achieved the best overall performance with an accuracy of 0.650, a precision of 0.613, a recall of 0.905, and an F1-score of 0.731. These results imply that the obtained model of the AS-related posts identification can be used to aid developers and researchers in collecting AS discussions from SoF.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Code readability management of high-level programming languages: a comparative study\n", "abstract": " Quality can never be an accident and therefore, software engineers are paying immense attention to produce quality software product. Source code readability is one of those important factors that play a vital role in producing quality software. The code readability is an internal quality attribute that directly affects the future maintenance of the software and reusability of same code in similar other projects. Literature shows that readability does not just rely on programmer\u2019s ability to write tidy code but it also depends on programming language\u2019s syntax. Syntax is the most visible part of any programming language that directly influence the readability of its code. If readability is a major factor for a given project, the programmers should know about the language that they shall choose to achieve the required level of quality. For this we compare the readability of three most popular high-level programming languages; Java, C#, and C++. We propose a comprehensive framework for readability comparison among these languages. The comparison has been performed on the basis of certain readability parameters that are referenced in the literature. We have also implemented an analysis tool and performed extensive experiments that produced interesting results. Furthermore, to judge the effectiveness of these results, we have performed statistical analysis using SPSS (Statistical Package for Social Sciences) tool. We have chosen the Spearman\u2019s correlation ad Mann Whitney\u2019s T-test for the same. The results show that among all three languages, Java has the most readable code. Programmers should use Java in the projects that have code readability as\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "An Empirical Study of the Effectiveness of Software Architecture Evaluation Meetings\n", "abstract": " One of the most important issues in scenario-based software architecture evaluation is the development of scenarios for characterizing a desired set of quality attributes by holding meetings of stakeholders. As such meetings are costly to arrange, studying the effectiveness of such meetings is an important research question. In this paper, we report on the findings from a software architecture evaluation empirical study aimed at investigating the effectiveness of scenario development meetings in terms of the quantity of gained and lost scenarios during the evaluation process. The findings from the experiment data analysis raise the question about the effectiveness of holding meetings for developing scenarios as more existing scenarios were lost than new scenarios were gained as a result of these meetings.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Agile Approaches for Teaching and Learning Software Architecture Design Processes and Methods\n", "abstract": " Software architecture plays a vital role in the analysis, design, evaluation and evolution of large-scale projects. Successful adoption of an agile methodology in large-scale projects requires not only tailoring of the software architecture analysis, design and evaluation methods but also a fundamental understanding of these methods. In this chapter, we provide agile teaching and learning approaches for software architecture analysis, design and evaluation. In particular, we focus on agile teams in architecturally significant (quality) requirements analysis and change management for collocated and distributed agile projects, iterative and continuous architecture design delivery using story boards and collaboration platforms, and using software reference architectures to monitor and control the design and evolution of a software architecture. The methods presented in this chapter are based upon the following\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Internet of Things Search Engine: Concepts, Classification, and Open Issues\n", "abstract": " This article focuses on the complicated yet still relatively immature area of the Internet of Things Search Engines (IoTSE). It introduces related concepts of IoTSE and a model called meta-path to describe and classify IoTSE systems based on their functionality. Based on these concepts, we have organized the research and development efforts on IoTSE into eight groups and presented the representative works in each group. The concepts and ideas presented in this article are generated from an extensive structured study on over 200 works spanning over one decade of IoTSE research and development.", "num_citations": "1\n", "authors": ["160"]}
{"title": "An empirical investigation of transferring research to software technology innovation: a case of data-driven national security software\n", "abstract": " Context: Governments are providing more and more support for academia-industry collaborations for industry led research and innovation via Cooperative Research Centers (CRC). It is important to understand the processes and practices of such programs for transferring scientific R&D to innovation. Goal: We aimed at empirically investigating the processes and practices implemented in the context of one of the Australian CRCs, aimed at transferring big data research to innovative software solutions for national security. Method: We applied case study method and collected and analyzed data from 17 interviews and observations of the participants of the studied CRC program. Findings: We present the innovation process implemented in the studied CRC. We particularly highlight the practices used to involve end-users in the innovation process. We further elaborate on the challenges of running this collaborative\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Automatically exploiting implicit design knowledge when solving the class responsibility assignment problem\n", "abstract": " Assigning responsibilities to classes is not only vital during initial software analysis/design phases in object-oriented analysis and design (OOAD), but also during maintenance and evolution phases, when new responsibilities have to be assigned to classes or existing responsibilities have to be changed. Class Responsibility Assignment (CRA) is one of the most complex tasks in OOAD as it heavily relies on designers' judgment and implicit design knowledge (DK) of design problems. Since CRA is highly dependent on the successful use of implicit DK, (semi)-automated approaches that help designers to assign responsibilities to classes should make implicit DK explicit and exploit the DK effectively. In this paper, we propose a learning based approach for the Class Responsibility Assignment (CRA) problem. A learning mechanism is introduced into Genetic Algorithm (GA) to extract the implicit DK about which\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Improving the quality of architecture design through peer-reviews and recombination\n", "abstract": " Software architecture reviews help improve the quality of architecture design decisions. Traditional reviews are considered expensive and time-consuming. We assert that organizations can consider leveraging peer-reviews and recombination (i.e., promoting design improvement through sharing design ideas) activities to improve the quality of architectures and getting staff trained. This paper reports a case study aimed at exploring the potential impact of combining peer-review and recombination on the quality of architecture design and design decisions made by novice architects, who usually have limited practical experience of architecture design. The findings show that the use of peer-review and recombination can improve both the quality of architecture design and documented decisions. From the decision-making perspective, this study also identifies the main types of challenges that the participants\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Design and modeling of 10 kW biofuel based solid oxide fuel cell system\n", "abstract": " With the objective to implement clean, efficient and environmentally friendly technology for electricity generation, the design of a biofuel based SOFC system of 10kW is proposed and modeled theoretically. In particular the focus of this paper is on the modeling of a stack design of biofuel based solid oxide fuel cell system. A lumped parameter modeling approach is implemented in this paper in which all the fundamental equations of fuel cell losses and efficiency are considered for better characterization of the system. On the basis of single cell performance a stack cell system of 10kW along with polygeneration applications is analyzed by different performance curves of stack system including electrical efficiency, heating efficiency, combined heating and power efficiency (CHP), combined cooling and power (CCP) efficiency and combined cooling heating and power (CCHP) efficiency are plotted for different temperature ranges, fuel utilization factor and operating pressure of the system. All the analysis and implementation of system is incorporated in MATLAB software.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Tool Support for Team Building in Global Software Development\n", "abstract": " The project aimed at developing a tool support for Accelerated Team Building for Global Software Development (ATGSD). The tool purports to support team building activities in Global Software Development (GSD) as well as enhancing awareness among team members. GSD has emerged as one of the most popular paradigms for developing software intensive systems. It is characterized by geographical distribution of software development teams across multiple sites, cultures and time zones. GSD offers a number of benefits, including extending working hours, taking advantage of low cost destinations, closer to the market, shortened time-to-market cycles and rapid response to customer needs. Additionally, it also helps to trigger new ideas [1] since developers originate from diverse backgrounds. However, GSD team members also suffer from several kinds of coordination and communication challenges. Moreover, there are other kinds of potential challenges such as different time zones, lack of awareness. Lack of awareness information makes it difficult to initiate contact and often leads to misunderstanding of communicating content and motivation. Hence, a deep understanding of distributed team members\u2019 awareness about which project members are currently available, information about group members, their status and their roles as well as their interests can play an important role in addressing some of the communication challenges. To address some aspects of awareness in distributed teams, TEO and its collaborators have proposed an ATGSD methodology for supporting distributed team building and managing as well as enhancing the\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "PTaaS: Platform for Providing Software Developing Applications and Tools as a Service\n", "abstract": " Cloud computing has become an established paradigm for enabling organizations to build scalable software systems and to meet challenges of rapid demand of computing and storage resources. There has been a significant success in building cloud-enabled applications for many disciplines ranging from web based and mobile application to intensive video and data processing systems. This initial success of cloud has opened new horizons for more complex domains. Global Software Development (GSD) is one of such domains. GSD is different than traditional applications domains because of involvement of large number of complex activities that does not only include technological aspects but also social aspects. A large number of applications and tools have been devised for providing solutions to the challenges of the GSD that emerge as a result of distributed development teams. However, the technological solutions that have been proposed so far are limited in their ability to meet specific GSD challenged and emerging trends of GSD in which software development is not only global but it also involve multiple organizations. Involvement of the multiple organizations in GSD increase the complexity of aligning their processes and establishing technology support needed to facilitate working according to new processes. Although the benefits of using cloud computing to solve GSD issues have been discussed in the literature but there has not been a significant attempt to provide fully functional technological support for it that is not limited to one specific tools and a particular phase of software development life cycle. In this thesis, we have\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Tales and lessons from the front lines of conducting empirical studies in (or with) industry\n", "abstract": " Software Engineering (ESE) research has achieved considerable results in building our knowledge about selecting and applying appropriate empirical methods for technology evaluation. Empirical studies in general and empirical studies in industrial settings in particular have played an important role in successful transition of many Software Engineering (SE) technologies to industry, for example, defect detection techniques and automated test cases. However, conducting empirical research in industrial settings remains a challenging undertaking for a variety of reasons. There is no substantial literature reporting on the challenges and complexities involved in conducting empirical studies in an industrial setting in general and in settings whose business models are built around global sourcing. This paper reports some of the tales of our experiences and lessons learned from conducting empirical research in industry as corporate as well as academic researchers. Some of the observed challenges include short time horizon for research, high expectations, limited research skills, and the \u2018acceptable\u2019research rigor. The paper explores some of these issues with relevant examples and provides some common strategies for overcoming these issues. We also stress that researchers and practitioners should share their experiences of conducting empirical research in order to help build a body of knowledge to guide the future efforts.", "num_citations": "1\n", "authors": ["160"]}
{"title": "A Field Study of Structures, Affordances, and Coordination Mechanisms of a Cross Organizational Extended Team in Global Software Development\n", "abstract": " Objective: This research has been motivated by the need of studying the types of work, communication and social structures designed and implemented for a cross-organizational extended GSD team and the kinds of collaborative affordances available to support GSD teams. Moreover, this research also aimed at identifying and understanding the interdependencies created by the existing structures and the coordination mechanisms provided to deal with the interdependencies and how they can contribute to alleviate or exacerbate GSD challenges.Method: We used the case study research methodology in the context of a cross-organizational ETM consisting of multiple nationalities and multiple sites. We used semi-structured interview as our main data collection approach. We carried out 12 interviews with both onshore and offshore team members. We applied qualitative data analysis approach called thematic analysis for finding the answers to our key research questions.Results: Our study has identified that the current work structure of ETM create several kinds of interdependencies for which they have introduced dens communication and social structures that appear to afford several means of collaboration for performing the interdependent software development activities by building the feeling of togetherness and high level of trust, and making ease of initiating conversations, establishing common understandings and maintaining task and team awareness. However, the existing structures do not help resolve the difficulties associated with communication gap, delayed feedback, and requirements related challenges. We also found that the\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Comparison of problem solving from engineering design to software design\n", "abstract": " Observational studies of engineering design activities can inform the research community on the problem solving models that are employed by professional engineers. Design is defined as an ill-defined problem which includes both engineering design and software design, hence understanding problem solving models from other design domains is of interest to the engineering design community. For this paper an observational study of two software design sessions performed for the workshop on \u201cStudying professional Software Design\u201d is compared to analysis from engineering design. These findings provide useful insights of how software designers move from a problem domain to a solution domain and the commonalities between software designers\u2019 and engineering designers\u2019 design activities. The software designers were found to move quickly to a detailed design phase, employ co-evolution and adopt a\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Supporting customizable architectural design decision management\n", "abstract": " When engineering complex software systems, the key Architectural Design Decisions (ADD) and the reasoning underlying those decisions need to be fully understood by all stakeholders. Achieving such understanding usually requires the use of ADD management tools. Most existing ADD management tools apply prescriptive ADD models and do not provide sufficient customizability. However, forcing architects to follow an ADD model that does not fit their specific needs can cause significant problems (e.g., extra cost is needed, and architects' willingness and motivation can negatively be affected). This research project aims at solving this issue by developing a highly customizable solution, which can enable practitioners to define ADD models according to their preferences and working situations. The detailed needs for ADD model customization will be identified by multiple case studies and semi-structured\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "An empirical investigation of scenarios gained and lost in architecture evaluation meetings\n", "abstract": " Studying the effectiveness of scenario development meetings in the software architecture process is important to improve meeting effectiveness. This paper reports initial findings from analyzing the data collected in a controlled experiment aimed at studying the effectiveness of meetings in terms of gained and lost scenarios of individuals, real and nominal (non-communicating) teams. Our findings question the effectiveness of holding meetings since more important scenarios were lost than gained in these meetings. In the study nominal teams performed better than individuals and real teams.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Identifying and understanding architecture-centric issues in agile software development\n", "abstract": " Based on the principles of the Agile manifesto [1, 2], researchers and practitioners have proposed several software development approaches such as such as Extreme Programming, Scrum and Feature-Driven Development. These approaches have had significant impact on industrial software development practices. Agile approaches have also been successfully addopted for developoing complex software in large organizations. However, there is an increasing concern and perplexity about the role and importance of the issues related to a system's software architecture, which is considered one of the most important initial design artifacts. Proponents of Agile approach usually appear to perceive software architecture related issues in the context of the plan-driven development paradigm [3]. Upfront design and evaluation of architecture is perceived to require too much work, which may have very little value to the\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "The First International Workshop on Management and Economics of Software Product Lines (MESPUL07)\n", "abstract": " The first international workshop on management and economics of software product lines will bring together researchers and practitioners from academia, industry and governments to report and discuss the challenges and opportunities of adopting and managing software product lines from managerial, organizational, and economics point of view.", "num_citations": "1\n", "authors": ["160"]}
{"title": "Assessing the value of Architectural Information Extracted from Patterns for Architecting\n", "abstract": " Background:  We have developed an approach to identifying and capturing architecturally significant information from patterns (ASIP), which can be used to improve architecture design and evaluation. Goal:  Our goal was to evaluate whether the use of the ASIP provides more effective support in understanding or designing software architecture composed of the software design patterns which are the source of the ASIP compared with the original design pattern documentation. Experimental design:  Our subjects were 20 experienced software engineers who had returned to University for a post graduate course. All participants were taking a course in software architecture. The participants were randomly assigned to two groups of equal size. Both groups performed two tasks: understanding the use of J2EE design pattern in a given architecture based on the quality requirements the architecture was supported to satisfy, and designing software architecture to satisfy a given set of quality requirements using J2EE design patterns. For the first task, one group (treatment group) was given ASIP information the other (control group) was given the standard J2EE pattern documentation. For the second task, treatment group became the control group and vice versa and the type of support information was kept constant. The outcome variables were the number of correctly identified design patterns. The participants also completed a post-experiment questionnaire. Result:  The average score for the first task for the treatment group was 23.90 and for the control group was 13.80. The difference between the groups was significant using Mann-Whiney test (p=0\u00a0\u2026", "num_citations": "1\n", "authors": ["160"]}
{"title": "Controlled Experiments on Pair Programming: Making Sense of Heterogeneous Results\n", "abstract": " Recently, several controlled experiments on adoption and use of pair programming (PP) have been reported. Most of these experiments have been conducted by constructing small-scale programs of a few hundred lines of code, using correctness, duration, and effort metrics. However, none of the experiments is a replication of a previous one, and there are significant differences among contextual factors such as local goals, metrics, and collected measures. Hence, it is very difficult to compare, assess and generalize the results from different experiments. We illustrate this difficulty by comparing metrics and measures from two wellknown PP experiments. We also show how one study failed in applying large-scale defect profiles on small-scale systems. We asserted that apart from studying the quantitative effects of PP, researchers should also focus on studying PP\u2019s social and cognitive impact on teamwork. Such studies require longitudinal case studies in commercial settings, which are hard to carry out.", "num_citations": "1\n", "authors": ["160"]}
{"title": "An Empirical Study of Scenarios Gained and Lost in Architecture Evaluation Meetings\n", "abstract": " An important element in scenario-based architecture evaluation is the development of scenarios by holding meetings of stakeholders. As the team meeting is an expensive activity, studying the effectiveness of meetings is an important research question. In this paper, we report the findings from analyzing the data collected in a controlled experiment aimed at empirically studying the effectiveness of scenario development meetings in terms of gained and lost scenarios. A secondary researched issue was whether or not a top-down technique for eliciting scenarios can improve the performance of a team meeting compared to a bottom-up technique. Findings from data analysis question the effectiveness of holding meetings for developing scenarios since more important scenarios were lost than gained in these meetings. Data results also provide empirical support to our assertion that top-down scenario development technique is better than the bottom-up technique.", "num_citations": "1\n", "authors": ["160"]}