{"title": "Research on Architecting Microservices: Trends, Focus, and Potential for Industrial Adoption\n", "abstract": " Microservices are a new trend rising fast from the enterprise world. Even though the design principles around microservices have been identified, it is difficult to have a clear view of existing research solutions for architecting microservices. In this paper we apply the systematic mapping study methodology to identify, classify, and evaluate the current state of the art on architecting microservices from the following three perspectives: publication trends, focus of research, and potential for industrial adoption. More specifically, we systematically define a classification framework for categorizing the research on architecting microservices and we rigorously apply it to the 71 selected studies. We synthesize the obtained data and produce a clear overview of the state of the art. This gives a solid basis to plan for future research and applications of architecting microservices.", "num_citations": "248\n", "authors": ["642"]}
{"title": "A stakeholder-driven service life cycle model for SOA\n", "abstract": " Service-orientation is a relatively new paradigm aiming at developing software systems that are adaptive and dynamic. Service-oriented systems are developed by composing services that are shared across organizations. Because new roles and new development tasks are introduced in service-oriented development as opposed to traditional software engineering, a new approach to service life cycle management is required. In this paper, based on the observations of the state of the art in the field, we propose a stakeholder-driven service life cycle model for service oriented architecture (SOA). Horizontally, the model shows the activities that associated with the stakeholders in SOA. While vertically, the model shows the interactions and cooperation between the stakeholders. This model facilitates the researchers to gain further insight into service-oriented development and governance.", "num_citations": "126\n", "authors": ["642"]}
{"title": "Architectural knowledge: Getting to the core\n", "abstract": " Different organizations or organizational units are likely to store and maintain different types of information about their software architectures. This inhibits effective management of architectural knowledge. We experimented with a model of architectural knowledge to characterize the use of architectural knowledge in four different organizations. Based on this experimentation we identified four perspectives on architectural knowledge management, and additionally adjusted the model to better align theory with practice. The refined model defines a minimal set of concepts with supposedly complete coverage of the architectural knowledge domain. Because of the minimalistic aspect of the model, we refer to it as a \u2018core model\u2019 of architectural knowledge. Supporting evidence for the validity of our model, i.e. the supposed complete coverage, has been obtained by an attempt to falsify this claim through a\u00a0\u2026", "num_citations": "115\n", "authors": ["642"]}
{"title": "Eliciting software process models with the E3 language\n", "abstract": " Software processes are complex entities that demand careful understand ing and improvement as they determine the quality of the resulting product.  A necessary step toward the improvement of an organization's process is a clear description of the entities involved and of their mutual relationships. Process model elicitation aims at constructing this description under the shape of a software process model. The model is constructed by gathering, from several sources, process information which is often incomplete, inconsistent, and ambiguous. A process modeling language can be used to represent the model being elicited. However, elicitation requires process models to be understandable and well structured. These requirements are often not satisfied by available process  modeling languages becuase of their bias toward process enaction rather than process description. This article presents a process modeling\u00a0\u2026", "num_citations": "113\n", "authors": ["642"]}
{"title": "Exploring service-oriented system engineering challenges: a systematic literature review\n", "abstract": " Service-oriented system engineering (SOSE) has drawn increasing attention since service-oriented computing was introduced in the beginning of this decade. A large number of SOSE challenges that call for special software engineering efforts have been proposed in the research community. Our goal is to gain insight into the current status of SOSE research issues as published to date. To this end, we conducted a systematic literature review exploring SOSE challenges that have been claimed between January 2000 and July 2008. This paper presents the results of the systematic review as well as the empirical research method we followed. In this review, of the 729 publications that have been examined, 51 were selected as primary studies, from which more than 400 SOSE challenges were elicited. By applying qualitative data analysis methods to the extracted data from the review, we proved our\u00a0\u2026", "num_citations": "112\n", "authors": ["642"]}
{"title": "Explicit assumptions enrich architectural models\n", "abstract": " Design for change is a well-known adagium in software engineering. We separate concerns, employ well-designed interfaces, and the like to ease evolution of the systems we build. We model and build in changeability through parameterization and variability points (as in product lines). These all concern places where we explicitly consider variability in our systems. We conjecture that it is helpful to also think of and explicitly model invariability, things in our systems and their environment that we assume will not change. We give examples from the literature and our own experience to illustrate how evolution can be seriously hampered because of tacit assumptions made. In particular, we show how we can explicitly model assumptions in an existing product family. From this, we derive a metamodel to document assumptions. Finally, we show how this type of modeling adds to our understanding of the architecture and\u00a0\u2026", "num_citations": "112\n", "authors": ["642"]}
{"title": "Architecting with microservices: A systematic mapping study\n", "abstract": " ContextA microservice architecture is composed of a set of small services, each running in its own process and communicating with lightweight mechanisms. Many aspects on architecting with microservices are still unexplored and existing research is still far from being crispy clear.ObjectiveWe aim at identifying, classifying, and evaluating the state of the art on architecting with microservices from the following perspectives: publication trends, focus of research, and potential for industrial adoption.MethodWe apply the systematic mapping methodology. We rigorously selected 103 primary studies and we defined and applied a classification framework to them for extracting key information for subsequent analysis. We synthesized the obtained data and produced a clear overview of the state of the art.ResultsThis work contributes with (i) a classification framework for research studies on architecting with microservices, (ii\u00a0\u2026", "num_citations": "110\n", "authors": ["642"]}
{"title": "Migrating towards microservice architectures: an industrial survey\n", "abstract": " Microservices are gaining tremendous traction in industry and a growing scientific interest in academia. More and more companies are adopting this architectural style for modernizing their products and taking advantage of its promised benefits (e.g., agility, scalability). Unfortunately, the process of moving towards a microservice-based architecture is anything but easy, as there are plenty of challenges to address from both technical and organizational perspectives. In this paper we report about an empirical study on migration practices towards the adoption of microservices in industry. Specifically, we designed and conducted a survey targeting practitioners involved in the process of migrating their applications and we collected information (by means of interviews and questionnaires) on (i) the performed activities, and (ii) the challenges faced during the migration. Our findings benefit both (i) researchers by\u00a0\u2026", "num_citations": "110\n", "authors": ["642"]}
{"title": "A systematic literature review on green software metrics\n", "abstract": " Green IT is getting increasing attention in software engineering research. Nevertheless energy efficiency studies have mostly focused on the hardware side of IT, the software role still requires deepening in terms of methods and techniques. Furthermore, it is necessary to understand how to assess the software \u201cgreenness\u201d for stimulating the energy efficiency awareness, since early phases of the software lifecycle. The main goal of this study is to describe and to classify metrics related to software \u201cgreenness\u201d present in the software engineering literature. Furthermore, this study analyzes the evolution of those metrics, in terms of type, context, and evaluation methods.To achieve this goal, a systematic literature review has been performed surveying the metrics claimed in the last decade. After examined 960 publications, we selected 23 of them as primary studies, from which we isolated extracting 96 different green metrics. Therefore, we analyzed search results in order to show what is the trend of research about green software metrics, how metrics perform measurement on resources, and what type of metrics are more appealing for defined contexts.", "num_citations": "101\n", "authors": ["642"]}
{"title": "Service identification methods: a systematic literature review\n", "abstract": " Many service identification methods (SIMs) have been proposed to support the determination of services that are appropriate for use in an SOA. However, these SIMs vary in terms of analysis objectives, identification procedures and service hierarchies. Due to the heterogeneity of the SIMs, practitioners often face the difficulty of choosing a SIM that copes with available resources and fits their needs. To gain a holistic view of existing SIMs and to support the selection of the right SIM, in this paper we present the results of a systematic literature review. A total number of 237 studies were examined, of which 30 studies were selected as primary studies. From these studies, we identified different types of inputs, outputs and processes used by the existing SIMs. Based on these results, we created a matrix which can be used in three different ways for practitioners to select among alternative SIMs.", "num_citations": "77\n", "authors": ["642"]}
{"title": "The lonesome architect\n", "abstract": " Although the benefits are well-known and undisputed, sharing architectural knowledge is not something architects automatically do. In an attempt to better understand what architects really do and what kind of support they need for sharing knowledge, we have conducted large-scale survey research. The results of our study indicate that architects can be characterized as rather lonesome decision makers who mainly consume, but neglect documenting and actively sharing architectural knowledge. Acknowledging this nature of architects suggests ways to develop more effective support for architectural knowledge sharing.", "num_citations": "76\n", "authors": ["642"]}
{"title": "Global software development: are architectural rules the answer?\n", "abstract": " Global software development (GSD) faces additional challenges as compared to single-site software development. Some of the better known challenges include temporal, geographical, and socio-cultural differences. To overcome these challenges, organizations need to revert to measures in order to deliver software in time in a distributed setting. Some of these measures may exist in the form of architectural rules: principles and statements on the software architecture that must be complied with throughout the organization. From the GSD literature we distilled four main GSD challenges and seven sub-challenges, or issues. For each issue, we list possible solutions and observe that solutions to GSD challenges may be obtained by adhering to architectural rules. We present a study on how two organizations involved in GSD solve the GSD challenges and issues. One of the organizations mainly uses rules regulating\u00a0\u2026", "num_citations": "72\n", "authors": ["642"]}
{"title": "Guiding the selection of service-oriented software engineering methodologies\n", "abstract": " Service-oriented computing is a paradigm for effectively delivering software services in a dynamic environment. Accordingly, many service-oriented software engineering (SOSE) methodologies have been proposed and practiced in both academia and industry. Some of these methodologies share common features (e.g. cover similar life-cycle phases) but are presented for different purposes, ranging from project management to system modernization, and from business analysis to technical solutions development. Given this diversity in the methodologies available in the literature, it is very hard for a company to decide which methodology would fit best for its specific needs. With this aim, we took a feature analysis approach and devised a framework for comparing the existing SOA methodologies. Different from existing comparison frameworks, ours specifically highlights aspects that are specific to SOA and\u00a0\u2026", "num_citations": "67\n", "authors": ["642"]}
{"title": "Recovering architectural assumptions\n", "abstract": " During the creation of a software architecture, the architects and stakeholders take a lot of decisions. Many of these decisions can be directly related to functional or quality requirements. Some design decisions, though, are more or less arbitrarily made on the fly because of personal experience, domain knowledge, budget constraints, available expertise, and the like. These decisions, as well as the reasons for those decisions, are often not explicit upfront. They are implicit, and usually remain undocumented. We call them assumptions. There is no accepted way to document assumptions, and the relation between the software architecture and these assumptions easily gets lost, becomes hidden in the girders of the architecture. They are rediscovered at a later stage, when the software evolves and assumptions become invalid or new assumptions contradict earlier ones. In this paper, we develop a method to recover\u00a0\u2026", "num_citations": "60\n", "authors": ["642"]}
{"title": "Empirical evaluation of two best practices for energy-efficient software development\n", "abstract": " Background. Energy efficiency is an increasingly important property of software. A large number of empirical studies have been conducted on the topic. However, current state-of-the-Art does not provide empirically-validated guidelines for developing energy-efficient software.Aim. This study aims at assessing the impact, in terms of energy savings, of best practices for achieving software energy efficiency, elicited from previous work. By doing so, it identifies which resources are affected by the practices and the possible trade-offs with energy consumption.Method. We performed an empirical experiment in a controlled environment, where we applied two different Green Software practices to two software applications, namely query optimization in MySQL Server and usage of \u201csleep\u201d instruction in the Apache web server. We then performed a comparison of the energy consumption at system-level and at resource-level\u00a0\u2026", "num_citations": "58\n", "authors": ["642"]}
{"title": "A just-in-time architectural knowledge sharing portal\n", "abstract": " In recent years, management of architectural knowledge has become a more prominent theme in software architecture research. Although various specialized tools have been proposed for use in the architecting process, observations show that architects in industry have yet to meet a tool environment that matches their knowledge needs. In order to discover what architectural knowledge needs architects have, we conducted a study in a large organization. In this study we discovered that architects are especially in need for 'just-in-time architectural knowledge'. To fulfill this need we designed and implemented an architectural knowledge sharing portal. Our portal's integrated functionality supports architects in their decision-making process, by providing easy access to the right architectural knowledge at any given point in time.", "num_citations": "56\n", "authors": ["642"]}
{"title": "A frame of reference for SOA migration\n", "abstract": " Migration of legacy systems to service-based systems constitutes a key challenge of service-oriented system engineering, namely rehabilitation of pre-existing enterprise assets while conforming to service engineering principles. Over a decade there has been an increasing interest in the approaches addressing SOA migration. These approaches mainly differ in \u2018what is migrated\u2019 and \u2018how the migration is performed\u2019. Such differences aggravate achieving a general understanding of \u2018what SOA migration entails\u2019. To solve this problem, we conducted a systematic review that extracts main migration categories, called SOA migration families, from the approaches proposed in the research community. Based on the results of the systematic review, we describe eight distinct families along with their characteristics and goals. These families represent a first frame of reference for SOA migration which brings order\u00a0\u2026", "num_citations": "55\n", "authors": ["642"]}
{"title": "Effective tool support for architectural knowledge sharing\n", "abstract": " Knowledge management plays an important role in the software architecting process. Recently, this role has become more apparent by a paradigm shift that views a software architecture as the set of architectural design decisions it embodies. This shift has sparked the discussion in both research and practice on how to best facilitate sharing of so-called architectural knowledge, and how tools can best be employed. In order to design successful tool support for architectural knowledge sharing it is important to take into account what software architecting really entails. To this end, in this paper we define the main characteristics of architecting, based on observations in a large software development organization, and state-of-the-art literature in software architecture. Based on the defined characteristics, we determine how best practices known from knowledge management could be used to improve architectural\u00a0\u2026", "num_citations": "55\n", "authors": ["642"]}
{"title": "Software engineering article types: An analysis of the literature\n", "abstract": " The software engineering (SE) community has recently recognized that the field lacks well-established research paradigms and clear guidance on how to write good research reports. With no comprehensive guide to the different article types in the field, article writing and reviewing heavily depends on the expertise and the understanding of the individual SE actors.In this work, we classify and describe the article types published in SE with an emphasis on what is required for publication in journals and conference proceedings. Theoretically, we consider article types as genres, because we assume that each type of article has a specific function and a particular communicative purpose within the community, which the members of the community can recognize. We draw on written sources available, i.e. the instructions to authors/reviewers of major SE journals, the calls for papers of major SE conferences, and previous\u00a0\u2026", "num_citations": "54\n", "authors": ["642"]}
{"title": "The architect\u2019s mindset\n", "abstract": " Software architecture and software architecture practices become increasingly important for information systems since they enable reasoning on the design of the system. The concept of architectural knowledge, i.e. architectural design decisions and the resulting design, plays a pivotal role in architecture. In order to get the most out of architectural knowledge, we need insight into the ways in which architectural knowledge is used. Currently, we lack this insight. We performed survey-based research in the Netherlands to collect feedback on the importance of architectural knowledge for the daily work of practitioners in architecture. We present our findings using two perspectives: the architectural roles practitioners fulfill and the architecture level practitioners are engaged in. We use these perspectives to construct and reflect on the architect\u2019s mindset on architectural knowledge. This mindset of architects\u00a0\u2026", "num_citations": "53\n", "authors": ["642"]}
{"title": "EAGLE: Effective tool support for sharing architectural knowledge\n", "abstract": " Knowledge management plays an important role in the software architecting process. Recently, this role has become more apparent by a paradigm shift that views a software architecture as the set of architectural design decisions it embodies. This shift has sparked the discussion in both research and practice on how to best facilitate sharing of so-called architectural knowledge, and how tools can best be employed. In order to design successful tool support for architectural knowledge sharing it is important to take into account what software architecting really entails. In this paper, we define the main characteristics of architecting, based on observations in a large software development organization, and state-of-the-art literature in software architecture. Based on the defined characteristics, we determine how best practices known from knowledge management could be used to improve architectural knowledge sharing\u00a0\u2026", "num_citations": "49\n", "authors": ["642"]}
{"title": "Toward an architectural knowledge base for wireless service engineering\n", "abstract": " Wireless services are software-based services that exploit distribution infrastructure embedded in our everyday life as various communication and computing technologies. Service architecture defines concepts and principles to develop and maintain services to obtain the quality issues with minimum cost and faster time-to-market. In order to boost the development of wireless services, more effective means of using existing architectural know-how and artifacts are required. Our contribution is the architectural knowledge base that introduces three cornerstones: the service taxonomy, reference service architecture, and basic services that alt together provide an efficient means of creating added value with wireless services. The service taxonomy assists in identifying the required functional and quality properties of services and the constraints of the underlying technology platforms. The reference architecture realizes\u00a0\u2026", "num_citations": "47\n", "authors": ["642"]}
{"title": "A survey of SOA migration in industry\n", "abstract": " Migration of legacy software to service-based systems is an increasingly important problem area. So far, many SOA migration approaches have been proposed in both industry and academia. There is, however, considerable difference between SOA migration approaches defined in academia and those emerged in industry. This difference pinpoints a potential gap between theory and practice. To bridge this gap, we conducted an industrial interview survey in seven leading SOA solution provider companies. Results have been analyzed with respect to migration activities, the available knowledge assets and the migration process. In addition, industrial approaches have been contrasted with academic ones, hence discussing differences and promising directions for industry-relevant research. As a result we found that, in fact, all companies converge to the same, one, common SOA migration approach. This\u00a0\u2026", "num_citations": "42\n", "authors": ["642"]}
{"title": "Ontology-driven visualization of architectural design decisions\n", "abstract": " There is a gradual increase of interest to use ontologies to capture architectural knowledge, in particular architectural design decisions. While ontologies seem a viable approach to codification, the application of such codified knowledge to everyday practice may be non-trivial. In particular, browsing and searching an architectural knowledge repository for effective reuse can be cumbersome. In this paper, we present how ontology-driven visualization of architectural design decisions can be used to assist software product audits, in which independent auditors perform an assessment of a product's quality. Our visualization combines the simplicity of tabular information representation with the power of on-the-fly ontological inference of decision attributes typically used by auditors. In this way, we are able to support the auditors in effectively reusing their know-how, and to actively assist the core aspects of their decision\u00a0\u2026", "num_citations": "42\n", "authors": ["642"]}
{"title": "Teaching a course on software architecture\n", "abstract": " Software architecture is a relatively new topic in software engineering. It is quickly becoming a central issue, and leading-edge organizations spend a considerable fraction of their development effort on software architecture. Consequently, software architecture is increasingly often the topic of a dedicated course in software engineering curricula. There are two general flavors as for the contents of such a course. One flavor emphasizes the programming-in-the-large aspects of software architecture and concentrates on design and architectural patterns, architecture description languages and the like. The other emphasizes the communication aspects of software architecture to a variety of stakeholders, thereby acknowledging a broader view of software architecture. In this paper we report our experiences with two master-level courses in software architecture that focus on these communication aspects. We show that\u00a0\u2026", "num_citations": "40\n", "authors": ["642"]}
{"title": "A Maturity Model for Green ICT: The Case of the SURF Green ICT Maturity Model.\n", "abstract": " This paper discusses the development and evaluation of a maturity model for Green ICT. We describe how the model was developed with the input of a number of Green ICT experts before it was released to the general public. The model consists of three domains with attributes on Green ICT that encompass both Greening of ICT as well as Greening by ICT. The quality of the model and its accuracy to capture the full scope of Green ICT has been evaluated through an online survey. We evaluated the quality of the model on relevancy of attributes, whether the attributes were well defined and whether the domains were complete. Twenty participants contributed meaningfully. Two attributes were considered to be irrelevant and six new attributes were suggested. With these results the quality of the maturity model can be improved. Our next step is to test the usefulness of the model by seeing how it is used in practice. We hope this paper inspires more work on testing the quality and usefulness of models and frameworks on Green ICT.", "num_citations": "39\n", "authors": ["642"]}
{"title": "Creating environmental awareness in service oriented software engineering\n", "abstract": " Carbon emission of IT is an issue. ICT energy consumption is expected to grow by 73% (instead of the originally targeted 26%) until 2020, and the service sector alone counts for 70% of the European economy. Energy consumption is a combination of what we use, and how we use it. Most green initiatives look at what types of devices do consume energy, and try to optimize their up-time as such. Few initiatives, though, measure how do software systems actually use these devices, with the goal of optimizing consumption of devices and computing resources. Basic research is needed to address this software optimization problem. The proposed approach is to make visible the environmental impact of software services by measuring it. In this way, we will become aware of the amount of energy needed by our software, and hence learn how to target software optimization where it is mostly needed. As a first step\u00a0\u2026", "num_citations": "39\n", "authors": ["642"]}
{"title": "Energy-efficient networking solutions in cloud-based environments: A systematic literature review\n", "abstract": " The energy consumed by data centers hosting cloud services is increasing enormously. This brings the need to reduce energy consumption of different components in data centers. In this work, we focus on energy efficiency of the networking component. However, how different networking solutions impact energy consumption is still an open question. We investigate the state of the art in energy-efficient networking solutions in cloud-based environments. We follow a systematic literature review method to select primary studies. We create a metamodel based on the codes extracted from our primary studies using the Coding analytical method. Our findings show three abstraction levels of the proposed networking solutions to achieve energy efficiency in cloud-based environments: Strategy, Solution, and Technology. We study the historical trends in the investigated solutions and conclude that the emerging and most\u00a0\u2026", "num_citations": "38\n", "authors": ["642"]}
{"title": "Architectural knowledge management practices in agile global software development\n", "abstract": " The management of knowledge, in particular knowledge about the architecture, plays a pivotal role in global software development (GSD). In earlier research, we have defined what architectural knowledge is, and elaborated several practices for sound architectural knowledge management in a distributed setting. In this paper, we report on a large survey performed at an agile global software development organization in which we interviewed 38 employees spread across three development sites. Our aim was to validate our earlier research by determining what practices for architectural knowledge management in GSD are used in practice. The results show that the case study organization emphasizes architectural knowledge management practices that promote decentralization and, as a consequence, personalization (as opposed to centralization viz. codification). We identified one new useful practice: \"peered\u00a0\u2026", "num_citations": "36\n", "authors": ["642"]}
{"title": "On service-oriented architectural concerns and viewpoints\n", "abstract": " Despite the many publications around the innovation and challenges introduced by SOSE and SOA, the `real' differences with traditional software engineering and software architecture are still very fuzzy. To better understand the innovative points (if any), in this work we identified seven fundamental differences by conducting a literature review, linked them to some service relevant aspects and mapped the differences & service aspects on the well-known architecture-related concepts of `architectural concerns' & `architectural viewpoints'. As such, we were able to identify an initial set of requirements for service-oriented viewpoints. If specialized in industrial contexts, we would be able to exemplify innovative points by capturing service relevant aspects. In perspective, this work seems to scale down `innovation' of SOSE and SOA, to `relevance' of service aspects to engineering and architecture.", "num_citations": "29\n", "authors": ["642"]}
{"title": "An architecture for IN-Internet hybrid services\n", "abstract": " The scenario for telecom services is undergoing a rapid change. A new set of communication services is emerging: due to the explosion of the Internet and to the dramatic increase of mobile phone markets, more and more customers are requiring new Internet-based communication services. The ability to merge the ubiquitous telephone service (terminal and personal mobility) and the friendliness (easy-to-use, easy-to-customize) of the Internet is recognized as a major driver to promote new classes of services. Users want to access multiple services over heterogeneous networks and from heterogeneous terminals. The higher flexibility in service offers as well as the possibility of a rapid introduction of new services (typical of Internet & IT worlds) are key factors that give a high competitive advantage to service providers (SPs). This article describes a supporting distributed architecture in terms of functionality and\u00a0\u2026", "num_citations": "29\n", "authors": ["642"]}
{"title": "Towards a conceptual framework for legacy to soa migration\n", "abstract": " Migration of legacy assets to SOA embodies a key challenge of service engineering, the rehabilitation of pre-existing enterprise assets into a service based system. As there is still little conceptual characterization of what the legacy to SOA migration process entails it is difficult to understand, compare and assess different approaches. This paper therefore proposes a conceptual framework embracing a holistic illustration of such a migration process. We describe what such migration process entails and what distinct conceptual elements systematically define the process. Based on the constituting conceptual elements, the framework which is considered as a basis for understanding and assessment of different approaches is proposed. Finaly, the role of our migration framework in positioning and assessing the existing methods, is discussed.", "num_citations": "28\n", "authors": ["642"]}
{"title": "A pragmatic approach for analysis and design of service inventories\n", "abstract": " Service Orientation is a paradigm for exposing business functions as reusable services and enabling business partners to discover those services on demand. Several service-oriented methodologies have been proposed in both academia and industry. Few methodologies, however, do provide concrete yet pragmatic support for developing software that is truly service-oriented, supporting service-specific aspects and challenges. As a consequence, the design of software services that are in-line with service aspects is left up to the prudence of the developers. To fill this gap, this paper proposes a methodology that incorporates essential ingredients of SOA during analysis and design. The methodology focuses service inventories while consciously addressing the perspectives of both service providers and service consumers. By supporting service-oriented reasoning, our methodology results in better\u00a0\u2026", "num_citations": "27\n", "authors": ["642"]}
{"title": "A systematic literature review on energy efficiency in cloud software architectures\n", "abstract": " Cloud-based software architectures introduce more complexity and require new competences for migration, maintenance, and evolution. Although cloud computing is often considered as an energy-efficient technology, the implications of cloud-based software on energy efficiency lack scientific evidence. At the same time, energy efficiency is becoming a crucial requirement for cloud service provisioning, as energy costs significantly contribute to the Total Cost of Ownership (TCO) of a data center. In this paper, we present the results of a systematic literature review that investigates cloud software architectures addressing energy efficiency as a primary concern. The aim is to provide an analysis of the state-of-the-art in the field of energy-efficient software architectures.", "num_citations": "26\n", "authors": ["642"]}
{"title": "Tool support for traceable product evolution\n", "abstract": " In software product families, the full benefit of reuse can only be achieved if traceability of requirements to architecture, components and further down to source code is supported. This requires automated tool support for tracing from the abstract features of the product family to a set of concrete features and source code of family members. We extended a commercial software tool to support top-down as well as bottom-up traceability in product families, from the family feature map all the way down to implementation files. At the code level, both newly developed and commercial-off-the-shelf components are accommodated. The tool has been validated by (bottom-up) filling the tool's reuse base with features, components, documentation files, etc. from six related products in the next generation network service domain, and next deriving a seventh product from this reuse base.", "num_citations": "26\n", "authors": ["642"]}
{"title": "The usefulness of architectural knowledge management practices in GSD\n", "abstract": " Practices for architectural knowledge management (AKM) may alleviate the challenges involved with GSD. We have conducted empirical research at a large Dutch IT service provider to validate a set of practices for architectural knowledge management in GSD and to specifically investigate the relation between the number of sites and the perceived usefulness of these practices. The results show that AKM practices supporting a personalization strategy towards knowledge management are perceived to be more useful than practices that support a codification strategy. Further, the usefulness of AKM practices in general is confirmed. Finally, we observe a peak in the perceived usefulness of AKM practices in projects that evolved to a multi-site situation. This high perceived usefulness denotes a more critical need to plan for AKM practices in advance.", "num_citations": "25\n", "authors": ["642"]}
{"title": "Observations from the recovery of a software product family\n", "abstract": " The problem of managing the evolution of complex and large software systems is well known. Evolution implies the reuse and modification of existing software artifacts, and this means that the related knowledge must be documented and maintained.               This paper focuses on the evolution of software product families, although the same principles apply in other software development environments as well. We describe our experience gained in a case study recovering a family of six software products. We give an overview of the case study, and provide lessons learned, implicit assumptions reconstructed during the case study, and some rules we think are generally applicable. Our experience indicates that organizing architectural knowledge is a difficult task. To properly serve the various uses of this knowledge, it needs to be organized along different dimensions and tools are required. Our experience\u00a0\u2026", "num_citations": "25\n", "authors": ["642"]}
{"title": "Architecture Design Decision Maps for Software Sustainability\n", "abstract": " In software engineering, sustainability can be defined as the \"capacity to endure\" and to \"preserve the function of a system over an extended period of time\". These definitions mainly point towards technical sustainability over time. Sustainability, however, may entail a much broader scope including economic, social and environmental sustainability as well. In spite of the exciting hype around sustainability, we are very much lacking suitable instruments to design software-intensive systems that are sustainable and enable sustainability goals. To fill this gap, we advocate the treatment of sustainability as a software quality property and define a software sustainability assessment method that helps make sustainability-driven design decisions. The method essentially relies on the definition of so-called \"decision maps\", i.e. views aimed at framing the architecture design concerns around the four sustainability dimensions\u00a0\u2026", "num_citations": "24\n", "authors": ["642"]}
{"title": "Aligning economic impact with environmental benefits: A green strategy model\n", "abstract": " To achieve lower energy consumption many green strategies (e.g. virtualize applications and consolidate them on shared server machines, or optimize the usage of the private cloud by opening up to external consumers) have been discussed. In practice, however, the major incentive for a company to go green is reducing costs. While green strategies often focus on technical and environmental issues, they hardly address the economic impact that they may bring. If green strategies do not lead to an explicit (and significant) reduction of costs (hence increase in revenues) they are nice but not part of the business strategy of the company. In this paper we propose a green strategy model that provides decision makers with the information needed to decide on whether to take green strategies and eventually how to align them with their business strategies. This model provides a means to codify green strategies in such a\u00a0\u2026", "num_citations": "24\n", "authors": ["642"]}
{"title": "A systematic literature review on SOA migration\n", "abstract": " When Service Orientation was introduced as the solution for retaining and rehabilitating legacy assets, both researchers and practitioners proposed techniques, methods, and guidelines for SOA migration. With so much hype surrounding SOA, it is not surprising that the concept was interpreted in many different ways, and consequently, different approaches to SOA migration were proposed. Accordingly, soon there was an abundance of methods that were hard to compare and eventually adopt. Against this backdrop, this paper reports on a systematic literature review that was conducted to extract the categories of SOA migration proposed by the research community. We provide the state\u2010of\u2010the\u2010art in SOA migration approaches, and discuss categories of activities carried out and knowledge elements used or produced in those approaches. From such categorization, we derive a reference model, called SOA\u00a0\u2026", "num_citations": "23\n", "authors": ["642"]}
{"title": "Assessing a multi-site development organization for architectural compliance\n", "abstract": " Multi-site development organizations require coordination and communication efforts between different sites to ensure successful distributed development. These efforts need to be guided by a set of principles and statements on the software architecture that must be complied with throughout the organization: architectural rules. It is of paramount importance that multi-site development organizations incorporate measures in the architecting process to secure compliance with these rules throughout the organization. We describe a method to assess the degree to which compliance measures are secured in multi-site development organizations. We share our experience in applying this method in a large development organization in the consumer electronics domain.", "num_citations": "23\n", "authors": ["642"]}
{"title": "Prerequisites for successful architectural knowledge sharing\n", "abstract": " Sharing knowledge pertaining to software architectures becomes increasingly important. If this knowledge is not explicitly stored or communicated, valuable knowledge dissipates. However, stakeholders will only share knowledge with each other if they are motivated to do so, or in other words if the necessary incentives are created. In this paper we identify three incentives for architectural knowledge sharing: the establishment of social ties, more efficient decision making, and knowledge internalization. Next, we discuss our experiences on how architectural knowledge is shared in a large software development organization. Based on these experiences we propose a set of prerequisites that need to be met to foster successful architectural knowledge sharing. The importance of these prerequisites is motivated by demonstrating that they create the identified incentives.", "num_citations": "22\n", "authors": ["642"]}
{"title": "Challenges and opportunities for sustainable software\n", "abstract": " With the increasing role played by software in supporting our society, its sustainability and environmental impact have become major factors in the development and operation of software-intensive systems. Myths and beliefs hide the real truth behind Green IT: IT is energy-inefficient because software is developed to make it so - intentionally or not. But how far are we from being able to control software energy-efficiency? What makes software greener? How can we transform measuring software energy consumption in a general practice? What architectural design decisions will result in more sustainable systems? How can we ensure that new-generation software will be both cloud-ready and environmental-friendly? and How can we make evident the economic and social impact of developing software with 'energy in mind'? These are a few of the challenges ahead for a more sustainable digital society. This talk will\u00a0\u2026", "num_citations": "21\n", "authors": ["642"]}
{"title": "Using wikis to support architectural knowledge management in global software development\n", "abstract": " In the past few years, the software architecture community has shown an increasing interest in architectural knowledge. In Global Software Development (GSD), software engineering practices are performed at geographically separate locations. With this trend, the management of architectural knowledge becomes even more important due to the geographical, temporal, and socio-cultural distance involved with GSD. Practices for architectural knowledge management in global software development may alleviate challenges associated with this distance. In this paper, we identify to what extent these practices may be implemented using wikis. We relate the practices to generic wiki functionalities and conclude that wikis form a good mechanism to implement a hybrid strategy for managing architectural knowledge in global software development and that a substantial part of the AKM practices may be implemented using\u00a0\u2026", "num_citations": "20\n", "authors": ["642"]}
{"title": "Design decisions and design rationale in software architecture\n", "abstract": " Editorial: Design decisions and design rationale in software architecture: Journal of Systems and Software: Vol 82, No 8 ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Journal of Systems and Software Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsJournal of Systems and SoftwareVol. , No. Editorial: Design decisions and design rationale in software architecture article Editorial: Design decisions and design rationale in software architecture Share on Authors: Muhammad Ali Babar profile image Muhammad Ali Babar Lero, University of Limerick, Limerick, Ireland Lero, University of Limerick, Limerick, Ireland View Profile , P. Lago profile \u2026", "num_citations": "20\n", "authors": ["642"]}
{"title": "TNF\u2010\u03b1 has both stimulatory and inhibitory effects on mouse monocyte\u2010derived osteoclastogenesis\n", "abstract": " Phenotypically different osteoclasts may be generated from different subsets of precursors. To what extent the formation of these osteoclasts is influenced or mediated by the inflammatory cytokine TNF\u2010\u03b1, is unknown and was investigated in this study. The osteoclast precursors early blasts (CD31hiLy\u20106C\u2212), myeloid blasts (CD31+Ly\u20106C+), and monocytes (CD31\u2212Ly\u20106Chi) were sorted from mouse bone marrow using flow cytometry and cultured with M\u2010CSF and RANKL, with or without TNF\u2010\u03b1. Surprisingly, TNF\u2010\u03b1 prevented the differentiation of TRAcP+ osteoclasts generated from monocytes on plastic; an effect not seen with early blasts and myeloid blasts. This inhibitory effect could not be prevented by other cytokines such as IL\u20101\u03b2 or IL\u20106. When monocytes were pre\u2010cultured with M\u2010CSF and RANKL followed by exposure to TNF\u2010\u03b1, a stimulatory effect was found. TNF\u2010\u03b1 also stimulated monocytes\u00a0\u2026", "num_citations": "19\n", "authors": ["642"]}
{"title": "Leveraging\" energy efficiency to software users\" summary of the second GREENS workshop, at ICSE 2013\n", "abstract": " The Focus of the GREENS workshop is the engineering of green and sustainable software. Our goal is to bring together academics and practitioners to discuss research initiatives, challenges, ideas, and results in this critically important area of the software industry. This second edition of the workshop was held at ICSE 2013 in San Francisco, CA, USA. The theme of GREENS 2013 is Leveraging \"Energy Efficiency to Software Users.\" It featured a keynote talk, ten research papers and three breakout sessions that discussed topics that ranged from qualities vs. energy efficiency and environmental sustainability, to green models and views for (software) products/process and to stakeholders, relevant metrics and measurements. In this report, we present the themes of the workshop, and summarize the results of the discussions held in the breakout sessions, as well as the identified research challenges for future\u00a0\u2026", "num_citations": "19\n", "authors": ["642"]}
{"title": "Notes on Design Reasoning Techniques\n", "abstract": " Notes on Design Reasoning Techniques (2010) | www.narcis.nl KNAW KNAW Narcis Back to search results VU University Amsterdam Publication Notes on Design Reasoning Techniques (2010) Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title Notes on Design Reasoning Techniques Author Tang, A.; Lago, P. Publisher Information Management and Software Engineering; Network Institute; Software & Services; Information Management & Software Engineering Date issued 2010 Access Restricted Access Language English Type Report Publisher Swinburne University of Technology Publication https://research.vu.nl/en/publications/c1b52088-1505-42e5-ad... Persistent Identifiers NBN urn:nbn:nl:ui:31-1871/52438 Handle 1871/52438 Metadata XML Source VU University Amsterdam Go to Website Navigation: Home about narcis login Nederlands \u2026", "num_citations": "17\n", "authors": ["642"]}
{"title": "Applying software process modeling and improvement in academic setting\n", "abstract": " This work concerns the software process of a software engineering course project work. The quality manual contains a general process model, written in a formal software process modeling language that describes activities, tools, products, responsibilities, and measures. The quality manual serves as a basis for obtaining project specific plans, and for communicating the process to students, colleagues, and customers. The formal process model is the basis for analyzing and improving the process over the years, thus improving the quality of the provided education. The analysis of a given project run has revealed some problems and errors in the original model. This list of problems has been used as an action list to design a new process model. The new model will be exploited for the next years project runs.", "num_citations": "17\n", "authors": ["642"]}
{"title": "Feminine Expertise in Architecting Teams\n", "abstract": " A well-known adage is \"diversity brings innovation.\" Diversity can be in culture, thinking, discipline, gender, and many more aspects. The result is the same: the chances for creating innovation in a given context increase when diversity is involved. To some extent, this principle should also hold for gender diversity in software teams. Achieving gender diversity in IT-related fields has been a goal for decades, but still, too few women choose such a career. But what skills or traits assigned to the feminine role bring concrete advantages to software teams? Researchers addressed this important and, strangely enough, mostly unexplored problem, specifically for software-architecting teams. They interviewed male and female software architects at four major IT companies in the Netherlands and then interviewed a panel of experts. They identified seven feminine expertise \"flavors\"--traits and skills linked to the feminine role\u00a0\u2026", "num_citations": "16\n", "authors": ["642"]}
{"title": "Self-Adaptation in Mobile Apps: a Systematic Literature Study\n", "abstract": " With their increase, smartphones have become more integral components of our lives but due to their mobile nature it is not possible to develop a mobile application the same way another software system would be built. In order to always provide the full service, a mobile application needs to be able to detect and deal with changes of context it may be presented with. A suitable method to achieve this goal is self-adaptation. However, as of today it is difficult to have a clear view of existing research on self-adaptation in the context of mobile applications. In this paper, we apply the systematic literature review methodology on selected peer-reviewed papers focusing on self-adaptability in the context of mobile applications. Out of 607 potentially relevant studies, we select 44 primary studies via carefully-defined exclusion and inclusion criteria. We use known modelling dimensions for self-adaptive software systems as\u00a0\u2026", "num_citations": "15\n", "authors": ["642"]}
{"title": "A template for SOA design decision making in an educational setting\n", "abstract": " An effective software design should ensure that all the quality requirements of a system of interest are supported. As the architecture of a software system can be seen as a set of architectural design decisions (ADDs), the identification of design issues and the choice of design alternatives heavily impact the quality of software systems. This is especially challenging in service orientation for which students need to change their mindset from system design to service-oriented design. In this paper, we present a template driven approach for documenting quality-driven ADDs in an educational setting. We next report on our experience with the usage of the template in a service-oriented software design Master course given over the past three years. We found that the template not only offers a framework guiding the students in their design but also encourages them to make sound ADDs, which leads to a service-oriented\u00a0\u2026", "num_citations": "15\n", "authors": ["642"]}
{"title": "Understanding SOA migration using a conceptual framework\n", "abstract": " Migration of legacy assets to SOA embodies a key software engineering challenge. Over a decade there has been an increasing interest in the approaches addressing SOA migration. These approaches mainly differ inwhat is migrated'andhow the migration is performed'. Such differences aggravate achieving a general understanding ofwhat SOA migration entails'. We describe what such migration process entails and what distinct conceptual elements systematically define the process. Based on the comprising conceptual elements the framework which is considered as a basis for understanding and assessment of different approaches is proposed. Further, the role of the migration framework in positioning and assessing the existing methods, is discussed. Finally, the procedure for positioning and mapping of migration approaches on the framework is explained using two example migration processes.", "num_citations": "15\n", "authors": ["642"]}
{"title": "The service greenery-integrating sustainability in service oriented software\n", "abstract": " Carbon emission of IT is an issue. ICT energy consumption is expected to grow by 73%(instead of the originally targeted 26%) until 2020, and the service sector alone counts for 70% of the European economy. Energy consumption is a combination of what we use, and how we use it. Most green initiatives look at what types of devices do consume energy, and try to optimize their up-time as such. Few initiatives, though, measure how do software systems actually use these devices, with the goal of optimize consumption of devices and computing resources. Basic research is needed to address this software optimization problem. The proposed approach is to make visible the environmental impact of software services by measuring it. In this way, we will become aware of the amount of energy needed by our software, and hence target software optimization where mostly needed. In this paper we present our approach to service-based applications, and identify open research directions.", "num_citations": "14\n", "authors": ["642"]}
{"title": "A policy-based approach to personalization of communication over converged networks\n", "abstract": " In this study, \"personalization\" represents the possibility for a user to filter incoming communication requests, and to process them according to personal preferences and lifestyle. This paper describes a policy-based approach to personalization. The basic idea is to use a generalized user-oriented policy concept, at a higher level of abstraction than policies in networking. User-oriented policies define how communication should be handled by software architecture, according to a user-oriented perception of services, and abstracting from heterogeneity like difference in networks, communication protocols, applications, and devices/terminals. Due to the high-level policy-based approach we used, we may apply personalization also to advanced scenarios like services over converged networks: in our approach, policies represent personalization in an abstract way, and network and service technologies are\u00a0\u2026", "num_citations": "14\n", "authors": ["642"]}
{"title": "TINA service architecture: from specification to implementation\n", "abstract": " The VITAL project has produced an implementation of the TINA (Telecommunications Information Networking Architecture) service architecture (SA), based on the SA 4.0 deliverable released by the core team (CT) in October 1996. In order to design a system based on these high level specifications, we were obliged to fill in all missing details required to actually come to an implemented system. We report on the most important design decisions we have taken in this process. The major differences between the TINA Retailer reference point specification, as defined at the time of writing this paper, and VITAL's implementation are indicated. The deployment details of the system on a distributed processing environment (DPE) platform are also detailed. Furthermore, VITAL also introduced service-specific behaviour for a number of services within the context of a teletraining application. The adopted approach for\u00a0\u2026", "num_citations": "14\n", "authors": ["642"]}
{"title": "Sustainability in Software Engineering\n", "abstract": " The intersection between software engineering research and the problems related to sustainability and green IT has been the subject of increasing attention. In spite of that, we observe that sustainability is still not clearly defined, or understood, in the field of software engineering. This lack of clarity leads to confusion about e.g. what is relevant to measure or the research implications over time or space. This paper provides an overview of how the research so far has defined sustainability, and how this definition has been used to guide which research areas. To this end, we carried out a systematic mapping study for selecting, classifying and analyzing relevant publications. In this study, we investigate which knowledge areas and which time scope of sustainability effects are mostly targeted in scientific research. Our analysis shows research trends and discusses gaps to be filled.", "num_citations": "13\n", "authors": ["642"]}
{"title": "Reality check for software engineering for sustainability\u2014pragmatism required\n", "abstract": " Welcome to this special issue on software engineering for sustainability. Note that software engineering for sustainability has a different emphasis than sustainability in software engineering. Naturally, the latter has a mainly technical focus. The first goes beyond it by looking at the purpose and wider context of a software system, for example, in how it can support social and environmental concerns that help humanity move towards a more sustainable lifestyle and help sustaining our planet and societies. This special issue takes this broad perspective. Before introducing the articles in this special issue, the following takes a look at why sustainability matters and why software engineering for sustainability has a large potential for impact. The general importance of sustainability as an objective for developing our future has become apparent via the Millennium Development Goals that were targeting 2015. 1 \u201cAt the\u00a0\u2026", "num_citations": "13\n", "authors": ["642"]}
{"title": "Transparency and Contracts: Continuous Integration and Delivery in the Automotive Ecosystem\n", "abstract": " Most of the innovation in automotive is nowadays coming from electronics and software. The pressure of reducing time to market and increasing flexibility while keeping quality are leading motivations for these companies to embrace system-wide Continuous Integration and Delivery (CI&D), which in the scope of complex automotive value-chains, implies inter-organizational CI&D. In this paper, we investigate the challenges and impediments posed by inter-organizational CI&D in the automotive domain, i.e. continuous software development that involves agile interaction between an OEM (the car manufacturer) and its software suppliers. In particular, we focus on legal contracts that regulate the agreements between these companies and transparency intended as the degree/level of information that is shared between the various companies in the value-chain. The main findings of this study show that (i) inter\u00a0\u2026", "num_citations": "12\n", "authors": ["642"]}
{"title": "An Extensible Approach for Taming the Challenges of JavaScript Dead Code Elimination\n", "abstract": " JavaScript is becoming the de-facto programming language of the Web. Large-scale web applications (web apps) written in Javascript are commonplace nowadays, with big technology players (e.g., Google, Facebook) using it in their core flagship products. Today, it is common practice to reuse existing JavaScript code, usually in the form of third-party libraries and frameworks. If on one side this practice helps in speeding up development time, on the other side it comes with the risk of bringing dead code, i.e., JavaScript code which is never executed, but still downloaded from the network and parsed in the browser. This overhead can negatively impact the overall performance and energy consumption of the web app. In this paper we present Lacuna, an approach for JavaScript dead code elimination, where existing JavaScript analysis techniques are applied in combination. The proposed approach supports both\u00a0\u2026", "num_citations": "12\n", "authors": ["642"]}
{"title": "Structuring software architecture project memories\n", "abstract": " In order to prevent knowledge dispersion in the software architecting process, it is crucial to deploy sound mechanisms to manage and share vital architectural knowledge. Continuous organizational learning is an important vehicle to address this issue. We present a model that provides a generic structure for software architecture project memories. Key concepts in this model are design decisions and their rationale. This focus ensures that not only the software artifacts themselves are subject to an organization's knowledge management efforts, but also the technical, organizational, political and economic influences on these artifacts. In our current work, we empirically validate the model presented in this paper. Case studies are being performed in which we forward engineer (capture) and reverse engineer (recover) architectural knowledge by means of the presented model.", "num_citations": "12\n", "authors": ["642"]}
{"title": "Green ICT assessment for organisations\n", "abstract": " This study shows how a maturity model on Green ICT can help organisations become more environmentally sustainable in a structured and efficient manner. For this we have used the SURF Green ICT Maturity Model and facilitated the use of this model in four organisations. These organisations participated in a maturity scan, an evaluation session to discuss the results of the scan and a questionnaire on the use of the model. The results show that the model delivers specific suggestions for improvement both on reducing the environmental footprint of ICT and on using ICT as a green solution for business processes. Individual participants reported an increase in awareness on what Green ICT can do. We also looked at whether organisations were ready to use Green ICT and identified potential bottlenecks for further adoption and it was possible to identify such bottlenecks using the results of the maturity scan.", "num_citations": "11\n", "authors": ["642"]}
{"title": "Energy efficiency of orm approaches: an empirical evaluation\n", "abstract": " Context. Object-Relational Mapping (ORM) frameworks are widely used in business software applications to interact with database systems. Even if ORMs introduce several benefits when compared to a plain SQL approach, these techniques have known disadvantages.Goal. In this paper, we present an empirical study that evaluates the energy efficiency of three different approaches to programmatically access SQL databases in PHP applications. The selected approaches are: plain SQL queries in the source code, and two specialized frameworks, Propel and TinyQueries.Method. We performed an empirical experiment in a controlled environment. We selected three factors for our experimentation: the different ORM approaches, the type of query (Create, Read, Update, Delete) and the size of database tables. Our response variables were execution time and energy consumption.Results. As expected, pure SQL\u00a0\u2026", "num_citations": "11\n", "authors": ["642"]}
{"title": "Architectural patterns and quality attributes interaction\n", "abstract": " Architectural patterns and styles represent common solutions to recurrent problems. They encompass architectural knowledge about how to achieve holistic system quality. The relation between patterns (or styles) and quality attributes has been regularly addressed in the literature. However, there is a lack of a consolidated and systematically built reference capturing this relation and eventually making it available for reuse in the form of patterns-quality attributes knowledge. If captured, this knowledge can be used as an architectural decision framework where solutions (patterns) are strongly intertwined with quality (attributes). Such a framework should also contemplate variants and combinations of patterns. In order to create the framework, we first proposed a lightweight theory on the interaction of patterns/styles and quality attributes. That framework has been built by starting from a key study on the interaction\u00a0\u2026", "num_citations": "11\n", "authors": ["642"]}
{"title": "Microservices\n", "abstract": " If the reader had ever looked in detail at the mainstream languages for development of server-side applications, he will have noticed that they provide abstractions to break down the complexity of programs into modules, but they are designed for the creation of a single executable artifact. This artifact in literature is often called a monolith. The modularization abstractions of these languages rely on sharing resources such as memory, databases, and files within the same machine. The modules of a monolith depend on these very shared resources and cannot be therefore independently executed.The consequence is that monoliths are difficult to use in distributed systems without the addition of specific frameworks or ad hoc solutions. The reader will remember the popularity of, for example, RMI or CORBA. However, even these solutions suffer from the general issues affecting monoliths, such as difficult maintainability\u00a0\u2026", "num_citations": "10\n", "authors": ["642"]}
{"title": "A systematic literature review of the factors of influence on the environmental impact of ICT\n", "abstract": " Context: Many publications have described, measured, tracked or assessed Information and Communication Technology (ICT) activities that impact the environment. A complete conceptual view of the environmental impact of ICT can be described in three orders of effect: Direct, indirect and systemic. Objective: The goal of this study is to find out how the existing literature contributes towards our understanding of the environmental impact of ICT. We approach this question by identifying factors that can be of influence on the environmental impact and map these factors onto a conceptual framework of Green ICT. Method: We used a systematic literature review to collect factors of influence regarding the environmental impact of ICT. Results: From the data we collected and the analyses made, we created a taxonomy, and report on the frequencies of the factors of influence in the primary studies as well as gaps and additions compared to the conceptual framework. We found five main classes of influence that can form a continuous cycle, but noted that the research field is strongly focused on the direct impact of ICT. Conclusion: Our study contributes towards a better understanding of the environmental impact of ICT by framing factors of influence in a conceptual framework. The taxonomy we create and the analysis of the studies could be helpful in defining a research agenda, to further enable the full potential of Green ICT. In addition, the taxonomy can be used as a starting point for a practical tool, for organizations that wish to apply Green ICT to its full extent. View Full-Text", "num_citations": "10\n", "authors": ["642"]}
{"title": "Undesigning the Internet: An exploratory study of reducing everyday Internet connectivity\n", "abstract": " Internet connectivity is seamlessly integrated into many of our everyday habits and activities. Despite this, previous research has highlighted that our rather excessive Internet use is not sustainable or even always socially beneficial. In this paper, we carried out an exploratory study on how Internet disconnection affects our everyday lives and whether such disconnection is even possible in today\u2019s society. Through daily surveys, we captured what Internet use means for ten participants and how this varies when they are asked to disconnect by default, and re-connect only when their Internet use is deemed as necessary. From our study, we found that our participants could disconnect from the Internet for certain activities (particularly leisure focused), yet they developed adaptations in their lives to address the necessity of their Internet use. We elicit these adaptations into five themes that encompass how the participants did, or did not, use the Internet based on their necessities. Drawing on these five themes, we conclude with ways in which our study can inspire future research surrounding: Internet infrastructure limits; the promotion of slow values; Internet non-use; and the undesign of Internet services.", "num_citations": "10\n", "authors": ["642"]}
{"title": "A user perspective on energy profiling tools in large scale computing environments\n", "abstract": " The growth of power consumption in ICT infrastructures emphasizes the importance of monitoring their usage and finding available room for improvement. Users can choose among several existing tools to determine the energy profile of a running application in order to provide more sustainable software. We conducted a field study in the SURFsara data center and we experimented with the tools available, assessing them in light of their informative power. We derived some recommendations for ICT users and infrastructure operators that highlight the relation between the intended use of the profile and the easiness of running a specific tool. We categorize users in two types: the generic user, who is interested in summary statistical results on power measurements and the software developer that intends to delve in the code details in order to reprogram the application more efficiently. We concluded that SLURM and\u00a0\u2026", "num_citations": "10\n", "authors": ["642"]}
{"title": "Energy Efficiency in Cloud Software Architectures\n", "abstract": " Cloud-based software is often considered as providing a greener, more energy-efficient solution. At the same time, it introduces more complexity and demands for new investments in cloud services, technologies, and competencies for migration, maintenance, and evolution of the underlying software architectures. To understand better the implications of cloud software architectures on energy efficiency, in this paper we present the preliminary results of a systematic literature review that investigates what kind of software architectures for cloud service provisioning allow to achieve energy-efficient solutions.", "num_citations": "10\n", "authors": ["642"]}
{"title": "A lean and mean strategy for migration to services\n", "abstract": " In industry, enterprises have many software systems to be modernized and made available as added-value services. Identification of migration strategies and practices for service engineering is critical for successful legacy migration, and SOA adoption in industrial setting. This paper presents the results of an interview survey on the migration strategies in industry. The purpose of this paper is twofold: 1) to discover the migration strategies that industrial practice adopts 2) to identify the benefits of making such strategies explicit. Results of the survey have been analyzed in terms of migration activities and the available knowledge assets. As a result, we generalize the practice of industrial migration into a Lean & Mean SOA migration strategy. In addition, the uses of the strategy pinpoint promising industry-relevant research directions.", "num_citations": "10\n", "authors": ["642"]}
{"title": "An extensible data-driven approach for evaluating the quality of microservice architectures\n", "abstract": " Microservice architecture (MSA) is defined as an architectural style where the software system is developed as a suite of small services, each running in its own process and communicating with lightweight mechanisms. The benefits of MSA are many, ranging from an increase in development productivity, to better business-IT alignment, agility, scalability, and technology flexibility. The high degree of microservices distribution and decoupling is, however, imposing a number of relevant challenges from an architectural perspective. In this context, measuring, controlling, and keeping a satisfactory level of quality of the system architecture is of paramount importance.", "num_citations": "9\n", "authors": ["642"]}
{"title": "A viewpoint for dealing with change in migration to services\n", "abstract": " Although enterprises perceive the importance of change, practitioners often report that dealing with changes is still a challenge. One way of addressing change is to guide the decision making of architects using a viewpoint. This paper presents a change viewpoint that frames the concerns of architects related to change. In an attempt to better understand what the architects' concerns are and the kind of support they need for dealing with change, we have conducted a case study in the Dutch Electronic Health Record system. Based on the results of this case study, the change viewpoint, aiming at guiding the architects in their reasoning, has been defined and discussed.", "num_citations": "9\n", "authors": ["642"]}
{"title": "Establishing and managing knowledge sharing networks\n", "abstract": " This chapter gives an overview of the approaches supporting the establishment and the management of social networks aimed at knowledge sharing. We identify two approaches. The first approach is made of networks driven by technologies and potentially providing support for architecture knowledge management, like grid computing and peer-to-peer technologies. These were initially meant for implementing very specific and low level services; nowadays they cover broader spectra like knowledge management in a distributed setting and knowledge grids. The second approach is made of networks autonomously created from already existing social communities. These are further enabled by Web 2.0 technologies and services.             The chapter describes the approaches and their inter-relations, and it highlights the needs for architecture knowledge management they can potentially support. An overview\u00a0\u2026", "num_citations": "9\n", "authors": ["642"]}
{"title": "A TINA-based solution for dynamic VPN Provisioning on heterogeneous Networks\n", "abstract": " The objective of this work is to support dynamic (ie on demand) VPN provisioning. To this aim, this paper presents an information model describing Virtual Private Networks (VPNs) at a high level of abstraction. The information model is based on COPS (Common Open Policy Service [1]) and TINA concepts.", "num_citations": "9\n", "authors": ["642"]}
{"title": "TINA as a virtual market place for telecommunication and information services: the VITAL experiment\n", "abstract": " The VITAL (Validation of Integrated Telecommunication Architectures for the Long-Term) project has defined, implemented and demonstrated an open distributed telecommunication architecture (ODTA) for deploying, managing and using a set of heterogeneous multimedia, multi-party, and mobility services. The architecture was based on the latest specifications released by TINA-C. The architecture was challenged in a set of trials by means of a heterogeneous set of applications. Some of the applications were developed within the project from scratch, while some others focused on integrating commercially available applications. The applications were selected in such a way as to assure full coverage of the architecture implementation and reflect a realistic use of it. The VITAL experience of refining and implementing TINA specifications and challenging the resulting platform by a heterogeneous set of services has\u00a0\u2026", "num_citations": "9\n", "authors": ["642"]}
{"title": "ATDx: Building an Architectural Technical Debt Index.\n", "abstract": " Architectural technical debt (ATD) in software-intensive systems refers to the architecture design decisions which work as expedient in the short term, but later negatively impact system evolvability and maintainability. Over the years numerous approaches have been proposed to detect particular types of ATD at a refined level of granularity via source code analysis. Nevertheless, how to gain an encompassing overview of the ATD present in a software-intensive system is still an open question. In this study, we present a multi-step approach designed to build an ATD index (ATDx), which provides insights into a set of ATD dimensions building upon existing architectural rules by leveraging statistical analysis. The ATDx approach can be adopted by researchers and practitioners alike in order to gain a better understanding of the nature of the ATD present in software-intensive systems, and provides a systematic framework to implement concrete instances of ATDx according to specific project and organizational needs.", "num_citations": "8\n", "authors": ["642"]}
{"title": "A long way to quality-driven pattern-based architecting\n", "abstract": " The relation between architectural patterns (or styles) and quality attributes has been widely addressed in the literature. However, the knowledge is fragmented over a wide range of heterogeneous studies. Our aim is to build a systematic body of knowledge to support architectural decision-making and design. If available, this knowledge helps architects in addressing quality requirements consciously and more explicitly, i.e. in quality-driven pattern-based design. In order to build that body of knowledge we carried out a systematic literature review. We identified 99 primary studies for the analysis. The resulting data shows a wide spectrum of approaches encompassing patterns and quality attributes. In this study we (1a) present in which way patterns and quality attributes interact and (1b) provide quantitative data on the frequency of appearance for both patterns and quality attributes; (2) give an overview of\u00a0\u2026", "num_citations": "8\n", "authors": ["642"]}
{"title": "The Green Practitioner: A Decision-Making Tool for Green ICT\n", "abstract": " The environmental impact of ICT represents an increasing concern for modern society. Despite that, we still witness a lack of awareness from the ICT industry regarding their carbon footprint. In particular, practitioners lack knowledge and tools to perform informed decision-making in the area of Green ICT. Moreover, best practices for Green ICT are usually conceived and applied in-house. This prevents them from being generalized and shared with the community. In this paper, we present a web-based tool that tackles both needs: on one hand, the tool enables practitioners (ie agents) to browse a number of Green ICT solutions and calculate their estimated impact if applied to their organization, through customized parameters. On the other hand, the tool also provides a creation interface for contributors who want to generalize and share their own Green ICT practices. In addition, we foresee that the data generated by the usage of the tool will provide useful insights and trends regarding the adoption of Green ICT and its effectiveness on reducing CO2 emissions.", "num_citations": "8\n", "authors": ["642"]}
{"title": "A lean and mean strategy: a data migration industrial study\n", "abstract": " Many companies have legacy assets to be integrated or modernized. Like today's software developments, migration projects are faced with steadily increasing demands for efficiency: migration has to be carried out faster, better, and cheaper. At the same time, migration complexity increases, and migration projects remain challenging despite the companies' extensive experience. To cope with such efficiency demands, companies need a well\u2010defined migration strategy. In previous work, we have defined such a migration strategy called lean and mean strategy. In this paper, following technical action research, we apply our migration strategy, and evaluate it, in two large industrial case studies in the field of data migration. The use of the strategy in our case studies reveals the benefits of lean and mean strategy for meeting the efficiency demands. Copyright \u00a9 2013 John Wiley & Sons, Ltd.", "num_citations": "8\n", "authors": ["642"]}
{"title": "A taxonomy of service engineering stakeholder types\n", "abstract": " The support of stakeholders is critical to the success of any project, and is equally important in SOA-related projects. Traditional software development methodologies no longer meet the requirements for developing service-based applications, or SBAs, due to the shift away from monolithic application development to service provision and composition. This shift introduces more types of stakeholders, each of which can take multiple roles within the lifecycle of the SBA, and who have an interest in or are influenced by the service-oriented software process.               To understand these stakeholder types and roles, this paper presents an initial set of stakeholder types and roles solicited from within the EC\u2019s Network of Excellence in Software Services and Systems (S-Cube). By describing these stakeholder types in the context of the S-Cube service engineering lifecycle, we demonstrate the lifecycle phases each\u00a0\u2026", "num_citations": "8\n", "authors": ["642"]}
{"title": "Guiding the service engineering process: the importance of service aspects\n", "abstract": " Service-oriented System engineering (SOSE) and traditional software engineering mainly differ for their focus and aims. These differences are reflected by a number of aspects peculiar to SOSE (service aspects). In this paper we specifically discuss three service aspects: the relevance of cross-organizational collaboration, increased importance of the identification of stakeholders, and the need for increased effort at run-/change time. We argue that SOSE methodologies provide better guidance on their application when service aspects are emphasized in associated process models. By highlighting the three service aspects in a process model of the methodology defined in a large European project, we show specifically how each aspect provides guidance for engineering service-oriented systems in practice.", "num_citations": "8\n", "authors": ["642"]}
{"title": "SOA process decisions: new challenges in architectural knowledge modeling\n", "abstract": " Architectural design decisions are commonly agreed as one of the main elements that constitute architectural knowledge. To avoid knowledge vaporization, architectural decisions and their rationale need to be documented in a systematic manner. Various works have been done on representing architectural knowledge. Process decisions are one type of design decisions that existing models have paid little attention to. In this paper, we specifically address process decisions in the SOA domain. In doing so, we challenge architectural knowledge representations by mapping two SOA process decisions against a core model of architectural knowledge. The result suggests that existing models need to be extended in order to model SOA process decisions.", "num_citations": "8\n", "authors": ["642"]}
{"title": "The WISE approach to architect wireless services\n", "abstract": " The Internet is quickly evolving towards the wireless Internet that will be based upon wirelines and devices from the traditional Internet, and will reuse some of its techniques and protocols. However, the wireless Internet will not be a simple add-on to the wireline Internet. From the technical point of view, new challenging problems arise from the handling of mobility, handsets with reduced screens and varying bandwidth. As a result, developing and operating new mobile services will be a challenging software engineering problem. The WISE (Wireless Internet Service Engineering) Project aims at producing integrated methods and tools to engineer services on the wireless Internet. In particular, this paper introduces the WISE approach to service engineering, describes how it is applied to a real world Pilot service and reports initial feedback from project partners when applying the approach.", "num_citations": "8\n", "authors": ["642"]}
{"title": "Rendering distributed systems in UML\n", "abstract": " This chapter is about the use of UML in the design of distributed systems. We have been using UML in the context of both international and local projects, and we continuously face the need for additional constructs that are especially conceived for distributed software components in general, and specifically for software running on middleware such as CORBA. In particular, it is our opinion that various UML diagrams would need some extensions (or customizations). Also we defined a development methodology supporting UML and a set of conventions that help us in overcoming such needs. Nevertheless, they contribute just to software documentation and communication, and do not provide any help in the low-level design phase as well as in the generation of code for the subsequent implementation phase. The chapter is intended to discuss our requirements and possible solutions.", "num_citations": "8\n", "authors": ["642"]}
{"title": "Ubiquitous communication over IN and Internet\n", "abstract": " CiNii \u8ad6\u6587 - Ubiquitous communication over IN and internet CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831 \u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c \u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 Ubiquitous communication over IN and internet ANDREETTO A. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 ANDREETTO A. \u53ce\u9332 \u520a\u884c\u7269 Proc. ICIN2000 Proc. ICIN2000, 35-40, 2000 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 IP\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u6d3b\u7528\u3057\u305f\u5206\u6563\u578b\u97f3\u58f0\u4f1a\u8b70\u901a\u8a71\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u624b\u6cd5 \u5c71\u7530 \u79c0\u662d , \u5c0f\u7530 \u7a14\u5468 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1 \u5b66\u4f1a\u8ad6\u6587\u8a8c. D-1, \u60c5\u5831\u30fb\u30b7\u30b9\u30c6\u30e0 1-\u60c5\u5831\u51e6\u7406 00084(00006), 809-818, 2001-06-01 \u53c2\u8003\u6587\u732e15\u4ef6 \u88ab\u5f15\u7528\u6587\u732e3\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) 20000105615 \u8cc7\u6599\u7a2e\u5225 \u4f1a\u8b70\u8cc7\u6599 \u30c7\u30fc\u30bf\u63d0\u4f9b\u5143 CJP\u5f15\u7528 \u66f8\u304d\u51fa\u3057 RefWorks\u306b\u66f8\u304d\u51fa\u3057 EndNote\u306b\u66f8\u304d\u51fa\u3057 Mendeley\u306b\u66f8\u304d\u51fa\u3057 Refer/BiblX\u2026", "num_citations": "8\n", "authors": ["642"]}
{"title": "How project-based courses face the challenge of educating software engineers\n", "abstract": " One way of teaching software engineering is to organize a course around a project similar to a real industrial project. This paper surveys some educational projects that have been presented in the literature. Some projects rely on a customer from the industrial world, on industrial CASE tools, on industrial process models, or on a combination of these. The presented survey is limited because of the number of the reported projects and the quantity and accuracy of information surveyed by the literature. To solve this problem, we propose a questionnaire that provides a framework for educational project categorization and study.", "num_citations": "8\n", "authors": ["642"]}
{"title": "Green ICT adoption using a maturity model\n", "abstract": " The field green ICT focuses on the greening of ICT and using ICT to optimise the energy footprint of the ICT-supported processes. For organisations, applying green ICT in the broadest sense presents them with challenges. In this paper we explore what factors are influencing the adoption of green ICT. We follow three organisations that used a green ICT tool, the SURF Green ICT Maturity Model, to identify such factors. Tools like the maturity model help organisations identify the what and how. We found other factors, such as strategic alignment, culture and leadership, determine the why. As ICT is a general purpose technology, it potentially affects all processes in an organisation. To have a greening impact, the main challenge for green ICT is to take a systemic approach and involve all (relevant) parties. ICT departments often position themselves as support (followers, not leaders); this proves to be a big hurdle in the adoption of green ICT. View Full-Text", "num_citations": "7\n", "authors": ["642"]}
{"title": "A decision-making model for adopting green ICT strategies\n", "abstract": " The interest of organisations in becoming more environmentally sustainable by adopting green ICT solution is constantly growing. More and more initiatives have been proposed on energy efficiency computing, ranging from hardware to software solutions [10]. Accordingly, energy efficiency has become an important issue for industry as energy consumption of ICT systems grows and related energy footprint into realise important financial savings while decreasing the environmental impact of their systems\u2014in terms of, for example, greenhouse gas emissions, e-waste and heat generation [9].", "num_citations": "7\n", "authors": ["642"]}
{"title": "A Master Program on Engineering Energy-Aware Software.\n", "abstract": " Software-intensive systems support most if not all aspects of modern society and in all industrial sectors. Because of software\u2019pervasiveness and crucial role, its energy consumption and impact on sustainability cannot be neglected anymore. As computing resources are necessary to run software, and as software runs more and more globally (eg in data centers and by cloud providers), time has come to engineer energy-aware software. This means educating current professionals and future generations with the appropriate skills and competencies. This paper describes the design of our program in \u201cSoftware Engineering and Green IT\u201d within our Computer Science curriculum and extending our Master Track in Software Engineering. We also introduce four types of modules that we defined to design our program, and for each type discuss the underlying rationale, learning objectives, risks and related mitigations, with the idea to offer them as building blocks for other educators.", "num_citations": "7\n", "authors": ["642"]}
{"title": "Designing a multi-disciplinary software engineering project\n", "abstract": " Software engineering courses often include some form of project, aimed at bridging the theory-practice gap. These projects tend to emphasize technical topics. Because software engineering has an important organizational and social dimension as well, and because software engineering courses may be taken by non-CS majors too, there is every reason to also include these non-technical issues in the software project. In this paper we discuss how we designed a multi-disciplinary software engineering project course that pays attention to non-technical issues. We report about our experience in four editions of the same project, and discuss lessons learned. Our general conclusion is that software engineering projects need to have specific characteristics to attract a multi-disciplinary student population.", "num_citations": "7\n", "authors": ["642"]}
{"title": "GSEEM: a European Master Programme on Global Software Engineering\n", "abstract": " This paper presents a novel European Master programme on Software Engineering (SE), being put forward by four leading institutions from Sweden, UK, Netherlands and Italy. The Global SE European Master (GSEEM) programme aims to provide students with an excellence in SE based on sound theoretical foundations and practical experience, as well as to prepare them to participate in global development of complex and large software systems. GSEEM has been designed with two noteworthy aspects: 1) Three specialization profiles in which the consortium excels: Software Architecting, Real-time Embedded Systems Engineering, and Web Systems and Services Engineering. 2) An innovative concept of\" shared modules\", delivered together by multiple institutions. Four types of shared modules are foreseen:\" parallel\" twin modules which run remotely between universities,\" shifted\" modules which teach SE concepts incrementally with shifts in study locations and timeline,\" complementary\" modules in which complementary SE concepts are taught in parallel through shared projects, and \u201ccommon\u201d modules which share the presentations and the project. The profiles realize\" integrated knowledge\" by complementing partial knowledge available at partner institutions.", "num_citations": "7\n", "authors": ["642"]}
{"title": "A Model for exploring the Service-oriented Software Engineering (SOSE) challenges\n", "abstract": " Service-oriented software engineering (SOSE) aims to design, develop and maintain service oriented applications in a systematic ap-proach. Due to the complexity that is introduced when software programs as services can be discovered, composed, instantiated, executed at runtime, SOSE poses new challenges in the way software is engineered as opposed to traditional software systems. In order for service-oriented systems to succeed, a well focused SOSE research agenda is needed. This paper proposes a model that can help researchers to identify the novelty of SOSE challenges and their research scope, and thus further helps to build the SOSE research agenda. To give an example of how to apply the proposed model, this paper explores the SOSE challenges that relate to business benefits by presenting a worked out instance of the model.", "num_citations": "7\n", "authors": ["642"]}
{"title": "A Sustainability-quality Model\n", "abstract": " A Sustainability-quality Model (2018) | www.narcis.nl KNAW KNAW Narcis Back to search results VU University Amsterdam Publication A Sustainability-quality Model (2018) Open access . Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title A Sustainability-quality Model Author Condori Fernandez, ON; Lago, P. Publisher Information Management and Software Engineering; Network Institute; Software & Services Date issued 2018-11-30 Access Open Access Reference(s) Green IT, Sustainability, Quality assessment, Software Engineering, Connected World, Science for Sustainability Language English Type Report Publisher VU Technical Report Publication https://research.vu.nl/en/publications/2e7a0e5d-f3b9-4112-86... Persistent Identifiers NBN urn:nbn:nl:ui:31-2e7a0e5d-f3b9-4112-8631-1ed3fa09bc61 Handle \u2026", "num_citations": "6\n", "authors": ["642"]}
{"title": "How organisations can assess and improve their green ICT activities in a standard and efficient way\n", "abstract": " This study demonstrates how a maturity model on Green ICT can help organisations improve themselves and become more environmental sustainable in a standard and efficient manner. For this we have used the SURF Green ICT Maturity Model and facilitated the use of this model in four organisations. These organisations participated in a maturity scan, evaluation session to discuss the results of the scan and a questionnaire on the use of the model. This field study showed that individual participants were very positive about the use of such a model and that it provided inspiration for improvement, both to reduce the environmental impact of ICT as well as to use ICT as an green solution for other business processes.", "num_citations": "6\n", "authors": ["642"]}
{"title": "Economic aspects of green ICT\n", "abstract": " Over the last decades, the use of information and communications technology (ICT) and software systems has exploded, making our lives and work much more efficient. However, besides the benefits that ICT brings us, it also contributes significantly to environmental issues [11, 13], not only because of the electricity consumed by computers, data centres, networks or other ICT utilities but also due to the rapidly growing computation needs of emerging software systems that contribute significantly to ever-increasing energy demands and greenhouse gas emissions [1, 21]. Decreasing ICT operation expenses becomes more and more crucial. How to make ICT greener (i.e. environmentally sustainable) and how to develop greener software have been gaining significant attention [16, 17, 24].", "num_citations": "6\n", "authors": ["642"]}
{"title": "Estimating the economic value of reusable green ict practices\n", "abstract": " Despite environmental concerns becoming increasingly urgent as a global issue, cost reduction is still the most important economic goal for many companies. Explicitly showing economic gains would be one of the most effective ways to motivate companies to optimize their use of ICT resources by means of sustainable software systems or green ICT practices. In this paper we propose using the e                 3                 value technique (originally meant to model enterprises and end-users exchanging things of economic value) to estimate and quantify the business value of sustainable software and green ICT practices. We report the experiment we carried out to challenge the e                 3                 value technique. In this experiment, we modeled a green ICT practice (investing a desktop virtualization software to improve energy efficiency) in a simplified yet realistic context. The results show that the applied\u00a0\u2026", "num_citations": "6\n", "authors": ["642"]}
{"title": "What architects do and what they need to share knowledge\n", "abstract": " Much has been written on software architecture theory and practice. Many of us are familiar to existing best practices on describing architectures, methods to evaluate these architectures, and process guidelines to ensure that architecture development blends in nicely in the software development process. Over the past few years, more attention is put on the role of decision making in the architecting process. Consequently, the role of the architect in this process is a frequently recurring topic of discussion, and more and more researchers and practitioners deliberate on what a proper set of duties, skills and knowledge of architects would be. In addition, researchers have proposed various tools to support the architect, who is characterized as an all-round knowledge worker. Such a knowledge worker, as these researchers argue, would definitely benefit from specific support for managing design decisions, modeling architectural solutions, or related activities that can be automated. In this report we assess to what extent the above claims hold. The best way to do this is to unravel what architects really do and what they really need to share architectural knowledge. For this purpose, we have constructed a theory on architecting. This theory is based on a state of the art literature review and experiences from a few years of case study research in an actual architecting process. Our theoretical framework consists of a number of identified architecting activities and a number of support methods that assist architects in sharing architectural knowledge during these activities. Further, we hypothesize that a number of \u2018patterns\u2019 exist between these activities and\u00a0\u2026", "num_citations": "6\n", "authors": ["642"]}
{"title": "What's in Constructing a Domain Model for Sharing Architectural Knowledge?\n", "abstract": " To promote knowledge dissemination in the software architecting process, it is crucial to deploy sound mechanisms to manage and share architectural knowledge. Sharing knowledge requires a common frame of reference. To this end, we constructed a domain model for sharing architectural knowledge. In this paper, we outline the iterative process used to construct this model. The main ingredients of this process are natural language text, packages, domain objects and actions, and object-interaction models. The recipe used to combine these ingredients consists of seven consecutive phases that iterate over three distinct stages of knowledge work: knowledge elicitation, knowledge structuring, and knowledge specification. Together, ingredients and recipe help in constructing a model that captures both static and dynamic aspects of a domain.", "num_citations": "6\n", "authors": ["642"]}
{"title": "Next Generation Networks: the service offering standpoint\n", "abstract": " This report presents an analysis of service creation in an NGN context. Two issues are considered: Technologies and business models.", "num_citations": "6\n", "authors": ["642"]}
{"title": "Integration of commercial Internet applications in a TINA environment\n", "abstract": " Services on the Internet rely on Internet applications, that is software applications distributed between clients and an Internet server relying on IP-based communication. This work demonstrates that they can benefit from the TINA (telecommunications information networking architecture) session concept, and especially from the service session. In detail, our objective was to study both the impact on, and the applicability of the TINA standard, whenever commercial applications are reengineered as TINA services. To achieve this objective, the work described here integrates two commercial conferencing applications in a TINA compliant telecommunication framework, and it extends the applications features to support distance education and traditional conference sessions in a flexible and intuitive way. This paper describes the solution implemented by the authors by showing its overall architecture, and the internal\u00a0\u2026", "num_citations": "6\n", "authors": ["642"]}
{"title": "CluStream-GT: Online Clustering for Personalization in the Health Domain\n", "abstract": " Clustering of users underlies many of the personalisation algorithms that are in use nowadays. Such clustering is mostly performed in an offline fashion. For a health and wellbeing setting, offline clustering might however not be suitable, as limited data is often available and patient states can also quickly evolve over time. Existing online clustering algorithms are not suitable for the health domain due to the type of data that involves multiple time series evolving over time. In this paper we propose a new online clustering algorithm called CluStream-GT that is suitable for health applications. By using both artificial and real datasets, we show that the approach is far more efficient compared to regular clustering, with an average speedup of 93%, while only losing 12% in the accuracy of the clustering with artificial data and 3% with real data.", "num_citations": "5\n", "authors": ["642"]}
{"title": "Report on the Fourth Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE4)\n", "abstract": " This report records and discusses the Fourth Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE4). The report includes a description of the keynote presentation of the workshop, the mission and vision statements that were drafted at the workshop and finalized shortly after it, a set of idea papers, position papers, experience papers, demos, and lightning talks, and a panel discussion. The main part of the report covers the set of working groups that formed during the meeting, and for each, discusses the participants, the objective and goal, and how the objective can be reached, along with contact information for readers who may want to join the group. Finally, we present results from a survey of the workshop attendees.", "num_citations": "5\n", "authors": ["642"]}
{"title": "Challenges on the Relationship between Architectural Patterns and Quality Attributes\n", "abstract": " Among other knowledge, software architecture design decision-making relies on the relation between architectural patterns and quality attributes (QAs). However, this relation is often implicit, or in the best case informally and partially defined. This leads to sub-optimal understanding of the impact of the architecture design on the desired level of quality. In this work, we aim to shed light on the relation patterns-QAs in the context of an important architectural mechanism, architectural tactics. Tactics are design decisions that address a specific quality attribute. In turn, the implementation of a tactic has a different impact according to the used pattern. From a previous systematic literature review, we selected and analyzed 13 primary studies with a clear focus on tactics. From our analysis, we extracted three overarching challenges on the relationship patterns-QAs that are yet unsolved by research. The essence of these\u00a0\u2026", "num_citations": "5\n", "authors": ["642"]}
{"title": "Architecture-centric approach to wireless service engineering\n", "abstract": " Telecom carriers, wireless application service providers and traditional Internet service providers are developing new services and new business models to support the mobile customer and create new revenue opportunities. At the same time, technologies are evolving faster and faster, and provide always-new features that make software engineering both promising and challenging for this domain. Next Generation Networks (NGNs) and services, GRID services and mobile services over 3G/4G technologies, such as I-mode and UMTS, represent some examples.In this evolving scenario, industry requires software engineering techniques that help in mastering time-to-market service engineering, fast and profitable evolution, know-how protection and exploitation. In order to respond to the needs of various stakeholders related to service architectures, architecture descriptions have to contain several viewpoints, at different levels of abstraction, defined by the QADA (Quality-driven Architecture Design and quality Analysis) method. To achieve this multi-perspective representation, differing modeling notations for both abstract and concrete architecture descriptions are needed. That is to prevent confusion caused by diverse meanings for the same symbol. In particular, this paper proposes a service engineering approach for architecting wireless services. The approach relies on a modeling notation extending OMG UML, and it is based on two separate levels of abstraction:", "num_citations": "5\n", "authors": ["642"]}
{"title": "Dynamic architectural changes for distributed services\n", "abstract": " The design of complex software  architectures for distributed systems  always faced different problems in both development and maintenance. Design decisions like the kind of architectural style, the middleware to use, and the interaction styles among distributed  components are variants often chosen in the early design phases. Hence, when some  changes are needed, rollback is difficult  and expensive. Moreover, when a developer  team implements the system, it is difficult to maintain coherence in source code with the architectural specification; this implies a longer phase of debugging and re-designing. A different strategy can be based on delaying as much as possible these design decisions, to be able to choose the best architecture and middleware during prototyping. This approach permits a more  agile development process that allows choosing among possible alternatives before deployment, or even after deployment, and changing these variants at runtime. This  paper describes JADDA (Java Adaptive component for Dynamic Distributed Architectures), a software component we developed to cope with these issues with a minimal impact for developers.", "num_citations": "5\n", "authors": ["642"]}
{"title": "Cooperation control in PSEE\n", "abstract": " Cooperation is \u201cacting together in a coordinated way in the pursuit of shared goals\u201d. Cooperation has numerous benefits: efficiency, where cooperation minimises the effort required to achieve the goal; enhanced capability, where a group can achieve a goal not possible for one person to achieve; synergy, where the cooperating partners can together achieve a different order of result from that achievable separately. Cooperation has also one main disadvantage: there is always an associated energy and time overhead.", "num_citations": "5\n", "authors": ["642"]}
{"title": "Fourth workshop on sustainable software for science: practice and experiences (WSSSPE4)\n", "abstract": " This article summarizes motivations, organization, and activities of the Fourth Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE4). The WSSSPE series promotes sustainable research software by positively impacting principles and best practices, careers, learning, and credit. This article discusses the code of conduct; the mission and vision statements that were drafted at the workshop and finalized shortly after it; the keynote and idea papers, position papers, experience papers, demos, and lightning talks presented during the workshop; and a panel discussion on best practices. The main part of the article discusses the set of working groups that formed during the meeting, along with contact information for readers who may want to join a group. Lastly, it discusses a survey of the workshop attendees.", "num_citations": "4\n", "authors": ["642"]}
{"title": "A self-adaptive framework for enhancing energy efficiency in mobile applications\n", "abstract": " Nowadays, many software applications are executed in mobile devices. This poses new challenges on optimizing the limited capacity set by battery life without compromising energy efficiency and performance. In this paper, we propose a framework for mobile applications to enable and evaluate self-adaptability for the purpose of improving energy efficiency without sacrificing performance. Our framework consists of two main parts: the mobile apps simulator and the scheduler.", "num_citations": "4\n", "authors": ["642"]}
{"title": "A domain model for self-adaptive software systems\n", "abstract": " Modern software systems operate in a continuously changing environment. To keep up with these changes, they can benefit from self-adaptation mechanisms. A number of modeling frameworks have been introduced to realize self-adaptive software systems. However, they usually focus either on runtime adaptation or on designing self-adaptability. As a consequence, they do not provide a clear link between architecture-level and system-level concepts. Without this link, we cannot ensure that the realized system will deliver the designed-for self-adaptability.", "num_citations": "4\n", "authors": ["642"]}
{"title": "2nd international workshop on green and sustainable software (greens 2013)\n", "abstract": " ICT accounts for approximately 2% of world CO2 emissions, a figure equivalent to aviation, according to Gartner estimates. In the remaining 98% software counts for both operationalizing the private sector in doing its business and the public sector in supporting the society, as well as delivering enduser applications that permeate personal life of individuals and families. Software can contribute to decrease power consumption (i.e., become greener) in at least two ways. First, by being more energy efficient, hence using fewer resources and causing fewer CO2 emissions. Second, by making its processes more sustainable, i.e. decreasing the emissions of governments, companies and individuals. To this end, enterprise software must be rethought to address sustainability issues and support innovative business models and processes. The special theme of the second edition of GREENS is \u201cLeveraging energy\u00a0\u2026", "num_citations": "4\n", "authors": ["642"]}
{"title": "3D Architecture Viewpoints on Service Automation\n", "abstract": " Service-oriented architecture is an emerging paradigm for the execution of business-oriented as well as technical infrastructure processes by means of services. Automating the execution of services is of paramount importance in order to fulfill the needs of companies. However we have found that automation \u2013 although important \u2013 is seldom addressed explicitly as a concern when stating requirements or designing the software architecture of the service-based applications (SBAs). In this paper we define three architectural viewpoints framing the concerns about service automation. These three viewpoints, called 3D (Decisions, Degree, Data), respectively: express architectural decisions about automation; help identifying the level (degree) of automation required, and represent the specific data required to support automation in services. They have been applied to three industrial case studies and one academic\u00a0\u2026", "num_citations": "4\n", "authors": ["642"]}
{"title": "A video-conferencing distributed service tailored for education\n", "abstract": " At present, a lot of initiatives aim at using Internet applications for traditional telecom domains like voice telephony and media on demand. So far these applications are difficult to integrate in the telecom framework, mid are treated rather as separate classes of services. Also, telecom services are traditionally executed in the context of \"service sessions\", and the software representation and management of the service session allows to control the service in a rich and flexible way. This paper describes an experiment focused on distance education, which demonstrates the integrability of an Internet commercial application in a distributed object-oriented architecture for telecom services. Also, it demonstrates that by adding session-based service control, Internet applications gain an added value. In detail, it integrated a commercial conferencing application in a TINA compliant telecom framework, and it extended the\u00a0\u2026", "num_citations": "4\n", "authors": ["642"]}
{"title": "Transaction technology for process modelling\n", "abstract": " Process Modelling (PM) is a software engineering discipline that aims at supporting the development of large and complex software systems. Therefore, PM focusses on study, definition, enaction, and possibly improvement of software process models.Traditional transaction management (TM) protects data against unexpected system failures, conflicts or inconsistencies. TM is also used in other areas, such as software engineering, to provide concurrency control and failure recovery for both automatic and manual activities. Transactions are typically used to provide reliable working contexts for software developers and for PM systems that enact process models. Software engineering TM adds requirements, such as support to user interaction, long lasting activities, non-programmed operations in the context of one transaction, and activity coordination. In this paper we will look at some aspects of using transaction\u00a0\u2026", "num_citations": "4\n", "authors": ["642"]}
{"title": "Pandora: a Temporal Logic Based Process Engine.\n", "abstract": " Pandora1 is a system based on logic programming and temporal logic concepts. It takes many novelties: rst the complete log of happened facts (events with in uenced entities and relations) is traced. This means that deletion is logical, ie, facts are not physically removed, but they are marked with their temporal interval of existence. Then, this mechanism assures monotonicity: the information amount is always either increasing (ie, new information is added), or evolving in more speci c one (ie, old information is re ned, acquiring more speci c knowledge during the software process). Further, the rule application algorithm (described in section 4.3), follows a protocol for rule analysis and processing, aimed at performing the minimal number of execution steps. At last, also synchronization is considered: a visibility mechanism, using invisible black intervals and visible states, assures that activities needing cooperation or some kind of ordering are synchronized. In software process modeling disciplines, experimentations in the rule based paradigm resulted in many systems, such as Marvel BK92], Merlin EJP+91], Oikos ACM90]. Further, temporal logic has been applied to software speci cation and validation in Mor91], or also to process development", "num_citations": "4\n", "authors": ["642"]}
{"title": "A Reference Architecture for Personalized and Self-adaptive e-Health Apps\n", "abstract": " A wealth of e-Health mobile apps are available for many purposes, such as life style improvement, mental coaching, etc. The interventions, prompts, and encouragements of e-Health apps sometimes take context into account (e.g., previous interactions or geographical location of the user), but they still tend to be rigid, e.g., by using fixed rule sets or being not sufficiently tailored towards individuals. Personalization to the different users\u2019 characteristics and run-time adaptation to their changing needs and context provide a great opportunity for getting users continuously engaged and active, eventually leading to better physical and mental conditions. This paper presents a reference architecture for enabling AI-based personalization and self-adaptation of mobile apps for e-Health. The reference architecture makes use of multiple MAPE loops operating at different levels of granularity and for different purposes.", "num_citations": "3\n", "authors": ["642"]}
{"title": "Navigation-aware and Personalized Prefetching of Network Requests in Android Apps\n", "abstract": " Prefetching network requests has been advocated as a highly effective way of reducing network latency experienced by the user since it allows network responses to be generated immediately from a local cache. In this paper we discuss how user navigation patterns can be used for developing navigation-aware techniques for personalized prefetching of network requests of Android apps. The proposed idea opens for a new family of prefetching opportunities since it focusses at a higher level of abstraction with respect to state-of-the-art approaches for network requests prefetching. The proposed idea allows the development of approaches which adapt their prefetching behaviour according to the unique navigation patterns each user exhibits while interacting with a mobile app.", "num_citations": "3\n", "authors": ["642"]}
{"title": "Self-adaptation approaches for energy efficiency: a systematic literature review\n", "abstract": " The increasing energy demands of software systems have set an essential software quality requirement: energy efficiency. At the same time, the many contextual changes faced by software systems during execution can hamper their functionality and overall quality. To address both problems, self-adaptation approaches can empower software systems, at both design-time and runtime, to adapt to dynamic conditions. In this way, software systems can be more resilient to failure, hence more trustful to satisfy the demands of modern digital society. In this paper, we perform a systematic literature review to study the state-of-the-art on existing self-adaptation approaches for energy efficiency. We analyze the identified approaches from three different perspectives, namely publication trends, application domains, and types of software systems. Our findings can help solution providers to make guided decisions to enable self\u00a0\u2026", "num_citations": "3\n", "authors": ["642"]}
{"title": "The sustainability of mobility as a service solutions evaluated through the software sustainability assessment method\n", "abstract": " The Sustainability of Mobility as a Service Solutions... (2018) | www.narcis.nl KNAW KNAW Narcis Back to search results VU University Amsterdam Publication The Sustainability of Mobility as a Service Solutions... (2018) Open access . Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title The Sustainability of Mobility as a Service Solutions Evaluated through the Software Sustainability Assessment Method Author Niggebrugge, Tom; Vos, Sophie; Lago, Patricia Publisher Information Management and Software Engineering; Network Institute; Software & Services Date issued 2018-01-01 Access Open Access Reference(s) software engineering, sustainability, mobility as a service, Green IT, Smart software, Science for Sustainability, Connected World Language English Type Report Publisher VU Technical Report Publication https://research.vu.nl/en/\u2026", "num_citations": "3\n", "authors": ["642"]}
{"title": "The SAPIENSA Approach for Service-enabling Pre-existing Legacy Assets\n", "abstract": " Migration of legacy assets to SOA embodies a key software engineering challenge. Existing methodologies mostly focus on development of new services while they provide little to no guidance for transforming services from pre-existing enterprise assets. SAPIENSA, a joint research project of the VU University Amsterdam and Tilburg University, aims to fill this gap. It proposes a migration methodology creating a well-constructed SOA out of pre-existing enterprise assets. The methodology exploits the relevant architectural knowledge to drive migration. To this end, the necessary knowledge concerning the migration should be identified, captured, analyzed and generalized. It should be noted that, the methodology is the result of an extensive analysis of the literature in the fields of reengineering and service engineering. This paper provides an overview of the SAPIENSA methodology along with discussions on the regarding research areas.", "num_citations": "3\n", "authors": ["642"]}
{"title": "UML requirements for Distributed Software Architectures\n", "abstract": " The use in various projects of UML as the modeling notation for representing software systems, revealed the need for additional constructs and architectural views, especially in the field of distributed software architectures. This article identifies a list of requirements toward UML, which we find appropriate especially in its current standardization stage.", "num_citations": "3\n", "authors": ["642"]}
{"title": "Teaching Process Improvement in an industry-oriented Course\n", "abstract": " This work specifies the software process of a software engineering course project work in the form of a general process model, written in a formal software process modelling language. This general model describes activities, tools, products, responsibilities, and metrics issues.It serves as a basis for obtaining project specific plans, and for communicating the process to students, colleagues, and customers. Last, and most important, the formal process model is the basis for analysing and improving the process across the years, thus improving the quality of the provided education.", "num_citations": "3\n", "authors": ["642"]}
{"title": "PATHOS\u2014a paradigmatic approach to high-level object-oriented software development\n", "abstract": " The growing complexity of information systems and the ensuring problems of their development, maintenance and management have highlighted the inadequacy of formal and informal methods for constructing such systems. These problems manifest themselves in the computer systems which are often unmanageable, unreliable, inflexible and hence difficult to maintain. Users have often demanded for reliable computer systems because they realize that most failures are due to poor specification, and design. This has resulted in the emergence of a number of information systems methodologies together with associated computerized development environments in which the Object-Oriented (OO) approach is one of the most recent.OO is often used for promoting software development and its reuse. Languages like Smalltalk reduce not only development time but also the cost of maintenance, simplifying the creation\u00a0\u2026", "num_citations": "3\n", "authors": ["642"]}
{"title": "Transaction planning to support coordination\n", "abstract": " Traditional transactions fulfill ACID 3 properties, and use strict access management policies to preserve data consistency. Software engineering transactions relax such properties to support cooperation and work independence: following strict serialization of accesses (eg, using strict locking), work would be delayed and hindered. On the other hand, with relaxed accesses (eg, using temporary parallel version histories of shared components, and delegating conflict resolution to late merge), the amount of conflicts would explode in untraceable independent version histories, rendering later merge almost impossible. Furthermore, traditional database applications are simple (read and write operations), pre-programmed and short, while software engineering applications are interactive, long-lasting, and depend on many factors, like human creativity, data-and team-complexity, and parallel work of development teams\u00a0\u2026", "num_citations": "3\n", "authors": ["642"]}
{"title": "Software and Sustainability\n", "abstract": " The sun is an incredible source of energy. It is the prime example of sustainable energy, that is the energy obtained from inexhaustible resources, and as such it serves the needs of the present without compromising the ability of future generations to meet their needs.We all have a general understanding of what sustainability means. However, its definition changes depending on the sources we use or the context in which it is considered. In essence, sustainability is the ability to continue a defined behavior indefinitely [1], or at least to continue for a long time [14]. In a business context, it refers to managing the triple bottom line-a process by which companies manage their financial, social and environmental risks, obligations and opportunities. These three impacts are sometimes referred to as profit (economic), people (social) and planet (environmental)[7]. However, this approach does not fully capture the time element that is inherent to sustainability. A more robust definition is that business sustainability represents resiliency over time businesses that can survive shocks because they are intimately connected to healthy economic, social and environmental systems [7]. This time element comes back in all fields. In an ecologic context natural resources should be kept in balance indefinitely. In a financial context, economic sustainability is the ability of an economy to support a defined level of production indefinitely.", "num_citations": "2\n", "authors": ["642"]}
{"title": "Guidance on applying Green ICT in Higher Education and Research.\n", "abstract": " The field of Green ICT is associated with minimizing the negative environmental impacts of ICT and optimizing the positive impacts of ICT. Even though the global environmental impact of ICT itself is significant (roughly 2%), making something else more efficient has a much larger effect (potential reduction of 16% of the global footprint)[1]. While both aspects are widely recognized and can be understood on an abstract or global level, it is often difficult for individuals or organizations to apply them.The SURF Green ICT Maturity Model (SGIMM) was created to address this issue. The SGIMM is designed to give organizations insights into the maturity of Green ICT of the organization. It is setup as a self-assessment and enables organizations to have an internal dialogue, to gain agreement on the status quo and to define actions for improvement. By letting several individuals within an organization score the attributes and discussing these scores with the participants an organization can identify weak and strong Green ICT aspects.", "num_citations": "2\n", "authors": ["642"]}
{"title": "Building up and exploiting architectural knowledge\n", "abstract": " CiteSeerX \u2014 Building up and exploiting architectural knowledge Documents Authors Tables Log in Sign up MetaCart DMCA Donate CiteSeerX logo Documents: Advanced Search Include Citations Authors: Advanced Search Include Citations Tables: DMCA Building up and exploiting architectural knowledge (2005) Cached Download as a PDF Download Links [www.researchgate.net] Other Repositories/Bibliography DBLP Save to List Add to Collection Correct Errors Monitor Changes by Patricia Lago , Hans Van Vliet , Timo Wolf , See Profile , Patricia Lago , Hans Vliet , Timo Wolf , Technische Universit\u00e4t Venue: In Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA Citations: 31 - 5 self Summary Citations Active Bibliography Co-citation Clustered Documents Version History Share Facebook Twitter Reddit Bibsonomy OpenURL Abstract All in-text references underlined in blue are \u2026", "num_citations": "2\n", "authors": ["642"]}
{"title": "Architectural Guidelines\n", "abstract": " This document presents a set of guidelines that will be adopted in the WISE consortium to describe the architecture of software systems. Figure 1 sketches the complex relationships between this document, other documents and the iterative approach of the WISE project.", "num_citations": "2\n", "authors": ["642"]}
{"title": "Improving Cooperation Support in the EPOS CM System\n", "abstract": " Support for cooperation is important for the users of a Configuration Management (CM) system, whenever two or more people are simultaneously working on the same product. However, many CM systems today are still lacking in this respect. We have added some cooperation support tools to our own CM system, and we show how these assist the CM users in coordinating their work and resolving conflicts. While our implemented tools are tailored for our home-grown environment, the techniques and general approach are applicable also to other CM systems.", "num_citations": "2\n", "authors": ["642"]}
{"title": "Collaborative Model-Driven Software Engineering: A Systematic Update\n", "abstract": " Current software engineering practices rely on highly heterogeneous and distributed teams working in a collaborative setting. Between 2013\u20132020, the publication output in the field of collaborative Model-Driven Software Engineering (MDSE) has significantly increased. However, the only systematic mapping study available is limited to studies published until 2015. In this paper, we provide an update on that study for the complementing 2016\u20132020 period, and report the latest results, challenges, and trends. Our analysis led to selecting 29 clusters of 54 new peer-reviewed publications on collaborative MDSE. Based on the novel developments in the field, we have extended and improved the original classification framework, making it applicable to recent and future research contributions on collaborative MDSE. The insights in this paper relate to the changing trends in the field and present new relevant information.", "num_citations": "1\n", "authors": ["642"]}
{"title": "Sustainability and Ethics by Design in the Development of Digital Platforms for Low-Resource Environments\n", "abstract": " Context. ICT projects in low-resource environments often fail. Furthermore, ICT projects that are introduced by means of development aid often cease to exist once the funding stops. This situation is not sustainable. Moreover, technology can have negative consequences for society, especially in low-resource environments.Goal. We aim to understand the sustainability and ethical concerns of designing context-sensitive ICT systems in low-resource environments. Our main research question is \u201cCan we define a general good practice for designing sustainable and ethical (software-intensive) systems in low-resource environments?\".Method. To answer the research question, we conducted a case study regarding the redesign of an information system that supports the seed value chain processes in Mali.", "num_citations": "1\n", "authors": ["642"]}
{"title": "Information Sciences Education for a Digital Society and Sustainability\n", "abstract": " Sustainability and social responsibility have become hot topics in Informatics, with more enterprises and organizations looking at their and others\u2019 digital technology through this lens. At the Vrije Universiteit Amsterdam, we have experience in education on these perspectives in the Computer Science and Information Sciences Master\u2019s programs, connecting well to our university\u2019s educational principles. Specifically, Information Sciences as an education program and professional discipline is well-suited to approach and assess information technology from a sustainability-and societal perspective. In this paper, we describe how sustainability and digital society are embedded in the curriculum and reflect on our experience by synthesizing five lessons learned. We also present the preliminary design of a Master\u2019s program Information Sciences, which will start in 2020/2021 with a special focus on the Digital Society and Sustainability.", "num_citations": "1\n", "authors": ["642"]}
{"title": "\" Offizielle\" elektronische Version der Publikation (entsprechend ihrem Digital Object Identifier-DOI)\n", "abstract": " Publikationseintrag [Zur\u00fcck] Zeitschriftenartikel: M. Ali, F. Rakib, E. Abdelalim, A. Limbeck, R. Mall, E. Ullah, N. Mesaeli, D. McNaughton, A. Tariq, K. Al-Saad: \"Fourier-Transform Infrared Imaging Spectroscopy and Laser Ablation -ICPMS New Vistas for Biochemical Analyses of Ischemic Stroke in Rat Brain\"; Frontiers in Neuroscience, 12 (2018), S. 1 - 17. Kurzfassung englisch: Stroke is the main cause of adult disability in the world, leaving more than half of the patients dependent on daily assistance. Understanding the poststroke biochemical and molecular changes are critical for patient survival and stroke management. The aim of this work was to investigate the photo-thrombotic ischemic stroke in male rats with particular focus on biochemical and elemental changes in the primary stroke lesion in the somatosensory cortex and surrounding areas, including the corpus callosum. In conclusion, FTIR bio-spectroscopy is \u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "Analyzing green software strategies within a service design process\n", "abstract": " Despite business organizations have mainly developed initiatives to reduce energy costs and demonstrate corporate social responsibility, there are yet few approaches that assist the inclusion of green strategies into the software design process. In this paper, we aim to identify which type of green strategies can be successfully included into a service design process. To this aim, in collaboration with a Dutch industry partner, we have conducted an empirical study as part of a course of the Software Engineering and Green IT master program. The study involved 19 teams of master students playing the role of software designers, and who completed the design of a real-life green software project of the smart transportation domain. Analysing deliverables created by the design teams, 66 green strategies were extracted, which were grouped in 16 clusters categorized per type of green problem: people-awareness, service-awareness, and process-awareness strategies.", "num_citations": "1\n", "authors": ["642"]}
{"title": "Systematic Literature Study on Sustainable Software\n", "abstract": " Systematic Literature Study on Sustainable Software (2017) | www.narcis.nl KNAW KNAW Narcis Back to search results VU University Amsterdam Publication Systematic Literature Study on Sustainable Software (2017) Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title Systematic Literature Study on Sustainable Software Author Filipovic, Bojan; Van Lindschoten, Boris; Procaccianti, G.; Lago, P. Publisher Information Management and Software Engineering; Network Institute; Software & Services Date issued 2017-2 Access Restricted Access Reference(s) Connected World, Science for Sustainability Language English Type Report Publisher VU Technical Report Publication https://research.vu.nl/en/publications/2c09bd67-e69f-43c2-b5... Persistent Identifiers NBN urn:nbn:nl:ui:31-2c09bd67-e69f-43c2-b571-441d9b4ee350 Handle 1871.1/2c09bd67-\u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "From Legacy to Cloud: Risks and Benefits in Software Cloud Migration\n", "abstract": " Various factors need to be evaluated before moving on-premise software applications to the cloud. Considerations such as scale, legal constraints, and security play a key role in rearchitecting an application in a cloud-compliant way. However, the body of knowledge on relevant migration factors is mostly neglected in practice and scattered in the scientific literature. To make this knowledge accessible, we have conducted a systematic literature review. It identifies the relevant studies that describe measures and indicators for guiding software cloud migration. This chapter presents the results of the review, which include the collected factors, namely 40 benefits, 71 risks, and 72 general measures. All factors were classified into five categories: financial, organizational, technical, legal, and security-related. In Tables 9.7, 9.8 and 9.9 we present a selection (the complete list of factors is available online at http://tinyurl.com\u00a0\u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "4th International Workshop on Green and Sustainable Software (GREENS 2015)\n", "abstract": " Engineering green software-intensive systems is critical in our drive towards a sustainable, smarter planet. The goal of green software engineering is to apply green principles to the design and operation of software-intensive systems. Green and self-greening software systems have tremendous potential to decrease energy consumption. Moreover, enterprise software can and should be re-thought to address sustainability issues using innovative business models, processes, and incentives. Monitoring and measuring the greenness of software is critical towards the notion of sustainable and green software. Demonstrating improvement is paramount for users to achieve and affect change. Thus, the theme of GREENS 2015 is Towards a Green Software Body of Knowledge. The GREENS workshop series brings together researchers and practitioners to discuss both the state-of-the-art and state-of-the-practice in green\u00a0\u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "The s-cube knowledge model-experiences in integrating ssme research communities\n", "abstract": " The field of Service Science, Management & Engineering (SSME), covers a wide range of research topics and has become fragmented due to the necessary specialization such broad area requires. The European Commission\u2019s Network of Excellence in Software Services and Systems (S-Cube) is an attempt to bring scientists together to perform joint research in this field that crosses existing research boundaries and, in the process of doing so, to help establish an enduring European network of researchers practicing SSME. To assist in the consolidation of research and bridge the gaps between disciplines, the S-Cube Knowledge Model (KM) has been developed to provide a method of capturing, managing and refining the knowledge produced by the network and provide a common understanding of research outputs. This paper describes the motivation, requirements and realization of the S-Cube KM, which\u00a0\u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "Architecture views illustrating the service automation aspect of SOA\n", "abstract": " Earlier in this book, Chapter\u00a08 provided a detailed analysis of service engineering, including a review of service engineering techniques and methodologies. This chapter is closely related to Chapter\u00a08 as shows how such approaches can be used to develop a service, with particular emphasis on the identification of three views (the automation decision view, degree of service automation view and service automation related data view) that structure and ease elicitation and documentation of stakeholders\u2019 concerns. This is carried out through two large case studies to learn the industrial needs in illustrating services deployment and configuration automation. This set of views adds to the more traditional notations like UML, the visual power of attracting the attention of their users to the addressed concerns, and assist them in their work. This is especially crucial in service oriented architecting where service\u00a0\u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "Towards an Ontology Web Service providing Architectural Knowledge\n", "abstract": " Modern software development increasingly often takes place in geographically distributed contexts involving multiple development groups with different backgrounds and roles. Part or most of software systems is provided through COTS components, Open Source, outsourcing, multi-party collaboration and distributed development teams. The software architecture plays an increasingly important role to manage the complex interactions and dependencies and to provide a central artifact that can be used for reference by the stakeholders. This paper proposes an ontology web service to support the navigation and management of architectural knowledge. It also proposes component decorations as a possible architectural ontology. An ontology web service is built around it to share and manage component decorations in a distributed cooperative environment.", "num_citations": "1\n", "authors": ["642"]}
{"title": "Integrating features and structural aspects in engineering software product families\n", "abstract": " We present a method and associated notations for describing and managing features and structural aspects in software product families. The method allows for both forward engineering of a product from a feature base, and backward recovery of a feature base from existing products. Traceability is supported from abstract features all the way to code and documentation. The feasibility of our approach is shown through a case study which involved the recovery of a product family from a set of six different products, followed by the forward engineering of a seventh product.", "num_citations": "1\n", "authors": ["642"]}
{"title": "Policy-based Control of VPNs\n", "abstract": " This paper presents the achievements of Project\u201d Added-Value TINA VPNs\u201d, funded by the TINA Fellowship Program 2001. The project focused on the design and the implementation of a software architecture able to dynamically manage provisioned IP Virtual Private Networks. The architecture is made of a set of server components offering open interfaces for changing and tracing the status of the network in a centralized manner. The system also provides a graphical client assisting the administrator to visually configure the network resources. As a key feature, the configuration is expressed through a set of policies, granting the system with a high flexibility. Indeed, configuration policies can be associated to user-defined conditions (eg time schedules), allowing the automated deployment of VPNs.", "num_citations": "1\n", "authors": ["642"]}
{"title": "An Approach to Evolution Control in Component-based Software Product Lines\n", "abstract": " It is often easier to build a software system from scratch rather than evolving an existing one. A reason for this difficulty is the lack of information about the architectural decisions taken during system development: why a certain component exists in multiple instances? In a software product family, which are the kernel components? And which are optional or ancillary? To answer these questions, this work proposes an initial methodology to capture product line evolution. We start analyzing the evolution of a family of products in their successive system configurations. Its application domain concerns the communication support (voice, video) over heterogeneous networks. On the basis of the evolution of the various system artifacts developed during almost five years of projects, this paper formalizes the system requirements and the architectural decisions, as well as the evolution backward from the previous system\u00a0\u2026", "num_citations": "1\n", "authors": ["642"]}
{"title": "Call Control Component implementing converged Telephony-Internet networks\n", "abstract": " Global telecommunications are in the early stages of a fundamental transformation, in which telecommunication networks and information technologies are yielding converged networks named Next Generation Networks (NGN). In this context this article presents a call control component able to handle calls between a telephone and a PC, accordingly to actions decided by the application layer that sets up and redirects calls between terminals over heterogeneous networks like Internet and PSTN. This goal is achieved through software adapters offering APIs porting standard protocols like Media Gateway Control Protocol and Intelligent Network Application Protocol (INAP), to CORBA-based software components.", "num_citations": "1\n", "authors": ["642"]}
{"title": "TINA service session control supporting complex negotiation\n", "abstract": " The paper describes how the TINA GSC (Global Session Control) service component has been designed and implemented to support complex negotiation driven by ownership assignment over the service session members represented by a session graph. First, a brief introduction into TINA concepts, and the motivation of the work are presented. Then, both the information and the computational models of the GSC are described. Particular emphasis is given to major contributions of the work, namely flexible and transparent management of dynamic modification sequences treated as atomic units, and negotiation supporting concurrent voting. A simple scenario exemplifies GSC functionality's.", "num_citations": "1\n", "authors": ["642"]}