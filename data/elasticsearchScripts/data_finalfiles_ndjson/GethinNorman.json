{"title": "PRISM 4.0: Verification of probabilistic real-time systems\n", "abstract": " This paper describes a major new release of the PRISM probabilistic model checker, adding, in particular, quantitative verification of (priced) probabilistic timed automata. These model systems exhibiting probabilistic, nondeterministic and real-time characteristics. In many application domains, all three aspects are essential; this includes, for example, embedded controllers in automotive or avionic systems, wireless communication protocols such as Bluetooth or Zigbee, and randomised security protocols. PRISM, which is open-source, also contains several new components that are of independent use. These include: an extensible toolkit for building, verifying and refining abstractions of probabilistic models; an explicit-state probabilistic model checking library; a discrete-event simulation engine for statistical model checking; support for generation of optimal adversaries/strategies; and a benchmark suite.", "num_citations": "2514\n", "authors": ["1591"]}
{"title": "PRISM: A tool for automatic verification of probabilistic systems\n", "abstract": " Probabilistic model checking is an automatic formal verification technique for analysing quantitative properties of systems which exhibit stochastic behaviour. PRISM is a probabilistic model checking tool which has already been successfully deployed in a wide range of application domains, from real-time communication protocols to biological signalling pathways. The tool has recently undergone a significant amount of development. Major additions include facilities to manually explore models, Monte-Carlo discrete-event simulation techniques for approximate model analysis (including support for distributed simulation) and the ability to compute cost- and reward-based measures, e.g. \u201cthe expected energy consumption of the system before the first failure occurs\u201d. This paper presents an overview of all the main features of PRISM. More information can be found on the website: www.cs.bham.ac.uk/~dxp/prism.", "num_citations": "923\n", "authors": ["1591"]}
{"title": "PRISM: Probabilistic symbolic model checker\n", "abstract": " In this paper we describe PRISM, a tool being developed at the University of Birmingham for the analysis of probabilistic systems. PRISM supports three probabilistic models: discrete-time Markov chains, Markov decision processes and continuous-time Markov chains. Analysis is performed through model checking such systems against specifications written in the probabilistic temporal logics PCTL and CSL. The tool features three model checking engines: one symbolic, using BDDs (binary decision diagrams) and MTBDDs (multi-terminal BDDs); one based on sparse matrices; and one which combines both symbolic and sparse matrix methods. PRISM has been successfully used to analyse probabilistic termination, performance, and quality of service properties for a range of systems, including randomized distributed algorithms, manufacturing systems and workstation clusters.", "num_citations": "828\n", "authors": ["1591"]}
{"title": "Stochastic model checking\n", "abstract": " This tutorial presents an overview of model checking for both discrete and continuous-time Markov chains (DTMCs and CTMCs). Model checking algorithms are given for verifying DTMCs and CTMCs against specifications written in probabilistic extensions of temporal logic, including quantitative properties with rewards. Example properties include the probability that a fault occurs and the expected number of faults in a given time period. We also describe the practical application of stochastic model checking with the probabilistic model checker PRISM by outlining the main features supported by PRISM and three real-world case studies: a probabilistic security protocol, dynamic power management and a biological pathway.", "num_citations": "701\n", "authors": ["1591"]}
{"title": "Probabilistic symbolic model checking with PRISM: A hybrid approach\n", "abstract": " In this paper we present efficient symbolic techniques for probabilistic model checking. These have been implemented in PRISM, a tool for the analysis of probabilistic models such as discrete-time Markov chains, continuous-time Markov chains and Markov decision processes using specifications in the probabilistic temporal logics PCTL and CSL. Motivated by the success of model checkers such as SMV which use BDDs (binary decision diagrams), we have developed an implementation of PCTL and CSL model checking based on MTBDDs (multi-terminal BDDs) and BDDs. Existing work in this direction has been hindered by the generally poor performance of MTBDD-based numerical computation, which is often substantially slower than explicit methods using sparse matrices. The focus of this paper is a novel hybrid technique which combines aspects of symbolic and explicit approaches to overcome\u00a0\u2026", "num_citations": "409\n", "authors": ["1591"]}
{"title": "Automatic verification of real-time systems with discrete probability distributions\n", "abstract": " We consider the timed automata model of Alur and Dill (Theoret. Comput. Sci. 126 (1994) 183\u2013235), which allows the analysis of real-time systems expressed in terms of quantitative timing constraints. Traditional approaches to real-time system description express the model purely in terms of nondeterminism; however, it is often desirable to express the likelihood of the system making certain transitions. In this paper, we present a model for real-time systems augmented with discrete probability distributions. Furthermore, two approaches to model checking are introduced for this model. The first uses the algorithm of Baier and Kwiatkowska (Distributed Comput. 11 (1998) 125\u2013155) to provide a verification technique against temporal logic formulae which can refer both to timing properties and probabilities. The second, generally more efficient, technique concerns the verification of probabilistic, real-time reachability\u00a0\u2026", "num_citations": "404\n", "authors": ["1591"]}
{"title": "Automated verification techniques for probabilistic systems\n", "abstract": " This tutorial provides an introduction to probabilistic model checking, a technique for automatically verifying quantitative properties of probabilistic systems. We focus on Markov decision processes (MDPs), which model both stochastic and nondeterministic behaviour. We describe methods to analyse a wide range of their properties, including specifications in the temporal logics PCTL and LTL, probabilistic safety properties and cost- or reward-based measures. We also discuss multi-objective probabilistic model checking, used to analyse trade-offs between several different quantitative properties. Applications of the techniques in this tutorial include performance and dependability analysis of networked systems, communication protocols and randomised distributed algorithms. Since such systems often comprise several components operating in parallel, we also cover techniques for compositional modelling\u00a0\u2026", "num_citations": "334\n", "authors": ["1591"]}
{"title": "Prism: Probabilistic model checking for performance and reliability analysis\n", "abstract": " Probabilistic model checking is a formal verification technique for the modelling and analysis of stochastic systems. It has proved to be useful for studying a wide range of quantitative properties of models taken from many diffierent application domains. This includes, for example, performance and reliability properties of computer and communication systems. In this paper, we give an overview of the probabilistic model checking tool PRISM, focusing in particular on its support for continuous-time Markov chains and Markov reward models, and how these can be used to analyse performability properties.", "num_citations": "295\n", "authors": ["1591"]}
{"title": "Performance analysis of probabilistic timed automata using digital clocks\n", "abstract": " Probabilistic timed automata, a variant of timed automata extended with discrete probability distributions, is a modelling formalism suitable for describing formally both nondeterministic and probabilistic aspects of real-time systems, and is amenable to model checking against probabilistic timed temporal logic properties. However, the previously developed verification algorithms either suffer from high complexity, give only approximate results, or are restricted to a limited class of properties. In the case of classical (non-probabilistic) timed automata it has been shown that for a large class of real-time verification problems correctness can be established using an integral model of time (digital clocks) as opposed to a dense model of time. Based on these results we address the question of under what conditions digital clocks are sufficient for the performance analysis of probabilistic timed automata and show that\u00a0\u2026", "num_citations": "281\n", "authors": ["1591"]}
{"title": "Mathematical techniques for analyzing concurrent and probabilistic systems\n", "abstract": " The book consists of two sets of lecture notes devoted to slightly different methods of analysis of concurrent and probabilistic computational systems. The first set of lectures develops a calculus of streams (a generalization of the set of natural numbers) based on the coinduction principle coming from the theory of coalgebras. It is now well understood that the interplay between algebra (for describing structure) and coalgebra (for describing dynamics) is crucial for understanding concurrent systems. There is a striking analogy between streams and formula calculus reminiscent to those appearing in quantum calculus. These lecture notes will appeal to anyone working in concurrency theory but also to algebraists and logicians. The other set of lecture notes focuses on methods for automatically verifying probabilistic systems using techniques of model checking. The unique aspect of these lectures is the coverage of both theory and practice. The authors have been responsible for one of the most successful experimental systems for probabilistic model checking. These lecture notes are of interest to software engineers, real-time programmers, researchers in machine learning and numerical analysts who may well be interested in seeing how standard numerical techniques are used in a novel context. Both sets of lectures are expository and suitable for graduate courses in theoretical computer science.", "num_citations": "259\n", "authors": ["1591"]}
{"title": "Numerical vs. statistical probabilistic model checking\n", "abstract": " Numerical analysis based on uniformisation and statistical techniques based on sampling and simulation are two distinct approaches for transient analysis of stochastic systems. We compare the two solution techniques when applied to the verification of time-bounded until formulae in the temporal stochastic logic CSL, both theoretically and through empirical evaluation on a set of case studies. Our study differs from most previous comparisons of numerical and statistical approaches in that CSL model checking is a hypothesis-testing problem rather than a parameter-estimation problem. We can therefore rely on highly efficient sequential acceptance sampling tests, which enables statistical solution techniques to quickly return a result with some uncertainty. We also propose a novel combination of the two solution techniques for verifying CSL queries with nested probabilistic operators.", "num_citations": "256\n", "authors": ["1591"]}
{"title": "PRISM 2.0: A tool for probabilistic model checking\n", "abstract": " This paper gives a brief overview of version 2.0 of PRISM, a tool for the automatic formal verification of probabilistic systems, and some of the case studies to which it has already been applied.", "num_citations": "222\n", "authors": ["1591"]}
{"title": "Probabilistic symbolic model checking with PRISM: A hybrid approach\n", "abstract": " In this paper we introduce PRISM, a probabilistic model checker, and describe the efficient symbolic techniques we have developed during its implementation. PRISM is a tool for analysing probabilistic systems. It supports three models: discrete-time Markov chains, continuous-time Markov chains and Markov decision processes. Analysis is performed through model checking specifications in the probabilistic temporal logics PCTL and CSL. Motivated by the success of model checkers such as SMV, which use BDDs (binary decision diagrams), we have developed an implementation of PCTL and CSL model checking based on MTBDDs (multi-terminal BDDs) and BDDs. Existing work in this direction has been hindered by the generally poor performance of MTBDD-based numerical computation, which is often substantially slower than explicit methods using sparse matrices. We present a novel hybrid\u00a0\u2026", "num_citations": "212\n", "authors": ["1591"]}
{"title": "Probabilistic model checking of complex biological pathways\n", "abstract": " Probabilistic model checking is a formal verification technique that has been successfully applied to the analysis of systems from a broad range of domains, including security and communication protocols, distributed algorithms and power management. In this paper we illustrate its applicability to a complex biological system: the FGF (Fibroblast Growth Factor) signalling pathway. We give a detailed description of how this case study can be modelled in the probabilistic model checker PRISM, discussing some of the issues that arise in doing so, and show how we can thus examine a rich selection of quantitative properties of this model. We present experimental results for the case study under several different scenarios and provide a detailed analysis, illustrating how this approach can be used to yield a better understanding of the dynamics of the pathway. Finally, we outline a number of exact and approximate\u00a0\u2026", "num_citations": "209\n", "authors": ["1591"]}
{"title": "Symbolic model checking for probabilistic timed automata\n", "abstract": " Probabilistic timed automata are timed automata extended with discrete probability distributions, and can be used to model timed randomised protocols or fault-tolerant systems. We present symbolic model-checking algorithms for probabilistic timed automata to verify both qualitative temporal logic properties, corresponding to satisfaction with probability 0 or 1, and quantitative properties, corresponding to satisfaction with arbitrary probability. The algorithms operate on zones, which represent sets of valuations of the probabilistic timed automaton\u2019s clocks. Our method considers only those system behaviours which guarantee the divergence of time with probability 1. The paper presents a symbolic framework for the verification of probabilistic timed automata against the probabilistic, timed temporal logic PTCTL. We also report on a prototype implementation of the algorithms using Difference Bound Matrices, and\u00a0\u2026", "num_citations": "194\n", "authors": ["1591"]}
{"title": "Probabilistic model checking of the IEEE 802.11 wireless local area network protocol\n", "abstract": " The international standard IEEE 802.11 was developed recently in recognition of the increased demand for wireless local area networks. Its medium access control mechanism is described according to a variant of the Carrier Sense Multiple Access with Collision Avoidance (CSMA/CA) scheme. Although collisions cannot always be prevented, randomised exponential backoff rules are used in the retransmission scheme to minimise the likelihood of repeated collisions. More precisely, the backoff procedure involves a uniform probabilistic choice of an integer-valued delay from an interval, where the size of the interval grows exponentially with regard to the number of retransmissions of the current data packet. We model the two-way handshake mechanism of the IEEE 802.11 standard with a fixed network topology using probabilistic timed automata, a formal description mechanism in which both\u00a0\u2026", "num_citations": "186\n", "authors": ["1591"]}
{"title": "Symmetry reduction for probabilistic model checking\n", "abstract": " We present an approach for applying symmetry reduction techniques to probabilistic model checking, a formal verification method for the quantitative analysis of systems with stochastic characteristics. We target systems with a set of non-trivial, but interchangeable, components such as those which commonly arise in randomised distributed algorithms or probabilistic communication protocols. We show, for three types of probabilistic models, that symmetry reduction, similarly to the non-probabilistic case, allows verification to instead be performed on a bisimilar quotient model which may be up to factorially smaller. We then propose an efficient algorithm for the construction of the quotient model using a symbolic implementation based on multi-terminal binary decision diagrams (MTBDDs) and, using four large case studies, demonstrate that this approach offers not only a dramatic increase in the size of\u00a0\u2026", "num_citations": "183\n", "authors": ["1591"]}
{"title": "Symbolic model checking of probabilistic processes using MTBDDs and the Kronecker representation\n", "abstract": " This paper reports on experimental results with symbolic model checking of probabilistic processes based on Multi-Terminal Binary Decision Diagrams (MTBDDs). We consider concurrent probabilistic systems as models; these allow nondeterministic choice between probability distributions and are particularly well suited to modelling distributed systems with probabilistic behaviour, e.g. randomized consensus algorithms and probabilistic failures. As a specification formalism we use the probabilistic branching-time temporal logic PBTL which allows one to express properties such as \u201cunder any scheduling of nondeterministic choices, the probability of \u03c6 holding until \u03c8 is true is at least 0.78/at most 0.04\u201d. We adapt the Kronecker representation of (Plateau 1985), which yields a very compact MTBDD encoding of the system. We implement an experimental model checker using the CUDD package and\u00a0\u2026", "num_citations": "175\n", "authors": ["1591"]}
{"title": "A formal analysis of Bluetooth device discovery\n", "abstract": " This paper presents a formal analysis of the device discovery phase of the Bluetooth wireless communication protocol. The performance of this process is the result of a complex interaction between several devices, some of which exhibit random behaviour. We use probabilistic model checking and, in particular, the tool PRISM to compute the best- and worst-case performance of device discovery: the expected time for the process to complete and the expected power consumption. We illustrate the utility of performing an exhaustive, low-level analysis to produce exact results in contrast to simulation techniques, where additional probabilistic assumptions must be made. We demonstrate an example of how seemingly innocuous assumptions can lead to incorrect performance estimations. We also analyse the effectiveness of improvements made between versions 1.1 and 1.2 of the Bluetooth specification.", "num_citations": "173\n", "authors": ["1591"]}
{"title": "Assume-guarantee verification for probabilistic systems\n", "abstract": " We present a compositional verification technique for systems that exhibit both probabilistic and nondeterministic behaviour. We adopt an assume-guarantee approach to verification, where both the assumptions made about system components and the guarantees that they provide are regular safety properties, represented by finite automata. Unlike previous proposals for assume-guarantee reasoning about probabilistic systems, our approach does not require that components interact in a fully synchronous fashion. In addition, the compositional verification method is efficient and fully automated, based on a reduction to the problem of multi-objective probabilistic model checking. We present asymmetric and circular assume-guarantee rules, and show how they can be adapted to form quantitative queries, yielding lower and upper bounds on the actual probabilities that a property is satisfied. Our techniques\u00a0\u2026", "num_citations": "163\n", "authors": ["1591"]}
{"title": "Probabilistic model checking of deadline properties in the IEEE 1394 FireWire root contention protocol\n", "abstract": " The interplay of real time and probability is crucial to the correctness of the IEEE 1394 FireWire root contention protocol. We present a formal verification of the protocol using probabilistic model checking. Rather than analyse the functional aspects of the protocol, by asking such questions as \u2018Will a leader be elected?\u2019, we focus on the protocol's performance, by asking the question \u2018How certain are we that a leader will be elected sufficiently quickly?\u2019 Probabilistic timed automata are used to formally model and verify the protocol against properties which require that a leader is elected before a deadline with a certain probability. We use techniques such as abstraction, reachability analysis and integer-time semantics to aid the model-checking process, and the efficacy of these techniques is compared.", "num_citations": "140\n", "authors": ["1591"]}
{"title": "Model checking for probabilistic timed automata\n", "abstract": " Probabilistic timed automata (PTAs) are a formalism for modelling systems whose behaviour incorporates both probabilistic and real-time characteristics. Applications include wireless communication protocols, automotive network protocols and randomised security protocols. This paper gives an introduction to PTAs and describes techniques for analysing a wide range of quantitative properties, such as \u201cthe maximum probability of the airbag failing to deploy within 0.02 seconds\u201d, \u201cthe maximum expected time for the protocol to terminate\u201d or \u201cthe minimum expected energy consumption required to complete all tasks\u201d. We present a temporal logic for specifying such properties and then give a survey of available model-checking techniques for formulae specified in this logic. We then describe two case studies in which PTAs are used for modelling and analysis: a probabilistic non-repudiation protocol and a task\u00a0\u2026", "num_citations": "129\n", "authors": ["1591"]}
{"title": "Quantitative analysis with the probabilistic model checker PRISM\n", "abstract": " Probabilistic model checking is a formal verification technique for establishing the correctness, performance and reliability of systems which exhibit stochastic behaviour. As in conventional verification, a precise mathematical model of a real-life system is constructed first, and, given formal specifications of one or more properties of this system, an analysis of these properties is performed. The exploration of the system model is exhaustive and involves a combination of graph-theoretic algorithms and numerical methods. In this paper, we give a brief overview of the probabilistic model checker PRISM (www.cs.bham.ac.uk/~dxp/prism) implemented at the University of Birmingham. PRISM supports a range of probabilistic models and specification languages based on temporal logic, and has been recently extended with costs and rewards. We describe our experience with using PRISM to analyse a number of case\u00a0\u2026", "num_citations": "126\n", "authors": ["1591"]}
{"title": "Using probabilistic model checking in systems biology\n", "abstract": " Probabilistic model checking is a formal verification framework for systems which exhibit stochastic behaviour. It has been successfully applied to a wide range of domains, including security and communication protocols, distributed algorithms and power management. In this paper we demonstrate its applicability to the analysis of biological pathways and show how it can yield a better understanding of the dynamics of these systems. Through a case study of the MAP (Mitogen-Activated Protein) Kinase cascade, we explain how biological pathways can be modelled in the probabilistic model checker PRISM and how this enables the analysis of a rich selection of quantitative properties.", "num_citations": "121\n", "authors": ["1591"]}
{"title": "Probabilistic model checking of complex biological pathways\n", "abstract": " Probabilistic model checking is a formal verification technique that has been successfully applied to the analysis of systems from a broad range of domains, including security and communication protocols, distributed algorithms and power management. In this paper we illustrate its applicability to a complex biological system: the FGF (Fibroblast Growth Factor) signalling pathway. We give a detailed description of how this case study can be modelled in the probabilistic model checker PRISM, discussing some of the issues that arise in doing so, and show how we can thus examine a rich selection of quantitative properties of this model. We present experimental results for the case study under several different scenarios and provide a detailed analysis, illustrating how this approach can be used to yield a better understanding of the dynamics of the pathway.", "num_citations": "120\n", "authors": ["1591"]}
{"title": "Quantitative multi-objective verification for probabilistic systems\n", "abstract": " We present a verification framework for analysing multiple quantitative objectives of systems that exhibit both nondeterministic and stochastic behaviour. These systems are modelled as probabilistic automata, enriched with cost or reward structures that capture, for example, energy usage or performance metrics. Quantitative properties of these models are expressed in a specification language that incorporates probabilistic safety and liveness properties, expected total cost or reward, and supports multiple objectives of these types. We propose and implement an efficient verification framework for such properties and then present two distinct applications of it: firstly, controller synthesis subject to multiple quantitative objectives; and, secondly, quantitative compositional verification. The practical applicability of both approaches is illustrated with experimental results from several large case studies.", "num_citations": "119\n", "authors": ["1591"]}
{"title": "A game-based abstraction-refinement framework for Markov decision processes\n", "abstract": " In the field of model checking, abstraction refinement has proved to be an extremely successful methodology for combating the state-space explosion problem. However, little practical progress has been made in the setting of probabilistic verification. In this paper we present a novel abstraction-refinement framework for Markov decision processes (MDPs), which are widely used for modelling and verifying systems that exhibit both probabilistic and nondeterministic behaviour. Our framework comprises an abstraction approach based on stochastic two-player games, two refinement methods and an efficient algorithm for an abstraction-refinement loop. The key idea behind the abstraction approach is to maintain a separation between nondeterminism present in the original MDP and nondeterminism introduced during the abstraction process, each type being represented by a different player in the game\u00a0\u2026", "num_citations": "119\n", "authors": ["1591"]}
{"title": "Verifying quantitative properties of continuous probabilistic timed automata\n", "abstract": " We consider the problem of automatically verifying realtime systems with continuously distributed random delays. We generalise probabilistic timed automata introduced in [19], an extension of the timed automata model of [4], with clock resets made according to continuous probability distributions. Thus, our model exhibits nondeterministic and probabilistic choice, the latter being made according to both discrete and continuous probability distributions. To facilitate algorithmic verification, we modify the standard region graph construction by subdividing the unit intervals in order to approximate the probability to within an interval. We then develop a model checking method for continuous probabilistic timed automata, taking as our specification language Probabilistic Timed Computation Tree Logic (PTCTL). Our method improves on the previously known techniques in that it allows the verification of quantitative\u00a0\u2026", "num_citations": "116\n", "authors": ["1591"]}
{"title": "The PRISM benchmark suite\n", "abstract": " We present the PRISM benchmark suite: a collection of probabilistic models and property specifications, designed to facilitate testing, benchmarking and comparisons of probabilistic verification tools and implementations.", "num_citations": "112\n", "authors": ["1591"]}
{"title": "Game-based abstraction for Markov decision processes\n", "abstract": " In this paper we present a novel abstraction technique for Markov decision processes (MDPs), which are widely used for modelling systems that exhibit both probabilistic and nondeterministic behaviour. In the field of model checking, abstraction has proved an extremely successful tool to combat the state-space explosion problem. In the probabilistic setting, however, little practical progress has been made in this area. We propose an abstraction method for MDPs based on stochastic two-player games. The key idea behind this approach is to maintain a separation between nondeterminism present in the original MDP and nondeterminism introduced through abstraction, each type being represented by a different player in the game. Crucially, this allows us to obtain distinct lower and upper bounds for both the best and worst-case performance (minimum or maximum probabilities) of the MDP. We have implemented\u00a0\u2026", "num_citations": "110\n", "authors": ["1591"]}
{"title": "Evaluating the reliability of NAND multiplexing with PRISM\n", "abstract": " Probabilistic-model checking is a formal verification technique for analyzing the reliability and performance of systems exhibiting stochastic behavior. In this paper, we demonstrate the applicability of this approach and, in particular, the probabilistic-model-checking tool PRISM to the evaluation of reliability and redundancy of defect-tolerant systems in the field of computer-aided design. We illustrate the technique with an example due to von Neumann, namely NAND multiplexing. We show how, having constructed a model of a defect-tolerant system incorporating probabilistic assumptions about its defects, it is straightforward to compute a range of reliability measures and investigate how they are affected by slight variations in the behavior of the system. This allows a designer to evaluate, for example, the tradeoff between redundancy and reliability in the design. We also highlight errors in analytically computed\u00a0\u2026", "num_citations": "107\n", "authors": ["1591"]}
{"title": "Analysis of probabilistic contract signing 1\n", "abstract": " We present three case studies, investigating the use of probabilistic model checking to automatically analyse properties of probabilistic contract signing protocols. We use the probabilistic model checker PRISM to analyse three protocols: Rabin's probabilistic protocol for fair commitment exchange; the probabilistic contract signing protocol of Ben-Or, Goldreich, Micali, and Rivest; and a randomised protocol for signing contracts of Even, Goldreich, and Lempel. These case studies illustrate the general methodology for applying probabilistic model checking to formal verification of probabilistic security protocols.", "num_citations": "102\n", "authors": ["1591"]}
{"title": "Advances and challenges of probabilistic model checking\n", "abstract": " Probabilistic model checking is a powerful technique for formally verifying quantitative properties of systems that exhibit stochastic behaviour. Such systems are found in many domains: probabilistic behaviour may arise, for example, due to failures of unreliable components, communication across lossy media, or through the use of randomisation in distributed protocols. In this paper, we give a short overview of probabilistic model checking and of PRISM (www.prismmodelchecker.org), currently the leading software tool in this area. We then mention some of the limitations of these techniques, describe some of the advances that are being made to overcome them, and outline key challenges that remain in this research area.", "num_citations": "100\n", "authors": ["1591"]}
{"title": "Using probabilistic model checking for dynamic power management\n", "abstract": " Dynamic power management (DPM) refers to the use of runtime strategies in order to achieve a tradeoff between the performance and power consumption of a system and its components. We present an approach to analysing stochastic DPM strategies using probabilistic model checking as the formal framework. This is a novel application of probabilistic model checking to the area of system design. This approach allows us to obtain performance measures of strategies by automated analytical means without expensive simulations. Moreover, one can formally establish various probabilistically quantified properties pertaining to buffer sizes, delays, energy usage etc., for each derived strategy.", "num_citations": "98\n", "authors": ["1591"]}
{"title": "Probabilistic model checking in practice: Case studies with PRISM\n", "abstract": " In this paper, we describe some practical applications of probabilistic model checking, a technique for the formal analysis of systems which exhibit stochastic behaviour. We give an overview of a selection of case studies carried out using the probabilistic model checking tool PRISM, demonstrating the wide range of application domains to which these methods are applicable. We also illustrate several benefits of using formal verification techniques to analyse probabilistic systems, including: (i) that they allow a wide range of numerical properties to be computed accurately; and (ii) that they perform a complete and exhaustive analysis enabling, for example, a study of best- and worst-case scenarios.", "num_citations": "97\n", "authors": ["1591"]}
{"title": "Automated Verification of a Randomized Distributed Consensus Protocol Using Cadence SMV and PRISM?\n", "abstract": " We consider the randomized consensus protocol of Aspnes and Herlihy for achieving agreement among N asynchronous processes that communicate via read/write shared registers. The algorithm guarantees termination in the presence of stopping failures within polynomial expected time. Processes proceed through possibly unboundedly many rounds; at each round, they read the status of all other processes and attempt to agree. Each attempt involves a distributed random walk: when processes disagree, a shared coin-flipping protocol is used to decide their next preferred value. Achieving polynomial expected time depends on the probability that all processes draw the same value being above an appropriate bound. For the non-probabilistic part of the algorithm, we use the proof assistant Cadence SMV to prove validity and agreement for all N and for all rounds. The coin-flipping protocol is verified\u00a0\u2026", "num_citations": "89\n", "authors": ["1591"]}
{"title": "Stochastic games for verification of probabilistic timed automata\n", "abstract": " Probabilistic timed automata (PTAs) are used for formal modelling and verification of systems with probabilistic, nondeterministic and real-time behaviour. For non-probabilistic timed automata, forwards reachability is the analysis method of choice, since it can be implemented extremely efficiently. However, for PTAs, such techniques are only able to compute upper bounds on maximum reachability probabilities. In this paper, we propose a new approach to the analysis of PTAs using abstraction and stochastic games. We show how efficient forwards reachability techniques can be extended to yield both lower and upper bounds on maximum (and minimum) reachability probabilities. We also present abstraction-refinement techniques that are guaranteed to improve the precision of these probability bounds, providing a fully automatic method for computing the exact values. We have implemented these\u00a0\u2026", "num_citations": "84\n", "authors": ["1591"]}
{"title": "Abstraction refinement for probabilistic software\n", "abstract": " We present a methodology and implementation for verifying ANSI-C programs that exhibit probabilistic behaviour, such as failures or randomisation. We use abstraction-refinement techniques that represent probabilistic programs as Markov decision processes and their abstractions as stochastic two-player games. Our techniques target quantitative properties of software such as \u201cthe maximum probability of file-transfer failure\u201d or \u201cthe minimum expected number of loop iterations\u201d and the abstractions we construct yield lower and upper bounds on these properties, which then guide the refinement process. We build upon state-of-the-art techniques and tools, using SAT-based predicate abstraction, symbolic implementations of probabilistic model checking and components from GOTO-CC, SATABS and PRISM. Experimental results show that our approach performs very well in practice, successfully verifying\u00a0\u2026", "num_citations": "82\n", "authors": ["1591"]}
{"title": "Symbolic model checking for probabilistic timed automata\n", "abstract": " Probabilistic timed automata are an extension of timed automata with discrete probability distributions, and can be used to model timed randomized protocols or fault-tolerant systems. We present symbolic model-checking algorithms for verifying probabilistic timed automata against properties of PTCTL (Probabilistic Timed Computation Tree Logic). The algorithms operate on zones, which are sets of valuations of the probabilistic timed automaton\u2019s clocks, and therefore avoid an explicit construction of the state space. Furthermore, the algorithms are restricted to system behaviours which guarantee the divergence of time with probability 1. We report on a prototype implementation of the algorithms using Difference Bound Matrices, and present the results of its application to the CSMA/CD and FireWire root contention protocol case studies.", "num_citations": "80\n", "authors": ["1591"]}
{"title": "Evaluating the reliability of defect-tolerant architectures for nanotechnology with probabilistic model checking\n", "abstract": " As we move from deep submicron technology to nanotechnology for device manufacture, the need for defect-tolerant architectures is gaining importance. This is because, at the nanoscale, devices will be prone to errors due to manufacturing defects, ageing, and transient faults. Micro-architects will be required to design their logic around defect tolerance through redundancy. However, measures of reliability must be quantified in order for such design methodologies to be acceptable. We propose a CAD framework based on probabilistic model checking which provides efficient evaluation of the reliability/redundancy trade-off for defect-tolerant architectures. This framework can model probabilistic assumptions about defects, easily compute reliability figures and help designers make the right decisions. We demonstrate the power of our framework by evaluating the reliability/redundancy trade-off of a canonical\u00a0\u2026", "num_citations": "73\n", "authors": ["1591"]}
{"title": "Numerical vs. statistical probabilistic model checking: An empirical study\n", "abstract": " Numerical analysis based on uniformisation and statistical techniques based on sampling and simulation are two distinct approaches for transient analysis of stochastic systems. We compare the two solution techniques when applied to the verification of time-bounded until formulae in the temporal stochastic logic CSL. This study differs from most previous comparisons of numerical and statistical approaches in that CSL model checking is a hypothesis testing problem rather than a parameter estimation problem. We can therefore rely on highly efficient sequential acceptance sampling tests, which enables statistical solution techniques to quickly return a result with some uncertainty. This suggests that statistical techniques can be useful as a first resort during system prototyping, rather than as a last resort as often suggested. We also propose a novel combination of the two solution techniques for verifying CSL\u00a0\u2026", "num_citations": "70\n", "authors": ["1591"]}
{"title": "Analysis of a gossip protocol in PRISM\n", "abstract": " Gossip protocols have been proposed as a robust and efficient method for disseminating information throughout dynamically changing networks. We present an analysis of a gossip protocol using probabilistic model checking and the tool PRISM. Since the behaviour of these protocols is both probabilistic and nondeterministic in nature, this provides a good example of the exhaustive, quantitative analysis that probabilistic model checking techniques can provide. In particular, we compute minimum and maximum values, representing the best- and worst-case performance of the protocol under any scheduling, and investigate both their relationship with the average values that would be obtained through simulation and the precise scheduling which achieve these values.", "num_citations": "69\n", "authors": ["1591"]}
{"title": "Controller dependability analysis by probabilistic model checking\n", "abstract": " This paper demonstrates how probabilistic model checking, a formal verification method for the analysis of systems which exhibit stochastic behaviour, can be applied to the study of dependability properties of software-based control systems. By using existing formalisms and tool support from this area, it is possible to construct large and complex Markov models from an intuitive high-level description and to take advantage of the efficient implementation techniques which have been developed for these tools. This paper provides an overview of probabilistic model checking and of the tool PRISM which supports these techniques. It illustrates the applicability of the approach through the use of a case study and demonstrates that a wide range of useful dependability properties can be analysed in this way.", "num_citations": "63\n", "authors": ["1591"]}
{"title": "Automatic verification of real-time systems with discrete probability distributions\n", "abstract": " We consider the timed automata model of [3], which allows the analysis of real-time systems expressed in terms of quantitative timing constraints. Traditional approaches to real-time system description express the model purely in terms of nondeterminism; however, we may wish to express the likelihood of the system making certain transitions. In this paper, we present a model for real-time systems augmented with discrete probability distributions. Furthermore, using the algorithm of [5] with fairness, we develop a model checking method for such models against temporal logic properties which can refer both to timing properties and probabilities, such as, \u201cwith probability 0.6 or greater, the clock x remains below 5 until clock y exceeds 2\u201d", "num_citations": "63\n", "authors": ["1591"]}
{"title": "Automatic verification of the IEEE 1394 root contention protocol with KRONOS and PRISM\n", "abstract": " We report on the automatic verification of timed probabilistic properties of the IEEE 1394 root contention protocol combining two existing tools: the real-time model checker Kronos and the probabilistic model checker Prism. The system is modelled as a probabilistic timed automaton. We first use Kronos to perform a symbolic forwards reachability analysis to generate the set of states that are reachable with non-zero probability from the initial state and before the deadline expires. We then encode this information as a Markov decision process to be analyzed with Prism. We apply this technique to compute the minimal probability of a leader being elected before a deadline, for different deadlines, and study how this minimal probability is influenced by using a biased coin and considering different wire lengths.", "num_citations": "62\n", "authors": ["1591"]}
{"title": "Probabilistic model checking for systems biology\n", "abstract": " Probabilistic model checking is a technique for formally verifying quantitative properties of systems that exhibit stochastic behaviour. In this chapter, we show how this approach can be applied to the study of biological systems such as biochemical reaction networks and signalling pathways. We present an introduction to the state-of-the-art probabilistic model checking tool PRISM using a case study based on the Fibroblast Growth Factor (FGF) signalling pathway.", "num_citations": "61\n", "authors": ["1591"]}
{"title": "Verification and control of partially observable probabilistic systems\n", "abstract": " We present automated techniques for the verification and control of partially observable, probabilistic systems for both discrete and dense models of time. For the discrete-time case, we formally model these systems using partially observable Markov decision processes; for dense time, we propose an extension of probabilistic timed automata in which local states are partially visible to an observer or controller. We give probabilistic temporal logics that can express a range of quantitative properties of these models, relating to the probability of an event\u2019s occurrence or the expected value of a reward measure. We then propose techniques to either verify that such a property holds or synthesise a controller for the model which makes it true. Our approach is based on a grid-based abstraction of the uncountable belief space induced by partial observability and, for dense-time models, an integer discretisation of\u00a0\u2026", "num_citations": "56\n", "authors": ["1591"]}
{"title": "Probabilistic verification of Herman\u2019s self-stabilisation algorithm\n", "abstract": " Herman\u2019s self-stabilisation algorithm provides a simple randomised solution to the problem of recovering from faults in an N-process token ring. However, a precise analysis of the algorithm\u2019s maximum execution time proves to be surprisingly difficult. McIver and Morgan have conjectured that the worst-case behaviour results from a ring configuration of three evenly spaced tokens, giving an expected time of approximately 0.15N                 2. However, the tightest upper bound proved to date is 0.64N                 2. We apply probabilistic verification techniques, using the probabilistic model checker PRISM, to analyse the conjecture, showing it to be correct for all sizes of the ring that can be exhaustively analysed. We furthermore demonstrate that the worst-case execution time of the algorithm can be reduced by using a biased coin.", "num_citations": "53\n", "authors": ["1591"]}
{"title": "Simulation and verification for computational modelling of signalling pathways\n", "abstract": " Modelling of the dynamics of biochemical reaction networks typically proceeds by solving ordinary differential equations or stochastic simulation via the Gillespie algorithm. More recently, computational methods such as process algebra techniques have been successfully applied to the analysis of signalling pathways. One advantage of these is that they enable automatic verification of the models, via model checking, against qualitative and quantitative temporal logic specifications, for example, \"what is the probability that the protein eventually degrades?\". Such verification is exhaustive, that is, the analysis is carried out over all paths, producing exact quantitative measures. In this paper, we give an overview of the simulation, verification and differential equation approaches to modelling biochemical reaction networks. We discuss the advantages and disadvantages of the respective methods, using as an illustration\u00a0\u2026", "num_citations": "50\n", "authors": ["1591"]}
{"title": "Stochastic transition systems for continuous state spaces and non-determinism\n", "abstract": " We study the interaction between non-deterministic and probabilistic behaviour in systems with continuous state spaces, arbitrary probability distributions and uncountable branching. Models of such systems have been proposed previously. Here, we introduce a model that extends probabilistic automata to the continuous setting. We identify the class of schedulers that ensures measurability properties on executions, and show that such measurability properties are preserved by parallel composition. Finally, we demonstrate how these results allow us to define an alternative notion of weak bisimulation in our model.", "num_citations": "48\n", "authors": ["1591"]}
{"title": "Formal analysis and validation of continuous-time markov chain based system level power management strategies\n", "abstract": " We have shown in the past that competitive analysis based power management strategies can be automatically analyzed for proving competitive bounds and for validating power management strategies using the SMV model checker. We show that stochastic modelling based strategies for power management can similarly be automated for computing optimal strategies. Further these can be analyzed for finding system parameters for satisfying probabilistic constraints. Effects of any changes in probabilistic assumptions can be easily analyzed without expensive and time consuming simulations. We demonstrate our methodology using the probabilistic model checker PRISM. We model the system using a continuous-time Markov chain, and compute strategies under varying requirements for performance. We also prove probabilistic properties of strategies using PRISM, which gives insight into individual strategies and\u00a0\u2026", "num_citations": "46\n", "authors": ["1591"]}
{"title": "A testing equivalence for reactive probabilistic processes\n", "abstract": " We consider a generalisation of Larsen and Skou's [19] reactive probabilistic transition systems which exhibit three kinds of choice: action-guarded probabilistic choice, external (deterministic) and internal (non-deterministic) choice. We propose an operational preorder and equivalence for processes based on testing. Milner's button pushing experiments scenario is extended with random experiments by assessing the probability of processes passing a test. Two processes are then identified with respect to the testing equivalence if they pass all tests with the same probability. The derived equivalence is a congruence for a subcalculus of CSP extended with action-guarded probabilistic choice. It is coarser than probabilistic bisimulation, yet non-probabilistic branching-time, and differs from probabilistic equivalences developed for CSP [20,22,26]. We provide a logical characterization of the equivalence in terms of the\u00a0\u2026", "num_citations": "42\n", "authors": ["1591"]}
{"title": "A symbolic out-of-core solution method for Markov models\n", "abstract": " Despite considerable effort, the state-space explosion problem remains an issue in the analysis of Markov models. Given structure, symbolic representations can result in very compact encoding of the models. However, a major obstacle for symbolic methods is the need to store the probability vector(s) explicitly in main memory. In this paper, we present a novel algorithm which relaxes these memory limitations by storing the probability vector on disk. The algorithm has been implemented using an MTBDD-based data structure to store the matrix and an array to store the vector. We report on experimental results for two benchmark models, a Kanban manufacturing system and a flexible manufacturing system, with models as large as 133 million states.", "num_citations": "41\n", "authors": ["1591"]}
{"title": "Probabilistic metric semantics for a simple language with recursion\n", "abstract": " We consider a simple divergence-free language RP for reactive processes which includes prefixing, deterministic choice, actionguarded probabilistic choice, synchronous parallel and recursion. We show that the probabilistic bisimulation of Larsen & Skou is a congruence for this language. Following the methodology introduced by de Bakker & Zucker we give denotational semantics to this language by means of a complete metric space of (deterministic) probabilistic trees defined in terms of the powerdomain of closed sets. This new metric, although not an ultra-metric, nevertheless specialises to the metric of de Bakker & Zucker. Our semantic domain admits a full abstraction result with respect to probabilistic bisimulation.", "num_citations": "41\n", "authors": ["1591"]}
{"title": "Practical applications of probabilistic model checking to communication protocols\n", "abstract": " Probabilistic model checking is a formal verification technique for the analysis of systems that exhibit stochastic behaviour. It has been successfully employed in an extremely wide array of application domains including, for example, communication and multimedia protocols, security and power management. In this chapter we focus on the applicability of these techniques to the analysis of communication protocols. An analysis of the performance of such systems must successfully incorporate several crucial aspects, including concurrency between multiple components, real-time constraints and randomisation. Probabilistic model checking, in particular using probabilistic timed automata, is well suited to such an analysis. We provide an overview of this area, with emphasis on an industrially relevant case study: the IEEE 802.3 (CSMA/CD) protocol. We also discuss two contrasting approaches to the implementation of probabilistic model checking, namely those based on numerical computation and those based on discrete-event simulation. Using results from the two tools PRISM and APMC, we summarise the advantages, disadvantages and trade-offs associated with these techniques.", "num_citations": "40\n", "authors": ["1591"]}
{"title": "Probabilistic model checking: Advances and applications\n", "abstract": " Probabilistic model checking is a powerful technique for formally verifying quantitative properties of systems that exhibit stochastic behaviour. Such systems are found in many application domains: for example, probabilistic behaviour may arise due to the presence of failures in unreliable hardware, message loss in wireless communication channels, or the use of randomisation in distributed protocols. This chapter starts with an introduction to the technique of probabilistic model checking. We then survey some recent advances in the area, including controller synthesis, compositional verification, probabilistic real-time systems and parametric model checking. We illustrate the application of the various techniques with a combination of toy examples and descriptions of larger case studies. The chapter concludes with a discussion of some of the key challenges in the field.", "num_citations": "39\n", "authors": ["1591"]}
{"title": "Quantitative verification: Formal guarantees for timeliness, reliability and performance\n", "abstract": " Computerised systems appear in almost all aspects of our daily lives, often in safety-critical scenarios such as embedded control systems in cars and aircraft or medical devices such as pacemakers and sensors. We are thus increasingly reliant on these systems working correctly, despite often operating in unpredictable or unreliable environments. Designers of such devices need ways to guarantee that they will operate in a reliable and efficient manner.  Quantitative verification is a technique for analysing quantitative aspects of a system's design, such as timeliness, reliability or performance. It applies formal methods, based on a rigorous analysis of a mathematical model of the system, to automatically prove certain precisely specified properties, e.g. ``the airbag will always deploy within 20 milliseconds after a crash'' or ``the probability of both sensors failing simultaneously is less than 0.001''.  The ability to formally guarantee quantitative properties of this kind is beneficial across a wide range of application domains. For example, in safety-critical systems, it may be essential to establish credible bounds on the probability with which certain failures or combinations of failures can occur. In embedded control systems, it is often important to comply with strict constraints on timing or resources. More generally, being able to derive guarantees on precisely specified levels of performance or efficiency is a valuable tool in the design of, for example, wireless networking protocols, robotic systems or power management algorithms, to name but a few.  This report gives a short introduction to quantitative verification, focusing in particular on a widely used\u00a0\u2026", "num_citations": "39\n", "authors": ["1591"]}
{"title": "Compositional probabilistic verification through multi-objective model checking\n", "abstract": " Compositional approaches to verification offer a powerful means to address the challenge of scalability. In this paper, we develop techniques for compositional verification of probabilistic systems based on the assume-guarantee paradigm. We target systems that exhibit both nondeterministic and stochastic behaviour, modelled as probabilistic automata, and augment these models with costs or rewards to reason about, for example, energy usage or performance metrics. Despite significant theoretical advances in compositional reasoning for probabilistic automata, there has been a distinct lack of practical progress regarding automated verification. We propose a new assume-guarantee framework based on multi-objective probabilistic model checking which supports compositional verification for a range of quantitative properties, including probabilistic \u03c9-regular specifications and expected total cost or reward\u00a0\u2026", "num_citations": "39\n", "authors": ["1591"]}
{"title": "Probabilistic mobile ambients\n", "abstract": " The calculus of Mobile Ambients has been introduced for expressing mobility and mobile computation. In this paper we present a probabilistic version of Mobile Ambients by augmenting the syntax of the original Ambient Calculus with a (guarded) probabilistic choice operator. To allow for the representation of both the probabilistic behaviour introduced through the new probabilistic choice operator and the nondeterminism present in the original Ambient Calculus we use probabilistic automata as the underpinning semantic model. The Ambient logic is a logic for Mobile Ambients that contains a novel treatment of both locations and hidden names. For specifying properties of Probabilistic Mobile Ambients, we extend this logic to specify probabilistic behaviour. In addition, to show the utility of our approach we present an example of a virus infecting a network.", "num_citations": "39\n", "authors": ["1591"]}
{"title": "Verifying randomized Byzantine agreement\n", "abstract": " Distributed systems increasingly rely on fault-tolerant and secure authorization services. An essential primitive used to implement such services is the Byzantine agreement protocol for achieving agreement among n parties even if t parties (t< n/3) are corrupt and behave maliciously. We describe our experience verifying the randomized protocol ABBA (Asynchronous Binary Byzantine Agreement) of Cachin, Kursawe and Shoup [5], a practical protocol that incorporates modern threshold-cryptographic techniques and forms a core of powerful asynchronous broadcast protocols [4]. The protocol is efficient (runs in constant expected time), optimal (it tolerates the maximum number of corrupted parties) and provably secure (in the random oracle model). We model the protocol in Cadence SMV, replacing the coin tosses with nondeterministic choice, and provide a proof of the protocol correctness for all n under the assumption that the cryptographic primitives are correct. The proof is fully automated except for one high-level inductive argument involving probabilistic reasoning. We validate probabilistic reasoning through deriving abstractions for finite configurations (for n up to 20) and model checking those with the probabilistic model checker PRISM.", "num_citations": "38\n", "authors": ["1591"]}
{"title": "Symbolic computation of maximal probabilisti reachability\n", "abstract": " We study the maximal reachability probability problem for infinite-state systems featuring both nondeterministic and probabilistic choice. The problem involves the computation of the maximal probability of reaching a given set of states, and underlies decision procedures for the automatic verification of probabilistic systems. We extend the framework of symbolic transition systems, which equips an infinite-state system with an algebra of symbolic operators on its state space, with a symbolic encoding of probabilistic transitions to obtain a model for an infinite-state probabilistic system called a symbolic probabilistic system. An exact answer to the maximal reachability probability problem for symbolic probabilistic systems is obtained algorithmically via iteration of a refined version of the classical predecessor operation, combined with intersection operations. As in the non-probabilistic case, our state space\u00a0\u2026", "num_citations": "36\n", "authors": ["1591"]}
{"title": "Model checking probabilistic and stochastic extensions of the \u03c0-calculus\n", "abstract": " We present an implementation of model checking for probabilistic and stochastic extensions of the pi-calculus, a process algebra which supports modelling of concurrency and mobility. Formal verification techniques for such extensions have clear applications in several domains, including mobile ad-hoc network protocols, probabilistic security protocols and biological pathways. Despite this, no implementation of automated verification exists. Building upon the pi-calculus model checker MMC, we first show an automated procedure for constructing the underlying semantic model of a probabilistic or stochastic pi-calculus process. This can then be verified using existing probabilistic model checkers such as PRISM. Secondly, we demonstrate how for processes of a specific structure a more efficient, compositional approach is applicable, which uses our extension of MMC on each parallel component of the system and\u00a0\u2026", "num_citations": "34\n", "authors": ["1591"]}
{"title": "Analysing randomized distributed algorithms\n", "abstract": " Randomization is of paramount importance in practical applications and randomized algorithms are used widely, for example in co-ordinating distributed computer networks, message routing and cache management. The appeal of randomized algorithms is their simplicity and elegance. However, this comes at a cost: the analysis of such systems become very complex, particularly in the context of distributed computation. This arises through the interplay between probability and nondeterminism. To prove a randomized distributed algorithm correct one usually involves two levels: classical, assertion-based reasoning, and a probabilistic analysis based on a suitable probability space on computations. In this paper we describe a number of approaches which allows us to verify the correctness of randomized distributed algorithms.", "num_citations": "33\n", "authors": ["1591"]}
{"title": "Model checking expected time and expected reward formulae with random time bounds\n", "abstract": " In this paper, we extend CSL (continuous stochastic logic) with an expected time and an expected reward operator, both of which are parameterized by a random terminal time. With the help of such operators we can state, for example, that the expected sojourn time in a set of goal states within some generally distributed delay is at most (at least) some time threshold. In addition, certain performance measures of systems which contain general distributions can be calculated with the aid of this extended logic. We extend the efficient model checking of CTMCs against the logic CSL developed by Katoen et al. [1] to cater for the new operator. Our method involves precomputing a family of mixed Poisson expected sojourn time coefficients for a range of random variables which includes Pareto, uniform and gamma distributions, but otherwise carries the same computational cost as calculating CSL until formulae.", "num_citations": "32\n", "authors": ["1591"]}
{"title": "Solving infinite stochastic process algebra models through matrix-geometric methods\n", "abstract": " We introduce a Stochastic Process Algebra called PEPA1 ph, based on Hillston's PEPA 6]. PEPA1 ph is suitable for describing the behaviour of certain kinds of networks of queues, such as P h= P h= c and M= Ph= 1, and calculating performance measures for those. The activities of PEPA1 ph components have durations given by Phase distributions introduced by Neuts 11]. To overcome the state space explosion that arises when solving the models through the underlying Markov process we instead use the Matrix-Geometric Method 11]. Though the method proposed here can only be applied to a fragment of PEPA1 ph because of its dependence on the structure of the system (which must consist of initial and repetitive portions), we can solve models with in nitely many arrivals, in contrast to the approaches used in SPAs such as PEPA 6], TIPP 12] and EMPA 1, 2].", "num_citations": "32\n", "authors": ["1591"]}
{"title": "Game-based abstraction and controller synthesis for probabilistic hybrid systems\n", "abstract": " We consider a class of hybrid systems that involve random phenomena, in addition to discrete and continuous behaviour. Examples of such systems include wireless sensing and control applications. We propose and compare two abstraction techniques for this class of models, which yield lower and upper bounds on the optimal probability of reaching a particular class of states. We also demonstrate the applicability of these abstraction techniques to the computation of long-run average reward properties and the synthesis of controllers. The first of the two abstractions yields more precise information, while the second is easier to construct. For the latter, we demonstrate how existing solvers for hybrid systems can be leveraged to perform the computation.", "num_citations": "31\n", "authors": ["1591"]}
{"title": "Game-based probabilistic predicate abstraction in PRISM\n", "abstract": " Modelling and verification of systems such as communication, network and security protocols, which exhibit both probabilistic and non-deterministic behaviour, typically use Markov Decision Processes (MDPs). For large, complex systems, abstraction techniques are essential. This paper builds on a promising approach for abstraction of MDPs based on stochastic two-player games which provides distinct lower and upper bounds for minimum and maximum probabilistic reachability properties. Existing implementations work at the model level, limiting their scalability. In this paper, we develop language-level abstraction techniques that build game-based abstractions of MDPs directly from high-level descriptions in the PRISM modelling language, using predicate abstraction and SMT solvers. For efficiency, we develop a compositional framework for abstraction. We have applied our techniques to a range of case\u00a0\u2026", "num_citations": "31\n", "authors": ["1591"]}
{"title": "Analysis of stochastic matching markets\n", "abstract": " Suppose that the agents of a matching market contact each other randomly and form new pairs if is in their interest. Does such a process always converge to a stable matching if one exists? If so, how quickly? Are some stable matchings more likely to be obtained by this process than others? In this paper we are going to provide answers to these and similar questions, posed by economists and computer scientists. In the first part of the paper we give an alternative proof for the theorems by Diamantoudi et\u00a0al. and Inarra et\u00a0al., which imply that the corresponding stochastic processes are absorbing Markov chains. The second part of the paper proposes new techniques to analyse the behaviour of matching markets. We introduce the Stable Marriage and Stable Roommates Automaton and show how the probabilistic model checking tool PRISM may be used to predict the outcomes of stochastic interactions\u00a0\u2026", "num_citations": "30\n", "authors": ["1591"]}
{"title": "Concavely-priced probabilistic timed automata\n", "abstract": " Concavely-priced probabilistic timed automata, an extension of probabilistic timed automata, are introduced. In this paper we consider expected reachability, discounted, and average price problems for concavely-priced probabilistic timed automata for arbitrary initial states. We prove that these problems are EXPTIME-complete for probabilistic timed automata with two or more clocks and PTIME-complete for automata with one clock. Previous work on expected price problems for probabilistic timed automata was restricted to expected reachability for linearly-priced automata and integer valued initial states. This work uses the boundary region graph introduced by Jurdzi\u0144ski and Trivedi to analyse properties of concavely-priced (non-probabilistic) timed automata.", "num_citations": "30\n", "authors": ["1591"]}
{"title": "Bisimulation for demonic schedulers\n", "abstract": " Bisimulation between processes has been proven a successful method for formalizing security properties. We argue that in certain cases, a scheduler that has full information on the process and collaborates with the attacker can allow him to distinguish two processes even though they are bisimilar. This phenomenon is related to the issue that bisimilarity is not preserved by refinement. As a solution, we introduce a finer variant of bisimulation in which processes are required to simulate each other under the \u201csame\u201d scheduler. We formalize this notion in a variant of CCS with explicit schedulers and show that this new bisimilarity can be characterized by a refinement-preserving traditional bisimilarity. Using a third characterization of this equivalence, we show how to verify it for finite systems. We then apply the new equivalence to anonymity and show that it implies strong probabilistic anonymity, while the\u00a0\u2026", "num_citations": "29\n", "authors": ["1591"]}
{"title": "Model checking CSL until formulae with random time bounds\n", "abstract": " Continuous Time Markov Chains (CTMCs) are widely used as the underlying stochastic process in performance and dependability analysis. Model checking of CTMCs against Continuous Stochastic Logic (CSL) has been investigated previously by a number of authors [2,4,13]. CSL contains a time-bounded until operator that allows one to express properties such as \u201cthe probability of 3 servers becoming faulty within 7.01 seconds is at most 0.1\u201d. In this paper we extend CSL with a random time-bounded until operator, where the time bound is given by a random variable instead of a fixed real-valued time (or interval). With the help of such an operator we can state that the probability of reaching a set of goal states within some generally distributed delay while passing only through states that satisfy a certain property is at most (at least) some probability threshold. In addition, certain transient properties of\u00a0\u2026", "num_citations": "27\n", "authors": ["1591"]}
{"title": "Verifying randomized distributed algorithms with prism\n", "abstract": " In this paper we describe our experience with model checking randomized distributed algorithms using PRISM, a symbolic model checker for concurrent probabilistic systems currently being developed. PRISM uses Multi-Terminal Binary Decision Diagrams (MTBDDs) as supplied by the CUDD package of Fabio Somenzi. Implemented in Java, PRISM has a system description language similar to Reactive Modules and supports model checking of probabilistic temporal logic PCTL (also under fairness constraints). Our experiments indicate that using the BDD variable ordering induced from the Kronecker representation yields very efficient MTBDD representations of randomized distributed algorithms. In particular, we are able to construct models of up to 1030 states in seconds. Model checking of \u2018with probability 1\u2019PCTL properties is also fast. The efficiency of numerical computation with MTBDDs, however, and hence also model checking of quantitative probabilistic temporal logic properties, is still considerably poorer than eg for sparse matrices. Descriptions and statistics obtained for several case studies can be found at http://www. cs. bham. ac. uk/~ dxp/prism.", "num_citations": "27\n", "authors": ["1591"]}
{"title": "PRISM-games 3.0: Stochastic game verification with concurrency, equilibria and time\n", "abstract": " We present a major new release of the PRISM-games model checker, featuring multiple significant advances in its support for verification and strategy synthesis of stochastic games. Firstly, concurrent stochastic games bring more realistic modelling of agents interacting in a concurrent fashion. Secondly, equilibria-based properties provide a means to analyse games in which competing or collaborating players are driven by distinct objectives. Thirdly, a real-time extension of (turn-based) stochastic games facilitates verification and strategy synthesis for systems where timing is a crucial aspect. This paper describes the advances made in the tool\u2019s modelling language, property specification language and model checking engines in order to implement this new functionality. We also summarise the performance and scalability of the tool, and describe a selection of case studies, ranging from security protocols to robot\u00a0\u2026", "num_citations": "26\n", "authors": ["1591"]}
{"title": "Modelling and verification of probabilistic systems\n", "abstract": " Model checking for probability and time: from theory to practice Page 1 Modelling and verification of probabilistic systems Marta Kwiatkowska School of Computer Science www.cs.bham.ac.uk/~mzk www.cs.bham.ac.uk/~dxp/prism Lucent, 10th November 2004 Page 2 Overview \u2022 Motivation \u2022 Probabilistic model checking \u2013 The models \u2013 Specification languages \u2013 What does it involve? \u2013 The PRISM model checker \u2022 Case studies \u2013 Self-stabilisation \u2013 Dynamic power management \u2013 IPv4 Zeroconf dynamic configuration protocol \u2013 Root contention in IEEE 1394 FireWire \u2022 Challenges for future Page 3 The future: ubiquitous computing Mobile, wearable, wireless devices (WiFi, Bluetooth) Ad hoc, dynamic, ubiquitous computing environment Security, privacy, anonymity protection on the Internet Self-configurable - no need for men/women in white coats! Fast, responsive, power efficient, \u2026 The Internet Correct design a \u2026", "num_citations": "26\n", "authors": ["1591"]}
{"title": "A framework for verification of software with time and probabilities\n", "abstract": " Quantitative verification techniques are able to establish system properties such as \u201cthe probability of an airbag failing to deploy on demand\u201d or \u201cthe expected time for a network protocol to successfully send a message packet\u201d. In this paper, we describe a framework for quantitative verification of software that exhibits both real-time and probabilistic behaviour. The complexity of real software, combined with the need to capture precise timing information, necessitates the use of abstraction techniques. We outline a quantitative abstraction refinement approach, which can be used to automatically construct and analyse abstractions of probabilistic, real-time programs. As a concrete example of the potential applicability of our framework, we discuss the challenges involved in applying it to the quantitative verification of SystemC, an increasingly popular system-level modelling language.", "num_citations": "25\n", "authors": ["1591"]}
{"title": "Symbolic model checking of concurrent probabilistic systems using MTBDDs and Simplex\n", "abstract": " Symbolic model checking for purely probabilistic processes using MTBDDs [12] was introduced in [4] and further developed in [20, 3]. In this paper we consider models for concurrent probabilistic systems similar to those of [28, 7, 5] and the concurrent Markov chains of [35, 13], which extend the purely probabilistic processes through the addition of nondeterministic choice. As a specification formalism we use probabilistic branchingtime temporal logic PBTL of [5, 7], which allows to express properties such as \u201cunder any scheduling of nondeterministic choices, the probability of \u03c6 holding until \u03c8 is true is at least 0.78\u201d. In [5, 7] it is shown that the verification of \u201cuntil\u201d properties can be reduced to a linear programming problem and solved with the help of eg the simplex algorithm, but no symbolic model checking is considered. Based on the algorithms of [5, 7], we derive symbolic model checking procedure for PBTL over concurrent probabilistic systems using MTBDDs. We furthermore implement an experimental model checker using the Colorado University Decision Diagrams (CUDD) package [32]. Our key contribution is an implementation of the simplex algorithm in terms of MTBDDs.", "num_citations": "25\n", "authors": ["1591"]}
{"title": "Metric semantics for reactive probabilistic processes\n", "abstract": " In this thesis we present three mathematical frameworks for the modelling of reactive probabilistic communicating processes. We first introduce generalised labelled transition systems as a model of such processes and introduce an equivalence, coarser than probabilistic bisimulation, over these systems. Two processes are identified with respect to this equivalence if, for all experiments, the probabilities of the respective processes passing a given experiment are equal. We next consider a probabilistic process calculus including external choice, internal choice, action-guarded probabilistic choice, synchronous parallel and recursion. We give operational semantics for this calculus be means of our generalised labelled transition systems and show that our equivalence is a congruence for this language. Following the methodology introduced by de Bakker & Zucker, we then give denotational semantics to the calculus by means of a complete metric space of probabilistic processes. The derived metric, although not an ultra-metric, satisfies the intuitive property that the distance between two processes tends to 0 if a measure of the differences of their observable behaviour also tends to 0. We show that the denotational model is fully abstract with respect to our equivalence. We also provide a logical characterisation of the process equivalence by means of a variant of the quantitative Hennessy-Milner Logic (HML), where each HML formula is interpreted as the probability of it being satisfied by the process instead of the usual truth value. Two processes are then shown equivalent if, and only if, they agree on the quantities assigned to all HML formulae.", "num_citations": "25\n", "authors": ["1591"]}
{"title": "Model checking the probabilistic pi-calculus\n", "abstract": " We present an implementation of model checking for the probabilistic pi-calculus-calculus, a process algebra which supports modelling of concurrency, mobility and discrete probabilistic behaviour. Formal verification techniques for this calculus have clear applications in several domains, including mobile ad-hoc network protocols and random security protocols. Despite this, no implementation of automated verification exists. Building upon the (non-probabilistic) pi-calculus model checker MMC, we first show an automated procedure for constructing the Markov decision process representing a probabilistic pi-calculus process. This can then be verified using existing probabilistic model checkers such as PRISM. Secondly, we demonstrate how for a large class of systems a more efficient, compositional approach can be applied, which uses our extension of MMC on each parallel component of the system and then\u00a0\u2026", "num_citations": "24\n", "authors": ["1591"]}
{"title": "PRISM 2.0 users\u2019 guide\n", "abstract": " PRISM is a probabilistic model checker. It allows you to model and analyse systems which exhibit probabilistic behaviour. Essentially, the tool requires two inputs: a description of the system to be analysed; and a set of properties to be checked against that system. The system to be modelled is described in the PRISM language, a simple, state-based specification language. This is described in Section 3. From this description, PRISM constructs a probabilistic model, either:\u2022 a discrete-time Markov chain (DTMC),\u2022 a Markov decision process (MDP), or\u2022 a continuous-time Markov chain (CTMC).", "num_citations": "19\n", "authors": ["1591"]}
{"title": "Automated verification of concurrent stochastic games\n", "abstract": " We present automatic verification techniques for concurrent stochastic multi-player games (CSGs) with rewards. To express properties of such models, we adapt the temporal logic rPATL (probabilistic alternating-time temporal logic with rewards), originally introduced for the simpler model of turn-based games, which enables quantitative reasoning about the ability of coalitions of players to achieve goals related to the probability of an event or reward measures. We propose and implement a modelling approach and model checking algorithms for property verification and strategy synthesis of CSGs, as an extension of PRISM-games. We evaluate the performance, scalability and applicability of our techniques on case studies from domains such as security, networks and finance, showing that we can analyse systems with probabilistic, cooperative and competitive behaviour between concurrent components\u00a0\u2026", "num_citations": "17\n", "authors": ["1591"]}
{"title": "Symbolic model checking of probabilistic timed automata using backwards reachability\n", "abstract": " We consider probabilistic timed automata of [13], an extension of the timed automata model of [2] with discrete probability distributions. In contrast to timed automata, which model real-time systems purely in terms of nondeterminism, our model allows to express the likelihood of the system making certain transitions, and is thus appropriate for modelling fault-tolerance and probabilistic failures. We present a symbolic model checking algorithm for the existential fragment of the logic PTCTL of [13] based on backward reachability as in [12]. The logic allows us to specify properties such as \u201cwith probability 0.99 or greater, it is possible to correctly deliver a data packet within 5 time units\u201d, or \u201cwith probability 0.87 or greater, the system never enters an error state\u201d.", "num_citations": "17\n", "authors": ["1591"]}
{"title": "Equilibria-based probabilistic model checking for concurrent stochastic games\n", "abstract": " Probabilistic model checking for stochastic games enables formal verification of systems that comprise competing or collaborating entities operating in a stochastic environment. Despite good progress in the area, existing approaches focus on zero-sum goals and cannot reason about scenarios where entities are endowed with different objectives. In this paper, we propose probabilistic model checking techniques for concurrent stochastic games based on Nash equilibria. We extend the temporal logic rPATL (probabilistic alternating-time temporal logic with rewards) to allow reasoning about players with distinct quantitative goals, which capture either the probability of an event occurring or a reward measure. We present algorithms to synthesise strategies that are subgame perfect social welfare optimal Nash equilibria, i.e., where there is no incentive for any players to unilaterally change their strategy in any state of\u00a0\u2026", "num_citations": "16\n", "authors": ["1591"]}
{"title": "Mathematical modelling of trust issues in federated identity management\n", "abstract": " With the absence of physical evidence, the concept of trust plays a crucial role in the proliferation and popularisation of online services. In fact, trust is the inherent quality that binds together all involved entities and provides the underlying confidence that allows them to interact in an online setting. The concept of Federated Identity Management (FIM) has been introduced with the aim of allowing users to access online services in a secure and privacy-friendly way and has gained considerable popularities in recent years. Being a technology targeted for online services, FIM is also bound by a set of trust requirements. Even though there have been numerous studies on the mathematical representation, modelling and analysis of trust issues in online services, a comprehensive study focusing on the mathematical modelling and analysis of trust issues in FIM is still absent. In this paper we aim to address this\u00a0\u2026", "num_citations": "15\n", "authors": ["1591"]}
{"title": "Quantitative verification techniques for biological processes\n", "abstract": " Probabilistic model checking is a formal verification framework for systems which exhibit stochastic behavior. It has been successfully applied to a wide range of domains, including security and communication protocols, distributed algorithms and power management. In this chapter, we demonstrate its applicability to the analysis of biological pathways and show how it can yield a better understanding of the dynamics of these systems. Through a case study of the Mitogen-Activated Protein (MAP), Kinase cascade, we explain how biological pathways can be modeled in the probabilistic model checker PRISM and how this enables the analysis of a rich selection of quantitative properties.", "num_citations": "15\n", "authors": ["1591"]}
{"title": "Strategy synthesis for autonomous agents using PRISM\n", "abstract": " We present probabilistic models for autonomous agent search and retrieve missions derived from Simulink models for an Unmanned Aerial Vehicle (UAV) and show how probabilistic model checking and the probabilistic model checker PRISM can be used for optimal controller generation. We introduce a sequence of scenarios relevant to UAVs and other autonomous agents such as underwater and ground vehicles. For each scenario we demonstrate how it can be modelled using the PRISM language, give model checking statistics and present the synthesised optimal controllers. We conclude with a discussion of the limitations when using probabilistic model checking and PRISM in this context and what steps can be taken to overcome them. In addition, we consider how the controllers can be returned to the UAV and adapted for use on larger search areas.", "num_citations": "14\n", "authors": ["1591"]}
{"title": "Controller dependability analysis by probabilistic model checking\n", "abstract": " We demonstrate how probabilistic model checking, a formal verification method for the analysis of systems which exhibit stochastic behaviour, can be applied to the study of dependability properties of software-based control systems. We provide an overview of these techniques and of the probabilistic model checking tool PRISM, illustrating the usefulness of the approach through a small case study. By using existing formalisms and tool support, we show how it is possible to construct large and complex Markov models from an intuitive highlevel description. Furthermore, we are able to take advantage of the efficient implementation techniques which have been developed for these tools.", "num_citations": "14\n", "authors": ["1591"]}
{"title": "Autonomous agent behaviour modelled in PRISM\u2013A case study\n", "abstract": " Formal verification of agents representing robot behaviour is a growing area due to the demand that autonomous systems have to be proven safe. In this paper we present an abstract definition of autonomy which can be used to model autonomous scenarios and propose the use of small-scale simulation models representing abstract actions to infer quantitative data. To demonstrate the applicability of the approach we build and verify a model of an unmanned aerial vehicle (UAV) in an exemplary autonomous scenario, utilising this approach.", "num_citations": "13\n", "authors": ["1591"]}
{"title": "Mathematical modelling of identity, identity management and other related topics\n", "abstract": " There exist disparate sets of definitions with different semantics on different topics of Identity Management which often lead to misunderstanding. A few efforts can be found compiling several related vocabularies into a single place to build up a set of definitions based on a common semantic. However, these efforts are not comprehensive and are only textual in nature. In essence, a mathematical model of identity and identity management covering all its aspects is still missing. In this paper we build up a mathematical model of different core topics covering a wide range of vocabularies related to Identity Management. At first we build up a mathematical model of Digital Identity. Then we use the model to analyse different aspects of Identity Management. Finally, we discuss three applications to illustrate the applicability of our approach. Being based on mathematical foundations, the approach can be used to build up a\u00a0\u2026", "num_citations": "13\n", "authors": ["1591"]}
{"title": "Expected reachability-time games\n", "abstract": " In an expected reachability-time game (ERTG) two players, Min and Max, move a token along the transitions of a probabilistic timed automaton, so as to minimise and maximise, respectively, the expected time to reach a target. These games are concurrent since at each step of the game both players choose a timed move (a time delay and action under their control), and the transition of the game is determined by the timed move of the player who proposes the shorter delay. A game is turn-based if at any step of the game, all available actions are under the control of precisely one player. We show that while concurrent ERTGs are not always determined, turn-based ERTGs are positionally determined. Using the boundary region graph abstraction, and a generalisation of Asarin and Maler\u2019s simple function, we show that the decision problems related to computing the upper/lower values of concurrent ERTGs\u00a0\u2026", "num_citations": "13\n", "authors": ["1591"]}
{"title": "A fully abstract metric-space denotational semantics for reactive probabilistic processes\n", "abstract": " We consider the calculus of Communicating Sequential Processes (CSP) 8] extended with action-guarded probabilistic choice and provide it with an operational semantics in terms of a suitable extension of Larsen and Skou's 14] reactive probabilistic transition systems. We show that a testing equivalence which identi es two processes if they pass all tests with the same probability is a congruence for a subcalculus of CSP including external and internal choice and the synchronous parallel. Using the methodology of de Bakker and Zucker 3] introduced for classical process calculi, we derive a metric-space semantic model for the calculus and show it is fully abstract.", "num_citations": "13\n", "authors": ["1591"]}
{"title": "Verification and control of partially observable probabilistic real-time systems\n", "abstract": " We propose automated techniques for the verification and control of probabilistic real-time systems that are only partially observable. To formally model such systems, we define an extension of probabilistic timed automata in which local states are partially visible to an observer or controller. We give a probabilistic temporal logic that can express a range of quantitative properties of these models, relating to the probability of an event\u2019s occurrence or the expected value of a reward measure. We then propose techniques to either verify that such a property holds or to synthesise a controller for the model which makes it true. Our approach is based on an integer discretisation of the model\u2019s dense-time behaviour and a grid-based abstraction of the uncountable belief space induced by partial observability. The latter is necessarily approximate since the underlying problem is undecidable, however we show how\u00a0\u2026", "num_citations": "12\n", "authors": ["1591"]}
{"title": "Verification of real-time probabilistic systems\n", "abstract": " In this chapter, we consider verification techniques for a particular class of realtime systems: those which incorporate probabilistic characteristics. This can come from a number of possible sources, for example, unpredictable behaviour resulting from the failure of components of a system, or random choices made according to the", "num_citations": "12\n", "authors": ["1591"]}
{"title": "Symbolic magnifying lens abstraction in Markov decision processes\n", "abstract": " In this paper, we combine abstraction-refinement and symbolic techniques to fight the state-space explosion problem when model checking Markov decision processes (MDPs). The abstract-refinement technique, called \"magnifying-lens abstraction\" (MLA), partitions the state-space into regions and computes upper and lower bounds for reachability and safety properties on the regions, rather than the states. To compute such bounds, MLA iterates over the regions, analyzing the concrete states of each region in turn - as if one was sliding a magnifying lens across the system to view the states. The algorithm adaptively refines the regions, using smaller regions where more detail is required, until the difference between the bounds is below a specified accuracy. The symbolic technique is based on multi-terminal binary decision diagrams (MTBDDs) which have been used extensively to provide compact encodings of\u00a0\u2026", "num_citations": "11\n", "authors": ["1591"]}
{"title": "Model checking expected time and expected reward formulae with random time bounds\n", "abstract": " In this paper we extend CSL (Continuous Stochastic Logic) with an expected time and an expected reward operator, both of which are parameterized by a random terminal time. With the help of such operators we can state for example that the expected sojourn time in a set of goal states within some generally distributed delay is at most (at least) some time threshold. In addition, certain performance measures of systems which contain general distributions can be calculated with the aid of this extended logic. We extend the ecient model checking of CTMCs against the logic CSL developed by Katoen et al.[1] to cater for the new operator. Our method involves precomputing a family of mixed Poisson expected sojourn time coecients for a range of random variables which includes Pareto, uniform and gamma distributions, but otherwise carries the same computational cost as calculating CSL until formulae.", "num_citations": "11\n", "authors": ["1591"]}
{"title": "Enhancing theoretical understanding of a practical biology course using active and self-directed learning strategies\n", "abstract": " Laboratories are recognised as central in science education, allowing students to consolidate knowledge and master practical skills, however, their effectiveness has been questioned. Whilst laboratory practicals are useful for students\u2019 learning of basic procedures, they have been shown to be less effective for developing conceptual understanding of the subject. Interactive lectures and bespoke digital resources were utilised in order to enhance theoretical understanding of laboratory practical molecular sessions, thus enabling students to take responsibility for and direct their own learning, encouraging inquiry-based learning. Providing easy to access additional learning resources offered students an opportunity to better prepare themselves for the laboratory, and consolidate their knowledge through subsequent review and self-testing in their own time. Grades before and after implementation of these active\u00a0\u2026", "num_citations": "9\n", "authors": ["1591"]}
{"title": "Symbolic optimal expected time reachability computation and controller synthesis for probabilistic timed automata\n", "abstract": " In this paper we consider the problem of computing the optimal (minimum or maximum) expected time to reach a target and the synthesis of an optimal controller for a probabilistic timed automaton (PTA). Although this problem admits solutions that employ the digital clocks abstraction or statistical model checking, symbolic methods based on zones and priced zones fail due to the difficulty of incorporating probabilistic branching in the context of dense time. We work in a generalisation of the setting introduced by Asarin and Maler for the corresponding problem for timed automata, where simple and nice functions are introduced to ensure finiteness of the dense-time representation. We find restrictions sufficient for value iteration to converge to the optimal expected time on the uncountable Markov decision process representing the semantics of a PTA. We formulate Bellman operators on the backwards zone graph of a\u00a0\u2026", "num_citations": "9\n", "authors": ["1591"]}
{"title": "Probabilistic model checking and power-aware computing\n", "abstract": " Probabilistic Model Checking and Power Aware Computing Page 1 Probabilistic Model Checking and Power Aware Computing Marta Kwiatkowska Gethin Norman Dave Parker University of Birmingham PMCCS'05, September 2005 Page 2 Overview \u25cf Probabilistic model checking \u2013 probabilistic models \u2013 types of model analysis \u2013 tool support: PRISM \u25cf Case studies \u2013 dynamic power management \u2013 dynamic voltage scaling Page 3 Probabilistic Model Checking \u25cf Automatic formal verification of probabilistic systems Prob. model checker Probabilistic model Probabilistic specification Result \u201cyes\u201d, \u201cno\u201d, probabilities, ... eg Markov chain Temporal logic, eg CSL eg PRISM Page 4 Probabilistic Models \u25cf Discrete-time Markov chains (DTMCs) \u2013 time modelled in discrete steps \u2013 transition probability matrix: P : S x S \u2192 [0,1] \u25cf Continuous-time Markov chains (CTMCs) \u2013 continuous (real-valued) model of time \u2013 transition \u2026", "num_citations": "9\n", "authors": ["1591"]}
{"title": "Verification and control of turn-based probabilistic real-time games\n", "abstract": " Quantitative verification techniques have been developed for the formal analysis of a variety of probabilistic models, such as Markov chains, Markov decision process and their variants. They can be used to produce guarantees on quantitative aspects of system behaviour, for example safety, reliability and performance, or to help synthesise controllers that ensure such guarantees are met. We propose the model of turn-based probabilistic timed multi-player games, which incorporates probabilistic choice, real-time clocks and nondeterministic behaviour across multiple players. Building on the digital clocks approach for the simpler model of probabilistic timed automata, we show how to compute the key measures that underlie quantitative verification, namely the probability and expected cumulative price to reach a target. We illustrate this on case studies from computer security and task scheduling.", "num_citations": "8\n", "authors": ["1591"]}
{"title": "Symbolic minimum expected time controller synthesis for probabilistic timed automata\n", "abstract": " In this paper we consider the problem of computing the minimum expected time to reach a target and the synthesis of the corresponding optimal controller for a probabilistic timed automaton (PTA). Although this problem admits solutions that employ the digital clocks abstraction or statistical model checking, symbolic methods based on zones and priced zones fail due to the difficulty of incorporating probabilistic branching in the context of dense time. We work in a generalisation of the setting introduced by Asarin and Maler for the corresponding problem for timed automata, where simple and nice functions are introduced to ensure finiteness of the dense-time representation. We find restrictions sufficient for value iteration to converge to the minimum expected time on the uncountable Markov decision process representing the semantics of a PTA. We formulate a Bellman operator on the backwards zone graph of a\u00a0\u2026", "num_citations": "7\n", "authors": ["1591"]}
{"title": "PCTL model checking of symbolic probabilistic systems\n", "abstract": " Probabilistic model checking is a method for automatically verifying that a probabilistic system satisfies a property with a given likelihood, with the probabilistic temporal logic Pctl being a common choice for the property specification language. In this paper, we explore methods for model checking Pctl properties of infinite-state systems in which probabilistic and nondeterministic behaviour coexist. Building on previous work on computing the maximum probability with which a state set is reached in such systems, we utilize symbolic operations on the state sets to generate a finite-state version of the system on which the Pctl model checking problem can be answered. As in the non-probabilistic case, our model checking algorithm is semi-decidable for infinite-state systems. We illustrate our technique using the formalism of probabilistic timed automata, for which previous Pctl model checking techniques were based on an unnecessarily fine subdivisions of the state space.", "num_citations": "7\n", "authors": ["1591"]}
{"title": "Probabilistic model checking\n", "abstract": " Probabilistic model checking Page 1 Probabilistic model checking Marta Kwiatkowska Department of Computer Science, University of Oxford POPL 2015 tutorial, Mumbai, January 2015 Page 2 2 What is probabilistic model checking? \u2022 Probabilistic model checking\u2026 \u2212 is model checking applied to probabilistic models \u2022 Probabilistic models\u2026 \u2212 can be derived from high-level specification or extracted from probabilistic programs Page 3 3 Model checking Finite-state model Temporal logic specification Result System Counterexample System requirements \u00acEF fail Model checker eg SMV, Spin Page 4 4 Probabilistic model checking Probabilistic model eg Markov chain Probabilistic temporal logic specification eg PCTL, LTL Result Quantitative results System Counterexample System requirements P <0.1 [ F fail ] 0.5 0.1 0.4 Probabilistic model checker eg PRISM Page 5 5 Why probability? \u2022 Some systems are inherently \u2026", "num_citations": "7\n", "authors": ["1591"]}
{"title": "Verifying soft deadlines with probabilistic timed automata\n", "abstract": " This paper describes work in progess performed as part of an ongoing project aimed at the development of theoretical foundations and model checking algorithms for the verification of soft deadlines in timed systems, that is, properties such as \u201cthere is a 90% chance that the message will be delivered within 5 time units\u201d. The research is focussed on the probabilistic timed automata model [11], an extension of timed automata [3], and includes: model checking of discrete-probabilistic automata based on the region graph construction [11]; symbolic methods based on forwards and backwards reachability [10, 13]; and the continuous probabilistic timed automata [12].", "num_citations": "7\n", "authors": ["1591"]}
{"title": "Metric denotational semantics for PEPA\n", "abstract": " Stochastic process algebras, which combine the features of a process calculus with stochastic analysis, were introduced to enable compositional performance analysis of systems. At the level of syntax, compositionality presents itself in terms of operators, which can be used to build more complex systems from simple components. Denotational semantics is a method for assigning to syntactic objects elements of a suitably chosen semantic domain. This is compositional in style, as operators are represented by certain functions on the domain, and often allows to gain additional insight by considering the properties of those functions. We consider Performance Evaluation Process Algebra (PEPA), a stochastic process algebra introduced by Hillston [9]. Based on the methodology introduced by de Bakker & Zucker, we give denotational semantics to PEPA by means of a complete metric space of suitably enriched trees. We investigate continuity properties of the PEPA operators and show that our semantic domain is fully abstract with respect to strong equivalence.", "num_citations": "7\n", "authors": ["1591"]}
{"title": "Multi-player equilibria verification for concurrent stochastic games\n", "abstract": " Concurrent stochastic games (CSGs) are an ideal formalism for modelling probabilistic systems that feature multiple players or components with distinct objectives making concurrent, rational decisions. Examples include communication or security protocols and multi-robot navigation. Verification methods for CSGs exist but are limited to scenarios where agents or players are grouped into two coalitions, with those in the same coalition sharing an identical objective. In this paper, we propose multi-coalitional verification techniques for CSGs. We use subgame-perfect social welfare (or social cost) optimal Nash equilibria, which are strategies where there is no incentive for any coalition to unilaterally change its strategy in any game state, and where the total combined objectives are maximised (or minimised). We present an extension of the temporal logic rPATL (probabilistic alternating-time temporal logic\u00a0\u2026", "num_citations": "6\n", "authors": ["1591"]}
{"title": "Expected reachability-time games\n", "abstract": " Probabilistic timed automata are a suitable formalism to model systems with real-time, nondeterministic and probabilistic behaviour. We study two-player zero-sum games on such automata where the objective of the game is specified as the expected time to reach a target. The two players\u2014called player Min and player Max\u2014compete by proposing timed moves simultaneously and the move with a shorter delay is performed. The first player attempts to minimise the given objective while the second tries to maximise the objective. We observe that these games are not determined, and study decision problems related to computing the upper and lower values, showing that the problems are decidable and lie in the complexity class NEXPTIME \u2229 co-NEXPTIME.", "num_citations": "6\n", "authors": ["1591"]}
{"title": "Collaborative models for autonomous systems controller synthesis\n", "abstract": " We show how detailed simulation models and abstract Markov models can be developed collaboratively to generate and implement effective controllers for autonomous agent search and retrieve missions. We introduce a concrete simulation model of an Unmanned Aerial Vehicle (UAV). We then show how the probabilistic model checker PRISM is used for optimal strategy synthesis for a sequence of scenarios relevant to UAVs and potentially other autonomous agent systems. For each scenario we demonstrate how it can be modelled using PRISM, give model checking statistics and present the synthesised optimal strategies. We then show how our strategies can be returned to the controller for the simulation model and provide experimental results to demonstrate the effectiveness of one such strategy. Finally we explain how our models can be adapted, using symmetry, for use on larger search areas, and demonstrate the feasibility of this approach.", "num_citations": "4\n", "authors": ["1591"]}
{"title": "Balancing turn-based games with chained strategy generation\n", "abstract": " Probabilistic model checking can overcome much of the complexity inherent in balancing games. Game balancing is the careful maintenance of relationships between the ways in which a game can be played, to ensure no single way is strictly better than all others and that players are offered a wide variety of ways to play successfully. We introduce a novel approach towards automating game balancing using probabilistic model checking called chained strategy generation (CSG). This involves generating chains of adversarial strategies which mimic the way players adapt their approach during repeated plays of a game. We use CSG to map out the evolving metagame. The trends identified can allow game developers to identify strategies which will be too strong and ways of playing the game which a player may want to use, but are never viable for successful competitive play. We introduce a case study, a game\u00a0\u2026", "num_citations": "4\n", "authors": ["1591"]}
{"title": "A continuous-time model of an autonomous aerial vehicle to inform and validate formal verification methods\n", "abstract": " If autonomous vehicles are to be widely accepted, we need to ensure their safe operation. For this reason, verification and validation (V&V) approaches must be developed that are suitable for this domain. Model checking is a formal technique which allows us to exhaustively explore the paths of an abstract model of a system. Using a probabilistic model checker such as PRISM, we may determine properties such as the expected time for a mission, or the probability that a specific mission failure occurs. However, model checking of complex systems is difficult due to the loss of information during abstraction. This is especially so when considering systems such as autonomous vehicles which are subject to external influences. An alternative solution is the use of Monte Carlo simulation to explore the results of a continuous-time model of the system. The main disadvantage of this approach is that the approach is not exhaustive as not all executions of the system are analysed. We are therefore interested in developing a framework for formal verification of autonomous vehicles, using Monte Carlo simulation to inform and validate our symbolic models during the initial stages of development. In this paper, we present a continuous-time model of a quadrotor unmanned aircraft undertaking an autonomous mission. We employ this model in Monte Carlo simulation to obtain specific mission properties which will inform the symbolic models employed in formal verification.", "num_citations": "4\n", "authors": ["1591"]}
{"title": "Symbolic verification and strategy synthesis for linearly-priced probabilistic timed automata\n", "abstract": " Probabilistic timed automata are a formalism for modelling systems whose dynamics includes probabilistic, nondeterministic and timed aspects including real-time systems. A variety of techniques have been proposed for the analysis of this formalism and successfully employed to analyse, for example, wireless communication protocols and computer security systems. Augmenting the model with prices (or, equivalently, costs or rewards) provides a means to verify more complex quantitative properties, such as the expected energy usage of a device or the expected number of messages sent during a protocol\u2019s execution. However, the analysis of these properties on probabilistic timed automata currently relies on a technique based on integer discretisation of real-valued clocks, which can be expensive in some cases. In this paper, we propose symbolic techniques for verification and optimal strategy\u00a0\u2026", "num_citations": "3\n", "authors": ["1591"]}
{"title": "Quantitative verification: Formal guarantees for timeliness reliability and performance\n", "abstract": " Quantitative verification is a technique for analysing quantitative aspects of a system\u2019s design, such as timing, probabilistic behaviour or resource usage. It provides a means of automatically deriving formal guarantees on a wide range of system properties, such as timeliness, reliability or performance, for example,\u201cthe airbag will always deploy within 20 milliseconds after a crash\u201d or \u201cthe probability of both sensors failing simultaneously is less than 0.001\u201d. Recent years have seen significant advances in the underlying theory, verification techniques and tool support in this area, and these methods have been applied to an impressive array of systems, from wireless networking protocols to robotic systems to cardiac pacemakers.This talk will give an overview of the state-of-the-art in quantitative verification, focusing in particular on probabilistic model checking, a quantitative verification technique for the analysis of\u00a0\u2026", "num_citations": "3\n", "authors": ["1591"]}
{"title": "Evaluation of Sustained Stochastic Oscillations by Means of a System of Differential Equations.\n", "abstract": " Several approaches exist to model the evolution of dynamical systems with large populations. These approaches can be roughly divided into microscopic ones, which are usually stochastic and discrete, and macroscopic ones, which are obtained as the limit behavior when the populations tend to infinity and are usually deterministic and continuous. We study the dynamics obtained by both approaches in systems with one deterministic equilibrium. We show that such dynamics can exhibit rather different behavior around the deterministic equilibrium, in particular, the limit behavior can tend to an equilibrium while the stochastic discrete dynamics oscillates indefinitely. To evaluate such stochastic oscillations quantitatively, we propose a system of differential equations on polar coordinates. The solution of this system provides several measures of interest related to the stochastic oscillations, such as average amplitude and frequency.", "num_citations": "3\n", "authors": ["1591"]}
{"title": "A Systematic Approach to Evaluate Sustained Stochastic Oscillations.\n", "abstract": " Although the populations of biological systems are inherently discrete and their dynamics are strongly stochastic, it is usual to consider their limiting behaviour for large environments in order to study some of their features. Such limiting behaviour is described as the solution of a set of ordinary differential equations, ie, a continuous and deterministic trajectory. It will be shown that this trajectory does not always average correctly the system behaviour, such as sustained oscillations, in the neighbourhood of deterministic equilibrium points. In order to overcome this mismatch, an alternative set of differential equations based on polar coordinates is proposed. This set of equations can be used to easily compute the average amplitude and frequency of stochastic oscillations.", "num_citations": "3\n", "authors": ["1591"]}
{"title": "Translating the probabilistic pi-calculus to PRISM\n", "abstract": " We present an implementation of model checking for the probabilistic \u03c0-calculus, a process algebra which supports modelling of concurrency, mobility and discrete probabilistic behaviour. Formal verification techniques for this calculus have clear applications in several domains, including mobile ad-hoc network protocols and random security protocols. Despite this, no implementation of automated verification exists. Building upon the (nonprobabilistic) \u03c0-calculus model checker MMC, we first show an automated procedure for constructing the Markov decision process representing a probabilistic \u03c0-calculus process. This can then be verified using existing probabilistic model checkers such as PRISM. Secondly, we demonstrate how for a large class of systems a more efficient, compositional approach can be applied, which uses our extension of MMC on each parallel component of the system and then translates the results into a high-level model description for the PRISM tool. The feasibility of our techniques is demonstrated through three case studies from the \u03c0-calculus literature.", "num_citations": "3\n", "authors": ["1591"]}
{"title": "Automatic verification of concurrent stochastic systems\n", "abstract": " Automated verification techniques for stochastic games allow formal reasoning about systems that feature competitive or collaborative behaviour among rational agents in uncertain or probabilistic settings. Existing tools and techniques focus on turn-based games, where each state of the game is controlled by a single player, and on zero-sum properties, where two players or coalitions have directly opposing objectives. In this paper, we present automated verification techniques for concurrent stochastic games (CSGs), which provide a more natural model of concurrent decision making and interaction. We also consider (social welfare) Nash equilibria, to formally identify scenarios where two players or coalitions with distinct goals can collaborate to optimise their joint performance. We propose an extension of the temporal logic rPATL for specifying quantitative properties in this setting and present corresponding\u00a0\u2026", "num_citations": "2\n", "authors": ["1591"]}
{"title": "Quantitative games on probabilistic timed automata\n", "abstract": " Two-player zero-sum games are a well-established model for synthesising controllers that optimise some performance criterion. In such games one player represents the controller, while the other describes the (adversarial) environment, and controller synthesis corresponds to computing the optimal strategies of the controller for a given criterion. Asarin and Maler initiated the study of quantitative games on (non-probabilistic) timed automata by synthesising controllers which optimise the time to reach a final state. The correctness and termination of their approach was dependent on exploiting the properties of a special class of functions, called simple functions, that can be finitely represented. In this paper we consider quantitative games over probabilistic timed automata. Since the concept of simple functions is not sufficient to solve games in this setting, we generalise simple functions to so-called quasi-simple functions. Then, using this class of functions, we demonstrate that the problem of solving games with either expected reachability-time or expected discounted-time criteria on probabilistic timed automata are in NEXPTIME  co-NEXPTIME.", "num_citations": "2\n", "authors": ["1591"]}
{"title": "Verifying quantitative properties of continuous probabilistic real-time graphs\n", "abstract": " We consider an extension of probabilistic real-time graphs with continuous-time probability distributions, based on the timed automata of 3] augmented with discrete probability distributions in 13]. Similarly to 2], where non-determinism is not considered, we model random delays by probability distributions with nite interval support. We modify the standard region graph construction by subdividing certain unit intervals to build a nite representation for continuous probabilistic real-time graphs. By applying the algorithm of 7, 13] we obtain a model checking method for such systems against formulae of the Probabilistic Timed Computation Tree Logic (an extension of TCTL 3]), based on approximating the probability to within an interval. Our method improves on the previously known techniques in that it allows the veri cation of quantitative probability bounds, as opposed to only qualitative (ie with probability 0 or 1).", "num_citations": "2\n", "authors": ["1591"]}
{"title": "Automated verification of a randomized Byzantine agreement protocol\n", "abstract": " We consider the randomized protocol of Cachin, Kursawe and Shoup [CKS00] for solving the asynchronous Byzantine agreement problem. The protocol is of practical interest since it forms the core of a class of secure and efficient broadcast algorithms [CKPS01]. It is intended to coordinate a set of n parties, which proceed through possibly unboundedly many rounds; in each round the parties attempt to agree by casting votes. The protocol incorporates cryptographic techniques and coin tossing protocols and achieves constant expected time while tolerating the maximum number of corrupted parties. Based on a methodology proposed earlier [KNS01a, MQS00] we verify the protocol using model checkers Cadence SMV and FDR and the probabilistic model checker PRISM. In contrast to the previous case study this protocol cannot be separated into non-probabilistic and probabilistic components. Instead, in order to verify the non-probabilistic properties (Validity and Agreement) we replace the probabilistic behaviour with non-determinism, and use Cadence SMV to prove them for all n and for all rounds. For the probabilistic properties (Fast Convergence), we reduce the verification problem for a fixed n to model checking a finite state abstraction of the protocol, which we verify with PRISM. The correctness of the abstraction itself is verified (for a finite configuration) by applying the techniques presented in [KNS01b]; this involves translating the problem into checking trace refinement between non-probabilistic systems, which is then checked with the FDR tool. The separately proved properties allow us to deduce the correctness of the protocol (for up to\u00a0\u2026", "num_citations": "1\n", "authors": ["1591"]}
{"title": "Faster and symbolic CTMC model cheeking\n", "abstract": " This paper reports on the implementation and the experi-ments with symbolic model checking of continuous-time Markov chains using multi-terminal binary decision diagrams (MTBDDs). Properties are expressed in Continuous Stochastic Logic (CSL)(7) which includes the means to express both transient and steady-state performance mea-sures. We show that all CSL operators can be treated using standard operations on MTBDDs, thus allowing a rather straightforward imple mentation of symbolic CSL model checking on existing MTBDD-based platforms such as the verifier PRISM. The main result of the paper is an improvement of O (N) in the time complexity of checking time-bounded until-formulas, where N is the number of states in the CTMC under consideration. This result yields a drastic speed-up in the verification time of model checking CTMCs, both in the symbolic and non-symbolic case.", "num_citations": "1\n", "authors": ["1591"]}