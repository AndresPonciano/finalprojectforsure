{"title": "Declarative network verification\n", "abstract": " In this paper, we present our initial design and implementation of a declarative network verifier (DNV). DNV utilizes theorem proving, a well established verification technique where logic-based axioms that automatically capture network semantics are generated, and a user-driven proof process is used to establish network correctness properties. DNV takes as input declarative networking specifications written in the Network Datalog (NDlog) query language, and maps that automatically into logical axioms that can be directly used in existing theorem provers to validate protocol correctness. DNV is a significant improvement compared to existing use case of theorem proving which typically require several man-months to construct the system specifications. Moreover, NDlog, a high-level specification, whose semantics are precisely compiled into DNV without loss, can be directly executed as implementations\u00a0\u2026", "num_citations": "74\n", "authors": ["1647"]}
{"title": "A Safety Case Pattern for Model-Based Development Approach.\n", "abstract": " In this paper, a safety case pattern is introduced to facilitate the presentation of a correctness argument for a system implemented using formal methods in the development process. We took advantage of our experience in constructing a safety case for the Patient Controlled Analgesic (PCA) infusion pump, to define this safety case pattern. The proposed pattern is appropriate to be instantiated within the safety cases constructed for systems that are developed by applying model-based approaches.", "num_citations": "41\n", "authors": ["1647"]}
{"title": "Formally verifiable networking\n", "abstract": " This paper proposes Formally Verifiable Networking (FVN), a novel approach towards unifying the design, specification, implementation, and verification of networking protocols within a logic-based framework. In FVN, formal logical statements are used to specify the behavior and the properties of the protocol. FVN uses declarative networking as an intermediary layer between high-level logical specifications of the network model and low-level implementations. A theorem prover is used to statically verify the properties of declarative network protocols. Moreover, a property preserving translation exists for generating declarative networking implementations from verified formal specifications. We further demonstrate the possibility of designing and specifying well-behaved network protocols with correctness guarantees in FVN using meta-models in a systematic and compositional way.", "num_citations": "32\n", "authors": ["1647"]}
{"title": "Steering of discrete event systems: Control theory approach\n", "abstract": " Runtime verification involves monitoring the system at runtime to check for conformance of the execution trace to user defined safety properties. Typically, run-time verifiers do not assume a system model and hence cannot predict violations until they occur. This limits the practical applicability of runtime verification. Steering is the process of predicting the occurrence of violations and preventing them by controlling system execution. Steerers can achieve this using a limited knowledge of the system model even in situations where it is infeasible to store the entire model. In this paper, we explore a control-theoretic view of steering for discrete event systems. We introduce an architecture for steering and also describe different steering paradigms.", "num_citations": "31\n", "authors": ["1647"]}
{"title": "Resource modeling for embedded systems design\n", "abstract": " The paper describes a formal framework for designing and reasoning about resource-constrained embedded systems. The framework is based on a series of process algebraic formalisms which have been previously developed to describe and analyze various aspects of real-time concurrent systems. We present a uniform framework for formal treatment of resources and illustrate modeling of common resource classes.", "num_citations": "26\n", "authors": ["1647"]}
{"title": "Co-design of arbitrated network control systems with overrun strategies\n", "abstract": " This paper addresses co-design of platform and control of multiple control applications in a network control system. Limited and shared resources among control and non-control applications introduce delays in transmitted messages. These delays in turn can degrade system performance and cause instabilities. In this paper, we propose an overrun framework together with a co-design to achieve both optimal control performance and efficient resource utilization. The starting point for this framework is an Arbitrated Network Control System (ANCS) approach, where flexibility and transparency in the network are utilized to arbitrate control messages. Using a two-parameter model for delays experienced by control messages that classifies them as nominal, medium, and large, we propose a controller that switches between nominal, skip and abort strategies. An automata-theoretic technique is introduced to derive\u00a0\u2026", "num_citations": "20\n", "authors": ["1647"]}
{"title": "Reasoning About Confidence and Uncertainty in Assurance Cases: A Survey\u22c6\n", "abstract": " Assurance cases are structured logical arguments supported by evidence that explain how systems, possibly software systems, satisfy desirable properties for safety, security or reliability. The confidence in both the logical reasoning and the underlying evidence is a factor that must be considered carefully when evaluating an assurance case; the developers must have confidence in their case before the system is delivered and the assurance case reviewer, such as a regulatory body, must have adequate confidence in the case before approving the system for use. A necessary aspect of gaining confidence in the assurance case is dealing with uncertainty, which may have several sources. Uncertainty, often impossible to eliminate, nevertheless undermines confidence and must therefore be sufficiently bounded. It can be broadly classified into two types, aleatory (statistical) and epistemic (systematic). This\u00a0\u2026", "num_citations": "19\n", "authors": ["1647"]}
{"title": "Qualitative modeling of hybrid systems\n", "abstract": " The paper discusses an approach to construct discrete abstractions of hybrid systems by means of qualitative reasoning. The work is performed in the context of a modeling language for hybrid systems CHARON. We introduce a qualitative version of the language and describe the abstraction technique using a motivational example. The resulting abstract model is conservative and can be used to analyze properties of the original hybrid system.", "num_citations": "16\n", "authors": ["1647"]}
{"title": "Performance analysis of AADL models using real-time calculus\n", "abstract": " Architecture Analysis and Design Language (AADL) captures both platform and software architectures of embedded systems in a component-oriented fashion. Properties embedded in an AADL model enable several high-level analysis techniques. In this work, we explore how to perform analysis of end-to-end timing characteristics of an AADL model using Real-Time Calculus (RTC). We identify properties of AADL models that are necessary to enable such analysis and develop an algorithm to transform an AADL model into an RTC model. We use the proposed technique to identify analyze the infrastructure for sensor network architecture.", "num_citations": "13\n", "authors": ["1647"]}
{"title": "Efficient graph-based algorithms for model checking in the modal mu-calculus\n", "abstract": " Various model-checking algorithms for the alternation-free subset of the modal mu-calculus are considered. The algorithms are based on a data structure called the product graph, which represents a kind of Cartesian product of the labeled transition system serving as the specification of a distributed system and a graph representation of the logical formula.", "num_citations": "13\n", "authors": ["1647"]}
{"title": "Analysis of AADL models using real-time calculus with applications to wireless architectures\n", "abstract": " Architecture Analysis and Design Language (AADL) captures both platform and software architectures of embedded systems in a component oriented fashion. Properties embedded in an AADL model enable several high-level analysis techniques. In this work, we explore how to perform analysis of end-to-end timing characteristics of an AADL model using Real-Time Calculus (RTC). We identify properties of AADL models that are necessary to enable such analysis and develop an algorithm to transform an AADL model into an RTC model.", "num_citations": "12\n", "authors": ["1647"]}
{"title": "Verification of the Redundancy Management System for Space Launch Vehicle: A Case Study.\n", "abstract": " Formal methods have been widely recognized as effective techniques to uncover design errors that could be missed by a conventional software engineering process. The paper describes the authors' experience with using formal methods in analyzing the redundancy management system (RMS) for a space launch vehicle. RMS is developed by AlliedSignal Inc. for the avionics of NASA's new space shuttle, called VentureStar, that meets the expectations for space missions in the 21st century. A process algebraic formalism is used to construct a formal specification based on the actual RMS design specifications. Analysis is performed using PARAGON, a toolset for formal specification and verification of distributed real-time systems. A number of real-time and fault-tolerance properties were verified, allowing some errors in the RMS pseudocode to be detected. The paper discusses the translation of the RMS\u00a0\u2026", "num_citations": "11\n", "authors": ["1647"]}
{"title": "SMEDL: Combining Synchronous and Asynchronous Monitoring\n", "abstract": " Two major approaches have emerged in runtime verification, based on synchronous and asynchronous monitoring. Each approach has its advantages and disadvantages and is applicable in different situations. In this paper, we explore a hybrid approach, where low-level properties are checked synchronously, while higher-level ones are checked asynchronously. We present a tool for constructing and deploying monitors based on an architecture specification. Monitor logic and patterns of communication between monitors are specified in a language SMEDL. The language and the tool are illustrated using a case study of a robotic simulator.", "num_citations": "9\n", "authors": ["1647"]}
{"title": "Generating properties for runtime monitoring from software specification patterns\n", "abstract": " This paper presents an approach to support run-time verification of software systems that combines two existing tools, Prospec and Java-MaC, into a single framework. Prospec can be used to clarify natural language specifications for sequential, concurrent, and nondeterministic behavior. In addition, Prospec assists the user in reading, writing, and understanding formal specifications through the use of property patterns and visual abstractions. Prospec automatically generates specifications written in Future Interval Logic (FIL). Java-MaC monitors Java programs at runtime to ensure adherence to a set of formally specified properties. Safety properties of a program are specified in the formal language Meta-Event Definition Language (MEDL). Java-MaC generates runtime components from specifications. The components are used to instrument the target program and determine whether the execution of the program\u00a0\u2026", "num_citations": "8\n", "authors": ["1647"]}
{"title": "HOLON/CADSE: integrating open software standards and formal methods to generate guideline-based decision support agents.\n", "abstract": " This paper describes the efforts of a consortium that is trying to develop and validate formal methods and a meta-environment for authoring, checking, and maintaining a large repository of machine executable practice guidelines. The goal is to integrate and extend a number of open software standards so that guidelines in the meta-environment become a resource that any vendor can plug their applications into and run in their proprietary environment provided they conform to the interface standards.", "num_citations": "6\n", "authors": ["1647"]}
{"title": "Medical cyber-physical systems\n", "abstract": " There are two practical problems in image fusion by using Dempster-Shafer (DS) combination rule: one is the classical DS rule involves counter-intuitive behaviors when deal with high conflict information, another is that it is difficult to determine the basic mass function of pixels. A method of image fusion with modified DS evidence theory is proposed to recognize small infrared targets in image sequences. Based on evidence distance, some inherent characters of evidences are extracted. The Basic Probability Assignment (BPA) of pixels can be obtained from the characters of infrared images. According to the experimental results of using proposed method to an infrared image sequence with targets, the new proposed method is more effective and reliable with good convergence efficiency and high detect-rate.", "num_citations": "5\n", "authors": ["1647"]}
{"title": "A theorem proving approach towards declarative networking\n", "abstract": " We present the DRIVER system for designing, analyzing and implementing network protocols. DRIVER leverages declarative networking, a recent innovation that enables network protocols to be concisely specified and implemented using declarative languages. DRIVER takes as input declarative networking specifications written in the Network Datalog (NDlog) query language, and maps that automatically into logical specifications that can be directly used in existing theorem provers to validate protocol correctness. As an alternative approach, network designer can supply a component-based model of their routing design, automatically generate PVS specifications for verification and subsequent compilation into veriffied declarative network implementations. We demonstrate the use of DRIVER for synthesizing and verifying a variety of well-known network routing protocols.", "num_citations": "5\n", "authors": ["1647"]}
{"title": "Counterfactual Causality from First Principles?\n", "abstract": " In this position paper we discuss three main shortcomings of existing approaches to counterfactual causality from the computer science perspective, and sketch lines of work to try and overcome these issues: (1) causality definitions should be driven by a set of precisely specified requirements rather than specific examples; (2) causality frameworks should support system dynamics; (3) causality analysis should have a well-understood behavior in presence of abstraction.", "num_citations": "4\n", "authors": ["1647"]}
{"title": "Architecture-Driven Semantic Analysis of Embedded Systems (Dagstuhl Seminar 12272)\n", "abstract": " Architectural modeling of complex embedded systems is gaining prominence in recent years, both in academia and in industry. An architectural model represents components in a distributed system as boxes with well-defined interfaces, connections between ports on component interfaces, and specifies component properties that can be used in analytical reasoning about the model. Models are hierarchically organized, so that each box can contain another system inside, with its own set of boxes and connections between them. The goal of Dagstuhl Seminar 12272``Architecture-Driven Semantic Analysis of Embedded Systems''is to bring together researchers who are interested in defining precise semantics of an architecture description language and using it for building tools that generate analytical models from architectural ones, as well as generate code and configuration scripts for the system. This report documents the program and the outcomes of the presentations and working groups held during the seminar.", "num_citations": "4\n", "authors": ["1647"]}
{"title": "Javamac and runtime monitoring for geoinformatics grid services\n", "abstract": " The Geoscience Network (GEON) project is a collaborative effort among numerous institutions to create the geoinformatics infrastructure. Because of the criticality of the grid services that is deployed, scientists need assurance of the integrity of the data supplied by the service and assurance that the workflows and other scientific applications behave as expected. This paper describes the efforts toward using the Kepler workflow system to define new applications, the prospec specification tool to define properties, and the JavaMac system to monitor grid services. In addition, it outlines the research questions and challenges that must be addressed to meet the requirements of the GEON community.", "num_citations": "4\n", "authors": ["1647"]}
{"title": "Resiliency in Cyber-Physical Systems [Guest Editors' Introduction]\n", "abstract": " The articles in this special section examine the impact of resiliency in cyber-physical systems (CPS). In living species, it is often the resilience of an organism that determines its long-term success and phylogenesis. In computing, cyber-physical systems are also only as good as their level of resilience. Modern cyber-physical systems (CPSs) feature a tight integration of physical, computation, and communication processes.1 In CPSs, computers, networks, and sensors work in synergy to control complex operations systems using feedback loops. In the last decade, there has been a rapid growth of research into the deployment of CPSs in areas such as automation, energy, security, healthcare, manufacturing, transportation, and infrastructure design.", "num_citations": "1\n", "authors": ["1647"]}
{"title": "10451 Abstracts Collection--Runtime Verification, Diagnosis, Planning and Control for Autonomous Systems\n", "abstract": " From November 7 to 12, 2010, the Dagstuhl Seminar 10451``Runtime Verification, Diagnosis, Planning and Control for Autonomous Systems''was held in Schloss Dagstuhl~--~ Leibniz Center for Informatics. During the seminar, 35 participants presented their current research and discussed ongoing work and open problems. This document puts together abstracts of the presentations given during the seminar, and provides links to extended abstracts or full papers, if available.", "num_citations": "1\n", "authors": ["1647"]}
{"title": "Verifiable Policy-based Routing with DRIVER\n", "abstract": " The Internet today runs on a complex routing protocol called the Border Gateway Protocol (BGP). BGP is a policy-based protocol, in which autonomous Internet Service Providers (ISPs) impose their local policies on the propagation of routing information. Over the past few years, there has been a growing consensus on the complexity and fragility of BGP routing. To address these challenges, we present the DRIVER system for designing, analyzing and implementing policy-based routing protocols. Our system utilizes a declarative network verifier (DNV) which leverages declarative networking\u2019s connection to logic programming by automatically compiling high-level declarativen networking program into formal specifications, which can be directly used in a theorem prover for verification. In addition to verifying declarative networking programs using a theorem prover, the DRIVER system enables a similar transformation of verified formal specifications limited to fragment of second order logic to declarative networking programs for execution. As our main use case, we demonstrate the verification of a component-based specification of BGP protocol where DRIVER enables the analysis of convergence properties of Internet routing protocols with customizable policy configuration components. We show that the properties verified with DRIVER are indeed preserved in the synthesized implementation by performing experimental evaluation in a local cluster, where the equivalent declarative networking programs derived from the verified specifications displayed consistent behavior with regard to DRIVER verification.", "num_citations": "1\n", "authors": ["1647"]}
{"title": "Modeling, analysis, simulation, and synthesis of biomolecular networks\n", "abstract": " This project under the DARPA BIOCOMP program integrated fundamental scientific investigations in the field of molecular systems biology, algorithm development for biomolecular modeling, and open source, object based software implementation. Major accomplishments were 1 experimental gene knockout strain investigations of the V. fisheri quorum sensing system that yielded a mathematical model of its regulatory proteins, 2 a model of stringent response in E. coli and M. tuberculosis describing the role of enzyme RelMtb, 3 a first example of reachability analysis applied to a biomolecular system lactose induction, 4 a model of tetracycline resistance that discriminates between two possible mechanisms for tetracycline diffusion through the cell membrane, and 5 a new method for investigating the producibility of a metabolite by a network of chemical reactions from an available set of nutrients using sets of gene knockouts. Accomplishments in algorithmimplementation were 1 reachability and other metabolic analysis tools for non-linear biomolecular networks aiding construction of a hybrid systems-based abstraction, 2 a Systems Biology Markup Language compatible reachability algorithm using a piecewise multi-affine hybrid system method, and 3 a metabolic network producibility analysis algorithm for large scale metabolic networks predicting the possibility of producing a set of metabolites from a set of available nutrients, complementing biomass flux optimization.Descriptors:", "num_citations": "1\n", "authors": ["1647"]}
{"title": "Enhancing Dependability of Medical Software Systems\n", "abstract": " Challenges to dependable design of medical systems. Medical software-based systems represent an important class of embedded systems. Along with many other classes of safety-critical embedded systems, such as avionics and automotive controllers, manufacturing, and mobile communication systems, medical systems are facing a number of challenges to their design process.There are two major factors that complicate the design and implementation of softwarebased medical systems. First, the software complexity of medical systems has been increasing steadily as microprocessors become more powerful and demands on them grow along with the expectations of their capabilities. To mitigate the development cost of software, embedded systems are being designed to flexibly adapt to different environments. The requirements for increased functionality and adaptability make the development of embedded software complex and error-prone. Second, medical devices, like all other kinds of embedded systems are increasingly networked to improve functionality, reliability and maintainability. Networking makes embedded software even more difficult to develop, since composition and abstraction principles are poorly understood.", "num_citations": "1\n", "authors": ["1647"]}
{"title": "Platform-Independent Autonomy Modeling\n", "abstract": " We describe an approach for high-level modeling behaviors of autonomous vehicles and an infrastructure for executing these behaviors on a particular vehicle platform. The language directly represents behavioral primitives and constraints on their composition. The control infrastructure maps these behavioral primitives on the native vehicle interface in a model-driven fashion. As a result, the user is presented with an abstract motion planning interface that hides the intricate details of the vehicle implementation.", "num_citations": "1\n", "authors": ["1647"]}
{"title": "Hierarchical Hybrid Modeling of Embedded Systems\n", "abstract": " This paper describes the modeling language Charon for modular design of interacting hybrid systems. The language allows speci cation of architectural as well as behavioral hierarchy, and discrete as well as continuous activities. The modular structure of the language is not merely syntactic, but is exploited by analysis tools, and is supported by a formal semantics with an accompanying compositional theory of re nement. We illustrate the bene ts of Charon in design of embedded control software using examples from automated highways concerning vehicle coordination.", "num_citations": "1\n", "authors": ["1647"]}