{"title": "A survey of Concurrent METATEM\u2014the language and its applications\n", "abstract": " In this paper we present a survey of work relating to the Concurrent MetateM programming language. In addition to a description of the basic Concurrent MetateM system, which incorporates the direct execution of temporal formulae, a variety of extensions that have either been implemented or proposed are outlined. Although still in the development stage, there appear to be many areas where such a language could be applied. We present a variety of sample applications, highlighting the particular features of Concurrent MetateM that we believe will make it appropriate for use in these areas.", "num_citations": "350\n", "authors": ["1624"]}
{"title": "Clausal temporal resolution\n", "abstract": " In this article, we examine how clausal resolution can be applied to a specific, but widely used, nonclassical logic, namely discrete linear temporal logic. Thus, we first define a normal form for temporal formulae and show how arbitrary temporal formulae can be translated into the normal form, while preserving satisfiability. We then introduce novel resolution rules that can be applied to formulae in this normal form, provide a range of examples, and examine the correctness and complexity of this approach. Finally, we describe related work and future developments concerning this work.", "num_citations": "240\n", "authors": ["1624"]}
{"title": "METATEM: A framework for programming in temporal logic\n", "abstract": " In this paper we further develop the methodology of temporal logic as an executable imperative language, presented by Moszkowski [Mos86] and Gabbay [Gab87, Gab89] and present a concrete framework, called MetateM for executing (modal and) temporal logics. Our approach is illustrated by the development of an execution mechanism for a propositional temporal logic and for a restricted first order temporal logic.", "num_citations": "209\n", "authors": ["1624"]}
{"title": "Model checking agentspeak\n", "abstract": " This paper introduces ASF, a variation of the BDI logic programming language ASL intended to permit the model-theoretic verification of multi-agent systems. After briefly introducing ASF and discussing its relationship to ASL, we show how ASF programs can be transformed into Prm, the model specification language for the Spin model-checking system. We also describe how specifications written in a simplified form of BDI logic can be transformed into Spin-format linear temporal logic formulae. With our approach, it is thus possible to automatically verify whether or not multi-agent systems implemented in ASF satisfy specifications expressed as BDI logic formul\u00e6. We illustrate our approach with a short case study, in which we show how BDI properties of a simulated auction system implemented in ASF were verified.", "num_citations": "208\n", "authors": ["1624"]}
{"title": "Model checking multi-agent systems with MABLE\n", "abstract": " MABLE is a language for the design and automatic verification of multi-agent systems. MABLE is essentially a conventional imperative programming language, enriched by constructs from the agent-oriented programming paradigm. A MABLE system contains a number of agents, programmed using the MABLE imperative programming language. Agents in MABLE have a mental state consisting of beliefs, desires and intentions. Agents communicate using request and inform performatives, in the style of the fipa agent communication language. MABLE systems may be augmented by the addition of formal claims about the system, expressed using a quantified, linear temporal belief-desire-intention logic. MABLE has been fully implemented, and makes use of the spin model checker to automatically verify the truth or falsity of claims.", "num_citations": "205\n", "authors": ["1624"]}
{"title": "A Resolution Method for Temporal Logic.\n", "abstract": " In this paper, a resolution method for propositional temporal logic is presented. Temporal formulae, incorporating both past-time and future-time temporal operators, are converted to Separated Normal Form (SNF), then both non-temporal and temporal resolution rules are applied. The resolution method is based on classical resolution, but incorporates a temporal resolution rule that can be implemented efficiently using a graph-theoretic approach.", "num_citations": "195\n", "authors": ["1624"]}
{"title": "The imperative future: principles of executable temporal logic\n", "abstract": " The imperative future | Guide books ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleBooksThe imperative future: principles of executable temporal logic ABSTRACT No abstract available. Index Terms 1.The imperative future 1.Software and its engineering 1.Software notations and tools 1.Compilers 2.Theory of computation 1.Logic 2.Models of computation 1.Computability 3.Semantics and reasoning Comments Login options Check if you have access through your login credentials or your institution to get full access on this article. Sign in Full Access Get this Publication Information Contributors Published in Guide books cover image \u2026", "num_citations": "178\n", "authors": ["1624"]}
{"title": "On the formal specification and verification of multi-agent systems\n", "abstract": " This article describes first steps towards the formal specification and verification of multi-agent systems, through the use of temporal belief logics. The article first describes Concurrent METATEM, a multi-agent programming language, and then develops a logic that may be used to reason about Concurrent METATEM systems. The utility of this logic for specifying and verifying Concurrent METATEM systems is demonstrated through a number of examples. The article concludes with a brief discussion on the wider implications of the work, and in particular on the use of similar logics for reasoning about multi-agent systems in general.", "num_citations": "174\n", "authors": ["1624"]}
{"title": "Handbook of temporal reasoning in artificial intelligence\n", "abstract": " This collection represents the primary reference work for researchers and students in the area of Temporal Reasoning in Artificial Intelligence. Temporal reasoning has a vital role to play in many areas, particularly Artificial Intelligence. Yet, until now, there has been no single volume collecting together the breadth of work in this area. This collection brings together the leading researchers in a range of relevant areas and provides an coherent description of the breadth of activity concerning temporal reasoning in the filed of Artificial Intelligence. Key Features:-Broad range: foundations; techniques and applications-Leading researchers around the world have written the chapters-Covers many vital applications-Source book for Artificial Intelligence, temporal reasoning-Approaches provide foundation for many future software systems\u00b7 Broad range: foundations; techniques and applications\u00b7 Leading researchers around the world have written the chapters\u00b7 Covers many vital applications\u00b7 Source book for Artificial Intelligence, temporal reasoning\u00b7 Approaches provide foundation for many future software systems", "num_citations": "173\n", "authors": ["1624"]}
{"title": "Representing and executing agent-based systems\n", "abstract": " In this paper we describe an approach to the representation and implementation of agent-based systems where the behaviour of an individual agent is represented by a set of logical rules in a particular form. This not only provides a logical specification of the agent, but also allows us to directly execute the rules in order to implement the agent's behaviour. Agents communicate with each other through a simple, and logically well-founded, broadcast communication mechanism. In addition, agents can be grouped together. This not only restricts the extent of broadcast messages, but also provides a structuring mechanism within the agent space.             The purpose of this paper is threefold: to motivate the use of our particular computational model; to show that a logic-based approach is both possible and potentially very powerful; and to assert that by narrowing the gap between the agent theory and the agent\u00a0\u2026", "num_citations": "167\n", "authors": ["1624"]}
{"title": "Formal verification of ethical choices in autonomous systems\n", "abstract": " Autonomous systems such as unmanned vehicles are beginning to operate within society. All participants in society are required to follow specific regulations and laws. An autonomous system cannot be an exception. Inevitably an autonomous system will find itself in a situation in which it needs to not only choose to obey a rule or not, but also make a complex ethical decision. However, there exists no obvious way to implement the human understanding of ethical behaviour in computers. Even if we enable autonomous systems to distinguish between more and less ethical alternatives, how can we be sure that they would choose right? We consider autonomous systems with a hybrid architecture in which the highest level of reasoning is executed by a rational (BDI) agent. For such a system, formal verification has been used successfully to prove that specific rules of behaviour are observed when making decisions\u00a0\u2026", "num_citations": "155\n", "authors": ["1624"]}
{"title": "Model checking agent programming languages\n", "abstract": " In this paper we describe a verification system for multi-agent programs. This is the first comprehensive approach to the verification of programs developed using programming languages based on the BDI (belief-desire-intention) model of agency. In particular, we have developed a specific layer of abstraction, sitting between the underlying verification system and the agent programming language, that maps the semantics of agent programs into the relevant model-checking framework. Crucially, this abstraction layer is both flexible and extensible; not only can a variety of different agent programming languages be implemented and verified, but even heterogeneous multi-agent programs can be captured semantically. In addition to describing this layer, and the semantic mapping inherent within it, we describe how the underlying model-checker is driven and how agent properties are checked. We also\u00a0\u2026", "num_citations": "150\n", "authors": ["1624"]}
{"title": "An introduction to practical formal methods using temporal logic\n", "abstract": " The name\" temporal logic\" may sound complex and daunting; but while they describe potentially complex scenarios, temporal logics are often based on a few simple, and fundamental, concepts-highlighted in this book. An Introduction to Practical Formal Methods Using Temporal Logic provides an introduction to formal methods based on temporal logic, for developing and testing complex computational systems. These methods are supported by many well-developed tools, techniques and results that can be applied to a wide range of systems. Fisher begins with a full introduction to the subject, covering the basics of temporal logic and using a variety of examples, exercises and pointers to more advanced work to help clarify and illustrate the topics discussed. He goes on to describe how this logic can be used to specify a variety of computational systems, looking at issues of linking specifications, concurrency, communication and composition ability. He then analyses temporal specification techniques such as deductive verification, algorithmic verification, and direct execution to develop and verify computational systems. The final chapter on case studies analyses the potential problems that can occur in a range of engineering applications in the areas of robotics, railway signalling, hardware design, ubiquitous computing, intelligent agents, and information security, and explains how temporal logic can improve their accuracy and reliability. Models temporal notions and uses them to analyze computational systems Provides a broad approach to temporal logic across many formal methods-including specification, verification and implementation\u00a0\u2026", "num_citations": "149\n", "authors": ["1624"]}
{"title": "Verifying autonomous systems\n", "abstract": " Exploring autonomous systems and the agents that control them.", "num_citations": "138\n", "authors": ["1624"]}
{"title": "Formal verification of autonomous vehicle platooning\n", "abstract": " The coordination of multiple autonomous vehicles into convoys or platoons is expected on our highways in the near future. However, before such platoons can be deployed, the behaviours of the vehicles in these platoons must be certified. This is non-trivial and goes beyond current certification requirements, for human-controlled vehicles, in that these vehicles can act autonomously. In this paper, we show how formal verification can contribute to the analysis of these new, and increasingly autonomous, systems. An appropriate overall representation for vehicle platooning is as a multi-agent system in which each agent captures the \u201cautonomous decisions\u201d carried out by each vehicle. In order to ensure that these autonomous decision-making agents in vehicle platoons never violate safety requirements, we use formal verification. However, as the formal verification technique used to verify the individual agent's code\u00a0\u2026", "num_citations": "132\n", "authors": ["1624"]}
{"title": "A normal form for temporal logics and its applications in theorem-proving and execution\n", "abstract": " In this paper a normal form, called Separated Normal Form (SNF), for temporal logic formulae is described. A simple propositional temporal logic, based on a discrete linear model structure, is introduced and a procedure for transforming an arbitrary formula of this logic into SNF is described. It is shown that the transformation process preserves satisfiability and ensures that any model of the transformed formula is a model of the original one. This normal form not only provides a simple and concise representation for temporal formulae, but is also used as the basis for both a resolution proof method and an execution mechanism for this type of temporal logic. In addition to outlining these applications, we show how the normal form can be extended to deal with first-order temporal logic.", "num_citations": "132\n", "authors": ["1624"]}
{"title": "METATEM: An introduction\n", "abstract": " In this paper a methodology for the use of temporal logic as an executable imperative language is introduced. The approach, which provides a concrete framework, calledMetateM, for executing temporal formulae, is motivated and illustrated through examples. In addition, this introduction provides references to further, more detailed, work relating to theMetateM approach to executable logics.", "num_citations": "116\n", "authors": ["1624"]}
{"title": "Analysing robot swarm behaviour via probabilistic model checking\n", "abstract": " An alternative to deploying a single robot of high complexity can be to utilise robot swarms comprising large numbers of identical, and much simpler, robots. Such swarms have been shown to be adaptable, fault-tolerant and widely applicable. However, designing individual robot algorithms to ensure effective and correct overall swarm behaviour is actually very difficult. While mechanisms for assessing the effectiveness of any swarm algorithm before deployment are essential, such mechanisms have traditionally involved either computational simulations of swarm behaviour, or experiments with robot swarms themselves. However, such simulations or experiments cannot, by their nature, analyse all possible swarm behaviours. In this paper, we will develop and apply the use of automated probabilistic formal verification techniques to robot swarms, involving an exhaustive mathematical analysis, in order to assess\u00a0\u2026", "num_citations": "102\n", "authors": ["1624"]}
{"title": "On formal specification of emergent behaviours in swarm robotic systems\n", "abstract": " It is a characteristic of swarm robotics that specifying overall emergent swarm behaviours in terms of the low-level behaviours of individual robots is very difficult. Yet if swarm robotics is to make the transition from the laboratory to real-world engineering realisation we need such specifications. This paper explores the use of temporal logic to formally specify, and possibly also prove, the emergent behaviours of a robotic swarm. The paper makes use of a simplified wireless connected swarm as a case study with which to illustrate the approach. Such a formal approach could be an important step toward a disciplined design methodology for swarm robotics.", "num_citations": "101\n", "authors": ["1624"]}
{"title": "Resolution for temporal logics of knowledge\n", "abstract": " A resolution-based proof system for a temporal logic of knowledge is presented and shown to be correct. Such logics are useful for proving properties of distributed and multi-agent systems. Examples are given to illustrate the proof system. An extension of the basic system to the multi-modal case is given and illustrated using the \u2018muddy children problem\u2019.", "num_citations": "97\n", "authors": ["1624"]}
{"title": "Practical verification of decision-making in agent-based autonomous systems\n", "abstract": " We present a verification methodology for analysing the decision-making component in agent-based hybrid systems. Traditionally hybrid automata have been used to both implement and verify such systems, but hybrid automata based modelling, programming and verification techniques scale poorly as the complexity of discrete decision-making increases making them unattractive in situations where complex logical reasoning is required. In the programming of complex systems it has, therefore, become common to separate out logical decision-making into a separate, discrete, component. However, verification techniques have failed to keep pace with this development. We are exploring agent-based logical components and have developed a model checking technique for such components which can then be composed with a separate analysis of the continuous part of the hybrid system. Among other\u00a0\u2026", "num_citations": "91\n", "authors": ["1624"]}
{"title": "Computational logics and agents: a road map of current technologies and future trends\n", "abstract": " The concept of an agent is increasingly used in contemporary software applications, particularly those involving the Internet, autonomous systems, or cooperation. However, with dependability and safety in mind, it is vital that the mechanisms for representing and implementing agents are clear and consistent. Hence there has been a strong research effort directed at using formal logic as the basis for agent descriptions and agent implementation. Such a logical basis not only presents the clarity and consistency required but also allows for important techniques such as logical verification to be applied. We present a road map of research into the use of computational logic in agent\u2010based systems and survey much of the recent work in these areas. Even though, with such a rapidly changing field, it is impossible to cover every development, we aim to give the reader sufficient background to understand the current\u00a0\u2026", "num_citations": "88\n", "authors": ["1624"]}
{"title": "Concurrent metatem\u2014A language for modelling reactive systems\n", "abstract": " In this paper, a language based on the notion of concurrent, communicating objects is presented. Each object executes a specification given in temporal logic and communicates with other objects using asynchronous broadcast message-passing. In contrast to the notions of predicates as processes and stream parallelism seen in concurrent logic languages, Concurrent MetateM represents a more course-grained approach, where an object consists of a set of temporal rules and communication is achieved by the evaluation of certain types of predicate. Thus, Concurrent MetateM represents a combination of the direct execution of temporal specifications, together with a novel model of concurrent computation and, as such, it provides a new approach to the modelling of complex reactive systems.", "num_citations": "77\n", "authors": ["1624"]}
{"title": "Formal methods for the certification of autonomous unmanned aircraft systems\n", "abstract": " In this paper we assess the feasibility of using formal methods, and model checking in particular, for the certification of Unmanned Aircraft Systems (UAS) within civil airspace. We begin by modelling a basic UAS control system in Promela, and verify it against a selected subset of the CAA\u2019s Rules of the Air using the Spin model checker. Next we build a more advanced UAS control system using the autonomous agent language Gwendolen, and verify it against the small subset of the Rules of the Air using the agent model checker AJPF. We introduce more advanced autonomy into the UAS agent and show that this too can be verified. Finally we compare and contrast the various approaches, discuss the paths towards full certification, and present directions for future research.", "num_citations": "73\n", "authors": ["1624"]}
{"title": "Temporal development methods for agent-based\n", "abstract": " In this paper we overview one specific approach to the formal development of multi-agent systems. This approach is based on the use of temporal logics to represent both the behaviour of individual agents, and the macro-level behaviour of multi-agent systems. We describe how formal specification, verification and refinement can all be developed using this temporal basis, and how implementation can be achieved by directly executing these formal representations. We also show how the basic framework can be extended in various ways to handle the representation and implementation of agents capable of more complex deliberation and reasoning.", "num_citations": "73\n", "authors": ["1624"]}
{"title": "MetateM: The Story so Far\n", "abstract": " MetateM", "num_citations": "72\n", "authors": ["1624"]}
{"title": "A tableau-based proof method for temporal logics of knowledge and belief\n", "abstract": " In this paper we define two logics, KLn and BLn, and present tableau-based decision procedures for both. KLn is a temporal logic of knowledge. Thus, in addition to the usual connectives of linear discrete temporal logic, it contains a set of unary modal connectives for representing the knowledge possessed by agents. The logic BLn is somewhat similar; it is a temporal logic that contains connectives for representing the beliefs of agents. In addition to a complete formal definition of the two logics and their decision procedures, the paper includes a brief review of their applications in AI and mainstream computer science, correctness proofs for the decision procedures, a number of worked examples illustrating the decision procedures, and some pointers to further work.", "num_citations": "70\n", "authors": ["1624"]}
{"title": "Towards moral autonomous systems\n", "abstract": " Both the ethics of autonomous systems and the problems of their technical implementation have by now been studied in some detail. Less attention has been given to the areas in which these two separate concerns meet. This paper, written by both philosophers and engineers of autonomous systems, addresses a number of issues in machine ethics that are located at precisely the intersection between ethics and engineering. We first discuss the main challenges which, in our view, machine ethics posses to moral philosophy. We them consider different approaches towards the conceptual design of autonomous systems and their implications on the ethics implementation in such systems. Then we examine problematic areas regarding the specification and verification of ethical behavior in autonomous systems, particularly with a view towards the requirements of future legislation. We discuss transparency and accountability issues that will be crucial for any future wide deployment of autonomous systems in society. Finally we consider the, often overlooked, possibility of intentional misuse of AI systems and the possible dangers arising out of deliberately unethical design, implementation, and use of autonomous robots.", "num_citations": "69\n", "authors": ["1624"]}
{"title": "Towards temporal verification of swarm robotic systems\n", "abstract": " A robot swarm is a collection of simple robots designed to work together to carry out some task. Such swarms rely on the simplicity of the individual robots; the fault tolerance inherent in having a large population of identical robots; and the self-organised behaviour of the swarm as a whole. Although robot swarms present an attractive solution to demanding real-world applications, designing individual control algorithms that can guarantee the required global behaviour is a difficult problem. In this paper we assess and apply the use of formal verification techniques for analysing the emergent behaviours of robotic swarms. These techniques, based on the automated analysis of systems using temporal logics, allow us to analyse whether all possible behaviours within the robot swarm conform to some required specification. In particular, we apply model-checking, an automated and exhaustive algorithmic technique, to\u00a0\u2026", "num_citations": "69\n", "authors": ["1624"]}
{"title": "A normal form for first-order temporal formulae\n", "abstract": " In this paper a normal form for formulae of a first-order temporal logic is described. This normal form, called First-Order Separated Normal Form (SNFf), forms the basis of both a temporal resolution method [5] and a family of executable temporal logics [2]. A first-order temporal logic, based on a linear discrete model structure, is introduced and the procedure for transforming an arbitrary formula of this logic to SNFf is described. The transformation process not only preserves satisfiability but also ensures that any model of the transformed formula is a model of the original one. These properties ensure that the transformation into SNFf has applications in both theorem proving and execution.", "num_citations": "67\n", "authors": ["1624"]}
{"title": "A common semantic basis for BDI languages\n", "abstract": " We describe the design of an intermediate language (AIL) for BDI-style programming languages. AIL is not intended as yet another programming language, but is meant to provide a common semantic basis for a number of BDI programming languages in order to support both formal verification and the transfer of concepts and developments. We examine some of the key features of AIL, unifying a wide variety of structures appearing in the operational semantics of BDI programming languages. In particular, we highlight issues in the treatment of events, goals, and intentions, which are central to the design of these languages.", "num_citations": "66\n", "authors": ["1624"]}
{"title": "Automated verification of multi-agent programs\n", "abstract": " In this paper, we show that the flexible model-checking of multi-agent systems, implemented using agent-oriented programming languages, is viable thus paving the way for the construction of verifiably correct applications of autonomous agents and multi-agent systems. Model checking experiments were carried out on AJPF (agent JPF), our extension of Java PathFinder that incorporates the agent infrastructure layer, our unifying framework for agent programming languages. In our approach, properties are specified in a temporal language extended with (shallow) agent-related modalities. The framework then allows the verification of programs written in a variety of agent programming languages, thus removing the need for individual languages to implement their own verification framework. It even allows the verification of multi-agent systems comprised of agents developed in a variety of different (agent\u00a0\u2026", "num_citations": "60\n", "authors": ["1624"]}
{"title": "Toward reliable autonomous robotic assistants through formal verification: A case study\n", "abstract": " It is essential for robots working in close proximity to people to be both safe and trustworthy. We present a case study on formal verification for a high-level planner/scheduler for the Care-O-bot, an autonomous personal robotic assistant. We describe how a model of the Care-O-bot and its environment was developed using Brahms, a multiagent workflow language. Formal verification was then carried out by automatically translating this model to the input language of an existing model checker. Four sample properties based on system requirements were verified. We then refined the environment model three times to increase its accuracy and the persuasiveness of the formal verification results. The first refinement uses a user activity log based on real-life experiments, but is deterministic. The second refinement uses the activities from the user activity log nondeterministically. The third refinement uses \u201cconjoined\u00a0\u2026", "num_citations": "58\n", "authors": ["1624"]}
{"title": "An introduction to executable temporal logics\n", "abstract": " In recent years a number of programming languages based upon the direct execution of temporal logic formulae have been developed. The use of such logics provides a powerful basis for the representation and implementation of a range of dynamic behaviours. Though many of these languages are still experimental, they are beginning to be applied, not only in computer science and AI, but also in less obvious areas such as user interfaces, process control and social modelling. This article provides an introduction to some of the basic concepts of executable temporal logics, together with an overview of the main approaches being pursued.", "num_citations": "57\n", "authors": ["1624"]}
{"title": "Specifying and verifying distributed intelligent systems\n", "abstract": " This paper describes first steps towards the formal specification and verification of Distributed Artificial Intelligence (DAI) systems, through the use of temporal belief logics. The paper first describes Concurrent MetateM, a programming language for DAI, and then develops a logic that may be used to reason about Concurrent MetateM systems. The utility of this logic for specifying and verifying Concurrent MetateM systems is demonstrated through a number of examples. The paper concludes with a brief discussion of the wider implications of the work, and in particular on the use of similar logics for reasoning about DAI systems in general.", "num_citations": "57\n", "authors": ["1624"]}
{"title": "Generating certification evidence for autonomous unmanned aircraft using model checking and simulation\n", "abstract": " The use of unmanned aircraft for civil applications is expected to increase over the next decade, particularly in so-called dull, dirty, and dangerous missions. Unmanned aircraft will undoubtedly require some form of autonomy to ensure safe operations for all airspace users. However, to be used for civil applications, unmanned aircraft must gain regulatory approval in a process known as \u201ccertification\u201d. This paper presents a proof-of-concept approach to the generation of certification evidence for autonomous unmanned aircraft based on a combination of formal verification and flight simulation. In particular, a class of autonomous systems controlled by rational agents is examined, and we give examples of 23 different properties, based on the rules of the air and notions of airmanship, which can be used in the formal model checking of rational agents controlling autonomous unmanned aircraft. Our techniques can be\u00a0\u2026", "num_citations": "55\n", "authors": ["1624"]}
{"title": "Monodic temporal resolution\n", "abstract": " Until recently, First-Order Temporal Logic (FOTL) has been only partially understood. While it is well known that the full logic has no finite axiomatisation, a more detailed analysis of fragments of the logic was not previously available. However, a breakthrough by Hodkinson et al., identifying a finitely axiomatisable fragment, termed the monodic fragment, has led to improved understanding of FOTL. Yet, in order to utilise these theoretical advances, it is important to have appropriate proof techniques for this monodic fragment.In this paper, we modify and extend the clausal temporal resolution technique, originally developed for propositional temporal logics, to enable its use in such monodic fragments. We develop a specific normal form for monodic formulae in FOTL, and provide a complete resolution calculus for formulae in this form. Not only is this clausal resolution technique useful as a practical proof technique for\u00a0\u2026", "num_citations": "55\n", "authors": ["1624"]}
{"title": "Programming resource-bounded deliberative agents\n", "abstract": " This paper is concerned with providing a common framework for both the logical specification and execution of agents. While numerous high-level agent theories have been proposed in order to model agents, such as theories of intention, these often have little formal connection to practical agentbased systems. On the other hand, many of the agent-based programming languages used for implementing'real* agents lack firm logical semantics. Our approach is to define a logical framework in which agents can be specified, and then show how such specifications can be directly executed in order to implement the agent's behaviour. We here extend this approach to capture an important aspect of practical agents, namely their resource-bounded nature. We present a logic in which resource-boundedness can be specified, and then consider how specifications within this logic can be directly executed. The mechanism we use to capture finite resources is to replace the standard modal logic previously used to represent an agent's beliefs, with a multi-context representation of belief, thus providing tight control over the agent's reasoning capabilities where necessary. This logical framework provides the basis for the specification and execution of agents comprising dynamic (temporal) activity, deliberation concerning goals, and resource-bounded reasoning.", "num_citations": "54\n", "authors": ["1624"]}
{"title": "Advances in temporal logic\n", "abstract": " Time is a fascinating subject and has long since captured mankind's imagination, from the ancients to modern man, both adult and child alike. It has been studied across a wide range of disciplines, from the natural sciences to philosophy and logic. Today, thirty plus years since Prior's work in laying out foundations for temporal logic, and two decades on from Pnueli's seminal work applying of temporal logic in specification and verification of computer programs, temporal logic has a strong and thriving international research community within the broad disciplines of computer science and artificial intelligence. Areas of activity include, but are certainly not restricted to: Pure Temporal Logic, eg temporal systems, proof theory, model theory, expressiveness and complexity issues, algebraic properties, application of game theory; Specification and Verification, eg of reactive systems, ofreal-time components, of user interaction, of hardware systems, techniques and tools for verification, execution and prototyping methods; Temporal Databases, eg temporal representation, temporal query ing, granularity of time, update mechanisms, active temporal data bases, hypothetical reasoning; Temporal Aspects in AI, eg modelling temporal phenomena, in terval temporal calculi, temporal nonmonotonicity, interaction of temporal reasoning with action/knowledge/belief logics, temporal planning; Tense and Aspect in Natural Language, eg models, ontologies, temporal quantifiers, connectives, prepositions, processing tempo ral statements; Temporal Theorem Proving, eg translation methods, clausal and non-clausal resolution, tableaux, automata-theoretic approaches\u00a0\u2026", "num_citations": "53\n", "authors": ["1624"]}
{"title": "An introduction to executable modal and temporal logics\n", "abstract": " In recent years a number of programming languages based upon the direct execution of either modal or temporal logic formulae have been developed. This use of non-classical logics provides a powerful basis for the representation and implementation of a range of dynamic behaviours. Though many of these languages are still experimental, they are beginning to be applied, not only in Computer Science and AI, but also in less obvious areas such as process control and social modelling.             This paper provides an introduction to some of the basic concepts of executable modal and temporal logics.", "num_citations": "53\n", "authors": ["1624"]}
{"title": "Meta-Reasoning in Executable Temporal Logic.\n", "abstract": " Temporal logic can be used as a programming language. If temporal formulae are represented in the form of an implication where the antecedent refers to the past, and the consequent refers to the present and the future, then formulae that have their antecedent satisfied can be satisfied by considering the consequent as an imperative to be obeyed. Such a language becomes a natural alternative to programming languages, such as Prolog, for temporal reasoning. Here, the approach is extended to include an executable meta-language. This is of importance in developing interpretation, debugging, loop-checking, and simulation tools, and provides a representation for providing control knowledge in the execution of planning and scheduling programs.", "num_citations": "53\n", "authors": ["1624"]}
{"title": "Model checking for multiagent systems: The MABLE language and its applications\n", "abstract": " We present MABLE, a fully implemented programming language for multiagent systems, which is intended to support the automatic verification of such systems via model checking. In addition to the conventional constructs of imperative programming languages, MABLE provides a number of agent-oriented development features. First, agents in MABLE are endowed with a BDI-like mental state: they have data structures corresponding to beliefs, desires, and intentions, and these mental states may be arbitrarily nested. Second, agents in MABLE communicate via ACL-like performatives: however, neither the performatives nor their semantics are hardwired into the language. It is possible to define the performatives and the semantics of these performatives independently of the system in which they are used. Using this feature, a developer can explore the design space of ACL performatives and semantics without\u00a0\u2026", "num_citations": "52\n", "authors": ["1624"]}
{"title": "Equality and monodic first-order temporal logic\n", "abstract": " It has been shown recently that monodic first-order temporal logic without functional symbols but with equality is incomplete, i.e., the set of the valid formulae of this logic is not recursively enumerable. In this paper we show that an even simpler fragment consisting of monodic monadic two-variable formulae is not recursively enumerable.", "num_citations": "49\n", "authors": ["1624"]}
{"title": "The ABC of rational agent modelling\n", "abstract": " We introduce a logical model of rational agency incorporating the key notions of ability, belief, and confidence, the last of these capturing a flexible motivational attitude. Since the logical basis we propose is relatively simple, formal descriptions are amenable to both direct execution and formal verification. In particular, we show how this formalism can provide the basis for a high-level development method for both individual rational agents and multi-agent systems.", "num_citations": "49\n", "authors": ["1624"]}
{"title": "Mechanising first-order temporal resolution\n", "abstract": " First-order temporal logic is a concise and powerful notation, with many potential applications in both Computer Science and Artificial Intelligence. While the full logic is highly complex, recent work on monodic first-order temporal logics has identified important enumerable and even decidable fragments. Although a complete and correct resolution-style calculus has already been suggested for this specific fragment, this calculus involves constructions too complex to be of practical value. In this paper, we develop a machine-oriented clausal resolution method which features radically simplified proof search. We first define a normal form for monodic formulae and then introduce a novel resolution calculus that can be applied to formulae in this normal form. By careful encoding, parts of the calculus can be implemented using classical first-order resolution and can, thus, be efficiently implemented. We prove correctness\u00a0\u2026", "num_citations": "48\n", "authors": ["1624"]}
{"title": "Methodological foundations for agent-based systems\n", "abstract": " In spite of the rapid spread of agent technology, there is, as yet, little evidence of an engineering approach to the development of agent-based systems. In particular, development methods for these systems are relatively rare. One of the key reasons for this is the inadequacy of standard software development approaches for these new, and fundamentally different, agent-based systems. Traditional software development methods often lack the flexibility to handle high-level concepts such as an agent's dynamic control of its own behaviour, its ability to represent cooperative interactions, and its mechanisms for representing internal change, assumptions, objectives, and the uncertainty inherent in its interactions with the real-world.", "num_citations": "48\n", "authors": ["1624"]}
{"title": "Implementing BDI-like systems by direct execution\n", "abstract": " While the Belief, Desire, Intention (BDI) framework is one of the most influential and appealing approaches to rational agent architectures, a gulf often exists between the high-level BDI model and its practical realisation. In contrast, the Concurrent METATEM language, being based upon executable formal specifications, presents a close link between the theory and implementation, yet lacks some of the features considered central to the representation of rational agents. In this paper, we introduce a hybrid approach combining the direct execution of Concurrent METATEM with elements of rationality from the BDI framework. We show how this system can capture a range of agent behaviours, while retaining many of the advantages of executable specifications.", "num_citations": "48\n", "authors": ["1624"]}
{"title": "A decision procedure for a temporal belief logic\n", "abstract": " This paper presents a temporal belief logic called   . In addition to the usual connectives of linear discrete temporal logic,    contains an indexed set of modal belief connectives, via which it is possible to represent the belief systems of resource-bounded reasoning agents. The applications of    in general, and its use for representing the dynamic properties of multi-agent AI systems in particular, are discussed in detail. A tableau-based decision procedure for    is then described, and some examples of its use are presented. The paper concludes with a discussion and future work proposals.", "num_citations": "48\n", "authors": ["1624"]}
{"title": "Towards verifiably ethical robot behaviour\n", "abstract": " Ensuring that autonomous systems work ethically is both complex and difficult. However, the idea of having an additional \u2018governor\u2019that assesses options the system has, and prunes them to select the most ethical choices is well understood. Recent work has produced such a governor consisting of a \u2018consequence engine\u2019that assesses the likely future outcomes of actions then applies a Safety/Ethical logic to select actions. Although this is appealing, it is impossible to be certain that the most ethical options are actually taken. In this paper we extend and apply a well-known agent verification approach to our consequence engine, allowing us to verify the correctness of its ethical decision-making.", "num_citations": "47\n", "authors": ["1624"]}
{"title": "Specifying and executing protocols for cooperative action\n", "abstract": " The purpose of this paper is twofold:(i) to illustrate and re-emphasize the use of CONCURRENT METATEM, a programming language based on executable temporal logic, as a viable framework in which to develop Distributed Artificial Intelligence (DAI) applications; and (ii) to present a specific example of a cooperative protocol, give an outline of its implementation in CONCURRENT METATEM, and show how properties of the protocol can be established through formal proof.", "num_citations": "46\n", "authors": ["1624"]}
{"title": "A First-Order Branching Time Logic of Multi-Agent System.\n", "abstract": " This paper presents a first-order branching time temporal logic that is suitable for describing and reasoning about a wide class of computational multi-agent systems. The logic is novel in that it supports reasoning about the beliefs, actions, goals, abilities and structure of groups of agents. A sound proof system for the logic is presented, and some short examples are given, showing how the logic might be used to specify desirable properties of multi-agent systems.", "num_citations": "45\n", "authors": ["1624"]}
{"title": "Formal verification of an autonomous personal robotic assistant\n", "abstract": " Human--robot teams are likely to be used in a variety of situations wherever humans require the assistance of robotic systems. Obvious examples include healthcare and manufacturing, in which people need the assistance of machines to perform key tasks. It is essential for robots working in close proximity to people to be both safe and trustworthy. In this paper we examine formal verification of a high-level planner/scheduler for autonomous personal robotic assistants such as Care-O-bot. We describe how a model of Care-O-bot and its environment was developed using Brahms, a multi-agent workflow language. Formal verification was then carried out by translating this to the input language of an existing model checker. Finally we present some formal verification results and describe how these could be complemented by simulation-based testing and real-world end-user validation in order to increase the practical and perceived safety and trustworthiness of robotic assistants.", "num_citations": "44\n", "authors": ["1624"]}
{"title": "A corroborative approach to verification and validation of human\u2013robot teams\n", "abstract": " We present an approach for the verification and validation (V&V) of robot assistants in the context of human\u2013robot interactions, to demonstrate their trustworthiness through corroborative evidence of their safety and functional correctness. Key challenges include the complex and unpredictable nature of the real world in which assistant and service robots operate, the limitations on available V&V techniques when used individually, and the consequent lack of confidence in the V&V results. Our approach, called corroborative V&V, addresses these challenges by combining several different V&V techniques; in this paper we use formal verification (model checking), simulation-based testing, and user validation in experiments with a real robot. This combination of approaches allows V&V of the human\u2013robot interaction task at different levels of modeling detail and thoroughness of exploration, thus overcoming the\u00a0\u2026", "num_citations": "42\n", "authors": ["1624"]}
{"title": "Using temporal logics of knowledge in the formal verification of security protocols\n", "abstract": " Temporal logics of knowledge are useful for reasoning about situations where the knowledge of an agent or component is important, and where change in this knowledge may occur over time. Here we use temporal logics of knowledge to reason about security protocols. We show how to specify part of the Needham-Schroeder protocol using temporal logics of knowledge and prove various properties using a clausal resolution calculus for this logic.", "num_citations": "42\n", "authors": ["1624"]}
{"title": "Combinations of modal logics\n", "abstract": " There is increasing use of combinations of modal logics in bothfoundational and applied research areas. This article provides anintroduction to both the principles of such combinations and to thevariety of techniques that have been developed for them. In addition,the article outlines many key research problems yet to be tackledwithin this callenging area of work.", "num_citations": "42\n", "authors": ["1624"]}
{"title": "Metatem at work: Modelling reactive systems using executable temporal logic\n", "abstract": " In this paper we describe the application of a high-level programming language to the abstract modelling of transport systems. We show how METATEM, a language based upon the execution of temporal logics, can be used to model railway networks. The examples considered are abstractions of real rail systems, and we show how such abstractions can be modelled both by standard, and concurrent, METATEM. During this exercise, we highlight the features of executable temporal logics, and METATEM in particular, which aid the modelling of such dynamic, reactive systems.", "num_citations": "41\n", "authors": ["1624"]}
{"title": "Combined model checking for temporal, probabilistic, and real-time logics\n", "abstract": " Model checking is a well-established technique for the formal verification of concurrent and distributed systems. In recent years, model checking has been extended and adapted for multi-agent systems, primarily to enable the formal analysis of belief\u2013desire\u2013intention systems. While this has been successful, there is a need for more complex logical frameworks in order to verify realistic multi-agent systems. In particular, probabilistic and real-time aspects, as well as knowledge, belief, goals, etc., are required.However, the development of new model checking tools for complex combinations of logics is both difficult and time consuming. In this article, we show how model checkers for the constituent temporal, probabilistic, and real-time logics can be re-used in a modular way when we consider combined logics involving different dimensions. This avoids the re-implementation of model checking procedures. We define a\u00a0\u2026", "num_citations": "39\n", "authors": ["1624"]}
{"title": "From the past to the future: Executing temporal logic programs\n", "abstract": " We describe some of the techniques which have been used to implement MetateM, a programming language based on temporal logic, and address problems such as non-determinism and looping which place constraints on the use of temporal logic as a programming language.", "num_citations": "39\n", "authors": ["1624"]}
{"title": "On proactive, transparent, and verifiable ethical reasoning for robots\n", "abstract": " Previous work on ethical machine reasoning has largely been theoretical, and where such systems have been implemented, it has, in general, been only initial proofs of principle. Here, we address the question of desirable attributes for such systems to improve their real world utility, and how controllers with these attributes might be implemented. We propose that ethically critical machine reasoning should be proactive, transparent, and verifiable. We describe an architecture where the ethical reasoning is handled by a separate layer, augmenting a typical layered control architecture, ethically moderating the robot actions. It makes use of a simulation-based internal model and supports proactive, transparent, and verifiable ethical reasoning. To do so, the reasoning component of the ethical layer uses our Python-based belief-desire-intention (BDI) implementation. The declarative logic structure of BDI facilitates both\u00a0\u2026", "num_citations": "38\n", "authors": ["1624"]}
{"title": "Temporal representation and reasoning\n", "abstract": " Publisher SummaryThis chapter presents many ways in which temporal phenomena can be modeled, described, reasoned about, and applied. The chapter describes the use of temporal reasoning in artificial intelligence (AI) and presents an alternative logic-based view of temporal logics. . It discusses languages for talking about such temporal representations and their properties; these languages are forms of temporal logic. This chapter discusses the problem of reasoning about descriptions given in these temporal languages and highlights a number of significant techniques. The chapter also outlines the application areas for temporal representation and reasoning. Although quanti\ufb01cation in classic \ufb01rst-order logic is typically used to quantify over a particular data domain, the additional aspect of an underlying temporal structure provides a further possibility in temporal logics\u2014that is, the ability to quantify over\u00a0\u2026", "num_citations": "38\n", "authors": ["1624"]}
{"title": "Executable temporal logic for distributed AI In\n", "abstract": " This paper describes Concurrent METATEM, a programming language based on temporal logic, and applies it to the study of Distributed Artificial Intelligence (DAI). A Concurrent METATEM system consists of a number of asynchronously executing objects, which are able to communicate through broadcast message-passing. Each individual object directly executes a specification of its desired behaviour. Such specifications are given using a set of temporal logic \u2018rules\u2019, determining how the object may generate \u2018commitments\u2019, which it subsequently attempts to satisfy. This language provides a novel and powerful approach to representing DAI systems, where individual \u2018agents\u2019 are specified in a natural way using temporal logic, while groups of agents communicate by broadcasting information.", "num_citations": "36\n", "authors": ["1624"]}
{"title": "Concurrent METATEM processes\u2013A language for distributed AI\n", "abstract": " In this paper, we introduce Concurrent METATEM Processes, a high-level language for modeling distributed and concurrent systems. This language represents an operational model for a variety of METATEM, which is a framework for executable temporal logics. We argue that the combination of executable temporal logic, meta-level capabilities, and concurrent operational model make the language suitable for use in the design and modeling of both reactive and distributed AI systems.", "num_citations": "35\n", "authors": ["1624"]}
{"title": "A simplified clausal resolution procedure for propositional linear-time temporal logic\n", "abstract": " The clausal resolution method for propositional linear-time temporal logics is well known and provides the basis for a number of temporal provers. The method is based on an intuitive clausal form, called SNF, comprising three main clause types and a small number of resolution rules. In this paper, we show how the normal form can be radically simplified and, consequently, how a simplified clausal resolution method can be defined for this important variety of logic.", "num_citations": "33\n", "authors": ["1624"]}
{"title": "Agent Modelling in METATEM and DESIRE\n", "abstract": " In spite of the rapid spread of agent technology, there is, as yet, little evidence of an engineering approach to the development of multi-agent systems. For example, both development methods and verification techniques for multi-agent systems are rare. In this paper, we describe a case study aimed at comparing two formal agent modelling languages, namely Concurrent MetateM and DESIRE. A version of the well known PRS architecture is developed and the approaches are compared with respect to this application.", "num_citations": "33\n", "authors": ["1624"]}
{"title": "Tractable Temporal Reasoning.\n", "abstract": " Temporal reasoning is widely used within both Computer Science and AI However, the underlying complexity of temporal proof in discrete temporal logics has led to the use of simplified formalisms and techniques, such as temporal interval algebras or model checking. In this paper we show that tractable sub-classes of propositional linear temporal logic can be developed, based on the use of XOR fragments of the logic. We not only show that such fragments can be decided, tractably, via clausal temporal resolution, but also show the benefits of combining multiple XOR fragments. For such combinations we establish completeness and complexity (of the resolution method), and also describe how such a temporal language might be used in application areas, for example the verification of multi-agent systems. This new approach to temporal reasoning provides a framework in which tractable temporal logics can be engineered by intelligently combining appropriate XOR fragments.", "num_citations": "32\n", "authors": ["1624"]}
{"title": "Temporal logics of knowledge and their applications in security\n", "abstract": " Temporal logics of knowledge are useful for reasoning about situations where the knowledge of an agent or component is important, and where change in this knowledge may occur over time. Here we investigate the application of temporal logics of knowledge to the specification and verification of security protocols. We show how typical assumptions relating to authentication protocols can be specified. We consider verification methods for these logics, in particular, focusing on proofs using clausal resolution. Finally we present experiences from using a resolution based theorem prover applied to security protocols specified in temporal logics of knowledge.", "num_citations": "31\n", "authors": ["1624"]}
{"title": "Monodic temporal resolution\n", "abstract": " First-order temporal logic is a concise and powerful notation, with many potential applications in both Computer Science and Artificial Intelligence. While the full logic is highly complex, recent work on monodic first-order temporal logics have identified important enumerable and even decidable fragments. In this paper we present the first resolution-based calculus for monodic first-order temporal logic. Although the main focus of the paper is on establishing completeness results, we also consider implementation issues and define a basic loop-search algorithm that may be used to guide the temporal resolution system.", "num_citations": "31\n", "authors": ["1624"]}
{"title": "A resolution method for CTL branching-time temporal logic\n", "abstract": " We extend our clausal resolution method for linear temporal logics to a branching-time framework. The branching-time temporal logics considered are computation tree logic (CTL), often regarded as the simplest useful logic of this class, and extended CTL (ECTL), which is CTL extended with fairness operators. The key elements of the resolution method, namely the normal form, the concept of step resolution and a novel temporal resolution rule, are introduced and justified with respect to both these logics. A completeness argument is provided, together with an example of the use of the temporal resolution method. Finally, we consider future work, in particular extension of the method yet further, to CTL*, and implementation of the approach by utilising techniques developed for linear-time temporal resolution.", "num_citations": "31\n", "authors": ["1624"]}
{"title": "Computerphobia in adult learners\n", "abstract": " With the increasing importance of technology in our lives, incidences of adults experiencing anxiety about technology (technophobia') are on the increase. The eld of technology that has advanced most rapidly in the last 40 years is that of computers and micro-electronics. Thus,computerphobia'(orcomputer anxiety') is a particularly striking example of the e ects of the rapid growth of our technological society. Though computerphobia can a ect young and old alike, it can be considered di erent in adults and children for the same reasons that education can be considered di erent for these groups. For example, Knowles 12] cites di erences in self-concept, in experience, in readiness to learn, and in time perspective as some of the main attitudes distinguishing learning in children and adults. For many years no distinction was made between the education of adults and the education of children, but educational theorists such as Malcolm Knowles have spent a great deal of time trying to convince other educators of this distinction. Only relatively recently has Andragogy 12], the art and science of teaching adults, been distinguished from Pedagogy, the art and science of teaching children. Analogously, these di erences are also found in the e ect of and cures for computerphobia: self-concept| children tend tobrush-o'failure, adults do not; experience|\\To an adult, his experience is him\"| thus, if an adult cannot master some discipline, their experience and consequently their self-image are questioned; readiness| children are often more willing and more able to learn and accept new ideas than adults; time| children are often unafraid of failure as they feel they\u00a0\u2026", "num_citations": "31\n", "authors": ["1624"]}
{"title": "Formal verification of probabilistic swarm behaviours\n", "abstract": " Robot swarms provide a way for a number of simple robots to work together to carry out a task. While swarms have been found to be adaptable, fault-tolerant and widely applicable, designing individual robot algorithms so as to ensure effective and correct swarm behaviour is very difficult. In order to assess swarm effectiveness, either experiments with real robots or computational simulations of the swarm are usually carried out. However, neither of these involve a deep analysis of all possible behaviours. In this paper we will utilise automated formal verification techniques, involving an exhaustive mathematical analysis, in order to assess whether our swarms will indeed behave as required.", "num_citations": "30\n", "authors": ["1624"]}
{"title": "A flexible framework for verifying agent programs (short paper)\n", "abstract": " There is an increasing number of agent-oriented programming languages that have working interpreters and platforms, with significant progress in the quality of such platforms over the last few years. With these platforms becoming more popular, and multi-agent systems being increasingly used for safety-critical applications, the need for verification techniques that apply to systems written in such languages is proportionally intensified. Building on our previous work on model checking for a particular agent-oriented programming language, we have developed a new approach whereby model checking techniques can be used directly on a variety of such languages. The approach also supports the verification of multi-agent systems where individual agents have been programmed in different agent languages.", "num_citations": "30\n", "authors": ["1624"]}
{"title": "Clausal resolution in a logic of rational agency\n", "abstract": " A resolution based proof system for a Temporal Logic of Possible Belief is presented. This logic is the combination of the branching-time temporal logic CTL (representing change over time) with the modal logic KD45 (representing belief\u00a0). Such combinations of temporal or dynamic logics and modal logics are useful for specifying complex properties of multi-agent systems. Proof methods are important for developing verification techniques for these complex multi-modal logics. Soundness, completeness and termination of the proof method are shown and simple examples illustrating its use are given.", "num_citations": "30\n", "authors": ["1624"]}
{"title": "Flexible agent grouping in executable temporal logic\n", "abstract": " In recent years, it has become apparent that traditional software techniques are unable to cope with the complexity of today's requirements and so a new technology, termed agent-based systems, has been developed and applied. While research has been carried out concerning the capabilities and design of individual autonomous agents, complex real-world applications often require the cooperation and teamwork of a group of agents. In general a single agent suffices as long as the agent has the resources and the capacity to achieve the required goals. However, as the complexity and uncertainty of the tasks involved in the achievement of the system's goals increases, cooperative work between a number of agents becomes essential. In this case, a mechanism that groups and organises the cooperative activity of individual agents is required. Here, we provide the formal basis for such a grouping mechanism and\u00a0\u2026", "num_citations": "30\n", "authors": ["1624"]}
{"title": "An open approach to concurrent theorem proving\n", "abstract": " The purpose of this paper is twofold. Its main aim is to present an alternative mechanism for representing concurrent theorem-proving activity which primarily relies upon massive parallelism and efficient broadcast communication. A secondary aim is to further motivate this model of concurrent theorem-proving by outlining how the basic model might be utilised in order to provide more dynamic, flexible and adaptable systems.The approach to concurrent theorem-proving we propose is based upon the use of asynchronously executing concurrent objects. Each object contains a particular set of formulae and broadcasts messages corresponding to specific information about those formulae. Based upon the messages that an object receives, it can make simple inferences, transforming the formulae it contains and sending out further messages as a result. Communication can be organised so that, if a formula, distributed across a set of objects, is unsatisfiable then at least one of the objects will eventually derive a contradiction.", "num_citations": "30\n", "authors": ["1624"]}
{"title": "Formal analysis of a VANET congestion control protocol through probabilistic verification\n", "abstract": " Vehicular ad hoc networks (VANETs), which are a class of Mobile ad hoc networks, have recently been developed as a standard means of communication among moving vehicles. Since VANETs are vital to the safety of the vehicles, the infrastructure, and the humans involved, a deep analysis of their potential behaviours is clearly required. In this paper we provide this analysis through the use of formal verification. Specifically, we formally analyse a specific congestion control protocol for VANETs using a probabilistic model checking technique, and investigate its correctness and effectiveness.", "num_citations": "29\n", "authors": ["1624"]}
{"title": "Normal forms and proofs in combined modal and temporal logics\n", "abstract": " In this paper we present a framework for the combination of modal and temporal logic. This framework allows us to combine different normal forms, in particular, a separated normal form for temporal logic and a first-order clausal form for modal logics. The calculus of the framework consists of temporal resolution rules and standard first-order resolution rules.               We show that the calculus provides a sound, complete, and terminating inference systems for arbitrary combinations of subsystems of multi-modal S5 with linear, temporal logic.", "num_citations": "29\n", "authors": ["1624"]}
{"title": "Verifying brahms human-robot teamwork models\n", "abstract": " Collaboration between robots and humans is an increasingly important aspect of industrial and scientific settings. In addition, significant effort is being put into the development of robot helpers for more general use in the workplace, at home, and in health-care environments. However, before such robots can be fully utilised, a comprehensive analysis of their safety is necessary. Formal verification techniques are regularly used to exhaustively assess system behaviour. Our aim is to apply such techniques to Brahms, a human-agent-robot modelling language. We show how to translate from Brahms scenarios, using a formal semantics for Brahms, into the input language of a model checker. We illustrate the approach by defining, translating, and verifying a domestic robot helper example.", "num_citations": "28\n", "authors": ["1624"]}
{"title": "Towards temporal verification of emergent behaviours in swarm robotic systems\n", "abstract": " A robot swarm is a collection of simple robots designed to work together to carry out some task. Such swarms rely on: the simplicity of the individual robots; the fault tolerance inherent in having a large population of often identical robots; and the self-organised behaviour of the swarm as a whole. Although robot swarms are being deployed in increasingly sophisticated areas, designing individual control algorithms that can guarantee the required global behaviour is difficult. In this paper we apply and assess the use of formal verification techniques, in particular that of model checking, for analysing the emergent behaviours of robotic swarms. These techniques, based on the automated analysis of systems using temporal logics, allow us to analyse all possible behaviours and so identify potential problems with the robot swarm conforming to some required global behaviour. To show this approach we target a\u00a0\u2026", "num_citations": "28\n", "authors": ["1624"]}
{"title": "Satellite control using rational agent programming\n", "abstract": " Traditionally a satellite is a large and expensive piece of equipment, tightly controlled by a ground team with little scope for autonomy. The space industry has recently sought to abandon large monolithic platforms, however, in favor of multiple, smaller satellites working in teams to accomplish the task of a larger vehicle through distributed methods. Both financially and functionally motivated, such developments help reduce launch vehicle constraints and nearly eliminate ground station personnel costs, while introducing fault tolerance and redundancy into the system. Moreover, in some instances, a distributed platform is the only feasible method to accomplish a particular mission.", "num_citations": "28\n", "authors": ["1624"]}
{"title": "Representing abstract agent architectures\n", "abstract": " An agent\u2019s architecture describes not only its sub-components, but also how these elements are organised in order to provide the agent\u2019s overall behaviour. While there have been numerous different architectures developed, ranging from purely reactive or purely deliberative, through to hybrid and layered varieties, such systems have largely been developed using different frameworks, and often using ad hoc methods, thus making both comparison between architectures and the development of new architectures difficult.               In this paper we show how a high-level logical language might be utilised in order to describe both the components of an agent, which can be considered as subagents, and its internal organisation, which can be characterised as appropriate patterns interaction between, and structuring of, these sub-agents. In particular, we show how contemporary layered architectures, consisting\u00a0\u2026", "num_citations": "28\n", "authors": ["1624"]}
{"title": "Temporal semantics for concurrent MetateM\n", "abstract": " Concurrent MetateM is a programming language based on the notion of concurrent, communicating objects, where each object directly executes a specification given in temporal logic, and communicates with other objects using asynchronous broadcast messagepassing. Thus, Concurrent MetateM represents a combination of the direct execution of temporal specifications, together with a novel model of concurrent computation. In contrast to the notions of predicates as processes and stream parallelism seen in concurrent logic languages, Concurrent MetateM represents a more coarse-grained approach, where an object consists of a set of logical rules and communication is achieved by the evaluation of certain types of predicate. Representing concurrent systems as groups of such objects provides a powerful tool for modelling complex reactive systems. In order to reason about the behaviour of Concurrent MetateM systems, we require a suitable semantics. Being based upon executable temporal logic, objects in isolation have an intuitive semantics. However, the addition of both operational constraints upon the object\u2019s execution and global constraints provided by the asynchronous model of concurrency and communication, complicates the overall semantics of networks of objects. It is this, more complex, semantics that we address here, where temporal semantics for varieties of Concurrent MetateM are provided. c\u00a9 1996 Academic Press Limited", "num_citations": "28\n", "authors": ["1624"]}
{"title": "Transformation and synthesis in METATEM Part I: Propositional METATEM\n", "abstract": " In this report, the syntactic manipulation of temporal logic programs is considered. Transformation rules are provided for a temporal programming language that forms part of the METATEM framework for executable temporal logics [2]. Soundness of the various transformations is shown and several applications are given, such as the production of a normal form for programs, which is the basis of both compilation and resolution techniques. The use of transformation techniques in METATEM program synthesis is also considered. Here, a high-level specification, represented as a non-deterministic METATEM program is translated into animplementation', which is again represented as a METATEM program. The synthesised program is deterministic in that, for any action by the environment, the component has at least one possible (deterministic) response.* This work was supported both by ESPRIT under Basic Research Action 3096 (SPEC), and by SERC under Research Grant GR/F 30123. Contents 1...", "num_citations": "28\n", "authors": ["1624"]}
{"title": "First report of the successful use of bosentan in refractory vasospastic angina\n", "abstract": " Variant angina is caused by focal spasm of the epicardial coronary arteries and is variably associated with atherosclerotic coronary disease. We present the clinical course of profound coronary spasm in a woman which resulted in life-threatening symptoms. Although not previously reported, administration of the endothelin antagonist bosentan resulted in complete resolution of her symptoms which were refractory to commonly used anti-anginals, and these symptoms recurred when the drug was inadvertently withdrawn, confirming efficacy of the agent. The details of her clinical outcome and a review of the role of endothelin and its antagonists in coronary vasospasm are discussed.", "num_citations": "27\n", "authors": ["1624"]}
{"title": "Towards first-order temporal resolution\n", "abstract": " In this paper we show how to extend clausal temporal resolution to the ground eventuality fragment of monodic first-order temporal logic, which has recently been introduced by Hodkinson, Wolter and Zakharyaschev. While a finite Hilbert-like axiomatization of complete monodic first order temporal logic was developed by Wolter and Zakharyaschev, we propose a temporal resolutionbased proof system which reduces the satisfiability problem for ground eventuality monodic first-order temporal formulae to the satisfiability problem for formulae of classical first-order logic.", "num_citations": "27\n", "authors": ["1624"]}
{"title": "Distributed problem-solving as concurrent theorem proving\n", "abstract": " Our principal aim in this paper is to demonstrate that distributed problem solving may fruitfully be viewed as concurrent theorem proving. We begin by introducing a novel agent-based approach to concurrent theorem proving, and then describe Concurrent MetateM, a multi-agent programming language whose model of computation is closely related to that used within the theorem proving approach. An extended case study is then presented, wherein we demonstrate how a multi-agent planning system can be implemented within the agent-based theorem proving framework. We then show how extensions and refinements of the planning system can easily be accommodated within this framework. We conclude with a detailed discussion of related work, from both the multi-agent systems community and the (concurrent) theorem proving community.", "num_citations": "27\n", "authors": ["1624"]}
{"title": "Reconfigurable autonomy\n", "abstract": " This position  paper describes ongoing work at the Universities of Liverpool, Sheffield and Surrey in the UK on developing hybrid agent architectures for controlling autonomous systems, and specifically for ensuring that agent-controlled dynamic reconfiguration is viable. The work outlined here forms part of the Reconfigurable Autonomy research project.", "num_citations": "26\n", "authors": ["1624"]}
{"title": "Autonomous asteroid exploration by rational agents\n", "abstract": " The history of software agent architectures has been driven by the parallel requirements of real-time decision-making and the sophistication of the capabilities the agent can provide. Starting from reactive, rule based, subsumption through to layered and belief-desire-intention architectures, a compromise always has to be reached between the ability to respond to the environment in a timely manner and the provision of capabilities that cope with relatively complex environments. In the spirit of these past developments, this paper is proposing a novel \"anthropomorphic\" agent architecture that brings together the most desirable features: natural language definitions of agent reasoning and skill descriptions, shared knowledge with operators, the combination of fast reactive as well as long term planning, ability to explain why certain actions are taken by the autonomous agent and finally inherent formal verifiability. With\u00a0\u2026", "num_citations": "26\n", "authors": ["1624"]}
{"title": "Towards the implementation of first-order temporal resolution: the expanding domain case\n", "abstract": " First-order temporal logic is a concise and powerful notation, with many potential applications in both Computer Science and Artificial Intelligence. While the full logic is highly complex, recent work on monodic first-order temporal logics has identified important enumerable and even decidable fragments. In this paper, we develop a clausal resolution method for the monodic fragment of first-order temporal logic over expanding domains. We first define a normal form for monodic formulae and then introduce novel resolution calculi that can be applied to formulae in this normal form. We state correctness and completeness results for the method. We illustrate the method on a comprehensive example. The method is based on classical first-order resolution and can, thus, be efficiently implemented.", "num_citations": "26\n", "authors": ["1624"]}
{"title": "Towards a semantics for Concurrent METATEM\n", "abstract": " Concurrent MetateM is a programming language based on the notion of concurrent, communicating objects, where each object directly executes a specification given in temporal logic, and communicates with other objects using asynchronous broadcast message-passing. Thus, Concurrent MetateM represents a combination of the direct execution of temporal specifications, together with a novel model of concurrent computation. In contrast to the notions of predicates as processes and stream parallelism seen in concurrent logic languages, Concurrent MetateM represents a more coarse-grained approach, where an object consists of a set of logical rales and communication is achieved by the evaluation of certain types of predicate. Representing concurrent systems as groups of such objects provides a powerful tool for modelling complex reactive systems. Being based upon executable temporal logic, objects\u00a0\u2026", "num_citations": "26\n", "authors": ["1624"]}
{"title": "Autonomous nuclear waste management\n", "abstract": " Redundant and nonoperational buildings at nuclear sites are decommissioned over a period of time. The process involves demolition of physical infrastructure resulting in large quantities of residual waste material. The resulting waste materials are packed into import containers to be delivered for postprocessing, containing either sealed canisters or assortments of miscellaneous objects. At present postprocessing does not happen within the United Kingdom. Sellafield Ltd. and National Nuclear Laboratory are developing a process for future operation so that upon an initial inspection, imported waste materials undergo two stages of postprocessing before being packed into export containers, namely sort and segregate or sort and disrupt. The postprocessing facility will remotely treat and export a wide range of wastes before downstream encapsulation. Certain wastes require additional treatment, such as disruption\u00a0\u2026", "num_citations": "25\n", "authors": ["1624"]}
{"title": "Organising logic-based agents\n", "abstract": " In this paper we address the task of organising multi-agent systems in order to collectively solve problems. We base our approach on a logical model of rational agency comprising a few simple, but powerful, concepts. While many other researchers have tackled this problem using formal logic, the important aspect of the work described here is that the logical descriptions of the agents are directly executable using the Concurrent MetateM framework, allowing the execution of agents described in a combination of temporal, belief and ability logics. Here, we are particularly concerned with exploring some of the possible logical constraints that may be imposed upon these agents, and how these constraints affect the ability of the agents to come together to collectively solve problems.", "num_citations": "25\n", "authors": ["1624"]}
{"title": "Characterising simple negotiation as distributed agent-based theorem-proving-a preliminary report\n", "abstract": " Negotiation is a key technique for dynamically organising activity in multi-agent systems, yet the negotiation process itself can often be difficult to reason about. We introduce a framework in which negotiation can be characterised as a form of distributed, multi-agent theorem-proving. Thus, in this preliminary analysis, we show that certain simple forms of negotiation will be successful if, and only if a corresponding theorem can be proved by agents acting as theorem-proving components. We extend this approach further to represent situations where the agent has a choice of possible responses, given a proposal received. In such cases, an ordering strategy is used to select the order in which replies are provided; this corresponds to a common use of ordering within classical theorem-proving.", "num_citations": "25\n", "authors": ["1624"]}
{"title": "A rational agent controlling an autonomous vehicle: Implementation and formal verification\n", "abstract": " The development and deployment of Autonomous Vehicles (AVs) on our roads is not only realistic in the near future but can also bring significant benefits. In particular, it can potentially solve several problems relating to vehicles and traffic, for instance: (i) possible reduction of traffic congestion, with the consequence of improved fuel economy and reduced driver inactivity; (ii) possible reduction in the number of accidents, assuming that an AV can minimise the human errors that often cause traffic accidents; and (iii) increased ease of parking, especially when one considers the potential for shared AVs. In order to deploy an AV there are significant steps that must be completed in terms of hardware and software. As expected, software components play a key role in the complex AV system and so, at least for safety, we should assess the correctness of these components. In this paper, we are concerned with the high-level software component(s) responsible for the decisions in an AV. We intend to model an AV capable of navigation; obstacle avoidance; obstacle selection (when a crash is unavoidable) and vehicle recovery, etc, using a rational agent. To achieve this, we have established the following stages. First, the agent plans and actions have been implemented within the Gwendolen agent programming language. Second, we have built a simulated automotive environment in the Java language. Third, we have formally specified some of the required agent properties through LTL formulae, which are then formally verified with the AJPF verification tool. Finally, within the MCAPL framework (which comprises all the tools used in previous stages) we\u00a0\u2026", "num_citations": "24\n", "authors": ["1624"]}
{"title": "Reasoning about agents in the KARO framework\n", "abstract": " This paper proposes two methods for realising automated reasoning about agent-based systems. The framework for modelling intelligent agent behaviour that we focus on is a core of KARO logic, an expressive combination of various modal logics including propositional dynamic logic, a modal logic of knowledge, a modal logic of wishes, and additional non-standard operators. The first method we present is based on a translation of core KARO logic to first-order logic combined with first-order resolution. The second method uses an embedding of core KARO logic into a combination of branching-time temporal logic CTL and multi-modal S5 plus a clausal resolution calculus for these combined logics. We discuss the advantages and shortcomings of each approach and suggest ways to extend each variant to cover more of the KARO framework.", "num_citations": "24\n", "authors": ["1624"]}
{"title": "Clausal resolution for logics of time and knowledge with synchrony and perfect recall\n", "abstract": " Temporal logics of knowledge are widely used in the specification and analysis of distributed and multi-agent systems where the behaviour of a component is captured by its set of possible executions. In spite of this, proof methods for these logics are rare, particularly in cases where the temporal and epistemic dimensions can interact. In this paper, we present a clausal resolution system for a temporal logic of knowledge admitting such interactions. The particular interaction we consider captures synchronous systems with perfect recall. A system is said to have perfect recall if the set of executions an agent considers possible stays the same or decreases over time. Soundness, termination and completeness results for the resolution system are discussed.", "num_citations": "24\n", "authors": ["1624"]}
{"title": "\u201cThe fridge door is open\u201d\u2013Temporal Verification of a Robotic Assistant\u2019s Behaviours\n", "abstract": " Robotic assistants are being designed to help, or work with, humans in a variety of situations from assistance within domestic situations, through medical care, to industrial settings. Whilst robots have been used in industry for some time they are often limited in terms of their range of movement or range of tasks. A new generation of robotic assistants have more freedom to move, and are able to autonomously make decisions and decide between alternatives. For people to adopt such robots they will have to be shown to be both safe and trustworthy. In this paper we focus on formal verification of a set of rules that have been developed to control the Care-O-bot, a robotic assistant located in a typical domestic environment. In particular, we apply model-checking, an automated and exhaustive algorithmic technique, to check whether formal temporal properties are satisfied on all the possible behaviours of the\u00a0\u2026", "num_citations": "22\n", "authors": ["1624"]}
{"title": "Towards the verification of pervasive systems\n", "abstract": " Pervasive systems, that is roughly speaking systems that can interact with their environment, are increasingly common. In such systems, there are many dimensions to assess: security and reliability, safety and liveness, real-time response, etc. So far modelling and formalizing attempts have been very piecemeal approaches. This paper describes our analysis of a pervasive case study (MATCH, a homecare application) and our proposal for formal (particularly verification) approaches. Our goal is to see to what extent current state of the art formal methods are capable of coping with the verification demand introduced by pervasive systems, and to point out their limitations.", "num_citations": "22\n", "authors": ["1624"]}
{"title": "An agent based framework for adaptive control and decision making of autonomous vehicles\n", "abstract": " The paper addresses the problem of defining a theoretical physical agent framework that combines rational agent decision making with abstractions from predictions and planning of the future of the physical environment. The objective of the new framework is to reduce complexity of logical inference of agents controlling autonomous vehicles and robots in space exploration, deep underwater exploration, defense reconnaissance, automated manufacturing and household automation. An essential feature of the framework is automated realtime evaluations of abstractions on the effects of future actions. Comparison is made with hybrid automaton based solutions in terms of computational complexity.", "num_citations": "22\n", "authors": ["1624"]}
{"title": "Language constructs for multi-agent programming\n", "abstract": " In this paper we are concerned with proposing, analyzing and implementing simple, yet flexible, constructs for multi-agent programming. In particular, we wish to extend programming languages based on the BDI style of logical agent model with two such constructs, namely constraints and content/context sets. These two aspects provide sufficient expressive power to allow us to represent, simply and with semantic clarity, a wide range of organisational structures for multi-agent systems. We not only introduce this approach, but provide its formal semantics, through modification of an operational semantics based on the core of AgentSpeak, 3APL and MetateM. In addition, we provide illustrative examples by simulating both constraints and content/context sets within the Jason interpreter for AgentSpeak. In summary, we advocate the use of these simple constructs in many logic-based BDI languages, by\u00a0\u2026", "num_citations": "22\n", "authors": ["1624"]}
{"title": "Verification within the KARO agent theory\n", "abstract": " This paper discusses automated reasoning in the KARO framework. The KARO framework accommodates a range of expressive modal logics for describing the behaviour of intelligent agents. We concentrate on a core logic within this framework, in particular, we describe two new methods for providing proof methods for this core logic, discuss some of the problems we have encountered in their design, and present an extended example of the use of the KARO framework and the two proof methods.", "num_citations": "22\n", "authors": ["1624"]}
{"title": "Formal verification of a pervasive messaging system\n", "abstract": " As ubiquitous computing becomes a reality, its applications are increasingly being used in business-critical, mission-critical and even in safety-critical, areas. Such systems must demonstrate an assured level of correctness. One approach to the exhaustive analysis of the behaviour of systems is formal verification, whereby each important requirement is logically assessed against all possible system behaviours. While formal verification is often used in safety analysis, it has rarely been used in the analysis of deployed pervasive applications. Without such formality it is difficult to establish that the system will exhibit the correct behaviours in response to its inputs and environment. In this paper, we show how model-checking techniques can be applied to analyse the probabilistic behaviour of pervasive systems. As a case study we apply this technique to an existing pervasive message-forwarding system\u00a0\u2026", "num_citations": "21\n", "authors": ["1624"]}
{"title": "Ethical choice in unforeseen circumstances\n", "abstract": " For autonomous systems to be allowed to share environments with people, their manufacturers need to guarantee that the system behaves within acceptable legal, but also ethical, limits. Formal verification has been used to test if a system behaves within specified legal limits. This paper proposes an ethical extension to a rational agent controlling an Unmanned Aircraft(UA). The resulting agent is able to distinguish among possible plans and execute the most ethical choice it has. We implement a prototype and verify that when an agent does behave unethically, it does so because no more-ethical possibility is available.", "num_citations": "21\n", "authors": ["1624"]}
{"title": "Resolution-based proof for multi-modal temporal logics of knowledge\n", "abstract": " Temporal logics of knowledge are useful in order to specify complex systems in which agents are both dynamic and have information about their surroundings. We present a resolution method for propositional temporal logic combined with multi-modal S5 and illustrate its use on examples. This paper corrects a previous proposal for resolution in multi-model temporal logics of knowledge.", "num_citations": "21\n", "authors": ["1624"]}
{"title": "Agent reasoning for norm compliance: a semantic approach\n", "abstract": " A system of autonomous agents may exhibit undesirable or ineffective behavior if no form of regulation is imposed. Norms, describing how agents should ideally behave, can be used to address this issue if agents are able to reason about norms and adapt their behavior to comply with them (if they choose to do so). Assuming that which norms will have to be followed is unknown at design time, it is not possible to pre-program agents such that their behavior is norm compliant. Instead, we need a generic execution mechanism that allows agents to adapt their behavior at run-time, which is what we propose in this paper. The execution mechanism is defined on top of an abstract agent decision making mechanism. This is done by allowing the execution of actions by the agent decision making mechanism only if these are not forbidden according to norms, as well as triggering the execution of actions if this is required by\u00a0\u2026", "num_citations": "20\n", "authors": ["1624"]}
{"title": "Formal verification of human-robot teamwork\n", "abstract": " We here address the modelling and analysis of human-agent teamwork, specifically in the context of proposed astronaut-robot collaboration in future space missions. We are particularly interested in modelling such systems at a level that allows formal verification techniques to be applied, and hence carry out sophisticated analysis of the reliability and effectiveness of the teams before the system is deployed in real scenarios. In this paper we describe our ongoing research in this area.", "num_citations": "20\n", "authors": ["1624"]}
{"title": "Programming verifiable heterogeneous agent systems\n", "abstract": " Our overall aim is to provide a verification framework for practical multi-agent systems. To achieve practicality, we must be able to describe and implement heterogeneous multi-agent systems. To achieve verifiability, we must define semantics appropriately for use in formal verification. In this paper, we tackle the problem of implementing heterogeneous multi-agent systems in a semantically clear, and appropriate, way.", "num_citations": "20\n", "authors": ["1624"]}
{"title": "On the Relationship between \u03c9\u2010automata and Temporal Logic Normal Forms\n", "abstract": " We consider the relationship between \u03c9\u2010automata and a specific logical formulation based on a normal form for temporal logic formulae. While this normal form was developed for use with execution and clausal resolution in temporal logics, we here show how it can represent, syntactically, \u03c9\u2010automata in a high\u2010level way. Technical proofs of the correctness of this representation are given.", "num_citations": "20\n", "authors": ["1624"]}
{"title": "Towards a framework for certification of reliable autonomous systems\n", "abstract": " A computational system is called autonomous if it is able to make its own decisions, or take its own actions, without human supervision or control. The capability and spread of such systems have reached the point where they are beginning to touch much of everyday life. However, regulators grapple with how to deal with autonomous systems, for example how could we certify an Unmanned Aerial System for autonomous use in civilian airspace? We here analyse what is needed in order to provide verified reliable behaviour of an autonomous system, analyse what can be done as the state-of-the-art in automated verification, and propose a roadmap towards developing regulatory guidelines, including articulating challenges to researchers, to engineers, and to regulators. Case studies in seven distinct domains illustrate the article.", "num_citations": "19\n", "authors": ["1624"]}
{"title": "A semantic framework for socially adaptive agents: Towards strong norm compliance\n", "abstract": " We address the question of how an agent can adapt its behavior to comply with newly adopted norms. This is particularly relevant in the case of open systems where agents may enter and leave normgoverned social contexts not known at design time. This requires norms to be explicitly and separately stated and presented to an agent as rules to which it then can try to adapt its behavior. We propose a formal semantic framework that specifies an execution mechanism for such socially adaptive agents. This framework is based on expressing norms using Linear Temporal Logic. The formality of the framework allows us to rigorously study its norm compliance properties. A weak form of norm compliance allows agents to abort execution in order to prevent norm violation. In this paper we investigate a stronger notion of norm compliance that is evaluated over infinite traces. We show that it is not possible for all agents to be strongly compliant with any arbitrary set of norms. We then investigate situations when strong norm compliance can be guaranteed.", "num_citations": "19\n", "authors": ["1624"]}
{"title": "Declarative abstractions for agent based hybrid control systems\n", "abstract": " Modern control systems are limited in their ability to react flexibly and autonomously to changing situations by the complexity inherent in analysing environments where many variables are present. We aim to use an agent approach to help alleviate this problem and are particularly interested in the control of satellite systems using BDI agent programming as pioneered by the PRS.               Such systems need to generate discrete abstractions from continuous data and then use these abstractions in rational decision making. This paper provides an architecture and interaction semantics for an abstraction engine to interact with a hybrid BDI-based control system.", "num_citations": "19\n", "authors": ["1624"]}
{"title": "Practical infinite-state verification with temporal reasoning\n", "abstract": " Temporal Logic has achieved a significant role in Computer Science, in particular, within the formal specification and verification of concurrent and distributed systems [19, 18, 14]. While First-Order Temporal Logic (FOTL) is a very powerful and expressive formalism in which the specification of many algorithms, protocols and computational systems can be given at the natural level of abstraction, most of the temporal logics used remain essentially propositional. The reason for this is that it is easy to show that FOTL is, in general, incomplete (that is, not recursively-enumerable [21]). In fact, until recently, it has been difficult to find any non-trivial fragment of FOTL that has reasonable properties. A breakthrough by Hodkinson et. al.[13] showed that monodic fragments of FOTL could be complete, even decidable. Over a number of years we have been developing software tools [15, 16] for automated reasoning in this logic and working on the deductive approach to verification using the monodic fragment. Our applications are in areas as diverse as agent-based systems, distributed architectures, and security. Based on our earlier work on propositional logic [9], we extended our proof techniques to cover first-order aspects [2] and, hence, the possibility of verifying, deductively, parametrised and infinite state problems. In [10], we suggested a theoretical basis for translating a general protocol model for infinite number of processes into the monodic fragment. However, while being shown to be possible, no full proof was carried out. The main contribution of this paper is to present our first attempts to apply previously developed methods and existing software\u00a0\u2026", "num_citations": "19\n", "authors": ["1624"]}
{"title": "Programming groups of rational agents\n", "abstract": " In this paper, we consider the problem of effectively programming groups of agents. These groups should capture structuring mechanisms common in multi-agent systems, such as teams, cooperative groups, and organisations. Not only should individual agents be dynamic and evolving, but the groups in which the agents occur must be open, flexible and capable of similar evolution and restructuring. We enable the description and implementation of such groups by providing an extension to our previous work on programming languages for agent-based systems based on executable temporal and modal logics. With such formalism as a basis, we consider the grouping aspects within multi-agent systems. In particular, we describe how this logic-based approach to grouping has been implemented in Java and consider how this language can be used for developing multi-agent systems.", "num_citations": "19\n", "authors": ["1624"]}
{"title": "Executable Modal and Temporal Logics Ijcai'93 Workshop, Chamb\u00e9ry, France, August 28, 1993: Proceedings\n", "abstract": " Michael Fisher & Richard Owens, Executable Modal and Temporal Logics Ijcai '93 Workshop, Chamb\u00e9ry, France, August 28, 1993 : Proceedings - PhilPapers Sign in | Create an account PhilPapers PhilPeople PhilArchive PhilEvents PhilJobs PhilPapers home Syntax Advanced Search Syntax Advanced Search Syntax Advanced Search Executable Modal and Temporal Logics Ijcai '93 Workshop, Chamb\u00e9ry, France, August 28, 1993 : Proceedings Michael Fisher & Richard Owens (1995) Abstract This article has no associated abstract. (fix it) Keywords Logic programming Prolog Categories Logics in Logic and Philosophy of Logic (categorize this paper) Buy this book $5.82 from Amazon (92% off) Amazon page ISBN(s) 3540589767 3540589767 9783540613770 3540613773 Options Edit this record Mark as duplicate Export citation Find it on Scholar Request removal from index Revision history Download options \u2026", "num_citations": "19\n", "authors": ["1624"]}
{"title": "Deductive verification of simple foraging robotic behaviours\n", "abstract": " Purpose \u2013 The purpose of this paper is to consider the logical specification, and automated verification, of high\u2010level robotic behaviours.Design/methodology/approach \u2013 The paper uses temporal logic as a formal language for providing abstractions of foraging robot behaviour, and successively extends this to multiple robots, items of food for the robots to collect, and constraints on the real\u2010time behaviour of robots. For each of these scenarios, proofs of relevant properties are carried out in a fully automated way. In addition to automated deductive proofs in propositional temporal logic, the possibility of having arbitrary numbers of robots involved is considered, thus allowing representations of robot swarms. This leads towards the use of first\u2010order temporal logics (FOTLs).Findings \u2013 The proofs of many properties are achieved using automatic deductive temporal provers for the propositional and FOTLs\u00a0\u2026", "num_citations": "18\n", "authors": ["1624"]}
{"title": "Uncertain agent verification through probabilistic model-checking\n", "abstract": " In many situations an agent\u2019s behaviour can sensibly be described only in terms of a distribution of probability over a set of possibilities. In such case (agents\u2019) decision-making becomes probabilistic too. In this work we consider a probabilistic variant of a well-known (two-players) Negotiation game and we show, first, how it can be encoded into a Markovian model, and then how a probabilistic model-checker such as PRISM can be used as a tool for its (automated) analysis. This paper is meant to exemplify that verification through model-checking can be fruitfully applied also to uncertain multi-agent systems. This, in our view, is the first step towards the characterisation of an automated verification method for probabilistic agents.", "num_citations": "18\n", "authors": ["1624"]}
{"title": "A common basis for agent organisation in BDI languages\n", "abstract": " Programming languages based on the BDI style of agent model are now common. Within these there appears to be some, limited, agreement on the core functionality of agents. However, when we come to multi-agent organisations, not only do many BDI languages have no specific organisational structures, but those that do exist are very diverse. In this paper, we aim to provide a unifying framework for the core aspects of agent organisation, covering groups, teams and roles, as well as organisations. Thus, we describe a simple organisational mechanism, and show how several well known approaches can be embedded within it. Although the mechanism we use is derived from the MetateM programming language, we do not assume any specific BDI language. The organisational mechanism is intended to be independent of the underlying agent language and so we aim to provide a common core for future\u00a0\u2026", "num_citations": "18\n", "authors": ["1624"]}
{"title": "Execution and proof in a horn-clause temporal logic\n", "abstract": " Both proof, via clausal resolution, and execution, via the imperative future approach, depend on the use of a normal form for temporal formulae. While the systems developed have centred around the use of an unrestricted normal form, we here consider a Horn clause-like version of the normal form and its effect on both execution and resolution. This refined normal form is as expressive as the original, and represents a natural way to describe systems, yet allows both execution and resolution to be implemented more efficiently in practice.", "num_citations": "18\n", "authors": ["1624"]}
{"title": "A resolution-based proof method for temporal logics of knowledge and belief\n", "abstract": " In this paper we define two logics, KL n and BL n, and present resolution-based proof methods for both. KL n is a temporal logic of knowledge. Thus, in addition to the usual connectives of linear discrete temporal logic, it contains a set of unary modal connectives for representing the knowledge possessed by agents. The logic BL n is somewhat similar: it is a temporal logic that contains connectives for representing the beliefs of agents. The proof methods we present for these logics involve two key steps. First, a formula to be tested for unsatisfiability is translated into a normal form. Secondly, a family of resolution rules are used, to deal with the interactions between the various operators of the logics. In addition to a description of the normal form and the proof methods, we present some short worked examples and proposals for future work.", "num_citations": "18\n", "authors": ["1624"]}
{"title": "Fair SMG and linear time model checking\n", "abstract": " SMG [GB88] is a system designed to generate a finite state model of a program from the program itself and an operational semantics for the programming language. Model-checking can then be used to verify that the program satisfies a set of desired temporal properties.             In this paper we first show how we have incorporated notions of fairness into SMG; in particular, a user is now able to define semantics with \u201cfair\u201d constructs, for example, parallel composition, repetitive choice, etc. A program may contain several fair constructs, each with its own fairness type. Secondly we describe a practical approach to model checking of linear temporal formulae over the fair-satisfiability generated by the new SMGF. Our approach is a refinement and extension of the fair-satisfiability algorithms, presented earlier by Lichtenstein and Pnueli [LP85], together with techniques developed in our practical implementations of\u00a0\u2026", "num_citations": "18\n", "authors": ["1624"]}
{"title": "Executing logical agent specifications\n", "abstract": " Many agent-oriented programming languages are based on the Prolog like logical goal reduction approach where rules are used to reduce, in a depth-first way, aselected goal. The ability of agents to change between goals means that such languages often overlay the basic computational engine with a mechanism for dynamically changing which goal is selected.", "num_citations": "17\n", "authors": ["1624"]}
{"title": "An alternative approach to concurrent theorem-proving\n", "abstract": " We present an alternative mechanism for representing concurrent theorem-proving activity which primarily relies upon massive parallelism and efficient broadcast communication. This model of distributed deduction can be utilised in order to provide more dynamic, flexible and open systems. In addition to the representation of deduction in classical propositional and first-order logics framework, we provide correctness results for the approach, and consider the practical aspects of the system's implementation.The approach to concurrent theorem-proving we propose is based upon the use of asynchronously executing concurrent objects. Each object contains a particular set of formulae and broadcasts messages corresponding to specific information about those for-mulae. Based upon the messages that on object receives, it can make simple inferences, transforming the formulae it contains and sending out further\u00a0\u2026", "num_citations": "17\n", "authors": ["1624"]}
{"title": "A formal semantics for Brahms\n", "abstract": " The formal analysis of computational processes is by now a well-established field. However, in practical scenarios, the problem of how we can formally verify interactions with humans still remains. In this paper we are concerned with addressing this problem. Our overall goal is to provide formal verification techniques for human-agent teamwork, particularly astronaut-robot teamwork on future space missions and human-robot interactions in health-care scenarios. However, in order to carry out our formal verification, we must first have some formal basis for this activity. In this paper we provide this by detailing a formal operational semantics for Brahms, a modelling/simulation framework for human-agent teamwork that has been developed and extensively used within NASA. This provides a first, but important, step towards our overall goal by establishing a formal basis for describing human-agent teamwork\u00a0\u2026", "num_citations": "16\n", "authors": ["1624"]}
{"title": "Temporal logic with capacity constraints\n", "abstract": " Often when modelling systems, physical constraints on the resources available are needed. For example, we might say that at most N processes can access a particular resource at any moment or exactly M participants are needed for an agreement. Such situations are concisely modelled where propositions are constrained such that at most N, or exactly M, can hold at any moment in time. This paper describes both the logical basis and a verification method for propositional linear time temporal logics which allow such constraints as input. The method incorporates ideas developed earlier for a resolution method for the temporal logic TLX and a tableaux-like procedure for PTL. The complexity of this procedure is discussed and case studies are examined. The logic itself represents a combination of standard temporal logic with classical constraints restricting the numbers of propositions that can be satisfied at\u00a0\u2026", "num_citations": "16\n", "authors": ["1624"]}
{"title": "Is there a future for deductive temporal verification?\n", "abstract": " In this paper, we consider a tractable sub-class of propositional linear time temporal logic, and provide a complete clausal resolution calculus for it. The fragment is important as it can be used to represent simple Buchi automata. We also show that, just as the emptiness check for a Buchi automaton is tractable, the complexity of deciding unsatisfiability, via resolution, of our logic is polynomial (rather than exponential). Consequently, a Buchi automaton can be represented within our logic, and its emptiness can be tractably decided via deductive methods. This may have a significant impact upon approaches to verification, since techniques such as model checking inherently depend on the ability to check emptiness of an appropriate Buchi automaton. Thus, we also discuss how such a logic might form the basis for practical deductive temporal verification", "num_citations": "16\n", "authors": ["1624"]}
{"title": "Implementing temporal logics: Tools for execution and proof\n", "abstract": " In this article I will present an overview of a selection of tools for execution and proof based on temporal logic, and outline both the general techniques used and problems encountered in implementing them. This selection is quite subjective, mainly concerning work that has involved researchers I have collaborated with at Liverpool (and, previously, Manchester). The tools considered will mainly be theorem-provers and (logic-based) agent programming languages", "num_citations": "16\n", "authors": ["1624"]}
{"title": "Modular verification of vehicle platooning with respect to decisions, space and time\n", "abstract": " The spread of autonomous systems into safety-critical areas has increased the demand for their formal verification, not only due to stronger certification requirements but also to public uncertainty over these new technologies. However, the complex nature of such systems, for example, the intricate combination of discrete and continuous aspects, ensures that whole system verification is often infeasible. This motivates the need for novel analysis approaches that modularise the problem, allowing us to restrict our analysis to one particular aspect of the system while abstracting away from others. For instance, while verifying the real-time properties of an autonomous system we might hide the details of the internal decision-making components. In this paper we describe verification of a range of properties across distinct dimensions on a practical hybrid agent architecture. This allows us to verify the autonomous\u00a0\u2026", "num_citations": "15\n", "authors": ["1624"]}
{"title": "Organising computation through dynamic grouping\n", "abstract": " There are a range of abstractions used for both modelling and programming of modern computational systems. While these abstractions may have been devised for specific purposes, the variety of options is often confusing, with development and programming techniques often being distinct. The aim of this chapter is two-fold. First, we bring together a number of these abstractions into one, general, view. Second, we show how, by grouping computational elements, this general view can capture a range of behaviours in areas such as multi-agent systems, web services, and object-oriented systems. This framework then provides a basis for design and implementation techniques for a wide variety of modern computational systems, in particular providing the basis of a general programming language for dynamic, distributed computation.", "num_citations": "14\n", "authors": ["1624"]}
{"title": "Tableaux for temporal logics of knowledge: synchronous systems of perfect recall or no learning\n", "abstract": " The paper describes tableaux based proof methods for temporal logics of knowledge allowing interaction axioms between the modal and temporal components. Such logics can be used to specify systems that involve the knowledge of processes or agents and which change over time, for example agent based systems or knowledge games. The interaction axioms allow the description of how knowledge evolves over time and makes reasoning in such logics theoretically more complex. Completeness arguments for the tableaux are discussed.", "num_citations": "14\n", "authors": ["1624"]}
{"title": "Foundations of Multi-Agent systems: techniques, tools and theory\n", "abstract": " Interest in agent-oriented technology continues to grow, both at a theoretical level and a practical level, with the UK maintaining a strong representation in the area in both academic institutions and commercial organizations. In December 1997, the Second UK Workshop on Foundations of Multi-Agent Systems (FoMAS'97), held at the University of Warwick, built on the success of FoMAS'96 a year earlier (Luck, 1997; Doran et al., 1997; d'Inverno et al., 1997; Fisher et al., 1997) in seeking to provide a forum for academics and industrialists within the UK to present and discuss current directions in research and applications development. Supported by the EPSRC and HP Labs, FoMAS'97 was expanded to two days with invited presentations from Professor Ken Binmore of UCL, and Professor Cristiano Castelfranchi of the Italian National Research Council's Institute of Psychology, in addition to paper presentations and\u00a0\u2026", "num_citations": "14\n", "authors": ["1624"]}
{"title": "The \u201cWhy did you do that?\u201d Button: Answering Why-questions for end users of Robotic Systems\n", "abstract": " The issue of explainability for autonomous systems is becoming increasingly prominent. Several researchers and organisations have advocated the provision of a \u201cWhy did you do that?\u201d button which allows a user to interrogate a robot about its choices and actions. We take previous work on debugging cognitive agent programs and apply it to the question of supplying explanations to end users in the form of answers to why-questions. These previous approaches are based on the generation of a trace of events in the execution of the program and then answering why-questions using the trace. We implemented this framework in the agent infrastructure layer and, in particular, the Gwendolen programming language it supports \u2013 extending it in the process to handle the generation of applicable plans and multiple intentions. In order to make the answers to why-questions comprehensible to end users we advocate a\u00a0\u2026", "num_citations": "13\n", "authors": ["1624"]}
{"title": "Executable specifications of resource-bounded agents\n", "abstract": " Logical theories of intelligent (or rational) agents have been refined and improved over the past 20\u00a0years of research. Such logical theories are used in many ways, one of which is as the basis for executable agent specifications. Here, agents are specified using a logical description and then this description is directly executed in order to implement the agent\u2019s behaviour. This provides strong correctness results for the implemented agent, directly corresponding the formal specification with the implementation. With increased application, it has become clear that such specifications of idealised agents are inappropriate in practical situations. An agent may have many resource-bounds to contend with, both in terms of time and memory, and this should be taken into account within the agent\u2019s formal specification. Thus, in this paper, we tackle the problem of representing and executing resource-bounded agents\u00a0\u2026", "num_citations": "13\n", "authors": ["1624"]}
{"title": "Specifying and reasoning about uncertain agents\n", "abstract": " Logical formalisation of agent behaviour is desirable, not only in order to provide a clear semantics of agent-based systems, but also to provide the foundation for sophisticated reasoning techniques to be used on, and by, the agents themselves. The possible worlds semantics offered by modal logic has proved to be a successful framework in which to model mental attitudes of agents such as beliefs, desires and intentions. The most popular choices for modeling the informational attitudes involves annotating the agent with an S5-like logic for knowledge, or a KD45-like logic for belief. However, using these logics in their standard form, an agent cannot distinguish situations in which the evidence for a certain fact is \u2018equally distributed\u2019 over its alternatives, from situations in which there is only one, almost negligible, counterexample to a \u2018fact\u2019. Probabilistic modal logics are a way to address this, but they easily end up\u00a0\u2026", "num_citations": "13\n", "authors": ["1624"]}
{"title": "Practical first-order temporal reasoning\n", "abstract": " In this paper we consider the specification and verification of infinite-state systems using temporal logic. In particular, we describe parameterised systems using a new variety of first-order temporal logic that is both powerful enough for this form of specification and tractable enough for practical deductive verification. Importantly, the power of the temporal language allows us to describe (and verify) asynchronous systems, communication delays and more complex liveness and fairness properties. These aspects appear difficult for many other approaches to infinite-state verification.", "num_citations": "13\n", "authors": ["1624"]}
{"title": "Practical reasoning for uncertain agents\n", "abstract": " Logical formalisation of agent behaviour is desirable, not only in order to provide a clear semantics of agent-based systems, but also to provide the foundation for sophisticated reasoning techniques to be used on, and by, the agents themselves. The possible worlds semantics offered by modal logic has proved to be a successful framework in which to model mental attitudes of agents such as beliefs, desires and intentions. The most popular choices for modeling the informational attitudes involves annotating the agent with an -like logic for knowledge, or a -like logic for belief. However, using these logics in their standard form, an agent cannot distinguish situations in which the evidence for a certain fact is \u2018equally distributed\u2019 over its alternatives, from situations in which there is only one, almost negligible, counterexample to the \u2018fact\u2019. Probabilistic modal logics are a way to address this, but they easily end\u00a0\u2026", "num_citations": "13\n", "authors": ["1624"]}
{"title": "If Z is the answer, what could the question possibly be?\n", "abstract": " The (brief) history of formal methods in computer science has shown that, while systems can be specified using low-level notations, this is rarely the best way to improve either clarity and correctness. In particular, it is often better to provide abstract concepts matching fundamental properties of the class of systems under consideration within the notation itself rather than attempting to introduce these as part of the specification. For example, while first-order logic was widely used for specifying sequential systems, the application of formal methods to concurrent systems led to the introduction and utilisation of more dynamic notations, such as process algebras and temporal logics. Here, the specifier deals directly with the fundamental elements of these systems, for example processes executing and communicating over time. Thus, we might argue that notations such as Z or VDM are of limited value in the development of\u00a0\u2026", "num_citations": "13\n", "authors": ["1624"]}
{"title": "Programming group computations\n", "abstract": " In this paper, we consider the problem of effectively programming groups of agents. These groups should capture structuring mechanisms common in multi-agent systems, such as teams, cooperative groups, and organisations. Not only should individual agents be dynamic and evolving, but the groups in which the agents occur must be open, flexible and capable of similar evolution and restructuring. We enable the description and implementation of such groups by providing an extension to our previous work on programming languages for agent-based systems based on executable temporal and modal logics. With such formalism as a basis, we consider the grouping aspects within multi-agent systems. In particular, we describe how the implementation of grouping primitives has been carried out and analyse a variety of simple mechanisms for organising agents within such groups. Finally, we consider how this work can provide a (formal) basis for a \u201cpattern-based\u201d approach to multi-agent systems.", "num_citations": "12\n", "authors": ["1624"]}
{"title": "Deductive verification of cache coherence protocols\n", "abstract": " Local cache techniques [Han93] are important in shared-memory multiprocessor systems because they allows the reduction of both memory access latency and network traffic. In such techniques, each processor has its own fast memory cache, holding local copies of main memory blocks. While reducing the access time this approach poses the problem of cache consistency, whereby one has to ensure that the copies of the same memory block in the caches of different processors are consistent. Such data consistency can be provided by cache coherence protocols, which typically operate as follows: every processor is equipped with a finite state control, which reacts to the read and write requests. Abstracting from the low-level implementation details of read, write and synchronization primitives, one may consider cache coherence protocols as families of identical finite state machines together with a primitive form of communication: if one automaton makes a transition (an action) a, then it is required that all other automata simultaneosly make a complementary transition (reaction) a. Correctness at that level of abstraction can be expressed in terms of co-occurrences some states in which, for example, the processors are allowed the change the content of their cache copies. The paper [PD97] gives a good survey of verification methods used to prove correctness of cache coherence protocols. If the number of processors is fixed, verification can be carried out by traditional model checking methods [CGP00]. More challenging is the problem of verification of cache coherence protocols for every possible number of processors (termed \u201cparameterized\u00a0\u2026", "num_citations": "12\n", "authors": ["1624"]}
{"title": "The set of support strategy in temporal resolution\n", "abstract": " A variety of proof methods have been developed to support the effective mechanisation of temporal logic. While clausal temporal resolution has been successfully employed for a range of problems, a number of improvements are still required. In particular, as there is no consistent control strategy underlying the method, and a large amount of irrelevant information may sometimes be generated. Following on from classical resolution, where the 'Set of Support' strategy has been used very successfully, we introduce, justify and apply a temporal version of this strategy, thus allowing the supporting set to be carried over between the different phases of the resolution method. This not only restricts the production of irrelevant information but, under certain conditions, retains the completeness of the refutation process.", "num_citations": "12\n", "authors": ["1624"]}
{"title": "A model checker for linear time temporal logic\n", "abstract": " This report describes the design and implementation of a model checker for linear time temporal logic. The model checker uses a depth-first search algorithm that attempts to find a minimal satisfying model and uses as little space as possible during the checking procedure. The depth-first nature of the algorithm enables the model checker to be used where space is at a premium.", "num_citations": "12\n", "authors": ["1624"]}
{"title": "Two-stage agent program verification\n", "abstract": " We describe an extension to the AJPF agent program model-checker so that it may be used to generate models for input into other, non-agent, model-checkers. We motivate this adaptation, arguing that it potentially improves the efficiency of the model-checking process and provides access to richer property specification languages. We illustrate the approach by describing the export of AJPF program models to both the SPIN and P             rism              model-checkers. We also investigate, experimentally, the effect the process has on the overall efficiency of model-checking.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "CRutoN: Automatic verification of a robotic assistant\u2019s behaviours\n", "abstract": " The Care-O-bot is an autonomous robotic assistant that can support people in domestic and other environments. The behaviour of the robot can be defined by a set of high level control rules. The adoption and further development of such robotic assistants is inhibited by the absence of assurances about their safety. In previous work, formal models of the robot behaviour and its environment were constructed by hand and model checkers were then used to check whether desirable formal temporal properties were satisfied for all possible system behaviours. In this paper we describe the details of the software CRutoN, that provides an automatic translation from sets of robot control rules into input for the model checker NuSMV. We compare our work with previous attempts to formally verify the robot control rules, discuss the potential applications of the approach, and consider future directions of research.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Investigating parametric influence on discrete synchronisation protocols using quantitative model checking\n", "abstract": " Synchronisation is an emergent phenomenon observable in nature. Natural synchronising systems have inspired the development of protocols for achieving coordination in a diverse range of distributed dynamic systems. Spontaneously synchronising systems can be mathematically modelled as coupled oscillators. In this paper we present a novel approach using model checking to reason about achieving synchrony for different models of synchronisation. We describe a general, formal population model where oscillators interact at discrete moments in time, and whose cycles are sequences of discrete states. Using the probabilistic model checker Prism, we investigate the influence of various parameters of the model on the likelihood of, and time required for, achieving synchronisation.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Agent-based autonomous systems and abstraction engines: Theory meets practice\n", "abstract": " We report on experiences in the development of hybrid autonomous systems where high-level decisions are made by a rational agent. This rational agent interacts with other sub-systems via an abstraction engine. We describe three systems we have developed using the EASS BDI agent programming language and framework which supports this architecture. As a result of these experiences we recommend changes to the theoretical operational semantics that underpins the EASS framework and present a fourth implementation using the new semantics.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Agent deliberation in an executable temporal framework\n", "abstract": " Autonomous agents are not so difficult to construct. Constructing autonomous agents that will work as required is much harder. A clear way in which we can design and analyse autonomous systems so that we can be more confident that their behaviour is as required is to use formal methods. These can, in principle, allow us to exactly specify the behaviour of the agent, and verify that any implementation has the properties required. In addition to using a more formal approach, it is clear that problems of conceptualisation and analysis can be aided by the use of an appropriate abstraction.In this article we tackle one particular aspect of formal methods for agent-based systems, namely the formal representation and implementation of deliberation within agents. The key aspect here is simplicity. Agents are specified using a relatively simple temporal logic and are executed by directly interpreting such temporal formulae\u00a0\u2026", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Where logic and agents meet\n", "abstract": " In this paper we provide a short, and very subjective, description of how mathematical techniques, primarily those from logical foundations, have been used in multi-agent systems. This is certainly not a comprehensive survey, but gives some indication of where the fields of \u201cLogic\u201d and \u201cAgents\u201d have met in recent years. The Annals of Math and AI contain a surprising number of articles in this area, among them several special issues focusing on computational logic and its use in agent systems.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Resolution in a logic of rational agency\n", "abstract": " A resolution based proof system for a Temporal Logic of Possible Belief is presented and justified. This logic represents a combination of the branching-time temporal logic CTL and the modal logic KD45. Since such combinations of non-classical logics are often used in agent theories for specifying complex properties of rational agents, the resolution system presented here provides a basis for the verification of such specifications.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Guiding clausal temporal resolution\n", "abstract": " The effective mechanisation of temporal logic is vital to the application of temporal reasoning in many fields, for example the verification of reactive systems, the implementation of temporal query languages, and temporal logic programming. Consequently, a variety of proof methods have been developed, implemented and applied. While clausal temporal resolution has been successfully employed for a range of problems, a number of improvements are still required. One particular drawback for certain applications is the restriction that temporal resolution operations must occur only after all relevant non-temporal resolution steps have been carried out. It is this restriction that we consider in this paper, where we introduce, justify and apply a new temporal resolution rule. This rule, which may be seen as a generalisation of the existing temporal resolution rule, can be applied at any time during the refutation, thus\u00a0\u2026", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Towards formal methods for agent-based systems\n", "abstract": " This paper considers how formal methods might be developed for use in agent-based systems. In particular, it presents an approach based upon the description of agents using temporal specifications. Not only can these specifications be executed directly to provide the behaviour of an individual agent, but collections of such descriptions can be executed under a specific operational model in order to give the behaviour of multi-agent systems. In addition to animating their behaviour, verification of the agent descriptions with respect to required logical properties can be carried out; the paper outlines how temporal belief logics can be used to achieve this. Finally, the current limitations of this work are considered and its extension towards the ultimate goal of a full formal development framework for agent-based systems is discussed.", "num_citations": "11\n", "authors": ["1624"]}
{"title": "Verifiable self-aware agent-based autonomous systems\n", "abstract": " In this article, we describe an approach to autonomous system construction that not only supports self-awareness but also formal verification. This is based on modular construction where the key autonomous decision making is captured within a symbolically described \u201cagent.\u201d So, this article leads us from traditional systems architectures, via agent-based computing, to explainability, reconfigurability, and verifiability, and on to applications in robotics, autonomous vehicles, and machine ethics. Fundamentally, we consider self-awareness from an agent-based perspective. Agents are an important abstraction capturing autonomy, and we are particularly concerned with intentional, or rational, agents that expose the \u201cintentions\u201d of the autonomous system. Beyond being a useful abstract concept, agents also provide a practical engineering approach for building the core software in autonomous systems such as robots\u00a0\u2026", "num_citations": "10\n", "authors": ["1624"]}
{"title": "Practical challenges in explicit ethical machine reasoning\n", "abstract": " We examine implemented systems for ethical machine reasoning with a view to identifying the practical challenges (as opposed to philosophical challenges) posed by the area. We identify a need for complex ethical machine reasoning not only to be multi-objective, proactive, and scrutable but that it must draw on heterogeneous evidential reasoning. We also argue that, in many cases, it needs to operate in real time and be verifiable. We propose a general architecture involving a declarative ethical arbiter which draws upon multiple evidential reasoners each responsible for a particular ethical feature of the system's environment. We claim that this architecture enables some separation of concerns among the practical challenges that ethical machine reasoning poses.", "num_citations": "10\n", "authors": ["1624"]}
{"title": "First-order temporal verification in practice\n", "abstract": " First-order temporal logic, the extension of first-order logic with operators dealing with time, is a powerful and expressive formalism with many potential applications. This expressive logic can be viewed as a framework in which to investigate problems specified in other logics. The monodic fragment of first-order temporal logic is a useful fragment that possesses good computational properties such as completeness and sometimes even decidability. Temporal logics of knowledge are useful for dealing with situations where the knowledge of agents in a system is involved. In this paper we present a translation from temporal logics of knowledge into the monodic fragment of first-order temporal logic. We can then use a theorem prover for monodic first-order temporal logic to prove properties of the translated formulas. This allows problems specified in temporal logics of knowledge to be verified automatically without\u00a0\u2026", "num_citations": "10\n", "authors": ["1624"]}
{"title": "Clausal resolution for ctl\n", "abstract": " In this paper we consider proof techniques for branching-time temporal logics. While a considerable amount of research has been carried out regarding the relationship between finite automata and such logics, practical proof techniques for such logics have received relatively little attention. Recently, however, several applications requiring refined proof methods for branching-time temporal logics have appeared, most notably the specification and verification of multi-agent systems. Thus, here we extend our clausal resolution method for linear-time temporal logics to a branching-time framework, in particular to the powerful CTL* logic. The key elements of the resolution method, namely the normal form, the concept of step resolution and a novel temporal resolution rule, are introduced, justified, and applied.", "num_citations": "10\n", "authors": ["1624"]}
{"title": "Temporal logics for abstract semantics\n", "abstract": " The aim of this thesis is to study the use of temporal logics in the description of abstract semantics for simple programming languages. Following a discussion of the evolution of temporal logics, a coherent framework is described for temporal logics in general. The concept of abstractness and its relationship to compositionality is formalised before considering the use of several different forms of temporal logic in the description of abstract temporal semantics. Though some temporal logics do not easily support the production of such semantics, methods will be described which attempt to enhance these logics sufficiently to enable abstract semantics to be given. This study resulted in the formulation of a new class of temporal logics, which, though being a natural extension of other basic temporal logics, also provide a radically different view of the modelling of temporal events. It is also shown that semantics given using\u00a0\u2026", "num_citations": "10\n", "authors": ["1624"]}
{"title": "Certification of safe and trusted robotic inspection of assets\n", "abstract": " In future inspections of offshore assets utilizing robots, robots will not only be expected to collate new data from their payload of instruments, but they will also be expected to interact with the infrastructure being inspected, undertake remedial tasks and engage with embedded monitoring systems of the asset. This increasing level of interaction and deployment frequency of robot inspections requires an understanding of how we can embed safe and trusted operational architectures within robots. Currently, robots can undertake constrained semi-autonomous inspections, using predetermined tasks (missions) with minimum supervision. However, the challenge is that the state of the world changes with time as does the condition of the robot. Therefore, robots must be able to undertake adaptive measures to support optimal outcomes during autonomous missions. In this paper, we propose an initial architecture to the\u00a0\u2026", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Reducing code complexity in hybrid control systems\n", "abstract": " Modern control systems are limited in their ability to react flexibly and autonomously to changing situations by the complexity inherent in analysing situations where many variables are present.We present an architecture based on a combination of agent languages and hybrid systems for managing high level decisions in such systems. A preliminary case study suggests that the complexity of the code of such a system increases much more slower in the face of inreasing complexity of the underlying system, than in a more traditional approach based on finite state machines.", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Model-checking auctions, coalitions and trust\n", "abstract": " In this paper we tackle the verification of basic auction models that are at the heart of many marketbased multi-agent systems. Specifically, we program auctions in a BDI-based programming language and then use agent model checking to verify logical properties concerning time, beliefs and goals within the multi-agent system. The basic auction model is then extended with coalition formation and trust, and verification of these aspects is carried out.", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Automated game analysis via probabilistic model checking: a case study\n", "abstract": " It has been recognised for some time that there are close links between the various logics developed for the analysis of multi-agent systems and the many game-theoretic models developed for the same purpose. In this paper, we contribute to this burgeoning body of work by showing how a probabilistic model checking tool can be used for the automated analysis of game-like multi-agent systems in which both agents and environments can act with uncertainty. Specifically, we show how a variation of the well-known alternating offers negotiation protocol of Rubinstein can be encoded as a model for the PRISM model checker and its behaviour analysed through automatic verification of probabilistic CTL's properties.", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Temporal Logics\n", "abstract": " Temporal Logic What is Temporal Logic? Sample PTL Axioms 1: PTL as First-Order Logic Page 1 Temporal Logic [Esoterica] Michael Fisher Department of Computer Science, University of Liverpool, UK [MFisher@liverpool.ac.uk] An Introduction to Practical Formal Methods Using Temporal Logic c Michael Fisher An Introduction to Practical Formal Methods Using Temporal Logic [TEMPORAL LOGIC: ESOTERICA] \u2013 p.1/20 What is Temporal Logic? Now that we have seen both syntax and semantics for PTL, together with a variety of examples expressed in its language, we can reconsider the more philosophical question \u201cwhat is temporal logic?\u201d While we have given a formal description of the PTL logic, there are a number of alternative formalisations providing different, and interesting, ways to view PTL. In the following we will briefly examine a few of these, as this is useful in shedding light on the precise nature of (\u2026", "num_citations": "9\n", "authors": ["1624"]}
{"title": "First-order temporal verification in practice\n", "abstract": " First-order temporal logic, the extension of first-order logic with operators dealing with time, is a powerful and expressive formalism with many potential applications. This expressive logic can be viewed as a framework in which to investigate problems specified in other logics. The monodic fragment of first-order temporal logic is a useful fragment that possesses good computational properties such as completeness and sometimes even decidability. Temporal logics of knowledge are useful for dealing with situations where the knowledge of agents in a system is involved. In this paper we present a translation from temporal logics of knowledge into the monodic fragment of first-order temporal logic. We can then use a theorem prover for monodic first-order temporal logic to prove properties of the translated formulas. This allows problems specified in temporal logics of knowledge to be verified automatically\u00a0\u2026", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Time in planning\n", "abstract": " This collection represents the primary reference work for researchers and students in the area of Temporal Reasoning in Artificial Intelligence. Temporal reasoning has a vital role to play in many areas, particularly Artificial Intelligence. Yet, until now, there has been no single volume collecting together the breadth of work in this area. This collection brings together the leading researchers in a range of relevant areas and provides an coherent description of the breadth of activity concerning temporal reasoning in the field of Artificial Intelligence.", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Organising software in active environments\n", "abstract": " In this paper, we investigate the use of logic-based multi-agent systems for modelling active environments. Our case study is an intelligent support system for a so-called \u201cactive museum\u201d. We show the approach of structuring the \u201cagent space\u201d, i.e., the social organisations acting within the environment, is well fitted to naturally represent not only the physical structure of the application, but also the virtual structure in which it operates. The adoption of a logic-based modelling system provides high-level programming concepts, and allows the designer to rapidly design and develop flexible software to be used in active environments.", "num_citations": "9\n", "authors": ["1624"]}
{"title": "Handling equality in monodic temporal resolution\n", "abstract": " First-order temporal logic is a concise and powerful notation, with many potential applications in both Computer Science and Artificial Intelligence. While the full logic is highly complex, recent work on monodic first-order temporal logics has identified important enumerable and even decidable fragments including the guarded fragment with equality. In this paper, we specialise the monodic resolution method to the guarded monodic fragment with equality and first-order temporal logic over expanding domains. We introduce novel resolution calculi that can be applied to formulae in the normal form associated with the clausal resolution method, and state correctness and completeness results.", "num_citations": "9\n", "authors": ["1624"]}
{"title": "The power of synchronisation: formal analysis of power consumption in networks of pulse-coupled oscillators\n", "abstract": " Nature-inspired synchronisation protocols have been widely adopted to achieve consensus within wireless sensor networks. We analyse the power consumption of such protocols, particularly the energy required to synchronise all nodes across a network. We use the model of bio-inspired, pulse-coupled oscillators to achieve network-wide synchronisation and provide an extended formal model of just such a protocol, enhanced with structures for recording energy usage. Exhaustive analysis is then carried out through formal verification, utilising the PRISM model-checker to calculate the resources consumed on each possible system execution. This allows us to investigate a range of parameter instantiations and the trade-offs between power consumption and time to synchronise. This provides a principled basis for the formal analysis of a broader range of large-scale network protocols.", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Engineering moral machines\n", "abstract": " This article provides a short report on a recent Dagstuhl Seminar on \u201cEngineering Moral Agents\u201d. Imbuing robots and autonomous systems with ethical norms and values is an increasingly urgent challenge, given rapid developments in, for example, driverless cars, unmanned air vehicles (drones), and care assistant robots. Seminar participants discussed two immediate problems. A challenge for philosophical research is the formalisation of ethics in a format that lends itself to machine implementation; a challenge for computer science and robotics is the actual implementation of moral reasoning and conduct in autonomous systems. This article reports on these two challenges.", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Exploring the future with resource-bounded agents\n", "abstract": " We here describe research into the formal specification and implementation of resource-bounded agents. In particular, we provide an overview of our work on incorporating resource limitations into executable agent specifications. In addition, we outline future directions, highlighting both their promise and their problems.", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Logical implementation of uncertain agents\n", "abstract": " We consider the representation and execution of agents specified using temporal logics. Previous work in this area has provided a basis for the direct execution of agent specifications, and has been extended to allow the handling of agent beliefs, deliberation and multi-agent groups. However, the key problem of uncertainty has not been tackled. Given that agents work in unknown environments, and interact with other agents that may, in turn, be unpredictable, then it is essential for any formal agent description to incorporate some mechanism for capturing this aspect. Within the framework of executable specifications, formal descriptions involving uncertainty must also be executable. The contribution of this paper is to extend executable temporal logic in order to allow the representation and execution of uncertain statements within agents. In particular, we extend the basis of the MetateM temporal framework\u00a0\u2026", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Temporal reasoning in agent-based systems\n", "abstract": " Multi-agent systems are typically composed of multiple autonomous agents, cooperating to solve problems that are beyond the ability of any one individual agent. Agents are essentially dynamic\u2013thus temporal aspects are at the heart of both individual agents and agent-based systems. In particular, temporal reasoning explicitly occurs in a number of areas including:", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Resolution for synchrony and no learning\n", "abstract": " We present a clausal resolution-based method for temporal logics of knowledge with synchrony and no learning. This and related logics admit axioms which include operators from both the temporal and epistemic logics, which enable the description of how knowledge evolves over time. Instead of proposing new resolution rules, further information is added to the set of clauses in order to deal with this particular interaction. We give outline of the proofs of soundness, termination, and completeness.", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Algorithms for guiding clausal temporal resolution\n", "abstract": " Clausal temporal resolution is characterised by a translation of the formulae whose satisfiability is to be established to a normal form, step resolution (similar to classical resolution) on formulae occurring at the same states and temporal resolution between formulae describing properties over a longer period. The most complex part of the method occurs in searching for candidates for the temporal resolution operation, something that may need to be carried out several times.               In this paper we consider a new technique for finding the candidates for the temporal resolution operation. Although related to the previously developed external search procedure, this new approach not only allows the temporal resolution operation to be carried out at any moment, but also simplifies any subsequent search required for similar temporal formulae.               Finally, in contrast with previous approaches, this search can\u00a0\u2026", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Agents with bounded temporal resources\n", "abstract": " In this chapter we introduce a common framework for both the logical specification and execution of agents. This logical framework provides the basis for the specification and execution of agents comprising dynamic (temporal) activity, deliberation concerning goals, and reasoning about belief.             We here focus in particular on the ability of this approach to capture an important aspect of practical agents, notably their resource-bounded nature. We present a logic in which resource-boundedness can be specified both in terms of temporal reasoning, and reasoning about belief. Then we consider how specifications within this logic can be directly executed. The mechanism we use to capture finite resources in reasoning about beliefs is to employ a multi-context representation of belief, thus providing tight control over the agent\u2019s reasoning capabilities where necessary. The mechanism we use to capture finite\u00a0\u2026", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Concurrent Metatem as a coordination language\n", "abstract": " In the area of concurrent and reactive system design, the use of temporal logic as a formal notation has become widespread. Concurrent MetateM is a language designed to support such systems by allowing the direct execution of temporal specifications. Programs in this language consist of asynchronous, concurrent objects which communicate via broadcast message passing. Each object executes its own temporal specification representing a required behaviour. In this paper we present work on the development of Concurrent MetateM as a coordination language. By using the temporal specifications as a high-level mechanism whereby properties required of coordinated applications can be concisely defined, we show how Concurrent Metatem can be extended to utilize the functionality of an underlying language.", "num_citations": "8\n", "authors": ["1624"]}
{"title": "A graph-based approach to resolution in temporal logic\n", "abstract": " In this paper, we present algorithms developed in order to implement a clausal resolution method for discrete, linear temporal logics, presented in [Fis91]. As part of this method, temporal formulae are rewritten into a normal form and both \u2018non-temporal\u2019 and \u2018temporal\u2019 inference rules are applied. Through the use of a graph-based representation for the normal form, \u201cefficient\u201d search algorithms can be applied to detect sets of formulae for which temporal resolution is applicable. Further, rather than constructing the full graph structure, our algorithms only explore and construct as little of the graph as possible. These algorithms have been implemented and have been combined with sub-programs performing translation to normal form and non-temporal resolution to produce an integrated resolution based temporal theorem-prover.", "num_citations": "8\n", "authors": ["1624"]}
{"title": "Trustworthy AI\n", "abstract": " Modern AI systems have become of widespread use in almost all sectors with a strong impact on our society. However, the very methods on which they rely, based on Machine Learning techniques for processing data to predict outcomes and to make decisions, are opaque, prone to bias and may produce wrong answers. Objective functions optimized in learning systems are not guaranteed to align with the values that motivated their definition. Properties such as transparency, verifiability, explainability, security, technical robustness and safety, are key to build operational governance frameworks, so that to make AI systems justifiably trustworthy and to align their development and use with human rights and values.", "num_citations": "7\n", "authors": ["1624"]}
{"title": "Formalisation of the Rules of the Road for embedding into an Autonomous Vehicle Agent\n", "abstract": " We propose a description language for formalising the \u201cRules of the Road\u201d(eg, the UK Highway Code). By way of example, we represent the subset of the Highway Code responsible for road junctions and represent these Rules of the Road using linear temporal logic, LTL. Our aim is to \u201cextract\u201d from this generic representation a set of beliefs, goals and plans that can be used by a BDI agent to augment its universal autonomous vehicle control (eg, route planning, and obstacle avoidance capabilities) with region-specific rules for road use. We intend to target the GWENDOLEN agent programming language as a prototype for this system, which provides formal verification possibilities.", "num_citations": "7\n", "authors": ["1624"]}
{"title": "An abstract formal basis for digital crowds\n", "abstract": " Crowdsourcing, together with its related approaches, has become very popular in recent years. All crowdsourcing processes involve the participation of a digital crowd, a large number of people that access a single Internet platform or shared service. In this paper we explore the possibility of applying formal methods, typically used for the verification of software and hardware systems, in analysing the behavior of a digital crowd. More precisely, we provide a formal description language for specifying digital crowds. We represent digital crowds in which the agents do not directly communicate with each other. We further show how this specification can provide the basis for sophisticated formal methods, in particular formal verification.", "num_citations": "7\n", "authors": ["1624"]}
{"title": "A logical approach to simulating societies\n", "abstract": " A number of languages and testbeds for implementing and simulating artificial social systems have been described in the literature of Distributed Artificial Intelligence (DAI) and its related disciplines (see, for example, Hewitt 1977, Agha 1986, Gasser et al. 1987, Shoham 1990, Bouron et al. 1991, Doran et al. 1991, Ferber & Carle 1991). However, with the possible exception of pure Actor languages (Hewitt 1977, Agha 1986), these tools have relied on an informal, if not ad hoc, notion of agency, with similarly informal techniques for programming agents. As a result, it is difficult to reason, either formally or informally, about the expected behaviour of systems implemented using such tools. It is similarly difficult to derive an a posteriori explanation of such a system\u2019s behaviour. In this chapter, we present a language for simulating co-operative and competitive behaviour in groups of intelligent artificial agents. In contrast to\u00a0\u2026", "num_citations": "7\n", "authors": ["1624"]}
{"title": "Tableaux for logics of time and knowledge with interactions relating to synchrony\n", "abstract": " The paper describes tableaux based proof methods for temporal logics of knowledge allowing non-trivial interaction axioms between the modal and temporal components, namely those of synchrony and no learning and synchrony and perfect recall. The interaction axioms allow the description of how knowledge evolves over time and makes reasoning in such logics theoretically more complex. Such logics can be used to specify systems that involve the knowledge of processes or agents and which change over time, for example agent based systems, knowledge games or security protocols. Soundness, completeness and termination results for the tableaux are proved.", "num_citations": "7\n", "authors": ["1624"]}
{"title": "Foundations and Applications of Multi-Agent Systems: UKMAS Workshop 1996-2000, Selected Papers\n", "abstract": " This book presents revised full versions of papers contributed to UK Workshops on Multi-Agent Systems, UKMAS, during 1996 and 2000. From the early days of MAS research, the UK community has been a particularly productive one with numerous key contributions. The 15 papers by internationally reputed researchers deal with various aspects of agent technology, with a certain emphasis on foundational issues in multi-agent systems.", "num_citations": "7\n", "authors": ["1624"]}
{"title": "Reliable Decision-Making in Autonomous Vehicles\n", "abstract": " The use of Autonomous Vehicles (AVs) on our streets is soon to be a reality; increasingly, interacting with such AVs will be part of our daily routine. However, we will certainly need to assure the reliable behaviour of an AV, especially when some unexpected scenarios (e.g. harsh environments, obstacles, emergencies) are taken into account. In this article we use an intelligent agent approach to capture the high-level decision-making process within an AV and then use formal verification techniques to automatically, and strongly, analyse the required behaviours. Specifically, we use the MCAPL framework, wherein our core agent is implemented using the GWENDOLEN agent programming language, and to which we can apply model checking via the AJPF model checker. By performing such formal verification on our agent, we are able to prove that the AV\u2019s decision-making process, embedded within the\u00a0\u2026", "num_citations": "6\n", "authors": ["1624"]}
{"title": "Using threat analysis techniques to guide formal verification: A case study of cooperative awareness messages\n", "abstract": " Autonomous robotic systems such as Connected and Autonomous Vehicle (CAV) systems are both safety-and security-critical, since a breach in system security may impact safety. Generally, safety and security concerns for such systems are treated separately during the development process. In this paper, we consider an algorithm for sending Cooperative Awareness Messages (CAMs) between vehicles in a CAV system and the use of CAMs in preventing vehicle collisions. We employ threat analysis techniques that are commonly used in the cyber security domain to guide our formal verification. This allows us to focus our formal methods on those security properties that are particularly important and to consider both safety and security in tandem. Our analysis centres on identifying STRIDE security properties and we illustrate how these can be formalised, and subsequently verified, using a combination of\u00a0\u2026", "num_citations": "6\n", "authors": ["1624"]}
{"title": "Plan library reconfigurability in BDI agents\n", "abstract": " One of the major advantages of modular architectures in robotic systems is the ability to add or replace nodes, without needing to rearrange the whole system. In this type of system, autonomous agents can aid in the decision making and high-level control of the robot. For example, a robot may have a module for each of the effectors and sensors that it has and an agent with a plan library containing high-level plans to aid in the decision making within these modules. However, when autonomously replacing a node it can be difficult to reconfigure plans in the agent\u2019s plan library while retaining correctness. In this paper, we exploit the formal concept of capabilities in Belief-Desire-Intention agents and describe how agents can reason about these capabilities in order to reconfigure their plan library while retaining overall correctness constraints. To validate our approach, we show the implementation of our framework\u00a0\u2026", "num_citations": "6\n", "authors": ["1624"]}
{"title": "Engineering Moral Agents--from Human Morality to Artificial Morality (Dagstuhl Seminar 16222)\n", "abstract": " This report documents the programme of, and outcomes from, the Dagstuhl Seminar 16222 on\" Engineering Moral Agents--from Human Morality to Artificial Morality\". Artificial morality is an emerging area of research within artificial intelligence (AI), concerned with the problem of designing artificial agents that behave as moral agents, ie adhere to moral, legal, and social norms. Context-aware, autonomous, and intelligent systems are becoming a presence in our society and are increasingly involved in making decisions that affect our lives. While humanity has developed formal legal and informal moral and social norms to govern its own social interactions, there are no similar regulatory structures that apply to non-human agents. The seminar focused on questions of how to formalise,\" quantify\", qualify, validate, verify, and modify the``ethics\" of moral machines. Key issues included the following: How to build regulatory structures that address (un) ethical machine behaviour? What are the wider societal, legal, and economic implications of introducing AI machines into our society? How to develop\" computational\" ethics and what are the difficult challenges that need to be addressed? When organising this workshop, we aimed to bring together communities of researchers from moral philosophy and from artificial intelligence most concerned with this topic. This is a long-term endeavour, but the seminar was successful in laying the foundations and connections for accomplishing it.", "num_citations": "6\n", "authors": ["1624"]}
{"title": "Actions with durations and failures in BDI languages\n", "abstract": " BDI programming languages provide a well developed route to implementing intelligent agents. However, as such agents are increasingly being used in physical environments their treatment of external actions needs to be improved. In this paper we describe a mechanism for handling actions which have durations and failures.", "num_citations": "6\n", "authors": ["1624"]}
{"title": "Using agent JPF to build models for other model checkers\n", "abstract": " We describe an extension to the AJPF agent program model-checker so that it may be used to generate models for input into other, non-agent, model-checkers. We motivate this adaptation, arguing that it improves the efficiency of the model-checking process and provides access to richer property specification languages.             We illustrate the approach by describing the export of AJPF program models to Spin and Prism. In the case of Spin we also investigate, experimentally, the effect the process has on the overall efficiency of model-checking.", "num_citations": "6\n", "authors": ["1624"]}
{"title": "Monodic ASMs and temporal verification\n", "abstract": " In this paper, we pursue the goal of automatic deductive verification for certain classes of ASM. In particular, we base our work on a translation of general ASMs to full first-order temporal logic. While such a logic is, in general, not finitely axiomatisable, recent work has identified a fragment, termed the monodic fragment, that is finitely axiomatisable and many of its subfragments are decidable. Thus, in this paper, we define a class of monodic ASMs whose semantics in terms of temporal logic fits within the monodic fragment. This, together with recent work on clausal resolution methods for monodic fragments, allows us to carry out temporal verification of monodic ASMs. The approach is illustrated by the deductive verification of FloodSet algorithm for Consensus problem, and Synapse N+1 cache coherence protocol; both are specified by monodic ASMs.", "num_citations": "6\n", "authors": ["1624"]}
{"title": "A double-level model checking approach for an agent-based autonomous vehicle and road junction regulations\n", "abstract": " Usually, the design of an Autonomous Vehicle (AV) does not take into account traffic rules and so the adoption of these rules can bring some challenges, e.g., how to come up with a Digital Highway Code which captures the proper behaviour of an AV against the traffic rules and at the same time minimises changes to the existing Highway Code? Here, we formally model and implement three Road Junction rules (from the UK Highway Code). We use timed automata to model the system and the MCAPL (Model Checking Agent Programming Language) framework to implement an agent and its environment. We also assess the behaviour of our agent according to the Road Junction rules using a double-level Model Checking technique, i.e., UPPAAL at the design level and AJPF (Agent Java PathFinder) at the development level. We have formally verified 30 properties (18 with UPPAAL and 12 with AJPF), where these properties describe the agent\u2019s behaviour against the three Road Junction rules using a simulated traffic scenario, including artefacts like traffic signs and road users. In addition, our approach aims to extract the best from the double-level verification, i.e., using time constraints in UPPAAL timed automata to determine thresholds for the AVs actions and tracing the agent\u2019s behaviour by using MCAPL, in a way that one can tell when and how a given Road Junction rule was selected by the agent. This work provides a proof-of-concept for the formal verification of AV behaviour with respect to traffic rules.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Security-minded verification of space systems\n", "abstract": " Modern space systems are increasing in complexity. The advent of the Internet of Space Things, coupled with the commercialisation of space has resulted in an ecosystem that is difficult to control and brings about new security challenges. In such critical systems, it is common to conduct verification strategies to ensure that the underpinning software is correct. Formal verification is achieved by modelling the system and verifying that the model obeys particular functional and safety properties. Many connected systems are now the target of a variety of threat actors attempting to realise different goals. Threat modelling is the approach employed to analyse and manage the threats from adversaries. Common practice is that these two approaches are conducted independently of one another. In this paper, we argue that the two should be mutually informed, and describe a methodology for security-minded formal\u00a0\u2026", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Formalisation and Implementation of Road Junction Rules on an Autonomous Vehicle Modelled as an Agent\n", "abstract": " The design of autonomous vehicles includes obstacle detection and avoidance, route planning, speed control, etc. However, there is a lack of an explicitely representation of the rules of the road on an autonomous vehicle. Additionally, it is necessary to understand the behaviour of an autonomous vehicle in order to check whether or not it works according to the rules of the road. Here, we propose an agent-based architecture to embed the rules of the road into an agent representing the behaviour of an autonomous vehicle. We use temporal logic to formally represent the rules of the road in a way it should be possible to capture when and how a given rule of the road can be applied. Our contributions include: i. suggestion of changes in the rules of the road; ii. representation of rules in a suitable way for an autonomous vehicle agent; iii. dealing with indeterminate terms in the Highway Code.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Towards a Methodology to Test UAVs in Hazardous Environments\n", "abstract": " This paper reports on the early stages of the development of a methodology to analyse and test autonomous systems in hazardous environments, with the aim of verifying both the safe decision-making and resulting actions of the system. The ultimate goal is to generate safety case evidence that a designer can provide to a regulator to show that the system to be used will likely operate safely.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "An assurance-based approach to verification and validation of human-robot teams\n", "abstract": " We present an approach for the verification and validation (V&V) of robot assistants in the context of human-robot interactions (HRI), to demonstrate their trustworthiness through integral assurances on their safety and functional correctness. Trust in robot assistants will allow them to transition from the laboratory into our everyday lives. The complex and unpredictable nature of the real world in which assistant and service robots operate, the limitations on available V&V techniques when used individually, and the consequent lack of confidence on the verification results (or assurances), present challenges to overcome. Our approach, called assurance-based verification, addresses these challenges by combining formal verification (model checking), simulation-based testing, and user validation in experiments with a real robot. We demonstrate our assurance-based V&V approach through a handover task, the most critical part of a complex cooperative manufacturing scenario, for which we proposed some safety and liveness requirements to verify and validate. We construct formal models, simulations and an experimental test rig for the HRI. To capture requirements we use temporal logic properties, assertion checkers and informal textual descriptions. This combination of approaches allows V&V of the HRI task at different levels of modelling detail and thoroughness of exploration, thus overcoming the individual limitations of each method. Should the resulting assurances present discrepancies, an iterative process between the three V&V techniques takes place until confidence in these assurances is gained from refining and improving the assets (ie\u00a0\u2026", "num_citations": "5\n", "authors": ["1624"]}
{"title": "\u201cHow Did They Know?\u201d\u2014Model-Checking for Analysis of Information Leakage in Social Networks\n", "abstract": " We examine the use of model-checking in the analysis of information leakage in social networks. We take previous work on the formal analysis of digital crowds and show how a variation on the formalism can naturally model the interaction of people and groups of followers in intersecting social networks. We then show how probabilistic models of the forwarding and reposting behaviour of individuals can be used to analyse the risk that information will leak to unwanted parties. We illustrate our approach by analysing several simple examples.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "A roadmap to pervasive systems verification\n", "abstract": " The complexity of pervasive systems arises from the many different aspects that such systems possess. A typical pervasive system may be autonomous, distributed, concurrent and context based, and may involve humans and robotic devices working together. If we wish to formally verify the behaviour of such systems, the formal methods for pervasive systems will surely also be complex. In this paper, we move towards being able to formally verify pervasive systems and outline our approach wherein we distinguish four distinct dimensions within pervasive system behaviour and utilize different, but appropriate, formal techniques for verifying each one.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Safety and certification of unmanned air systems\n", "abstract": " The problem of assessing and certifying Unmanned Air Systems (UAS) is addressed and an overview of their safety requirements provided. Whilst not a comprehensive study, current directions, references to key aspects of the literature, and opinions concerning the technologies and directions that might be used in the future are provided. Overall, this article covers what is known as \u201csafe to fly\u201d regulations, as captured by certification requirements and guidelines for system design, as well as \u201cflown safely\u201d regulations, as captured by flight procedures and operations.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Directions for agent model checking\n", "abstract": " In this chapter we provide a perspective on current and future work in the area of agent model-checking. In particular, we describe our approach, which was the first to provide comprehensive verification of practical agent programming languages. It provides a library of general agent concepts that has been formally defined and implemented in Java, upon which interpreters for various agent programming languages can be succinctly programmed. The Java library has been prepared so that it can be efficiently used with an existing Java model checker, thus facilitating the verification of (heterogeneous) multi-agent programs. Besides giving an overview of our approach, in this chapter we identify its current shortfalls and discuss where we aim to target future development.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Temporal verification of fault-tolerant protocols\n", "abstract": " The automated verification of concurrent and distributed systems is a vibrant and successful area within Computer Science. Over the last 30 years, temporal logic [10,20] has been shown to provide a clear, concise and intuitive description of many such systems, and automata-theoretic techniques such as model checking [7,14] have been shown to be very useful in practical verification. Recently, the verification of infinite-state systems, particularly parameterised systems comprising arbitrary numbers of identical processes, has become increasingly important [5]. Practical problems of an open, distributed nature often fit into this model, for example robot swarms of arbitrary sizes.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Using temporal logic to specify emergent behaviours in swarm robotic systems\n", "abstract": " It is a characteristic of swarm robotics that specifying overall emergent swarm behaviours in terms of the low-level behaviours of individual robots is very difficult. Yet if swarm robotics is to make the transition from the laboratory to real-world engineering realisation we need such specifications. This paper explores the possibility of using temporal logic to formally specify, and possibly also prove, the emergent behaviours of a robotic swarm. The paper makes use of a simplified wireless connected swarm as a case study with which to illustrate the approach. Such a formal approach could be an important step toward a disciplined design methodology for swarm robotics.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Automata representations for concurrent METATEM\n", "abstract": " Concurrent METATEM is a language based on the execution of temporal logic formulae. The current implementations are based upon direct interpretation, yet are too slow for large applications. We present an approach to implementing the language by representing temporal formulae as finite-state automata. To combat the problems associated with constructing a single automaton containing all possible models of a formula, we partition the representation into three closely coupled automata. This provides structures small enough to be effectively used for larger applications, while still allowing increased performance over the direct interpretation of temporal formulae.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Languages, Meta-languages and METATEM, A Discussion Paper\n", "abstract": " Meta-languages are vital to the development and usage of formal systems, and yet the nature of meta-languages and associated notions require clarification. Here we attempt to provide a clear definition of the requirements for a language to be a meta-language, together with consideration of issues of proof theory, model theory and interpreters for such a language.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Realising a concurrent object-based programming model on parallel virtual shared memory architectures\n", "abstract": " In this paper, we investigate the suitability of parallel architectures for the realisation of a novel object-based computational model encapsulated within programming languages such as ConcurrentMeteteM. This model incorporates objects, groups, broadcast message-passing and asynchronous execution. As such it provides a high-level architecture-independent representation for a variety of concurrent systems. The class of parallel architectures which we consider are logically shared but physically distributed memory systems.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Parallel temporal resolution\n", "abstract": " Temporal reasoning is complex. Typically, the proof methods used for temporal logics are both slow and, due to the quantity of information required, consume a large amount of space. The introduction of parallelism provides the potential for significant speedups together with the increased memory size required to handle larger proofs. Thus, we see the effective utilisation of parallelism as being crucial in making temporal theorem-proving practical. In this paper we investigate and analyse opportunities for parallelism within a clausal resolution method for temporal logics. We show how parallelism might be introduced into the method in a variety of ways, providing a range of options for the parallel implementation of proof procedures for this important class of logics.", "num_citations": "5\n", "authors": ["1624"]}
{"title": "Integrating Formal Verification and Assurance: An Inspection Rover Case Study\n", "abstract": " The complexity and flexibility of autonomous robotic systems necessitates a range of distinct verification tools. This presents new challenges not only for design verification but also for assurance approaches. Combining the distinct formal verification tools, while maintaining sufficient formal coherence to provide compelling assurance evidence is difficult, often being abandoned for less formal approaches. In this paper we demonstrate, through a case study, how a variety of distinct formal techniques can be brought together in order to develop a justifiable assurance case. We use the AdvoCATE assurance case tool to guide our analyses and to integrate the artifacts from the formal methods that we use, namely: fret, cocosim and Event-B. While we present our methodology as applied to a specific Inspection Rover case study, we believe that this combination provides benefits in maintaining coherent formal links across\u00a0\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Formal verification of synchronisation, gossip and environmental effects for wireless sensor networks\n", "abstract": " The Internet of Things (IoT) promises a revolution in the monitoring and control of a wide range of applications, from urban water supply networks and precision agriculture food production, to vehicle connectivity and healthcare monitoring. For applications in such critical areas, control software and protocols for IoT systems must be verified to be both robust and reliable. Two of the largest obstacles to robustness and reliability in IoT systems are effects on the hardware caused by environmental conditions, and the choice of parameters used by the protocol. In this paper we use probabilistic model checking to verify that a synchronisation and dissemination protocol for Wireless Sensor Networks (WSNs) is correct with respect to its requirements, and is not adversely affected by the environment. We show how the protocol can be converted into a logical model and then analysed using the probabilistic model-checker, PRISM. Using this approach we prove under which circumstances the protocol is guaranteed to synchronise all nodes and disseminate new information to all nodes. We also examine the bounds on synchronisation as the environment changes the performance of the hardware clock, and investigate the scalability constraints of this approach. \u00a9 2019 Universitatsbibliothek TU Berlin.", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Slicing agent programs for more efficient verification\n", "abstract": " Agent programs are increasingly used as the core high-level decision-making components within a range of autonomous systems and, as the deployment of such systems in safety-critical scenarios develops, the need for strong and trustworthy verification becomes acute. Formal verification techniques such as model-checking provide this high level of assurance yet they are typically both complex and slow to deploy. In this chapter we introduce, develop and evaluate a program slicing technique that significantly improves the efficiency of such verification, hence providing more effective routes to the assurance of safety, reliability, and ethics in autonomous systems.", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Misplaced trust\n", "abstract": " Driverless cars are on the way. Most major motor manufacturers are developing them, and all expect them to be on our roads sooner, rather than later [1]. When we drive, we believe we are in control. Yet, technologies such as cruise control, lane control and, soon,\" platooning\" or\" vehicle convoying\" are beginning to take away our direct control of vehicle speed/direction. While we may still make the key decisions\u2014to overtake, to stop, etc\u2014intelligent technologies increasingly control the basic\" path following\" activities of our vehicle. Furthermore, the UK Department for Transport [2] states:\" By 2040, experts expect a world of connected vehicles and road users, wheresemi-autonomous' andautonomous' control of vehicles will be part of life.... Innovative ways to make vehicles cooperate with one another, such as theplatooning'approach for heavy vehicles on strategic roads, have the potential to make our roads work better for everyone.\"", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Can you trust your robotic assistant?\n", "abstract": " Robotic assistants are being developed to assist with a range of tasks at work and home. Besides designing and developing such robotic assistants, a key issue that needs to be addressed is showing that they are both safe and trustworthy. We discuss our approach to this using formal verification, simulation-based testing and formative user evaluation.", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Changing trends in colorectal cancer: possible cause and clinical implications\n", "abstract": " OBJECTIVES: The aims of this study were to determine whether pattern of patients presenting with colorectal cancer (CRC) in the last few years differs significantly from that previously reported in Australia, and to relate the trends, if present, to use of hormone replacement therapy (HRT). METHODS: We examined demographic and pathological characteristics of 145 consecutive CRC patients (65 females) treated in our institution in calendar years 2006-2007. Comparisons were made with data on 12536 CRC patients obtained from the Australian Association on Cancer Registries (AACR) for the year 2003, most recent available. Prescribing data for HRT were obtained from the Australian Commonwealth Department of Health and Ageing. RESULTS: The distribution of colon, sigmoid and rectal cancers in our series was 40%, 24.8% and 35.2%, respectively, which differs significantly from 65%, 8.1% and 26.9% in the AACR data (p < 0.01). Our cohort was significantly younger (65.4 \u00b1 12.1 vs. 69.5 \u00b1 12.3 years), especially females (63.0 \u00b1 12.7 vs. 70.3 \u00b1 13.0 years; p < 0.001). The proportion of female patients aged < 55 and < 60 years was significantly higher (30.8% vs. 13.8% and 41.5% vs. 21.4%, respectively). Younger patients have more aggressive and advanced cancers. In Australia HRT use declined since 2001 and fell by a half in 2006. CONCLUSIONS: In the changing CRC pattern of greatest concern is a significantly higher proportion of younger patients, especially females, with higher prevalence of more advanced and aggressive cancers, coincident with decreased prescribing of HRT. These findings may have important implications for\u00a0\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Analysing human-agent teamwork\n", "abstract": " We here address the modelling and analysis of human-agent teamwork, specifically in the context of proposed astronaut-robot collaboration in future space missions. We are particularly interested in modelling such systems at a level that allows formal verification techniques to be applied, and hence carry out sophisticated analysis of the reliability and effectiveness of the teams before the system is deployed in real scenarios. In this paper we describe our ongoing research in this area.", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Dynamic team formation in executable agent-based systems\n", "abstract": " While agent technology has spread rapidly in recent years [20], particularly for applications utilizing the INTERNET, there are still relatively few high-level agent-based programming languages. In addition, the majority of agent applications are developed in Java [19] or its extensions [23], yet such applications rarely have a close link with any of the theories of agency that have been developed in the past, for example [27, 30]. Consequently, any formal development method, involving specification, verification and refinement, becomes difficult to produce. However, work on executable specifications of agent-based systems has shown how high-level logic-based abstractions can be used to represent agents, with their implementation being carried out by direct execution of the corresponding logical formulae. Prominent among this field is work on executable temporal logics [8, 10]. Here, a basic temporal notation is used\u00a0\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Verification within the KARO agent theory\n", "abstract": " The use of agents is now seen as an essential tool in representing, understanding and implementing complex software systems. In particular, the characterization of complex components as intelligent or rational agents allows the system designer to analyze applications at a much higher level of abstraction [13, 45]. In order to describe and reason about such agents, a number of theories of rational agency have been developed, for example the BDI [36] and KARO [27] frameworks. Usually, these frameworks are represented as complex multi-modal logics. These logics, in addition to their use in agent theories, where the basic representation of agency and rationality is explored, form the basis for agent-based formal methods. In both uses,(automated) theorem proving is of vital importance. In agent theories, automated theorem proving allows us to examine properties of the overall theory and, in some cases, to\u00a0\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Alternating automata and temporal logic normal forms\n", "abstract": " We provide a translation from SNFPLTL, a normal form for propositional linear time temporal logic, into alternating automata on infinite words, and vice versa. We show this translation has the property that the set of SNFPLTL clauses is satisfiable if and only if the alternating automaton has an accepting run. As there is no direct method known for checking the non-emptiness of alternating automata, the translation to SNFPLTL, together with a temporal proof on the resulting SNFPLTL clauses, provides an indirect non-emptiness check for alternating automata.", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Monodic temporal resolution: the expanding domain case\n", "abstract": " Temporal Logic has achieved a significant role in Computer Science, in particular, within the formal specification and verification of concurrent and distributed systems [13, 11, 10]. However, even though first-order temporal logics have been studied over a number of years and have been recognised as a concise and powerful formalism, most of the temporal logics used remain essentially propositional. The reason for this is that it is easy to show that first-order temporal logic is, in general, incomplete (ie not recursively-enumerable [14]). In fact, until recently, it has been difficult to find any non-trivial fragment of first-order temporal logic that has reasonable properties. A breakthrough by Hodkinson et. al.[9] showed that monodic fragments of first-order temporal logic could be complete, even decidable.(In spite of this, the addition of equality or function symbols leads to the loss of recursive enumerability [15, 4].) In [3] we presented a resolution procedure for the monodic fragment with interpretations over constant domains, based on our work on clausal temporal resolution over a number of years [6, 8, 1, 2].. In this paper, we provide a complete resolution calculus for monodic first-order temporal logic over expanding domains. The beauty of the result is that we could use exactly the same machinary, by restricting the form of merged clauses.The structure of the paper is as follows. After a brief introduction into first-order temporal logic, we show that any monodic temporal problem can be transformed into a normal form (Section 3) and present the temporal resolution calculus (Section 4). The main focus, within this paper, is on establishing completeness\u00a0\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Coordinating heterogeneous components using executable temporal logic\n", "abstract": " Concurrent MetateM is a programming language for reactive systems [Fisher, 1993] that has been shown to be particularly useful in representing and developing multi-agent systems [Fisher, 1995]. It is based on the combination of two complementary elements: the direct execution of temporal logic specifications providing the behaviour of an individual object [Fisher, 1996]; and a concurrent operational model in which such objects execute asynchronously, communicate via broadcast message-passing, and are organized using a grouping mechanism [Fisher, 1994].", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Specifying and implementing agents with dynamic resource bounds\n", "abstract": " In practice agents have resource bounds, particularly concerning the amount of reasoning they are able to carry out. However, these bounds are rarely static and are often dependent upon the situation in which the agent finds itself. For example, in a dangerous environment where quick decisions are required, the agent may have relatively little time to \u2018think\u2019. On the contrary, in a situation where exploiting environmental information is crucial, the agent must spend more time in \u2018thinking\u2019in order to, for example, decide what to do next.In this paper, we develop a logical framework in which dynamic agents that have resource bounds varying over time, can be represented. In addition, we show two examples characterising aspects of rational agents that utilises the variability of these resource bounds in order to act in sophisticated ways. Finally, we review how agent specifications within this framework can be directly\u00a0\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Tableaux for synchronous systems of knowledge and time with interactions\n", "abstract": " Tableaux for synchronous systems of knowledge and time with interactions | Proceedings of the sixth Scandinavian conference on Artificial intelligence ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsSCAI '97Tableaux for synchronous systems of knowledge and time with interactions Article Tableaux for synchronous systems of knowledge and time with interactions Share on Authors: Clare Dixon profile image Clare Dixon View Profile , Michael David Fisher profile image Michael Fisher View Profile Authors Info & Affiliations Publication: SCAI '97: Proceedings of the sixth Scandinavian conference on Artificial intelligence\u2026", "num_citations": "4\n", "authors": ["1624"]}
{"title": "Verifiable machine ethics in changing contexts\n", "abstract": " Many systems proposed for the implementation of ethical reasoning involve an encoding of user values as a set of rules or a model. We consider the question of how changes of context affect these encodings. We propose the use of a reasoning cycle, in which information about the ethical reasoner\u2019s context is imported in a logical form, and we propose that context-specific aspects of an ethical encoding be prefaced by a guard formula. This guard formula should evaluate to true when the reasoner is in the appropriate context and the relevant parts of the reasoner\u2019s rule set or model should be updated accordingly. This architecture allows techniques for the model-checking of agent-based autonomous systems to be used to verify that all contexts respect key stakeholder values. We implement this framework using the hybrid ethical reasoning agents system (HERA) and the model-checking agent programming languages (MCAPL) framework.", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Making sense of the world: Framing models for trustworthy sensor-driven systems\n", "abstract": " Sensor-driven systems provide data and information that facilitate real-time decision-making and autonomous actuation, as well as enable informed policy choices. However, can we be sure that these systems work as expected? Can we model them in a way that captures all the key issues? We define two concepts: frames of reference and frames of function that help us organise models of sensor-based systems and their purpose. Examples from a smart water distribution network illustrate how frames offer a lens through which to organise and balance multiple views of the system. Frames aid communication between modellers, analysts and stakeholders, and distinguish the purpose of each model, which contributes towards our trust that the system fulfils its purpose. View Full-Text", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Specification and verification of multi-agent systems\n", "abstract": " J. Dix, M. Fisher\u00b7 Chapter 14: Multi-Agent Systems, Ed. G. Weiss MIT Press, May 2012 6", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Taming the complexity of temporal epistemic reasoning\n", "abstract": " Temporal logic of knowledge is a combination of temporal and epistemic logic that has been shown to be very useful in areas such as distributed systems, security, and multi-agent systems. However, the complexity of the logic can be prohibitive. We here develop a refined version of such a logic and associated tableau procedure with improved complexity but where important classes of specification can still be described. This new logic represents a combination of an \u201cexactly one\u201d temporal logic with an S5 multi-modal logic again restricted to the \u201cexactly one\u201d form.", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Logic-Based Agent Verification\n", "abstract": " Michael Fisher, Munindar Singh, Diana Spears & Mike Wooldridge, Logic-Based Agent Verification - PhilPapers Sign in | Create an account PhilPapers PhilPeople PhilArchive PhilEvents PhilJobs PhilPapers home Syntax Advanced Search Syntax Advanced Search Syntax Advanced Search Logic-Based Agent Verification Michael Fisher, Munindar Singh, Diana Spears & Mike Wooldridge Journal of Applied Logic 5 (2):193-195 (2007) Authors Mike Wooldridge Abstract This article has no associated abstract. (fix it) Keywords No keywords specified (fix it) Categories Epistemic Logic in Logic and Philosophy of Logic Logic and Philosophy of Logic (categorize this paper) DOI 10.1016/j.jal..Options Edit this record Mark as duplicate Export citation Find it on Scholar Request removal from index Revision history Download options PhilArchive copy Upload a copy of this paper Check publisher's policy Papers currently \u2026", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Handbook of Temporal Reasoning in AI\n", "abstract": " Handbook of Temporal Reasoning in AI - Research Portal, King's College, London King's College London King's main site Research portal Home Researchers Research Groups Research Outputs Research Funding Internal Research Outputs Theses . Journals Publishers Handbook of Temporal Reasoning in AI Research output: Book/Report \u203a Book DM Gabbay (Editor), L. Vila (Editor), I. Grabul (Editor), M. Fisher (Editor) Overview Citation formats Original language English Publisher Elsevier Published 2005 King's Authors DM Gabbay (Editor) (Informatics) M. Fisher (Editor) Post to Twitter Post to FaceBook Post to Digg View graph of relations By the same authors Forgetting an Argument Rodrigues, OT, Gabbay, DM & Baumann, R., 3 Apr 2020, Proceedings of the 34th AAAI Conference on Artificial Intelligence. AAAI Press Research output: Chapter in Book/Report/Conference proceeding \u203a Conference paper \u203a peer-\u2026", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Multi-agent programming based on distributed deduction\n", "abstract": " In this paper we present a model of programming for distributed agents based on the broadcasting of formulae (typically predicates) from individual agents. We show how the general model can be instantiated with a range of specific approaches, from logic programming to the manipulation of non-Horn clauses and the execution of non-classical logics, and indicate how this can provide the basis of an alternative mechanism for representing and implementing multi-agent computation.", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Exploring the monodic fragment of first-order temporal logic using clausal temporal resolution\n", "abstract": " Until recently, first-order temporal logic has been little understood. While it is well known that the full logic has no finite axiomatisation, a more detailed analysis of fragments of the logic was not available. However, a breakthrough by Hodkinson et. al., identifying a finitely axiomatisable fragment, termed the monodic fragment, has led to improved understanding of first-order temporal logic. Following this result, the clausal temporal resolution technique, originally developed for propositional temporal logics, has been extended to such monodic fragments. While this is useful as a practical proof technique for certain monodic classes, in this paper we show that the use of clausal temporal resolution provides us with increased understanding of the monodic fragment. In particular, several features of monodic first-order temporal logic are established as corollaries of the completeness result for the clausal temporal resolution method. These include definitions of new decidable monodic classes, simplification of existing monodic classes by reductions, an extension of finite axiomatisability beyond the monodic fragment.", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Towards the refinement of executable temporal objects\n", "abstract": " Concurrent MetateM is a high-level language in which the behaviour of an individual reactive component is represented by a temporal logic formula and is animated by direct execution. The combination of this executable temporal formalism, together with an operational model providing asynchronous concurrency and broadcast message-passing, presents a powerful and flexible framework in which to develop concurrent object-based, particularly agent-based, applications. While Concurrent MetateM has been applied in a variety of scenarios, and techniques for the verification of properties of Concurrent MetateM systems have been developed, little work has been carried out on the basis for refining such systems. Here, we introduce simple mechanisms for the refinement both of an object\u2019s internal behaviour and interface, and of individual objects into new systems of communicating objects.", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Executable Temporal Logics\n", "abstract": " Logical representations have been widely used in Computer Science and Artificial Intelligence (AI). In recent years, particularly with the advent of languages such as Prolog, the direct execution of such representations has been shown to be both feasible and useful. Logic-based languages have been used, not only for applications such as the animation of logical specifications, program verification, the characterization of database queries and knowledge representation, but also as high-level programming languages in their own right. However, as the problems tackled have become more complex, the requirement for more powerful logical representations has been growing. In particular, since the concept of time is of central importance to an increasingly wide range of applications, including the representation of time-dependent data, modeling reactive systems, and the specification and verification of concurrent and distributed systems, many logics incorporating temporal notions are being developed and applied. It is not surprising, therefore, that executable temporal logics have been proposed in order to provide system developers with access to these, more powerful, logical techniques. Just as the development of sophisticated, and relatively efficient, theorem-proving techniques for first-order logic led to executable forms, such as Prolog, so the development of executable methods for temporal logics has often been based on temporal theoremproving techniques. However, each particular executable temporal logic combines not only a logical perspective, but also an operational model, drawn from its intended application areas. Thus a wide\u00a0\u2026", "num_citations": "3\n", "authors": ["1624"]}
{"title": "Multi-scale verification of distributed synchronisation\n", "abstract": " Algorithms for the synchronisation of clocks across networks are both common and important within distributed systems. We here address not only the formal modelling of these algorithms, but also the formal verification of their behaviour. Of particular importance is the strong link between the very different levels of abstraction at which the algorithms may be verified. Our contribution is primarily the formalisation of this connection between individual models and population-based models, and the subsequent verification that is then possible. While the technique is applicable across a range of synchronisation algorithms, we particularly focus on the synchronisation of (biologically-inspired) pulse-coupled oscillators, a widely used approach in practical distributed systems. For this application domain, different levels of abstraction are crucial: models based on the behaviour of an individual process are able to capture the\u00a0\u2026", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Exploring the effects of environmental conditions and design choices on IoT systems using formal methods\n", "abstract": " Wireless communication protocols are often used in critical applications, e.g., urban water supply networks or healthcare monitoring within the Internet of Things. It is essential that control software and protocols for such systems are verified to be both robust and reliable. The effects on the hardware caused by environmental conditions and the choice of parameters used by the protocol are among the largest obstacles to robustness and reliability in wireless systems. In this paper we use formal verification to verify that a wireless sensor network synchronization and dissemination protocol is not adversely affected by these factors.", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Formal verification of astronaut-rover teams for planetary surface operations\n", "abstract": " This paper describes an approach to assuring the reliability of autonomous systems for Astronaut-Rover (ASRO) teams using the formal verification of models in the Brahms multi-agent modelling language. Planetary surface rovers have proven essential to several manned and unmanned missions to the moon and Mars. The first rovers were teleor manually-operated, but autonomous systems are increasingly being used to increase the effectiveness and range of rover operations on missions such as the NASA Mars Science Laboratory. It is anticipated that future manned missions to the moon and Mars will use autonomous rovers to assist astronauts during extravehicular activity (EVA), including science, technical and construction operations. These ASRO teams have the potential to significantly increase the safety and efficiency of surface operations. We describe a new Brahms model in which an autonomous rover\u00a0\u2026", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Ethics and Trust: Principles, Verification and Validation (Dagstuhl Seminar 19171)\n", "abstract": " This report documents the programme of, and outcomes from, the Dagstuhl Seminar 19171 on\" Ethics and Trust: Principles, Verification and Validation\". We consider the issues of ethics and trust as crucial to the future acceptance and use of autonomous systems. The development of new classes of autonomous systems, such as medical robots,\" driver-less\" cars, and assistive care robots has opened up questions on how we can integrate truly autonomous systems into our society. Once a system is truly autonomous, ie learning from interactions, moving and manipulating the world we are living in, and making decisions by itself, we must be certain that it will act in a safe and ethical way, ie that it will be able to distinguish'right'fromwrong'and make the decisions we would expect of it. In order for society to accept these new machines, we must also trust them, ie we must believe that they are reliable and that they are trying to assist us, especially when engaged in close human-robot interaction. The seminar focused on questions of how does trust with autonomous machines evolve, how to build apractical'ethical and trustworthy system, and what are the societal implications. Key issues included: Change of trust and trust repair, AI systems as decision makers, complex system of norms and algorithmic bias, and potential discrepancies between expectations and capabilities of autonomous machines. This workshop was a follow-up to the 2016 Dagstuhl Seminar 16222 on Engineering Moral Agents: From Human Morality to Artificial Morality. When organizing this workshop we aimed to bring together communities of researchers from moral philosophy and\u00a0\u2026", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Moral Permissibility of Actions in Smart Home Systems\n", "abstract": " In the near future, we will see the realization of smart homes, homes where appliances etc. are wholly or partially controlled via artificial intelligence. In such homes, many everyday decisions will have to be made by artificial agents, and these decisions and plans must be ethically acceptable. With this poster, we present ongoing work of how to operate a smart home via a Hybrid Ethical Reasoning Agent (HERA), see (Lindner, Bentzen, and Nebel 2017). This work is part of the broader scientific effort to implement ethics on computer systems known as machine ethics, see also (Dennis, Fisher, Slavkovik, and Webster, 2016; Lindner and Bentzen, 2018). We showcase an everyday example involving a mother and a child living in the smart home. Our formal theory and implementation allows us to evaluate actions proposed by the smart home from different ethical points of view, ie utilitarianism, Kantian ethics and the principle of double effect. When points of view differ, ethical uncertainty ensues, and this is the case in the showcased example. We suggest various ways of coping with the ensuing ethical uncertainty, eg human in the loop, one overriding ethics. We discuss how formal verification, in the form of model-checking, can be used to check that the modeling of a problem for reasoning by HERA conforms to our intuitions about ethical action.", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Formal verification of synchronisation, gossip and environmental effects for critical IoT systems\n", "abstract": " The Internet of Things (IoT) promises a revolution in the monitoring and control of a wide range of applications, from urban water supply networks and precision agriculture food production, to vehicle connectivity and healthcare monitoring. For applications in such critical areas, control software and protocols for IoT systems must be verified to be both robust and reliable. Two of the largest obstacles to robustness and reliability in IoT systems are effects on the hardware caused by environmental conditions, and the choice of parameters used by the protocol. In this paper we use probabilistic model checking to verify that a synchronisation and dissemination protocol for Wireless Sensor Networks (WSNs) is correct with respect to its requirements, and is not adversely affected by the environment. We show how the protocol can be converted into a logical model and then analysed using the probabilistic model-checker, Prism. Using this approach we prove under which circumstances the protocol is guaranteed to synchronise all nodes and disseminate new information to all nodes. We also examine the bounds on synchronisation as the environment changes the performance of the hardware clock, and investigate the scalability constraints of this approach.", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Deductive temporal reasoning with constraints\n", "abstract": " When modelling realistic systems, physical constraints on the resources available are often required. For example, we might say that at most N processes can access a particular resource at any moment, exactly M participants are needed for an agreement, or an agent can be in exactly one mode at any moment. Such situations are concisely modelled where literals are constrained such that at most N, or exactly M, can hold at any moment in time. In this paper we consider a logic which is a combination of standard propositional linear time temporal logic with cardinality constraints restricting the numbers of literals that can be satisfied at any moment in time. We present the logic and show how to represent a number of case studies using this logic. We propose a tableau-like algorithm for checking the satisfiability of formulae in this logic, provide details of a prototype implementation and present experimental results\u00a0\u2026", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Foundations of flexible multi-agent programming\n", "abstract": " In this paper we are concerned with proposing, analyzing and implementing simple, yet flexible, constructs for multi-agent programming. In particular, we wish to extend programming languages based on the BDI style of logical agent model with two such constructs, constraints and content/context sets. These two aspects provide sufficient expressive power to allow us to represent, simply and with semantic clarity, a wide range of organisational structures for multi-agent systems. In summary, we not only motivate this approach, but provide its semantics, through modification of a simple semantics based on the core of AGENTSPEAK, 3APL and METATEM. In addition, we provide illustrative examples by simulating both constraints and content/context sets within the Jason interpreter for AGENTSPEAK. In summary, we advocate the use of these simple constructs in many logic-based BDI languages, by appealing to their expressive power, semantics and simple implementation.", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Towards a science of reasoning through societies of proof planning agents\n", "abstract": " The value of having a proof plan comes from the structure it imposes upon the search space. We will argue that the bene ts of this structure have yet to be fully exploited, in particular the opportunities it provides for parallelising search. As well as having a positive e ective, the structure of a proof plan can also have a negative impact on the search for proofs. Currently the hierarchical structure of a proof plan is xed during its design. This xed structure signi cantly limits the exibility of a proof plan in dealing with new applications and proof strategies. Here we propose an agent-based approach to proof planning which we believe will enable us to harness the potential parallelism while also increasing the exibility of proof plans.", "num_citations": "2\n", "authors": ["1624"]}
{"title": "Verifiable autonomy and responsible robotics\n", "abstract": " Verifiable Autonomy and Responsible Robotics Page 1 Verifiable Autonomy and Responsible Robotics Michael Fisher Department of Computer Science, University of Liverpool RoboSoft, London 13th November 2019 [with help from very many people: Louise Dennis; Matt Webster; Marija Slavkovik; Clare Dixon; Alan Winfield; ... ] Page 2 Autonomy Architectures Verification Applications Closing My Talk in One Slide Questions I will try to address are \u2022 What is our real worry about autonomous robots? \u2022 How much confidence should we have in robots? ....and what evidence/justification can/should be provided? Michael Fisher Verifiable Autonomy and Responsible Robotics 2/31 Page 3 Autonomy Architectures Verification Applications Closing My Talk in One Slide Questions I will try to address are \u2022 What is our real worry about autonomous robots? \u2022 How much confidence should we have in robots? ....and what evidence\u2026", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Modular Verification of Vehicle Platooning with Respect to Decisions, Space and Time: Formal Techniques for Safety-Critical Systems. FTSCS 2018\n", "abstract": " The spread of autonomous systems into safety-critical areas has increased the demand for their formal verification, not only due to stronger certification requirements but also to public uncertainty over these new technologies. However, the complex nature of such systems, for example, the intricate combination of discrete and continuous aspects, ensures that whole system verification is often infeasible. This motivates the need for novel analysis approaches that modularise the problem, allowing us to restrict our analysis to one particular aspect of the system while abstracting away from others. For instance, while verifying the real-time properties of an autonomous system we might hide the details of the internal decision-making components. In this paper we describe verification of a range of properties across distinct dimensions on a practical hybrid agent architecture. This allows us to verify the autonomous decision-making, real-time aspects, and spatial aspects of an autonomous vehicle platooning system. This modular approach also illustrates how both algorithmic and deductive verification techniques can be applied for the analysis of different system subcomponents.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Cyber risk management in satellite systems\n", "abstract": " The wide use of satellites for both civilian and military purposes promise significant economic, social and security benefits. However, the rapidly evolving ecosystem and much lower barriers to entry have justifiably resulted in concerns for the cyber security of these systems. A number of threat actors have been identified and it is likely that space systems have already been compromised. As such it is important and timely that appropriate risk assessment is undertaken, and risk management strategies developed to ensure resilience of this part of the critical national infrastructure. While there have been some early forays into exploring cyber security of space systems, the issue remains a significant challenge. In this paper we discuss the challenges in assessing and managing cyber risk, and focus on those arising in space systems. We draw upon the discussion from a targeted workshop conducted in January 2019 as\u00a0\u2026", "num_citations": "1\n", "authors": ["1624"]}
{"title": "A Corroborative Approach to Verification and Validation of Human--Robot Teams: PRISM code and properties for the formal verification of the BERT 2 handover scenario\n", "abstract": " PRISM files needed to replicate the formal verification presented in the paper, \"A Corroborative Approach to Verification and Validation of Human--Robot Teams,\" by Matt Webster, David Western, Dejanira Araiza-Illan, Clare Dixon, Kerstin Eder, Michael Fisher and Anthony G. Pipe.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Towards robots for social engagement\n", "abstract": " In this paper we consider the aspects that ensure successful interaction between social robots and people. As such robots are increasingly autonomous, it is crucial that the user can trust their behaviour, and that their decisions are taken within social and ethical requirements. It is important to specify what actions are expected from the robot, verify that the autonomous robot actually achieve these, and validate that the requirements are exactly what the user wants. To this purpose, our activities have been focused on formal verification of autonomous robotics systems, investigating both reliability and robot ethics and deployment of social robots in both constrained and public environments.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "An Assurance-based Approach to Verification and Validation of Human--Robot Teams: PRISM Code and Properties for the Formal Verification of the BERT 2 Handover Scenario\n", "abstract": " PRISM files needed to replicate the formal verification presented in the paper:    An Assurance-based Approach to Verification and Validation of Human--Robot Teams    Matt Webster, David Western, Dejanira Araiza-Illan, Clare Dixon, Kerstin Eder, Michael Fisher, Anthony G. Pipe", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Virtual Engineering Centre\u2013Examples of Virtual Prototyping and Multidisciplinary Design Optimization\n", "abstract": " The requirement for the use of Virtual Engineering, encompassing the construction of Virtual Prototypes using Multidisciplinary Design Optimisation, for the development of future aerospace platforms and systems is discussed. Some of the activities at the Virtual Engineering Centre, a University of Liverpool initiative, are described and a number of case studies involving a range of applications of Virtual Engineering illustrated.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Verification of swarm robots: the Alpha algorithm\n", "abstract": " Here we apply model checking to a particular swarm robot algorithm, known as the alpha algorithm.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Logics in Artificial Intelligence: 10th European Conference, JELIA 2006, Liverpool, UK, September 13-15, 2006, Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the 10th European Conference on Logics in Artificial Intelligence, JELIA 2006. The 34 revised full papers and 12 revised tool description papers presented together with 3 invited talks were carefully reviewed and selected from 96 submissions. The papers cover a range of topics within the remit of the Conference, such as logic programming, description logics, non-monotonic reasoning, agent theories, automated reasoning, and machine learning.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "A simple logic for reasoning about uncertainty\n", "abstract": " Agent technologyhas been widely used in contemporarysystems. Agents are software components that act autonomously and interact with the real world, or, in other words, entities that perceive the environment and act according to this perception. Being intelligent (or rational), in this context, means that an agent acts in order to achieve its goals, taking into account both environmental stimuli and its beliefs. Therefore, when considering an agent\u2019s representation the chosen formalism must be appropriate for expressing an agent\u2019s state of mind.The introduction of powerful logical formalisms has had significant impact upon the development of knowledge representation over a number of years. A particularly successful direction has involved developing varieties of modal logic, such as logics of belief, logics of knowledge, and description logics. However, in many realistic scenarios, agents that have to decide what\u00a0\u2026", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Combinations of modal logics\n", "abstract": " Combinations of modal logics University of Amsterdam University of Amsterdam UvA Terms of use Contact UvA-DARE (Digital Academic Repository) Home Advanced Search Browse My selection Search UvA-DARE Author B. Bennet C. Dixon M. Fisher E. Franconi I. Horrocks U. Hustadt M. de Rijke Year 2002 Title Combinations of modal logics Journal Artificial Intelligence Review Volume 17 Pages (from-to) 1-20 Number of pages 20 Document type Article Faculty Interfacultary Research Institutes Institute Institute for Logic, Language and Computation (ILLC) URL go to publisher's site Language Undefined/Unknown Persistent Identifier https://hdl.handle.net/11245/1.207957 Disclaimer/Complaints regulations If you believe that digital publication of certain material infringes any of your rights or (privacy) interests, please let the Library know, stating your reasons. In case of a legitimate complaint, the Library will make the \u2026", "num_citations": "1\n", "authors": ["1624"]}
{"title": "An abstract machine for prototyping parallel proof mechanisms\n", "abstract": " An abstract machine for prototyping parallel proof mechanisms | Abstract machine models for parallel and distributed computing ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleBooksAbstract machine models for parallel and distributed computingAn abstract machine for prototyping parallel proof mechanisms chapter An abstract machine for prototyping parallel proof mechanisms Share on Authors: Robert Johnson profile image Robert Johnson Manchester Metropolitan Univ., Manchester, UK Manchester Metropolitan Univ., Manchester, UK View Profile , Kish Shen profile image Kish Shen Univ. of Manchester, Manchester, UK Univ. of \u2026", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Characterising Temporal Logic\n", "abstract": " This report extends some of the previous work on the characterisation of modal and tense logics and develops a framework suitable for the characterisation of simple properties of temporal logics. In particular, characteristic temporal formulas are given for linear, dense, and infinite temporal model structures, using only the U+ temporal operator.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "Temporal deductive verification of cache coherence protocols\n", "abstract": " First-order temporal logics (FOTLs) are very expressive formalisms in which we can specify, at a very natural level of abstraction,(almost) any computational system, together with its correctness conditions. This makes FOTLs ideal for formally specifying both software and hardware systems. Unfortunately, the expressiveness of FOTL also means that such logics are typically highly undecidable. Consequently, the fully automated deductive verification of FOTL specifications is not, in general, possible. Recently, however, a tractable fragment of FOTL was identified by Hodkinson, Wolter and Zakharyashev. This fragement, termed the monodic fragment is amenable to automated proof techniques, and we have developed a number of theorem-proving systems for this fragment. In this paper, we particularly consider the use of such tractable fragments of first-order temporal logics in the deductive verification of an important class of protocols, namely cache coherence protocols. This is the first use of monodic FOTLs in the deductive verification of reactive systems.", "num_citations": "1\n", "authors": ["1624"]}
{"title": "A Formal Semantics for Brahms Technical Report\u22c6\n", "abstract": " In this paper we present the reader with 41 rules to describe the formal semantics of Brahms. With so many rules it is difficult to get a clear picture of how Brahms operates, so we present the reader with Figures 1 and 2 to help explain the semantics. To aid the reader we will follow the flow through the Brahms semantics in Figures 1 and 2. It should be noted that this is only the core aspects of the Brahms semantics, functions such as suspension, detectables, variables, etc. have been removed for simplicity. The Figures 1 and 2 have been drawn with a relation to traditional data flow diagrams where rectangles with rounded edges start the data flow, rectangular boxes with sharp edges represent a process, diamond boxes represent a yes/no choice, and an elongated oval represents the termination state. Arrows are used in the diagrams to show how the flow moves from process to process, arrows emanating from a diamond are labelled either yes or no to signify which choice they represent. To help describe the flow through these diagrams the states have been labelled A1-A22 and S1-S8. The agent\u2019s states are identified using A and the scheduler\u2019s by S. It should be realised that the agent\u2019s and the scheduler diagrams are not mutually exclusive, ie, some agent states require the scheduler to be in a certain state before the agent is moved onto another state. Some process states in the diagrams are shaded, these are to identify that non-determinism can occur in these states, eg, state A14 is shaded and refers to updating a belief or a fact, the non-determinism here occurs because belief and fact updates are assigned a \u2018certainty\u2019, ie, a percentage\u00a0\u2026", "num_citations": "1\n", "authors": ["1624"]}