{"title": "Information Security Awareness Behavior: A Conceptual Model for Cloud\n", "abstract": " Cloud computing has changed the whole picture that distributed computing used to present such as Grid computing, server client computing. Despite Cloud offers great benefits, it also introduces a myriad of security threats to the information and data which is now being ported from on-premises to off-premises. These security threats must be overcome in order to get full benefit from this new computing exemplar. This paper identifies the importance of awareness behavior in context of information security for cloud. We investigate four important factors of security awareness behavior that should be considered when organisations intend to improve their security toward cloud computing environment based on awareness-focused programs. Finally we conclude that a well-structured awareness program that positively affect the level of self-efficacy, security practice care behavior, security awareness technology behavior and intention will improve the level of total information security in cloud computing environment.", "num_citations": "8\n", "authors": ["411"]}
{"title": "A based approach for prioritization of Genetic Testing on Non-Object Oriented\n", "abstract": " The things which marks Unit Testing so tough is the ambiguity ways that software world keeps moving forward. Although, sometimes by only focusing on clear methods and code up the testing, task is easy to implement, but in real world, it's necessity to test all corners such as database, devices, communication and etc. This article proposed an orthogonal software testing approach based on Genetic Algorithm technique. This approach treats the input parameters of a software unit in an orthogonal partitioning to dynamic level of testing. The authors have considered using of different partitioning and mock objects help to make an isolated testing, improve code's structure and automated testing possibility. The results of the test case executions can be analyzed, in order to find the\" IF\" metrics for partitioning the traceable ways and detecting defects, to generate more effective test cases in future testing, and help to locate\u00a0\u2026", "num_citations": "2\n", "authors": ["411"]}
{"title": "Enhancing Efficiency of Protein Functional Prediction Through Association Network Using Greedy Weighting Method\n", "abstract": " Background: In spite of the significant data surrounding complex gene networks including gene function, the occurrence of huge redundancy affects the efficiency. Objective: This work proposes a mining method to reduce the number of redundant nodes in a composite weighted network. Method: The idea is to eliminate the redundancies of nodes via a hybrid approach, i.e. the integration of multiple functional association networks using a Greedy Algorithm. This is achieved by mining the gene function from weighted gene co-expression networks based on neighbor similarity, as per the available datasets. Subsequently, Linear Regression and Greedy Algorithm are applied simultaneously for exclusion of the redundant nodes. Then, assigning the indexing rates for the remaining nodes in the dataset further assists the process. Results and Conclusion: In comparison with other well-known algorithms, this method is 93\u00a0\u2026", "num_citations": "1\n", "authors": ["411"]}
{"title": "Prioritization of Unit Testing on non-object oriented using a top-down based approach\n", "abstract": " The issue which makes Unit Testing so tough is the ambiguous ways that the software world keeps moving forward. Although sometimes by implementing simple unit testing methods, this task become easy to handle. However to achieve a comprehensive unit testing it is supposed to test all corners of software such as database, devices, communication etc. This paper proposes an orthogonal software testing approach based on Top-Down technique which treats the input parameters of a software unit in an orthogonal partitioning to dynamic level of testing. Describes how test cases are statistically for each trial of software testing steps and makes a dynamic partitioning approach on non-object oriented experiments. The adequacy of the generated test cases can be validated by examining testing coverage metrics. The authors have considered using of different partitioning and mock objects help to make an isolated\u00a0\u2026", "num_citations": "1\n", "authors": ["411"]}