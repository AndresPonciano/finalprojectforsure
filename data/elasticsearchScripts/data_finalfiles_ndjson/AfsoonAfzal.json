{"title": "Evaluating CoBlox: A comparative study of robotics programming environments for adult novices\n", "abstract": " A new wave of collaborative robots designed to work alongside humans is bringing the automation historically seen in large-scale industrial settings to new, diverse contexts. However, the ability to program these machines often requires years of training, making them inaccessible or impractical for many. This paper rethinks what robot programming interfaces could be in order to make them accessible and intuitive for adult novice programmers. We created a block-based interface for programming a one-armed industrial robot and conducted a study with 67 adult novices comparing it to two programming approaches in widespread use in industry. The results show participants using the block-based interface successfully implemented robot programs faster with no loss in accuracy while reporting higher scores for usability, learnability, and overall satisfaction. The contribution of this work is showing the potential for\u00a0\u2026", "num_citations": "76\n", "authors": ["2121"]}
{"title": "[Engineering Paper] An IDE for Easy Programming of Simple Robotics Tasks\n", "abstract": " Many robotic tasks in small manufacturing sites are quite simple. For example, a pick and place task requires only a few common commands. Unfortunately, the standard languages and programming environments for industrial robots are complex, making even these simple tasks nearly impossible for novices. To enable novices to program simple tasks we created a block-based programming language and environment focused on usability, learnability, and understandability and embedded its programming environment in a state-of-the-art robot simulator. By using this high-fidelity prototype over the course of a year in a case study, a user study, and for countless demonstrations we have gained many concrete insights. In this paper we discuss the details of the language, the design of its programming environment, and concrete insights gained via longitudinal usage.", "num_citations": "4\n", "authors": ["2121"]}
{"title": "Quality assurance automation in autonomous systems\n", "abstract": " Robots and autonomous systems are finding their way to interact with the public and failures in these systems could be extremely expensive, even deadly. However, low-cost software-based simulation could be a promising approach to systematically test robotics systems and prevent failures as early as possible. In our early work, we showed that the majority of bugs could actually be reproduced and discovered using low-fidelity simulation environment. We created a high-level framework for automated testing of popular ArduPilot systems. In this work, I propose novel approaches to automatically infer powerful representation of system models, and generate test suites with the purpose of enhancing automated fault localization performance and describing the root cause of failures. Finally, I propose to use those novel approaches to inform the construction of automated program repair techniques for autonomous\u00a0\u2026", "num_citations": "3\n", "authors": ["2121"]}
{"title": "Poseidon Team Description Paper RoboCup 2013, Eindhoven\n", "abstract": " The objective of this manuscript is to technically explain Poseidon team\u2019s contributions to rescue agent development. Each section describes our algorithms and methods that are implemented in an efficient way. We use artificial intelligence algorithms and probabilistic methods to solve the existing problems in the rescue simulation league. This version of the Poseidon team is based on the sample code of the server with extensive changes in structure of agents.", "num_citations": "1\n", "authors": ["2121"]}