{"title": "Model-driven development\n", "abstract": " The model-driven architecture (MDA) paradigm is well-known and widely used in the field of model-based software development. However, there are still some issues that are problematic and that need to be dealt with carefully. In this paper we present a metaphor that explains how MDA grows in complexity as problems faced become more difficult or \u201cwicked\u201d, and how a method designed to be powerful, flexible and MDA-compliant can eventually become, in effect, a \u201cjigsaw puzzle\u201d. This jigsaw puzzle is not merely the result of having a collection of methodological \u201cpieces\u201d with routes across them, but also arises as a result of the criteria underlying the MDA abstraction layers. We compare MDA to other research fields such as human-computer interaction, model management and method engineering, and we use as an example the OO-Method, a software development method based on MDA-compliant\u00a0\u2026", "num_citations": "86\n", "authors": ["598"]}
{"title": "Communication Analysis: a requirements engineering method for information systems\n", "abstract": " Developing Information Systems (ISs) is a hard task for which Requirements Engineering (RE) offers a good starting point. ISs can be viewed as a support for organisational communication. Therefore, we argue in favour of communication-oriented RE methods. This paper presents Communication Analysis, a method for IS development and computerisation. The focus is put on requirements modelling techniques. Two novel techniques are described; namely, Communicative Event Diagram and Communication Structures. These are based on sound theory, they are accompanied by prescriptive guidelines (such as unity criteria) and they are illustrated by means of a practical example.", "num_citations": "74\n", "authors": ["598"]}
{"title": "Comparing humans and AI agents\n", "abstract": " Comparing humans and machines is one important source of information about both machine and human strengths and limitations. Most of these comparisons and competitions are performed in rather specific tasks such as calculus, speech recognition, translation, games, etc. The information conveyed by these experiments is limited, since it portrays that machines are much better than humans at some domains and worse at others. In fact, CAPTCHAs exploit this fact. However, there have only been a few proposals of general intelligence tests in the last two decades, and, to our knowledge, just a couple of implementations and evaluations. In this paper, we implement one of the most recent test proposals, devise an interface for humans and use it to compare the intelligence of humans and Q-learning, a popular reinforcement learning algorithm. The results are highly informative in many ways, raising many\u00a0\u2026", "num_citations": "57\n", "authors": ["598"]}
{"title": "On more realistic environment distributions for defining, evaluating and developing intelligence\n", "abstract": " One insightful view of the notion of intelligence is the ability to perform well in a diverse set of tasks, problems or environments. One of the key issues is therefore the choice of this set, which can be formalised as a \u2018distribution\u2019. Formalising and properly defining this distribution is an important challenge to understand what intelligence is and to achieve artificial general intelligence (AGI). In this paper, we agree with previous criticisms that a universal distribution using a reference universal Turing machine (UTM) over tasks, environments, etc., is perhaps a much too general distribution, since, e.g., the probability of other agents appearing on the scene or having some social interaction is almost 0 for many reference UTMs. Instead, we propose the notion of Darwin-Wallace distribution for environments, which is inspired by biological evolution, artificial life and evolutionary computation. However, although\u00a0\u2026", "num_citations": "40\n", "authors": ["598"]}
{"title": "The beautification process in model-driven engineering of user interfaces\n", "abstract": " The beautification of a user interface resulting from model-to-model and model-to-code transformations in Model-Driven Architecture consists of performing manual changes to address user requirements which have not been supported during the transformations. These requirements may include customization, users\u2019 preferences, and compliance with corporate style guidelines. This paper introduces a beautification process into a user-interface model. This process includes a series of beautification operations based on a formal definition, as well as a constrained editor that enables designers to apply these beautification operations on a user interface. All manual changes done using these beautification operations are transformed into model-to-model transformations, thus reducing the problem of round-trip engineering. The paper also demonstrates that this process significantly reduces the number of\u00a0\u2026", "num_citations": "35\n", "authors": ["598"]}
{"title": "Capturing Interaction Requirements in a Model Transformation Technology Based on MDA.\n", "abstract": " Currently, many models are used to capture functional software requirements. However, the Software Engineering community has faded interaction requirements into the background, dealing with interface mainly in design time. A sound MDA-compliant software development methodology, called OO-Method, is extended in this work to bridge this gap. The issue is to define a methodology for capturing interaction requirements. For this purpose, the formal notation ConcurTaskTrees (CTT) is used. This notation is a technique that is wellknown in the Human Computer Interaction community. A set of interaction patterns has been defined to build CTT models. These patterns are defined with a very precise syntax and semantics. Moreover, transformation rules are defined to transform the Task Model into the OO-Method Presentation Model, which specifies the user interface in an abstract and platformindependent way\u00a0\u2026", "num_citations": "22\n", "authors": ["598"]}
{"title": "Analysing the concept of quality in model-driven engineering literature: A systematic review\n", "abstract": " The Model-Driven Engineering (MDE) research must manage a diversity of conceptions despite the global truth about the use of conceptual models as one way for representing and managing the development of complex information systems. Due to this diversity of conceptions and the multiple MDE compliance interpretations, a pletora of definitions about quality in models are emerging, each one tackling specific dimensions involved in MDE projects. In order to explore a consensus about quality in models and model-driven contexts an identification of the previous proposals for quality in models is needed. The main contribution of this work is the identification of representative trends about quality definition in MDE, and therefore, exposing the implications of the multiple quality interpretations as consequence of the diversity in MDE compliance works.", "num_citations": "21\n", "authors": ["598"]}
{"title": "Considerations about quality in model-driven engineering\n", "abstract": " The virtue of quality is not itself a subject; it depends on a subject. In the software engineering field, quality means good software products that meet customer expectations, constraints, and requirements. Despite the numerous approaches, methods, descriptive models, and tools, that have been developed, a level of consensus has been reached by software practitioners. However, in the model-driven engineering (MDE) field, which has emerged from software engineering paradigms, quality continues to be a great challenge since the subject is not fully defined. The use of models alone is not enough to manage all of the quality issues at the modeling language level. In this work, we present the current state and some relevant considerations regarding quality in MDE, by identifying current categories in quality conception and by highlighting quality issues in real applications of the model-driven initiatives. We\u00a0\u2026", "num_citations": "15\n", "authors": ["598"]}
{"title": "The anYnt project intelligence test: Lambda-one\n", "abstract": " All tests in psychometrics, comparative psychology and cognition which have been put into practice lack a mathematical (computational) foundation or lack the capability to be applied to any kind of system (humans, non-human animals, machines, hybrids, collectives, etc.). In fact, most of them lack both things. In the past fifteen years, some efforts have been done to derive intelligence tests from formal intelligence definitions or vice versa, grounded on computational concepts. However, some of these approaches have not been able to create universal tests (ie, tests which can evaluate any kind of subjects) and others have even failed to make a feasible test. The ANYNT project was conceived to explore the possibility of defining formal, universal and anytime intelligence tests, having a feasible implementation in mind. This paper presents the basics of the theory behind the ANYNT project and describes one of the test propotypes that were developed in the project: test \u039bone.", "num_citations": "15\n", "authors": ["598"]}
{"title": "Integrating business domain ontologies with early requirements modelling\n", "abstract": " Requirements engineering is an important and complex phase during systems development because it combines the description of the system\u2019s domain with the elicitation, specification and validation of application-specific requirements. In this paper we propose an ontology-based requirements engineering approach that integrates the use of domain ontologies to capture domain knowledge into early requirements modelling techniques, which primarily aim at eliciting and representing the organisational and intentional context of the system. The proposed approach can be used with different types of domain ontologies and different requirements engineering techniques. The approach is illustrated using the REA enterprise ontology, the E3-value ontology and the i* requirements modelling framework.", "num_citations": "15\n", "authors": ["598"]}
{"title": "A GUI modeling language for mobile applications\n", "abstract": " The market of mobile applications is constantly changing and growing, partly due to the popularity of software that supports daily tasks and the emergence of new communication medias. Applications of this kind are typically small but require high usability interfaces, which are often based on small's sets of patterns with proven efficacy. Using patterns is one of the main principles of model-driven development, a paradigm with the potential to reduce development time and coding errors. However, there exist many challenges for improving the usability of automatically generated mobile interfaces. To face some of these challenges, this paper proposes a method to model mobile interfaces, which is part of an ongoing research project aimed at model-driven development of fully-functional mobile applications. We present the modeling constructs, which are inspired by recent studies on best practices, and evaluate the\u00a0\u2026", "num_citations": "13\n", "authors": ["598"]}
{"title": "Conceptual alignment of software production methods\n", "abstract": " From an Information Systems (IS) perspective, a myriad of specific approaches exist to deal with the different parts of a software production process. How to align them correctly taking a conceptual approach is still a very open problem. Instead of facing how to incrementally improve pre-existing methods, more and more proposals that are based on different paradigms or combine current IS concepts in some apparently innovative way are introduced. The conclusion of all of this is that, more than ever, we should concentrate on the essentials of IS modelling. A set of precise concepts is essential to be able to understand what each technique offers. A conceptual reference framework is needed to appropriately align the different proposals. This work presents a conceptual framework to be used for the conceptual alignment of software production methods. As a practical application, it is applied to the OO-Method\u00a0\u2026", "num_citations": "13\n", "authors": ["598"]}
{"title": "Message Structures: a modelling technique for information systems analysis and design.\n", "abstract": " Despite the increasing maturity of model-driven software development (MDD), some research challenges remain open in the field of information systems (IS). For instance, there is a need to improve modelling techniques so that they cover several development stages in an integrated way, and they facilitate the transition from analysis to design. This paper presents Message Structures, a technique for the specification of communicative interactions between the IS and organisational actors. This technique can be used both in the analysis stage and in the design stage. During analysis, it allows abstracting from the technology that will support the IS, and to complement business process diagramming techniques with the specification of the communicational needs of the organisation. During design, Message Structures serves two purposes:(i) it allows to systematically derive a specification of the IS memory (eg a UML class diagram),(ii) and it allows to reason the user interface design using abstract patterns. This technique is part of Communication Analysis, a communication-oriented requirements engineering method, but it can be adopted in order to extend widely-used business process and functional requirements modelling techniques (eg BPMN, Use Cases). Moreover, the paper presents two tools that support Message Structures, one uses the Xtext technology, and the other uses the Eclipse Modelling Framework. Industrial experience has shown us that the technique can be adopted and applied in complex projects.", "num_citations": "12\n", "authors": ["598"]}
{"title": "Towards a communicational perspective for enterprise information systems modelling\n", "abstract": " This paper presents an overview of Communication Analysis, an approach to enterprise information systems (ISs) modelling that adopts a communicational perspective. It consists of a method and its underlying requirements structure. The proposed approach is conceived to be conceptually sound (it is founded on settled knowledge from various scientific fields), practically prescriptive (it offers guidance and criteria) and flexible (it offers specific strategies to deal with static and dynamic aspects of ISs). Both the method and the structure have been proved to be successful in complex projects.", "num_citations": "12\n", "authors": ["598"]}
{"title": "Full model-driven practice: from requirements to code generation\n", "abstract": " A crucial success factor in information systems development is the alignment of the system with business goals, business semantics and business processes. Developers should be freed from programming concerns and be able to concentrate on these alignment problems. Model-driven system development (MDD) does not only provide a structured and systematic approach to systems development, but also offers developers the possibility of using model-transformation technologies to derive models of a lower abstraction level that can be further refined, and even generating software code automatically. This tutorial shows how to successfully integrate business process modelling (BPM), requirements engineering (RE) and object-oriented conceptual modelling with the objective of leveraging MDD capabilities. Participants work with state of the art modelling methods and code generation tools to explore\u00a0\u2026", "num_citations": "11\n", "authors": ["598"]}
{"title": "Model-driven organisational reengineering: A framework to support organisational improvement\n", "abstract": " Companies need to rethink business processes, infrastructures, technologies, staff, etc. according to new demands, strategic goals, and changes in their environment. Information System evolution has been supported by the reengineering process. Since the models are now part of an increasing number of engineering processes and model-driven software development is a well-established paradigm to support information systems, the reengineering process could be improved with the incorporation of the model-driven development paradigm. This paper presents a model-driven organisational reengineering framework to support organisational improvement. The main idea is to get the most out of the existing proposals in model-driven development for the reengineering process (reverse engineering, improvement processes, and forward processes). Methods, techniques, model-driven tools, and perspectives for\u00a0\u2026", "num_citations": "10\n", "authors": ["598"]}
{"title": "An ontological-based approach to analyze software production methods\n", "abstract": " In the Information Systems (IS) area, countless modelling techniques exist to deal with the different perspectives of reality. Many software development methods propose many languages to make descriptions. How to align them correctly following an ontological approach is still an open problem. Instead of facing how to incrementally improve pre-existing methods, more and more proposals are introduced time after time, based on different paradigms or combining (in an apparently innovative way) current IS concepts. We seek to establish a conceptual framework for IS that helps to reason about different software development approaches. In this work, starting from a conceptual framework built on the basis of the FRISCO proposal, we explain how to trace the conceptual alignment of software production methods; that is, how the modelling primitives proposed by the method map to the elements of our\u00a0\u2026", "num_citations": "9\n", "authors": ["598"]}
{"title": "Evaluating the quality of a set of modelling languages used in combination: A method and a tool\n", "abstract": " Modelling languages have proved to be an effective tool to specify and analyse various perspectives of enterprises and information systems. In addition to modelling language designs, works on model quality and modelling language quality evaluation have contributed to the maturity of the model-driven engineering (MDE) field. Although consolidated knowledge on quality evaluation is still relevant to this scenario, in previous works, we have identified misalignments between the topics that academia is addressing and the needs of industry in applying MDE, thus identifying some remaining challenges. In this paper, we focus on the need for a method to evaluate the quality of a set of modelling languages used in combination within a MDE environment. This paper presents MMQEF (Multiple Modelling language Quality Evaluation Framework), describing its foundations, presenting its method components and\u00a0\u2026", "num_citations": "8\n", "authors": ["598"]}
{"title": "Model-driven engineering support for social and environmental accounting\n", "abstract": " Social and environmental accounting (SEA) is becoming commonplace in organisations that want to assess and report on their business ethics and sustainability performance. While there is an abundance of methods and standards that define how to perform such practice, tool support is much more limited and does not fully match the needs of organisations. In this paper, we present a model-driven engineering approach to support SEA. We are engineering a domain-specific language that allows creating models of SEA methods and we are implementing a tool that interprets such models at runtime, effectively supporting the accounting, and providing basic model management operations. This paper presents the preliminary results and, as a running example, we use UniSAF, a SEA method to assess the sustainability of universities. The results are promising, according to two SEA experts we have consulted, and\u00a0\u2026", "num_citations": "7\n", "authors": ["598"]}
{"title": "Modelling language quality evaluation in model-driven information systems engineering: A roadmap\n", "abstract": " [Context and motivation] The Model-Driven Engineering (MDE) paradigm remains an active niche in information systems engineering and research. Given their primary role, assuring the quality of models and modelling languages is crucial. In a previous literature review, we have confirmed that there exist different conceptions on model and modelling language quality. [Question/problem] Also, many approaches tackle a narrow perspective and practitioners often feel that such practices burden them with extra effort. A wider overview of the field is needed, taking into account the constraining and pressing conditions of industrial practice. [Principal ideas/results] This paper recalls the essence of, current trends and pitfalls of modelling language quality evaluation within MDE. Some of the current unsolved issues are related to a growing system complexity, evaluating the quality of a complementary set of languages, the\u00a0\u2026", "num_citations": "7\n", "authors": ["598"]}
{"title": "Methodological integration of Communication Analysis into a model-driven software development framework\n", "abstract": " It is widely recognised that information and communication technologies development is a risky activity. Despite the advances in software engineering, many software development projects fail to satisfy the clients' needs, to deliver on time or to stay within budget. Among the various factors that are considered to cause failure, an inadequate requirements practice stands out. Model-driven development is a relatively recent paradigm with the potential to solve some of the dragging problems of software development. Models play a paramount role in model-driven development: several modelling layers allow defining views of the system under construction at different abstraction levels, and model transformations facilitate the transition from one layer to the other. However, how to effectively integrate requirements engineering within model-driven development is still an open research challenge. This thesis integrates Communication Analysis, a communication-oriented business process modelling and requirements engineering method for information systems development, and the OO Method, an object-oriented model-driven software development method provides automatic software generation from conceptual models. We first provide a detailed specification of Communication Analysis intended to facilitate the integration; among other improvements to the method, we build an ontology-based set of concept definitions in which to ground the method, we provide precise methodological guidelines, we create  a metamodel for the modelling languages included in the method, and we provide tools to support the creation of Communication Analysis\u00a0\u2026", "num_citations": "7\n", "authors": ["598"]}
{"title": "GestUI: a model-driven method and tool for including gesture-based interaction in user interfaces\n", "abstract": " Among the technological advances in touch-based devices, gesture-based interaction have become a prevalent feature in many application domains. Information systems are starting to explore this type of interaction. As a result, gesture specifications are now being hard-coded by developers at the source code level that hinders their reusability and portability. Similarly, defining new gestures that reflect user requirements is a complex process. This paper describes a model-driven approach to include gesture-based interaction in desktop information systems. It incorporates a tool prototype that captures user-sketched multi-stroke gestures and transforms them into a model by automatically generating the gesture catalogue for gesture-based interaction technologies and gesture-based user interface source codes. We demonstrated our approach in several applications ranging from case tools to form-based information systems.", "num_citations": "6\n", "authors": ["598"]}
{"title": "Conciliating model-driven engineering with technical debt using a quality framework\n", "abstract": " The main goal of this work is to evaluate the feasibility to calculate the technical debt (a traditional software quality approach) in a model-driven context through the same tools used by software developers at work. The SonarQube tool was used, so that the quality check was performed directly on projects created with Eclipse Modeling Framework (EMF) instead of traditionals source code projects. In this work, XML was used as the model specification language to verify in SonarQube due to the creation of EMF metamodels in XMI (XML Metadata Interchange) and that SonarQube offers a plugin\u00a0to assess the XML language. After this, our work focused on the definition of model rules as an XSD schema (XML Schema Definition) and the integration between EMF-SonarQube in order that these metrics were directly validated by SonarQube; and subsequently, this tool determined the technical debt that the\u00a0\u2026", "num_citations": "6\n", "authors": ["598"]}
{"title": "Evidences of the mismatch between industry and academy on modelling language quality evaluation\n", "abstract": " Quality is an implicit property of models and modelling languages by their condition of engineering artifacts. However, the quality property is affected by the diversity of conceptions around the model-driven paradigm. In this document is presented a report of quality issues on modelling languages and models. These issues result from an analysis about quality evidences obtained from industrial and academic/scientific contexts.", "num_citations": "5\n", "authors": ["598"]}
{"title": "A Method for Context Modelling in Capability Management\n", "abstract": " Enterprises exist in the context of their dynamically changing environment, which has a strong impact on service design and delivery. Within areas such as ambient intelligence or robotics, most relevant context has a physical nature. However, the context of an enterprise requires a different conceptual-ization of context awareness. Beyond physical context, enterprises need to be aware of their market, legal and social context. Moreover, in order to monitor context and configure services systematically, we need a context modelling method that is integrated within enterprise modelling and supports in-formation and communication technology (ICT) engineering and runtime. The work in this paper has been performed as part of developing Capability Driven Development (CDD), a new paradigm for ICT design where services are customised on the basis of the essential business capabilities and deliv-ery is adjusted according to the current context. The contributions of the paper are (i) the investiga-tion of industrial needs for context modelling,(ii) eCoM, a context modelling method for enterprise ICT addressing such needs, iii) application of the method in an industrial use case and (iv) the evolu-tion of eCoM based on various evaluation cycles by means of Framework for Evaluation in Design Science Research (FEDS).", "num_citations": "5\n", "authors": ["598"]}
{"title": "Including multi-stroke gesture-based interaction in user interfaces using a model-driven method\n", "abstract": " Technological advances in touch-based devices now allow users to interact with information systems in new ways, being gesture-based interaction a popular new kid on the block. Many daily tasks can be performed on mobile devices and desktop computers by applying multi-stroke gestures. Scaling up this type of interaction to bigger information systems and software tools entails difficulties, such as the fact that gesture definitions are platform-specific and this interaction is often hard-coded in the source code and hinders their analysis, validation and reuse. In an attempt to solve this problem, we here propose gestUI, a model-driven approach to the multi-stroke gesture-based user interface development. This system allows modelling gestures, automatically generating gesture catalogues for different gesture-recognition platforms, and user-testing the gestures. A model transformation automatically generates the\u00a0\u2026", "num_citations": "5\n", "authors": ["598"]}
{"title": "A Model-driven Method and a Tool for Developing Gesture-based Information System Interfaces.\n", "abstract": " Considering the technological advances in touch-based devices, gesture-based interaction has become a prevalent feature in many application domains. Information systems are starting to explore this type of interaction. Currently, gesture specifications are hard-coded by developers at the source code level, hindering its reusability and portability. Similarly, defining new gestures in line with users\u2019 requirements is further complicated. This paper describes a model-driven approach to include gesture-based interaction in desktop information systems and a tool prototype to: capture user-sketched multi-stroke gestures and transform them into a model, automatically generating the gesture catalogue for gesture-based interaction technologies and gesture-based interface source code. We demonstrate our approach in several applications, ranging from case tools to form-based information systems.", "num_citations": "5\n", "authors": ["598"]}
{"title": "Towards a holistic conceptual modelling-based software development process\n", "abstract": " Traditionally, the Conceptual Modelling (CM) community has been interested in defining methods to model Information Systems by specifying their data and behaviour, disregarding user interaction. On the other hand, the Human-Computer Interaction (HCI) community has defined techniques oriented to the modelling of the interaction between the user and the system, proposing a user-centred software construction, but leaving out details on system data and behaviour. This paper aspires to reconcile both visions by integrating task modelling techniques using a sound, conceptual model-based software development process in a HCI context. The system is considered on its three axis (data, functionality and interaction), as a whole. The use of CTT (Concurrent Task Trees) embedded in a model-based approach makes it possible to establish mapping rules between task structure patterns that describe\u00a0\u2026", "num_citations": "5\n", "authors": ["598"]}
{"title": "Learning Pros and Cons of Model-Driven Development in a Practical Teaching Experience\n", "abstract": " Current teaching guides on Software Engineering degree focus mainly on teaching programming languages from the first courses. Conceptual modeling is a topic that is only taught in last courses, like master courses. At that point, many students do not see the usefulness of conceptual modeling and most of them have difficulty to reach the level of abstraction needed to work with them. In order to make the learning of conceptual modeling more attractive, we have conducted an experience where students compare a traditional development versus a development using conceptual models through a Model-Driven Development (MDD) method. This way, students can check on their own pros and cons of working with MDD in a practical environment. Comparison has been done in terms of Accuracy, Effort, Productivity and Satisfaction. The contribution of this paper is twofold: the description of the teaching\u00a0\u2026", "num_citations": "4\n", "authors": ["598"]}
{"title": "Integrating Technical Debt into MDE.\n", "abstract": " The main goal of this work is to evaluate the feasibility to calculate the technical debt (a traditional software quality approach) in a model-driven context through the same tools used by software developers at work. The SonarQube tool was used, so that the quality check was performed directly on projects created with Eclipse Modeling Framework (EMF) instead of traditionals source code projects. In this work, XML was used as the model specification language to verify in Sonar-Qube due to the creation of EMF metamodels in XMI (XML Metadata Interchange) and that SonarQube offers a plugin to assess the XML language. After this, our work focused on the definition of model rules as an XSD schema (XML Schema Definition) and the integration between EMF-SonarQube in order that these metrics were directly validated by SonarQube; and subsequently, this tool determined the technical debt that the analyzed EMF models could contain.", "num_citations": "4\n", "authors": ["598"]}
{"title": "A method to evaluate quality of modelling languages based on the Zachman reference taxonomy\n", "abstract": " The model-driven engineering (MDE) paradigm promotes the use of conceptual models in information systems (IS) engineering and research. As engineering products, conceptual models must be of high quality, which applies to both conceptual models and the modelling language used to build them. Quality is a growing concern in the MDE field; however, studies such as Giraldo, F.D. et al. Software Quality Journal, pp. 1\u201366 (2016b) and Goul\u00e3o, M. et al. Software Quality Journal, pp. 1\u201333 (2016) demonstrate the divergence in several approaches that are proposed for addressing this topic. Due to the many challenges, divergences, and trends for quality assessment and assurance in the MDE context, one way to perform a quality evaluation process is to use an approach where the applicability and goals of modelling languages (and artifacts) can be compared with respect to the essential principles of the\u00a0\u2026", "num_citations": "3\n", "authors": ["598"]}
{"title": "Improving ICT4D projects with Agile software development\n", "abstract": " ICT4D seeks to bridge the digital divide in developing countries. Important requirements of ICT4D projects are a demand-driven approach and participation of the local community. The fact that user collaboration is a principle of Agile software development (Agile), triggers our interest on whether Agile practices can improve ICT4D projects. This paper aims to investigate if and how Agile can contribute to the success of ICT4D projects. In order to achieve this, existing literature was consulted and an interview was held. This paper provides an overview of the critical success factors for ICT4D projects and Agile, as well as of the advantages of Agile. Agile can only work successfully when ICT4D projects are demand-driven, and when both a cultural understanding and trust are built. Notable ways in which Agile can improve ICT4D projects are by facilitating user collaboration, improving team communication, enhancing organizational learning, and by frequently delivering software.", "num_citations": "3\n", "authors": ["598"]}
{"title": "Business model exploration for software defined networks\n", "abstract": " Business modeling is becoming a foundational process in the information technology industry. Many ICT companies are constructing their business models to stay competitive on the cutting edge of the technology world. However, when comes to new technologies or emerging markets, it remains difficult for the decision maker to make an assertive choice. This paper aims to fill this gap by providing organizations with an overall approach to better design and develop business models in an innovative ICT market. The business model canvas is used to analyze existing players in the market. Moreover, a case study is made of Software Defined Networking (SDN): a business model template for SDN is proposed as a representation tool to bridge the business concept and the SDN functionalities. The models and methods are evaluated and enhanced by interviewing experts from key players in the SDN market. In\u00a0\u2026", "num_citations": "3\n", "authors": ["598"]}
{"title": "Extending and validating gestUI using technical action research\n", "abstract": " gestUI is a model-driven method with tool support to define custom gestures and to include gesture-based interaction in existing user software system interfaces. So far, gestUI had been limited to the definition of the same gesture catalogue for all users of the software system. In this paper, we extend gestUI to permit individual users to define their own custom gesture catalogue and redefine some custom gestures in case of difficulty in using or remembering them. After extending gestUI, we applied technical action research from the FP7 CaaS project's Capability Design Tool with the aim of assessing its acceptance in an industrial setting. We also analysed its perceived ease-of-use and usefulness and gestUI's desirability level and user experience. The study shows that the tool can help improve the definition of custom gestures and the inclusion of gesture-based interaction in user interfaces of software systems.", "num_citations": "3\n", "authors": ["598"]}
{"title": "OO-Sketch: Una Herramienta para la Captura de Requisitos de Interacci\u00f3n.\n", "abstract": " Actualmente no existe un m\u00e9todo ampliamente aceptado para la captura de requisitos de interacci\u00f3n. El dibujo de bocetos de la interfaz de usuario va cobrando poco a poco un papel importante dentro de este \u00e1mbito. Es necesario el desarrollo de herramientas que permitan dibujar estos bocetos en formato digital. Adem\u00e1s, siguiendo el paradigma MDA, el esfuerzo aplicado en la captura de requisitos deber\u00eda verse reflejado en etapas posteriores de Modelado Conceptual. La herramienta encargada de soportar el dibujo de bocetos tambi\u00e9n deber\u00eda ser capaz de realizar esta transformaci\u00f3n desde los requisitos al Modelo Conceptual. El objetivo de este trabajo es abordar ambos aspectos. Por un lado, se presentan las primitivas para realizar los bocetos. Por otro lado, se presenta la estrategia abordada para su transformaci\u00f3n autom\u00e1tica hacia el Modelo Conceptual definido por OO-Method, un m\u00e9todo de producci\u00f3n de software conforme con MDA. La herramienta de edici\u00f3n de bocetos, llamada OO-Sketch, alcanzar\u00eda su m\u00e1xima potencia como parte de la tecnolog\u00eda ONME, la cual incluye un compilador de modelos que, a partir del Modelo Conceptual, es capaz de generar la correspondiente aplicaci\u00f3n software totalmente funcional.", "num_citations": "3\n", "authors": ["598"]}
{"title": "Generaci\u00f3n Autom\u00e1tica de Interfaces a Partir de Patrones Estructurales de Tareas\n", "abstract": " Actualmente, son muchos los modelos existentes para la captura de los requisitos funcionales de sistemas software. Sin embargo, la comunidad de Ingenier\u00eda del Software ha venido relegando a un segundo plano los requisitos de interacci\u00f3n, tratando la interfaz \u00fanicamente en tiempo de dise\u00f1o. En este trabajo se extiende un s\u00f3lido m\u00e9todo de producci\u00f3n de software llamado OO-Method mediante la definici\u00f3n de una actividad de captura de requisitos de interacci\u00f3n. Para ello se hace uso de la notaci\u00f3n formal CTT, una t\u00e9cnica bien conocida en el \u00e1mbito de la comunidad Interacci\u00f3n Persona-Ordenador. Se ha identificado un conjunto de patrones de interacci\u00f3n relevantes. Otorgando a estos patrones estructurales de tareas una sintaxis y una sem\u00e1ntica bien precisas, se definen reglas de transformaci\u00f3n entre el Modelo de Tareas y el Modelo de Presentaci\u00f3n, el cual especifica de manera abstracta la interfaz. Esta aproximaci\u00f3n se presenta instanciada para el entorno de la tecnolog\u00eda OlivaNova Model Execution, lo que permite la generaci\u00f3n autom\u00e1tica de la aplicaci\u00f3n software.", "num_citations": "3\n", "authors": ["598"]}
{"title": "An empirical comparative evaluation of gestUI to include gesture-based interaction in user interfaces\n", "abstract": " Currently there are tools that support the customisation of users' gestures. In general, the inclusion of new gestures implies writing new lines of code that strongly depend on the target platform where the system is run. In order to avoid this platform dependency, gestUI was proposed as a model-driven method that permits (i) the definition of custom touch-based gestures, and (ii) the inclusion of the gesture-based interaction in existing user interfaces on desktop computing platforms. The objective of this work is to compare gestUI (a MDD method to deal with gestures) versus a code-centric method to include gesture-based interaction in user interfaces. In order to perform the comparison, we analyse usability through effectiveness, efficiency and satisfaction. Satisfaction can be measured using the subjects' perceived ease of use, perceived usefulness and intention to use. The experiment was carried out by 21 subjects\u00a0\u2026", "num_citations": "2\n", "authors": ["598"]}
{"title": "Scalability factors in an ICT4D context: A literature review\n", "abstract": " This research investigates possible scalability factors that influence an ICT4D project. By performing a literature study on four strands of literature, which include: technical literature (1), development studies (2), technology adoption (3) and ICT4D literature (4), it was found that there are seventeen factors that need to be accounted for in the development process. Furthermore, a general outline of an ICT4D development process is presented and scalability factors are related to phases in this ICT4D process. Future research could focus on validating these factors by using them in a development cycle and determining the precise influence, rather than determining an overall positive or negative influence.", "num_citations": "2\n", "authors": ["598"]}
{"title": "Modelling languages quality evaluation by taxonomic analysis: a preliminary proposal\n", "abstract": " GIRALDO, F\u00e1ber D.; ESPANA, Sergio; GIRALDO, William J. and PASTOR, \u00d3scar. Modelling languages quality evaluation by taxonomic analysis: a preliminary proposal. Rev. ing. univ. Medell\u00edn [online]. 2016, vol. 15, n. 29, pp. 159-172. ISSN 1692-3324. http://dx. doi. org/10.22395/rium. v15n29a10.The Model-Driven Engineering (mde) paradigm promotes the usage of conceptual models in information systems (is) engineering and research. As engineering products, conceptual models must have quality, which applies on both conceptual models and modeling language employed to build them. This paper presents a modeling language quality evaluation framework. This framework uses the principles from the popular Zachman framework for information systems as a taxonomic tool applied over mo deling artifacts used in an information system development. The purpose of this taxonomic tool is to perform analytic procedures that are aligned with an is reference architecture and ontological reasoning. Throughout this work, we describe how the Zachman framework supports analytics over modeling languages for quality purposes by its native management of semantics.", "num_citations": "2\n", "authors": ["598"]}
{"title": "Empirical validation of a quality framework for evaluating modelling languages in MDE environments\n", "abstract": " In previous research, we proposed the multiple modelling quality evaluation framework (MMQEF), which is a method and tool for evaluating modelling languages in model-driven engineering (MDE) environments. Rather than being exclusive, MMQEF attempts to complement other methods of evaluation of quality such as SEQUAL. However, to date, MMQEF has not been validated beyond some concept proofs. This paper evaluates the applicability of the MMQEF method in comparison with other existing methods. We performed an evaluation in which the subjects had to detect quality issues in modelling languages. A group of expert professionals and two experimental objects (ie two combinations of different modelling languages based on real industrial practices) were used. To analyse the results, we applied quantitative approaches, ie statistical tests on the results of the performance measures and the perception\u00a0\u2026", "num_citations": "1\n", "authors": ["598"]}
{"title": "Workshop Ethics and Morality in Business Informatics (Workshop Ethik und Moral in der Wirtschaftsinformatik\u2013EMoWI'19)\n", "abstract": " The aim of the first edition of the EMoWI workshop was to establish a new forum for Business Informatics researchers and practitioners to reflect on the various ways in which the concern with business information systems and digital technologies gives rise to questions and issues with an ethical dimension. The several contributions of the workshop have made it plain that ethical questions indeed crop up in many fields of Business Informatics, ranging from specific research objects such as digital platforms to methodological presuppositions of the discipline at large. This chapter provides an overview of the background and the contributions of the EMoWI workshop 2019.", "num_citations": "1\n", "authors": ["598"]}
{"title": "Tailoring user interfaces to include gesture-based interaction with gestUI\n", "abstract": " The development of custom gesture-based user interfaces requires software engineers to be skillful in the use of the tools and languages needed to implement them. gestUI, a model-driven method, can help them achieve these skills by defining custom gestures and including gesture-based interaction in existing user interfaces. Up to now, gestUI has used the same gesture catalogue for all software users, with gestures that could not be subsequently redefined. In this paper, we extend gestUI by including a user profile in the metamodel that permits individual users to define custom gestures and to include gesture-based interaction in user interfaces. Using tailoring mechanisms, each user can redefine his custom gestures during the software runtime. Although both features are supported by models, the gestUI tool hides its technical complexity from the users. We validated these gestUI features in a\u00a0\u2026", "num_citations": "1\n", "authors": ["598"]}
{"title": "A model-driven framework to integrate Communication Analysis and OO-Method: Supporting the model transformation.\n", "abstract": " Models are now part of an increasing number of engineering processes. However, in most cases, they are confined to a simple documentation role instead of being actively integrated into the engineering process. The model-driven development approach considers models as first-class entities and also considers tools, repositories, etc. as models. In order to take full advantage of these ideas, model transformation emerges as a main activity. Model transformation aims at supporting the production of target models from a number of source models. Following the model-driven development paradigm, we propose a model-driven framework to integrate Communication Analysis (a communication-oriented business process modelling and requirements method) and OO-Method (an object-oriented model-driven development method). This integration framework is composed of two stages: diagramming support and transformation support. This paper describes the second stage (the first stage was described in previous works). Phases, tasks, technological support and examples are presented. Finally, we conclude with an analysis and discussions about lessons learned and an evaluation proposal to assess the usability of the transformation module.", "num_citations": "1\n", "authors": ["598"]}