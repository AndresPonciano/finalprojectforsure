{"title": "An approach to flexible multilevel modelling\n", "abstract": " Multilevel modelling approaches tackle issues related to lack of flexibility and mixed levels of abstraction by providing features like deep modelling and linguistic extension. However, the lack of a clear consensus on fundamental concepts of the paradigm has in turn led to lack of common focus in current multilevel modelling tools and their adoption. In this paper, we propose a formal framework, together with its corresponding tools, to tackle these challenges. The approach facilitates definition of flexible multilevel modelling hierarchies by allowing addition and deletion of intermediate abstraction levels in the hierarchies. Moreover, it facilitates separation of concerns by allowing integration of different multilevel modelling hierarchies as different aspects of the system to be modelled. In addition, our approach facilitates reusability of concepts and their behaviour by allowing definition of flexible transformation rules which are applicable to different hierarchies with a variable number of levels. As a proof of concept, a prototype tool and a domain-specific language for the definition of these rules is provided.", "num_citations": "27\n", "authors": ["1682"]}
{"title": "Multilevel modelling and domain-specific languages\n", "abstract": " Modern software engineering deals with demanding problems that yield large and complex software. The area of Model-Driven Software Engineering tackles this issue by using models during the development process, but it does not address some of the communication problems among different stakeholders. Domain-Specific Modelling Languages (DSML) aim at involving domain experts with non-technical profiles in that process. DSMLs define concepts with different levels of abstraction, but traditional modelling does not allow enough flexibility to organise them adequately. Multilevel Modelling (MLM) approaches provide an unbounded number of levels of abstraction, plus other features that perfectly fit DSMLs. Their development can also benefit from Model Transformations (MT), especially when these encode the behaviour of DSMLs. MTs can be exploited by MLM, becoming a precise and reusable definition of behaviour. This thesis presents a MLM and Multilevel MT approach which tackles open issues in the field and compares it with the state of the art through literature review and experiments, providing its formalisation and its implementation in the tool MultEcore, together with case studies.", "num_citations": "9\n", "authors": ["1682"]}
{"title": "Towards rearchitecting meta-models into multi-level models\n", "abstract": " Meta-models play a pivotal role in Model-Driven Engineering, as they are used to define the structure of instance models one level below. However, in some scenarios, organizing meta-models and their instances in multi-level models spanning more than two levels yields simpler solutions. This fact has triggered the proposal of different multi-level modelling tools and approaches, although each one of them supports small variations of the multi-level concepts.                 In order to benefit from multi-level technology, existing meta-models and their instances could be migrated manually, but this is error prone, costly, and requires expertise for choosing the most appropriate tool and approach. Hence, we propose an automated migration process. This way, starting from a meta-model annotated with multi-level \u201csmells\u201d, our approach creates a neutral multi-level representation, and recommends the most\u00a0\u2026", "num_citations": "9\n", "authors": ["1682"]}
{"title": "Multilevel Modeling with MultEcore A Contribution to the MULTI 2017 Challenge\n", "abstract": " In the context of MULTI 2017, and as a means of fostering discussion and test the limits of the paradigm, the Bicycle Challenge [1] was proposed to tackle the issue that multilevel modelling still lacks a strong conceptual basis, consensus and focus. This paper presents one solution to that challenge, ie creating a multilevel hierarchy that represents the domain of bicycles as products composed of different parts and with different features, starting from very abstract concepts (components with weight and basic parts) and ending with one particular model of bicycle with brand-specific parts, which in turn is instantiated by a specific bicycle. We analyse and \u201cfix\u201d the requirements, discuss them, and present our solution using the MultEcore tool.", "num_citations": "8\n", "authors": ["1682"]}
{"title": "Generating a REST Service Layer from a Legacy System\n", "abstract": " Web 2.0 phenomenon, REST APIs and growing mobile service consumption are leading the development of web applications to a new paradigm, named cross-device web application. Most organizations often possess legacy systems which should face an ongoing evolution process to enhance its accessibility and interoperability. In such scenario, a REST API plays a key role, defining the interaction layer between the legacy system and all its heterogeneous frontends. This work presents a model-driven approach to derive a REST API from a legacy web application within the frame defined by a modernization process. In this work we detail the API generation process and provide a sample implementation instrumenting one of the studied web development frameworks to evaluate the suitability of the approach.", "num_citations": "8\n", "authors": ["1682"]}
{"title": "Model-driven generation of a REST API from a legacy web application\n", "abstract": " Web 2.0 phenomenon, REST APIs and growing mobile service consumption, among other factors, are leading the development of web applications to a new paradigm, named cross-device web application. Those web sites let organizations of all sizes provide a pervasive and contextual access to their information and services, to customers, employees and partners via potentially any kind of device. Most organizations often possess legacy systems which should face an ongoing evolution process to enhance its accessibility and interoperability. Yesterday they had to evolve to provide the user with a Web layer, and now they should evolve again to adapt to the new ways of data and services consumption on the Web. In such scenario, a REST API plays a key role, defining the interaction layer between the legacy system and all its heterogeneous front ends. This work presents a model-driven approach to\u00a0\u2026", "num_citations": "7\n", "authors": ["1682"]}
{"title": "Generating a Conceptual Representation of a Legacy Web Application\n", "abstract": " Web application (WA) development has been fueled by the definition and evolution of web application frameworks since late 90\u2019s. In parallel, Model Driven Web Engineering approaches have been defined and successfully applied to reduce the effort of web application development and reuse, fostering the independence of the implementation technology. Although they pursue similar objectives, both approaches have lived and evolved separately. The work presented herein tries to reduce the gap between them by defining a model-driven reverse engineering process to generate a conceptual representation from a framework-based legacy web application. This work is part of a bigger project, named MIGRARIA, whose main goal is to define a model-driven modernization process to obtain Rich Internet Aplications (RIAs) from legacy web systems.", "num_citations": "7\n", "authors": ["1682"]}
{"title": "IFML-based Model-Driven Front-End Modernization\n", "abstract": " Since late 90\u2019s the use of web application frameworks has been the default choice to develop software applications inside the web domain. In parallel, Model Driven Web Engineering approaches have been defined and successfully applied to reduce the effort of web application development and reuse, fostering the independence of the implementation technology. A direct result of the success of these approaches is the elaboration of the Interaction Flow Modeling Language (IFML) as an Object Management Group (OMG) standard. However, the real fact is that there is a huge amount of legacy web systems that were developed before MDWE approaches were mainstream. The work presented herein tries to leverage IFML to modernize the front-ends of framework-based legacy web applications. In concrete, a systematic model driven reverse engineering process to generate an IFML representation from such applications is presented.", "num_citations": "5\n", "authors": ["1682"]}
{"title": "Legacy web application modernization by generating a REST service layer\n", "abstract": " Web 2.0 phenomenon, REST services and growing mobile service consumption, among other factors, are leading the development of web applications to a new paradigm, named cross-device web application. Those web sites let organizations of all sizes provide a pervasive and contextual access to their information and services, to customers, employees and partners via potentially any kind of device. Most organizations often possess legacy systems that should face an ongoing evolution process to enhance its accessibility and interoperability. Yesterday they had to evolve to provide the user with a Web layer, and now they should evolve again to adapt to the new ways of data and services consumption on the Web. In such scenario, REST services play a key role, defining the interaction layer between the legacy system and all its heterogeneous front ends. This work presents a model-driven approach to derive a\u00a0\u2026", "num_citations": "4\n", "authors": ["1682"]}
{"title": "Multilevel typed graph transformations\n", "abstract": " Multilevel modeling extends traditional modeling techniques with a potentially unlimited number of abstraction levels. Multilevel models can be formally represented by multilevel typed graphs whose manipulation and transformation are carried out by multilevel typed graph transformation rules. These rules are cospans of three graphs and two inclusion graph homomorphisms where the three graphs are multilevel typed over a common typing chain. In this paper, we show that typed graph transformations can be appropriately generalized to multilevel typed graph transformations improving preciseness, flexibility and reusability of transformation rules. We identify type compatibility conditions, for rules and their matches, formulated as equations and inequations, respectively, between composed partial typing morphisms. These conditions are crucial presuppositions for the application of a rule for a match\u2014based on a\u00a0\u2026", "num_citations": "3\n", "authors": ["1682"]}
{"title": "Multilevel modelling with MultEcore: A contribution to the MULTI Process Challenge\n", "abstract": " The MULTI Challenge is intended to encourage the Multilevel Modelling research community to submit solutions to the same, well described problem. This year the subject domain has been changed with respect to previous editions (MULTI Bicycle challenge in 2017 and 2018). This paper presents one solution in the context of process management, where universal properties of process types along with task, artifact and actor types together with possible particular occurrences for scoped domains are modelled. We discuss our solution highlighting both the strengths and limitations of our approach, using the MultEcore tool.", "num_citations": "3\n", "authors": ["1682"]}
{"title": "A tool for the convergence of multilevel modelling approaches\n", "abstract": " Multilevel Modelling is a powerful paradigm that can improve the way we create and use models. The community and approaches related to Multilevel Modelling have been constantly growing, and the need to agree on some basic concepts, semantics and vocabulary has become paramount. In this paper, we present a tool that can provide empirical data and practical instrumentation to aid in the discussion of the foundational concepts of the paradigm. We outline the structure, modules and applications of the tool in detail, and explain how they can be employed for different tasks that can benefit the Multilevel Modelling community. To illustrate these benefits, we also describe several experiments carried out with the tool and their positive results.", "num_citations": "3\n", "authors": ["1682"]}
{"title": "A property specification language for runtime verification of executable models\n", "abstract": " The definition of workflows is a complex task, comprising aspects such as time constraints, failure detection and recovery. Executable modelling is a promising concept for the simplification of workflow modelling, verification and execution. Hence, the verification of executable models, especially using runtime verification and monitoring, is required. We present a metamodelling approach to the combined modelling of workflows and the temporal properties used to define requirements and constraints on them. Here, a model at a certain level describes a modelling language which can be used to specify models in the level below. First, we give an overview of a generic workflow modelling framework for executable models. Then, we highlight the design and implementation of the property specification language. Both the workflows and their temporal properties are specified as graph-based structures. For the temporal properties, we draw on the well-known Linear Time Logic (LTL), which has already been used successfully in checking whether an (execution) path satisfies a given property [3]. A key point of the proposed language is its direct applicability on the running instances of the workflows, instead of the execution logs as it is usually done. Because of this, the atomic propositions of our language are graphs which are matched against the actual running instances while monitoring, and hence translating match/no match to true/false respectively. In our approach we exploit facilities from deep metamodelling [4] to establish links between the running instances of the workflows and the atomics propositions, using the typing relationship. Deep\u00a0\u2026", "num_citations": "3\n", "authors": ["1682"]}
{"title": "A statistical analysis approach to assist model transformation evolution\n", "abstract": " Model Driven Engineering (MDE) is essentially based in metamodel definition, model edition and the specification of model transformations (MT) among these. In many cases the development, evolution and adaptation of these transformations is still carried out without the support of proper methods and tools to reduce the effort and related costs to these activities. In this work, a novel model testing approach specifically designed to assist the engineer in model transformation evolution is presented. A statistical analysis of the actual behavior of the transformations is performed by means of the computation of well-known information extraction metrics. In order to assist the MT adaptation, a detailed interpretation of the possible results of those metrics is also presented. And finally, the results of applying this approach on a Model-Driven Reverse Engineering (MDRE) scenario defined in the context of the MIGRARIA\u00a0\u2026", "num_citations": "2\n", "authors": ["1682"]}
{"title": "On Reducing Model Transformation Testing Overhead\n", "abstract": " Model-Driven Engineering is essentially based in metamodel definition, model edition and the specification of model transformations (MT). In many cases the development and maintenance of these transformations are still carried out without the support of proper methods and tools to reduce the effort and cost related to them. As a result, several model transformation testing approaches have been defined over the past decade. However, they usually introduce some kind of overhead on transformation development or maintenance which has not been properly considered heretofore. In this work, we will present MoTe, a novel contract-based model transformation testing approach specifically designed to reduce testing overhead. First, we present main overhead sources in core stages of contract-based model transformation testing. Then, we give a detailed introduction of the main features and design decisions behind MoTe in order to reduce overhead in all those main stages. Furthermore, we will discuss some significant results from a comparative case study.", "num_citations": "1\n", "authors": ["1682"]}