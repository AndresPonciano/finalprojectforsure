{"title": "On the Evolutionary Relationship between Change Coupling and Fix-Inducing Changes.\n", "abstract": " Change Coupling (CC) is the implicit relation formed between two or more changing software artifacts (eg source code). These artifacts are found to have design issues and code smells. Existing research has revealed the relationship between the change coupled relation of a class with the number of bugs in bug repositories. However, this ignored their true relation at the creation time of bugs or erroneous changes known as Fix-Inducing Changes (FIC). This paper tries to find the actual relationship between FIC and change coupled relations with respect to considering recent and all commits. This is done by traversing the entire history of a repository with a commit window of 100 commits and collecting data about FICs and metrics related to change coupling and object oriented system. It is found from the analysis that recent CC relations at the time of error are more correlated with new errors. Besides, it is found that explanatory power for predicting future erroneous change is more in recent CC relation than the one formed by considering all commits starting from the 1st commit.", "num_citations": "5\n", "authors": ["828"]}
{"title": "An Empirical Study on Clone Evolution by Analyzing Clone Lifetime\n", "abstract": " The existence of code clones has several negative impacts on software maintenance which is why vast amount of research exists in the literature to characterize clone evolution. Most of those focused on clone genealogy, and clone changeness (consistent and inconsistent changes). However, analyzing clone evolution with respect to clone location and clone lifetime requires more attention to better characterize clone evolution. In this research, an empirical study has been performed on clone evolution by considering clone location (i.e., Inter-File and Intra-File) and clone lifetime. The study has been performed on four open source software covering 12 to 66 number of versions. In the study, it has been found that, (i) Intra-File clones occurred in a repository more than Inter-File clones, which infers that developers tend to clone code in the same file than different files and (ii) Intra-File clones are more volatile than Inter\u00a0\u2026", "num_citations": "1\n", "authors": ["828"]}