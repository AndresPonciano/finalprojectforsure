{"title": "A fast linear-arithmetic solver for DPLL (T)\n", "abstract": " We present a new Simplex-based linear arithmetic solver that can be integrated efficiently in the DPLL(T) framework. The new solver improves over existing approaches by enabling fast backtracking, supporting a priori simplification to reduce the problem size, and providing an efficient form of theory propagation. We also present a new and simple approach for solving strict inequalities. Experimental results show substantial performance improvements over existing tools that use other Simplex-based solvers in DPLL(T) decision procedures. The new solver is even competitive with state-of-the-art tools specialized for the difference logic fragment.", "num_citations": "903\n", "authors": ["1631"]}
{"title": "The yices smt solver\n", "abstract": " SMT stands for Satisfiability Modulo Theories. An SMT solver decides the satisfiability of propositionally complex formulas in theories such as arithmetic and uninterpreted functions with equality. SMT solving has numerous applications in automated theorem proving, in hardware and software verification, and in scheduling and planning problems.This paper describes Yices, an efficient SMT solver developed at SRI International. Yices supports a rich combination of first-order theories that occur frequently in software and hardware modeling: arithmetic, uninterpreted functions, bit vectors, arrays, recursive datatypes, and more. Beyond pure SMT solving, Yices can solve weighted MAX-SMT problems, compute unsatisfiable cores, and construct models. Yices is the main decision procedure used by the SAL model checking environment, and it is being integrated to the PVS theorem prover. As a MAX-SMT solver, Yices is the main component of the probabilistic consistency engine used in SRI\u2019s CALO system.", "num_citations": "832\n", "authors": ["1631"]}
{"title": "Yices 2.2\n", "abstract": " Yices is an SMT solver developed by SRI International. The first version of Yices was released in 2006 and has been continuously updated since then. In 2007, we started a complete re-implementation of the solver to improve performance and increase modularity and flexibility. We describe the latest release of Yices, namely, Yices 2.2. We present the tool\u2019s architecture and discuss the algorithms it implements, and we describe recent developments such as support for the SMT-LIB\u00a02.0 notation and various performance improvements.", "num_citations": "500\n", "authors": ["1631"]}
{"title": "Using model-based intrusion detection for SCADA networks\n", "abstract": " In a model-based intrusion detection approach for protecting SCADA networks, we construct models that characterize the expected/acceptable behavior of the system, and detect attacks that cause violations of these models. Process control networks tend to have static topologies, regular traffic patterns, and a limited number of applications and protocols running on them. Thus, we believe that model-based monitoring, which has the potential for detecting unknown attacks, is more feasible for control networks than for general enterprise networks. To this end, we describe three model-based techniques that we have developed and a prototype implementation of them for monitoring Modbus TCP networks.", "num_citations": "405\n", "authors": ["1631"]}
{"title": "Lightweight key management in wireless sensor networks by leveraging initial trust\n", "abstract": " We present a novel approach for key management in wireless sensor networks. Using initial trust built from a small set of shared keys, low-cost protocols enable neighboring sensors to authenticate and establish secure local links. As the risk of sensor compromise increases with time, the keys are used only for a limited period right after deployment. Once secure local links are established, other security services such as group-key refresh can be provided. The protocols we present require little memory and processing power, and require a small number of shared keys independent of the network size. Moreover, these protocols do not depend on a trusted server or base station. To validate the applicability of our approach to ad hoc wireless sensor networks, we have implemented our protocols on the TinyOS-based Mica platform and applied them to secure a perimeter monitoring application.", "num_citations": "156\n", "authors": ["1631"]}
{"title": "Complete proof systems for first order interval temporal logic\n", "abstract": " Different interval modal logics have been proposed for reasoning about the temporal behaviour of digital systems. Some of them are purely propositional and only enable the specification of qualitative time requirements. Others, such as ITL and the duration calculus, are first order logics which support the expression of quantitative, real-time requirements. These two logics have in common the presence of a binary modal operator 'chop' interpreted as the action of splitting an interval into two parts. Proof systems for ITL or the duration calculus have been proposed but little is known about their power. This paper present completeness results for a variant of ITL where 'chop' is the only modal operator. We consider several classes of models for ITL which make different assumptions about time and we construct a complete and sound proof system for each class.", "num_citations": "147\n", "authors": ["1631"]}
{"title": "Modeling and verification of a fault-tolerant real-time startup protocol using calendar automata\n", "abstract": " We discuss the modeling and verification of real-time systems using the SAL model checker. A new modeling framework based on event calendars enables dense timed systems to be described without relying on continuously varying clocks. We present verification techniques that rely on induction and abstraction, and show how these techniques are efficiently supported by the SAL symbolic model-checking tools. The modeling and verification method is applied to the fault-tolerant real-time startup protocol used in the Timed Triggered Architecture.", "num_citations": "104\n", "authors": ["1631"]}
{"title": "A tutorial on satisfiability modulo theories\n", "abstract": " Solvers for satisfiability modulo theories (SMT) check the satisfiability of first-order formulas containing operations from various theories such as the Booleans, bit-vectors, arithmetic, arrays, and recursive datatypes. SMT solvers are extensions of Boolean satisfiability solvers (SAT solvers) that check the satisfiability of formulas built from Boolean variables and operations. SMT solvers have a wide range of applications in hardware and software verification, extended static checking, constraint solving, planning, scheduling, test case generation, and computer security. We briefly survey the theory of SAT and SMT solving, and present some of the key algorithms in the form of pseudocode. This tutorial presentation is primarily directed at those who wish to build satisfiability solvers or to use existing solvers more effectively.", "num_citations": "102\n", "authors": ["1631"]}
{"title": "Using a PVS embedding of CSP to verify authentication protocols\n", "abstract": " This paper presents an application of PVS to the verification of security protocols. The objective is to provide mechanical support for a verification method described in [14]. The PVS formalization consists of a semantic embedding of CSP and of a collection of theorems and proof rules for reasoning about authentication properties. We present an application to the Needham-Schroeder public key protocol.", "num_citations": "90\n", "authors": ["1631"]}
{"title": "Methods and apparatus for scalable distributed management of wireless virtual private networks\n", "abstract": " An application of intrusion tolerant concepts to a software infrastructure for supporting secure group applications. This application is suited for use with network layer protocols such as TBRPF and is particularly adapted for wireless networks, and more specifically mobile ad hoc networks.", "num_citations": "88\n", "authors": ["1631"]}
{"title": "Integrating simplex with DPLL (T)\n", "abstract": " We present a new Simplex-based linear arithmetic solver that can be integrated efficiently in the DPLL (T) framework. The new solver improves over existing approaches by enabling fast backtracking, supporting a priori simplification to reduce the problem size, and providing an efficient form of theory propagation. We also present a new and simple approach for solving strict inequalities. Experimental results show substantial performance improvements over existing tools that use other Simplex-based solvers in DPLL (T) decision procedures. The new solver is even competitive with state-of-the-art tools specialized for the difference logic fragment.", "num_citations": "87\n", "authors": ["1631"]}
{"title": "Elements of mathematical analysis in PVS\n", "abstract": " This paper presents the formalization of some elements of mathematical analysis using the PVS verification system. Our main motivation was to extend the existing PVS libraries and provide means of modelling and reasoning about hybrid systems. The paper focuses on several important aspects of PVS including recent extensions of the type system and discusses their merits and effectiveness. We conclude by a brief comparison with similar developments using other theorem provers.", "num_citations": "80\n", "authors": ["1631"]}
{"title": "An architecture for an adaptive intrusion-tolerant server\n", "abstract": " We describe a general architecture for intrusion-tolerant enterprise systems and the implementation of an intrusion-tolerant Web server as a specific instance. The architecture comprises functionally redundant COTS servers running on diverse operating systems and platforms, hardened intrusion-tolerance proxies that mediate client requests and verify the behavior of servers and other proxies, and monitoring and alert management components based on the EMERALD intrusion-detection framework. Integrity and availability are maintained by dynamically adapting the system configuration in response to intrusions or other faults. The dynamic configuration specifies the servers assigned to each client request, the agreement protocol used to validate server replies, and the resources spent on monitoring and detection. Alerts trigger increasingly strict regimes to ensure continued service, with graceful\u00a0\u2026", "num_citations": "74\n", "authors": ["1631"]}
{"title": "Formal requirements analysis of an avionics control system\n", "abstract": " The authors report on a formal requirements analysis experiment involving an avionics control system. They describe a method for specifying and verifying real-time systems with PVS. The experiment involves the formalization of the functional and safety requirements of the avionics system as well as its multilevel verification. First level verification demonstrates the consistency of the specifications whilst the second level shows that certain system safety properties are satisfied by the specification. They critically analyze methodological issues of large scale verification and propose some practical ways of structuring verification activities for optimizing the benefits.", "num_citations": "72\n", "authors": ["1631"]}
{"title": "Timed systems in SAL\n", "abstract": " The Symbolic Analysis Laboratory (SAL) is a set of tools for the specification, exploration, and verification of state-transition systems. SAL includes symbolic model-checking tools based on solvers and decision procedures for linear arithmetic, uninterpreted functions, and propositional logic, among others. This enables the analysis of a variety of infinite-state systems. In particular, SAL can be used to model and verify timed systems, which combine real-valued and discrete state variables. This document reports on several examples and experiments in modeling and verification of timed system in SAL. Different specification approaches are presented and compared, from a direct encoding of traditional timed automata to a novel modeling method based on event calendars. We present verification techniques that rely on induction and abstraction, and show how these techniques are efficiently supported by the SAL symbolic model-checking tools.", "num_citations": "71\n", "authors": ["1631"]}
{"title": "Intrusion tolerant software architectures\n", "abstract": " The complexity of the software systems built today virtually guarantees the existence of security vulnerabilities. When the existence of specific vulnerabilities becomes known - typically as a result of detecting a successful attack - intrusion prevention techniques such as firewalls and anti-virus software seek to prevent future attackers from exploiting these vulnerabilities. However, vulnerabilities cannot be totally eliminated, their existence is not always known and preventing mechanisms cannot always be built. Intrusion tolerance is a new concept, a new design paradigm, and potentially a new capability for dealing with residual security vulnerabilities. In this article, we describe our initial exploration of the hypothesis that intrusion tolerance is best designed and enforced at the software architecture level.", "num_citations": "66\n", "authors": ["1631"]}
{"title": "Intrusion-tolerant enclaves\n", "abstract": " Despite our best efforts, any sufficiently complex computer system has vulnerabilities. It is safe to assume that such vulnerabilities can be exploited by attackers who will be able to penetrate the system. Intrusion tolerance attempts to maintain acceptable service despite such intrusions. This paper presents an application of intrusion-tolerance concepts to Enclaves, a software infrastructure for supporting secure group applications. Intrusion tolerance is achieved via a combination of Byzantine fault-tolerant protocols and secret sharing techniques.", "num_citations": "55\n", "authors": ["1631"]}
{"title": "Property-directed k-induction\n", "abstract": " IC3 and k-induction are commonly used in automated analysis of infinite-state systems. We present a reformulation of IC3 that separates reachability checking from induction reasoning. This makes the algorithm more modular, and allows us to integrate IC3 and k-induction. We call this new method property-directed k-induction (PD-KIND). We show that k-induction is more powerful than regular induction, and that, modulo assumptions on the interpolation method, PD-KIND is more powerful than k-induction. Moreover, with k-induction as the invariant generation back-end of IC3, the new method can produce more concise invariants. We have implemented the method in the SALLY model checker. We present empirical results to support its effectiveness.", "num_citations": "51\n", "authors": ["1631"]}
{"title": "Automated Formal Verification of the TTEthernet Synchronization Quality\n", "abstract": " Clock synchronization is the foundation of distributed real-time architectures such as the Timed-Triggered Architecture. Maintaining the local clocks synchronized is particularly important for fault tolerance, as it allows one to use simple and effective fault-tolerance algorithms that have been developed in the synchronous system model.               Clock synchronization algorithms have been extensively studied since the 1980s, and many fundamental results have been established. Traditionally, the correctness of a new clock synchronization algorithm is shown by reduction to these results. Until now, formal proofs of correctness all relied on interactive theorem provers such as PVS or Isabelle/HOL. In this paper, we present an automated proof of the TTEthernet clock-synchronization algorithm that is based on the SAL model checker.", "num_citations": "43\n", "authors": ["1631"]}
{"title": "An adaptive intrusion-tolerant server architecture\n", "abstract": " We describe a general architecture for intrusion-tolerant enterprise systems and the implementation of an intrusion-tolerant Web server as a specific instance. The architecture comprises functionally redundant COTS servers running on diverse operating systems and platforms, hardened intrusion-tolerance proxies that mediate client requests and verify the behavior of servers and other proxies, and monitoring and alert management components based on the EMERALD intrusion-detection framework. Integrity and availability are maintained by dynamically adapting the system configuration in response to intrusions or other faults. The dynamic configuration specifies the servers assigned to each client request, the agreement protocol used to validate server replies, and the resources spent on monitoring and detection. Alerts trigger increasingly strict regimes to ensure continued service, with graceful degradation of performance, even if some servers or proxies are compromised or faulty. The system returns to less stringent regimes as threats diminish. Servers and proxies can be isolated, repaired, and reinserted without interrupting service.", "num_citations": "41\n", "authors": ["1631"]}
{"title": "From security to safety and back\n", "abstract": " Dependability encompasses different classes of system properties, related to security, reliability, or safety. This paper examines the relevance of the security concept of noninterference to safety-related properties, and conversely, the applicability of fault-tolerance mechanisms usually applied to provide safety and reliability in the security domain. We suggest promising lines of research in the intersection of safety and security, in the application of security concepts and models to different classes of safety or fault-tolerance properties, and in the theory and practice of fault-tolerant systems applied to intrusion tolerance.", "num_citations": "40\n", "authors": ["1631"]}
{"title": "SMT-Based Formal Verification of a TTEthernet Synchronization Function\n", "abstract": " TTEthernet is a communication infrastructure for mixed-criticality systems that integrates dataflow from applications with different criticality levels on a single network. For applications of highest criticality, TTEthernet provides a synchronization strategy that tolerates multiple failures. The resulting fault-tolerant timebase can then be used for time-triggered communication to ensure temporal partitioning on the shared network.             In this paper, we present the formal verification of the compression function which is a core element of the clock synchronization service of TTEthernet. The compression function is located in the TTEthernet switches: it collects clock readings from the end systems, performs a fault-tolerant median calculation, and feedbacks the result to the end systems. While traditionally the formal proof of these types of algorithms is done by theorem proving, we successfully use the model\u00a0\u2026", "num_citations": "38\n", "authors": ["1631"]}
{"title": "Solving exists/forall problems with yices\n", "abstract": " Yices now includes a solver for Exists/Forall problem. We describe the problem, a general solving algorithm, and a key model-based generalization procedure. We explain the Yices implementation of these algorithms and survey a few applications.", "num_citations": "37\n", "authors": ["1631"]}
{"title": "Formal modeling and analysis of the Modbus protocol\n", "abstract": " Modbus is a communication protocol that is widely used in SCADA systems and distributed control applications. This paper presents formal specifications of Modbus developed using PVS, a generic theorem prover; and SAL, a toolset for the automatic analysis of state-transition systems. Both formalizations are based on the Modbus Application Protocol, which specifies the format of Modbus request and response messages. This formal modeling effort is the first step in the development of automated methods for systematic and extensive testing of Modbus devices.               Keywords: Modbus, formal methods, modeling, test-case generation", "num_citations": "36\n", "authors": ["1631"]}
{"title": "The practice of formal methods in safety-critical systems\n", "abstract": " By describing several industrial-scale applications of formal methods, we demonstrate that formal methods for software development and safety analysis are being increasingly adopted in the safety-critical systems sector. The benefits and limitations of formal methods are described, and the problems in developing software for safety-critical systems are analyzed.", "num_citations": "36\n", "authors": ["1631"]}
{"title": "System Description: Yices 1.0\n", "abstract": " Yices is a decision procedure for formulas containing uninterpreted function symbols, linear real and integer arithmetic, fixed-size bitvectors, extensional arrays, lambda expressions, tuples, records, quantifiers, scalar types, recursive datatypes, and dependent types. Yices is the main decision procedure used by SAL. It is being integrated to PVS, and it is the main component of the probabilistic consistency engine of SRI\u2019s CALO system 1. Yices supports a rich specification language similar to those of PVS and SAL. It can also read problems in the SMT-LIB and DIMACS CNF formats. Yices can be used in an incremental fashion via a push/pop mechanism. It can produce models and compute unsatisfiable cores, and it supports weighted MaxSAT. Yices 1.0 is a complete reimplementation of SRI\u2019s previous SMT solvers. It has a new architecture, and it uses new algorithms and a better SAT solver. Yices 1.0 is generally faster than the solvers that participated in SMT-COMP\u201905 [1]. Yices can be downloaded at http://yices. csl. sri. com.", "num_citations": "35\n", "authors": ["1631"]}
{"title": "Formal analysis of the priority ceiling protocol\n", "abstract": " We present a case study in formal specification and tool-assisted verification of real-time schedulers, based on the priority ceiling protocol. Starting from operational specifications of the protocol, we obtain rigorous proofs of both synchronization and timing properties, and we derive a schedulability result for sporadic tasks.", "num_citations": "35\n", "authors": ["1631"]}
{"title": "Simulink design verifier-applying automated formal methods to simulink and stateflow\n", "abstract": " We present Simulink Design Verifier, a tool distributed by The MathWorks to help Simulink users in their verification and validation activities. Simulink Design Verifier automatically generates test input sequences for a model or proves properties about this model. The tool is based on automatic theorem proving and model-checking techniques and aims at a high level of integration with Simulink to make formal verification techniques easier to incorporate into engineers\u2019 workflows. In this presentation, we describe the tool, highlight some of the technical choices that were made during its conception, and discuss user experiences with it.", "num_citations": "28\n", "authors": ["1631"]}
{"title": "Intrusion-tolerant group management in enclaves\n", "abstract": " Groupware applications require secure communication and group-management services. Participants in such applications may have divergent interests and may not fully trust each other. The services provided must then be designed to tolerate possibly misbehaving participants. Enclaves is a software framework for building such group applications. We discuss how the protocols used by Enclaves can be modified to guarantee proper service in the presence of nontrustworthy group members. We show how the improved protocol was formally specified and proven correct.", "num_citations": "26\n", "authors": ["1631"]}
{"title": "Embedding CSP in PVS: an application to authentication protocols\n", "abstract": " In {28], Schneider appiies CSP to the modelling and analysis of authentication p1'o~ tocols and develops a genera} proof strategy for verifying authentication properties. This paper shows how the PVS theorem prover can provide effective mechanical support to the approach.", "num_citations": "26\n", "authors": ["1631"]}
{"title": "A model of noninterference for integrating mixed-criticality software components\n", "abstract": " The paper examines the problem of safely integrating independent software components of different criticality levels in a single system. We examine the risks of interference between independent components which share common hardware resources. We propose a definition of safe integration in which only a limited form of interference is tolerated, namely a bounded performance degradation. We show how the definition can be applied to systems modeled as input-output automata, and we compare our model to other notions of noninterference and related concepts.", "num_citations": "24\n", "authors": ["1631"]}
{"title": "Model-based analysis of timed-triggered ethernet\n", "abstract": " Timed-Triggered Ethernet (TTEthernet) is a communication infrastructure that enables the use of Ethernet networks in real-time, distributed applications. The core of TTEthernet is a set of fault-tolerant protocols for clock synchronization, startup, and clique detection and resolution. We present recent work on model-based analysis of the TTEthernet startup and synchronization protocols. We first use automated test-generation tools to drive high-coverage testing of prototype TTEthernet hardware, based on a state-machine model of the TTEthernet protocols. With almost no human guidance, this technique enables us to achieve MC/DC coverage of the startup protocol under valid fault scenarios. We then focus on the TTEthernet clock-synchronization protocol. We develop correctness proofs of key properties of this protocol using the PVS interactive theorem prover [1]. As a result of this formalization, we have identified a\u00a0\u2026", "num_citations": "19\n", "authors": ["1631"]}
{"title": "Control of polynomial dynamic systems: an example\n", "abstract": " This paper presents the application of algebraic techniques to the control of a discrete event system. The system is described using Signal, a data-ow language. An equational model is then elaborated. Control objectives are expressed as invariance and reachability properties of the model. Control equations are synthesized using algebraic tools: ideals, varieties and principal generators.", "num_citations": "19\n", "authors": ["1631"]}
{"title": "The TTEthernet synchronisation protocols and their formal verification\n", "abstract": " TTEthernet is a communication platform for critical, distributed computer-based systems. NASA has selected one of TTEthernet\u2019s high-end configurations for the Orion programme. In other configurations, TTEthernet implements the communication backbone of new energy machineries such as wind turbines. One of TTEthernet\u2019s unique features is the integration of applications with differing latency, jitter, and fault-tolerance requirements in a single physical Ethernet network, thereby significantly reducing the amount of wiring in a distributed system. The most critical applications can communicate using time-triggered messages for which a fault-tolerant high-precision network-wide timebase is required. Formal methods are key in the design of protocols that establish and maintain such a timebase and, thus, have been heavily used already during the design phase of TTEthernet. This paper summarises the formal\u00a0\u2026", "num_citations": "16\n", "authors": ["1631"]}
{"title": "The priority ceiling protocol: formalization and analysis using PVS\n", "abstract": " Common real-time operating systems rely on priority-based, preemptive scheduling. Resource sharing in such systems potentially leads to priority inversion: processes of high priority can be prevented from entering a critical section and be delayed by processes of lower priority. Since uncontrolled priority inversion can cause high-priority processes to miss their deadlines, a real-time operating system must use resource-sharing mechanisms that limit the effects of priority inversion. The priority ceiling protocol is one such mechanism. It ensures mutual exclusion and absence of deadlocks, and minimizes the length of priority inversion periods. This paper presents a formal specification and analysis of the protocol using PVS and the rigorous proof of associated schedulability results.", "num_citations": "15\n", "authors": ["1631"]}
{"title": "Layered diagnosis and clock-rate correction for the ttethernet clock synchronization protocol\n", "abstract": " Fault-tolerant clock synchronization is the foundation of synchronous architectures such as the Time-Triggered Architecture (TTA) for dependable cyber-physical systems. Clocks are typically local counters that are increased with a given rate according to real time, and clock synchronization algorithms ensure that any two clocks in the system read about the same value at about the same point in real time. This is achieved by a clock synchronization algorithm that changes the current values of the clocks, the clocks' rate, or both. This paper presents a diagnosis algorithm and a clock-rate correction algorithm as layered services on top of the TTEthernet clock synchronization algorithm, which itself is a clock-state correction algorithm. We analyze the algorithms' properties and explore and understand their behavior using a bounded model checker for infinite data types. We use our formal framework for both simulation\u00a0\u2026", "num_citations": "14\n", "authors": ["1631"]}
{"title": "Yices 1.0: An efficient SMT solver\n", "abstract": " Yices is an SMT Solver developed at SRI International. It is used in SAL, PVS, and CALO. It is a complete reimplementation of SRI\u2019s previous SMT solvers. It has a new architecture, and uses new algorithms. Counterexamples and Unsatisfiable Cores. Incremental: push, pop, and retract. Weighted MaxSAT/MaxSMT. Supports all theories in SMT-COMP.", "num_citations": "14\n", "authors": ["1631"]}
{"title": "Formal analysis for real-time scheduling\n", "abstract": " A sound theory of real-time scheduling is necessary to support the engineering of real-time software applications. Developing scheduling results using formal methods helps provide the high level of assurance required in safety-critical domains. We propose a formalization methodology relying on state-machine models and on a library of commonly applicable properties. A case study has shown that rigorous and a detailed verification of nontrivial scheduling results can be performed within reasonable time limits, using modern theorem-proving tools such as PVS. It is still necessary to develop and extend such verification efforts to the increasingly complex scheduling algorithms that may one day be used in safety-critical applications. Other aspects relevant to the avionics domain remain insufficiently explored by the formal methods community. For example, little has been done in the analysis of distributed real-time\u00a0\u2026", "num_citations": "14\n", "authors": ["1631"]}
{"title": "Self-regenerative software components\n", "abstract": " Self-regenerative capabilities are a new trend in survivable system design. Self-regeneration ensures the property that a system's vulnerabilities cannot be exploited to the extent that the mission objective is compromised, but instead that the vulnerabilities are eventually removed, and system functionality is restored. To establish the usefulness of self-regenerative capabilities in the design of survivable systems, it is important to ensure that a system satisfying the self-regenerative requirement is survivable, and software engineering practices and tool support are available for building self-regenerative systems. This paper emphasizes the need for formal definition of the concept of self-regenerative systems in general and self-regenerative software components in particular. We propose a simple formal definition of a self-regenerative software component and we propose to adapt well-established formal software\u00a0\u2026", "num_citations": "12\n", "authors": ["1631"]}
{"title": "A formalization of software architecture\n", "abstract": " Software architecture addresses the high level specification, design and analysis of software systems. Formal models can provide essential underpinning for architectural description languages (ADLs), and formal techniques can play an important role in analysis.               While formal models and formal analysis may always enhance conventional notations and methods, they are of greatest benefit when they employ tractable models and efficient, mechanisable techniques. The novelty in our work has been in the effort to find and mechanise a general se- mantic framework for software architectures that can provide tractable models and support architectural formal analysis.               The resultant semantic framework is a layered one: the core is a simple model of the elements and topology, which provides the basis for general architectural theorems and proof techniques; the structural core is augmented by\u00a0\u2026", "num_citations": "11\n", "authors": ["1631"]}
{"title": "Using model checking to assess the dependability of agent-based systems\n", "abstract": " Model checking and the problem of analyzing the dependability of complex agent-based systems are well matched. Mathematical models of simple agents are relatively straightforward to specify. We can construct a model of the system as a whole from the models of the individual agents, and we can easily express dependability properties in the logical language used in model checking. However, there's one crucial mismatch: the state spaces of complex systems are many orders of magnitude larger than automated model-checking tools can handle. So, the mathematical models of computing systems that we use in model checking must be much simpler than the systems we are modeling. Yet, the models must contain all the detail that's essential to the dependability analysis we are performing, because omitting relevant detail can invalidate the analysis results. To make model checking of agent-based systems\u00a0\u2026", "num_citations": "9\n", "authors": ["1631"]}
{"title": "Verification of fault-tolerant protocols with sally\n", "abstract": " Sally is a model checker for infinite-state systems that implements several verification algorithms, including a variant of IC3/PDR called Property-Directed K-induction. We present an application of Sally to automated verification of fault-tolerant distributed algorithms.", "num_citations": "8\n", "authors": ["1631"]}
{"title": "Incremental negotiation and coalition formation for resource-bounded agents\n", "abstract": " This report describes SRIs contributions toward the solution of the problem of real-time distributed resource allocation. For the most part, the distributed multi-sensor challenge problem utilized by the Defense Advanced Research Projects Agencys Autonomous Negotiating Teams ANTs program was used to motivate the research. However, the contributions are not restricted to the sensor domain. We model the resource allocation problem as a multiagent problem in which each resource is modeled as an agent which can communicate with other agents to exchange requirements or task information. Agent interactions generally take the form of message exchanges to support auction-style algorithms in which a mediator requests bids on a task or a collection of tasks and then receives bids from agents. Each bid encapsulates local information, important to the allocation decision, in the form of utility or cost estimates.Descriptors:", "num_citations": "8\n", "authors": ["1631"]}
{"title": "Dependable intrusion tolerance: Technology demo\n", "abstract": " The Dependable Intrusion Tolerance (DIT) architecture is a flexible, adaptive, and intrusion-tolerant server design. We briefly discuss its prototype implementation and validation, and demonstrate how it resists sample attacks.", "num_citations": "8\n", "authors": ["1631"]}
{"title": "Dynamic scan scheduling\n", "abstract": " We present an approach to computing cyclic schedules online and in real time, while attempting to maximize a quality-of-service metric. The motivation is the detection of RF emitters using a schedule that controls the scanning of disjoint frequency bands. The problem is NP-hard, but it exhibits a so-called phase transition that can be exploited to rapidly find a \"good enough\" schedule. Our approach relies on a graph-based schedule-construction algorithm. Selecting the input to this algorithm in the phase-transition region ensures, with high probability, that a schedule will be found quickly, and gives a lower bound on the quality of service this schedule will achieve.", "num_citations": "8\n", "authors": ["1631"]}
{"title": "Formal methods and safety critical systems in practice\n", "abstract": " This article describes the state of the art in the practice of formal methods for safety critical computer systems. The work was done as part of the SafeFM 14] project and covers a tutorial introduction to speci cation and veri cation methods, standardisation activities, and examples of practical use as well as a unique survey of companies in the safety critical systems sector.", "num_citations": "7\n", "authors": ["1631"]}
{"title": "Formal methods and dependability assessment\n", "abstract": " Formal methods are increasingly used for system development and their potential advantages for dependability assurance have been recognized. However, there has so far been no hard evidence to either support or refute the efficacy of formal methods in this respect. This paper discusses how the dependability of systems can be affected by the tree of formal methods in two respects. First, how and why formal methods can help ensure the dependability of systems, and second what uncertainties can affect their effectiveness in achieving dependability. Issues related to the assessment of formal methods such as assessment criteria an assessment model and the establishment of evaluation experiments are discussed.< >", "num_citations": "7\n", "authors": ["1631"]}
{"title": "LibPoly: A library for reasoning about polynomials\n", "abstract": " LibPoly is a C library for computing with polynomials. It provides data structures to represent multivariate polynomials, and algorithms ranging from simple arithmetic and GCD computation, to root isolation and computation with algebraic numbers. The goal of the library is to be simple and extensible, and it is targeting tools that reason in nonlinear arithmetic. LibPoly is already successfully used in the Yices 2 nonlinear arithmetic solver. The library is freely available under a permissive open-source license. We present the basic functionality of LibPoly through the Python interface, and we describe a simple implementation of a classical cylindrical algebraic decomposition algorithm.", "num_citations": "6\n", "authors": ["1631"]}
{"title": "Solving bitvectors with MCSAT: explanations from bits and pieces\n", "abstract": " We present a decision procedure for the theory of fixed-sized bitvectors in the MCSAT framework. MCSAT is an alternative to CDCL(T) for SMT solving and can be seen as an extension of CDCL to domains other than the Booleans. Our procedure uses BDDs to record and update the sets of feasible values of bitvector variables. For explaining conflicts and propagations, we develop specialized word-level interpolation for two common fragments of the theory. For full generality, explaining conflicts outside of the covered fragments resorts to local bitblasting. The approach is implemented in the Yices 2 SMT solver and we present experimental results.", "num_citations": "5\n", "authors": ["1631"]}
{"title": "Yices manual version 2.4\n", "abstract": " This manual is an introduction to the logic, language, and architecture of the Yices 2 SMT solver. Yices is developed at SRI International\u2019s Computer Science Laboratory. Since version 2.5. 3, Yices is released under the GNU General Public Licence version 3 (reproduced in Appendix A). Previous versions were released under different terms, and were free-ofcharge for noncommercial use.", "num_citations": "5\n", "authors": ["1631"]}
{"title": "Yices 2 manual\n", "abstract": " This manual is an introduction to the logic, language, and architecture of the Yices 2 SMT solver. Yices is developed in SRI International\u2019s Computer Science Laboratory and is distributed free-of-charge for personal use, under the terms of the Yices License (reproduced in Chapter A of this manual). To discuss alternative license terms, please contact us at fm-license@ csl. sri. com.", "num_citations": "5\n", "authors": ["1631"]}
{"title": "Detecting denial-of-service attacks against wireless sensor networks\n", "abstract": " Because of resource and cost constraints, and of deployment scenarios in which a number of sensor nodes are spread in a large geographic region and are unattended, wireless sensor networks are especially vulnerable to denial-of-service (DoS) attacks. Moreover, sensor nodes are also used as routers to forward packets from other nodes. Compromised sensor nodes may be able to cause network-wide DoS by dropping, corrupting, and misrouting packets. This paper presents novel, lightweight approaches for detecting DoS caused by physical attacks and disruptive routers.", "num_citations": "5\n", "authors": ["1631"]}
{"title": "The Welch-Lynch Clock Synchronisation Algorithm\n", "abstract": " This note describes the Welch-Lynch fault-tolerant algorithm for clock synchro-nization. The original proof given by Welch and Lynch shows that the clocks of non-faulty nodes are maintained in approximate agreement. The worst-case skew is bounded by a constant which depends on network and algorithm parameters. We give a simplified proof of correctness and obtain tight synchronization bounds.", "num_citations": "5\n", "authors": ["1631"]}
{"title": "System description: Yices 1.0. 10\n", "abstract": " Yices 1.0. 10 is the most recent distribution of the Yices decision procedure. It can decide formulas containing uninterpreted function symbols, linear real and integer arithmetic, fixed-size bitvectors, extensional arrays, lambda expressions, tuples, records, quantifiers, scalar types, recursive datatypes, and dependent types. Compared to Yices 1.0\u2014the version that participated in SMT-COMP\u201906\u2014, the current version includes many bug fixes, some improvements to the bitvector solver, and extensions to support the new SMT-LIB logics and bitvector operators. Yices can be downloaded at http://yices. csl. sri. com. An improved version is under development and should be released by the end of the year.", "num_citations": "4\n", "authors": ["1631"]}
{"title": "Requirements analysis of real-time control systems using PVS\n", "abstract": " This paper presents a practical application of the PVS theorem prover involving requirements analysis of real-time control systems. This work was conducted within the SafeFM project and relied on a real world avionics case study. We show how PVS was used to formalize the software requirements for the system and to verify safety-related properties. We also present the main result of the experiment. We give an overview of PVS libraries which were developed after the case study experiment and are intended to facilitate the speci cation and veri cation of similar systems.", "num_citations": "4\n", "authors": ["1631"]}
{"title": "Modeling and verification of time-triggered communication protocols\n", "abstract": " We give an introduction and survey of a formal modeling and verification approach that has been successfully applied to time-triggered protocols. This method allows us to capture and reason about real-time properties of distributed systems. It relies on the modeling concept of calendar similar to what has been used for a long time in discrete event simulation. It is also supported by efficient symbolic verification tools provided by the SAL environment. We present the basis of the modeling method and discuss two related verification approaches for analyzing complex, real-time distributed systems.", "num_citations": "3\n", "authors": ["1631"]}
{"title": "Detecting disruptive routers in wireless sensor networks\n", "abstract": " In wireless sensor networks, sensor nodes are typically resource constrained and used as routers to forward packets for other nodes. Compromised sensor nodes may be able to cause network-wide denial of service by dropping or corrupting packets. This paper presents a novel, lightweight approach for detecting disruptive routers that drop or corrupt packets.", "num_citations": "2\n", "authors": ["1631"]}
{"title": "Forum Session: Security for Wireless Sensor Networks.\n", "abstract": " Wireless networks of low-power sensing devices are poised to become a ubiquitous part of the computing landscape. Proposed applications of these networks range from health care to warfare. The challenge for the information security community is to develop the common security services (confidentiality, integrity, etc.) for sensor networks in a manner that meets the very strict resource constraints of these devices. This forum will describe a broad range of on-going research efforts in order to acquaint the general information security community with the issues and concerns of sensor net security.", "num_citations": "2\n", "authors": ["1631"]}
{"title": "Avionics systems requirements: A comparison of RSML and SCR\n", "abstract": " This paper discusses and compares RSML and SCR, two approaches for the rigorous specification of control systems requirements. We give examples of RSML and SCR specifications for parts of a generic store management system. We discuss the merits and limitations of the two methods and examine how safety verification can be supported in both cases. Introduction RSML (refs. 1-2) and SCR (refs. 4-6) are two formalisms for the specification and analysis of control systems requirements. Both have been successfully applied to complex avionics systems. RSML was developed to specify the TCAS II aircraft collision avoidance system (ref. 1). SCR was introduced to specify the software requirements of the A7 flight software (ref. 4) and has since been extended to cover system as well as software requirements (refs. 78). The two notations are amenable to various forms of static and dynamic analysis. In particular, both SCR and RSML provide techniques for checking the consistency and, to some extent,...", "num_citations": "2\n", "authors": ["1631"]}
{"title": "Description et simulation d'un syst\u00e8me de contr\u00f4le de passage \u00e0 niveau en SIGNAL\n", "abstract": " Dans ce document, nous utilisons le langage SIGNAL pour d\u00e9crire un syst\u00e8me de contr\u00f4le et de commande automatique. Une m\u00e9thode de conception modulaire qui s\u2019 appuie sur les principes du langage, approche synchrone du temps et programmation par \u00e9quations, est pr\u00e9sent\u00e9e. Le syst\u00e8me d\u00e9crit peut ainsi \u00eatre ais\u00e9ment plong\u00e9 dans diff\u00e9rents contextes, en particulier, il peut \u00eatre facilement simul\u00e9 en l\u2019int\u00e9grant dans un environnement de simulation lui aussi d\u00e9crit en SIGNAL.", "num_citations": "2\n", "authors": ["1631"]}
{"title": "Verification of an Optimized NTT Algorithm\n", "abstract": " The Number Theoretic Transform (NTT) is an efficient algorithm for computing products of polynomials with coefficients in finite fields. It is a common procedure in lattice-based key-exchange and signature schemes. These new cryptographic algorithms are becoming increasingly important because they are quantum resistant. No quantum algorithm is known to break these lattice-based algorithms, unlike older schemes such as RSA or elliptic curve cryptosystems.                 Many implementations and optimizations of the NTT have been proposed in the literature. A particular efficient variant is due to Longa and Naehrig. We have implemented several of these variants, including an improved version of the Longa and Naehrig algorithm. An important concern is to show that numerical overflows do not happen in such algorithms. We report on several attempts at automatically verifying the absence of overflows\u00a0\u2026", "num_citations": "1\n", "authors": ["1631"]}
{"title": "Solving bitvectors with MCSAT: explanations from bits and pieces (long version)\n", "abstract": " We present a decision procedure for the theory of fixed-sized bitvectors in the MCSAT framework. MCSAT is an alternative to CDCL(T) for SMT solving and can be seen as an extension of CDCL to domains other than the Booleans. Our procedure uses BDDs to record and update the sets of feasible values of bitvector variables. For explaining conflicts and propagations, we develop specialized word-level interpolation for two common fragments of the theory. For full generality, explaining conflicts outside of the covered fragments resorts to local bitblasting. The approach is implemented in the Yices 2 SMT solver and we present experimental results.", "num_citations": "1\n", "authors": ["1631"]}
{"title": "Investigating Actuation Force Fight with Asynchronous and Synchronous Redundancy Management Techniques\n", "abstract": " Within distributed fault-tolerant systems the term force-fight is colloquially used to describe the level of command disagreement present at redundant actuation interfaces. This report details an investigation of force-fight using three distributed system case-study architectures. Each case study architecture is abstracted and formally modeled using the Symbolic Analysis Laboratory (SAL) tool chain from the Stanford Research Institute (SRI). We use the formal SAL models to produce k-induction based proofs of a bounded actuation agreement property. We also present a mathematically derived bound of redundant actuation agreement for sine-wave stimulus. The report documents our experiences and lessons learned developing the formal models and the associated proofs.", "num_citations": "1\n", "authors": ["1631"]}
{"title": "Probabilistic Analysis of Distributed Fault-Tolerant Systems\n", "abstract": " An approach is documented for analyzing probabilistic properties of fault-tolerant distributed systems using the PRISM model checker.", "num_citations": "1\n", "authors": ["1631"]}
{"title": "Simplics: Tool description\n", "abstract": " Simplics is a recent successor of the Integrated Solver and Canonizer (ICS)[2]. However, unlike ICS, Simplics is specialized for a more narrow set of problems. It is a tool for deciding the validity of boolean combination of linear-arithmetic constraints over the reals. The main intended application of Simplics is bounded model-checking of infinite transition systems including several forms of timed transition systems. Examples of applications include distributed real-time fault-tolerant systems and clocksynchrnozation protocols.", "num_citations": "1\n", "authors": ["1631"]}
{"title": "Scan scheduling specification and analysis\n", "abstract": " We investigate the construction of fixed schedules for an EW receiver that ensures that \u00d2 disjoint frequency bands are periodically visited for a given time interval. Two parameters and \u00cc, such that \u00bc", "num_citations": "1\n", "authors": ["1631"]}
{"title": "Discrete event systems and synchronous languages: an example\n", "abstract": " Signal is a synchronous data flow language well suited to the description of real-time systems. This paper describes how a polynomial representation can be a powerful tool for automatic verification of Signal programs. Validity, liveness and fairness properties can be examinated, as illustrated on a small example: a controller for accessing a critical resource.", "num_citations": "1\n", "authors": ["1631"]}