{"title": "Guest editors' introduction: Global software development: How far have we come?\n", "abstract": " Global software development efforts have increased in recent years, and such development seems to have become a business necessity for various reasons, including cost, availability of resources, and the need to locate development closer to customers. However, there's still much to learn about global software development before the discipline becomes mature. This special issue aims to assess the gap between the state of the art and the state of the practice. It presents five articles that cover various aspects of global software development, including knowledge management strategies, distributed software development, requirements engineering, distributed requirements, and managing offshore collaboration. A Point/Counterpoint department discusses whether global software development is indeed a business necessity.This article is part of a special issue on Global Software Development.", "num_citations": "338\n", "authors": ["1454"]}
{"title": "Stakeholders in global requirements engineering: Lessons learned from practice\n", "abstract": " Due to its communication and collaboration-intensive nature, as well as inherent interaction with most other development processes, the practice of requirements engineering is becoming a key challenge in global software engineering (GSE). In distributed projects, cross-functional stakeholder groups must specify and manage requirements across cultural, time-zone, and organizational boundaries. This creates a unique set of problems, not only when an organization opens new development subsidiaries across the world but also when software development is a multiorganizational business affair. We need innovative processes and technologies to manage stakeholders' expectations and interaction in global projects. This article reports on the state of the practice, drawn from industrial empirical studies, of stakeholders' interaction in global RE. The article revisits stakeholders' needs in global RE, discusses the\u00a0\u2026", "num_citations": "276\n", "authors": ["1454"]}
{"title": "Predicting build failures using social network analysis on developer communication\n", "abstract": " A critical factor in work group coordination, communication has been studied extensively. Yet, we are missing objective evidence of the relationship between successful coordination outcome and communication structures. Using data from IBM's Jazztrade project, we study communication structures of development teams with high coordination needs. We conceptualize coordination outcome by the result of their code integration build processes (successful or failed) and study team communication structures with social network measures. Our results indicate that developer communication plays an important role in the quality of software integrations. Although we found that no individual measure could indicate whether a build will fail or succeed, we leveraged the combination of communication structure measures into a predictive model that indicates whether an integration will fail. When used for five project teams\u00a0\u2026", "num_citations": "263\n", "authors": ["1454"]}
{"title": "Awareness in the wild: Why communication breakdowns occur\n", "abstract": " Global software teams face challenges when collaborating over long distances, such as communicating changes in the project. During a four-month case study at IBM Ottawa Software Lab we observed the collaboration patterns of a multi-site development project team. In this period, we inspected project documentation, interviewed team leaders, attended project meetings, and spoke with developers to identify problems originated by the lack of awareness of changes related to the implementation of work items. Our observations show (1) that organizational culture has an effect on how developers are made aware; (2) that communication-based social networks revolving around particular work items are dynamic throughout development, and therefore awareness needs to be maintained in infrastructures of work; and (3) that information overload and communication breakdowns contributed to the generation of a\u00a0\u2026", "num_citations": "236\n", "authors": ["1454"]}
{"title": "An empirical study of the complex relationships between requirements engineering processes and other processes that lead to payoffs in productivity, quality, and risk management\n", "abstract": " Requirements engineering is an important component of effective software engineering, yet more research is needed to demonstrate the benefits to development organizations. While the existing literature suggests that effective requirements engineering can lead to improved productivity, quality, and risk management, there is little evidence to support this. We present empirical evidence showing how requirements engineering practice relates to these claims. This evidence was collected over the course of a 30-month case study of a large software development project undergoing requirements process improvement. Our findings add to the scarce evidence on RE payoffs and, more importantly, represent an in-depth explanation of the role of requirements engineering processes in contributing to these benefits. In particular, the results of our case study show that an effective requirements process at the beginning of\u00a0\u2026", "num_citations": "234\n", "authors": ["1454"]}
{"title": "Does socio-technical congruence have an effect on software build success? a study of coordination in a software project\n", "abstract": " Socio-technical congruence is an approach that measures coordination by examining the alignment between the technical dependencies and the social coordination in the project. We conduct a case study of coordination in the IBM Rational Team Concert project, which consists of 151 developers over seven geographically distributed sites, and expect that high congruence leads to a high probability of successful builds. We examine this relationship by applying two congruence measurements: an unweighted congruence measure from previous literature, and a weighted measure that overcomes limitations of the existing measure. We discover that there is a relationship between socio-technical congruence and build success probability, but only for certain build types, and observe that in some situations, higher congruence actually leads to lower build success rates. We also observe that a large proportion of zero\u00a0\u2026", "num_citations": "143\n", "authors": ["1454"]}
{"title": "Global software development and delay: Does distance still matter?\n", "abstract": " Nowadays, distributed development is common in software development. Besides many advantages, research in the last decade has consistently found that distribution has a negative impact on collaboration in general, and communication and task completion time in particular. Adapted processes, practices and tools are demanded to overcome these challenges. We report on an empirical study of communication structures and delay, as well as task completion times in IBM's distributed development project Jazz. The Jazz project explicitly focuses on distributed collaboration and has adapted processes and tools to overcome known challenges. We explored the effect of distance on communication and task completion time and use social network analysis to obtain insights about the collaboration in the Jazz project. We discuss our findings in the light of existing literature on distributed collaboration and delays.", "num_citations": "133\n", "authors": ["1454"]}
{"title": "Collaboration patterns and the impact of distance on awareness in requirements-centred social networks\n", "abstract": " Because of intense collaborative needs, requirements engineering is a challenge in global software development. How do distributed teams manage the development of requirements in environments that require significant cross-site collaboration and coordination? In this paper, we report research that used social network analysis to explore collaboration and awareness among team members during requirements management in an industrial distributed software team. Using the lens of a requirements-centred social network to group team members who work on a particular requirement, we collected data to characterize requirements-centric collaborations in a project, and to examine aspects of awareness of requirements changes within these networks. Our findings indicate organic patterns of collaboration involving considerable cross-site interaction, in which communication of changes was the most predominant\u00a0\u2026", "num_citations": "128\n", "authors": ["1454"]}
{"title": "Instructional design and assessment strategies for teaching global software development: a framework\n", "abstract": " In the context of increasing pressure to adopt global approaches to software development, the importance of teaching skills for geographically distributed software development (GSD) becomes essential. This paper reports the experience of teaching a course to prepare graduates for software engineering (SE) in global customer-developer teams, and which was taught in three-University collaboration (Canada, Australia and Italy). The course emphasized the learning of requirements management activities in frequent synchronous computer-mediated client-developer relationships and created a GSD environment with significant time zone and language differences. We describe our instructional approach and assessment strategies within a GSD instructional design framework which integrates (a) required GSD skills and strategies for aligning classroom projects with contemporary and authentic GSD conditions,(b\u00a0\u2026", "num_citations": "123\n", "authors": ["1454"]}
{"title": "Mining task-based social networks to explore collaboration in software teams\n", "abstract": " Suppose you're a software team manager who's responsible for delivering a software product by a specific date, and your team uses a code integration system (referred to as a build in IBM Rational Jazz and in this article) to integrate its work before delivery. When the build fails, your team needs to spend extra time diagnosing the integration issue and reworking code. As the manager, you suspect that your team failed to communicate about a code dependency, which broke the build. Your team needs to quickly disseminate information about its interdependent work to achieve a successful integration build. How can you understand your team's communication? Social-network analysis can give you insight into the team's communication patterns that might have caused the build's failure.", "num_citations": "119\n", "authors": ["1454"]}
{"title": "StakeSource2. 0: using social networks of stakeholders to identify and prioritise requirements\n", "abstract": " Software projects typically rely on system analysts to conduct requirements elicitation, an approach potentially costly for large projects with many stakeholders and requirements. This paper describes StakeSource2. 0, a web-based tool that uses social networks and collaborative filtering, a\" crowdsourcing\" approach, to identify and prioritise stakeholders and their requirements.", "num_citations": "113\n", "authors": ["1454"]}
{"title": "Global software development: technical, organizational, and social challenges\n", "abstract": " The International Workshop on Global Software Development was held in Portland (Oregon, USA) on May 9 2003, as part of the International Conference on Software Engineering 2003. A multicultural group of twenty-five people contributed to a successful workshop that debated the continued challenges of software development in global teams. The workshop consisted of an invited talk, sixteen short presentations, and fruitful discussions. We present an overview of the workshop motivation and then focus on the workshop's technical program. The workshop web site, including papers and slides, can be found at .", "num_citations": "109\n", "authors": ["1454"]}
{"title": "Requirements engineering and downstream software development: Findings from a case study\n", "abstract": " Requirements management is being recognized as one of the most important albeit difficult phases in software engineering. The literature repeatedly cites the role of well-defined requirements and requirements management process in problem analysis and project management as benefiting software development throughout the life cycle: during design, coding, testing, maintenance and documentation of software. This paper reports on the findings of an investigation into industrial practice of requirements management process improvement and its positive effects on downstream software development. The evidence reveals a strong relationship between a well-defined requirements process and increased developer productivity, improved project planning through better estimations and enhanced ability for stakeholders to negotiate project scope. These results are important since there is little empirical\u00a0\u2026", "num_citations": "81\n", "authors": ["1454"]}
{"title": "Addressing the challenges of software industry globalization: the workshop on global software development\n", "abstract": " The goal of this workshop is to provide an opportunity for researchers and industry practitioners to explore both the state-of-the art and the state-of-thepractice in global software development (GSD). Increased globalization of software development creates software engineering challenges due to the impact of temporal, geographical and cultural differences, and requires development of techniques and technologies to address these issues. The workshop will foster interaction between practitioners and researchers and help grow a community of interest in this area. Practitioners experiencing challenges in GSD will share their concerns and successful solutions and learn from research about current investigations. Researchers addressing GSD will gain a better understanding of the key issues facing practitioners and share their work in progress with others in the field.", "num_citations": "81\n", "authors": ["1454"]}
{"title": "On the need for mixed media in distributed requirements negotiations\n", "abstract": " Achieving agreement with respect to software requirements is a collaborative process that traditionally relies on same-time, same-place interactions. As the trend toward geographically distributed software development continues, colocated meetings are becoming increasingly problematic. Our research investigates the impact of computer-mediated communication on the performance of distributed client/developer teams involved in the collaborative development of a requirements specification. Drawing on media-selection theories, we posit that a combination of lean and rich media is needed for an effective process of requirements negotiations when stakeholders are geographically dispersed. In this paper, we present an empirical study that investigates the performance of six educational global project teams involved in a negotiation process using both asynchronous text-based and synchronous\u00a0\u2026", "num_citations": "77\n", "authors": ["1454"]}
{"title": "Information brokers in requirement-dependency social networks\n", "abstract": " Requirements interdependencies create technical dependencies among project members that generally belong to different functional groups in an organization, but who need to coordinate activities during processes of requirements change management. Effective knowledge management is needed to disseminate information on requirement changes across teams working on interdependent requirements to avoid mis-interpretations. Social networks are regarded as important in fostering knowledge management, where brokers or gatekeepers have the role of project members facilitating information flow. However, little is known about processes of information flow and brokerage in social networks built around interdependent requirements. In a field study of requirement interdependencies in a large IT manufacturing organization, we found that brokers holding pockets of knowledge have an impact on information\u00a0\u2026", "num_citations": "67\n", "authors": ["1454"]}
{"title": "Requirements-driven collaboration: Leveraging the invisible relationships between requirements and people\n", "abstract": " In this chapter we introduce requirements-driven collaboration, which is the collaboration of a cross-functional team of business analysts, designers, developers and testers during the development and management of requirements. We describe an approach that (1) constructs a requirement-centric social network which represents the membership and relationships among members working on a requirement and its associated downstream artifacts and (2) outlines a number of social network analysis techniques to study collaboration aspects such as communication, awareness               , and the alignment of technical dependencies driven by development of requirements and social interactions. To demonstrate our approach, we discuss a case study that examines requirements-driven collaboration within an industrial, globally-distributed software team. Finally, we discuss implications regarding the use of our\u00a0\u2026", "num_citations": "64\n", "authors": ["1454"]}
{"title": "How interaction between roles shapes the communication structure in requirements-driven collaboration\n", "abstract": " Requirements engineering involves collaboration among many project team members. Driven by coordination needs, this collaboration relies on communication and knowledge that members have of their colleagues and related activities. Ineffective coordination with those who work on requirements dependencies may result in project failure. In this paper, we report on a study of roles and communication structures in the collaboration driven by interdependent requirements in a software team. Through on-site observations, interviews with the developers and application of social network analysis, we found that there was significant communication between diverse roles in the project, and identified what were the reasons for communication between the different roles. We also found that these interactions typically involved a core of requirements analysts and testers in close communication, that most often they\u00a0\u2026", "num_citations": "55\n", "authors": ["1454"]}
{"title": "Awareness meets requirements management: awareness needs in global software development\n", "abstract": " There has been growing attention to awareness issues in group collaborative processes. In this paper we address workspace awareness in requirements management processes in global software development endeavors.When working on a software project, developers, system analysts, testers, and managers make use of information about current sets of requirements, design artifacts and relationships to customer requirements or test cases, as well as roles and responsibilities assigned to particular work artifacts. Co-located teams benefit from social mechanisms and processes that naturally facilitate the work practice and diminish the perceived need for explicit workspace awareness support. However, limited access to informal communication in geographically distributed teams make problems caused by reduced workspace awareness more acute. We propose a set of features for awareness support in geographically distributed requirements management activities and outline our first step in researching such awareness issues. In finding usable and sensible solutions to this problem, we may be creating solutions long overdue in requirements engineering in general.", "num_citations": "52\n", "authors": ["1454"]}
{"title": "An empirical study of requirements engineering in distributed software projects: is distance negotiation more effective?\n", "abstract": " The software development world is experiencing an irreversible trend towards the globalization of business. This creates the need for a thorough understanding of collaborative activities such as requirements engineering and design of software in distributed development environments. The requirements conflicts and tradeoffs are critical aspects that occur throughout software development and we, as software engineers, need to better understand the technological impacts on the performance of groups resolving requirements issues in distributed development structures. In this paper lessons learned from an exploratory study of requirements meetings in which stakeholders participate from remote sites are reported. Evidence not only shows that distributed requirements engineering is supported by current multimedia meeting systems but also reveals aspects that enabled the distributed communication of\u00a0\u2026", "num_citations": "51\n", "authors": ["1454"]}
{"title": "Transition to model-driven engineering\n", "abstract": " A considerable amount of research has been dedicated to bring the vision of model-driven engineering (MDE) to fruition. However, the practical experiences of organizations that transition to MDE are underreported. This paper presents a case study of the organizational consequences experienced by one large organization after transitioning to MDE. We present four findings from our case study. First, MDE brings development closer to the domain experts, but software engineers are still necessary for many tasks. Second, though MDE presents an opportunity to achieve incremental improvements in productivity, the organizational challenges of software development remain unchanged. Third, switching to MDE may disrupt the balance of the organizational structure, creating morale and power problems. Fourth, the cultural and institutional infrastructure of MDE is underdeveloped, and until MDE becomes\u00a0\u2026", "num_citations": "49\n", "authors": ["1454"]}
{"title": "Conway's law revisited: The evidence for a task-based perspective\n", "abstract": " Conway's law, also called the mirroring hypothesis, predicts that a development organization will inevitably design systems that mirror its organizational communication structure. The alignment between architecture and communication applies to physical systems, but not necessarily to software systems. In this article, the authors present evidence that a task-level view of Conway's law can realize the benefits of alignment in software systems.", "num_citations": "48\n", "authors": ["1454"]}
{"title": "Does distance still matter?\n", "abstract": " Nowadays, distributed development is common in software development. Besides many advantages, research in the last decade has consistently found that distribution has a negative impact on collaboration in general, and communication delay and time to complete tasks in particular. Adapted processes, practices, and tools are demanded to overcome these challenges. We report on an empirical study of communication structures and delay in IBM's distributed development project Jazz. The Jazz project explicitly focuses on distributed collaboration and has adapted processes and tools to overcome known challenges. We explore the effect of distance on communication and task completion time and use social network analysis to obtain insights about the collaboration in the Jazz project. We discuss our findings in the light of existing literature on distributed collaboration and delays. Copyright \u00a9 2008 John Wiley\u00a0\u2026", "num_citations": "47\n", "authors": ["1454"]}
{"title": "The study of requirements engineering in global software development: as challenging as important\n", "abstract": " The increasing globalization of software industry demands an investigation of Requirements Engineering (RE) in multi-site software development organizations. This paper advocates that the study of requirements engineering in geographically distributed software development is not only important but challenging at the same time.A research agenda to develop a model of impact of distance on requirements engineering collaborative activities is proposed. A field investigation of RE in a multi-site development organization is described to illustrate the effects of stakeholders \u2018geographical distribution on requirements collaborative activities as well as specific challenges that distance placed in conducting this research itself.", "num_citations": "47\n", "authors": ["1454"]}
{"title": "ACon: A learning-based approach to deal with uncertainty in contextual requirements at runtime\n", "abstract": " Context: Runtime uncertainty such as unpredictable operational environment and failure of sensors that gather environmental data is a well-known challenge for adaptive systems.Objective: To execute requirements that depend on context correctly, the system needs up-to-date knowledge about the context relevant to such requirements. Techniques to cope with uncertainty in contextual requirements are currently underrepresented. In this paper we present ACon (Adaptation of Contextual requirements), a data-mining approach to deal with runtime uncertainty affecting contextual requirements.Method: ACon uses feedback loops to maintain up-to-date knowledge about contextual requirements based on current context information in which contextual requirements are valid at runtime. Upon detecting that contextual requirements are affected by runtime uncertainty, ACon analyses and mines contextual data, to (re\u00a0\u2026", "num_citations": "46\n", "authors": ["1454"]}
{"title": "The role of domain knowledge and cross-functional communication in socio-technical coordination\n", "abstract": " Software projects involve diverse roles and artifacts that have dependencies to requirements. Project team members in different roles need to coordinate but their coordination is affected by the availability of domain knowledge, which is distributed among different project members, and organizational structures that control cross-functional communication. Our study examines how information flowed between different roles in two software projects that had contrasting distributions of domain knowledge and different communication structures. Using observations, interviews, and surveys, we examined how diverse roles working on requirements and their related artifacts coordinated along task dependencies. We found that communication only partially matched task dependencies and that team members that are boundary spanners have extensive domain knowledge and hold key positions in the control structure\u00a0\u2026", "num_citations": "45\n", "authors": ["1454"]}
{"title": "Openness and requirements: Opportunities and tradeoffs in software ecosystems\n", "abstract": " A growing number of software systems is characterized by continuous evolution as well as by significant interdependence with other systems (e.g. services, apps). Such software ecosystems promise increased innovation power and support for consumer oriented software services at scale, and are characterized by a certain openness of their information flows. While such openness supports project and reputation management, it also brings some challenges to Requirements Engineering (RE) within the ecosystem. We report from a mixed-method study of IBM \u00ae 's CLM \u00ae  ecosystem that uses an open commercial development model. We analyzed data from from interviews within several ecosystem actors, participatory observation, and software repositories, to describe the flow of product requirements information through the ecosystem, how the open communication paradigm in software ecosystems provides\u00a0\u2026", "num_citations": "40\n", "authors": ["1454"]}
{"title": "The role of asynchronous discussions in increasing the effectiveness of remote synchronous requirements negotiations\n", "abstract": " Important and yet very difficult process in software development, requirements engineering is plagued with additional challenges in the emergent dynamics of geographically distributed software teams. Our hypothesis is that a mix of lean and rich communication media are needed towards increasing the effectiveness of meetings in reaching mutual agreement when stakeholders are geographically dispersed. We studied tool-supported remote inspections in six educational global project teams in a multicultural software development environment. In this paper we present the preliminary results from comparing the effectiveness of the requirements negotiations when preceded by the asynchronous discussions to those negotiations with no prior asynchronous discussions.", "num_citations": "36\n", "authors": ["1454"]}
{"title": "Cooperation and coordination concerns in a distributed software development project\n", "abstract": " Enabling effective coordination of work in large distributed software projects requires cooperation between participants across multiple teams, sites, and skill sets. To determine how practicing software engineers, in a distributed software development setting, maintain awareness of dependencies and coordinate to resolve dependencies in their work, we conducted a field study that used interviews and informal observation of a distributed software team. In this paper we present key interesting themes that emerged from the qualitative analysis: proximity, modification request authoring patterns, and uncooperative behaviours. We discuss these findings and outline future quantitative research plans to triangulate the methods used by software developers with recorded activities in engineering repositories to increase the generalizability of the research findings.", "num_citations": "32\n", "authors": ["1454"]}
{"title": "Visualizing a requirements-centred social network to maintain awareness within development teams\n", "abstract": " When the requirements in a software system change, we should notify every contributor who participates in the analysis, design, implementation, and testing of the requirement to reduce rework. However, the network of contributors working on a requirement is constantly changing, making it not only difficult to seek expertise from other team members, but also difficult to send requirements-change information to team members. To promote communication and improve awareness among contributors working on the same requirement, in this position paper we suggest using a visual representation called a requirements-centred-social-network diagram. Using the social-network diagram, a contributor can learn about another contributor's communication patterns around the development of a requirement, or send requirements-change-awareness notifications to every member of a team working on the same requirement\u00a0\u2026", "num_citations": "31\n", "authors": ["1454"]}
{"title": "Using satisfaction arguments to enhance i* modelling of an air traffic management system\n", "abstract": " This paper reports the integration of satisfaction arguments into i* goal modelling to support analyses of the impact of new software systems on system-wide goals. Integration is based on a conceptual model that relates satisfaction argument and i* model concepts. New impact analysis procedures based on the integrated models and satisfaction arguments are introduced.", "num_citations": "30\n", "authors": ["1454"]}
{"title": "Integration of behavioural requirements specification within compositional knowledge engineering\n", "abstract": " In this paper it is shown how specification of behavioural requirements from informal to formal can be integrated within knowledge engineering. The integration of requirements specification has addressed, in particular: the integration of requirements acquisition and specification with ontology acquisition and specification, the relations between requirements specifications and specifications of task models and problem solving methods, and the relation of requirements specification to verification.", "num_citations": "30\n", "authors": ["1454"]}
{"title": "The hidden experts in software-engineering communication: NIER track\n", "abstract": " Sharing knowledge in a timely fashion is important in distributed software development. However, because experts are difficult to locate, developers tend to broadcast information to find the right people, which leads to overload and to communication breakdowns. We study the context in which experts are included in an email discussion so that team members can identify experts sooner. In this paper, we conduct a case study examining why people emerge in discussions by examining email within a distributed team. We find that people emerge in the following four situations: when a crisis occurs, when they respond to explicit requests, when they are forwarded in announcements, and when discussants follow up on a previous event such as a meeting. We observe that emergent people respond not only to situations where developers are seeking expertise, but also to execute routine tasks. Our findings have\u00a0\u2026", "num_citations": "29\n", "authors": ["1454"]}
{"title": "Global software development: growing opportunities, ongoing challenges\n", "abstract": " Global software development (GSD) continues to be a phenomenon fueled by well-documented factors such as access to a large and specialized labor pool, reduced development costs, global presence and proximity to customers. While we are witnessing reports of successful global teams, research continues to reveal that distance contributes to heightened complexity in the software development process and its supporting processes of communication, coordination and collaboration. These factors have direct consequences on how software is defined, constructed, tested and delivered to customers, as well as how its development is managed. Furthermore, cultural issues are possibly the most interesting aspect of global teams. Members with diverse attitudes toward hierarchy, time management and risk avoidance come to work together in cross-functional teams.This special issue elicited papers with a focus on\u00a0\u2026", "num_citations": "28\n", "authors": ["1454"]}
{"title": "To talk or not to talk: factors that influence communication around changesets\n", "abstract": " Building tools to help software developers communicate effectively requires a deep understanding of their communication dynamics. To date we do not have good comprehension of why developers talk to each other as a result of some events in the life of their projects, and not of others. This lack of knowledge makes it difficult to design useful communication models and support systems.", "num_citations": "27\n", "authors": ["1454"]}
{"title": "Teaching requirements engineering in global software development: a report on a three-university collaboration\n", "abstract": " The importance of teaching Requirements Engineering in global software engineering is emphasised when considered within the context of increasing pressure to adopt global approaches to software development. This realization led to the identification of need for an academic course which would facilitate the development of students\u2019 RE skills in distributed projects. This paper reports our experience in coordinating and teaching of a course intended to prepare our graduates for requirements engineering activities in global customer-developer relationships. The course was taught in a collaboration of three universities in disparate locations, time zones and culture: Canada, Australia and Italy. The students from the three locations played the roles of a client and developer and experienced the iterative development of a requirements specification in global projects. We present some of the challenges encountered in teaching this course across universities, different cultures and time zones, and briefly describe some of the evaluation instruments we employed in assessing the success of the course. Our intention is to gather feedback from the audience and possible ideas on how to improve for next iteration.", "num_citations": "25\n", "authors": ["1454"]}
{"title": "To do or not to do: If the requirements engineering payoff is so good, why aren? t more companies doing it?\n", "abstract": " The by an author? s name means that the author plans to be present at the panel session. RE researchers have noted time and again the difficulty of technology transfer, that of getting technology that RE research has developed and found useful to be used in industrial practice. The numerous panels we have had over the years on this subject are proof of the pervasiveness and permanence of this problem. One thing that keeps many software-development organizations from doing serious requirements engineering before beginning development is the perception that doing requirements engineering wastes time and delays getting on to the real work, designing and programming. Many a manager says,\" I know that we should work out the requirements in detail, but we don? t have time. We have to get started on the programming because we have a short deadline to deliver the code!\". He or she says this despite all\u00a0\u2026", "num_citations": "23\n", "authors": ["1454"]}
{"title": "What do support analysts know about their customers? on the study and prediction of support ticket escalations in large software organizations\n", "abstract": " Understanding and keeping the customer happy is a central tenet of requirements engineering. Strategies to gather, analyze, and negotiate requirements are complemented by efforts to manage customer input after products have been deployed. For the latter, support tickets are key in allowing customers to submit their issues, bug reports, and feature requests. Whenever insufficient attention is given to support issues, however, their escalation to management is time-consuming and expensive, especially for large organizations managing hundreds of customers and thousands of support tickets. Our work provides a step towards simplifying the job of support analysts and managers, particularly in predicting the risk of escalating support tickets. In a field study at our large industrial partner, IBM, we used a design science methodology to characterize the support process and data available to IBM analysts in managing\u00a0\u2026", "num_citations": "22\n", "authors": ["1454"]}
{"title": "Extending socio-technical congruence with awareness relationships\n", "abstract": " Coordination in software engineering is necessary for software teams. To study coordination, researchers need aa way to conceptualize and measure it| one such measure is socio-technical congruence. Within a team setting, awareness of other's tasks and abilities enables coordination, but the conceptualizations for socio-technical congruence do not include awareness. In this paper, our goal is to include awareness in socio-technical congruence. To do this, we conduct an empirical investigation of a team's awareness behaviour. We examine how developers transmit awareness information in a global software-engineering environment in a project called Ship using direct observations, interviews, and a questionnaire. We found that team members were satisfied with using simple awareness mechanisms such as email and meetings. We also identified that experienced team members served as brokers and filled\u00a0\u2026", "num_citations": "22\n", "authors": ["1454"]}
{"title": "Towards a model of awareness support of software development in gsd\n", "abstract": " Awareness is a powerful concept that can be used to enable developers to quickly and easily grasp the state of the workspace which they operate within. We begin by explaining one approach to how awareness might be used to support software development and to enhance developer cooperation and communication. However, since this approach assumes on-going collaboration it is useful to couch the discussion within a collaborative model. This paper presents a model of how awareness could support software collaboration, by describing typical software collaboration, how it is deficient and how awareness helps ameliorates those deficiencies.", "num_citations": "22\n", "authors": ["1454"]}
{"title": "A weighted congruence measure\n", "abstract": " Socio-technical congruence is an intuitive way to compare required coordination effort within a software development project with the actual ongoing coordination. The current model of congruence is limited because it builds on top of some simplifying assumptions. These assumptions, such as placing equal importance of coordination needs, often fail to reflect the actual nature of a project. We propose a model that derives actual coordination needs from fine grained task interdependencies and task assignments. This enables us to compare those needs with the real ongoing coordination other than just dichotomized measurements.", "num_citations": "21\n", "authors": ["1454"]}
{"title": "Global software development: Building a research community\n", "abstract": " While the field of global software development (GSD) remains in its relative infancy, a group of GSD researchers are on the brink of building a stronger research community that will be able to collectively address many of the current challenges in the field. This paper details emerging issues in the GSD community while discussing contributions made at the latest GSD workshop held at ICSE 2004. These issues include: the need for community building and increased collaboration between researchers, the importance of more systematic application and documentation of research techniques, and the opportunity to build defined models and theories, and, in doing so, define the state of the practice. Brief summaries of workshop papers are incorporated, along with discussions of the topics addressed during the workshop. These topics include: Feasibility of GSD, Strategies for Success of GSD, and Research Methods\u00a0\u2026", "num_citations": "19\n", "authors": ["1454"]}
{"title": "A Study of Requirements Negotiations in Virtual Project Teams.\n", "abstract": " Recent advancements in communication systems enable the collaboration of virtual software design teams, breaking the barriers of time and distance. In this paper we address a critical aspect of the collaborative work of virtual project teams, the negotiation of requirements in software development. We present an exploratory study of the effects of multimedia communication systems on group negotiation performance and behavior. An emphasis is placed on the development of a research methodology that uses multiple methods in investigating a complex phenomenon. Contrary to the belief that face-to-face interaction increases performance, our laboratory findings suggest that groups in face-to-face meetings perform no better than video-conferenced groups; moreover, we identified a particular distributed virtual team configuration that was qualitatively more conducive to requirements negotiation than face-to-face meetings.", "num_citations": "18\n", "authors": ["1454"]}
{"title": "Eliciting contextual requirements at design time: A case study\n", "abstract": " The need to consider context in order to understand requirements is established in requirements engineering. Recently, this has been discussed more intensively for sociotechnical systems, which offer a rich spectrum of different operating contexts. Contextual requirements proved valuable to model requirements together with the context they are valid in, but there is a lack of research on how to derive them from stakeholder needs. Our goal in this paper is to explore the usefulness of existing requirements elicitation techniques for the identification of contextual requirements early, i.e. at design time. In a case study we investigate end-user viewpoints, together with interviews, scenarios, prototyping, goal-based analysis, and groupwork as a means to elicit and clarify contextual requirements already at design time. In our case study a certain combination of the applied requirements elicitation techniques stood out as\u00a0\u2026", "num_citations": "17\n", "authors": ["1454"]}
{"title": "Using Web 2.0 for stakeholder analysis: StakeSource and its application in ten industrial projects\n", "abstract": " Software projects often fail because stakeholders are omitted. Existing stakeholder analysis methods rely on practitioners to manually identify and prioritise stakeholders, which is time consuming, especially in large projects with many stakeholders. This chapter investigates the use of Web 2.0 technologies, such as crowdsourcing and social networking, to identify and prioritise stakeholders. The investigation is based on the application of StakeSource in practice. StakeSource is a Web 2.0 tool that uses social networking and crowdsourcing techniques to identify and prioritise stakeholders. This chapter describes our experiences of and lessons learnt from applying StakeSource in ten real-world projects from six organisations in UK, Japan, Australia, and Canada, involving more than 600 stakeholders. We find that StakeSource can yield significant benefits, but its effectiveness depends on the stakeholders\u00a0\u2026", "num_citations": "17\n", "authors": ["1454"]}
{"title": "The effects of distance, experience, and communication structure on requirements awareness in two distributed industrial software projects\n", "abstract": " In global software development, communication is difficult due to distance between sites. How effectively do team members distributed among multiple geographical locations become aware of changes and clarifications to requirements? In a case study of two different global software development projects, we observed how requirement analysts, developers, and testers maintain awareness of changes in the project. To gather data, we attended local and remote meetings, and conducted interviews of project team members. Based on our experience with these projects, we discuss the following awareness factors in software development: distance, experience of team members, and communication structure. We present the effects on awareness, and provide some lessons learned for global software development projects. We expect these lessons learned can be used by projects with similar settings.", "num_citations": "17\n", "authors": ["1454"]}
{"title": "An empirical study of the impact of asynchronous discussions on remote synchronous requirements meetings\n", "abstract": " Our research explores the combination of synchronous and asynchronous collaboration tools for global software development. In this paper we assess the impact of tool-mediated inspections to improve requirements negotiation meetings with stakeholders spread over different continents. We present the design of our investigation in an educational environment, in a course where the clients and developers in a software project were in geographically distributed locations. In particular, we studied the usefulness of asynchronous discussions in IBIS tool in enabling more effective requirements negotiations meetings. Our findings indicate that the requirements negotiations were more effective when the groups conducted asynchronous discussions prior to the synchronous negotiation meetings.", "num_citations": "17\n", "authors": ["1454"]}
{"title": "SACRE: Supporting contextual requirements\u2019 adaptation in modern self-adaptive systems in the presence of uncertainty at runtime\n", "abstract": " Runtime uncertainty such as unpredictable resource unavailability, changing environmental conditions and user needs, as well as system intrusions or faults represents one of the main current challenges of self-adaptive systems. Moreover, today's systems are increasingly more complex, distributed, decentralized, etc. and therefore have to reason about and cope with more and more unpredictable events. Approaches to deal with such changing requirements in complex today's systems are still missing. This work presents SACRE (Smart Adaptation through Contextual REquirements), our approach leveraging an adaptation feedback loop to detect self-adaptive systems\u2019 contextual requirements affected by uncertainty and to integrate machine learning techniques to determine the best operationalization of context based on sensed data at runtime. SACRE is a step forward of our former approach ACon which focus\u00a0\u2026", "num_citations": "16\n", "authors": ["1454"]}
{"title": "Challenges in requirements engineering\n", "abstract": " This paper presents a exposition of requirements engineering  concepts and challenges, targeted on the research division of a  large software  company. It is argued that doing requirements is a difficult  task and its  critical problems are identified. The activities involved in  requirements  engineering are described and the aspects of an iterative  process are  presented. The state of the art of the research in two  requirements activities:  requirements elicitatiom and negotiation are described. The  paper ends with a  detailed proposal for an investigation of groupware support to  distance  requirements negotiation.", "num_citations": "16\n", "authors": ["1454"]}
{"title": "Requirements engineering in distributed projects\n", "abstract": " Due to its communication and collaborationintensive nature, processes of requirements engineering (RE) become one of the key challenges in distributed software development. The reality of distributed projects is that cross-functional stakeholder groups are tasked with specifying and managing requirements across cultural, time-zone and organizational boundaries. This creates an unique set of problems not only when an organization opens development centres across the world, but also when software development is a multi-organizational business affair.", "num_citations": "15\n", "authors": ["1454"]}
{"title": "The 3rd international workshop on global software development\n", "abstract": " The goal of this workshop is to provide an opportunity for researchers and industry practitioners to explore both the state-of-the art and the state-of-thepractice in global software development (GSD). Increased globalization of software development creates software engineering challenges due to the impact of temporal, geographical and cultural differences, and requires development of techniques and technologies to address these issues. The workshop will foster interaction between practitioners and researchers and help grow a community of interest in this area. Practitioners experiencing challenges in GSD will share their concerns and successful solutions and learn from research about current investigations. Researchers addressing GSD will gain a better understanding of the key issues facing practitioners and share their work in progress with others in the field.", "num_citations": "15\n", "authors": ["1454"]}
{"title": "An industrial case study of the impact of requirements engineering on downstream development\n", "abstract": " Requirements management is being recognized as one of the most important albeit difficult phases in software engineering. The literature repeatedly cites the role of well-defined requirements and requirements management process in problem analysis and project management benefiting software development throughout the life cycle: during design, coding, testing and documentation of software. This paper reports on the findings of an investigation into industrial practice of requirements management process improvement and its effects on downstream development. The evidence reveals a strong relationship between a well-defined requirements process and increased developer productivity, improved project planning through better estimations and enhanced ability for stakeholders to negotiate project scope. These results are important since there is little empirical evidence of the actual benefits of sound\u00a0\u2026", "num_citations": "15\n", "authors": ["1454"]}
{"title": "Mining jazz: An experience report\n", "abstract": " Integrated collaborative software engineering tools such as IBM JazzTMprovide researchers opportunities to access a vast amount of information that reflects the real development activities of software teams. With all of the artifacts stored in one place and linked together, researchers can gain valuable insights about the teams\u2019 collaborative activities. We report on our experience in mining the Jazz development team repository to study collaboration in sofware develpment. In particular we explain the different options and constraints we had during our efforts to mine the Jazz repository. In addition, we show some results we obtained by studying communication practices in the Jazz project team to demonstrate our research with data obtained from the mining process.", "num_citations": "14\n", "authors": ["1454"]}
{"title": "Social networks in the study of collaboration in global software teams\n", "abstract": " Global software teams face challenges when collaborating over long distances. The Social Network approach has been used to help organizations to reveal hidden collaboration issues in global software teams by analyzing social relationships among team members. This paper discusses how social network approach has been adopted in Global Software Development research and promotes further exploration in this area.", "num_citations": "14\n", "authors": ["1454"]}
{"title": "Evaluating the effectiveness of mixed reality music instrument learning with the theremin\n", "abstract": " Learning music is a challenging process that requires years of practice to master, either with lessons from a professional teacher or through self-teaching. While practicing, students are expected to self-evaluate their performance which may be difficult without timely feedback from a professional. Research into computer-assisted music instrument tutoring (CAMIT) attempts to address this through the use of emerging technologies. In this paper, we study CAMIT for mixed reality (MR) by developing MR:emin, an immersive MR music learning environment for the theremin, an electronic music instrument that is controlled without physical contact. MR:emin integrates a physical theremin with the immersive learning environment. To better understand the effectiveness of such environments, we perform a user study with MR:emin comparing traditional music learning with two virtual learning environments, an immersive one\u00a0\u2026", "num_citations": "13\n", "authors": ["1454"]}
{"title": "Using a real-time conferencing tool in distributed collaboration: An experience report from siemens it solutions and services\n", "abstract": " Successful distributed collaboration requires support for informal communication, opportunistic interactions, and smooth and frequent shifts between synchronous and asynchronous collaboration modes. Introducing new collaboration tools for distributed interaction is often regarded as a difficult organizational endeavor, compounded by a lack of concrete, empirical evidence of expected improvements in tool-supported distributed collaboration. In this paper, we describe the introduction of the Microsoft Office Communication Server collaboration tool to improve collaboration in a distributed project at Siemens IT Solutions and Services. Improvements included (1) faster response and resolution time on issues that involve cross-site communication; (2) enhanced productivity of global teams, enhanced sense of teamwork, and motivation in the global team; and (3) flatter communication structures across sites. We discuss\u00a0\u2026", "num_citations": "13\n", "authors": ["1454"]}
{"title": "Detecting pianist hand posture mistakes for virtual piano tutoring\n", "abstract": " Incorrect hand posture is known to cause fatigue and hand injuries in pianists of all levels. Our research is intended to reduce these problems through new methods of providing direct feedback to piano students during their daily practice. This paper presents an approach to detect hand posture in RGB-D recordings of pianists\u2019 hands while practicing for use in a virtual music tutor. We do so through image processing and machine learning. To test this approach we collect data by recording the hands of two pianists during standard piano exercises. Preliminary results show the effectiveness of our methods.", "num_citations": "12\n", "authors": ["1454"]}
{"title": "Investigating collaboration driven by requirements in cross-functional software teams\n", "abstract": " Achieving effective collaboration is an ongoing challenge in software development, and requirements engineering inherits this challenge. By taking a requirements perspective on collaboration we can better understand how cross-functional teams coordinate work throughout the project life-cycle. In this paper we report on a case study of a global IT company that investigated requirements-driven collaboration in a cross-functional team. We studied collaboration by examining the congruence between the technical dimension of work and social relationships team members establish. We calculated the mismatch between the social and technical dimensions. Based on the results, we critically analyzed the applicability of congruence to the study of cross-functional software teams as well as the limitations of current socio-technical congruence measures, which have been applied to only study developer teams. Based on\u00a0\u2026", "num_citations": "12\n", "authors": ["1454"]}
{"title": "Towards Enabling Cross-Organizational Modeling in Automotive Ecosystems.\n", "abstract": " Automotive engineering is characterized by relying heavily on complex supplier networks as well as by strong dependence from hardware and software component development. OEMs (original equipment manufacturers) coordinate and integrate the work of hardware and software component suppliers and to an increasing amount develop application software themselves (component suppliers can be internal). For OEMs the transition to model-driven development promises potential reduction in the development lead-time of complex in-vehicle automotive features, such as semi-autonomous driving, but it is not without challenges. For example, the verification of such features is still performed using mainly physical properties such as hardware benches and mule vehicles. While this step is necessary, it is not sufficient, because it does not allow early verification of design decisions to the required extent. In addition, the development speed of hardware and software components is (a) limited by hardware development cycles as well as (b) slowed down by unsynchronized software development cycles of key suppliers. This prevents detailed information from being available early and potentially resulting in expensive and late changes. Understanding this situation as an ecosystem of cross-organizational collaborations allows us to reason about challenges and opportunities of the interaction between the OEM and different component-as well as tool-providers. In this paper, we report first results from an exploratory study that involved interviews with one of our industrial partners, General Motors (GM). First, we describe our understanding of the\u00a0\u2026", "num_citations": "11\n", "authors": ["1454"]}
{"title": "V: issue: lizer: exploring requirements clarification in online communication over time\n", "abstract": " This demo introduces V:ISSUE:LIZER, a tool for exploring online communication and analyzing clarification of requirements over time. V:Issue:lizer supports managers and developers to identify requirements with insufficient shared understanding, to analyze communication problems, and to identify developers that are knowledgeable about domain or project related issues through visualizations. Our preliminary evaluation shows that V:Issue:lizer offers managers valuable information for their decision making. (Demo video: http://youtu.be/Oy3xvzjy3BQ).", "num_citations": "11\n", "authors": ["1454"]}
{"title": "Can global software teams learn from military teamwork models\n", "abstract": " Examining a domain outside of traditional software development may provide opportunities to address the challenges faced by global software teams. In this position paper, we examine the military model since its spirit of cooperative teamwork is well known and clearly documented. Specifically, we explore how an underlying code of conduct and the reinforcing subculture can create highly cohesive, effective teams. Referring to military models in order to build civilian teams is not without historical precedent; we hope that this investigation will prove fruitful. Ultimately, we seek to discover the qualities of the exceptional global software developer while exploring what we believe to be a rich research opportunity.", "num_citations": "11\n", "authors": ["1454"]}
{"title": "The effects of communication mode on distributed requirements negotiations\n", "abstract": " Videoconferencing is generally considered as the most appropriate medium to conduct requirements negotiations between remote stakeholders. To improve the effectiveness of distributed requirements negotiations, drawing upon the postulates of theories on media selection, we argue that a combination of lean and rich media is needed. In this paper we empirically test the hypothesis that the early resolution of uncertainties through an asynchronous lean medium can shorten the list of open issues to be negotiated over a synchronous rich channel.", "num_citations": "10\n", "authors": ["1454"]}
{"title": "Workshop on global software development\n", "abstract": " The goal of this workshop is to bring together researchers and practitioners in trying to understand the emerging phenomenon of global software development. As we witness an increased globalization of software development, it is important that research addresses the challenges of distributed software engineering and informs the development of techniques and technologies to improve such practice.", "num_citations": "10\n", "authors": ["1454"]}
{"title": "Ecrits\u2014visualizing support ticket escalation risk\n", "abstract": " Managing support tickets in large, multi-product organizations is difficult. Failure to meet the expectations of customers can lead to the escalation of support tickets, which is costly for IBM in terms of customer relationships and resources spent addressing the escalation. Keeping the customer happy is an important task in requirements engineering, which often comes in the form of handling their problems brought forth in support tickets. Proper attention to customers, their issues, and the bottom-up requirements that surface through bug reports can be difficult when the support process involves spending a lot of time managing customers to prevent escalations. For any given support analyst, understanding the customer is achievable through time spent looking through past and present support tickets within their organization; however, this solution does not scale up to account for all support tickets across all product\u00a0\u2026", "num_citations": "9\n", "authors": ["1454"]}
{"title": "A research methodology in the study of requirements negotiations in geographically distributed software teams\n", "abstract": " This paper discusses the research methodology used in a study of requirements negotiations in geographically distributed settings. The methodology was based on a multidisciplinary paradigm that considered research methods and models from requirements engineering, soft system methodologies, group research and negotiation literature, and computer supported cooperative work. An integral part of the research methodology was the design of a laboratory study that empirically compared computer-supported distributed requirements negotiations with traditional face-to-face requirements decision meetings. The paper describes the components of the study design in the context of the research methodology, and discusses lessons learned from designing this study. Insights related to the necessity of interdisciplinary approaches to the study of RE, the intrinsic tension between control and realism of context in laboratory studies and ways in which the study brought a better understanding of a RE problem are discussed.", "num_citations": "9\n", "authors": ["1454"]}
{"title": "SACRE: A tool for dealing with uncertainty in contextual requirements at runtime\n", "abstract": " Self-adaptive systems are capable of dealing with uncertainty at runtime handling complex issues as resource variability, changing user needs, and system intrusions or faults. If the requirements depend on context, runtime uncertainty will affect the execution of these contextual requirements. This work presents SACRE, a proof-of-concept implementation of an existing approach, ACon, developed by researchers of the Univ. of Victoria (Canada) in collaboration with the UPC (Spain). ACon uses a feedback loop to detect contextual requirements affected by uncertainty and data mining techniques to determine the best operationalization of contexts on top of sensed data. The implementation is placed in the domain of smart vehicles and the contextual requirements provide functionality for drowsy drivers.", "num_citations": "8\n", "authors": ["1454"]}
{"title": "Investigating ibis in a distributed educational environment: the design of a case study\n", "abstract": " In this paper we present a first experience in conducting distributed software inspections in support of the remote communication between clients and developers collaboratively developing a requirements specification. We intend to assess if remote synchronous requirements negotiations can benefit from asynchronous discussions for reducing the number of open issues to be resolved in order to short the negotiation agenda.", "num_citations": "8\n", "authors": ["1454"]}
{"title": "Empirical studies of computer support for distributed requirements negotiation\n", "abstract": " Requirements conflicts and negotiation are critical aspects of managing software requirements. The integration of the interests of all relevant stakeholders is essential, although difficult in a software development worId characterized by a diverse stakeholder community and organizational and budgetary constraints. The combination of distributed software development and the importance of involving of all relevant stakeholders in requirements meeting leads to a pressing need for the investigation of systems to support this process.This thesis is about the application of empirical methods to understand of how stakeholders reach resolution in distributed requirements negotiations. First, it develops a methodology for empirical studies of computer support in distributed requirements negotiations. This development begins with an in-depth exploration of pertinent conceptual and methodological domains. These domains are found in diverse research areas such as requirements engineering, management and negotiation research, group research and computer-supported collaborative work. By bringing together aspects of research in these fields a novel multi-faceted methodoIogy is created.", "num_citations": "8\n", "authors": ["1454"]}
{"title": "Detecting hand posture in piano playing using depth data\n", "abstract": " We present research for automatic assessment of pianist hand posture that is intended to help beginning piano students improve their piano-playing technique during practice sessions. To automatically assess a student's hand posture, we propose a system that is able to recognize three categories of postures from a single depth map containing a pianist's hands during performance. This is achieved through a computer vision pipeline that uses machine learning on the depth maps for both hand segmentation and detection of hand posture. First, we segment the left and right hands from the scene captured in the depth map using per-pixel classification. To train the hand-segmentation models, we experiment with two feature descriptors, depth image features and depth context features, that describe the context of individual pixels' neighborhoods. After the hands have been segmented from the depth map, a posture\u00a0\u2026", "num_citations": "7\n", "authors": ["1454"]}
{"title": "How angry are your customers? Sentiment analysis of support tickets that escalate\n", "abstract": " Software support ticket escalations can be an extremely costly burden for software organizations all over the world. Consequently, there exists an interest in researching how to better enable support analysts to handle such escalations. In order to do so, we need to develop tools to reliably predict if, and when, a support ticket becomes a candidate for escalation. This paper explores the use of sentiment analysis tools on customer-support analyst conversations to find indicators of when a particular support ticket may be escalated. The results of this research indicate a considerable difference in the sentiment between escalated support tickets and non-escalated support tickets. Thus, this preliminary research provides us with the necessary information to further investigate how we can reliably predict support ticket escalations, and subsequently to provide insight to support analysts to better enable them to handle\u00a0\u2026", "num_citations": "7\n", "authors": ["1454"]}
{"title": "A case study of applying data mining to sensor data for contextual requirements analysis\n", "abstract": " Determining the context situations specific to contextual requirements is challenging, particularly for environments that are largely unobservable by system designers (e.g., dangerous system contexts of use and mobile applications). In this paper, we describe the application of data mining techniques in a case study of identifying contextual requirements for a context-aware mobile application to be used by a team of four long-distance rowers. The context of use for this application was dangerous and isolated, making it unobservable by the developers. The context situations for five mobile application requirements were defined by using a data mining algorithm applied to historical sensor data passively collected by the users while they crossed the Atlantic Ocean in a rowboat. The performance of the resulting classifiers is analyzed over time with promising results demonstrating that the data mining approach is\u00a0\u2026", "num_citations": "7\n", "authors": ["1454"]}
{"title": "Teamwork, coordination and customer relationship management skills: as important as technical skills in preparing our SE graduates\n", "abstract": " Teaching real-world software engineering (SE) skills requires innovative methods to facilitate students' learning technical as well as communication, teamwork, and analysis of ill-structured problems. In this paper we describe our experiences in designing and teaching these skills in our SE courses at the University of Victoria in the last 10 years. We describe the learning outcomes and instructional design in our courses, as well as the challenges we face.", "num_citations": "7\n", "authors": ["1454"]}
{"title": "A survey of techniques in software repository mining\n", "abstract": " Digital records of software-engineering work are left by software developers during the development process. Source code is usually kept in a software repository, and software developers use issue-tracking repositories and online project-tracking software, as well as informal documentation to support their activities. The research discipline of mining software repositories (MSR) uses these extant, digital repositories to gain understanding of the system. MSR has not been applied to model-driven development or model-driven engineering (MDE). In particular, model management deserve particular attention. Model management covers challenges associated with \u201cmaintaining traceability links among model elements to support model evolution and roundtrip engineering\u201d,\u201ctracking versions\u201d, and \u201cusing models during runtime\u201d. These problems can be addressed by investigating the models themselves and their\u00a0\u2026", "num_citations": "7\n", "authors": ["1454"]}
{"title": "The Lack of Shared Understanding of Non-Functional Requirements in Continuous Software Engineering: Accidental or Essential?\n", "abstract": " Building shared understanding of requirements is key to ensuring downstream software activities are efficient and effective. However, in continuous software engineering (CSE) some lack of shared understanding is an expected, and essential, part of a rapid feedback learning cycle. At the same time, there is a key trade-off with avoidable costs, such as rework, that come from accidental gaps in shared understanding. This tradeoff is even more challenging for non-functional requirements (NFRs), which have significant implications for product success. Comprehending and managing NFRs is especially difficult in small, agile organizations. How such organizations manage shared understanding of NFRs in CSE is understudied. We conducted a case study of three small organizations scaling up CSE to further understand and identify factors that contribute to lack of shared understanding of NFRs, and its relationship to\u00a0\u2026", "num_citations": "6\n", "authors": ["1454"]}
{"title": "GDPR compliance in the context of continuous integration\n", "abstract": " The enactment of the General Data Protection Regulation (GDPR) in 2018 forced any organization that collects and/or processes EU-based personal data to comply with stringent privacy regulations. Software organizations have struggled to achieve GDPR compliance both before and after the GDPR deadline. While some studies have relied on surveys or interviews to find general implications of the GDPR, there is a lack of in-depth studies that investigate compliance practices and compliance challenges of software organizations. In particular, there is no information on small and medium enterprises (SMEs), which represent the majority of organizations in the EU, nor on organizations that practice continuous integration. Using design science methodology, we conducted an in-depth study over the span of 20 months regarding GDPR compliance practices and challenges in collaboration with a small, startup organization. We first identified our collaborator's business problems and then iteratively developed two artifacts to address those problems: a set of operationalized GDPR principles, and an automated GDPR tool that tests those GDPR-derived privacy requirements. This design science approach resulted in four implications for research and for practice. For example, our research reveals that GDPR regulations can be partially operationalized and tested through automated means, which improves compliance practices, but more research is needed to create more efficient and effective means to disseminate and manage GDPR knowledge among software developers.", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Can a machine learn through customer sentiment?: A cost-aware approach to predict support ticket escalations\n", "abstract": " Given the connection between customer happiness and support ticket escalation, we describe an approach that 1) analyzes the emotions in conversations between a customer and a support analyst and 2) provides organizations with a cost-based mechanism to evaluate machine-learning algorithms trained on emotion-related features to predict support ticket escalations.", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Patterns of collaboration driven by requirements in agile software development teams\n", "abstract": " Context and motivation: Due to their emphasis on communication, agile methods and requirements engineering activities seem to mutually support each other in software development. Question/Problem: But how do agile teams manage the collaboration required to perform requirements related activities, especially when their members work from geographically distributed locations? Principle Ideas/Results: In this paper we investigated the requirements-driven collaboration translated as communication and awareness among agile teams from four distributed projects. We identified some collaboration patterns that are similar to those reported in the literature for the traditional, non-agile teams, but also some more specific to agile teams. For instance, we found that the number of team members involved in actual collaboration is different than the number of assigned members, that little communication\u00a0\u2026", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Tool usage within a globally distributed software development course and implications for teaching\n", "abstract": " There have been many case studies looking at the work processes and use of tools within globally distributed software engineering teams. These studies usually use interviews, or other qualitative methods to ascertain their results. Additionally they may use data mining on particular modes of communication. In this paper, we report from observations in a Global Software Development class where students were free to choose the tools that best suited their needs, with minimal constraints. We discuss tool usage in three student teams and show how communication can be visually compared and correlated with implementation effort. We provide GSD teaching implications for tool selection and for monitoring progress of student teams. Finally, we suggest as a point of discussion that lightweight tools are not only preferred by students, but provide the same learning effect as more feature-complex collaboration\u00a0\u2026", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Towards understanding requirements engineering in IT ecosystems\n", "abstract": " IT ecosystems are large software systems that consist of various, constantly interacting and partly autonomous subsystems as well as stakeholders of the overall system. Because of these specific properties, such systems are a highly relevant research area in the field of requirements engineering. In this paper we describe our approach to investigate and to model the flow of requirements in IT ecosystems. We are currently applying this approach in a case study in the IBM Collaborative Lifecycle Management project. This project is of particular relevance to the requirements engineering community because of its open commercial approach. This paper contributes by highlighting challenges of requirements engineering in IT ecosystems, i.e. contextualizing requirements, mapping them to subsystems, and communicating them to stakeholders. We define research questions and describe a mixed method approach to\u00a0\u2026", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Chat to succeed\n", "abstract": " Effective coordination within a project is one key factor to successful software projects. While research shows that communication structures can predict the outcome of an integration build, we would like to take a step further making recommendations about who should collaborate together. By leveraging information about artifact dependencies and communication among team members, we can recommend which gaps between dependencies and communication should be resolved to ensure a successful project.", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Viewing Project Collaborators WhoWork on Interrelated Requirements\n", "abstract": " Project collaborators in a software development project need to stay aware not only of changes to requirements and other artifacts, but also of each other's current work. The set of team members working on a requirement is dynamic, and team members who were not assigned to the requirement in the plan may be involved. If this requirement changes, those team members who are dependent on that requirement must be notified quickly before they do outdated work. However, project plans often do not provide an easy method of listing all of the emergent team members who should be notified of changes to a requirement. We propose a requirements-dependency diagram that displays interdependent requirements and team members who are assigned to these interdependent requirements. The visualization highlights prominent collaborators, lists each collaborator and each requirement only once, marks emergent\u00a0\u2026", "num_citations": "6\n", "authors": ["1454"]}
{"title": "Continuously managing nfrs: Opportunities and challenges in practice\n", "abstract": " Non-functional requirements (NFR), which include performance, availability, and maintainability, are vitally important to overall software quality. However, research has shown NFRs are, in practice, poorly defined and difficult to verify. Continuous software engineering practices, which extend agile practices, emphasize fast paced, automated, and rapid release of software that poses additional challenges to handling NFRs. In this multi-case study we empirically investigated how three organizations, for which NFRs are paramount to their business survival, manage NFRs in their continuous practices. We describe four practices these companies use to manage NFRs, such as offloading NFRs to cloud providers or the use of metrics and continuous monitoring, both of which enable almost real-time feedback on managing the NFRs. However, managing NFRs comes at a costas we also identified a number of challenges\u00a0\u2026", "num_citations": "5\n", "authors": ["1454"]}
{"title": "A field study of modellers at work\n", "abstract": " Knowing the impact in real settings of a software development approach is beneficial to both the industry and the research community. In this paper, we report on a field study we conducted at General Motors with the intent of understanding whether the organization was achieving some of the intended benefits of introducing a model-driven approach to software engineering. This study involved both observations and interviews. We found that several factors are still limiting the productivity increase claimed by MDE.", "num_citations": "5\n", "authors": ["1454"]}
{"title": "Practice: Requirements Engineering in Global Teams\n", "abstract": " This chapter contains sections titled:   Background   Results   Take\u2010Away Tips", "num_citations": "5\n", "authors": ["1454"]}
{"title": "An empirical study of a multimedia group support system for distributed software requirements meetings\n", "abstract": " Supporting geographically distributed workgroups in software development is becoming a necessity in today's world. Requirements meetings that bring together various stakeholders in resolving requirements conflicts or addressing strategic issues are an integral part of software development. Requirements engineering is a task difficult enough when done locally\u2014but it is even more difficult when cross-functional stakeholder groups specify requirements across cultural, language and time zone boundaries. In this paper we report on our evaluation of a Web-based meeting system (Microsoft's Net-Meeting) for distributed requirements meetings. The system incorporated high quality audio/ video channels and real-time access to shared applications, and emerged as a meeting tool appropriate for requirements communication. An exploratory study was designed to investigate the use of the group support system in\u00a0\u2026", "num_citations": "5\n", "authors": ["1454"]}
{"title": "Customer support ticket escalation prediction using feature engineering\n", "abstract": " Understanding and keeping the customer happy is a central tenet of requirements engineering. Strategies to gather, analyze, and negotiate requirements are complemented by efforts to manage customer input after products have been deployed. For the latter, support tickets are key in allowing customers to submit their issues, bug reports, and feature requests. If insufficient attention is given to support issues, however, their escalation to management becomes time-consuming and expensive, especially for large organizations managing hundreds of customers and thousands of support tickets. Our work provides a step toward simplifying the job of support analysts and managers, particularly in predicting the risk of escalating support tickets. In a field study at our large industrial partner, IBM, we used a design science research methodology to characterize the support process and data available to IBM\u00a0\u2026", "num_citations": "4\n", "authors": ["1454"]}
{"title": "Integrating data mining into feedback loops for predictive context adaptation\n", "abstract": " Requirements for today's systems are increasingly valid only within certain operating contexts. Requirements engineering and implementation stages of system development must carefully consider how to integrate evolving context related to specific requirements in order for the system to stay relevant and  flexible. In this paper we propose to use data mining techniques for predictive context adaptation. Our approach leverages data collected from the past and decides, based on this historical data, which context conditions to monitor in order to predictively identify when a system needs to be adapted to fulfill a particular requirement. We demonstrate our approach on an adaptive mobile application to support the coordination of a team of rowers in an environment with a continually changing operational context.", "num_citations": "4\n", "authors": ["1454"]}
{"title": "Towards patterns to enhance the communication in distributed software development environments\n", "abstract": " Distributed Software Development (DSD) is an emerging research area in software engineering. Several conducted research studies identified similar communication problems among DSD teams and tried to solve them. In this paper we present patterns that we have identified while surveying state of the art research studies. The patterns can help to organize DSD teams better in order to enhance their communication. We also highlight some potential future research challenges.", "num_citations": "4\n", "authors": ["1454"]}
{"title": "Global software development: where are we headed?\n", "abstract": " Global software development: where are we headed? | Software Process: Improvement and Practice ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Software Process: Improvement and Practice Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsSoftware Process: Improvement and PracticeVol. , No. Global software development: where are we headed? article Global software development: where are we headed? Share on Authors: Daniela Elena Herlea Damian profile image Daniela Damian Department of Computer Science, University of Victoria, Engineering-Computer Science Building (ECS), Room 504, PO Box 3055, STN CSC, Victoria, BC\u2026", "num_citations": "4\n", "authors": ["1454"]}
{"title": "Exploring the role of requirements engineering in improving risk management\n", "abstract": " There is limited evidence (Brooks (1987), Fosberg and Mooz (2000) and S. Robertson and J. Robertson (1999)) which supports claims in literature that requirements engineering (RE) can have positive effects on an organization's ability to manage project risk. Such evidence can serve to motivate industrial adoption of requirements engineering techniques, but it can also contribute to our understanding of the role of RE in supporting project management activities. This paper presents an analysis of the causal relationship between RE practice and benefits in risk management in one software organization that revised its RE process and enjoyed improvements in its project management activities. In particular, we present insights from our investigation of the interaction between the RE process and the processes of project planning and SQA. We found that elements of the RE process such as feature decomposition\u00a0\u2026", "num_citations": "4\n", "authors": ["1454"]}
{"title": "Osc-xr: A toolkit for extended reality immersive music interfaces\n", "abstract": " Currently, developing immersive music environments for extended reality (XR) can be a tedious process requiring designers to build 3D audio controllers from scratch. OSCXR is a toolkit for Unity intended to speed up this process through rapid prototyping, enabling research in this emerging field. Designed with multi-touch OSC controllers in mind, OSC-XR simplifies the process of designing immersive music environments by providing prebuilt OSC controllers and Unity scripts for designing custom ones. In this work, we describe the toolkit\u2019s infrastructure and perform an evaluation of the controllers to validate the generated control data. In addition to OSC-XR, we present UnityOscLib, a simplified OSC library for Unity utilized by OSC-XR. We implemented three use cases, using OSCXR, to inform its design and demonstrate its capabilities. The Sonic Playground is an immersive environment for controlling audio patches. Hyperemin is an XR hyperinstrument environment in which we augment a physical theremin with OSC-XR controllers for real-time control of audio processing. Lastly, we add OSC-XR controllers to an immersive T-SNE visualization of music genre data for enhanced exploration and sonification of the data. Through these use cases, we explore and discuss the affordances of OSC-XR and immersive music interfaces.", "num_citations": "3\n", "authors": ["1454"]}
{"title": "Predicting developers' IDE commands with machine learning\n", "abstract": " When a developer is writing code they are usually focused and in a state-of-mind which some refer to as flow. Breaking out of this flow can cause the developer to lose their train of thought and have to start their thought process from the beginning. This loss of thought can be caused by interruptions and sometimes slow IDE interactions. Predictive functionality has been harnessed in user applications to speed up load times, such as in Google Chrome's browser which has a feature called\" Predicting Network Actions\". This will pre-load web-pages that the user is most likely to click through. This mitigates the interruption that load times can introduce. In this paper we seek to make the first step towards predicting user commands in the IDE. Using the MSR 2018 Challenge Data of over 3000 developer session and over 10 million recorded events, we analyze and cleanse the data to be parsed into event series, which can\u00a0\u2026", "num_citations": "3\n", "authors": ["1454"]}
{"title": "Advanced methods for data mining\n", "abstract": " Data mining offers a large spectrum of information retrieval techniques for many fields, like health care, human resources, banking, performance efficiency in managerial systems, etc. Web mining is the application of data mining techniques to discover user web navigation patterns in web log data. In this paper we present a Web Mining model used for estimation of the length of typical trails in a web site.", "num_citations": "3\n", "authors": ["1454"]}
{"title": "Sosiologien og menneskerettighetene\n", "abstract": " oppsummert, at menneskerettighetene opererer med en a-historisk og kontekstl\u00f8s universalisme og normativitet som i sitt vesen gj\u00f8r mennesket til et frittsvevende sosialt og kulturelt subjekt, alts\u00e5 et abstrakt vesen uten bindinger og forpliktelser av sosial karakter. En slik forst\u00e5else var uforenlig med et empirisk orientert sosiologisk prosjekt som nettopp var opptatt av slike forhold. For Durkheim var de for eksempel mer \u00e5 forst\u00e5 som uttrykk for den moderne individualisme som han betraktet som problematisk. 3 I og for seg er det derfor ikke vanskelig \u00e5 forst\u00e5 at sosiologien som en empirisk orientert samfunnsvitenskap kan ha lett for \u00e5 avvise menneskerettighetene som en moderne humaniserende metafysikk som bryter sammen i paradoksi og selvmotsigelser med en gang man begynner \u00e5 g\u00e5 n\u00e6rmere inn i tematikken. Man opplever kanskje et h\u00f8yt motiverende pathos som synes \u00e5 virke relativt uavhengig av den realitet som jo er rettighetenes grunnlag og referanse. Samtidig er det alts\u00e5 slik at vi her snakker om en helt sentral mekanisme for regulering av sosialt liv i det moderne samfunnet, og det er p\u00e5 det grunnlaget vi m\u00e5 s\u00f8ke \u00e5 forst\u00e5 og forklare denne tematikken. Sosiologien m\u00e5 med andre ord betrakte hvordan samfunnet pr\u00f8ver \u00e5 regulere forholdet mellom mennesker og mellom menneske og samfunn gjennom \u00e5 tildele mennesker rettigheter utelukkende i kraft av at de er mennesker. Hvordan kan s\u00e5 en sosiologisk tiln\u00e6rming utformes? Her er det sikkert flere veier \u00e5 g\u00e5, alt etter hvilke perspektiv man anlegger. I det f\u00f8lgende skal vi skissere noen muligheter som gir seg, og vi har valgt \u00e5 organisere teksten i tre seksjoner. Den f\u00f8rste muligheten\u00a0\u2026", "num_citations": "3\n", "authors": ["1454"]}
{"title": "Impact of knowledge networking and organizational learning on the performance of organizations\n", "abstract": " This paper analyzes the impact of different kinds of change on the performance of an organization, depending on the underlying organizational form: hierarchical organizations are optimized top-down with only formal communication, while in networked organizations members have many lateral ties and informal communication channels are available. Based on the hypothesis that in face of change networked organizations learn faster than purely hierarchical ones, a model for performance comparison between these two organizational types is introduced. A theorem is presented and proved, which shows that as long as the communication overhead required for networking activities is smaller than a certain amount, an organization with networking culture and structures performs better than a corresponding purely hierarchical organization. Finally, a series of case studies providing evidence supporting the\u00a0\u2026", "num_citations": "3\n", "authors": ["1454"]}
{"title": "The use of a multimedia group support system for distributed software requirements meetings\n", "abstract": " Supporting geographically distributed workgroups in software development is becoming a necessity in today's world. In this paper we report on our evaluation of a Web-based group support system(Microsoft's NetMeeting) for distributed requirements meetings. The system incorporated high quality audio/video channels and real-time access to shared applications, and emerged as a meeting tool appropriate for requirements communication. An exploratory study was designed to investigate the use of the group support system in several important distributed group settings of requirements meetings. Technological impacts on group performance are identified and findings of technology usage patterns in computer-mediated distributed software requirements meetings are discussed. The empirical findings indicate successful support for distributed requirements meetings and allow the formulation of recommendations for software practitioners and designers, in providing groupware support for requirements meetings in distributed structures.", "num_citations": "3\n", "authors": ["1454"]}
{"title": "Token-Passing Bus Access Method and Physical Layer Specifications\n", "abstract": " Recent advancements in communication systems enable the collaboration of virtual software design teams, breaking the barriers of time and distance. In this paper we address a critical aspect of the collaborative work of virtual project teams, the negotiation of requirements in software development. We present an exploratory study of the effects of multimedia communication systems on group negotiation performance and behavior. An emphasis is placed on the development of a research methodology that uses multiple methods in investigating a complex phenomenon. Contrary to the belief that face-to-face interaction increases performance, our laboratory findings suggest that groups in face-to-face meetings perform no better than video-conferenced groups; moreover, we identified a particular distributed virtual team configuration that was qualitatively more conducive to requirements negotiation than face-to-face meetings.", "num_citations": "3\n", "authors": ["1454"]}
{"title": "Towards a Live Anonymous Question Queue To Address Student Apprehension\n", "abstract": " In today's university climate many first and second year classes have over a hundred students. Large classrooms make some students apprehensive about asking questions. An anonymous method of submitting questions to an instructor would allow students to ask their questions without feeling apprehensive. In this paper we propose a Live Anonymous Question Queue (LAQQ), a system that facilitates anonymous question submissions in real time to mitigate student apprehension, increase student participation, and provide real-time feedback to the instructor. To study the necessary features of an LAQQ, we conducted a study of a system, namely Google Moderator, which best approached our concept of an LAQQ. We deployed Google moderator in large lectures and studied its support of a number of features that we envisioned for an LAQQ. Through our class observations, interviews with instructors, and surveys with the students, our results suggest that an LAQQ system must provide support for: notification of question submission to provide awareness for the instructor, and context for questions to allow an instructor to easily answer a question. Additionally our results suggest that an LAQQ system must be accessible and usable on multiple platforms. Finally our results suggest that in order to be successful in the classroom an LAQQ system must be fully adopted by the instructor and the classroom organizational structure must change to accommodate the use of the LAQQ.", "num_citations": "2\n", "authors": ["1454"]}
{"title": "Time series applied in Romanian economy\n", "abstract": " This article presents a practical application of time series analysis in Romanian economy. Time series\u2013based forecasting possesses has wide practical applications due to its capabilities for accurate prediction, using past values, with small error. Time series forecasting often uses Box-Jenkins Methodology also known as ARIMA. The subject of time series is of considerable interest, especially among researchers in economics, engineering, medicine and so on. The outstanding Integrated Auto Regressive Moving Average Model ARIMA (p, d, q) is widespread and very used in Finance and Economics.", "num_citations": "2\n", "authors": ["1454"]}
{"title": "An awareness mechanism in support of eclipse to improve requirements change propagation\n", "abstract": " Software requirements change during the software development process due to external and internal reasons. If changes are not propagated in a timely manner to all relevant Eclipse users, developers lose time re-writing functionality that has been modified.", "num_citations": "2\n", "authors": ["1454"]}
{"title": "Leveraging Design Patterns in Global Software Development: A Proposal for a GSD Communication Pattern Language\n", "abstract": " We describe four communication patterns that emerged in our global software development experiences. We draw upon both our own experiences and past experiences described in literature to identify instances and applications of these patterns. We employ known software engineering patterns to formalize our description of these communication patterns. In casting the formal software engineering patterns in the context of global software development communication, our aim is to leverage familiarity and experience.", "num_citations": "2\n", "authors": ["1454"]}
{"title": "The international workshop on global software development\n", "abstract": " The goal of this workshop is to bring together researchers and practitioners in trying to understand the emerging phenomenon of global software development. As we witness an increased globalization of software development, it is important that research addresses the challenges of distributed software engineering, identifies the impact of geographical and cultural differences on software engineering practice, and informs the development of techniques and technologies to improve such practice.The workshop is a continuation of the workshops held in the last four years at ICSE, on the topic of\" Software Engineering over the Internet\". In particular, it intends to provide a forum for discussion of the problems of software development in geographically distributed structures, of the factors that contribute to the success or failure of virtual corporations, and to ways in which Internet technologies can be used to overcome current problems. Further, the workshop will discuss how standard software engineering practice can benefit from open-source approaches and vice-versa. A major focus is on empirical studies of global software development practices and of methods and technologies employed to overcome geographical and cultural differences in multi-site projects.", "num_citations": "2\n", "authors": ["1454"]}
{"title": "Negotiation Behaviour & Group interaction in face-to-face & distributed requirements negotiations: 4 case studies\n", "abstract": " OPUS at UTS: Negotiation Behaviour & Group interaction in face-to-face & distributed requirements negotiations: 4 case studies - Open Publications of UTS Scholars Skip navigation OPUS at UTS | Open Publications of UTS Scholars Statistics Help About OPUS How to Deposit Managing Copyright Notice Browse UTS Organisational Groups Browse Items by: Issue Date Author Title Type ARC/NHRMC Funded Search OPUS 1.OPUS at UTS 2.Faculty of Engineering and Information Technology 3.School of Software Negotiation Behaviour & Group interaction in face-to-face & distributed requirements negotiations: 4 case studies Damian, DE Permalink Export RIS format Publication Type: Conference Citation: Proceedings of AWRE 2001, 2001 Issue Date: 2001-01 Closed Access Filename Description Size Thumbnail 2005001221.pdf 1.09 MB Adobe PDF View/Open Copyright Clearance Process Recently Added In \u2026", "num_citations": "2\n", "authors": ["1454"]}
{"title": "Passive haptic deformation using force bounding\n", "abstract": " Haptic interaction with deformable virtual environments demands high control rates in order to provide realistic interaction forces to the user. However, the update rates of physically-based simulations can be slow and variable for complex deformations. This paper bridges the rate gap between the haptic controller and an arbitrary virtual environment by interposing a local model of interaction between the two. The local model speeds up force feedback calculations by approximating the geometry and stiffness of the virtual constraints. It also maintains the haptic simulation stable by using a force bounding approach to limit the energy transferred to the user from the virtual environment.", "num_citations": "1\n", "authors": ["1454"]}
{"title": "Methodology and culture: drivers of mediocrity in software engineering?\n", "abstract": " Methodology implementation failure is attributed to developer mediocrity (by management)\u2013not to organizational mediocrity (rigidity or control-driven, process-driven management), or to a lack of adaptation capability in the methodology. In supporting software construction as a creative process, however, we must promote excellence rather than conformity. We argue that we\u2013through principled research--must pay attention to the interplay between methodology and culture\u2013the local adaptations needed to make things work, understand how the two co-evolve and how they may contribute together to software quality.", "num_citations": "1\n", "authors": ["1454"]}
{"title": "Instructional strategies in the EGRET course: an international graduate forum on becoming a researcher\n", "abstract": " In today's knowledge economy, graduate students in the field of Computer Science are increasingly required to develop sophisticated, multi-faceted knowledge of conducting research across multiple contexts and countries. This paper reports the experience of teaching a course to prepare Computer Science graduate students for conducting research in the international community. The course emphasized development of skills critical for a successful research career in computer science, and included construction of knowledge as well as hands-on application of instructional content. The intended learning outcomes included (a) gaining familiarity with research design and methodologies in computer science,(b) preparing and delivering research presentations,(c) reviewing the literature,(d) reading and writing research papers,(e) writing and evaluating research proposals, and (f) networking in the international\u00a0\u2026", "num_citations": "1\n", "authors": ["1454"]}
{"title": "Web Services\u2013Opportunities and Challenges\n", "abstract": " Appearance of Web Services as a technology is tightly connected with initiatives to create ecommerce systems based on Internet and Enterprise Application Integration problem. In this paper we present the technical opportunities and challenges of using Web Services.", "num_citations": "1\n", "authors": ["1454"]}
{"title": "Dynamic control of genetic algorithms using fuzzy logic techniques\n", "abstract": " This paper presents a new approach for solving the optimal power flow problem. In this approach we propose to use fuzzy logic techniques to dynamically control parameter settings of genetic algorithms (GA's). We describe the dynamic parametric GA: a GA that uses a fuzzy knowledge base system to control GA parameters such as the mutation and the crossover probability. We then introduce a technique for automatically design and tune the fuzzy knowledge base system using GA's. The proposed method was applied to a practical 14 - bus system to show its feasibility and capabilities. The numerical and graphical results show that the proposed approach is faster and mort robust than the GA's.", "num_citations": "1\n", "authors": ["1454"]}
{"title": "On some probabilistic models for software reliability\n", "abstract": " Software reliability is one of the important parameters of software quality and system dependability and it is defined as the probability of failure-free software operation in a specified environment for a specified period of time. A software reliability model describes software failures as a random process which is characterized in either times of failures or the number of failures at fixed times.", "num_citations": "1\n", "authors": ["1454"]}
{"title": "A probabilistic model for web usage mining\n", "abstract": " In this paper we propose the DTTS method for determining the typical trails in a web site. We use a probabilistic model for a web site and we use the entropy of a Markov chain in order to compute the length of the typical trails.", "num_citations": "1\n", "authors": ["1454"]}
{"title": "and requirements management\n", "abstract": " GILD and requirements management Page 1 Course Introduction 1 Requirements Engineering, Daniela Damian GILD project -- Feb 5, 2003 GILD and requirements management Daniela Damian University of Victoria Requirements Engineering, Daniela Damian GILD project -- Feb 5, 2003 Outline \u2022 What is requirements and the process of their \u201cengineering\u201d \u2022 Goals and requirements, and our project \u2022 What vs. How or Requirements vs. Design \u2022 Requirements and project management - Activity phases - Practical considerations Requirements Engineering, Daniela Damian GILD project -- Feb 5, 2003 Requirements and their \u201cengineering\u201d in Software Engineering A requirement is a feature of the system or a description of something the system is capable of doing in order to fulfill the system\u2019s purpose. Related to: \u2022 Motivations, interests, goals, needs, wishes \u2022 Different stakeholders in the project Requirements \u201c\u2026", "num_citations": "1\n", "authors": ["1454"]}