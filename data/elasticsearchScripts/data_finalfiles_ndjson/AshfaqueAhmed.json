{"title": "Software project management: A process-driven approach\n", "abstract": " To build reliable, industry-applicable software products, large-scale software project groups must continuously improve software engineering processes to increase product quality, facilitate cost reductions, and adhere to tight schedules. Emphasizing the critical components of successful large-scale software projects, Software Project Management: A Process-Driven Approach discusses human resources, software engineering, and technology to a level that exceeds most university-level courses on the subject. The book is organized into five parts. Part I defines project management with information on project and process specifics and choices, the skills and experience needed, the tools available, and the human resources organization and management that brings it all together. Part II explores software life-cycle management. Part III tackles software engineering processes and the range of processing models devised by several domestic and international organizations. Part IV reveals the human side of project management with chapters on managing the team, the suppliers, and the customers themselves. Part V wraps up coverage with a look at the technology, techniques, templates, and checklists that can help your project teams meet and exceed their goals. A running case study provides authoritative insight and insider information on the tools and techniques required to ensure product quality, reduce costs, and meet project deadlines. Praise for the book: This book presents all aspects of modern project management practices... includes a wealth of quality templates that practitioners can use to build their own tools.... equally useful to students\u00a0\u2026", "num_citations": "47\n", "authors": ["1271"]}
{"title": "Software testing as a service\n", "abstract": " In today's unforgiving business environment where customers demand zero defect software at lower costs-it is testing that provides the opportunity for software companies to separate themselves from the competition. Software Testing as a Service explains, in simple language, how to use software testing to improve productivity, reduce time to market, and reduce costly errors. It explains how the normal functions of manufacturing can be applied to commoditize the software testing service to achieve consistent quality across all software projects. This up-to-date reference reviews different software testing tools, techniques, and practices and provides succinct guidance on how to estimate costs, allocate resources, and make competitive bids. Replete with examples and case histories, this resource illustrates how proper planning can lead to the creation of software that's head and shoulders above the competition.", "num_citations": "28\n", "authors": ["1271"]}
{"title": "Foundations of Software Engineering\n", "abstract": " The best way to learn software engineering is by understanding its core and peripheral areas. Foundations of Software Engineering provides in-depth coverage of the areas of software engineering that are essential for becoming proficient in the field. The book devotes a complete chapter to each of the core areas. Several peripheral areas are also explained by assigning a separate chapter to each of them. Rather than using UML or other formal notations, the content in this book is explained in easy-to-understand language. Basic programming knowledge using an object-oriented language is helpful to understand the material in this book. The knowledge gained from this book can be readily used in other relevant courses or in real-world software development environments. This textbook educates students in software engineering principles. It covers almost all facets of software engineering, including requirement engineering, system specifications, system modeling, system architecture, system implementation, and system testing. Emphasizing practical issues, such as feasibility studies, this book explains how to add and develop software requirements to evolve software systems. This book was written after receiving feedback from several professors and software engineers. What resulted is a textbook on software engineering that not only covers the theory of software engineering but also presents real-world insights to aid students in proper implementation. Students learn key concepts through carefully explained and illustrated theories, as well as concrete examples and a complete case study using Java. Source code is also available on the\u00a0\u2026", "num_citations": "7\n", "authors": ["1271"]}
{"title": "The SAP materials management handbook\n", "abstract": " Although tens of thousands of global users have implemented Systems, Applications, and Products (SAP) for enterprise data processing for decades, there has been a need for a dependable reference on the subject, particularly for SAP materials management (SAP MM). Filling this need, The SAP Materials Management Handbook provides a complete understandi", "num_citations": "5\n", "authors": ["1271"]}