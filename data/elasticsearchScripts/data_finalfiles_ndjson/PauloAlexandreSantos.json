{"title": "The Usability Argument for Refinement Typed Genetic Programming\n", "abstract": " The performance of Evolutionary Algorithms is frequently hindered by arbitrarily large search spaces. In order to overcome this challenge, domain-specific knowledge is often used to restrict the representation or evaluation of candidate solutions to the problem at hand. Due to the diversity of problems and the unpredictable performance impact, the encoding of domain-specific knowledge is a frequent problem in the implementation of evolutionary algorithms. We propose the use of Refinement Typed Genetic Programming, an enhanced hybrid of Strongly Typed Genetic Programming (STGP) and Grammar-Guided Genetic Programming (GGGP) that features an advanced type system with polymorphism and dependent and refined types. We argue that this approach is more usable for describing common problems in machine learning, optimisation and program synthesis, due to the familiarity of the language (when\u00a0\u2026", "num_citations": "3\n", "authors": ["2137"]}
{"title": "Refined typed genetic programming as a user interface for genetic programming\n", "abstract": " Evolutionary algorithms often have to balance local search with the evolutionary search. Restricting the language of individuals acts as local search inside a Genetic Programming (GP) approach. We propose the use of Refined Typed Genetic Programming, an enhanced hybrid of Strongly Typed Genetic Programming (STGP) and Grammar-Guided Genetic Programming (GGGP) that features an advanced type system with polymorphism and dependent refinements. This approach allows the end-user to express the restrictions on the search problem in the same language as the solution.", "num_citations": "2\n", "authors": ["2137"]}