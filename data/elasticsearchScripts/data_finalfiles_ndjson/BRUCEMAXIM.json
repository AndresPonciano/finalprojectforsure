{"title": "Wireless sensor networks: Current status and future trends\n", "abstract": " Wireless sensor networks (WSNs) utilize fast, cheap, and effective applications to imitate the human intelligence capability of sensing on a wider distributed scale. But acquiring data from the deployment area of a WSN is not always easy and multiple issues arise, including the limited resources of sensor devices run with one-time batteries. Additi", "num_citations": "164\n", "authors": ["43"]}
{"title": "Dimensionality, internal consistency and interrater reliability of clinical performance ratings\n", "abstract": " A total of 6444 ratings of the financial performance of 424 third\u0393\u00c7\u00c9 and fourth\u0393\u00c7\u00c9year medical students were made by house officers and attending teachers during 12 separate internal medicine rotations. Ratings were based on 13 behaviourally anchored rating scales. One rating was randomly selected per student per evaluator type (house officer and attending teacher) during each of the 12 rotation periods. Ratings were factor analysed separately within each rotation period. Two factors emerged consistently, and congruence coefficients across the 12 occasions were high (0.88 or greater). The factors were labelled \u0393\u00c7\u00ffproblem\u0393\u00c7\u00c9solving (10 items) and \u0393\u00c7\u00ffinterpersonal skills\u0393\u00c7\u00d6 (three items) on the basis of their content. Internal consistency coefficients of the indices constructed from items in the two factors and the total of the 13 items were high (0.9 or greater) and did not differ substantially when computed separately on the\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "61\n", "authors": ["43"]}
{"title": "Multi-objective code-smells detection using good and bad design examples\n", "abstract": " Code-smells are identified, in general, by using a set of detection rules. These rules are manually defined to identify the key symptoms that characterize a code-smell using combinations of mainly quantitative (metrics), structural, and/or lexical information. We propose in this work to consider the problem of code-smell detection as a multi-objective problem where examples of code-smells and well-designed code are used to generate detection rules. To this end, we use multi-objective genetic programming (MOGP) to find the best combination of metrics that maximizes the detection of code-smell examples and minimizes the detection of well-designed code examples. We evaluated our proposal on seven large open-source systems and found that, on average, most of the different five code-smell types were detected with an average of 87\u252c\u00e1% of precision and 92\u252c\u00e1% of recall. Statistical analysis of our experiments\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "53\n", "authors": ["43"]}
{"title": "Closing the loop: Assessment and accreditation\n", "abstract": " Program assessment has become an important part of the accreditation process for virtually every educational institution. As in all process improvement activities organizations need to establish goals and objectives prior to determining outcome measures used to monitor the organization's progress toward meeting these goals. This paper describes the evolving assessment plan used by the Computer and Information Science department to assess student performance in its three undergraduate degree programs in computer science, information systems, and software engineering.", "num_citations": "37\n", "authors": ["43"]}
{"title": "Evaluating the medical history: observation versus write-up review.\n", "abstract": " Attempted to determine the extent to which preceptor ratings of approximately 80 sophomore medical students' ability to obtain specific historical data of patients correlated with a standardized, criterion-based methodology for assessing student documentation of historical data. Findings indicate that, while preceptor ratings of Ss' data-elicitation skills were correlated with their ratings of Ss' interview-process skills and the time spent by the preceptor observing the interview, checklist scoring of Ss' historical documentations was not correlated with preceptor ratings. Findings suggest that a criterion-based evaluation of the student's patient write-up is a less faculty-intensive and more reliable method of evaluating medical student data-collection skills than direct observation of the student\u0393\u00c7\u00f4patient encounter.(11 ref)(PsycINFO Database Record (c) 2016 APA, all rights reserved)", "num_citations": "33\n", "authors": ["43"]}
{"title": "Medical education in facilities for the elderly: Impact on medical students, facility staff, and residents\n", "abstract": " The development of positive attitudes toward elderly patients has been identified as being an important factor in providing quality geriatric care. Medical students (N=234) interviewed elderly individuals in three types of facilities, ranging from independent apartment living to nursing homes, as part of a required medical interviewing course. The students' attitudes were measured by an Attitudes Toward the Elderly scale before and after this course. Analyses disclosed significant posttest improvement in students' attitudes concerning the functioning, integrity, and personal acceptability of the elderly at all sites, except for attitudes toward functioning at nursing home sites. Staff and residents of participating facilities rated the experience favorably. This study shows that students' attitudes toward the elderly can be positively changed through incorporation of training at appropriate community facilities for the elderly into\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "30\n", "authors": ["43"]}
{"title": "Accurate correction of surface noises of polygonal meshes\n", "abstract": " In this paper we propose a new algorithm for accurate correction of surface noises of polygonal meshes. It consists of three basic components: (a) feature\u0393\u00c7\u00c9preserving pre\u0393\u00c7\u00c9smoothing; (b) partitioning of feature and non\u0393\u00c7\u00c9feature regions; (c) second\u0393\u00c7\u00c9order predictor for non\u0393\u00c7\u00c9feature regions and median filter for feature regions. The unique contributions of our approach include (a) an idea of partitioning an input surface into feature and non\u0393\u00c7\u00c9feature regions so that different smoothing algorithms, which are best suited for either feature or non\u0393\u00c7\u00c9feature regions can be, respectively, applied; (b) a second\u0393\u00c7\u00c9order predictor that provides higher smoothing accuracy and better convergence on smoothly curved surfaces. In comparison with several existing algorithms, our algorithm is evaluated quantitatively in terms of surface normal and vertex distance error metrics. Numerical experiments indicate the effectiveness of our approach in\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "29\n", "authors": ["43"]}
{"title": "A Survey of Sensor Network Applications and Architectural Components.\n", "abstract": " Wireless sensor networks have always been designed for monitoring physical environments and reporting the obtained data to a central collection point, called base station (or sink), which will process and analyze them. This type of network consists of tiny, battery-powered devices, called sensor nodes, which are able to store and process data, and communicate results (wirelessly) to the external world. Furthermore, these sensor nodes have the capability of sensing data, such as temperature, sound, light, and vibration, to name a few, and sending them to the sink. A wireless sensor network (WSN) is a set of sensor nodes that collaborate to successfully accomplish their monitoring task by communicating with each other via multi-hop, wireless links. The design of WSNs faces a major problem due to the very scarce resources of the sensor nodes, such as battery power (or energy), CPU, and bandwidth, to name a\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "28\n", "authors": ["43"]}
{"title": "The Ideas of Algebra, K-12. 1988 Yearbook.\n", "abstract": " This volume is organized into six parts. Chapters 1-5, which make up Part 1, first discuss the forces impinging on algebra in the curriculum and suggest possible directions for change. Chapters 6-8, Part 2, concentrate on concepts and teaching possibilities available prior to the formal introduction of algebra. The notion that algebraic ideas are accessible to younger learners but, again, that care is needed in their development, is reinforced. In chapters 9-11, Part 3, equations and expressions in algebra are the focus. It is suggested that previous learning affects the learner's view of new ideas, that the solution of linear equations demands a careful developmental sequence, and that factoring and polynomials are important algebraic topics. Part 4, made up of chapters 12-14, emphasizes suggestions for teaching and using word problems in algebra. Part 5, chapters 15-24, emphasizes the use of technology in the algebra classroom. Suggestions include presenting guidelines for the development of instructional software, using computer programming as a way to introduce mathematical concepts, using computer generated data to teach concepts and processes, and using the calculator as a tool. Part 6, chapters 25-34, focuses on helpful, teacher tested, ideas for teaching algebra.(PK)", "num_citations": "26\n", "authors": ["43"]}
{"title": "Systematic evaluation and increased structure in a radiology elective.\n", "abstract": " Diagnostic radiology is expanding, playing an increasingly central role in patient care, which heightens the importance of radiology teaching in undergraduate medical education. This study examined the impact of increased structure and systematic evaluation on student performance in a radiology elective. The evaluation protocol included premultiple and postmultiple choice examinations (70 questions each), a film interpretation quiz (ten films, 20 questions), faculty assessment of a student oral case presentation, and student evaluations of the elective experience. The relationships among the evaluation techniques, as well as differences in class level and course ratings were also examined. Two different treatment groups were studied. Group 1 was given general objectives and information regarding availability of recommended resources, including self-learning materials for the elective, didactic seminars, and viewbox exposure. Group 2 was given specific written instructional objectives, a structured schedule for viewing the self-learning materials, and the same seminars and viewbox exposure. The statistically significant higher performance of the structured group suggests that medical students achieve the objectives of an elective better when learning activities are well defined, structured, and systematically evaluated. In addition, those students receiving the structured experience rated the radiology elective more favorably.", "num_citations": "26\n", "authors": ["43"]}
{"title": "An introduction to modern software quality assurance\n", "abstract": " Software quality was at one time restricted to ensuring that a completed software product conformed to its explicitly stated requirements. For several years now, meeting customer expectations (both implicit and explicit) has become an important aspect of software quality assurance (SQA). The news media is filled with reports of failed software systems. Most of these failures can be traced to defects that could have been detected with better attention to the management of software quality. Modern end-users expect software products to be reliable, secure, and safe. Pressure to produce software systems faster has never been greater and agile methods have been proposed to accommodate uncertain and changing user requirements. It is clear that quality cannot be added to an evolving system just before its release. This chapter will look at SQA practices that are capable of accommodating change and still provide\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "24\n", "authors": ["43"]}
{"title": "Identification of web service refactoring opportunities as a multi-objective problem\n", "abstract": " We propose, in this paper, to consider the problem of Web service antipatterns detection as a multi-objective problem where examples of Web service antipatterns and well-designed code are used to generate detection rules. To this end, we use multi-objective genetic programming (MOGP) to find the best combination of metrics that maximizes the detection of Web service antipattern examples and minimizes the detection of well-designed Web service design examples. We report the results of an empirical study using 8 different types of common Web service antipatterns. We compared our multi-objective formulation with random search, one existing mono-objective approach, and one state-of-the-art detection technique not based on heuristic search. Statistical analysis of the obtained results demonstrates that our approach is efficient in antipattern detection, on average, with a precision score of 94% and a recall\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "21\n", "authors": ["43"]}
{"title": "Domain-Independent Design System\n", "abstract": " This paper describes the Domain-Independent Design System (DIDS). DIDS provides a set of tools capable of rapidly constructing configuration-design systems from a library of reusable software elements, called mechanisms. The power of DIDS comes from its model of configuration design that enables reusable mechanism to be identified. DIDS contains four components. The first component, the Problem-Solving-Method (PSM) Editor builds PSMs by combining mechanisms. The Code Generator, DIDS\u0393\u00c7\u00d6s second component, generates a problem solver from the PSM description created in the editor. The third component, the Knowledge-Acquisition Tool Generator builds a knowledge acquisition (KA) tool that interviews the domain expert to gather the knowledge required by the DIDS-generated problem solver. The final component, the Debugging Tool, monitors the execution of the problem solver to\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "19\n", "authors": ["43"]}
{"title": "An agile software engineering process improvement game\n", "abstract": " Many computing students do not receive adequate training in software quality management. Some students do not have the opportunity to practice software process improvement activities even if they do see the topics covered in their course lectures and textbooks. Serious games are gaining popularity as a means of instruction in higher education. Some excellent prescriptive software process simulation games have been created, as well as a few software engineering drill and practice games. In general, these games do not allow students to create agile process models or experiment with process improvement strategies. We are creating a serious game that will serve as a virtual learning environment to allow students to explore agile process improvement practices. Our game is designed as a single-player game where the player takes the role of software team leader and plays against an AI (artificial intelligence\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "18\n", "authors": ["43"]}
{"title": "Attracting K-12 students to study computing\n", "abstract": " There is general agreement that the need for computing professionals in the near term is increasing, while enrollment in computer science degree programs is decreasing. We hope to address this situation by attracting pre-college students to study computer science and information technology at the collegiate level through participation in short term events focused on different aspects of computing technology. The authors hosted several one-day events on our campus (computing workshops and competitions) during the past three years. The event activities allow participants opportunities to experience the engineering design process, use their programming skills, and create multimedia content using software tools. Participants were self selected pre-college students. Participants completed an established attitude scale before and after each event to assess the impact of the project activities on their attitudes toward\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "18\n", "authors": ["43"]}
{"title": "A multisite comparison of student activities in the surgery clerkship\n", "abstract": " The purpose of this study was to develop a method that would provide baseline data for the ongoing assessment of surgical clerkships at The University of Michigan Medical School. Of specific concern was the comparability of clerkship experiences among five different sites and the degree of variability in student experiences as the academic year progressed. Students (n = 168) in the required surgery clerkship at five affiliated sites completed a standardized daily log of the time spent on seven patient care activities and five formally structured educational activities for 1 week during each of five rotations. Analysis of variance and the Scheffe method for multiple comparisons were used to determine differences attributable to clerkship site and time of academic year. The results of the study revealed significant site-, rotation-, and activity-specific variations in the surgery clerkship experiences. However, the students at\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "18\n", "authors": ["43"]}
{"title": "Scheduling a bridge club (a case study in discrete optimization)\n", "abstract": " Introduction Interesting mathematics problems arise from a wide variety of sources in everyday life. This paper explores a scheduling problem that was presented to one of the authors by a local bridge club. Although the problem appears simple on the surface, analysis uncovers a complexity that is often present in simply stated discrete optimization problems, and illustrates pitfalls that can arise from naively applying brute force techniques on the computer. The paper first defines the problem and explores the meaning of an optimal solution. Next an analytical solution is sought based on the classification of the problem, and finally the paper considers four increasingly sophisticated techniques of discrete optimization. Historically, optimization problems have arisen in a variety of applications including electrical engineering, operations research, computer science, and communication. Although a variety of techniques\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "15\n", "authors": ["43"]}
{"title": "Analyzing the efficacy of using digital ink devices in a learning environment\n", "abstract": " There has been increased interest on the impact of mobile devices such as PDAs and Tablet PCs in introducing new pedagogical approaches and active learning experiences. We propose an intelligent system that efficiently addresses the inherent subjectivity in student perception of note taking and information retrieval. We employ the idea of cross indexing the digital ink notes with matching electronic documents in the repository. Latent Semantic Indexing is used to perform document and page level indexing. Thus for each retrieved document, the user can go over to the relevant pages that match the query. Techniques to handle problems such as polysemy (multiple meanings of a word) in large databases, document folding and no match for query are discussed. We tested our system for its performance, usability and effectiveness in the learning process. The results from the exploratory studies reveal that\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "13\n", "authors": ["43"]}
{"title": "Just-in-time learning in software engineering\n", "abstract": " Just-In-Time (JIT) Learning is a type of experiential learning in which students are motivated to learn about concepts and how to apply them as they are needed to complete a meaningful project. Use of JIT by students in Software Engineering (SWE) can be an effective technique for maximizing retention of core SWE principles. This paper discusses the use of JIT in a junior-level SWE course taught by the authors. Having students work on projects for real-world clients motivates JIT. Analysis of student evaluation questionnaires and grades in subsequent courses indicate JIT can be as effective as traditional SWE instruction. Both students and clients express high levels of satisfaction with the experience.A recent survey of 600 two year and four year college instructors found that systems analysis and design concepts were most often taught in a single course during the students\u0393\u00c7\u00d6 junior or senior years (McLeod, 1996\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "13\n", "authors": ["43"]}
{"title": "Teaching programming algorithms aided by computer graphics\n", "abstract": " Effects of operations on abstract data objects are often difficult for students to comprehend. Visual models can be helpful to students, when the connections among the data object models, virtual machine representations of data objects, and algorithms operating on the data objects are made clear to the students.", "num_citations": "13\n", "authors": ["43"]}
{"title": "A three-layer model for software engineering metrics\n", "abstract": " This paper presents a three-layer model that captures the fundamentals of software metrics within a unifying framework. The model readily lends itself for use in both instructional and practitioner environments. The first (lowest) layer of the model consists of the three primitive software engineering metrics: person-months (PM), function-points (FP), and lines of code (LOC). They are presented as \"primary\" metrics from which other metrics are computed. Time is also included as a fundamental (not necessarily software) primary metric. The second layer consists of general-purpose metrics such as productivity measures, which are computed from the primary metrics, and the third layer consists of special-purpose metrics such as reliability and quality measures. This third layer is inherently extensible", "num_citations": "12\n", "authors": ["43"]}
{"title": "Use of role-play and gamification in a software project course\n", "abstract": " Soft skills are increasingly important to the engineering profession and course modifications are often needed to ensure students have opportunities to practice them prior to graduation. This suggests that engineering programs need to go beyond simply offering industry-based capstone courses and internships. Role-play has a long history as a tool for learning. It can be used to simulate real world practices in environments where consequences can be mitigated safely. This paper discusses the use of team role-play activities to simulate the experience of working in a professional, game development studio as a means of enhancing an advanced undergraduate game design course. In conjunction with the role-play, a gamification framework was used within the course to allow students to customize their course participation. Gamification was used to reward students for compliance with software process steps and for\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "11\n", "authors": ["43"]}
{"title": "DIDS: rapidly prototyping configuration design systems\n", "abstract": " The domain independent design system (DIDS) provides a set of tools for rapidly constructing new configuration design systems from a library of reusable software elements called mechanisms. A DIDS user begins by creating a model of the problem domain and the task to be automated. This includes describing a library of parts from which new artifacts could be configured, optimization and preference criteria, and functionality constraints. DIDS analyzes this input and automatically builds an operational prototype system by selecting and combining mechanisms. DIDS' ability to automate this process is derived from its model of configuration design, which enables reusable mechanisms to be identified and automatically selected based on a problem's characteristics. The use of DIDS is illustrated by showing how DIDS solved an elevator-configuration problem.", "num_citations": "10\n", "authors": ["43"]}
{"title": "Work in progress-introducing information technology through game design\n", "abstract": " There is general agreement that the need for computing professionals in the near term will continue to increase, while enrollment in computer science degree programs is decreasing. Many middle school and high school students want to know how to construct their own computer games. The enabling technologies that support game design include many fundamental areas of information technology. The authors offered two summer game camps to attract pre-college students to study computer science at the collegiate level. Middle school and high school aged participants used a game development environment to create original multimedia computer games. Participants experienced the complete game development life cycle. Participants completed an established attitude scale was administered before and after camp attendance to assess the impact of camp activities on student attitudes toward computing and\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "9\n", "authors": ["43"]}
{"title": "Yet, more Web exercises for learning C++\n", "abstract": " This paper describes a set of author developed interactive web exercises and a development environment designed to facilitate language acquisition in a beginning course in C++. The exercises test the students' understanding of several C++ language constructs as well as general programming concepts such as scope of variables. The environment allows students to write and test sections of code in a instructor controlled setting. Together the exercises and environment can be used to enhance computer science education for both traditional and distance learning students. The paradigm of generalization and automation of standard exercises can be extended to facilitate web education in other courses.", "num_citations": "9\n", "authors": ["43"]}
{"title": "A capstone design course based on computing curricula 1991\n", "abstract": " This article describes the development and proposed implementation of a capstone design course based on the 1991 report issued by the ACM/IEEE joint task force on computing curricula. The capstone design course advocates incorporation of the three essential and recommended components of design, theory, and abstraction. Discussion of ethics and professional practice are also recommended, consistent with the task force report. The course benefits from faculty experience with similar courses in both computer science and computer engineering and also experiences with independent study courses. To improve the students' verbal and written communications skills and experience in teamwork and cooperative design projects, students are required to work in small groups and to present frequent written and oral reports. A final cumulative written report and oral presentation/demonstration is\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "9\n", "authors": ["43"]}
{"title": "Using spreadsheets to introduce recursion and difference equations in high school mathematics\n", "abstract": " There are several reasons for wanting to examine recursive functions using a spreadsheet program. First, each step of evaluating a recursive function can be observed visually. Second, spreadsheet templates set up to allow the evaluation of recursive functions are very efficient in their use of computer memory. Third, creating a spreadsheet template to evaluate a recursive function can offer unique opportunities for class discussion regarding the nature and efficiency of recursion. Finally, evaluating a recursive function", "num_citations": "9\n", "authors": ["43"]}
{"title": "Introducing parallel algorithms in undergraduate computer science courses (tutorial session)\n", "abstract": " In many undergraduate computing courses, especially Data Structures and Algorithms, it is useful and instructive to introduce the notion of parallel(many steps at a time) algorithms, and to have the class act out several of these, with the students playing the role of processors. For example, this can be done when sorting is discussed, with several parallel sorting algorithms being llbrought to life.\" Concepts such as complexity, speedup and throughput can be discussed, and various parallel configurations, such as linear arrays, trees and meshes can be introduced. Parallel algorithms serve as an instructive counterpoint to the standard serial (one step at a time) algorithms, showing that many problems can have vastly different optimal solutions when the possibility of concurrency of operations is allowed.Having students act out algorithms helps to clarify issues involving what algorithms are and how they work, and it\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "9\n", "authors": ["43"]}
{"title": "A criterion-referenced approach to measuring medical problem solving: validity of patient management problems\n", "abstract": " A criterion-referenced approach was used to examine the validity of a set of 15 Patient Management Problems (PMPs) representing a broad range of medical problems. Results of performance of 175 medical students indicated that a new problem-solving index that includes an open-ended differential diagnosis section had greater validity than the more traditional proficiency index, as the spread between the distributions of masters and nonmasters was greater for the problemsolving index. Implications for medical education and research are discussed.", "num_citations": "9\n", "authors": ["43"]}
{"title": "Game design: games for and the World Wide Web\n", "abstract": " Programming computers to play games attracted the interest of such computer scientists as Babbage, Turing, and Shannon long before the first personal computers (PCs) came into existence. When personal computers and dedicated game consoles became widely available, in the 1970s, large numbers of computer game titles appeared in the marketplace almost immediately. Some people have argued that the computational expectations of modern computer game players pushed PC hardware manufacturers to increase the multimedia processing power of the home computer. The advent of the Internet and its rapid spread to homes throughout the world similarly has attracted the attention of game designers seeking to create multiplayer games among widely dispersed users. Creating games intended to run on the World Wide Web requires a good understanding of the principles used to design games for stand-alone computers, as well as knowledge about network architecture and client/server computing. This chapter discusses some of the design principles and challenges posed by developing games for the World Wide Web.", "num_citations": "8\n", "authors": ["43"]}
{"title": "Review of applications of wireless sensor networks\n", "abstract": " Sensor technology has been widely used in a variety of domains dealing with monitoring, such as health monitoring, environmental monitoring, and seism monitoring; control, such as agriculture control; and surveillance, such as battlefield surveillance [1]. A wireless sensor network (WSN) is composed of tiny, battery-powered devices, called sensor nodes. A sensor node has two components. The first one, named mote, is responsible for storage, computation, and communication. The second component, called sensor, is responsible for sensing physical phenomena such as temperature, light, sound, and vibration, to name a few. A sensor is always attached to a mote. Sensor nodes collect data and may perform in-network processing on the collected data at intermediate nodes before forwarding it to a central collection point, called the sink (or base station), for further analysis and processing.The design and\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "7\n", "authors": ["43"]}
{"title": "Software design and data structures in Turbo Pascal\n", "abstract": " This text covers software engineering and data structures topics traditionally covered in a first course in data structures with emphasis on data abstraction and the use of abstract data types (ADTs). Our selection of topics has been heavily influenced by the recommendations of the ACM Computing Curricula Task Force for CS21 and the recent report of the ACM/IEEE-CS Joint Curriculum Task Force. 2 It assumes that the student is familiar with the material normally covered in an introductory computer science course in Pascal or Turbo Pascal. High school mathematics is sufficient mathematics background for most of the material in this book. A limited knowledge of discrete mathematics, however, is desirable for certain sections. Object-oriented programming is introduced early in Chapter 1 and used throughout the text. We introduce several ADTs and describe their implementations as Borland's Pascal objects encapsulated in units. Although the text uses Borland's Pascal compiler for MS-DOS, which is known as Turbo Pascal (version 7.0), it can also be used with any version of Turbo Pascal that supports objects and units (versions 5.0 and later). The book can also be used with Borland's Pascal compiler for Windows, if you insert the statement uses WinCRT; immediately after the program statement.", "num_citations": "7\n", "authors": ["43"]}
{"title": "Validity coefficients of clinical competence on NBME part III examination.\n", "abstract": " Examined the relationship of performance on Part III of the National Board of Medical Examiners (NBME) with performance on measures of clinical competence in 104 1981 medical school graduates. Results indicate that significant relationships existed among various medical school preadmission indicators (eg, interview rating, Medical College Admission Test scores); performance during medical school; and immediate postgraduate clinical competency.(10 ref)(PsycINFO Database Record (c) 2016 APA, all rights reserved)", "num_citations": "7\n", "authors": ["43"]}
{"title": "The crystal structure of germanium dibromide\n", "abstract": " ObjectiveZeitschrift f\u251c\u255dr Kristallographie\u0393\u00c7\u00f4Crystalline Materials was founded in 1877 by Paul von Groth and is today one of the world\u0393\u00c7\u00d6s oldest scientific journals. It offers a place for researchers to present results of their theoretical experimental crystallographic studies. The journal presents significant results on structures and on properties of organic/inorganic substances with crystalline character, periodically ordered, modulated or quasicrystalline on static and dynamic phenomena applying the various methods of diffraction, spectroscopy and microscopy.", "num_citations": "7\n", "authors": ["43"]}
{"title": "Web service design defects detection: A bi-level multi-objective approach\n", "abstract": " Context: Web services frequently evolve to integrate new features, update existing operations and fix errors to meet the new requirements of subscribers. While this evolution is critical, it may have a negative impact on the quality of services (QoS) such as reduced cohesion, increased coupling, poor response time and availability, etc. Thus, the design of services could become hard to maintain and extend in future releases. Recent studies addressed the problem of web service design antipatterns detection, also called design defects, by either manually defining detection rules, as combination of quality metrics, or generating them automatically from a set of defect examples. The manual definition of these rules is time-consuming and difficult due to the subjective nature of design issues, especially to find the right thresholds value. The efficiency of the generated rules, using automated approaches, will depend on the\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "6\n", "authors": ["43"]}
{"title": "The effect of audio fidelity and virtual reality on the perception of virtual greenspace\n", "abstract": " 3D digital visualizations have been shown to be a robust tool for communicating future scenarios and supporting decision-making in a variety of contexts. While beneficial they lack the multisensory experience of the real-world and, as such, may not provide all information needed to make reliable decisions. In addition, how visual information is presented likely has a significant impact on perception, however to date there is mixed empirical evidence on the impact of presentation modes. The research presented here aims to fill a perceptual and procedural knowledge gap for using multisensory simulation in environmental decision-making. Participants (university students, N\u252c\u00e1=\u252c\u00e139) were presented with digital animations displayed via a conventional screen and virtual reality head mounted display, with three varied sound conditions (no sound, ambient sound, detailed sound) across 5 environments (vacant lot\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "6\n", "authors": ["43"]}
{"title": "Just-in-time learning in software engineering\n", "abstract": " Just-In-Time (JIT) Learning is a type of experiential learning in which students are motivated to learn about concepts and how to apply them as they are needed to complete a meaningful project. Use of JIT by students in Software Engineering (SWE) can be an effective technique for maximizing retention of core SWE principles. This paper discusses the use of JIT in a junior-level SWE course taught by the authors. Having students work on projects for real-world clients motivates JIT. Analysis of student evaluation questionnaires and grades in subsequent courses indicate JIT can be as effective as traditional SWE instruction. Both students and clients express high levels of satisfaction with the experience.", "num_citations": "6\n", "authors": ["43"]}
{"title": "Bringing algorithms to life: Cooperative computing activities using students as processors\n", "abstract": " The authors describe a method for \u0393\u00c7\u00a3bringing algorithms to life\u0393\u00c7\u00a5 in secondary school mathematics and computer science classes. Cooperative computing activities are presented in which each student plays the role of a switch or processor, and the algorithms are \u0393\u00c7\u00a3acted out.\u0393\u00c7\u00a5 Parallel algorithms, in which many steps can occur at the same time, are emphasized, as they are especially suited for cooperative activities. The activities are grouped together in modules, according to the problems they address. Those presented include binary counting, finding the smallest card in a deck, sorting by selection and merging, adding and multiplying large numbers, sieving for primes, testing whether a number is prime, and sorting using a linear configuration of processors. Detailed descriptions of how to implement the algorithms are given.", "num_citations": "6\n", "authors": ["43"]}
{"title": "Design, Development and Delivery of Active Learning Tools in Software Verification & Validation Education.\n", "abstract": " Active learning tools are critical in imparting real world experiences to the students within a classroom environment. This is important because graduates are expected to develop software that meets rigorous quality standards in functional and application domains with little to no training. However, there is a well-recognized need for the availability of effective active tools. This need has been addressed by the authors by designing, developing, and delivering, twenty delivery hours of Case Studies, sixteen delivery hours of Class Exercises, and six delivery hours of Video Case Studies for use in V&V courses. The active learning tools focus on some specific", "num_citations": "5\n", "authors": ["43"]}
{"title": "Work in progress: use of interdisciplinary teams in game development classes\n", "abstract": " The development of computer games is labor-intensive. Modern game development requires the effort of a team of skilled professionals to integrate multimedia content with complex software. Producing high-quality software game products requires large teams to rely on high levels of communication, organization, and planning to avoid costly delays and failures. The author created a two-semester sequence of courses focusing on the application of software engineering principles in the design and implementation of computer games. ABET accreditation guidelines require students to participate on interdisciplinary teams to solve engineering problems. Students in the author's advanced game design course work with game animation art students from a neighboring art college. This paper summarizes the content of this course and the author's experience in teaching this course during its first offering using\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "5\n", "authors": ["43"]}
{"title": "Experiences in teaching senior design using real-world clients\n", "abstract": " This paper describes the authors' experiences teaching an industry-based capstone design course during the past ten years. Students in this course are required to work as members of small teams to complete software development projects. These projects proceed from requirements gathering to analysis, design, implementation, and delivery of products to real-world clients. Perhaps one of the best ways to teach the importance of managing project resources is to allow students to manage real world projects with serious development constraints including concrete deadlines. To improve students' verbal and written communications skills and experience in teamwork and cooperative design projects, students are required present frequent written and verbal reports as each project milestone is completed. Student-led discussions of ethics and professional practice concerns are included in this course. A final\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "5\n", "authors": ["43"]}
{"title": "Student Engagement in Active Learning Software Engineering Courses\n", "abstract": " Engineering instructors often rely on lectures as their primary mode of instruction even in project courses. In the lecture mode of instruction student engagement with the course material is often low or non-existent until the date of an assessment activity (assignment or exam) is near. In passive learning environments students often do not get many opportunities to develop their soft skills. Many engineering educators regard experiential learning as a better way to train the next generation of software engineers to do project work. This paper describes the authors' experiences introducing active learning opportunities in a junior level software engineering course and a senior level game design course. The materials created for these courses were developed using a variation of the ADDIE (analyze, design, development, implementation, evaluation) process model. The team created a mix of case-study review, role play\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "4\n", "authors": ["43"]}
{"title": "Parallel and distributed algorithms: laboratory assignments in Joyce/Linda\n", "abstract": " A NSF ILI grant funded development of parallel and distributed laboratories for an undergraduate course in parallel algorithms. The laboratory assignments explored various parallel and distributed architectures, and paradigms. These assignments were implemented using the Joyce/Linda [McDonald92] language. The Joyce/Linda software was also utilized to develop parallel and distributed laboratory assignments for courses in data structures, operating systems and computer networks. The parallel and distributed algorithms course examined both theoretical and practical areas of study.", "num_citations": "4\n", "authors": ["43"]}
{"title": "Predicting medical school performance using the old and new MCAT.\n", "abstract": " Predicting medical school performance using the old and new MCAT. - Abstract - Europe PMC Sign in or create an account https://orcid.org Europe PMC Menu About About Europe PMC Funders Joining Europe PMC Governance Roadmap Outreach Tools Tools overview ORCID article claiming Journal list Grant finder External links service RSS feeds Annotations Annotations submission service Developers Developer resources Articles RESTful API Grants RESTful API API use cases SOAP web service Annotations API OAI service Bulk downloads Developers Forum Help Help using Europe PMC Search syntax reference Contact us Contact us Helpdesk Feedback Twitter Blog Tech blog Developer Forum Europe PMC plus Search worldwide, life-sciences literature Search Advanced Search Recent history Saved searches Abstract Citations & impact Predicting medical school performance using the old and new MCAT:\u0393\u00c7\u00aa", "num_citations": "4\n", "authors": ["43"]}
{"title": "Software Engineering for Variability Intensive Systems: Foundations and Applications\n", "abstract": " This book addresses the challenges in the software engineering of variability-intensive systems. Variability-intensive systems can support different usage scenarios by accommodating different and unforeseen features and qualities. The book features academic and industrial contributions that discuss the challenges in developing, maintaining and evolving systems, cloud and mobile services for variability-intensive software systems and the scalability requirements they imply. The book explores software engineering approaches that can efficiently deal with variability-intensive systems as well as applications and use cases benefiting from variability-intensive systems.", "num_citations": "3\n", "authors": ["43"]}
{"title": "WIP: Introducing Active Learning in a Software Engineering Course\n", "abstract": " Many courses offered by the College of Engineering and Computer Science (CECS) rely heavily on lectures as the primary vehicle of instruction. This is even true of courses that should emphasize student project work. Many computing (CS, IS, SE, CE) students are turned off by this sterile delivery of material prior to beginning their senior capstone projects. We have noticed gaps in students\u0393\u00c7\u00d6 software engineering abilities when they begin their capstone projects. It is not always the case that students were not exposed to the necessary concepts in previous courses, but rather they that were not asked to apply these skills in project settings. In the past, instructors (and employers) have relied on just-in-time learning to fill in these holes. Many engineering educators regard experiential learning as the best way to train the next generation of engineers. This requires engineering programs to go beyond simply offering industry-based capstone courses and internships. It is our belief that introducing active learning opportunities prior to the senior year can improve software engineering education at the undergraduate level. This will also increase the pool of new professionals with practical software engineering knowledge and skills.", "num_citations": "3\n", "authors": ["43"]}
{"title": "Use of interdisciplinary teams in game development\n", "abstract": " The development of computer games is labor- intensive. Modern game development requires the effort of a team of skilled professionals to integrate multimedia content with complex software. Producing high-quality software game products requires large teams to rely on high levels of communication, organization, and planning to avoid costly delays and failures. The authors teach several courses dealing with the application of software engineering principles and art asset creation in the development of computer games at their respective institutions. ABET accreditation guidelines require students to participate on interdisciplinary teams to solve engineering problems. Students in the first author's advanced game design course work with students from the second author's game animation art course. This paper summarizes the content of the advanced game design course and the authors' experiences using\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "3\n", "authors": ["43"]}
{"title": "Turbo Pascal: Problem Solving and Program Design with Advanced Topics\n", "abstract": " From the Book: PREFACE: Since the last revision of this book, there have been no new revisions to Turbo Pascal. However, there has been a vast increase in interest in the Internet and the World Wide Web. For that reason, we decided to u pdate this book by adding a chapter discussing the Internet and World Wide Web. This chapter explains how the Internet works and also tells students how to access the World Wide Web as a general resource and as a source of more information about this book. Students can download program files for this book directly from the book's website. The new Chapter 19 provides information on how to do this. This textbook is intended for a first course in problem solving and program design using Turbo Pascal (version 7.0). It assumes no prior knowledge of computers or programming, and for most of its material, high school algebra is sufficient mathematics background. A limited\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "3\n", "authors": ["43"]}
{"title": "Turbo Pascal:Problem Solving and Program Design\n", "abstract": " From the Book: PREFACE: Since the last revision of this book, there have been no new revisions to Turbo Pascal. However, there has been a vast increase in interest in the Internet and the World Wide Web. For that reason, we decided to u pdate this book by adding a chapter discussing the Internet and World Wide Web. This chapter explains how the Internet works and also tells students how to access the World Wide Web as a general resource and as a source of more information about this book. Students can download program files for this book directly from the book's website. The new Chapter 19 provides information on how to do this. This textbook is intended for a first course in problem solving and program design using Turbo Pascal (version 7.0). It assumes no prior knowledge of computers or programming, and for most of its material, high school algebra is sufficient mathematics background. A limited\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "3\n", "authors": ["43"]}
{"title": "Using Spreadsheets in Algebra Instruction\n", "abstract": " PREADSHEET programs can be effective teaching tools for helping students experience the process of doing mathematics. A number of topics can be introduced in a meaningful way using a spreadsheet program. Two such topics, finding the roots of a polynomial using an iterative process and finding the solution of a mixture problem using an inductive process, are discussed here.A spreadsheet is a two-dimensional array of cells. Each cell can hold a label, a value, or an expression. Expressions may contain constants or values from other cells. Spreadsheet programs provide the capability of copying expressions from one cell to any number of other cells. The cell references in these expressions can be adjusted automatically while the program handles", "num_citations": "3\n", "authors": ["43"]}
{"title": "Strategies for Delivering Active Learning Tools in Software Verification & Validation Education\n", "abstract": " Imparting real world experiences is often a challenge due to both lack of effective active learning tools and delivery strategies. This pedagogical requirement is important because graduates are expected to develop software that meets rigorous quality standards in functional and application domains with little to no training. Institutions of higher learning across the nation are responding to political, economic, social and technological pressures to be more responsive to students' needs and more concerned about how well students are prepared to assume future societal roles [1]. The lack of effective active learning tools has been addressed by the authors at Robert Morris University by designing, developing, delivering, and disseminating twenty (20) delivery hours of Case Studies, sixteen (16) delivery hours of Class Exercises, and six (6) delivery hours of Video Case Studies for use in courses that impart knowledge on SV&V topics viz. requirements engineering, software reviews, configuration management, and software testing. Four key skill areas sought after by employers, namely communication skills, applied knowledge of methods, applied knowledge of tools, and research exposure have been used to drive the development funded by a National Science Foundation (NSF) grant and perfected through an industryacademia partnership. These tools have been successfully disseminated to over 25 universities with many CS, IS, SE programs incorporating the tools in their existing courses and others designing new courses based on these tools.As student learning retention and eventual application of the knowledge gained depends on knowledge\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "2\n", "authors": ["43"]}
{"title": "Service learning and virtual worlds\n", "abstract": " This project leverages virtual world environments to create spaces to support sustainable problem solving communities. These communities are seeking to address pressing social problems through the collaborative efforts of college students, high school students, volunteers, and staff members affiliated with the Gleaners Incorporated. Our approach is to have engineering students build a Second Life environment that provides a structure for collaborative problem solving activities. Second Life serves as a vehicle to build a stronger sense of community among food bank network members, to help conceptualize parameters of their problems, develop virtual solutions collaboratively, test these solutions, and implement these solutions in the real world. In order to involve high school age students, engineering students are using the Torque Game Engine to build virtual environments to support instructional activities\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "2\n", "authors": ["43"]}
{"title": "Work in progress-using the virtual world to improve our world\n", "abstract": " Our college is leveraging Second Life to develop and build sustainable problem solving communities to address pressing social problems through the collaborative efforts of college students, high school students, volunteers, staff members affiliated with the Food Bank Council of Michigan (FBCM), and Gleaners Incorporated. Our approach is to have engineering students build a Second Life island that provides a structure for collaborative problem solving activities. Second Life serves as a vehicle to build a stronger community among food bank network members, to help conceptualize parameters of their problems, develop virtual solutions collaboratively, test these solutions, and then implement these solutions in the real world. Three projects were created in Second Life. Initial student survey data indicates satisfaction with the service learning experience.", "num_citations": "2\n", "authors": ["43"]}
{"title": "Work in progress-learning via gaming: An immersive environment for teaching kids handwriting\n", "abstract": " Immersive learning using computer animation and simulation is an attractive concept. Use of immersive technology to deliver flying lessons to NASA astronauts is well known. While the efficacy of immersive environments for education and training is well established, their accessibility to elementary and middle schools students is negligible. Until recently, hardware costs and long development-times were two major factors impeding creation of such environments for younger students. Computing technology, specifically human machine interface development, has come a long way in the last decade. The authors are making use of this emerging technology to develop an immersive gaming environment to teach handwriting to elementary school children using a tablet PC delivery system.", "num_citations": "2\n", "authors": ["43"]}
{"title": "A novel approach to introducing parallel algorithms in undergraduate computer science courses\n", "abstract": " We describe a method for introducing parallel algorithms in undergraduate computer science courses, by having the students play the role of processors and act out the algorithms. In doing this, students will see the power of concurrent computation and begin to \u0393\u00c7\u00a3think parallel.\u0393\u00c7\u00a5 We present a number of algorithms that can be acted out, together with suggestions as to how they may be implemented. Students will see that efficient solutions to problems can be vastly different in the parallel (many steps at a time) case than in the usual serial (one step at a time) case. The type of algorithms we consider are those in which the processors are homogeneous and synchronous. The measure of efficiency is the count of the number of time steps that are needed to conclude the algorithm for a given size input.", "num_citations": "2\n", "authors": ["43"]}
{"title": "Using computer animation to teach programming algorithms\n", "abstract": " Using computer animation to teach programming algorithms | Collegiate Microcomputer ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Collegiate Microcomputer Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsCollegiate MicrocomputerVol. , No. Using computer animation to teach programming algorithms article Using computer animation to teach programming algorithms Share on Authors: Bruce R. Maxim View Profile , Bruce S. Elenbogen View Profile Authors Info & Affiliations Collegiate MicrocomputerVolume 6Issue 4Nov. 1988 pp 375\u0393\u00c7\u00f4381 Published:01 November 1988 0citation 0 Downloads Metrics Total Citations0 Total Downloads0 ! \u0393\u00c7\u00aa", "num_citations": "2\n", "authors": ["43"]}
{"title": "Variability-intensive Software Systems: Concepts and Techniques\n", "abstract": " In this chapter we offer an introduction to variability and variability-intensive software systems. We discuss what variability and variability-intensive software systems are and why variability matters for successful and long-living modern software products and services. Since variability is a multifaceted concept, this chapter also discusses different \u0393\u00c7\u00a3notions\u0393\u00c7\u00a5 of variability and provides insights into how variability impacts different software development activities and software product life-cycle stages. This also includes a discussion of fundamental challenges when designing and maintaining variability-intensive systems. The chapter then briefly reviews historical trends in variability-intensive systems and how variability evolved over time, starting from conditional compilation to product lines to becoming a characteristic (or even a feature) of almost all modern software-intensive systems.ABSTRACT", "num_citations": "1\n", "authors": ["43"]}
{"title": "Refactoring Support for Variability-intensive Systems\n", "abstract": " Several studies show that programmers are postponing software maintenance activities that improve software quality, even while seeking high-quality source code for themselves when updating existing projects. High-quality source code can be characterized using several quality attributes, but maintaining this high level of quality is expensive. One reason is that time and monetary pressures force programmers to neglect to enhance the quality of their source code while enhancing existing systems with new features or fixing bugs. Code smells represent symptoms of poor implementation choices. For instance, a Blob has several symptoms such as a large class, high number of methods, low cohesion and high coupling. Code smells are frequent in variability-intensive software systems since their requirements change extensively over time, and developers have limited time to meet the deadlines and provide new\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "1\n", "authors": ["43"]}
{"title": "A Virtual Driving Test Environment for Autonomous Vehicles\n", "abstract": " Authors: Jacob Hasenau, jhasenau@ umich. edu, University of Michigan-Dearborn Kenneth Rogale, krogale@ umich. edu, University of Michigan-Dearborn Brandon Lackowski, blackows@ umich. edu, University of Michigan-Dearborn Bruce Maxim, bmaxim@ umich. edu, University of Michigan-Dearborn Kiumi Akingbehin, kiumi@ umich. edu, University of Michigan-Dearborn Jie Shen, shen@ umich. edu, University of Michigan-Dearborn", "num_citations": "1\n", "authors": ["43"]}
{"title": "Simulating an Integrated Business Environment that Supports Systems Integration\n", "abstract": " This paper describes the design and application of a business simulation to help train employees about the new business model and culture that for an automotive supplier company that designs connected vehicle and other advanced electronic products for the automotive industry. The simulation, called SIM-i-TRI, is a three to four day collaborative learning activity that simulates the executive, administrative, engineering, manufacturing, and marketing functions in three divisions of a manufacturer that supplies parts and systems to customers in industries similar to the automotive industry. It was originally designed to support the new employee orientation at the Tier 1 supplier and to provide the participants a safe environment to practice the lessons from the orientation. The simulation has been used several times a month in the US, England, and Germany for over four years. It is now being used by Ann Arbor SPARK\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "1\n", "authors": ["43"]}
{"title": "Work in progress-attracting k-12 students to study computing\n", "abstract": " There is general agreement that the need for computing professionals in the near term will continue to increase, while enrollment in computer science degree programs is decreasing. We hope to meet this need by attracting pre-college students to study computer science and information technology at the collegiate level through participation in summer camps and weekend events focused on different aspects of computing technology. The authors offered three game development camps and several one-day events (computing workshops and competitions). Participants were self selected pre-college students who experienced many aspects of the software development life cycle and used software tools to create original multimedia products. Participants completed an established attitude scale before and after the events to assess the impact of the project activities on multiple components of their attitudes and their\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "1\n", "authors": ["43"]}
{"title": "Industry Related Probability and Statistics Problems for Students\n", "abstract": " We reviewed 7 of 52 problem exposition units listed in the Catalogue of Industry Related Problems (eds. Jeanne L. Agnew and Marvin S. Keener) and intended for use in the study of probability or statistics for college undergraduates. The value of these problems lies in their applied, real-life settings, which it is hoped will enhance student interest and motivation. Problems are embedded in military, chemical engineering, business, actuarial science, aeronautical engineering, survey, and athletic contexts. Each problem was written by an industry expert, who is listed as the source of the problem, and an educator, who is listed as the individual who prepared the unit. The series is based on the premise that undergraduate students need exposure to basic attributes of problem solving that include (a) researching the literature,(b) communicating mathematical ideas to others,(c) discriminating between essential and\u252c\u00e1\u0393\u00c7\u00aa", "num_citations": "1\n", "authors": ["43"]}
{"title": "A comparison of two sequences for teaching percent\n", "abstract": " The purpose of this study was to develop and evaluate two sequences for teaching percent. The two sequences differed in their approach to the solution of case 1 percent problems. One of the sequences relied on the factor product method and the other on the proportion method. The interrelationships among the students' knowledge of fractions, decimals and percents were examined. An author developed model for learning percent problems solving skills was evaluated.", "num_citations": "1\n", "authors": ["43"]}