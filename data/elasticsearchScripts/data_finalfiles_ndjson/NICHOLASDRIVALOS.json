{"title": "MADES FP7 EU project: Effective high level SysML/MARTE methodology for real-time and embedded avionics systems\n", "abstract": " The paper presents the EU funded MADES FP7 project, that aims to develop an effective model driven methodology to evolve current practices for the development of real time embedded systems for avionics and surveillance industries. In MADES, we propose an effective SysML/MARTE language subset and have developed new tools and technologies that support high level design specifications, validation, simulation and automatic code generation, while integrating aspects such as component re-use. The paper first illustrates the MADES methodology by means of a car collision avoidance system case study, followed by the underlying MADES language design phases and tool set which enable verification and automatic code generation aspects, hence enabling implementation in execution platforms such as state of the art FPGAs.", "num_citations": "43\n", "authors": ["234"]}
{"title": "Models of OSS project meta-information: a dataset of three forges\n", "abstract": " The process of selecting open-source software (OSS) for adoption is not straightforward as it involves exploring various sources of information to determine the quality, maturity, activity, and user support of each project. In the context of the OSSMETER project, we have developed a forge-agnostic metamodel that captures the meta-information common to all OSS projects. We specialise this metamodel for popular OSS forges in order to capture forge-specific meta-information. In this paper we present a dataset conforming to these metamodels for over 500,000 OSS projects hosted on three popular OSS forges: Eclipse, SourceForge, and GitHub. The dataset enables different kinds of automatic analysis and supports objective comparisons of cross-forge OSS alternatives with respect to a user's needs and quality requirements.", "num_citations": "8\n", "authors": ["234"]}
{"title": "Ossmeter: A software measurement platform for automatically analysing open source software projects\n", "abstract": " Deciding whether an open source software (OSS) project meets the required standards for adoption in terms of quality, maturity, activity of development and user support is not a straightforward process as it involves exploring various sources of information. Such sources include OSS source code repositories, communication channels such as newsgroups, forums, and mailing lists, as well as issue tracking systems. OSSMETER is an extensible and scalable platform that can monitor and incrementally analyse a large number of OSS projects. The results of this analysis can be used to assess various aspects of OSS projects, and to directly compare different OSS projects with each other.", "num_citations": "7\n", "authors": ["234"]}
{"title": "Model-connected safety cases\n", "abstract": " We propose the concept of a model-connected safety case that could simplify certification of complex systems. System design models support the synthesis of both the structure of the safety case and the evidence that supports this structure. The resultant safety case argues that all hazards are adequately addressed through meeting the system safety requirements. This overarching claim is demonstrated via satisfaction of the integrity requirements that are assigned to subsystems and components of the system through a sound process of model-based allocation that respects the system design and follows industry standards. The safety evidence that substantiates claims is supported by evidence which is also auto-constructed from the system model. As the system model evolves during design, the corresponding model-connected safety case can be auto-updated. The approach is underpinned by a data\u00a0\u2026", "num_citations": "6\n", "authors": ["234"]}
{"title": "QVT Traceability: What does it really mean?\n", "abstract": " Traceability in Model Transformation languages supports not only post-execution analysis, but also incremental update and coordination of repetition. The Query/View/Transformation family of languages specify a form of traceability that unifies high and low level abstraction in declarative and imperative transformation languages. Unfortunately this aspect of the QVT specification is little more than an aspiration. We identify axioms that resolve the conflicting requirements on traceability, and provide a foundation for resolving further issues regarding equality, transformation extension and mapping refinement.", "num_citations": "6\n", "authors": ["234"]}
{"title": "Structuring clinical decision support rules for drug safety using natural language processing\n", "abstract": " Drug safety is an important aspect in healthcare, resulting in a number of inadvertent events, which may harm the patients. IT based Clinical Decision Support (CDS), integrated in electronic-prescription or Electronic Health Records (EHR) systems, can provide a means for checking prescriptions for errors. This requires expressing prescription guidelines in a way that can be interpreted by IT systems. The paper uses Natural Language Processing (NLP), to interpret drug guidelines by the UK NICE BNF offered in free text. The employed NLP component, MetaMap, identifies the concepts in the instructions and interprets their semantic meaning. The UMLS semantic types that correspond to these concepts are then processed, in order to understand the concepts that are needed to be implemented in software engineering for a CDS engine.", "num_citations": "5\n", "authors": ["234"]}
{"title": "Scalability in model driven engineering: Bigmde'13 workshop summary\n", "abstract": " As Model Driven Engineering (MDE) is increasingly applied to larger and more complex systems, the current generation of modelling and model management technologies are being pushed to their limits in terms of capacity and efficiency. As such, additional research and development is imperative in order to enable MDE to remain relevant with industrial practice and to continue delivering its widely-recognised productivity, quality, and maintainability benefits. The need to reflect upon scalability in MDE led us to organise the 1 st BigMDE international workshop co-located with the STAF (Software Technologies-Applications and Foundations) conferences, which was held at the Budapest University of Technology and Economics, Budapest, Hungary, during June 17-20, 2013.", "num_citations": "5\n", "authors": ["234"]}
{"title": "Towards flexible parsing of structured textual model representations\n", "abstract": " Existing parsers for textual model representation formats such as XMI and HUTN are unforgiving and fail upon even the smallest inconsistency between the structure and naming of metamodel elements and the contents of serialised models. In this paper, we demonstrate how a flexible parsing approach can transparently and automatically resolve a number of these inconsistencies, and how it can eventually turn XML into a human-readable and editable textual model representation format for particular classes of models.", "num_citations": "4\n", "authors": ["234"]}
{"title": "Towards systematic engineering of collaborative heterogeneous robotic systems\n", "abstract": " Collaborative heterogeneous robotic systems are distributed and interconnected multi-robot systems whose members can have different capabilities and can perform specialised tasks. Existing engineering processes and tools facilitate the development of various robotic aspects including kinematics, sensing and, architecture, through high-level design and low-level code generation. Although there are several frameworks and middleware, providing infrastructure for the development of single-robot and homogeneous multi-robot applications, there is lack of systematic methods and tools supporting the engineering of heterogeneous multi-robot systems and the analysis of collaborative intelligence. In this paper, we present our vision for a framework that supports the specification of collaborative heterogeneous robotic systems, generation of platform-specific code, and efficient exploration and exercise of collective\u00a0\u2026", "num_citations": "3\n", "authors": ["234"]}
{"title": "Supporting Custom Quality Models to Analyse and Compare Open-Source Software\n", "abstract": " The analysis and comparison of open source software can be improved by means of quality models supporting the evaluation of the software systems being compared and the final decision about which of them has to be adopted. Since software quality can mean different things in different scenarios, quality models should be flexible in order to accommodate the needs of different users. Over the years several quality models have been proposed. Even though some of them are tool supported, they are not designed to be extended or customized to better accommodate the requirements of specific business contexts. In this paper, instead of having a fixed model, we propose a workflow and a tool chain to support the specification of custom quality models, which can guide the automated analysis of open source software.", "num_citations": "3\n", "authors": ["234"]}
{"title": "Establishing and maintaining semantically rich traceability: a metamodelling approach\n", "abstract": " This thesis addresses the problem of model-to-model traceability in Model Driven Engineering (MDE). A MDE process typically involves models ex- pressed in different modelling languages that capture different views of the system under development. To enhance automation, consistency and co- herency, establishing and maintaining semantically rich traceability links between models used throughout the software development lifecycle is of paramount importance.  This thesis deals with the various challenges associated with providing traceability support in the context of MDE by defining a domain-specific, model-based traceability approach, which supports the main traceability ac- tivities in a rigorous and semi-automatic manner. To evaluate the validity of the thesis proposition, a reference implementation has been provided. The results obtained from the application of the proposed approach to various case-studies and examples have confirmed the feasibility and benefits of such an approach.", "num_citations": "3\n", "authors": ["234"]}
{"title": "Empirical Analysis of 1-edit Degree Patches in Syntax-Based Automatic Program Repair\n", "abstract": " In this paper, software patches modifying a single line (aka 1-edit degree patches) of buggy Java open-source projects have been generated automatically using computational search and experimentally evaluated. We carried out the presumably largest to date experiment related to 1-edit degree patches, consisting of almost 27,000 computational jobs upper bounded with 107,000 computational hours. Our experiments show the benefits and drawbacks of such kind of patches. In particular, the search space size has been shown to be reduced by several orders of magnitude. The volume of tests that can be filtered out without any negative impact while generating 1-edit degree patches has been increased by about 97%. Finally, the effectiveness of finding 1-edit plausible patches is compared with multi-line plausible patches found with state-of-the-art syntax-based Automatic Program Repair tools. It is shown that\u00a0\u2026", "num_citations": "2\n", "authors": ["234"]}
{"title": "Model-driven simulation-based analysis for multi-robot systems\n", "abstract": " Multi-robot systems are increasingly deployed to provide services and accomplish missions whose complexity or cost is too high for a single robot to achieve on its own. Although multi-robot systems offer increased reliability via redundancy and enable the execution of more challenging missions, engineering these systems is very complex. This complexity affects not only the architecture modelling of the robotic team but also the modelling and analysis of the collaborative intelligence enabling the team to complete its mission. Existing approaches for the development of multi-robot applications do not provide a systematic mechanism for capturing these aspects and assessing the robustness of multi-robot systems. We address this gap by introducing ATLAS, a novel model-driven approach supporting the systematic robustness analysis of multi-robot systems in simulation. The ATLAS domain-specific language enables modelling the architecture of the robotic team and its mission, and facilitates the specification of the team\u2019s intelligence. We evaluate ATLAS and demonstrate its effectiveness on two oceanic exploration missions performed by a team of unmanned underwater vehicles developed using the MOOS-IvP robotic simulator.", "num_citations": "1\n", "authors": ["234"]}
{"title": "Towards a low-code solution for monitoring machine learning model performance\n", "abstract": " As the use of machine learning techniques by organisations has become more common, the need for software tools that provide the robustness required in a production environment has become apparent. In this paper, we review relevant literature and outline a research agenda for the development of a low-code solution for monitoring the performance of a deployed machine learning model on a continuous basis.", "num_citations": "1\n", "authors": ["234"]}
{"title": "Converting Text to Structured Models of Healthcare Services.\n", "abstract": " The paper presents a concise method for transforming textual representations of healthcare services, to a structured, semantically unambiguous modelling language. The method is designed based on literature, as well as trial and error by the authors, using text descriptions of healthcare services. Employing the method can convert textual descriptions to structured graphical models, facilitating stakeholder collaboration on requirements analysis and simulation.", "num_citations": "1\n", "authors": ["234"]}
{"title": "Traceability: What does it really mean for QVT?\n", "abstract": " Traceability in Model Transformation languages supports not only post-execution analysis, but also incremental update and coordination of repetition. The Query/View/Transformation family of languages specify a form of traceability that unifies high and low level abstraction in declarative and imperative transformation languages. Unfortunately this aspect of the QVT specification is little more than an aspiration. We identify axioms that resolve the conflicting requirements on traceability, and provide a foundation for resolving further issues regarding equality, transformation extension and rule refinement.", "num_citations": "1\n", "authors": ["234"]}