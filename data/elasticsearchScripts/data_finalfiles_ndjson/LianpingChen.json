{"title": "Continuous Delivery: Huge Benefits, But Challenges Too\n", "abstract": " Continuous delivery (CD) has emerged as an auspicious alternative to traditional release engineering, promising to provide the capability to release valuable software continuously to customers. Paddy Power has been implementing CD for the past two years. This article explains why Paddy Power decided to adopt CD, describes the resulting CD capability, and reports the huge benefits and challenges involved. These experiences can provide fellow practitioners with insights for their adoption of CD, and the identified challenges can provide researchers valuable input for developing their research agendas.", "num_citations": "372\n", "authors": ["1935"]}
{"title": "Towards Evidence-Based Understanding of Electronic Data Sources\n", "abstract": " Systematic Literature Reviews and Systematic Mapping Studies are relatively new forms of secondary studies in software engineering. Identifying relevant papers from various Electronic Data Sources (EDS) is one of the key activities of conducting these kinds of studies. Hence, the selection of EDS for searching the potentially relevant papers is an important decision, which can affect a study\u2019s coverage of relevant papers. Researchers usually select EDS mainly based on personal knowledge, experience, and preferences and/or recommendations by other researchers. We believe that building an evidence-based understanding of EDS can enable researchers to make more informed decisions about the selection of EDS. This paper reports our initial effort towards this end. We propose an initial set of metrics for characterizing the EDS from the perspective of the needs of secondary studies. We explain the usage and benefits of the proposed metrics using the data gathered from two secondary studies. We also tried to synthesize the data from the two studies and that from literature to provide initial evidence-based heuristics for EDS selection.", "num_citations": "149\n", "authors": ["1935"]}
{"title": "Microservices: Architecting for Continuous Delivery and DevOps\n", "abstract": " Businesses today need to respond to customer needs at unprecedented speeds. Driven by this need for speed, many companies are rushing to the DevOps movement and implementing Continuous Delivery (CD). I had been implementing DevOps and CD for Paddy Power, a multi-billion-euro betting and gaming company, for four years. I had found that software architecture can be a key barrier. To address the architectural challenges, we tried an emerging architectural style called Microservices. I have observed increased deployability, modifiability, and resilience to design erosion. At the same time, I also observed new challenges associated with the increased number of services, evolving contracts among services, technology diversity, and testing. I share the practical strategies that can be employed to address these new challenges, discuss situations for which Microservices may not be a good choice, and\u00a0\u2026", "num_citations": "122\n", "authors": ["1935"]}
{"title": "Continuous Delivery: Overcoming adoption challenges\n", "abstract": " Continuous Delivery (CD) is a relatively new software development approach. Companies that have adopted CD have reported significant benefits. Motivated by these benefits, many companies would like to adopt CD. However, adopting CD can be very challenging for a number of reasons, such as obtaining buy-in from a wide range of stakeholders whose goals may seemingly be different from\u2014or even conflict with\u2014our own; gaining sustained support in a dynamic complex enterprise environment; maintaining an application development team's momentum when their application's migration to CD requires an additional strenuous effort over a long period of time; and so on. To help overcome the adoption challenges, I present six strategies: (1) selling CD as a painkiller; (2) establishing a dedicated team with multi-disciplinary members; (3) continuous delivery of continuous delivery; (4) starting with the easy but\u00a0\u2026", "num_citations": "96\n", "authors": ["1935"]}
{"title": "Towards Architecting for Continuous Delivery\n", "abstract": " Continuous Delivery (CD) has emerged as an auspicious software development discipline, with the promise of providing organizations the capability to release valuable software continuously to customers. Our organization has been implementing CD for the last two years. Thus far, we have moved 22 software applications to CD. I observed that CD has created a new context for architecting these applications. In this paper, I will try to characterize such a context of CD, explain why we need to architect for CD, describe the implications of architecting for CD, and discuss the challenges this new context creates. This information can provide insights to other practitioners for architecting their software applications, and provide researchers with input for developing their research agendas to further study this increasingly important topic.", "num_citations": "67\n", "authors": ["1935"]}
{"title": "A status report on the evaluation of variability management approaches\n", "abstract": " OBJECTIVE \u2013 The objective of this study is to review the status of evaluation of Variability Management (VM) approaches in Software Product Line Engineering (SPLE). METHOD \u2013 We have carried out a systematic review of studies of VM in SPLE reported in any publication venue and published before September 2007. RESULTS \u2013 97 papers were selected according to our inclusion and exclusion criteria. The selected papers appeared in 56 publication venues and the dominance of well-known publication venues of SPLE is not very clear. Only a small portion of the identified approaches were evaluated using rigorous scientific methods. A detailed investigation of the studies employing empirical research methods revealed significant quality deficiencies in various quality assessment aspects. Even more disappointing finding is that the trends of scientific evaluation of VM approaches do not appear to be improving based on the analysis of the data extracted from the reviewed studied. CONCLUSIONS \u2013 The status of evaluation of VM approaches in SPLE is poor. Most of the approaches proposed are amenable to empirical evaluation, but the available evidence is sparse and the quality of the presented evidence is very low. The findings highlight the areas of improvement for rigorous evaluation of VM approaches.", "num_citations": "28\n", "authors": ["1935"]}
{"title": "Preliminary findings about devsecops from grey literature\n", "abstract": " Context: Emerging from the agile culture, DevOps particularly emphasizes development and deployment speed to achieve rapid value delivery, which however brings some security risks to the software development process. DevSecOps is an extension of DevOps, which is considered as a means to intertwine development, operation and security. Some companies with security concerns begin to take DevSecOps into consideration when it comes to the application of DevOps. Objective: The goal of this study is to report the state-of-the-practice of DevSecOps as well as calling for academia to pay more attention to DevSecOps. Method: Using Google search engine to collect articles on DevSecOps, we conducted a Grey Literature Review (GLR) on the selected articles. Results: Whilst there exists three major software security risks in DevOps, the establishment of DevOps pipeline provides opportunities for software\u00a0\u2026", "num_citations": "14\n", "authors": ["1935"]}
{"title": "Rationale-enriched Variability Management in Software Product Lines\n", "abstract": " Variability Management (VM) in Software Product Line (SPL) is a key activity that usually affects the degree to which a SPL is successful. There are various approaches have been proposed to manage variability. However, most of them fall short of explicitly and effectively capturing, managing, and sharing rationale of variability. Hence, among others, leaves the knowledge of implications of selecting a particular variant implicit. In this research, we investigate a rationale-enriched variability management approach that captures both the rationale of variability and the variability of the product line. Enriched by rationale, the variability of the software product line can be bettered communicated, decision on variant selection can be rationalized, and knowledge of variability can be explicitly accumulated.", "num_citations": "1\n", "authors": ["1935"]}