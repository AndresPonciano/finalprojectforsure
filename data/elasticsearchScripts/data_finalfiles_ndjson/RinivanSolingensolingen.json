{"title": "Goal question metric paradigm\n", "abstract": " CiNii \u8ad6\u6587 - Goal Question Metric Paradigm CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3 ] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7 \u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u95a2\u3059\u308b\u30a2\u30f3\u30b1\u30fc\u30c8 \u3092\u5b9f\u65bd\u4e2d\u3067\u3059\uff0811/11(\u6c34)-12/23(\u6c34)\uff09 CiNii Research\u30d7\u30ec\u7248\u306e\u516c\u958b\u306b\u3064\u3044\u3066 Goal Question Metric Paradigm BASILI VR \u88ab\u5f15\u7528\u6587\u732e: 2\u4ef6 \u8457\u8005 BASILI VR \u53ce\u9332\u520a\u884c\u7269 Encyclopedia of Software Engineering Encyclopedia of Software Engineering, 528-532, 1994 John Weily and Sons \u88ab \u5f15\u7528\u6587\u732e: 2\u4ef6\u4e2d 1-2\u4ef6\u3092 \u8868\u793a 1 \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30e1\u30c8\u30ea\u30af\u30b9 \u677e\u672c \u5065\u4e00 \u65e5\u672c\u30d5\u30a1\u30b8\u30a3\u5b66\u4f1a\u8a8c 10(5), 796-803, 1998 \u53c2\u8003\u6587\u732e24\u4ef6 \u88ab\u5f15\u7528\u6587\u732e1\u4ef6 2 \u5806\u7a4d\u578b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 Moraine \u3068\u30e1\u30c8\u30ea\u30af\u30b9 \u74b0\u5883 MAME \u3078\u306e\u9069\u7528 \u5c71\u672c \u54f2\u7537 , \u677e\u4e0b \u8aa0 , \u4e95\u4e0a \u514b\u90ce , Tetsuo Yamamoto , Makoto Matsushita , \u2026", "num_citations": "3321\n", "authors": ["1548"]}
{"title": "The Goal/Question/Metric Method: a practical guide for quality improvement of software development\n", "abstract": " The goal/question/metric method: a practical guide for quality improvement of software development \u2014 TU Delft Research Portal Skip to main navigation Skip to search Skip to main content TU Delft Research Portal Logo Help & FAQ Home Researchers Research Units Research output Activities Datasets Press / Media Prizes Projects Search by expertise, name or affiliation The goal/question/metric method: a practical guide for quality improvement of software development R van Solingen, EW Berghout Delft University of Technology Research output: Book/Report \u203a Book \u203a Scientific Overview Original language Undefined/Unknown Place of Publication Maidenhead Publisher McGraw-Hill Number of pages 199 ISBN (Print) 0-07-709553-7 Publication status Published - 1999 Publication series Name Publisher McGraw-Hill Keywords ZX Int.klas.verslagjaar < 2002 Cite this APA Author BIBTEX Harvard Standard RIS \u2026", "num_citations": "1402\n", "authors": ["1548"]}
{"title": "Implementation of Lean Six Sigma in small-and medium-sized manufacturing enterprises in the Netherlands\n", "abstract": " In this paper we provide an exploration and analysis of Lean Six Sigma (LSS) implementation in Dutch manufacturing/engineering small- and medium-sized enterprises (SMEs). Critical success factors (CSFs) and impeding factors are identified and analysed. Exploratory empirical evidence about LSS implementation in Dutch SMEs was collected from a survey study on Dutch SMEs. Statistical testing was applied to validate the ranking of the CSFs. To deepen insight in how organizations translate CSFs into practice and cope with impeding factors, additional in-depth qualitative information was gathered from six case studies. Linking to customer, vision and plan statement, communication and management involvement and participation are the highest ranked CSFs. Internal resistance, the availability of resources, changing business focus and lack of leadership are the strongest impeding factors. The case studies\u00a0\u2026", "num_citations": "269\n", "authors": ["1548"]}
{"title": "Measuring the ROI of software process improvement\n", "abstract": " Software process improvement has been on the agenda of both academics and practitioners, with the Capability Maturity Model as its de facto method. Many companies have invested large sums of money in improving their software processes, and several research papers document SPI's effectiveness. SPI aims to create more effective and efficient software development and maintenance by structuring and optimizing processes. SPI assumes that a well-managed organization with a defined engineering process is more likely to produce products that consistently meet the purchaser's requirements within schedule and budget than a poorly managed organization with no such engineering process. We discuss about the measuring the ROI in software process improvement.", "num_citations": "158\n", "authors": ["1548"]}
{"title": "Interrupts: just a minute never is\n", "abstract": " Software development is a highly abstract process that requires intense concentration. The authors show that interrupting this process can significantly reduce a developer's efficiency and can even contribute to project delays.", "num_citations": "143\n", "authors": ["1548"]}
{"title": "Implementation of continuous improvement based on Lean Six Sigma in small-and medium-sized enterprises\n", "abstract": " Research has highlighted a need for a specific and practical implementation framework for deploying Lean Six Sigma (LSS) in small- and medium-sized enterprises (SMEs). The success of LSS implementation in SMEs is highly dependent on the extent to which an LSS deployment programme addresses the specific properties of SMEs. In this study we have evaluated an existing framework for Six Sigma implementation for SMEs [Kumar, M., Antony, J., & Tiwari, M. K. (2011). Six Sigma implementation framework for SMEs \u2013 a roadmap to manage and sustain the change. International Journal of Production Research, 49(18), 5449\u20135467] using a multi-method triangulation approach. The objectives of this study were firstly to strengthen the foundations of the existing framework by uncovering evidence for some of its elements and, secondly, to identify the proposed revisions to the framework, especially focussed on its\u00a0\u2026", "num_citations": "110\n", "authors": ["1548"]}
{"title": "Integrating goal-oriented measurement in industrial software engineering: industrial experiences with and additions to the Goal/Question/Metric method (GQM)\n", "abstract": " Two major additions to the GQM (Goals/Questions/Metrics) method are presented based on seven years of experience with goal-oriented measurement programmes. GQM, is a method to organize software measurement programmes. Since the initial ideas of GQM were first published, much industrial experience has been gained and theory has been developed to underpin the approach. Two additions concern a thorough elaboration of the feedback of measurement data and a conjoined cost/benefit analysis of the GQM project. The first addition refers to establishing conditions that are necessary to facilitate learning in software measurement programmes. Learning about software quality is identified as the most important objective of a measurement programme. The second addition refers to identifying whether the measurement programme was actually worthwhile. Through a cost/benefit analysis, the software\u00a0\u2026", "num_citations": "61\n", "authors": ["1548"]}
{"title": "Business impact, benefit, and cost of applying GQM in industry: an in-depth, long-term investigation at Schlumberger RPS\n", "abstract": " Many success stories have been reported on specific effects of measurement, but little is known about the multiple interactions of measurement programmes with the business environment of a software organisation. This paper summarises industrial experiences with the Goal/Question/Metric (GQM) approach to software engineering measurement. They are based on long-term observation and additional detailed investigations at Schlumberger RPS. The paper reports the business impact of GQM in terms of identified benefit, cost models, and factors for successful application of GQM.", "num_citations": "43\n", "authors": ["1548"]}
{"title": "Software product evaluation\n", "abstract": " Evaluation of Information Technology is mostly considered as decision making on Information Technology investment proposals. However a selected investment proposal still has to be implemented. Actual realisation of such proposals is not as straightforward as it seems. Therefore activities must be started to manage conformance to the initial proposal. One of such activities is \u2018Software Product Evaluation\u2019. Software Product Evaluation is defined as the assessment of software product characteristics according to specified procedures. During a Software Product Evaluation the fit between the software product and the users\u2019 needs of that product are determined. This fit concerns both explicit and implicit needs about the product. This is often referred to as \u2018software product quality\u2019. Software Product Evaluation becomes more popular both in industry and academics. Several evaluation techniques are already available, and others are being developed. This paper presents the current status of software product evaluation and points out the future needs. We conclude that three main areas can be distinguished on which more progress is necessary: building a quality profile, selecting appropriate actions during software implementation to address the quality profile, and designing and executing the evaluation activities.", "num_citations": "43\n", "authors": ["1548"]}
{"title": "The impact of number of sites in a follow the sun setting on the actual and perceived working speed and accuracy: A controlled experiment\n", "abstract": " Follow the sun (FTS) software development seems promising in theory, however well founded knowledge on its successes is rare. One of the questions unanswered is: what is the impact of increasing the number of sites in a FTS cycle on working speed and accuracy? In this paper a controlled experiment is presented in which the impact of the number of sites in a daily cycle in terms of overall working speed, individual working speed and working accuracy is measured. Furthermore, the participants perception of working speed and their perception of working accuracy is investigated. The results indicate a clear discrepancy between actual and perceived performance, when increasing the number of sites.", "num_citations": "36\n", "authors": ["1548"]}
{"title": "Tool support for distributed software engineering\n", "abstract": " Developing a software system in collaboration with other partners, and on different geographical locations is a big challenge for organizations. In this article we first discuss a system that automates build and test processes: SoftFab. This system has been successfully applied in practice in the context of multisite projects. Then, we discuss a case where it was applied to a more challenging type of collaboration: a multipartner development environment. Furthermore, we investigate the underlying concepts of SoftFab and use them to define a list of features for systems that support distributed software engineering", "num_citations": "35\n", "authors": ["1548"]}
{"title": "Aligning codependent Scrum teams to enable fast business value delivery: A governance framework and set of intervention actions\n", "abstract": " Many enterprises that adopt Agile/Scrum suffer from collaboration issues between Scrum teams that depend on one another to deliver end-to-end functionality. These dependencies delay delivery and as a result deteriorate the business value delivered in such value chains. The objective of our study is to support enterprises that suffer from such dependencies with a governance framework that helps them mitigate collaboration issues between sets of codependent Scrum teams. We first identify a set of intervention actions that aim to mitigate the collaboration issues between codependent Scrum teams. Second, we validate the effectiveness of these intervention actions in a large confirmatory industrial case study. This study was held in a large multi-national financial institute that worked with a large number of codependent Scrum teams. Third, we triangulate the findings in three focus groups. We finally package the\u00a0\u2026", "num_citations": "33\n", "authors": ["1548"]}
{"title": "Product Focused Software Process Improvement: SPI in the embedded software domain\n", "abstract": " Product focused software process improvement : SPI in the... (2000) | www.narcis.nl KNAW KNAW Narcis Back to search results Eindhoven University of Technology Publication Product focused software process improvement : SPI in the... (2000) Open access . Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title Product focused software process improvement : SPI in the embedded software domain Author Solingen, van DM Thesis advisor Bemelmans, Theo MA; Brombacher, Aarnout C.; Trienekens, Jos JM Publisher Information Systems IE&IS Date issued 2000 Access Open Access Language English Type Doctoral Thesis Publisher Technische Universiteit Eindhoven Publication https://research.tue.nl/nl/publications/product-focused-soft... ISBN 90-386-0613-3 Persistent Identifiers NBN urn:nbn:nl:ui:25-15ee7222-b8a2-43a2-b3e8-3784ed3d06af \u2026", "num_citations": "30\n", "authors": ["1548"]}
{"title": "Selecting locations for follow-the-sun software development: Towards a routing model\n", "abstract": " Deciding where to establish development locations is a strategic decision in the field of follow-the-sun software development. Our research has focussed on two factors: a. the optimal time zone difference between locations, and b. the natural ease of communication. The former depends on the required transfer time for handing over work from one location to the other. The latter involves communication aspects such as language. The objective is to construct a routing model, which calculates (sub)optimal deployment routes. The routing model consists of an algorithm that calculates sequences of locations from a dataset containing demographic data about these locations. The possible sequences are prioritized based on a set of parameters. The routing model has been implemented in a website. The Website can be used to validate the routing model, but moreover can be used as a first support when considering\u00a0\u2026", "num_citations": "26\n", "authors": ["1548"]}
{"title": "The power of Scrum\n", "abstract": " Authors highlight computer software in fictional story about business owner The world of computer software can be difficult to understand if one is not entrenched in it every day. In their book\u00bf Power of Scrum\u00bf(ISBN 1463578067) Jeffrey V. Sutherland, DM van Solingen and Eelco Rustenberg use a fictional story to help the readers to better understand the real intricacies of the frame working software, Scrum. Scrum is a software development methodology that allows companies to work more efficiently and productively. This book gives readers an easy-to-read overview of Scrum and how and why it works. It uses a narrative story to explain some of the basic do\u00bf s and don\u00bf ts of using Scrum while presenting only a small amount of the theory that goes into the system. The story introduces us to Mark Resting, the Chief Technology Officer (CTO) of a software company. Resting has been having some difficulty with a project for one of his company\u00bf s major customers, LogiStrux. After meeting with the customer\u00bf s board in London, he meets Jerry, a Scrum system expert. After discussing Scrum, Resting is convinced that some of the strategies that the system uses can help in the LogiStrux project and possibly even in some of his company\u00bf s other areas of work. Resting invites Jerry to his company\u00bf s headquarters in Washington, DC so he can show him and his employees how to implement these new methods.\u00bf The book is a very easy read and can be read cover to cover in less than three hours,\u00bf Sutherland says.\u00bf The characters and narrative development were created to help translate some of the theories in Scrum to a more personal, and easier to\u00a0\u2026", "num_citations": "22\n", "authors": ["1548"]}
{"title": "SPI\u2013A guarantee for success?\u2013A reality story from industry\n", "abstract": " The Tokheim development centre in Bladel, The Netherlands, has a 10-year experience in applying Software Process Improvement methods (SPI). Several methods were used to improve and adapt the software development process and successes have been booked regularly during those years. In 1992 the Bladel site was ISO9001 certified and achieved CMM Level 2. Now several years later the software development centre is still ISO9001/TickIT certified, however recent BOOTSTRAP Assessments pointed out that several sub-processes of the software development process can be rated in the lowest capability ranges. It is our observation that the reason for this is that the SPI program has been heavily influenced by several factors not clearly identified in most methods. The presence and extent of these influencing factors is a major prerequisite for the successful implementation of a SPI method. This\u00a0\u2026", "num_citations": "20\n", "authors": ["1548"]}
{"title": "Applications of measurement in product-focused process improvement: A comparative industrial case study\n", "abstract": " In ESPRIT project PROFES, measurement according to the Goal/Question/Metric (GQM) approach is conducted in industrial software projects at Drager Medical Technology, Ericsson Finland, and Schlumberger Retail Petroleum Systems. A comparative case study investigates three different ways of applying GQM in product-focused process improvement: long-term GQM measurement programmes at the application sites to better understand and improve software products and processes; GQM-based construction and validation of product/process dependency models, which describe the process impact on software quality; and cost/benefit investigation of the PROFES improvement methodology using GQM for (meta-) analysis of improvement programmes. This paper outlines how GQM is applied for these three purposes.", "num_citations": "20\n", "authors": ["1548"]}
{"title": "On integrating assessment and measurement: towards continuous assessment of software engineering processes\n", "abstract": " Goal-driven measurement and software process assessment are established technologies and are used extensively in the software industry to facilitate process improvement. Usually, these are activities performed by separate measurement and assessment experts with little mutual co-operation. In the PROFES research project, measurement and assessment have been successfully integrated to save costs and seek synergies. In this paper, we describe these integration possibilities and identify their limitations, with a focus on continuous assessment using ISO 15504 as a background reference model for software processes. As a practical example, we present Tokheim's experience of establishing and using the continuous assessment approach in extending their measurement programme on the system testing process of the Omega system.", "num_citations": "19\n", "authors": ["1548"]}
{"title": "Application of software measurement at Schlumberger RPS: Towards enhancing GQM\n", "abstract": " At Schlumberger RPS, the application of the Goal/Question/Metric approach (GQM) and the Quality Improvement Paradigm (QIP) resulted in an enhanced \u2018model-based GQM\u2019. It customizes measurement to the organization and supports in the reuse of experience, by applying and maintaining reusable reference models. This \u2018model-based GQM\u2019is a more formal method for the application of software measurement. It can be used to create a more complete and consistent definition of a measurement program, resulting in a highly effective and efficient approach for introducing software measurement.Model-based GQM is based on experiences in a measurement program where Schlumberger RPS obtained knowledge on their current processes by measuring: product reliability, costs of failure repair, costs and benefits of reusing software, the impact of interrupts, and fault detection efficiency using GQM methodology. Schlumberger RPS will continue applying and expanding QIP and \u2018model-based GQM\u2019measurement in the organization, since it is convinced that continuous software process improvement is the only way to survive in a world where products have a growing dependence on increasingly complex software technology.", "num_citations": "19\n", "authors": ["1548"]}
{"title": "Improvement by goal-oriented measurement\n", "abstract": " Metrics-programmes give powerful support to quality improvement of both software products and development processes. A well-known and popular software measurement approach is the Goal/Question/Metric method (GQM). This article presents a research road-map intended to enhance GQM. The main motive behind that presentation is that GQM will probably become the de-facto standard for software measurement. Nevertheless, many suggestions can be made to improve GQM. The Capability Maturity Model (CMM), which is intended to provide a framework to assess an organisation\u2019s software development practice, is applied in this article to assess GQM. Our research objective is, of course, to bring GQM to CMM\u2019s highest level 5.", "num_citations": "18\n", "authors": ["1548"]}
{"title": "Die Kraft von Scrum: Inspiration zur revolution\u00e4rsten Projektmanagementmethode\n", "abstract": " Scrum ist ein leichtgewichtiger agiler Ansatz f\u00fcr das Projektmanagement, der schnelle und effektive Softwareentwicklung f\u00f6rdert. Dabei folgt Scrum einem Schritt-f\u00fcr-Schritt-Ansatz und fokussiert auf Wertsch\u00f6pfung, Teamverantwortung und das enge Einbeziehen der Kunden. Scrum wird in der IT-Industrie bereits vielfach eingesetzt, doch auch jedes andere Projekt k\u00f6nnte von seinen Prinzipien profitieren. Dieses au\u00dfergew\u00f6hnliche Managementbuch vermittelt in einem erz\u00e4hlenden Stil ein Verst\u00e4ndnis der agilen Denkweise im Allgemeinen und des Scrum-Ansatzes im Besonderen. Aus der Perspektive Marc Berners, CTO einer Softwareproduktfirma, lernt der Leser die verschiedenen Aspekte kennen, die es zu ber\u00fccksichtigen gilt, wenn man Scrum im Unternehmen einf\u00fchrt und in der Entwicklung erfolgreich einsetzen m\u00f6chte. Das wichtigste Projekt Marc Berners steckt in gro\u00dfen Schwierigkeiten. Mit der Hilfe seines norddeutschen Scrum-Coaches Stefan wird die Vorgehensweise des Entwicklungsteams komplett ge\u00e4ndert und das Projekt kann schlie\u00dflich zum Erfolg gef\u00fchrt werden. Dabei werden viele der bisherigen Kernprobleme strukturell und nachhaltig beseitigt.", "num_citations": "15\n", "authors": ["1548"]}
{"title": "Scrum in sales: How to improve account management and sales processes\n", "abstract": " Like most client service units, the sales and account management teams at iSense accepted that sales are a random, reactive process. After all, customers, not sales managers, decide whether or not to buy. Then, after deciding to learn more about a certain offering, Scrum training, the teams found a way to take more control over this process. In the fall of 2010, the iSense sales and account management teams decided to adopt Scrum internally as their best practice. Scrum transformed the random process, revealing early indicators related to final sales results, and showed that the direct causes for closing a deal could be detected and controlled. Once it became possible to predict and influence final order intake and sales numbers, the sales teams used early predictive indicators to proactively control their work. With the sales processes under better control, the teams could improve continuously and have more fun at\u00a0\u2026", "num_citations": "15\n", "authors": ["1548"]}
{"title": "Calculating software process improvement\u2019s return on investment\n", "abstract": " Many organizations and firms invest in software process improvement (SPI). They do this in order to satisfy business goals for customer satisfaction, time-to-market, cost, quality, and reliability. Return on investment (ROI) is a traditional approach for measuring the business or monetary value of an investment. As such, it can be used for measuring the economic benefit of investing in SPI. Measuring the ROI of SPI is still in its early infancy, in spite of the fact that ROI has been around for many decades and the discipline of SPI itself has also been popular for at least 20 years.It is important to note that ROI is a metric that can be used before and after an investment in SPI. ROI can be used to evaluate (a priori) investment opportunities and make a proper selection and ROI can be used to evaluate (a posteriori) the extent to which an investment was legitimate. Although the value of using ROI for SPI calculations seems self\u00a0\u2026", "num_citations": "15\n", "authors": ["1548"]}
{"title": "Software Quality from a business perspective\n", "abstract": " Software quality from a business perspective (1997) | www.narcis.nl KNAW KNAW Narcis Back to search results Eindhoven University of Technology Publication Software quality from a business perspective (1997) Pagina-navigatie: Main Save publication Save as MODS Export to Mendeley Save as EndNote Export to RefWorks Title Software quality from a business perspective Author Trienekens, JJM; Veenendaal, van EPWM; Solingen, van DM; Punter, HT; Zwan, van der M. Publisher Information Systems IE&IS Date issued 1997 Access Restricted Access Language English Type Book Publisher Kluwer Bedrijfsinformatie Publication https://research.tue.nl/nl/publications/software-quality-fro... OpenURL Search this publication in (your) library ISBN 90-267-2631-7 Persistent Identifier urn:nbn:nl:ui:25-3180f839-499d-4de5-bf9b-9f1e096ab4d3 Metadata XML Source Eindhoven University of Technology Go to Website \u2026", "num_citations": "15\n", "authors": ["1548"]}
{"title": "Using GSSs to support error detection in software specifications\n", "abstract": " Fagan inspections can be used to find errors in documents used during systems development. In the practice of Fagan inspections it has been found that Group Support Systems (GSSs) can significantly enhance error detection. This paper describes our findings on the use of a GSS by Fagan inspection teams in an experimental set-up. In this study, 24 students and 24 managers participated; they looked for defects in a standardized four-page document. In the preparation phase the participants, searching individually without GSS support, found within one hour between 12 and 40 defects. Prior to the second (or 'logging') phase of the inspection we formed 16 groups, each consisting of three students or three managers. Eight groups were selected to work with GSS support, and eight groups without GSS but with a facilitator. We found that only 3 to 9 new defects were found in the second phase. The performance of\u00a0\u2026", "num_citations": "13\n", "authors": ["1548"]}
{"title": "CMMI roadmaps\n", "abstract": " CMMI roadmaps--which are a goal-driven approach to selecting and deploying relevant process areas from the CMMI-DEV model--can provide guidance and focus for effective CMMI adoption. The Dutch Software Process Improvement SPIder network convened a workshop in November 2006 to develop several CMMI roadmaps for the continuous representation, each with a specific set of improvement goals. These roadmaps combine the strengths of both the staged and the continuous representations.Descriptors:", "num_citations": "11\n", "authors": ["1548"]}
{"title": "Establishing product process dependencies in SPI\n", "abstract": " One of the basic assumptions behind most software process improvement methods is that improved processes lead to improved product quality. Despite the popularity of SPI methods, there is a lack of both methods and experience reports on the explicit relationship between software process improvement (SPI) and product improvement. PROFES is a methodology that helps to shift from generic process improvement towards focused improvement of the software processes based on explicit product quality requirements. It combines and enhances methods such as goal-oriented measurement (GQM), process assessment (ISO15504), product and process modelling, and experience factory. The integration of these methodologies helps to focus improvement activities and to use resources more efficiently.PROFES introduces a new method for establishing product process dependencies (PPD), which are used to describe the relationship and interdependency between process and product quality. PPDs are a core element of the PROFES method, and are to date unique in the world of SPI. The initial PPD models were constructed in three industrial organisations, which offered real-life experimental environments for methodology development and validation.", "num_citations": "11\n", "authors": ["1548"]}
{"title": "A follow-up reflection on software process improvement ROI\n", "abstract": " Our discipline must shift toward value-based software engineering, because we're obliged to prove our contributions to the financial bottom line. In the May/June 2004 IEEE Software special issue on return on investment (ROI), the author presented measurement results for the ROI of software process improvement (SPI). This article made three main contributions. First, provided a detailed overview of publications containing real-life measurement results from practical applications of SPI, in which the author measured the ROI. My study included 20 cases, with an average ROI of 7 and a median of 6.6. This indicates that SPI's net profit seems to be approximately US$7 for every dollar invested. However, I found no published cases in which SPI investments resulted in a measurable loss; furthermore, the ROI bandwidth was large (between 1.5 and 19). This indicates that the actual ROI of an SPI investment seems hard\u00a0\u2026", "num_citations": "10\n", "authors": ["1548"]}
{"title": "Establishing continuous assessment using measurements\n", "abstract": " Software process assessments have become commonplace in the software industry. Assessments are sometimes regarded, however, as too infrequent, expensive and disruptive. Hence, there is a clear need for alternative ways to assess the current status of software processes and monitor the implementation of improvement activities. An assessment of software processes is based on finding indicators for establishing whether certain processes exist and how well they are performed. Based on the assessment outcome, improvement actions will be identified and guided with appropriate measurements. The software process (re-) assessment can be supported and made more frequent by using data from these measurements, and thus reducing the cost of the assessment. In the European project PROFES (PROduct-Focused Improvement of Embedded Software processes) an integrated, product-focused process improvement methodology has been developed and tested in the industrial partner sites. Among other things, PROFES...", "num_citations": "10\n", "authors": ["1548"]}
{"title": "Effort measurement of support to software products\n", "abstract": " Goal-oriented software measurement is an important means to support development teams. Both theory and practice uses the Goal/Question/Metric method (GQM) often to structure measurement efforts. In the context of software process improvement many companies start adopting the GQM method to guide their improvements. In this paper we present a project in which a software development team was supported in their shift from development to maintenance work. This Project team developed a product for a global market, but this product is also customised to national requirements in separate local teams. After the second release of the product, the team that originally developed the product, had to shift to a role in which they give support to the national distributed customisation teams. However, this change implied that the team could no longer plan their activities as usual, because they became more dependent on questions and demands from these customisation teams. To support our target team in the learning process from development to maintenance, we applied the GQM method to measure effort spending to visualise how the change impacted the workload of the team. This paper presents the outline of the measurement programme, the learning process of the team, and contains some of the measurement data. Supported by the measurements presented in this paper, the team learned their new role rather fast, and planning of their new activities became possible because of having \u2018real\u2019data available.", "num_citations": "10\n", "authors": ["1548"]}
{"title": "Using FAME assessments to define measurement goals\n", "abstract": " Although assessment-based approaches and measurement-based approaches are often considered as competitors, they compliment each other very well. Assessments are strong in identifying improvement objectives within a relatively short time frame, but are weak in guiding the actual implementation of the proposed changes. Measurement, however, supports very well in supporting actual changes and providing feedback on the effects of these changes, but has a difficulty with selecting the right goals. In this paper, we suggest an approach in which focused assessments are used to identify improvement goals and to use goal-oriented measurement to guide the implementation of the actual changes.", "num_citations": "9\n", "authors": ["1548"]}
{"title": "Reliability modeling of freely-available internet-distributed software\n", "abstract": " A wealth of freely-available software is available on the Internet; however, developers are wary of its reuse because it is assumed to be of poor quality. Reliability is one way that software quality can be measured, but it requires metrics data that are typically not maintained for freely-available software. A technique is presented which allows reliability data to be extracted from available data, and is validated by showing that the data can be used to fit a logarithmic reliability model. By modeling the reliability, estimates of overall quality, remaining faults, and release times can be predicted for the software.", "num_citations": "9\n", "authors": ["1548"]}
{"title": "A Delphi study on Six Sigma tools and techniques\n", "abstract": " The purpose of this paper is to present a set of tools and techniques for the different phases of Six Sigma improvement projects in manufacturing and engineering organisations, based on a literature study and expert judgement. A literature study was conducted to identify tools and techniques applied within case studies. The findings with respect to the tools and techniques used in the industrial settings studied were listed as a set of so-called statements. In a Delphi study, a group of experts commented on and prioritised 95 statements during three rounds, providing us with a final list of 46 statements. These statements were grouped into the DMAIC-phases of Six Sigma projects, resulting in a description of tools and techniques to be used in DMAIC-structured projects within a manufacturing/engineering context. The overview of tools and techniques presented in this paper has a descriptive character.", "num_citations": "8\n", "authors": ["1548"]}
{"title": "Integrating software engineering technologies for embedded systems development\n", "abstract": " In order to solve the ever-increasing gap between required productivity and quality of embedded software on the one hand, and the industrial capabilities in fulfilling these requirements on the other hand, several European organisations decided to tackle this problem together. By forming the MOOSE consortium (\u201cSoftware Engineering Methodologies for Embedded Systems\u201d), they started an effort for integrating the available tools, techniques, methods and processes involved in embedded software development. The main starting point of MOOSE is that the available technologies for embedded software development are too fragmented; time, effort and money can be saved by supporting a better integration over development phases and between technologies. This paper presents the starting points of the MOOSE project and introduces some first concepts for achieving the ambitious goals set by the consortium.", "num_citations": "8\n", "authors": ["1548"]}
{"title": "A replicated study on correlating agile team velocity measured in function and story points\n", "abstract": " Since the rapid growth of agile development methods for software engineering, more and more organizations measure the size of iterations, releases, and projects in both function points and story points. In 2011 Santana et al. performed a case study on the relation between function points and story points, from data collected in a Brazilian Government Agency. In this paper we replicate this study, using data collected in a Dutch banking organization. Based on a statistical correlation test we find that a comparison between function points and story points as measured in our repository indicates a moderate negative linear relation, where Santana et al. concluded a strong positive linear relation between both size metrics in their case study. Based on the outcome of our study we conclude that it appears too early to make generic claims on the relation between function points and story points; in fact FSM-theory seems to\u00a0\u2026", "num_citations": "7\n", "authors": ["1548"]}
{"title": "De kracht van SCRUM\n", "abstract": " De kracht van SCRUM \u2014 TU Delft Research Portal Skip to main navigation Skip to search Skip to main content TU Delft Research Portal Logo Help & FAQ Home Researchers Research Units Research output Activities Datasets Press / Media Prizes Projects Search by expertise, name or affiliation De kracht van SCRUM DM van Solingen, E Rustenburg Software Engineering Research output: Book/Report \u203a Book \u203a Professional Overview Original language Dutch Place of Publication Amsterdam Publisher Pearson Education Number of pages 144 ISBN (Print) 9789043020473 Publication status Published - 2010 Publication series Name Publisher Pearson Education Keywords Vakpubl., Overig wet. > 3 pag Access to Document http://www.dekrachtvanscrum.nl Cite this APA Author BIBTEX Harvard Standard RIS Vancouver van Solingen, DM., & Rustenburg, E. (2010). De kracht van SCRUM. Pearson Education. van \u2026", "num_citations": "7\n", "authors": ["1548"]}
{"title": "A validation approach for product-focused process improvement\n", "abstract": " As the number of software engineering improvement methodologies and their adoption rate in industry increase, the validation of improvement methodologies becomes more and more important. Past validation studies show the effectiveness of improvement methodologies. However, they also reveal many technical difficulties for scientifically sound and detailed validation studies.This paper surveys the state of the art in improvement methodology validation and derives recommendations for systematic validation studies, which are substantiated by experiences from the European PROFES project. PROFES has developed a product-focused software process improvement methodology and started its empirical validation already early in the project.", "num_citations": "7\n", "authors": ["1548"]}
{"title": "The Cost and Benefits of Software Process Improvement\n", "abstract": " In order to improve performance towards business goals, such as time-to-market, product cost and/or quality, many IT companies invest into Software Process Improvement (SPI). SPI attempts to improve the performance of IT activities on eg productivity, quality, time-to-market, and cost, by structuring and managing the underlying processes. This paper provides an overview on the status of cost/benefit numbers that have been published for SPI. Furthermore, it provides ideas and suggestions on how organisations should measure and analyse their return of SPI investments.", "num_citations": "6\n", "authors": ["1548"]}
{"title": "Agile GQM: Why Goal/Question/Metric is more Relevant than Ever and Why It Helps Solving the Agility Challenges of Today's Organizations\n", "abstract": " In this key-note presentation I will reflect on GQM, its' starting principles and lessons learned, and will evolve to the relevance in todays' fast moving world and clarify how GQM is there to serve its' purpose. GQM is now more relevant and more suitable than it has ever been.", "num_citations": "5\n", "authors": ["1548"]}
{"title": "Causal Relationships between Improvements in Software Development Processes and Final Software Product Quality.\n", "abstract": " A main assumption of software process improvement (SPI) is that improvements in a software development process result in higher quality software products. In other words, SPI assumes the existence of causal relations between process and product characteristics. To what extent have these causal relations, however, been explored? Which specific process improvements have which particular impact on which particular product quality attributes?In this paper an overview is given of these \u201csoftware process and product dependencies\u201d(PPD). This overview comprises of a list of SPI-techniques and the associated product quality attributes that are addressed with these techniques. The extent of the causality is investigated and whether there is a possibility to identify more or less effective strategies for product quality improvement. The overview is based on a literature study and expert evaluation.", "num_citations": "5\n", "authors": ["1548"]}
{"title": "The Role of GQM in the PROFES Improvement Methodology\n", "abstract": " In the ESPRIT project PROFES (PROduct-Focused Improvement of Embedded Software processes) a goaldriven process improvement methodology been developed that combines and enhances methods like goaloriented measurement, product assessment, process assessment, and process modelling. So far, the PROFES improvement methodology has been applied in multiple projects at three industrial embedded software development organisations. In all three organisations considerable product quality and process improvements have been achieved. A fundamental element of the PROFES improvement methodology is goal-oriented measurement conducted according to the principles of the Goal/Question/Metric (GQM) paradigm. In the PROFES improvement methodology GQM is used for several purposes:(1) characterisation and evaluation of product quality,(2) characterisation and evaluation of process performance,(3) modelling and evaluation of product-process dependencies, and (4) facilitation of continuous assessment. In th...", "num_citations": "5\n", "authors": ["1548"]}
{"title": "Assessing feedback of measurement data: relating Schlumberger RPS practice to learning theory\n", "abstract": " Schlumberger RPS successfully applies software measurement to support their software development projects. It is proposed that the success of their measurement practices is mainly based on the organization of the interpretation process. This interpretation of the measurement data by the project team members is performed in so-called 'feedback sessions'. Many researchers identify the feedback process of measurement data as crucial to the success of a quality improvement program. However, few guidelines exist about the organization of feedback sessions. For instance, with what frequency should feedback sessions be held, how much information should be presented in a single session, and what amount of user involvement is advisable? Within the Schlumberger RPS search to improve feedback sessions, the authors explored learning theories to provide guidelines to these type of questions. After all, what is\u00a0\u2026", "num_citations": "5\n", "authors": ["1548"]}
{"title": "Scrum voor managers\n", "abstract": " Behoudens de in of krachtens de Auteurswet gestelde uitzonderingen, mag niets uit deze uitgave worden verveelvoudigd, opgeslagen in een geautomatiseerd gegevensbestand of openbaar gemaakt in enige vorm of op enige wijze, hetzij elektronisch, mechanisch, door fotokopie\u00ebn, opnamen of enige andere manier, zonder voorafgaande schriftelijke toestemming van de uitgever.Voor zover het maken van reprografische verveelvoudigingen uit deze uitgave is toegestaan op grond van artikel 16 h Auteurswet, dient men de daarvoor wettelijk verschuldigde vergoedingen te voldoen aan de Stichting Reprorecht (Postbus 3051, 2130 KB Hoofddorp, www. reprorecht. nl). Voor het overnemen van gedeelte (n) uit deze uitgave in bloemlezingen, readers en andere compilatiewerken (artikel 16 Auteurswet) dient men zich te wenden tot de Stichting PRO (Stichting Publicatie-en Reproductierechten Organisatie, Postbus 3060, 2130 KB Hoofddorp, www. cedar. nl/pro). Voor het overnemen van een gedeelte van deze uitgave ten behoeve van commerci\u00eble doeleinden dient men zich te wenden tot de uitgever.", "num_citations": "3\n", "authors": ["1548"]}
{"title": "Measuring Best-in-Class Software Releases\n", "abstract": " In this research we aimed to identify distinguishing factors in software releases. For this purpose we analyzed the metrics of 26 software projects. These projects were release-based deliveries from two stable, experienced development teams. During the measurement period both teams transformed from a plan-driven delivery model (waterfall) to an agile approach (Scrum). Overall, we observed that these small release-based projects differ largely from non-release-based projects. Our research indicates that a combination of release-based working, a fixed and experienced development team, and a steady heartbeat contribute to performances that can be characterized as best-practice. The main contribution of this paper is that we found five success factors (all reducing development complexity) that result in best-of-class performance for small software releases.", "num_citations": "3\n", "authors": ["1548"]}
{"title": "Scrum voor dummies\n", "abstract": " Openheid: Het is belangrijk om ervoor te zorgen dat je zo veel mogelijk kansen cre\u00ebert om te leren. Fouten maken is niet erg. Zorg dat je met zijn allen van je fouten leert. Respect: Heb respect voor elkaar, iedereen heeft zijn eigen ervaring en achtergrond. Wees open, en doe het op een opbouwende manier. Toon interesse in elkaar en koester de verschillen. Moed: Om tot verbeteringen te komen en veranderingen door te voeren is moed nodig, een beetje lef kan geen kwaad:'Beter achteraf om vergiffenis vragen, dan vooraf om toestemming.'", "num_citations": "3\n", "authors": ["1548"]}
{"title": "State of the practice in European embedded software engineering\n", "abstract": " \u2022 Innovation includes usage\u2013Technology development without usage is NOT innovation\u2013Many research initiatives focus on technology development only\u2013Technology adoption by industry often lasts long\u2022 Two types of innovation\u2013Initial innovation\u2022 First time development and industrial application\u2013Evolutionary innovation\u2022 Continuous improvement from application experiences\u2022 Moose facilitation through experience exchange\u2013Sharing what worked and did not work in which situation and why", "num_citations": "3\n", "authors": ["1548"]}
{"title": "On software engineering and learning theory Facilitating learning in software quality improvement programs\n", "abstract": " \u201cKnowledge\u201d is one of the main results of software engineering, software projects and software process improvement. During software engineering projects, developers learn to apply certain technologies and how to solve particular development problems. During the process of software improvement developers and managers learn how effective and efficient their development processes are, and how to improve these processes. As \u201clearning\u201d is so important in software practice, it is logical to examine it more closely. What is learning? How does learning take place? Is it possible to improve the conditions of learning? This chapter presents an overview of learning theories and the application of these theories in the software-engineering domain. It is not our intention to be complete; our objective is to show how established learning theories can help to facilitate learning in software development practice.", "num_citations": "3\n", "authors": ["1548"]}
{"title": "Product focused SPI in the embedded systems industry-Experiences of Dr\u00e4ger, Ericsson and Tokheim\n", "abstract": " Software specific problems have been handled in the software community through focusing on the software process, and continuous improvement of that software process. However, the contribution of software process improvement (SPI) to product quality has not been proven yet. The PROFES project customised successful approaches into one embedded systems specific SPI methodology focused on improving product quality. This PROFES improvement has been fully applied in three embedded systems developing organisations: Drger Medical Technology, Ericsson and Tokheim, in three industries (telecommunication, medical systems, and petroleum retailing). The main message from these applications is that PROFES really helps in focusing to product areas that have a priority for improvement. The companies strongly support that only effort is spent on product attributes that are relevant. Quality of the final product is the central objective, which is highly appreciated, since the embedded system itself is...", "num_citations": "3\n", "authors": ["1548"]}
{"title": "Rapid Interactive feedback\n", "abstract": " It is assumed that many measurement programs fail because of the lack of normative models to assess a measurement program in advance. Our last years ESCOM presentation was about enhancing GQM with the characteristics of software development and software products. This enhancement improves the definition process of a measurement program. Schlumberger RPS is continuing its measurement program successfully, which appears to be largely due to its organisation of the feedback sessions. Our research is currently focused on normative models regarding this feedback process. This area is of special interest because rapid and interactive feedback sessions are regarded to be essential for the success of the entire process improvement program.", "num_citations": "3\n", "authors": ["1548"]}
{"title": "Scrum en action\n", "abstract": " Un r\u00e9cit haletant sur une m\u00e9thode de G. Bodet gestion de projet r\u00e9volutionnaire! Scrum est certainement la m\u00e9thode de gestion de projet\" agile\" la plus connue et la plus simple \u00e0 comprendre. Souple et l\u00e9g\u00e8re, elle peut \u00eatre appliqu\u00e9e \u00e0 de nombreuses situations, y compris en compl\u00e9ment d'approches formelles comme Prince 2 ou CMMI. Fond\u00e9e sur des strat\u00e9gies initialement mises au point dans le monde de la microfinance, elle vise \u00e0 d\u00e9multiplier les capacit\u00e9s des \u00e9quipes, notamment en lib\u00e9rant le potentiel de chacun, et \u00e0 les conduire vers un \u00e9tat de tr\u00e8s haute performance collective. Cet ouvrage, ou plut\u00f4t ce roman, vous livre d'une mani\u00e8re peu conventionnelle et efficace l'essence de cette m\u00e9thode. Il vous familiarisera avec ses concepts et vous aidera \u00e0 saisir toute la puissance des m\u00e9canismes activ\u00e9s par le d\u00e9veloppement agile. \u00c0 mettre dans les mains de tous ceux qui cherchent \u00e0 augmenter la valeur ajout\u00e9e des logiciels qu'ils d\u00e9veloppent, la satisfaction de leurs clients et le plaisir de leurs \u00e9quipes!", "num_citations": "2\n", "authors": ["1548"]}
{"title": "De kleine CMMI voor ontwikkeling\n", "abstract": " De kleine CMMI voor ontwikkeling \u2014 TU Delft Research Portal Skip to main navigation Skip to search Skip to main content TU Delft Research Portal Logo Help & FAQ Home Researchers Research Units Research output Activities Datasets Press / Media Prizes Projects Search by expertise, name or affiliation De kleine CMMI voor ontwikkeling JJ Cannegieter, DM van Solingen Software Engineering Research output: Book/Report \u203a Book \u203a Professional Overview Original language Undefined/Unknown Place of Publication Den Haag Publisher SDU Number of pages 128 Volume 3e druk ISBN (Print) 9789012581288 Publication status Published - 2009 Publication series Name Publisher SDU Keywords Vakpubl., Overig wet. > 3 pag Cite this APA Author BIBTEX Harvard Standard RIS Vancouver Cannegieter, JJ., & van Solingen, DM. (2009). De kleine CMMI voor ontwikkeling. SDU. Cannegieter, JJ ; van Solingen, DM. / \u2026", "num_citations": "2\n", "authors": ["1548"]}
{"title": "In-Project Learning by Goal-oriented Measurement\n", "abstract": " Measurement is often advocated as a means to get a better grip on software development. Measurement implements a method to gain knowledge of what is happening, and therefore is in fact a learning process. The most common method for software measurement is the Goal/Question/Metric approach (GQM). In the GQM method a systematic approach is represented for tailoring and integrating goals to models of the software processes, products, and quality perspectives of interest, based upon the specific needs of the project and the organization. By using GQM, metrics are defined from a top-down perspective, and analyzed, and interpreted from the bottom up. This interpretation process is a group learning process. GQM trees of goals, questions, and metrics are built on knowledge of the experts in the organization: the developers. Knowledge acquisition techniques are used to capture the implicit models\u00a0\u2026", "num_citations": "2\n", "authors": ["1548"]}
{"title": "Product focused software process improvement\n", "abstract": " The difficulties of creating high quality embedded products are addressed in this thesis. Embedded products are integrated into daily life at all kinds of levels and in all kinds of situations. Examples of embedded products include flight control systems, air bags, ATMs, mobile phones, televisions, fuel pumps, and infusion monitors. The quality of these products is an important topic, as quality has direct consequences for people\u2019s lives, financial situation and happiness. Although most people support the importance of quality products, our ability to create or guarantee high quality embedded products is not very well established. Many products are being developed, but their level of quality is often more due to luck than judgement and sound engineering.An approach is introduced in this thesis to manage product quality. Explicit, product driven, customisations of the development process are recommended in tandem with learning the effects on product quality of these changes. A conceptual model of this approach is presented and guidelines that can be used to apply this approach in practice are given. The thesis is rounded of with case-studies, detailing the application of the recommended approach in an industrial setting.", "num_citations": "2\n", "authors": ["1548"]}
{"title": "Applying Software Measurement to Organisational Issues-Measuring the causes and effects of interrupts during embedded software development\n", "abstract": " Software development requires concentration and creativity of engineers, butinterrupts' by, for example, visiting colleagues or phone-calls from customers, disturb concentrated engineers during their activities. Even though many of these interrupts are necessary, they cause problems for the interrupted engineer. An interrupt does not only stop an engineer from working, but also implies extra (often not planned) work. Eventually, this may cause project planning problems, stress, quality problems, or delay of delivery dates. Although the software engineering community puts much effort into quality and process improvement, theinterrupt'phenomenon remains rarely studied. In this paper, we present the practical results of measuring causes and effects of interrupts during development work in two organisations that develop embedded products, being: Drger Medical Electronics and Schlumberger Retail Petroleum Systems. To structure our research in both organisations, we applied the Goal/Qu...", "num_citations": "2\n", "authors": ["1548"]}
{"title": "Applying Software Measurement to Organizational Issues\n", "abstract": " Software development requires concentration and creativity of engineers, but \u2018interrupts\u2019 by, for example, visiting colleagues or phone-calls from customers, disturb concentrated engineers during their activities. Even though many of these interrupts are necessary, they cause problems for the interrupted engineer. An interrupt does not only stop an engineer from working, but also implies extra (often not planned) work. Eventually, this may cause project planning problems, stress, quality problems, or delay of delivery dates.Although the software engineering community puts much effort into quality and process improvement, the \u2018interrupt\u2019phenomenon remains rarely studied. In this paper, we present the practical results of measuring causes and effects of interrupts during development work in two organisations that develop embedded products, being: Dr\u00e4ger Medical Electronics and Schlumberger Retail Petroleum\u00a0\u2026", "num_citations": "2\n", "authors": ["1548"]}
{"title": "Solutions for challenges in global collaborative product development\n", "abstract": " The size and complexity of embedded systems is increasing rapidly, making it difficult for companies to develop all the required functionality alone. On the other hand, experience has shown that traditional single-company development technologies do not support collaborative product development well. Thus, by improving the collaborative way of working, the competitiveness of software-intensive product developing companies can be increased; for example, they can use subcontractors for simple tasks and focus their own effort on innovative new products. In this innovation report, two solutions to enhance the productivity of collaborative product development are introduced: Merlin Handbook and ToolChain. These solutions have been developed in the three-year Merlin project (no 03010)[1].", "num_citations": "1\n", "authors": ["1548"]}
{"title": "Partnership with customers in product improvement\n", "abstract": " The features of electrotechnical products are increasingly provided by software instead of hardware. Software is the keyfactor in creating products that are \u2018better\u2019 than those from competitors, with respect to quality, price, functionality, reliability and performance. During embedded software development, testing products is a major task, like it is for non-embedded software development. Real-life is the best testing environment. Therefore a testing approach widely applied for embedded products is a method termed \u2018Field Testing\u2019. This is the release of a small number of products to customers. The objective of a field test is to make sure that faults and failures are reported and taken out of the product, before normal distribution can start. Schlumberger RPS applies field tests to its products for that purpose.               The actual number of failures reported from field tests is lower than expected. However, failures are\u00a0\u2026", "num_citations": "1\n", "authors": ["1548"]}