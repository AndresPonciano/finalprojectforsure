{"title": "A Taxonomy and Survey of Dynamic Graph Visualization\n", "abstract": " Dynamic graph visualization focuses on the challenge of representing the evolution of relationships between entities in readable, scalable and effective diagrams. This work surveys the growing number of approaches in this discipline. We derive a hierarchical taxonomy of techniques by systematically categorizing and tagging publications. While static graph visualizations are often divided into node\u2010link and matrix representations, we identify the representation of time as the major distinguishing feature for dynamic graph visualizations: either graphs are represented as animated diagrams or as static charts based on a timeline. Evaluations of animated approaches focus on dynamic stability for preserving the viewer's mental map or, in general, compare animated diagrams to timeline\u2010based ones. A bibliographic analysis provides insights into the organization and development of the field and its community. Finally\u00a0\u2026", "num_citations": "263\n", "authors": ["927"]}
{"title": "The State of the Art in Visualizing Dynamic Graphs.\n", "abstract": " Dynamic graph visualization focuses on the challenge of representing the evolution of relationships between entities in readable, scalable, and effective diagrams. This work surveys the growing number of approaches in this discipline. We derive a hierarchical taxonomy of techniques by systematically categorizing and tagging publications. While static graph visualizations are often divided into node-link and matrix representations, we identify the representation of time as the major distinguishing feature for dynamic graph visualizations: either graphs are represented as animated diagrams or as static charts based on a timeline. Evaluations of animated approaches focus on dynamic stability for preserving the viewer\u2019s mental map or, in general, compare animated diagrams to timeline-based ones. Finally, we identify and discuss challenges for future research.", "num_citations": "263\n", "authors": ["927"]}
{"title": "Parallel edge splatting for scalable dynamic graph visualization\n", "abstract": " We present a novel dynamic graph visualization technique based on node-link diagrams. The graphs are drawn side-byside from left to right as a sequence of narrow stripes that are placed perpendicular to the horizontal time line. The hierarchically organized vertices of the graphs are arranged on vertical, parallel lines that bound the stripes; directed edges connect these vertices from left to right. To address massive overplotting of edges in huge graphs, we employ a splatting approach that transforms the edges to a pixel-based scalar field. This field represents the edge densities in a scalable way and is depicted by non-linear color mapping. The visualization method is complemented by interaction techniques that support data exploration by aggregation, filtering, brushing, and selective data zooming. Furthermore, we formalize graph patterns so that they can be interactively highlighted on demand. A case study\u00a0\u2026", "num_citations": "199\n", "authors": ["927"]}
{"title": "The State of the Art in Visualizing Group Structures in Graphs\n", "abstract": " Graph visualizations encode relationships between objects. Abstracting the objects into group structures provides an overview of the data. Groups can be disjoint or overlapping, and might be organized hierarchically. However, the underlying graph still needs to be represented for analyzing the data in more depth. This work surveys research in visualizing group structures as part of graph diagrams. A particular focus is the explicit visual encoding of groups, rather than only using graph layout to implicitly indicate groups. We introduce a taxonomy of visualization techniques structuring the field into four main categories: visual node attributes vary properties of the node representation to encode the grouping, juxtaposed approaches use two separate visualizations, superimposed techniques work with two aligned visual layers, and embedded visualizations tightly integrate group and graph representation. We discuss results from evaluations of those techniques as well as main areas of application. Finally, we report future challenges based on interviews we conducted with leading researchers of the field.", "num_citations": "109\n", "authors": ["927"]}
{"title": "Visual Analysis and Dissemination of Scientific Literature Collections with SurVis\n", "abstract": " Bibliographic data such as collections of scientific articles and citation networks have been studied extensively in information visualization and visual analytics research. Powerful systems have been built to support various types of bibliographic analysis, but they require some training and cannot be used to disseminate the insights gained. In contrast, we focused on developing a more accessible visual analytics system, called SurVis, that is ready to disseminate a carefully surveyed literature collection. The authors of a survey may use our Web-based system to structure and analyze their literature database. Later, readers of the survey can obtain an overview, quickly retrieve specific publications, and reproduce or extend the original bibliographic analysis. Our system employs a set of selectors that enable users to filter and browse the literature collection as well as to control interactive visualizations. The versatile\u00a0\u2026", "num_citations": "94\n", "authors": ["927"]}
{"title": "Timeline trees: visualizing sequences of transactions in information hierarchies\n", "abstract": " In many applications transactions between the elements of an information hierarchy occur over time. For example, the product offers of a department store can be organized into product groups and subgroups to form an information hierarchy. A market basket consisting of the products bought by a customer forms a transaction. Market baskets of one or more customers can be ordered by time into a sequence of transactions. Each item in a transaction is associated with a measure, for example, the amount paid for a product.", "num_citations": "93\n", "authors": ["927"]}
{"title": "Uncovering strengths and weaknesses of radial visualizations---an empirical approach\n", "abstract": " Radial visualizations play an important role in the information visualization community. But the decision to choose a radial coordinate system is rather based on intuition than on scientific foundations. The empirical approach presented in this paper aims at uncovering strengths and weaknesses of radial visualizations by comparing them to equivalent ones in Cartesian coordinate systems. We identified memorizing positions of visual elements as a generic task when working with visualizations. A first study with 674 participants provides a broad data spectrum for exploring differences between the two visualization types. A second, complementing study with fewer participants focuses on further questions raised by the first study. Our findings document that Cartesian visualizations tend to outperform their radial counterparts especially with respect to answer times. Nonetheless, radial visualization seem to be more\u00a0\u2026", "num_citations": "88\n", "authors": ["927"]}
{"title": "RadCloud: Visualizing Multiple Texts with Merged Word Clouds\n", "abstract": " Word clouds are a popular means for summarizing text documents. They usually visualize the word frequencies from single text sources, sometimes along with other attributes. However, the visualization of several text documents in one word cloud has rarely been addressed so far. This paper presents Rad Cloud, a technique for text visualization based on multiple word clouds merged into a single view. Inspired by the Rad Viz approach, the words are radially arranged in an overlap-free layout. The text sources are indicated by the spatial word arrangement and stacked bar charts. The approach has been implemented in an interactive text visualization tool and its usefulness is illustrated by an example.", "num_citations": "85\n", "authors": ["927"]}
{"title": "Towards an aesthetic dimensions framework for dynamic graph visualisations\n", "abstract": " Most research on the readability of graph visualization focuses on node-link diagrams of static graphs. But in many applications graphs are not static, but change over time, or graphs are too dense to be drawn as node-link diagrams. In this paper we look at dynamic graph visualizations: We translate the general goal of graph visualization-to convey the underlying information of a graph-into aesthetic dimensions that are applicable in practice. These aesthetic dimensions help to design, compare, and evaluate dynamic graph visualizations.", "num_citations": "83\n", "authors": ["927"]}
{"title": "On the congruence of modularity and code coupling\n", "abstract": " Software systems are modularized to make their inherent complexity manageable. While there exists a set of well-known principles that may guide software engineers to design the modules of a software system, we do not know which principles are followed in practice. In a study based on 16 open source projects, we look at different kinds of coupling concepts between source code entities, including structural dependencies, fan-out similarity, evolutionary coupling, code ownership, code clones, and semantic similarity. The congruence between these coupling concepts and the modularization of the system hints at the modularity principles used in practice. Furthermore, the results provide insights on how to support developers to modularize software systems.", "num_citations": "81\n", "authors": ["927"]}
{"title": "Matching application requirements with dynamic graph visualization profiles\n", "abstract": " Mapping a dynamic graph dataset to an inappropriate visualization leads to a degradation of visualization performance at some task. To tap the full potential of existing dynamic graph visualization techniques, we propose a methodology for matching application requirements with dynamic graph visualization profiles. We target at supporting experts choosing the right visualization technique. Our methodology describes both the application requirements and the visualization techniques as profiles covering important aesthetic criteria for visualizing dynamic graphs. Characteristics of the graph and task are used to derive the application profile. The probably most appropriate visualization technique is the one whose profile matches best the required application profile. We compile exemplary visualization profiles for representatives of dynamic graph visualization approaches and demonstrate the methodology in a case\u00a0\u2026", "num_citations": "78\n", "authors": ["927"]}
{"title": "Visualizing the Evolution of Communities in Dynamic Graphs\n", "abstract": " The community structure of graphs is an important feature that gives insight into the high\u2010level organization of objects within the graph. In real\u2010world systems, the graph topology is oftentimes not static but changes over time and hence, also the community structure changes. Previous timeline\u2010based approaches either visualize the dynamic graph or the dynamic community structure. In contrast, our approach combines both in a single image and therefore allows users to investigate the community structure together with the underlying dynamic graph. Our optimized ordering of vertices and selection of colours in combination with interactive highlighting techniques increases the traceability of communities along the time axis. Users can identify visual signatures, estimate the reliability of the derived community structure and investigate whether community evolution interacts with changes in the graph topology. The utility\u00a0\u2026", "num_citations": "76\n", "authors": ["927"]}
{"title": "Visual comparison of software architectures\n", "abstract": " Reverse engineering methods produce different descriptions of software architectures. In this article we address the task of exploring and comparing these descriptions. We present a novel visualization technique to compare architectures consisting of a decomposition of the software system and the dependencies among the code entities. This technique uses a visual representation of an adjacency matrix to provide a scalable analysis tool. Advanced layout features such as an automatic level of detail algorithm and sorting strategies improve the readability of the visualization. Using a case study, we show how this technique can be applied in practice.", "num_citations": "58\n", "authors": ["927"]}
{"title": "Generalized Pythagoras Trees: A Fractal Approach to Hierarchy Visualization\n", "abstract": " Through their recursive definition, many fractals have an inherent hierarchical structure. An example are binary branching Pythagoras Trees. By stopping the recursion in certain branches, a binary hierarchy can be encoded and visualized. But this binary encoding is an obstacle for representing general hierarchical data such as file systems or phylogenetic trees, which usually branch into more than two subhierarchies. We hence extend Pythagoras Trees to arbitrarily branching trees by adapting the geometry of the original fractal approach. Each vertex in the hierarchy is visualized as a rectangle sized according to a metric. We analyze several visual parameters such as length, width, order, and color of the nodes against the use of different metrics. Interactions help to zoom, browse, and filter the hierarchy. The usefulness of our technique is illustrated by two case studies visualizing directory structures and a\u00a0\u2026", "num_citations": "56\n", "authors": ["927"]}
{"title": "Rapid serial visual presentation in dynamic graph visualization\n", "abstract": " Rapid Serial Visual Presentation is an effective approach for browsing and searching large amounts of data. By presenting subsequent images at high frequency, we utilize the perceptual abilities of the human visual system to rapidly process certain visual features. While this concept is successfully used in video and image browsing, we demonstrate how it can be applied to dynamic graph visualization. In this paper, we introduce a visualization technique for time-varying graphs that is scalable with respect to the number of time steps. The graph visualization is based on the Parallel Edge Splatting technique, which employs a space-efficient display of a sequence of dynamically changing graphs. To illustrate the usefulness of our approach we analyzed method call graphs recorded during the execution of the open source software system JHotDraw. Furthermore, we studied a time-varying social network representing\u00a0\u2026", "num_citations": "55\n", "authors": ["927"]}
{"title": "In situ understanding of performance bottlenecks through visually augmented code\n", "abstract": " Finding and fixing performance bottlenecks requires sound knowledge of the program that is to be optimized. In this paper, we propose an approach for presenting performance-related information to software engineers by visually augmenting source code shown in an editor. Small diagrams at each method declaration and method call visualize the propagation of runtime consumption through the program as well as the interplay of threads in parallelized programs. Advantages of in situ visualization like this over traditional representations, where code and profiling information are shown in different places, promise to be the prevention of a split-attention effect caused by multiple views; information is presented where required, which supports understanding and navigation. We implemented the approach as an IDE plug-in and tested it in a user study with four developers improving the performance of their own\u00a0\u2026", "num_citations": "54\n", "authors": ["927"]}
{"title": "On the impact of software evolution on software clustering\n", "abstract": " The evolution of a software project is a rich data source for analyzing and improving the software development process. Recently, several research groups have tried to cluster source code artifacts based on information about how the code of a software system evolves. The results of these evolutionary approaches seem promising, but a direct comparison to traditional software clustering approaches based on structural code dependencies is still missing. To fill this gap, we conducted several clustering experiments with an established software clustering tool comparing and combining the evolutionary and the structural approach. These experiments show that the evolutionary approach could produce meaningful clustering results. While the traditional approach provides better results because of a more reliable data density of the structural data, the combination of both approaches is able to improve the\u00a0\u2026", "num_citations": "49\n", "authors": ["927"]}
{"title": "Visualizing Group Structures in Graphs: a Survey\n", "abstract": " Graph visualizations encode relationships between objects. Abstracting the objects into group structures provides an overview of the data. Groups can be disjoint or overlapping, and might be organized hierarchically. However, the underlying graph still needs to be represented for analyzing the data in more depth. This work surveys research in visualizing group structures as part of graph diagrams. A particular focus is the explicit visual encoding of groups, rather than only using graph layout to indicate groups implicitly. We introduce a taxonomy of visualization techniques structuring the field into four main categories: visual node attributes vary properties of the node representation to encode the grouping, juxtaposed approaches use two separate visualizations, superimposed techniques work with two aligned visual layers, and embedded visualizations tightly integrate group and graph representation. The derived\u00a0\u2026", "num_citations": "48\n", "authors": ["927"]}
{"title": "Radial Edge Splatting for Visualizing Dynamic Directed Graphs.\n", "abstract": " We describe and discuss a novel radial version of a scalable dynamic graph visualization. The radial layout encodes dynamic directed graphs on narrow rings of a circle. The temporal evolution of the graph is mapped to rings that grow outward from the center of the circle. Graph vertices are placed equidistantly at the borderlines of each ring. Graph edges are displayed as curved lines starting from a source on the inner borderline of the ring and pointing to a target on the outer borderline. To better perceive link directions and structures of large datasets, visual clutter is reduced by exploiting an edge splatting approach that generates density fields of the displayed edges. The radial layout emphasizes newer graphs, displayed in the larger, outer parts of the circle. As a benefit, edge lengths are reduced in comparison to the non-radial visualization. Moreover, the radial layout guarantees the symmetry of the visualization under shifting of vertices. We illustrate the usefulness of the diagrams by applying them to call graph data of the open source software project Cobertura.", "num_citations": "48\n", "authors": ["927"]}
{"title": "Cartesian vs. radial\u2013a comparative evaluation of two visualization tools\n", "abstract": " Many recently developed information visualization techniques are radial variants of originally Cartesian visualizations. Almost none of these radial variants have been evaluated with respect to their benefits over their original visualizations. In this work we compare a radial and a Cartesian variant of a visualization tool for sequences of transactions in information hierarchies. The Timeline Trees (TLT) approach uses a Cartesian coordinate system to represent both the hierarchy and the sequence of transactions whereas the TimeRadarTrees (TRT) technique is the radial counterpart which makes use of a radial tree, as well as circle slices and sectors to show the sequence of transactions. For the evaluation we use both quantitative as well as qualitative evaluation methods including eye tracking.", "num_citations": "45\n", "authors": ["927"]}
{"title": "Evaluating the impact of software evolution on software clustering\n", "abstract": " The evolution of a software project is a rich data source for analyzing and improving the software development process. Recently, several research groups have tried to cluster source code artifacts based on information about how the code of a software system evolves. The results of these evolutionary approaches seem promising, but a direct comparison to traditional software clustering approaches based on structural code dependencies is still missing. To fill this gap, we conducted several clustering experiments with an approved software clustering tool comparing and combining the evolutionary and the structural approach. These experiments show that the evolutionary approach could produce meaningful clustering results. But still the traditional approach provides better results because of a more reliable data density of the structural data. Finally, the combination of both approaches is able to improve the overall\u00a0\u2026", "num_citations": "42\n", "authors": ["927"]}
{"title": "TimeSpiderTrees: A novel visual metaphor for dynamic compound graphs\n", "abstract": " Graphs are a mathematical method to model relations between objects. The most common metaphor to visualize graphs is the node-link technique, which typically suffers from visual clutter caused by many edge crossings. Much research has been done on the development of sophisticated algorithms aimed at enhancing the layout with respect to edge crossings and a series of other aesthetic criteria. In this paper we propose a novel visual metaphor, called Time-SpiderTrees, which is based on a radial layout. In our technique, relations are visually indicated by orientation instead of connectedness to circumvent the problem of edge crossings. The strength of this novel visualization technique lies in the visual encoding of time-series relational data in a single view without animation, which helps to preserve the mental map and hence to reduce cognitive efforts.", "num_citations": "42\n", "authors": ["927"]}
{"title": "Finding structures in multi-type code couplings with node-link and matrix visualizations\n", "abstract": " Software systems are often modeled and visualized as graphs in order to understand their higher-level structure: code entities are connected by dependencies or couplings. However, when only considering one type of code coupling such as method calls, the understanding gained stays limited to this specific aspect. Encoding multiple types of code coupling in the graph promises to broaden the understanding. Different approaches already exist for visually discerning those types in graph diagrams. In this paper, we study two of these techniquesa node-link and a matrix approach-in a realistic scenario where the classes and interfaces of a system are connected by six different types of code coupling. The explorative user study that we conducted with interactive versions of the two visualizations focuses on getting an insight on how software developers use the visualizations for understanding an unknown system. We\u00a0\u2026", "num_citations": "38\n", "authors": ["927"]}
{"title": "Word-Sized Graphics for Scientific Texts\n", "abstract": " Generating visualizations at the size of a word creates dense information representations often called sparklines. The integration of word-sized graphics into text could avoid additional cognitive load caused by splitting the readers' attention between figures and text. In scientific publications, these graphics make statements easier to understand and verify because additional quantitative information is available where needed. In this work, we perform a literature review to find out how researchers have already applied such word-sized representations. Illustrating the versatility of the approach, we leverage these representations for reporting empirical and bibliographic data in three application examples. For interactive Web-based publications, we explore levels of interactivity and discuss interaction patterns to link visualization and text. We finally call the visualization community to be a pioneer in exploring new\u00a0\u2026", "num_citations": "36\n", "authors": ["927"]}
{"title": "Generalized Pythagoras trees for visualizing hierarchies\n", "abstract": " Pythagoras Trees are fractals that can be used to depict binary hierarchies. But this binary encoding is an obstacle for visualizing hierarchical data such as file systems or phylogenetic trees, which branch into n sub-hierarchies. Although any hierarchy can be modeled as a binary one by subsequently dividing n-ary branches into a sequence of n \u2212 1 binary branches, we follow a different strategy. In our approach extending Pythagoras Trees to arbitrarily branching trees, we only need a single visual element for an n-ary branch instead of spreading the binary branches along a strand. Each vertex in the hierarchy is visualized as a rectangle sized according to a metric. We analyze several visual parameters such as length, width, order, and color of the nodes against the use of different metrics. The usefulness of our technique is illustrated by two case studies visualizing directory structures and a large phylogenetic tree\u00a0\u2026", "num_citations": "35\n", "authors": ["927"]}
{"title": "VIS Author Profiles: Interactive Descriptions of Publication Records Combining Text and Visualization\n", "abstract": " Publication records and collaboration networks are important for assessing the expertise and experience of researchers. Existing digital libraries show the raw publication lists in author profiles, whereas visualization techniques focus on specific subproblems. Instead, we look at publication records from various perspectives mixing low-level publication data with high-level abstractions and background information. This work presents VIS Author Profiles, a novel approach to generate integrated textual and visual descriptions to highlight patterns in publication records. We leverage template-based natural language generation to summarize notable publication statistics, evolution of research topics, and collaboration relationships. Seamlessly integrated visualizations augment the textual description and are interactively connected with each other and the text. The underlying publication data and detailed explanations\u00a0\u2026", "num_citations": "29\n", "authors": ["927"]}
{"title": "A dynamic graph visualization perspective on eye movement data\n", "abstract": " During eye tracking studies, vast amounts of spatio-temporal data in the form of eye gaze trajectories are recorded. Finding insights into these time-varying data sets is a challenging task. Visualization techniques such as heat maps or gaze plots help find patterns in the data but highly aggregate the data (heat maps) or are difficult to read due to overplotting (gaze plots). In this paper, we propose transforming eye movement data into a dynamic graph data structure to explore the visualization problem from a new perspective. By aggregating gaze trajectories of participants over time periods or Areas of Interest (AOIs), a fair trade-off between aggregation and details is achieved. We show that existing dynamic graph visualizations can be used to display the transformed data and illustrate the approach by applying it to eye tracking data recorded for investigating the readability of tree diagrams.", "num_citations": "29\n", "authors": ["927"]}
{"title": "TravelDiff: Visual Comparison Analytics for Massive Movement Patterns Derived from Twitter\n", "abstract": " Geo-tagged microblog data covers billions of movement patterns on a global and local scale. Understanding these patterns could guide urban and traffic planning or help coping with disaster situations. We present a visual analytics system to investigate travel trajectories of people reconstructed from microblog messages. To analyze seasonal changes and events and to validate movement patterns against other data sources, we contribute highly interactive visual comparison methods that normalize and contrast trajectories as well as density maps within a single view. We also compute an adaptive hierarchical graph from the trajectories to abstract individual movements into higher-level structures. Specific challenges that we tackle are, among others, the spatio-temporal sparsity of the data, the volume of data varying by region, and a diverse mix of means of transportation. The applicability of our approach is\u00a0\u2026", "num_citations": "28\n", "authors": ["927"]}
{"title": "Visual monitoring of numeric variables embedded in source code\n", "abstract": " Numeric variables are one of the most frequently used data types. During the execution of a program, their values might change often. Tracing these changes can be necessary for understanding specific behavior of the program or for locating bugs. However, using a breakpoint debugger requires tedious stepping, and logging changes implies analyzing large text files. To make the monitoring of numeric variables easier, this work introduces a visualization approach that augments the source code view of an IDE by small, word-sized graphics: the visualizations accompanying the declarations of monitored variables plot read and write accesses on a timeline; detail views can be retrieved on demand. As suggested by a case study, this approach might support program comprehension and debugging.", "num_citations": "28\n", "authors": ["927"]}
{"title": "Visualizing Dynamic Hierarchies in Graph Sequences\n", "abstract": " Graphs are used to model relations between objects, where these objects can be grouped hierarchically based on their connectivity. In many applications, the relations change over time and so does the hierarchical group structure. We developed a visualization technique that supports the analysis of the topology and the hierarchical group structure of a dynamic graph and the tracking of changes over time. Each graph of a sequence is visualized by an adjacency matrix, where the hierarchical group structure is encoded within the matrix using indentation and nested contours, complemented by icicle plots attached to the matrices. The density within and between subgroups of the hierarchy is represented within the matrices using a gray scale. To visualize changes, transitions and dissimilarities between the hierarchically structured graphs are shown using a flow metaphor and color coding. The design of our\u00a0\u2026", "num_citations": "26\n", "authors": ["927"]}
{"title": "Visually exploring multi-dimensional code couplings\n", "abstract": " Dependencies and coupling relationships between code entities can be manifold. They form a graph structure with several different types of edges. Visualizing these graphs presents two challenges: the often large size of the graphs and the readable representation of the different edge types. In this paper we present a new node-link graph visualization technique addressing these challenges. Different types of edges are represented in multiple, small diagrams. These diagrams are placed side-by-side like the pictures of a comic strip. Among other things, edge bundling is applied to improve the scalability of the visualization. Elaborate interaction techniques with respect to focusing and merging data aim at providing help for comparing different edge types. A case study demonstrates how the visualization can be used to analyze a mid-size software project in practice.", "num_citations": "24\n", "authors": ["927"]}
{"title": "Going beyond visualization: Verbalization as complementary medium to explain machine learning models\n", "abstract": " In this position paper, we argue that a combination of visualization and verbalization techniques is beneficial for creating broad and versatile insights into the structure and decision-making processes of machine learning models. Explainability of machine learning models is emerging as an important area of research. Hence, insights into the inner workings of a trained model allow users and analysts, alike, to understand the models, develop justifications, and gain trust in the systems they inform. Explanations can be generated through different types of media, such as visualization and verbalization. Both are powerful tools that enable model interpretability. However, while their combination is arguably more powerful than each medium separately, they are currently applied and researched independently. To support our position that the combination of the two techniques is beneficial to explain machine learning models, we describe the design space of such a combination and discuss arising research questions, gaps, and opportunities.", "num_citations": "21\n", "authors": ["927"]}
{"title": "Visual comparison of eye movement patterns\n", "abstract": " In eye tracking research, finding eye movement patterns and similar strategies between participants\u2019 eye movements is important to understand task solving strategies and obstacles. In this application paper, we present a graph comparison method using radial graphs that show Areas of Interest (AOIs) and their transitions. An analyst investigates a single graph based on dwell times, directed transitions, and temporal AOI sequences. Two graphs can be compared directly and temporal changes may be analyzed. A list and matrix approach facilitate the analyst to contrast more than two graphs guided by visually encoded graph similarities. We evaluated our approach in case studies with three eye tracking and visualization experts. They identified temporal transition patterns of eye movements across participants, groups of participants, and outliers.", "num_citations": "21\n", "authors": ["927"]}
{"title": "Exploring Interactive Linking Between Text and Visualization\n", "abstract": " Visualizations are included in documents as augmentation to text and they become more intuitive if readers have the ability to interact with them. Modern web technologies facilitate the development of interactive documents including both text and visualizations. The aim of this research it to explore the design space of possible visualization\u2013text linking and interactions based on various triggers such as mouse events. We describe a framework that takes text containing markup, a related dataset, and a configuration file as inputs and produces an interactive document. The resulting document provides interactions such as details on demand, visual highlighting and comparison, and bushing-and-linking. In addition to regular sized graphics, the use of word-sized graphics or sparklines presents related content in view-focus of the reader. Finally, an illustrative example is presented to showcase the approach.", "num_citations": "20\n", "authors": ["927"]}
{"title": "Asymmetric Visual Hierarchy Comparison with Nested Icicle Plots\n", "abstract": " The comparison of hierarchies is a data analysis task for that a number of visualization approaches already exist. Generally, this can be regarded as a special form of graph comparison. These techniques typically handle two or more compared hierarchies all in the same way. In many practical applications, however, there are reasons why one of the hierarchies is more important than others. We, hence, propose a novel visualization approach to reflect this asymmetry in importance. A focused primary hierarchy is visualized as a large icicle plot, whereas a secondary hierarchy is only shown on demand, nested in the nodes of the primary hierarchy. Similarities of the two hierarchies are color-coded. We show the applicability of the approach in a case study comparing a hierarchically organized software system to a clustering result.", "num_citations": "19\n", "authors": ["927"]}
{"title": "Visualizing Work Processes in Software Engineering with Developer Rivers\n", "abstract": " Work processes involving dozens or hundreds of collaborators are complex and difficult to manage. Problems within the process may have severe organizational and financial consequences. Visualization helps monitor and analyze those processes. In this paper, we study the development of large software systems as an example of a complex work process. We introduce Developer Rivers, a timeline-based visualization technique that shows how developers work on software modules. The flow of developers' activity is visualized by a river metaphor: activities are transferred between modules represented as rivers. Interactively switching between hierarchically organized modules and workload metrics allows for exploring multiple facets of the work process. We study typical development patterns by applying our visualization to Python and the Linux kernel.", "num_citations": "18\n", "authors": ["927"]}
{"title": "Computer-aided extraction of software components\n", "abstract": " In a software project, outsourcing the development of a particular functionality, reusing a part in another software, or handing-over a part of the code to a new team member requires the extraction of an independent subset of the software-a component. This paper describes and analyzes the process of extracting such a component. We introduce an automated approach based on optimizing the cut between the new component and the remaining system. A visual development tool implements our approach and interactively supports the extraction. Finally, we look at the results of a thinking aloud user study and discuss the lessons learned about the extraction tool as well as the extraction process.", "num_citations": "17\n", "authors": ["927"]}
{"title": "Exploranative Code Quality Documents\n", "abstract": " Good code quality is a prerequisite for efficiently developing maintainable software. In this paper, we present a novel approach to generate exploranative (explanatory and exploratory) data-driven documents that report code quality in an interactive, exploratory environment. We employ a template-based natural language generation method to create textual explanations about the code quality, dependent on data from software metrics. The interactive document is enriched by different kinds of visualization, including parallel coordinates plots and scatterplots for data exploration and graphics embedded into text. We devise an interaction model that allows users to explore code quality with consistent linking between text and visualizations; through integrated explanatory text, users are taught background knowledge about code quality aspects. Our approach to interactive documents was developed in a design study\u00a0\u2026", "num_citations": "14\n", "authors": ["927"]}
{"title": "Word-Sized Eye Tracking Visualizations\n", "abstract": " In user studies, eye tracking is often used in combination with other recordings, such as think-aloud protocols. However, it is difficult to analyze the eye-tracking data and transcribed recordings together because of missing data alignment and integration. We suggest the use of word-sized eye-tracking visualizations to augment the transcript with important events that occurred concurrently to the transcribed activities. We explore the design space of such graphics by discussing how existing eye-tracking visualizations can be scaled down to word size. The suggested visualizations can optionally be combined with other event-based data such as interaction logs. We demonstrate our concept by a prototypical analysis tool.", "num_citations": "12\n", "authors": ["927"]}
{"title": "Exploring Word-Sized Graphics for Visualizing Eye Tracking Data within Transcribed Experiment Recordings\n", "abstract": " In user studies, eye tracking is often used in combination with other recordings, such as think-aloud protocols. However, it is difficult to analyze both the eye tracking data and transcribed recordings together because of a missing data alignment and integration. We suggest the use of word-sized eye tracking visualizations to augment the transcript with important events that occurred concurrently to the transcribed activities. We explore the design space of such graphics by discussing how existing eye tracking visualizations can be scaled down to word size. The suggested visualizations can optionally be combined with other event-based data such as interaction logs. We demonstrate our concept by implementing a prototype analysis tool.", "num_citations": "12\n", "authors": ["927"]}
{"title": "Code tagging as a social game\n", "abstract": " Keywords or tags summarize documents on an abstract level and can also be used for describing code fragments. They might be leveraged for retrieving features of a software system, understanding program functionality, or providing additional context. While automatic approaches at best are only able to retrieve information that is already contained in the source code, manual tagging could add valuable extra information from qualified expertise of the developers. However, tagging code is tedious. To make code tagging more fun, we introduce a social gasification approach: developers independently tag code fragments and are rewarded if their solutions conform to the solution of other developers. We implemented the game as a Facebook plug-in. A pilot user study suggests that the game mechanics are motivating and promote the proposition of reasonable tags.", "num_citations": "12\n", "authors": ["927"]}
{"title": "Visual Interactive Map Matching\n", "abstract": " Map matching is the process of assigning observed geographic positions of vehicles and their trajectories to the actual road links in a road network. In this paper, we present Visual Interactive Map Matching, a visual analytics approach to fine-tune the data preprocessing and matching process. It is based on ST-matching, a state-of-the-art and easy-to-understand map matching algorithm. Parameters of the preprocessing step and algorithm can be optimized with immediate visual feedback. Visualizations show current matching issues and performance metrics on a map and in diagrams. Manual and computer-supported editing of the road network model leads to a refined alignment of trajectories and roads. We demonstrate our approach with large-scale taxi trajectory data. We show that optimizing the matching on a subsample results in considerably improved matching quality, also when later scaled to the full\u00a0\u2026", "num_citations": "11\n", "authors": ["927"]}
{"title": "Visualizing the Evolution of Module Workflows\n", "abstract": " Module workflows are used to generate custom applications with modular software frameworks. They describe data flow between the modular components and their execution under certain parameter configurations. In many cases, module workflows are modeled in a graphical way by the user. To come up with the final result or to explore multiple solutions, they often undergo many iterations of adaptation. Furthermore, existing workflows may be reused for new applications. We visualize the evolution of module workflows with a focus-and-context approach and visualization techniques for time-dependent data. Our approach provides insight into user behavior and the characteristics of the underlying systems. As our examples show, this can help identify usability issues and indicate options to improve the effectiveness of the system. We demonstrate our approach for module workflows in Vis Trails, a modular\u00a0\u2026", "num_citations": "11\n", "authors": ["927"]}
{"title": "Integrating anomaly diagnosis techniques into spreadsheet environments\n", "abstract": " Although spreadsheets are often faulty, end-users like them for their flexibility. Most existing approaches to spreadsheet diagnosis are fully automated and use static analysis techniques to find anomalies in formulas or methods to derive test cases without user interaction. The few more interactive approaches are based on values already present in spreadsheets as well. In our work, we advance the idea of testing spreadsheets with user-defined test scenarios but encourage visually aided creation of independent test cases by separating the definition of test scenarios from the specific values present in the spreadsheet - just like test code is separated from production code in professional software. We combine the testing approach with static analysis and integrate it into a common visual spreadsheet environment named SIFEI. It supports users in interactively creating, executing, and analyzing their own test scenarios\u00a0\u2026", "num_citations": "11\n", "authors": ["927"]}
{"title": "Get Your Directories Right: From Hierarchy Visualization to Hierarchy Manipulation\n", "abstract": " Visual comparison of hierarchies such as directory structures is often considered a passive analysis task. Thus, insights gained from the visualization need to be recorded and applied afterwards. In contrast in this paper, we propose and explore an active visual analytics approach focusing on the manipulation of directory structures in the context of comparison. Two directories including subdirectories and files are presented side by side while links between the two representations connect matching files. Embedded into an elaborate interaction concept, drag-and-drop operations allow the users for interactively modifying the directories. We explored different application scenarios of the approach in a qualitative user study.", "num_citations": "11\n", "authors": ["927"]}
{"title": "Visual Analysis of Time-Dependent Multivariate Data from Dairy Farming Industry\n", "abstract": " This paper addresses the problem of analyzing data collected by the dairy industry with the aim of optimizing the cattle-breeding management and maximizing profit in the production of milk. The amount of multivariate data from daily records constantly increases due to the employment of modern systems in farm management, requiring a method to show trends and insights in data for a rapid analysis. We have designed a visual analytics system to analyze time-varying data. Well-known visualization techniques for multivariate data are used next to novel methods that show the intrinsic multiple timeline nature of these data as well as the linear and cyclic time behavior. Seasonal and monthly effects on production of milk are displayed by aggregating data values on a cow-relative timeline. Basic statistics on data values are dynamically calculated and a density plot is used to quantify the reliability of a dataset. A\u00a0\u2026", "num_citations": "10\n", "authors": ["927"]}
{"title": "The order of things: How developers sort fields and methods\n", "abstract": " In source code files, fields and methods are arranged in linear order. Modern programming languages such as Java do not constrain this order-developers are free to choose any sequence. In this paper we examine the largely unexplored strategies developers apply for ordering fields and methods: First, we use visualization to explore different ordering criteria within two open source Java projects. Second, we verify our observations in a metric-based analysis on an extended set of 16 projects. Third, we present the results of a survey that reflects the opinion and applied ordering strategies of 52 developers. 87% of the participants agreed that ordering of fields and methods is meaningful or important. Our results suggest that there exists a set of criteria repeatedly used for ordering. Among these, the categories defined in the official Java Code Conventions appear to be the primary ordering criterion. However, in the\u00a0\u2026", "num_citations": "10\n", "authors": ["927"]}
{"title": "Interactive map reports summarizing bivariate geographic data\n", "abstract": " Bivariate map visualizations use different encodings to visualize two variables but comparison across multiple encodings is challenging. Compared to a univariate visualization, it is significantly harder to read regional differences and spot geographical outliers. Especially targeting inexperienced users of visualizations, we advocate the use of natural language text for augmenting map visualizations and understanding the relationship between two geo-statistical variables. We propose an approach that selects interesting findings from data analysis, generates a respective text and visualization, and integrates both into a single document. The generated reports interactively link the visualization with the textual narrative. Users can get additional explanations and have the ability to compare different regions. The text generation process is flexible and adapts to various geographical and contextual settings based on\u00a0\u2026", "num_citations": "9\n", "authors": ["927"]}
{"title": "Visual analytics for decomposing temporal event series of production lines\n", "abstract": " The temporal analysis of events in a production line helps manufacturing experts get a better understanding of the line's performance and provides ideas for improvement. Especially the identification of recurring error patterns is important, because these patterns can be an indicator of systematic production issues. We present a visual analytics approach to analyze event reports of a production line. Reported events are shown as a time series plot that can be decomposed into a trend, seasonal, and remainder component by applying Seasonal Trend decomposition using Loess (STL). To find specific event patterns, the data is filtered based on aspects such as the event description or the processed product. Identified temporal patterns can be extracted from the original event series and compared visually with each other. In addition to predefined settings, experts can define a subseries of the event series and the\u00a0\u2026", "num_citations": "8\n", "authors": ["927"]}
{"title": "A Dashboard for Visualizing Software Engineering Processes based on ESSENCE\n", "abstract": " While traditional project planning approaches focus on precise scheduling of tasks, the ESSENCE standard proposes a higher-level approach that focuses on monitoring. Hence, a new kind of process visualization that picks up ideas of Kanban boards and physical cards is sketched in the standard. This tool paper presents a dashboard application refining, extending, and implementing these ideas based on five use cases posed by two industry partners. It demonstrates that a high degree of support for project management can be achieved by using a relatively small set of visualization means.", "num_citations": "8\n", "authors": ["927"]}
{"title": "A Matrix-Based Visual Comparison of Time Series Sports Data\n", "abstract": " In sports, large amounts of data are measured and stored with the help of modern sensors and electronic devices. In particular, for endurance sports events, time-varying data are recorded and can be used to analyze the athletes\u2019 performance. Finding patterns and issues can help better understand results in sports competitions, which is of interest for the athletes, sports managers, and trainers alike. In this paper, we introduce a matrix-based approach to visually compare similar and dissimilar periods in performances of athletes. We differentiate the performances and visually encode these differences as color-coded matrix cells. The strengths of our approach are illustrated in a case study investigating the performances of two riders in the prologue of Tour de France 2012.", "num_citations": "8\n", "authors": ["927"]}
{"title": "Visual Analysis of Inclusion Dynamics in Two-Phase Flow\n", "abstract": " In single-phase flow visualization, research focuses on the analysis of vector field properties. In two-phase flow, in contrast, analysis of the phase components is typically of major interest. So far, visualization research of two-phase flow concentrated on proper interface reconstruction and the analysis thereof. In this paper, we present a novel visualization technique that enables the investigation of complex two-phase flow phenomena with respect to the physics of breakup and coalescence of inclusions. On the one hand, we adapt dimensionless quantities for a localized analysis of phase instability and breakup, and provide detailed inspection of breakup dynamics with emphasis on oscillation and its interplay with rotational motion. On the other hand, we present a parametric tightly linked space-time visualization approach for an effective interactive representation of the overall dynamics. We demonstrate the utility of\u00a0\u2026", "num_citations": "7\n", "authors": ["927"]}
{"title": "Detecting Bad Smells in Software Systems with Linked Multivariate Visualizations\n", "abstract": " Parallel coordinates plots and RadViz are two visualization techniques that deal with multivariate data. They complement each other in identifying data patterns, clusters, and outliers. In this paper, we analyze multivariate software metrics linking the two approaches for detecting outliers, which could be the indicators for bad smells in software systems. Parallel coordinates plots provide an overview, whereas the RadViz representation allows for comparing a smaller subset of metrics in detail. We develop an interactive visual analytics system supporting automatic detection of bad smell patterns. In addition, we investigate the distinctive properties of outliers that are not considered harmful, but noteworthy for other reasons. We demonstrate our approach with open source Java systems and describe detected bad smells and other outlier patterns.", "num_citations": "7\n", "authors": ["927"]}
{"title": "Identifying Modularization Patterns by Visual Comparison of Multiple Hierarchies\n", "abstract": " Software is modularized to make its high complexity manageable. However, a multitude of modularization criteria exists and is applied. Hence, to extend, reuse, or restructure a system, it is important for developers to understand which criteria have been used. To this end, we provide an interactive visualization approach that compares the current modularization of a system to several software clustering results. The visualization is based on juxtaposed icicle plot representations of the hierarchical modularizations, encoding similarity by color. A detailed comparison is facilitated by an advanced selection concept. Coupling graphs, which form the basis for software clustering, can be explored on demand in matrix representations. We discuss typical modularization patterns that indicate criteria used for structuring the software or suggest opportunities for partial remodularization of the system. We apply the approach to\u00a0\u2026", "num_citations": "7\n", "authors": ["927"]}
{"title": "Task-based assessment of visualization tools for the comparison of biological taxonomies\n", "abstract": " Maintenance and curation of large-sized biological taxonomies are complex and laborious activities. Information visualization systems use interactive visual interfaces to facilitate analytical reasoning on complex information. Several approaches such as treemaps, indented lists, cone trees, radial trees, and many others have been used to visualize and analyze a single taxonomy. In addition, methods such as edge drawing, animation, and matrix representations have been used for comparing trees. Visualizing similarities and differences between two or more large taxonomies is harder than the visualization of a single taxonomy. On one hand, less space is available on the screen to display each tree; on the other hand, differences should be highlighted. The comparison of two alternative taxonomies and the analysis of a taxonomy as it evolves over time provide fundamental information to taxonomists and global initiatives that promote standardization and integration of taxonomic databases to better document biodiversity and support its conservation. In this work we assess how ten user visualization tasks for the curation of biological taxonomies are supported by several visualization tools. Tasks include the identification of conditions such as congruent taxa, splits, merges, and new species added to a taxonomy. We consider tools that have gone beyond the prototype stage, that have been described in peer-reviewed publications, or are in current use. We conclude with the identification of challenges for future development of taxonomy comparison tools.", "num_citations": "6\n", "authors": ["927"]}
{"title": "An Expert Evaluation of Word-Sized Visualizations for Analyzing Eye Movement Data\n", "abstract": " Word-sized visualizations for eye movement data allow analysts to compare a variety of experiment conditions or participants at the same time. We implemented a set of such word-sized visualizations as part of an analysis framework. We want to find out which of the visualizations is most suitable for different analysis tasks. To this end, we applied the framework to data from an eye tracking study on the reading behavior of users studying metro maps. In an expert evaluation with five analysts, we identified distinguishing characteristics of the different word-sized visualizations.", "num_citations": "6\n", "authors": ["927"]}
{"title": "Edge bundling without reducing the source to target traceability\n", "abstract": " Bundling edges improves the readability of graph visualizations by grouping similar edges together. We propose and explore an edge bundling approach that is less invasive than existing approaches and preserves the traceability of edges. Bundling is restricted to edges that start or end at the same node. The approach is applicable to directed graphs in an arbitrary node layout.", "num_citations": "6\n", "authors": ["927"]}
{"title": "Set Streams: Visual Exploration of Dynamic Overlapping Sets\n", "abstract": " In many applications, membership of set elements changes over time. Since each element can be present in multiple sets, the sets also overlap. As a result, it becomes challenging to visualize the temporal change in set membership of elements across several timesteps while showing individual set intersections. We propose Set Streams, a visualization technique that represents changing set structures on a timeline as branching and merging streams. The streams encode the changing membership of elements with set intersections. A query\u2010based selection mechanism supports a flexible comparison of selected groups of elements across the temporal evolution. The main timeline view is complemented with additional panels to provide details about the elements. While the proposed visualization is an application\u2010independent visualization technique for dynamic sets, we demonstrate its effectiveness and\u00a0\u2026", "num_citations": "5\n", "authors": ["927"]}
{"title": "Bombalytics: Visualization of Competition and Collaboration Strategies of Players in a Bomb Laying Game\n", "abstract": " Competition and collaboration form complex interaction patterns between the agents and objects involved. Only by understanding these interaction patterns, we can reveal the strategies the participating parties applied. In this paper, we study such competition and collaboration behavior for a computer game. Serving as a testbed for artificial intelligence, the multiplayer bomb laying game Pommerman provides a rich source of advanced behavior of computer agents. We propose a visualization approach that shows an overview of multiple games, with a detailed timeline\u2010based visualization for exploring the specifics of each game. Since an analyst can only fully understand the data when considering the direct and indirect interactions between agents, we suggest various visual encodings of these interactions. Based on feedback from expert users and an application example, we demonstrate that the approach helps\u00a0\u2026", "num_citations": "5\n", "authors": ["927"]}
{"title": "Visual Comparison of Biological Taxonomies: A Task Characterization\n", "abstract": " Although biological taxonomies are a prevalent use case in hierarchy visualization, there has been little research on the characterization of users\u2019 tasks for taxonomy comparison. Task identification is very relevant as a start point to design an effective information visualization solution for taxonomic work. We performed a systematic domain characterization that involved interviews with experts, literature review, the identification of data sources, and a survey of existing software tools. We performed iterative analysis until we reached a satisfactory list of users\u2019 tasks. We present the tasks in a two-level model, describe them, and discuss future work.", "num_citations": "5\n", "authors": ["927"]}
{"title": "Software Feathers: Figurative Visualization of Software Metrics\n", "abstract": " In order to give the code entities of a software system a discernible and recognizable face, this paper presents Software Feathers, an approach for mapping characteristics of object-oriented code entities to features of artificially generated feathers. A parameterized drawing algorithm is described that generates pseudo-realistic feathers as 2D graphics. The parameters of the feathers are connected to characteristic software metrics measuring, among others, the size, complexity, and quality of interfaces and classes. Applying the approach demonstrates that categories of code entities can be discerned, problems in the code can be detected, and the evolution of code can be studied. A promising application is embedding the feathers into documentation and IDEs for improving navigation and unobtrusively educating software developers in software metrics.", "num_citations": "5\n", "authors": ["927"]}
{"title": "Authoring Combined Textual and Visual Descriptions of Graph Data\n", "abstract": " The interactive linking of text and visualizations supports easy and guided exploration of information and results in a coherent document. Authoring such documents for the web requires writing custom HTML and JavaScript. Existing research aims at reducing the effort by providing a declarative syntax. However, these approaches either do not support the interactive linking of text and visualizations or require advance programming skills to establish this linking. Targeting a specific type of data ie, graph data, we introduce an approach that uses a declarative syntax to produce interactive documents and requires little to no programming. Based on the user specifications in an HTML file, the system queries the database to retrieve subgraphs and link them to the relevant text fragments. The resulting document consists of a node-link diagram and text; the two representations are closely linked via interactions and word\u00a0\u2026", "num_citations": "4\n", "authors": ["927"]}
{"title": "Painting with Flow\n", "abstract": " We present an interactive algorithmic painting approach producing organic flow-like representations. Our approach is inspired by nature, in particular, the smooth patterns of flowing particles in liquid and air but also the smooth organic shapes occurring in flora. The algorithm for creating organic shapes follows mechanisms of flow visualization. It is based on the random spread of guiding points from a user-defined seeding position that grow to curves enclosing ribbons. This spreading process is initialized and can be\u2014to some extent\u2014influenced by the user. Rendering only requires the drawing of partly transparent polygons. Different color maps and rendering schemes are available to produce unique, non-deterministic paintings.", "num_citations": "4\n", "authors": ["927"]}
{"title": "A Design and Application Space for Visualizing User Sessions of Virtual and Mixed Reality Environments\n", "abstract": " Virtual and mixed reality environments gain complexity due to the inclusion of multiple users and physical objects. A core challenge for developers and researchers while analyzing sessions from such environments lies in understanding the interaction between entities. Additionally, the raw data recorded from such sessions is difficult to analyze due to the simultaneous temporal and spatial changes of multiple entities. However, similar data has already been visualized in other areas of application. We analyze which aspects of these related visualizations can be leveraged for analyzing user sessions in virtual and mixed reality environments and describe a design and application space for such visualizations. First, we examine what information is typically generated in interactive virtual and mixed reality applications and how it can be analyzed through such visualizations. Next, we study visualizations from related\u00a0\u2026", "num_citations": "3\n", "authors": ["927"]}
{"title": "Label Placement for Outliers in Scatterplots\n", "abstract": " In many application scenarios, outliers can be associated with specific importance for various reasons. In such cases, labeling outliers is important to connect them to the actual semantics of the respective entity. In this paper, we present a cost-based greedy approach that places labels with outliers within scatterplots. The approach uses a search strategy to find the position that represents the least cost to place labels. Our approach can also produce different labeling outcomes by adjusting the weights of the criteria of the cost function. We demonstrate our approach with scatterplots produced from object-oriented software metrics, where outliers often relate to bad smells in the software.", "num_citations": "3\n", "authors": ["927"]}
{"title": "Visually augmenting documents with data\n", "abstract": " \u201cA picture is worth a thousand words\u201d is a famous English saying. It is true in many cases, because a complex idea or data can be simply conveyed through the use of a single static image or diagram. Therefore, inclusion of graphics and visualizations in scientific texts has been an important aspect ever since researchers started publishing articles. Conventional writing styles allow researchers to provide images, graphs, and tables to enhance the readability and understandability of the text, but usually, these large-scale images need to be placed at a slightly different location from the relevant text, either on the same page or on the next pages. This far-off placement of graphics forces readers to switch their attention between text and graphics, which can cause a split-attention effect, thereby increasing the cognitive effort to comprehend the information.", "num_citations": "3\n", "authors": ["927"]}
{"title": "Visual Monitoring of Process Runs: An Application Study for Stored Procedures\n", "abstract": " Stored procedures are used in database systems to process and aggregate data. Hundreds of stored procedures often form a complex process network with documented and hidden dependencies that is difficult to understand, maintain, and debug. This paper introduces a novel approach to support such tasks by visually comparing a specific process run to other runs of the same process. The visualization is based on a force-directed node-link diagram arranged on a timeline. Color coding, histograms, and trend charts are used to highlight temporal deviations. The approach has been implemented as an interactive web application and used by professional database developers for solving realistic maintenance and debugging tasks. The feedback of these expert users confirms the usefulness and practical relevance of the approach.", "num_citations": "3\n", "authors": ["927"]}
{"title": "Live Inspection of Spreadsheets\n", "abstract": " Existing approaches for detecting anomalies in spreadsheets can help to discover faults, but they are often applied too late in the spreadsheet lifecycle. By contrast, our approach detects anomalies immediately whenever users change their spreadsheets. This live inspection approach has been implemented as part of the Spreadsheet Inspection Framework, enabling the tool to visually report findings without disturbing the users' workflow. An advanced list representation allows users to keep track of the latest findings, prioritize open problems, and check progress on solving the issues. Results from a first user study indicate that users find the approach useful.", "num_citations": "3\n", "authors": ["927"]}
{"title": "A Deeper Understanding of Visualization\u2013Text Interplay in Geographic Data-driven Stories\n", "abstract": " Data\u2010driven stories comprise of visualizations and a textual narrative. The two representations coexist and complement each other. Although existing research has explored the design strategies and structure of such stories, it remains an open research question how the two representations play together on a detailed level and how they are linked with each other. In this paper, we aim at understanding the fine\u2010grained interplay of text and visualizations in geographic data\u2010driven stories. We focus on geographic content as it often includes complex spatiotemporal data presented as versatile visualizations and rich textual descriptions. We conduct a qualitative empirical study on 22 stories collected from a variety of news media outlets; 10 of the stories report the COVID\u201019 pandemic, the others cover diverse topics. We investigate the role of every sentence and visualization within the narrative to reveal how they\u00a0\u2026", "num_citations": "2\n", "authors": ["927"]}
{"title": "Demo of the EyeSAC System for Visual Synchronization, Cleaning, and Annotation of Eye Movement Data\n", "abstract": " Eye movement data analysis plays an important role in examining human cognitive processes and perceptions. Such analysis at times needs data recording from additional sources too during experiments. In this paper, we study a pair programming based collaboration using two eye trackers, stimulus recording, and an external camera recording. To analyze the collected data, we introduce the EyeSAC system that synchronizes the data from different sources and that removes the noisy and missing gazes from eye tracking data with the help of visual feedback from the external recording. The synchronized and cleaned data is further annotated using our system and then exported for further analysis.", "num_citations": "2\n", "authors": ["927"]}
{"title": "Visualizing AI Playtesting Data of 2D Side-scrolling Games\n", "abstract": " Human playtesting is a useful step in the game development process, but involves high economic costs and is time-consuming. While playtesting through artificial intelligence is gaining attention, it is challenging to analyze the collected data. We address the challenge by proposing visualizations to derive insights about level design in 2D side-scrolling games. To focus on the navigation behavior in the level design, we study the trajectories of computer agents trained using artificial intelligence. We demonstrate the effectiveness of our approach by implementing a web-based prototype and presenting the insights gained from the visualizations for the game Sonic the Hedgehog 2. We highlight lessons learned and directions to customize the approach for other analysis goals of playtesting.", "num_citations": "2\n", "authors": ["927"]}
{"title": "An expert study on hierarchy comparison methods applied to biological taxonomies curation\n", "abstract": " Comparison of hierarchies aims at identifying differences and similarities between two or more hierarchical structures. In the biological taxonomy domain, comparison is indispensable for the reconciliation of alternative versions of a taxonomic classification. Biological taxonomies are knowledge structures that may include large amounts of nodes (taxa), which are typically maintained manually. We present the results of a user study with taxonomy experts that evaluates four well-known methods for the comparison of two hierarchies, namely, edge drawing, matrix representation, animation and agglomeration. Each of these methods is evaluated with respect to seven typical biological taxonomy curation tasks. To this end, we designed an interactive software environment through which expert taxonomists performed exercises representative of the considered tasks. We evaluated participants\u2019 effectiveness and level of satisfaction from both quantitative and qualitative perspectives. Overall quantitative results evidence that participants were less effective with agglomeration whereas they were more satisfied with edge drawing. Qualitative findings reveal a greater preference among participants for the edge drawing method. In addition, from the qualitative analysis, we obtained insights that contribute to explain the differences between the methods and provide directions for future research.", "num_citations": "2\n", "authors": ["927"]}
{"title": "Computer-supported Interactive Assignment of Keywords for Literature Collections\n", "abstract": " A curated literature collection on a specific topic helps researchers to find relevant articles quickly. Assigning multiple keywords to each article is one of the techniques to structure such a collection. But it is challenging to assign all the keywords consistently without any gaps or ambiguities. We propose to support the user with a machine learning technique that suggests keywords for articles in a literature collection browser. We provide visual explanations to make the", "num_citations": "2\n", "authors": ["927"]}
{"title": "Visual Data Cleansing of Low-Level Eye-Tracking Data\n", "abstract": " Analysis and visualization of eye movement data from eye-tracking studies typically take into account gazes, fixations, and saccades of both eyes filtered and fused into a combined eye. Although this is a valid strategy, we argue that it is also worth investigating low-level eye-tracking data prior to high-level analysis, because today\u2019s eye-tracking systems measure and infer data from both eyes separately. In this work, we present an approach that supports visual analysis and cleansing of low-level time-varying data for eye-tracking experiments. The visualization helps researchers get insights into the quality of the data in terms of its uncertainty, or reliability. We discuss uncertainty originating from eye tracking, and how to reveal it for visualization, using a comparative approach for disagreement between plots, and a density-based approach for accuracy in volume rendering. Finally, we illustrate the usefulness\u00a0\u2026", "num_citations": "2\n", "authors": ["927"]}
{"title": "Improving software clustering with evolutionary data\n", "abstract": " The evolution of a software project is a rich data source for analyzing and improving the software development process. But does the information about how developers change the source code of a software systems also support to meaningfully group the elements of the software system?Recently, some researchers have incorporated different kinds of evolutionary information into software clustering. Their results are promising but are not sufficient to finally assess the quality of evolution based software clustering because a direct comparison to common clustering approaches based on structural data is still missing. This thesis conducts several clustering experiments with an approved clustering algorithm on six different software projects comparing and combining evolutionary and structural data. These experiments show that evolutionary data produces competitive clustering results in many cases. Furthermore, evolutionary data is able to improve the quality of structural based clustering approaches. Returning to the above question, this work attests software evolution to be a valuable data source for software clustering.", "num_citations": "2\n", "authors": ["927"]}
{"title": "Talking Realities: Audio Guides in Virtual Reality Visualizations\n", "abstract": " Building upon the ideas of storytelling and explorable explanations, we introduce Talking Realities, a concept for producing data-driven interactive narratives in virtual reality. It combines an audio narrative with an immersive visualization to communicate analysis results. The narrative is automatically produced using template-based natural language generation and adapts to data and user interactions. The synchronized animation of visual elements in accordance with the audio connects the two representations. In addition, we discuss various modes of explanation ranging from fully guided tours to free exploration of the data. We demonstrate the applicability of our concept by developing a virtual reality visualization for air traffic data. Furthermore, generalizability is exhibited by sketching mock-ups for two more application scenarios in the context of information and scientific visualization.", "num_citations": "1\n", "authors": ["927"]}
{"title": "Guest Editors\u2019 Introduction: Special Section on IEEE PacificVis 2020\n", "abstract": " The five papers in this special section were from the 2020 IEEE Pacific Visualization Symposium (IEEE PacificVis), which was scheduled to be hosted by Tianjin University and held in Tianjin, China, from April 14 to 17, 2020.", "num_citations": "1\n", "authors": ["927"]}
{"title": "Visualizing Evolution and Performance Metrics on Method Level as Multivariate Data\n", "abstract": " Visualizing the evolution of software metrics helps understanding the project progress of a software development team with respect to code quality and related characteristics. Blending this information with performance information can provide relevant insights into crucial changes in execution behavior and their respective context from code changes. We interpret this composition of evolution and performance metrics as multivariate data and map it to a fine-grained method level. This is the basis for investigating a multivariate visualization approach consisting of a visually enriched tabular representation that provides the method-level details for all the metrics across time, a projection view that shows clusters and outliers among the methods on a higher-level of abstraction, and a timeline view to find relevant temporal changes. Interactions connect the views and allow the users to explore the data step by step.", "num_citations": "1\n", "authors": ["927"]}
{"title": "Analysis of multi-dimensional code couplings\n", "abstract": " Software systems consist of hundreds or thousands of files, which are usually not independent of each other but coupled. While it is obvious that structural dependencies like method calls or data accesses create couplings, there also exist other, more indirect forms of coupling that should be considered when modifying, extending, or debugging a system. In contrast to most previous research, in this work, code coupling is considered as a multi-dimensional construct: several forms of structural couplings are contrasted to couplings based on the history and the semantics of the source code entities. The work proposes two novel visualization techniques, which allow for exploring and visually comparing different concepts of coupling. Based on an empirical study on open source systems, the work further provides insights into the relationship between concepts of coupling and the modularization of software, first evidence\u00a0\u2026", "num_citations": "1\n", "authors": ["927"]}