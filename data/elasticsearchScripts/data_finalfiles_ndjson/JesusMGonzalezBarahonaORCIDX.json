{"title": "Introduction to free software\n", "abstract": " \" If you have an apple and I have an apple and we exchange apples, then you and I will still each have one apple. But if you have an idea and I have an idea and we exchange these ideas, then each of us will have two ideas.\"", "num_citations": "107\n", "authors": ["894"]}
{"title": "Counting potatoes: the size of Debian 2.2\n", "abstract": " Debian is the largest Free Software distribution, with well over 2,800 source packages in the latest stable release (Debian 2.2) and more than 4,000 source packages in the release currently in preparation. But, how large is \u201cthe largest\u201d? In this paper, we use David Wheeler\u2019s sloccount system to determine the number of physical source lines of code (SLOC) of Debian 2.2 (aka Potato). We show that Debian 2.2 includes over 56,000,000 physical SLOC (almost twice than Red Hat 7.1, released about 8 months later), showing that the Debian development model (based on the work of a large group of voluntary developers spread around the world) is at least as capable as other development methods (like the more centralized one, based on the work of employees, used by Red Hat or Microsoft) to manage distributions of this size.", "num_citations": "96\n", "authors": ["894"]}
{"title": "Studying the evolution of libre software projects using publicly available data\n", "abstract": " Libre software projects offer abundant information about themselves in publicly available storages (source code snapshots, CVS repositories, etc), which are a good source of quantitative data about the project itself, and the software it produces. The retrieval (and partially the analysis) of all those data can be automated, following a simple methodology aimed at characterizing the evolution of the project. Since the base information is public, and the tools used are libre and readily available, other groups can easily reproduce and review the results. Since the characterization offers some insight on the details of the project, it can be used as the basis for qualitative analysis (including correlations and comparative studies). In some cases, this methodology could also be used for proprietary software (although usually losing the benefits of peer review). This approach is shown, as an example, applied to MONO, a libre software project implementing parts of the .NET framework.", "num_citations": "69\n", "authors": ["894"]}
{"title": "Adapting the staged model for software evolution to free/libre/open source software\n", "abstract": " Research into traditional software evolution has been tackled from two broad perspectives: that focused on the how, which looks at the processes, methods and techniques to implement and evolve software; and that focused on the what/why perspective, aiming at achieving an understanding of the drivers and general characteristics of the software evolution phenomenon.", "num_citations": "44\n", "authors": ["894"]}
{"title": "GluTheos: Automating the Retrieval and Analysis of Data from Publicly Available Software Repositories.\n", "abstract": " For efficient, large scale data mining of publicly available information about libre (free, open source) software projects, automating the retrieval and analysis processes is a must. A system implementing such automation must have into account the many kinds of repositories with interesting information (each with its own structure and access methods), and the many kinds of analysis which can be applied to the retrieved data. In addition, such a system should be capable of interfacing and reusing as much existing software for both retrieving and analyzing data as possible. As a proof of concept of how that system could be, we started sometime ago to implement the GlueTheos system, featuring a modular, flexible architecture which has been already used in several of our studies of libre software projects. We show its structure, how it can be used, and how it can be extended.", "num_citations": "37\n", "authors": ["894"]}
{"title": "Real-time programming with GNAT: Specialised kernels versus POSIX threads\n", "abstract": " The fact that most of the GNAT ports are based on non real-time operating systems leads to a reduced usability for developing real-time systems. Otherwise, existing ports over real-time operating systems are excessively complex, since GNAT uses only a reduced set of their functionality, and with a very specific semantic. This paper describes the implementation of a low-level tasking support for the GNAT run-time. In order to achieve a predictable real-time behaviour we have developed a very simple library, built to fit only the GNAT tasking requirements. We have also designed a bare machine kernel which provides the minimum environment needed by the upper layers.", "num_citations": "14\n", "authors": ["894"]}
{"title": "El concepto de software libre\n", "abstract": " El software libre es cada vez m\u00e1s habitual en casi cualquier entorno inform\u00e1tico. Sin embargo, es tambi\u00e9n un gran desconocido. En este art\u00edculo se exponen las condiciones que tiene que cumplir un programa para ser considerado como software libre, compiladas en varias definiciones. A partir de ellas se repasa brevemente su historia y se exploran algunas de sus caracter\u00edsticas y consecuencias. Tambi\u00e9n se comentan algunos aspectos relacionados con las licencias de software libre que son tan fundamentales para su existencia.", "num_citations": "13\n", "authors": ["894"]}
{"title": "Repositories with public data about software development\n", "abstract": " Empirical research on software development based on data obtained from project repositories and code forges is increasingly gaining attention in the software engineering research community. The studies in this area typically start by retrieving or monitoring some subset of data found in the repository or forge, and this data is later analyzed to find interesting patterns. However, retrieving information from these locations can be a challenging task. Meta-repositories providing public information about software development are useful tools that can simplify and streamline the research process. Public data repositories that collect and clean the data from other project repositories or code forges can help ensure that research studies are based on good quality data. This paper provides some insight as to how these meta-repositories (sometimes called a \u201crepository of repositories\u201d, RoR) of data about open source projects\u00a0\u2026", "num_citations": "13\n", "authors": ["894"]}
{"title": "Open Source software engineering-The state of research\n", "abstract": " One of the key characteristics of open source software development is that usually, it is done in the open. This means that huge quantities of information about the processes and the products are available, publicly, in the Internet. In addition, large fractions of that information are organized such that they can be retrieved and analyzed in a fairly automated way. This fact, which at first sight might have little relationship with the state of research in the area, is on the contrary fundamental, and maybe the single characteristic that shows the most influence on the research on open source software development. This public availability of information is making both more complete and in-depth empirical research and reproducibility of results possible.For almost any open source software project, not only all the source code is available (usually from a version control repository which tracks also interactions of developers with source code): there are also mailing lists (where many decissions are taken in the open, feedback is sent and technical discussions are common), bug reporting systems, forums, etc. With such an amount of information, the development process can be tracked with great detail, and comparative studies including many projects are possible. From the research perspective, having complete data-sets, with historical information about some development aspects of a large quantity of projects is possible and even (comparatively) easy. Since the source data is available to anyone, any group can also come back to reproduce any previous study, maybe later in time and with a larger data-set, to validate or improve it, which has a great impact on\u00a0\u2026", "num_citations": "12\n", "authors": ["894"]}
{"title": "Implementing a New Low-Level Tasking Support for the GNAT Runtime System\n", "abstract": " This paper describes the main design goals and implementation choices of JTK, a library which provides simple tasking support, loosely based on POSIX threads. It has been designed to provide the lowlevel tasking support for GNAT, it is completely written in Ada, and it is usable on top of a traditional operating system (providing user-level threads) as well as layered over a bare machine. Its main design motivation is the desire to experiment with a low-level tasking implementation that fits well with GNAT tasking requirements.               Currently, JTK provides a priority driven threading model, with preemptive scheduling, facilities for signal handling, and primitives to provide mutual exclusion and synchronized waiting. The long-term target of JTK is to provide all the facilities that GNAT needs to satisfy full Annex D semantics.", "num_citations": "11\n", "authors": ["894"]}
{"title": "Transferring libre software development practices to the production of educational resources: The EdukaLibre project\n", "abstract": " The transfer of methodologies common in libre (free, open source) sofware development to the domain of educational resources can radically change the way educational content is developed and used, enabling both educational practitioners and students to become actively involved in its creation and distribution. New software architectures and tools are needed to effectively support this process. This paper describes a platform aimed to support the creation of free, collaboratively constructed educational content on the web, which has been developed within the Edukalibre project. It provides easy access to core technologies: a control version system combined with conversion tools to produce several convenient formats for each document. Its modular architecture offers many different interfaces to the users. The Edukalibre platform is distributed as libre software.", "num_citations": "10\n", "authors": ["894"]}
{"title": "Using metrics to track code review performance\n", "abstract": " During 2015, some members of the Xen Project Advisory Board became worried about the performance of their code review process. The Xen Project is a free, open source software project developing one of the most popular virtualization platforms in the industry. They use a pre-commit peer review process similar to that in the Linux kernel, based on email messages. They had observed a large increase over time in the number of messages related to code review, and were worried about how this could be a signal of problems with their code review process.", "num_citations": "9\n", "authors": ["894"]}
{"title": "Programming distributed fault tolerant systems: the replicAda approach\n", "abstract": " During the last years, several toolkits for programming faulttolerant distributed systems have been proposed. Unfortunately, most of them offer a low level interface that is difficult to program and is not well integrated with a high level language. On the other hand, the Annex E of the Ada language provides a high level framework for programming distributed systems. After carefully studying it, we have concluded that nothing prevents an implementation of the Annex E that also offers support for programming fault-tolerant distributed systems. We propose to implement most of the fault tolerance mechanisms at the Partition Communication Subsystem (PCS) level, offering to the programmer the abstraction of replicated partitions, while preserving the semantics of the Annex E. Parameters related to fault tolerance can be selected at configuration time. This approach, that we have named replicAda, tries to simplify the\u00a0\u2026", "num_citations": "8\n", "authors": ["894"]}
{"title": "Hacia nuevas formas de producci\u00f3n y difusi\u00f3n del conocimiento\n", "abstract": " ES HABITUAL CONSIDERAR A LAS UNIVERSIDADES como n\u00facleos del conocimiento. En gran parte del mundo la sociedad ha confiado hist\u00f3ricamente en ellas para producirlo y difundirlo. Sin embargo hoy d\u00eda, cuando tanto se habla de la sociedad del conocimiento, cada vez se restringe m\u00e1s el acceso a \u00e9l. Las universidades en muchos casos se vuelven muy cuidadosas con la informaci\u00f3n que difunden sin cobrar por ella, y cada vez es m\u00e1s complicado acceder a muchas de sus producciones intelectuales.Aunque en su comienzo internet parec\u00eda la herramienta definitiva en cuanto acceso libre a la informaci\u00f3n, lo que ocurre hoy d\u00eda es justamente lo contrario: el acceso a esta informaci\u00f3n est\u00e1 hoy m\u00e1s restringido que ayer y menos que ma\u00f1ana. El mundo universitario no es una excepci\u00f3n, sino un abanderado en esta tendencia.", "num_citations": "7\n", "authors": ["894"]}
{"title": "Software libre en la ense\u00f1anza inform\u00e1tica\n", "abstract": " Hace ya tiempo que, en mayor o menor medida, los ordenadores han entrado en las escuelas, en los institutos, y desde luego en las universidades. En muchos casos con ellos se practican conocimientos espec\u00edficamente inform\u00e1ticos, pero cada vez m\u00e1s se usan sobre todo como herramienta para ense\u00f1ar otro tipo de disciplinas, o simplemente para permitir a los alumnos practicar con herramientas gen\u00e9ricas (ofim\u00e1ticas, de consulta de web, etc.).La inmensa mayor\u00eda de estos ordenadores utilizan software propietario, y en particular alguna versi\u00f3n de MS Windows y MS Office. Sin embargo, la elecci\u00f3n de estos programas raramente es una decisi\u00f3n meditada, ni suele estar basada en un an\u00e1lisis de las opciones disponibles. Es m\u00e1s, en muchos casos ni siquiera los responsables de esta decisi\u00f3n son consientes de que existen otras opciones. Pero estas otras opciones existen, y entre ellas destaca por sus ventajas la basada en software libre.\u00bf Es ya hora de que el software libre ocupe en el mundo de la educaci\u00f3n un lugar destacado?", "num_citations": "6\n", "authors": ["894"]}
{"title": "Quantitative analysis of the top ten Wikipedias\n", "abstract": " In a few years, Wikipedia has become one of the information systems with more public of the Internet. Based on a relatively simple architecture it has proven to be capable of supporting the largest and more diverse community of collaborative authorship worldwide. Using a quantitative methodology, (analyzing public Wikipedia databases), we describe the main characteristics of the 10 largest language editions, and the authors that work in them. The methodology is generic enough to be used on the rest of the editions, providing a convenient framework to develop a complete quantitative analysis of the Wikipedia. Among other parameters, we study the evolution of the number of contributions and articles, their size, and the differences in contributions by different authors, inferring some relationships between contribution patterns and content. These relationships reflect (and in part, explain) the evolution of\u00a0\u2026", "num_citations": "6\n", "authors": ["894"]}
{"title": "Towards community-driven development of educational materials: The Edukalibre approach\n", "abstract": " The libre software development model has shown how combining collective intelligence can lead to revolutionary methods that underpin major software advancements. This paper argues that the time is ripe to examine the application of this model to the development of educational materials where not only teachers but also students can become actively involved in the creation of educational content. The paper describes a novel, truly open platform, developed within the Edukalibre project, to support the creation of collaboratively constructed educational materials. The paper presents the Edukalibre collaborative editing system that provides easy access to core technologies composed of a document repository with version control management and conversion tools to produce several formats for each document. Two different collaborative editing interfaces \u2013 COLLAB and ConDOR \u2013 have been\u00a0\u2026", "num_citations": "6\n", "authors": ["894"]}
{"title": "Contando patatas: el tama\u00f1o de Debian 2.2\n", "abstract": " El 14 de agosto de 2000 el Proyecto Debian anuncia Debian GNU/Linux 2.2, la distribuci\u00f3n \u201cJoel\u2019Espy\u2019Klecker\u201d[Debian22Ann][Debian22Rel]. Su nombre familiar es \u201cpotato\u201d, y es la \u00faltima distribuci\u00f3n (hasta la fecha) del Sistema Operativo Debian GNU/Linux. En este trabajo hemos medido la distribuci\u00f3n, mostrando su tama\u00f1o y compar\u00e1ndolo con otras distribuciones.Debian no es s\u00f3lo la mayor distribuci\u00f3n GNU/Linux, es tambi\u00e9n una de las m\u00e1s fiables, con varios premios basados en las preferencias de los usuarios. Aunque es dif\u00edcil de estimar el n\u00famero de usuarios (El Proyecto Debian no vende CDs ni ning\u00fan otro soporte con el software), es sin duda importante dentro del mercado Linux. Se preocupa especialmente de beneficiar a los usuarios con una de las ventajas fundamentales del software libre: La disponibilidad del c\u00f3digo fuente. As\u00ed, los paquetes fuente se preparan cuidadosamente para permitir la reconstrucci\u00f3n de los fuentes originales (conocidos como \u201cupstream\u201d). Estas precauciones resultan muy convenientes para hacer mediciones y, en general, para obtener estad\u00edsticas.", "num_citations": "6\n", "authors": ["894"]}
{"title": "Free and proprietary software in cots-based software development\n", "abstract": " Free software, also known as Open-Source, is a new player in the software world. Though it is mostly popularized by the Linux operating system, it is not limited to it. More and more software applications, tools and libraries are available as free software, for free as well as proprietary platforms. In the COTS business, this raises a host of issues regarding both COTS producers and COTS users, issues that can be technical, economic or legal. From the point of view of producers, it is important to understand where the competition between free and proprietary production of COTS is heading, and what are the natural techno-economic niches for both. From the point of view of COTS-based development, one has to understand issues such as (this list is not limited in any way):                                          legal constraints implied by the different types of licences,                                                           legal liabilities for the\u00a0\u2026", "num_citations": "5\n", "authors": ["894"]}
{"title": "Libre software for computer science classes\n", "abstract": " In 1993, the authors began using 386BSD (which was libre software, or freeware) to teach computer science classes at Madrid's Carlos III University, in Spain. Seven years later, NetBSD and GNU/Linux are the operating systems of choice for several of the university's computer science teaching laboratories.", "num_citations": "5\n", "authors": ["894"]}
{"title": "A Statistical Approach to the Impact of Featured Articles in Wikipedia.\n", "abstract": " This paper presents an empirical study on the impact of featured articles on the attention that Wikipedia\u2019s articles attract, and how this behavior differs in different editions of Wikipedia. The study is based on the analysis of the log lines registered by the Wikimedia Foundation Squid servers after having sent the appropriate content in response to the corresponding request submitted by any Wikipedia user. The analysis has been conducted regarding the six most visited editions of the Wikipedia and has involved more than 4,100 million log lines corresponding to the traffic of September, October and November 2009. The methodology of work has mainly consisted on the parsing of the requests sent by the users and on their subsequent filtering according to the study directives. Relevant information fields has been finally stored in a database for persistence and further characterization. The main results of this paper are twofold: it shows how to use the the traffic log to extract information about the use of Wikipedia, which is a novel research approach without precedences in the research community, and it analyzes whether the featured articles mechanism achieve to attract more attention or not.", "num_citations": "4\n", "authors": ["894"]}
{"title": "A service based development environment on Web 2.0 platforms\n", "abstract": " Governments are investing on the IT adoption and promoting the so-called e-economies as a way to improve competitive advantages. One of the main government\u2019s actions is to provide internet access to the most part of the population, people and organisations. Internet provides the required support for connecting organizations, people and geographically distributed developments teams. Software developments are tightly related to the availability of tools and platforms needed for products developments. Internet is becoming the most widely used platform. Software forges such as SourceForge provide an integrated tools environment gathering a set of tools that are suited for each development with a low cost. In this paper we propose an innovating approach based on Web2.0, services and a method engineering approach for software developments. This approach represents one of the possible usages of\u00a0\u2026", "num_citations": "4\n", "authors": ["894"]}
{"title": "Guide for SMEs\n", "abstract": " This guide (developed in the context of the FLOSSMETRICS and OpenTTT projects) present a set of guidelines and suggestions for the adoption of open source software within SMEs, using a ladder model that will guide companies from the initial selection and adoption of FLOSS within the IT infrastructure up to the creation of suitable business models based on open source software.The guide is split into an introduction to FLOSS and a catalog of open source applications, selected to fulfill the requests that were gathered in the interviews and audit in the OpenTTT project. The application areas are infrastructural software (ranging from network and system management to security), ERP and CRM applications, groupware, document management, content management systems (CMS), VoIP, graphics/CAD/GIS systems, desktop applications, engineering and manufacturing, vertical business applications and eLearning.", "num_citations": "4\n", "authors": ["894"]}
{"title": "The networked forge: new environments for libre software development\n", "abstract": " Libre (free, open source) software forges (sites hosting the development infrastructure for a collection of projects) have been stable in architecture, services and concept since they become popular during the late 1990s. During this time several problems that cannot be solved without dramatic design changes have become evident. To overcome them, we propose a new concept, the \u201cnetworked forge\u201d, focused on addressing the core characteristics of libre software development and the needs of developers. The key of this proposal is to re-engineer forges as a net of distributed components which can be composed and configured according to the needs of users, using a combination of web 2.0, semantic web and mashup technologies. This approach is flexible enough to accommodate different development processes, while at the same time interoperates with current facilities.", "num_citations": "4\n", "authors": ["894"]}
{"title": "Edukalibre: una herramienta para la creaci\u00f3n colaborativa de material did\u00e1ctico\n", "abstract": " El Software Libre, con sus caracter\u0131sticas y su particular modelo de desarrollo, ha permitido la creaci\u00f3n de un conjunto de metodolog\u0131as de trabajo en grupo que han resultado satisfactorias en gran cantidad diferentes \u00e1mbitos. En este sentido, el proyecto Edukalibre importa y adapta estas metodolog\u0131as para ser aplicadas en la creaci\u00f3n y mantenimiento de documentaci\u00f3n en el \u00e1mbito de la educaci\u00f3n. Para lograr este objetivo, hemos desarrollado un sistema que proporciona m\u00e9todos para la elaboraci\u00f3n de documentos de manera colaborativa con las siguientes ventajas: 1) Permite a diferentes autores colaborar en la elaboraci\u00f3n de un documento, 2) Los autores pueden revisar la historia de un documento y tienen acceso a cada una de las diferentes versiones del mismo, 3) Los usuarios tienen libertad para elegir la herramienta de edici\u00f3n de documentos que prefieran, adem\u00e1s de poder modificar un documento usando un editor incluido en una p\u00e1gina web mediante un simple navegador. 4) Los usuarios pueden seleccionar la herramienta para interactuar con el sistema que prefieran entre diferentes alternativas que van desde un simple navegador web o un cliente de WebDAV, 5) El sistema genera conversiones autom\u00e1ticas de los documentos introducidos en el sistema. Conversiones de fichereos DocBook/XML, LaTeX y OpenOffice a formatos listos para ser impresosos (como PDF o PostScript) oa formato HTML listo para ser publicado en Internet.", "num_citations": "4\n", "authors": ["894"]}
{"title": "Libre software environment for robot programming\n", "abstract": " When facing the problem of teaching the basis of robot control programming to computer science students, apart from the syllabus of the course, some other requirements have to be considered, such as which is the most appropriate robot and which are the right tools for learning how to control it. In this paper, we describe the tools we have chosen for teaching robotics, focusing on an environment that supports practical assignments. We also analyze the reasons that made us choose each tool, giving special emphasis to the Libre software requirement that we have imposed on every tool we are using. Finally, we present the results and opinions we have obtained from our students and the lessons we have learned by using this Libre software approach.", "num_citations": "4\n", "authors": ["894"]}
{"title": "Graal: The Quest for Source Code Knowledge\n", "abstract": " Source code analysis tools are designed to analyze code artifacts with different intents, which span from improving the quality and security of the software to easing refactoring and reverse engineering activities. However, most tools do not come with features to periodically schedule their analysis or to be executed on a battery of repositories, and lack support to combine their results with other analysis tools. Thus, researchers and practitioners are often forced to develop ad-hoc scripts to meet their needs. This comes at the risk of obtaining wrong results (because of the lack of testing) and of hindering replication by other research teams. In addition, the resulting scripts are often not meant to be customized nor designed for incrementality, scalability and extensibility. In this paper we present Graal, which empowers users with a customizable, scalable and incremental approach to conduct source code analysis and\u00a0\u2026", "num_citations": "3\n", "authors": ["894"]}
{"title": "Characterization of the Xen project code review process: an experience report\n", "abstract": " Many software development projects have introduced mandatory code review for every change to the code. This means that the project needs to devote a significant effort to review all proposed changes, and that their merging into the code base may get considerably delayed. Therefore, all those projects need to understand how code review is working, and the delays it is causing in time to merge. This is the case in the Xen project, which performs peer review using mailing lists. During the first half of 2015, some people in the project observed a large and sustained increase in the number of messages related to code review, which had started some years before. This observation led to concerns on whether the code review process was having some trouble, and too large an impact on the overall development process. Those concerns were addressed with a quantitative study, which is presented in this paper. Based\u00a0\u2026", "num_citations": "3\n", "authors": ["894"]}
{"title": "Temporal characterization of the requests to Wikipedia\n", "abstract": " This chapter presents an empirical study about the temporal patterns characterizing the requests submitted by users to Wikipedia. The study is based on the analysis of the log lines registered by the Wikimedia Foundation Squid servers after having sent the appropriate content in response to users\u2019 requests. The analysis has been conducted regarding the ten most visited editions of Wikipedia and has involved more than 14,000 million log lines corresponding to the traffic of the entire year 2009. The conducted methodology has mainly consisted in the parsing and filtering of users\u2019 requests according to the study directives. As a result, relevant information fields have been finally stored in a database for persistence and further characterization. In this way, we, first, assessed, whether the traffic to Wikipedia could serve as a reliable estimator of the overall traffic to all the Wikimedia Foundation projects. Our\u00a0\u2026", "num_citations": "3\n", "authors": ["894"]}
{"title": "Towards the improvement of the software quality: An Enterprise 2.0 architecture for distributed software developments\n", "abstract": " Software development is tightly dependent on the tools available for supporting its processes. Organizational and sociotechnical peculiarities such as indefinition of roles, geographically distributed development teams, new business models and diverse cultural interactions steer these tools. Software development supported by web-based services, built on top of Web 2.0 technologies, is emerging as a new paradigm for distributed software development. New generation software forges (web-based development environments) such as EzForge are becoming the infrastructure that provides the required features for hosting collections of software development projects. They are composed of an integrated set of tools, interacting in a mashup-like environment, each one suited for a specific task, and therefore simple enough to keep total complexity low. An adequate selection of tools helps developers to focus on the\u00a0\u2026", "num_citations": "3\n", "authors": ["894"]}
{"title": "Producing educational resources in the \u201clibre way\u201d: The Edukalibre project\n", "abstract": " Recently emerging methodologies for producing educational resources resembling those used in the libre (free, open source) software will radically change the way educational content is developed and used on the web. To fully implement the libre idea, both educational practitioners and students should become actively involved in the creation and distribution of open resources. New architectures are needed to effectively support this process. The paper describes a novel, truly open platform to support the creation of free, collaboratively constructed educational content on the web. The platform has been developed within the Edukalibre project. The Edukalibre system provides easy access to core technologies composed of a control version system combined with conversion tools to produce several convenient formats for each document. Its modular architecture offers many different interfaces to the users. The Edukalibre platform is distributed as libre software.", "num_citations": "3\n", "authors": ["894"]}
{"title": "EU Consultation on Software Patents Contribution\n", "abstract": " A patent grants a monopoly on a technology. But monopolies are known to produce economic inefficiencies, and their social costs are usually not negligible. Therefore, any extension of areas covered by patent law (like the extension to computer programs which is now under discussion) should be carefully studied. Any benefit should be proved, verified, and weighted against those costs and inefficiencies. Patents are usually promoted as mechanisms for improving the technological development in a given area, and to help innovators to raise enough funding to make products from their ideas. In the specific case of software, the copyright law and the very dynamics of the software industry have been enough to achieve a remarkable record of rapid technological innovation and healthy fund raising in the past. There is no evidence that patents on computer programs would improve this record. On the contrary, there is\u00a0\u2026", "num_citations": "3\n", "authors": ["894"]}
{"title": "A Brief History of Free, Open Source Software and Its Communities\n", "abstract": " (Simulation Program with Integrated Circuit Emphasis), TeX, and Unix. In 1973, SPICE and its source code were placed in the public domain by their author, Donald O. Pederson. The program was a tool for learning integrated circuit (IC) design, and it was quickly adopted by several universities. With time, SPICE and its derivatives evolved into the industry\u2019s preferred tools to design ICs, becoming the de facto standard. It was the first example of how a FOSS-based strategy could lead to market dominance. TeX was developed by Donald Knuth in 1978, during a sabbatical, as a typesetting system to produce quality output. Knuth intended to use it for typesetting his own books but distributed it as source code as well, through an authorization that today would be considered quite similar to a FOSS license. Since then, TeX has become the standard in scientific typesetting, and it is still popular. Unix was created by Thompson, Ritchie, and others at AT&T Bell Labs, starting in 1972. Since 1973, Unix has been distributed to many universities, with a license permitting academic use. The software could not be disseminated beyond the signatories of the license, but during the late 1970s, those parties formed a community composed mainly of academic institutions and research centers that worked in a similar way to later FOSS groups. Its members shared and improved the code, and the Computer Systems Research Group (CSRG) at the University of California, Berkeley, began producing its own Unix distributions. This was a keystone of the emergence of FOSS during the late 1980s. Earlier in that decade, these cases provided some experience with how\u00a0\u2026", "num_citations": "2\n", "authors": ["894"]}
{"title": "Las ventajas de la apertura\n", "abstract": " Una de las principales consecuencias de publicar un programa como software libre es que su c\u00f3digo fuente queda a disposici\u00f3n de quien quiera examinarlo. Adem\u00e1s, mucha otra informaci\u00f3n sobre el proceso de desarrollo suele estar tambi\u00e9n f\u00e1cilmente accesible en internet. En este art\u00edculo se presentan algunas de las consecuencias de esta \u201capertura\u201d del proceso de construcci\u00f3n de software libre, y se explora brevemente c\u00f3mo estos mismos mecanismos de apertura podr\u00edan comportarse en otros campos.", "num_citations": "2\n", "authors": ["894"]}
{"title": "How Debian GNU/Linux is translated into Spanish\n", "abstract": " Debian GNU/Linux is one of the largest Linux-based software distributions, including thousands of libre (free, open source) software packages coming from many different sources. One of the peculiarities of the Debian project is being run altogether by a selfselected group of volunteers. In particular, this means that all the localization tasks (including translation) to the many supported languages is run on volunteer effort. This paper describes how Debian is localized to the Spanish language, as a case example of translation efforts in the libre software world.", "num_citations": "2\n", "authors": ["894"]}
{"title": "\u00bf Qu\u00e9 es el software libre?\n", "abstract": " \u00bfQu\u00e9 es el software libre? Page 1 \u00bfQu\u00e9 es el software libre? Jes\u00fas M. Gonz\u00e1lez Barahona \u00bfQu\u00e9 es el software libre? Consecuencias, caracter\u0131sticas Licencias Ejemplos de licencias \u00bfEs la licencia suficiente? Software libre como infraestructura Investigaci\u00f3n abierta Acabamos... \u00bfQu\u00e9 es el software libre? Jes\u00fas M. Gonz\u00e1lez Barahona Correo: jgb@gsyc.es Twitter: @jgbarah2 Fediverse: @jgbarah@floss.social Universidad Rey Juan Carlos FLISoL Tenerife Edici\u00f3n a distancia, 24 de abril de 2021 https://jgbarah.github.io/presentations Page 2 \u00bfQu\u00e9 es el software libre? Jes\u00fas M. Gonz\u00e1lez Barahona \u00bfQu\u00e9 es el software libre? Consecuencias, caracter\u0131sticas Licencias Ejemplos de licencias \u00bfEs la licencia suficiente? Software libre como infraestructura Investigaci\u00f3n abierta Acabamos... \u00bfQu\u00e9 es el software libre? Page 3 \u00bfQu\u00e9 es el software libre? Jes\u00fas M. Gonz\u00e1lez Barahona \u00bfQu\u00e9 es el software libre? Consecuencias\u2026", "num_citations": "2\n", "authors": ["894"]}
{"title": "Presentaci\u00f3n. Propiedad y uso de la informaci\u00f3n y del conocimiento:\u00bf privatizaci\u00f3n o procom\u00fan?\n", "abstract": " Presentaci\u00f3n. Propiedad y uso de la informaci\u00f3n y del conocimiento: \u00bfprivatizaci\u00f3n o procom\u00fan? - Dialnet Ayuda \u00bfEn qu\u00e9 podemos ayudarle? \u00d7 Buscar en la ayuda Buscar Consultar la ayuda \u00bfEn qu\u00e9 podemos ayudarle? \u00d7 Buscar en la ayuda Buscar Consultar la ayuda Ir al contenido Dialnet Buscar Revistas Tesis Congresos Ayuda Presentaci\u00f3n. Propiedad y uso de la informaci\u00f3n y del conocimiento: \u00bfprivatizaci\u00f3n o procom\u00fan? Autores: P. Aigrain, Jes\u00fas M. Gonz\u00e1lez Barahona Localizaci\u00f3n: Nov\u00e1tica: Revista de la Asociaci\u00f3n de T\u00e9cnicos de Inform\u00e1tica, ISSN 0211-2124, N\u00ba. , 2003 (Ejemplar dedicado a: Conocimiento abierto. Open knowledge), p\u00e1gs. 3-5 Idioma: espa\u00f1ol Enlaces Texto completo (pdf) Fundaci\u00f3n Dialnet Acceso de usuarios registrados Imagen de identificaci\u00f3n Identificarse \u00bfOlvid\u00f3 su contrase\u00f1a? \u00bfEs nuevo? Reg\u00edstrese Ventajas de registrarse Dialnet Plus M\u00e1s informaci\u00f3n sobre Dialnet Plus \u2026", "num_citations": "2\n", "authors": ["894"]}
{"title": "Teaching network programming with Ada and Lower_Layer\n", "abstract": " After some years of using a classical approach to teach network programming (C and BSD sockets), we decided to try a different approach, based on Ada as the programming language and Lower-Layer as the communication library. After two years of using this new approach in several undergraduate courses, we present here our experience and the lessons learned. In short, the new approach has proven to offer an environment easier to study, to understand, and to use for implementing protocols. Some of these advantages are due to the benefits of using Ada, while others are due to the cIenner interface of the Lower-Layer library-if compared to BSD sockets.", "num_citations": "2\n", "authors": ["894"]}
{"title": "GrimoireLab: A toolset for software development analytics\n", "abstract": " BackgroundAfter many years of research on software repositories, the knowledge for building mature, reusable tools that perform data retrieval, storage and basic analytics is readily available. However, there is still room to improvement in the area of reusable tools implementing this knowledge.", "num_citations": "1\n", "authors": ["894"]}
{"title": "Characterizing outdateness with technical lag: an exploratory study\n", "abstract": " Background: Nowadays, many applications are built reusing a large number of components, retrieved from software collections such as npm (JavaScript) or PyPi (Python). Those components are built in their corresponding upstream repositories, where they are being developed. This architecture of reusing causes some constraints on how much outdated is an application when it is deployed in production environments.Goal: To understand how outdateness of applications, and the components on which they depend, can be computed, so that different situations can be measured and assessed with the help of metrics. Based on this understanding, we also want to produce a model to characterize ecosystems (collections of reusable components).Method: Use the technical lag framework to analyze the flows from upstream repositories, to collection of components, to application building and later deployment. Using\u00a0\u2026", "num_citations": "1\n", "authors": ["894"]}
{"title": "Software Engineering Artifact in Software Development Process-Linkage Between Issues and Code Review Processes\n", "abstract": " Researchers working with software repositories, often when building performance or quality models, need to recover traceability links between bug reports in issue tracking repositories and reviews in code review systems. However, very often the information stored in bug tracking repositories is not explicitly tagged or linked to the issues reviewing them. Researchers have to adopt various heuristics to tag the data. These includes, for example, identifying if an issue is a bug report or not. In this study we promote a research artifact in software engineering, a reusable unit of research that can be used to support other research endeavors and has acted as a support material that enabled the creation of the results published in a great number of papers until now-linking issues and reviews of the code review software process. We present two state-of-the-practice algorithms on how to link issues and reviews, selecting as our case study the open source cloud computing project of OpenStack. OpenStack enforces strict development guidelines and rules on the quality of the data in its issue tracking repository. We empirically compare the outcome of the two approaches, highlighting the most prominent one.", "num_citations": "1\n", "authors": ["894"]}
{"title": "A Quantitative Examination of the Impact of Featured Articles in Wikipedia.\n", "abstract": " This paper presents a quantitative examination of the impact of the presentation of featured articles as quality content in the main page of several Wikipedia editions. Moreover, the paper also presents the analysis performed to determine the number of visits received by the articles promoted to the featured status. We have analyzed the visits not only in the month when articles awarded the promotion or were included in the main page, but also in the previous and following ones. The main aim for this is to assess the attention attracted by the featured content and the different dynamics exhibited by each community of users in respect to the promotion process. The main results of this paper are twofold: it shows how to extract relevant information related to the use of Wikipedia, which is an emerging research topic, and it analyzes whether the featured articles mechanism achieve to attract more attention.", "num_citations": "1\n", "authors": ["894"]}
{"title": "Free software: an opportunity for researchers\n", "abstract": " [Free software: an opportunity for researchers]. - Abstract - Europe PMC Sign in or create an account https://orcid.org Europe PMC Menu About About Europe PMC Preprints in Europe PMC Funders Joining Europe PMC Governance Roadmap Outreach Tools Tools overview ORCID article claiming Journal list Grant finder External links service RSS feeds Annotations Annotations submission service Developers Developer resources Articles RESTful API Grants RESTful API API use cases SOAP web service Annotations API OAI service Bulk downloads Developers Forum Help Help using Europe PMC Search syntax reference Contact us Contact us Helpdesk Feedback Twitter Blog Tech blog Developer Forum Europe PMC plus Search worldwide, life-sciences literature Search Advanced Search Recent history Saved searches Abstract Full text [Free software: an opportunity for researchers]. Rius R, Gonzalez JA \u2026", "num_citations": "1\n", "authors": ["894"]}
{"title": "Evaluaci\u00f3n de la calidad visual del paisaje agrario\n", "abstract": " ConclusionesLa identidad europea est\u00e1 estrechamente vinculada a sus paisajes rurales en general y agrarios en particular. Por ello, tanto en el \u00e1mbito comunitario como nacional, regional o local es necesario promover medidas encaminadas a la protecci\u00f3n y mejora de nuestros paisajes, en primer lugar, desde el reconocimiento del papel fundamental que los agricultores desempe\u00f1an en el cuidado de \u00e9ste y otros bienes de naturaleza p\u00fablica, no debemos olvidar que de su gesti\u00f3n depende el 80 por ciento de territorio europeo, y en segundo, articulando los mecanismos apropiados de compensaci\u00f3n por dicha labor.Desde el punto de vista paisaj\u00edstico, la actividad agraria contribuye a una mejor valoraci\u00f3n del mundo rural ya que a la componente puramente est\u00e9tica se le a\u00f1ade la percepci\u00f3n de una actividad que contribuye al cumplimiento de otro tipo de funciones, entre ellas las de \u00edndole social, evitando el \u00e9xodo rural, y ambientales, como la prevenci\u00f3n de incendios y la erosi\u00f3n del suelo.", "num_citations": "1\n", "authors": ["894"]}
{"title": "La oportunidad del software libre: capacidades, derechos e innovaci\u00f3n. Viabilidad tecnol\u00f3gica, econ\u00f3mica, administrativa, jur\u00eddica y pol\u00edtica: argumentos, fundamentos\u00a0\u2026\n", "abstract": " Los tres pilares sobre los que se asienta nuestro informe se resumen con los t\u00e9rminos oportunidad, necesidad y liderazgo. En efecto, actualmente se dan las las circunstancias para que Espa\u00f1a pueda situarse al frente de las muchas iniciativas que aspiran a recuperar el terreno perdido en las tecnolog\u00edas de la informaci\u00f3n y a desarrollar un novedoso tejido productivo solidario con las pol\u00edticas de innovaci\u00f3n industrial y de independencia tecnol\u00f3gica. Este documento no pretende ser exhaustivo, sino m\u00e1s bien motivador, dise\u00f1ando un itinerario tecnol\u00f3gico, econ\u00f3mico, administrativo, jur\u00eddico y pol\u00edtico capaz de inducir el escenario m\u00e1s conveniente para la liberaci\u00f3n de todas las capacidades que nuestro pa\u00eds ha acumulado en los \u00faltimos a\u00f1os en materia de software libre.El itinerario se basa en una bater\u00eda de argumentos que se podr\u00edan resumir en cinco principios f\u00e1cilmente documentables: 1) El software libre representa una opci\u00f3n tecnol\u00f3gica de calidad que impulsa la innovaci\u00f3n. 2) El software libre crea tejido industrial y asegura la libre competencia. 3) El software libre fomenta el escrutinio p\u00fablico y optimiza el gasto inform\u00e1tico. 4) El software libre garantiza la igualdad de oportunidades de los proveedores y la seguridad de la informaci\u00f3n. 5) El software libre ensancha las libertades en la sociedad de la informaci\u00f3n y favorece la cultura abierta. Obviamente, los principios conducen a las propuestas. Por ello hemos incluido varias docenas de recomendaciones que faciliten el tr\u00e1nsito desde una sociedad con gran dependencia del software privativo a otra que se apoyar\u00eda en las soluciones libres. Dicha transici\u00f3n es posible, pues\u00a0\u2026", "num_citations": "1\n", "authors": ["894"]}
{"title": "El acceso abierto llevado hasta sus extremos:\u00bf necesitamos las revistas?\n", "abstract": " Partiendo de la idea de que el fin de la publicaci\u00f3n cient\u00edfica es que el conocimiento llegue lo antes posible y de la mejor forma posible a quien lo necesite, este texto repasa el impacto que internet y las nuevas tecnolog\u00edas han tenido en los modelos de publicaci\u00f3n, desde el autoarchivo a las publicaciones Open access, realizando asimismo una comparaci\u00f3n con la evoluci\u00f3n sufrida en los medios period\u00edsticos. Finalmente, se rese\u00f1an nuevas tendencias y caminos en la publicaci\u00f3n cient\u00edfica, que nos llevar\u00e1n a nuevos escenarios a partir de los cuales se podr\u00e1n evaluar y reelaborar nuevos modelos en el futuro.", "num_citations": "1\n", "authors": ["894"]}
{"title": "The advantages of openness\n", "abstract": " Una de las principales consecuencias de publicar un programa como software libre es que su c\u00f3digo fuente queda a disposici\u00f3n de quien quiera examinarlo. Adem\u00e1s, mucha otra informaci\u00f3n sobre el proceso de desarrollo suele estar tambi\u00e9n f\u00e1cilmente accesible en internet. En este art\u00edculo se presentan algunas de las consecuencias de esta \u201capertura\u201d del proceso de construcci\u00f3n de software libre, y se explora brevemente c\u00f3mo estos mismos mecanismos de apertura podr\u00edan comportarse en otros campos.", "num_citations": "1\n", "authors": ["894"]}