{"title": "Security in automotive networks: Lightweight authentication and authorization\n", "abstract": " With the increasing amount of interconnections between vehicles, the attack surface of internal vehicle networks is rising steeply. Although these networks are shielded against external attacks, they often do not have any internal security to protect against malicious components or adversaries who can breach the network perimeter. To secure the in-vehicle network, all communicating components must be authenticated, and only authorized components should be allowed to send and receive messages. This is achieved through the use of an authentication framework. Cryptography is widely used to authenticate communicating parties and provide secure communication channels (e.g., Internet communication). However, the real-time performance requirements of in-vehicle networks restrict the types of cryptographic algorithms and protocols that may be used. In particular, asymmetric cryptography is computationally\u00a0\u2026", "num_citations": "55\n", "authors": ["760"]}
{"title": "Lightweight Authentication for Secure Automotive Networks\n", "abstract": " We propose a framework to bridge the gap between secure authentication in automotive networks and on the internet. Our proposed framework allows runtime key exchanges with minimal overhead for resource-constrained in-vehicle networks. It combines symmetric and asymmetric cryptography to establish secure communication and enable secure updates of keys and software throughout the lifetime of the vehicle. For this purpose, we tailor authentication protocols for devices and authorization protocols for streams to the automotive domain. As a result, our framework natively supports multicast and broadcast communication. We show that our lightweight framework is able to initiate secure message streams fast enough to meet the real-time requirements of automotive networks.", "num_citations": "49\n", "authors": ["760"]}
{"title": "System architecture and software design for electric vehicles\n", "abstract": " This paper gives an overview of the system architecture and software design challenges for Electric Vehicles (EVs). First, we introduce the EV-specific components and their control, considering the battery, electric motor, and electric powertrain. Moreover, technologies that will help to advance safety and energy efficiency of EVs such as drive-by-wire and information systems are discussed. Regarding the system architecture, we present challenges in the domain of communication and computation platforms. A paradigm shift towards time-triggered in-vehicle communication systems becomes inevitable for the sake of determinism, making the introduction of new bus systems and protocols necessary. At the same time, novel computational devices promise high processing power at low cost which will make a reduction in the number of Electronic Control Units (ECUs) possible. As a result, the software design has to be\u00a0\u2026", "num_citations": "43\n", "authors": ["760"]}
{"title": "Security analysis of automotive architectures using probabilistic model checking\n", "abstract": " This paper proposes a novel approach to security analysis of automotive architectures at the system-level. With an increasing amount of software and connectedness of cars, security challenges are emerging in the automotive domain. Our proposed approach enables assessment of the security of architecture variants and can be used by decision makers in the design process. First, the automotive Electronic Control Units (ECUs) and networks are modelled at the system-level using parameters per component, including an exploitability score and patching rates that are derived from an automated or manual assessment. For any specific architecture variant, a Continuous-Time Markov Chain (CTMC) model is determined and analyzed in terms of confidentiality, integrity and availability, using probabilistic model checking. The introduced case study demonstrates the applicability of our approach, enabling, for instance\u00a0\u2026", "num_citations": "39\n", "authors": ["760"]}
{"title": "Automotive electrical and electronic architecture security via distributed in-vehicle traffic monitoring\n", "abstract": " Due to the growing interconnectedness and complexity of in-vehicle networks, in addition to safety, security is becoming an increasingly important topic in the automotive domain. In this paper, we study techniques for detecting security infringements in automotive electrical and electronic (E/E) architectures. Toward this we propose in-vehicle network traffic monitoring to detect increased transmission rates of manipulated message streams. Attacks causing timing violations can disrupt safety-critical functions and have severe consequences. To reduce costs and prevent single points of failure, our approach enables an automatic distribution of detection tasks among selected E/E architecture components, such as a subset of electronic control units. First, we analyze a concrete E/E system architecture to determine the communication parameters and properties necessary for detecting security attacks. These are then\u00a0\u2026", "num_citations": "30\n", "authors": ["760"]}
{"title": "Security-aware obfuscated priority assignment for automotive can platforms\n", "abstract": " Security in automotive in-vehicle networks is an increasing problem with the growing connectedness of road vehicles. This article proposes a security-aware priority assignment for automotive controller area network (CAN) platforms with the aim of mitigating scaling effects of attacks on vehicle fleets. CAN is the dominating field bus in the automotive domain due to its simplicity, low cost, and robustness. While messages might be encrypted to enhance the security of CAN systems, their priorities are usually identical for automotive platforms, comprising generally a large number of vehicle models. As a result, the identifier uniquely defines which message is sent, allowing attacks to scale across a fleet of vehicles with the same platform. As a remedy, we propose a methodology that is capable of determining obfuscated message identifiers for each individual vehicle. Since identifiers directly represent message priorities\u00a0\u2026", "num_citations": "30\n", "authors": ["760"]}
{"title": "VEGa: A high performance vehicular Ethernet gateway on hybrid FPGA\n", "abstract": " Modern vehicles employ a large amount of distributed computation and require the underlying communication scheme to provide high bandwidth and low latency. Existing communication protocols like Controller Area Network (CAN) and FlexRay do not provide the required bandwidth, paving the way for adoption of Ethernet as the next generation network backbone for in-vehicle systems. Ethernet would co-exist with safety-critical communication on legacy networks, providing a scalable platform for evolving vehicular systems. This requires a high-performance network gateway that can simultaneously handle high bandwidth, low latency, and isolation; features that are not achievable with traditional processor based gateway implementations. We present VEGa, a configurable vehicular Ethernet gateway architecture utilising a hybrid FPGA to closely couple software control on a processor with dedicated switching\u00a0\u2026", "num_citations": "22\n", "authors": ["760"]}
{"title": "Open source model and simulator for real-time performance analysis of automotive network security\n", "abstract": " With the increasing interconnection of vehicles, security challenges have moved into focus. Attacks on in-vehicle networks can cause accidents resulting in financial damages and even loss of life. The impact of an attack can be mitigated by secure internal vehicle networks, employing authentication of ECUs and authorization of messages. However, quantifying the real-time performance of additional security measures is difficult due to the high number of nodes and messages. In this paper, we present an open source model and simulator for the evaluation of the real-time performance of automotive networks implementing security measures. Applying parameters from hardware measurements, we evaluate our model and simulator with realistic test cases and a case study. We further present application perspectives on how the open source simulator can be used in different domains for the analysis of automotive\u00a0\u2026", "num_citations": "12\n", "authors": ["760"]}
{"title": "Policy-based message scheduling using FlexRay\n", "abstract": " This paper proposes a virtual communication layer for time-triggered networks, enabling a policy-based message scheduling as well as preemption which in turn simplifies real-time verification. The introduced layer is particularly advantageous in the automotive domain since it reduces the complexity of scheduling time-triggered communication systems and simplifies incremental changes of existing schedules. We propose a framework to schedule event-triggered messages based on a predefined policy in time-triggered communication slots, improving the network utilization while logically separating messages from different devices. Furthermore, we enhance the versatility of the system, allowing to transmit data that exceeds the size of one time-triggered slot. The proposed policy-based scheduling with fixed priorities enables the integration of mixed criticality applications in time-triggered networks, while ensuring\u00a0\u2026", "num_citations": "12\n", "authors": ["760"]}
{"title": "Schedule management framework for cloud-based future automotive software systems\n", "abstract": " The innovation in the automotive domain is shifting considerably to the Electrical/Electronics system and software. The evolution cycle of the electronic system and the software is significantly shorter than the life cycle of a vehicle and therefore the functionality of a vehicle might become 'outdated' easily in the future. Thus, it would be advantageous if new applications can be installed or existing applications can be upgraded via cloud services after sales in a plug-and-play fashion. This requires that the underlying system possesses a certain degree of adaptivity and reconfigurability. One important issue in this case is the allocation of computation and communication resources. In the case of a time-triggered system, the task and network schedules need to be adapted to accommodate new applications. Towards addressing this problem, we propose a schedule management framework to obtain, synthesize and\u00a0\u2026", "num_citations": "10\n", "authors": ["760"]}
{"title": "Security for Automotive Electrical/Electronic (E/E) Architectures\n", "abstract": " The increasing connectivity among vehicles increases their attack surface and challenges their security. Combining security and automotive real-time systems is challenging in many ways. The heterogeneity and complexity of automotive communication systems and their interconnections make the quantification of security a difficult task. Lower computational capabilities and network bandwidth, coupled with the real-time behavior in automotive systems makes implementation of computation and bandwidth intensive security challenging. New solutions are required to address security in the automotive domain in context of not only functional, but also real-time requirements.", "num_citations": "9\n", "authors": ["760"]}
{"title": "HMI development for a purpose-built electric taxi in Singapore\n", "abstract": " In this paper, we describe the development process of a human-machine interface (HMI) for a purpose-built electric taxi in Singapore. Based on the requirements of taxi drivers and passengers, we developed an automo-tive communication structure to support the connectivity between the vehicle HMI and mobile devices, support taxi-related functionalities and emphasize the charac-teristics of the electric vehicle. We carried out seven requirement studies in Singapore, implemented an integrated HMI platform, and developed different inter-face prototypes for the vehicle HMI and smart devices. This work contributes to the emerging field of automo-tive user interfaces by proposing a fully integrated HMI for an electric taxi.", "num_citations": "7\n", "authors": ["760"]}
{"title": "Dynamic platforms for uncertainty management in future automotive E/E architectures\n", "abstract": " Current automotive E/E architectures are comprised of hardware and software and are mostly designed in a monolithic approach, static over the lifetime of the vehicle. Design, implementation and updates are mostly performed on a per-component-basis, exchanging complete Electronic Control Units (ECUs) or their software image as a whole. With an increasing amount of functionality being realized in software, the benefits of software can be used increasingly. This includes modularization of components, which forms the basis for updates and addition of functions. Additionally, this modularization allows the consolidation of ECUs and supports a higher level of integration. Such modularization and dynamic behavior over the lifetime of a vehicle fleet, as well as a single vehicle does, however, hold a lot of challenges for safety-critical systems. Safety-critical systems, such as cars, require their behavior to be\u00a0\u2026", "num_citations": "6\n", "authors": ["760"]}
{"title": "Towards a Reliable and Context-Based System Architecture for Autonomous Vehicles\n", "abstract": " Full vehicle autonomy excludes a takeover by passengers in case a safety-critical application fails. Therefore, the system responsible for operating the autonomous vehicle has to detect and handle failures autonomously. Moreover, this system has to ensure the safety of the passengers, as well as the safety of other road users at any given time. Especially in the initial phase of autonomous vehicles, building up consumer confidence is essential. Therefore, in this regard, handling all failures by simply performing an emergency stop is not desirable. In this paper, we introduce an approach enabling a dynamic and safe reconfiguration of the autonomous driving system to handle occurring hardware and software failures. Since the requirements concerning safe reconfiguration actions are significantly affected by the current context the car is experiencing, the developed reconfiguration approach is sensitive to context changes. Our approach defines three interconnected layers, which are distinguished by their level of awareness. The top layer, referred to as the context layer, is responsible for observing the context. These context observations, in turn, imply a set of requirements, which constitute the input for the reconfiguration layer. The latter layer is required to determine reconfiguration actions, which are then executed by the architecture layer.", "num_citations": "3\n", "authors": ["760"]}
{"title": "FDIRO: A General Approach for a Fail-Operational System Design\n", "abstract": " Full vehicle autonomy excludes a takeover by passengers in case a safety-critical application fails. Therefore, the system responsible for operating the autonomous vehicle has to detect and handle failures by itself to ensure the safety of the passengers and other road users. Especially in the initial phase of the availability of autonomous vehicles, building up consumer confidence is essential. Therefore, handling failures by stopping the vehicle is not desirable as such a behavior will unsettle customers. In this paper, we introduce FDIRO (standing for \u201cFault Detection, Isolation, Recovery, and Optimization\u201d) a fail-operational approach for handling failures in a stepwise fashion that is based on the FDIR (\u201cFault Detection, Isolation, and Recovery\u201d) approach known from the aerospace domain, whereby we reimplemented the steps defined by FDIR to fit the use case of autonomous driving. We designed the failure detection and isolation procedure to be of low complexity so that these steps can be performed within milliseconds. The subsequent recovery step then transforms the system configuration such that the demanded safety requirements are satisfied. However, since the resulting configuration might not be optimal regarding the current context that the autonomous vehicle is experiencing, we enhanced the FDIR strategy by an additional optimization step. The goal of this step is to optimize the application placement, ie, the assignment between application instances and computing nodes, according to the current context.", "num_citations": "1\n", "authors": ["760"]}
{"title": "Fusion: A Safe and Secure Software Platform for Autonomous Driving\n", "abstract": " The vastly increasing amount of software in vehicles, its variability and complexity, as well as the computational requirements, especially for those built with autonomous driving in mind, require new approaches to the structure and integration of software. The traditional approaches of single-purpose embedded devices with integrated software are no longer a suitable choice. New architectures introduce general purpose compute devices, capable of high-performance computation, as well as high variability of software. Managing the increasing complexity, also at runtime, in a safe and secure manner, are open challenges. Solving these challenges is a high-complexity development and integration effort requiring design-time and runtime configuration, approaches to communication middleware, operating system configuration, such as task scheduling, monitoring, tight integration of security and safety, and, especially in the case of autonomous driving, concepts for dynamic adaption of the system to the situation, eg, fail-operational concepts. We present Fusion, a next-generation software platform supporting the development of autonomous driving systems.", "num_citations": "1\n", "authors": ["760"]}
{"title": "Dynamic vehicle software with AUTOCONT\n", "abstract": " Future automotive software needs to deal with an increasing level of dynamicity, reasoned by the wish for connected driving, software updates, and dynamic feature activation. Such functionalities cannot be properly realized with today's classic AUTOSAR development approach, since it relies on the static configuration of all software units at build time. We present the automotive container (AUTOCONT) architecture as an alternative to AUTOSAR-based software development. Our approach relies on the combination of component containers, event-based interaction and configuration at update time. We discuss the requirements and principles for such an architecture and discuss first experiences with a prototypical implementation.", "num_citations": "1\n", "authors": ["760"]}