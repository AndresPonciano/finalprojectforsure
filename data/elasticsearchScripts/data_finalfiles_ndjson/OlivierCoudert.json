{"title": "Verification of synchronous sequential machines based on symbolic execution\n", "abstract": " This paper presents an original method to compare two synchronous sequential machines. The method consists in a breadth first traversal of the product machine during which symbolic expressions of its observable behaviour are computed. The method uses formal manipulations on boolean functions to avoid the state enumeration and diagram construction. For this purpose, new algorithms on boolean functions represented by Typed Decision Graphs has been defined.", "num_citations": "722\n", "authors": ["1813"]}
{"title": "A unified framework for the formal verification of sequential circuits\n", "abstract": " Hardware description languages (HDLs) dramatically change the way circuit designers work. These languages can be used to describe circuits at a very high level of abstraction, which allows the designers to specify the behavior of a circuit before realizing it. The validation of these specifications is currently done by executing them, which is very costly [2]. This cost motivates the research [3, 5, 7, 10] done on the automatic verification of temporal properties of finite state machines.", "num_citations": "420\n", "authors": ["1813"]}
{"title": "Verification of sequential machines using boolean functional vectors\n", "abstract": " CiNii \u8ad6\u6587 - Verification of sequential machines using boolean functional vectors CiNii \u56fd\u7acb \u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb \u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u95a2\u3059\u308b\u30a2\u30f3\u30b1\u30fc\u30c8\u3092\u5b9f\u65bd\u4e2d\u3067\u3059\uff0811/11(\u6c34)-12/23(\u6c34)\uff09 CiNii Research\u30d7\u30ec\u7248\u306e \u516c\u958b\u306b\u3064\u3044\u3066 Verification of sequential machines using boolean functional vectors COUDERT O. \u88ab\u5f15\u7528\u6587\u732e: 3\u4ef6 \u8457\u8005 COUDERT O. \u53ce\u9332\u520a\u884c\u7269 IMEC-IFIP International Workshop on Applied Formal Methods For Correct VLSI Design IMEC-IFIP International Workshop on Applied Formal Methods For Correct VLSI Design, 179-196, 1989 \u88ab\u5f15\u7528\u6587\u732e: 3\u4ef6\u4e2d 1-3\u4ef6\u3092 \u8868\u793a 1 A Formal Verification Algorithm for Pipelined Processors SHONAI Toru , SHIMIZU \u2026", "num_citations": "358\n", "authors": ["1813"]}
{"title": "Two-level logic minimization: an overview\n", "abstract": " Fourty years ago Quine noted that finding a procedure that computes a minimal sum products for a given propositional formula is very complex, even though propositional formulas are fairly simple. Since this early work, this problem, known as two-level logic minimization, has attracted much attention. It arises in several fields of computer science, e.g., in logic synthesis, reliability analysis, and automated reasoning. This paper exposes the classical approach for two-level logic minimization, and presents the recent developments that overcome the limitations of the procedures proposed in the past. We show that these new techniques yield a minimizer that is 10 up to 50 times faster than the previously best known ones, and that is able to handle more complex functions.", "num_citations": "270\n", "authors": ["1813"]}
{"title": "Implicit and Incremental Computation of Primes and Essential Primes of Boolean Functions.\n", "abstract": " Recently introduced implicit set manipulation techniques have made it possible to formally verify nite state machines with state graphs too large to be built. This paper shows that these techniques can also be used with success to compute and manipulate implicitly extremely large sets of prime and of essential prime implicants of incompletely speci ed Boolean functions. These sets are denoted by meta-products that are represented with binary decision diagrams. This paper describes two procedures. One is based on the standard BDD operators, and the other, more e cient, takes advantage of the structural properties of BDDs and of meta-products to handle a larger class of functions than the former one.", "num_citations": "234\n", "authors": ["1813"]}
{"title": "On solving covering problems\n", "abstract": " The set covering problem and the minimum cost assignment problem (respectively known as unate and binate covering problem) arise throughout the logic synthesis ow. This paper investigates the complexity and approximation ratio of two lower bound computation algorithms from both a theoretical and practical point of view. It also presents a new pruning technique that takes advantage of the partitioning.", "num_citations": "212\n", "authors": ["1813"]}
{"title": "Gate sizing for constrained delay/power/area optimization\n", "abstract": " Gate sizing has a significant impact on the delay, power dissipation, and area of the final circuit. It consists of choosing for each node of a mapped circuit a gate implementation in the library so that a cost function is optimized under some constraints. For instance, one wants to minimize the power consumption and/or the area of a circuit under some user-defined delay constraints, or to obtain the fastest circuit within a given power budget. Although this technology-dependent optimization has been investigated for years, the proposed approaches sometimes rely on assumptions, cost models, or algorithms that make them unrealistic or impossible to apply on real-life large circuits. We discussed here a gate sizing algorithm (GS), and show how it is used to achieve constrained optimization. It can be applied on large circuits within a reasonable CPU time, e.g., minimizing the power of a 10000 gates circuit under some\u00a0\u2026", "num_citations": "197\n", "authors": ["1813"]}
{"title": "Verifying temporal properties of sequential machines without building their state diagrams\n", "abstract": " This paper presents the algorithm we have developed for proving that a finite state machine holds some properties expressed in temporal logic. This algorithm does not require the building of the state-transition graph nor the transition relation of the machine, so it overcomes the limits of the methods that have been proposed in the past. The verification algorithm presented here is based on Boolean function manipulations, which are represented by typed decision graphs. Thanks to this canonical representation, all the operations used in the algorithm have a polynomial complexity, expect for one called the computation of the \u201ccritical term\u201d. The paper proposes techniques that reduce the computational cost of this operation.", "num_citations": "179\n", "authors": ["1813"]}
{"title": "Automating the Diagnosis and the Rectification of Design Errors with PRIAM\n", "abstract": " This paper presents the original extensions brought to Priam to automate both the diagnosis and the rectification of the design errors detected by this tool. Priam is an industrial automated formal verifier used to check the functional correctness of digital circuits of up to 20000 transistors. These extensions implement a new approach to diagnosis based on Boolean equation solving. In particular, no enumeration of the faulty patterns is necessary to find out the incorrect gates in the circuit. The diagnosis system can handle any circuit that can be verified by Priam.", "num_citations": "148\n", "authors": ["1813"]}
{"title": "Fault tree analysis: 10/sup 20/prime implicants and beyond\n", "abstract": " The performances of almost all available fault tree analysis tools are limited by the performance of the prime implicant computation procedure used. All these products manipulate the prime implicants of the fault trees explicitly, so that their complexities are directly related to the number of prime implicants to be generated. The authors present a novel analysis method of coherent as well as noncoherent fault trees that overcomes this limitation because its computational cost is not related to the number of variables, gates, or prime implicants of these trees. The interactive fault tree analyzer MetaPrime based on this new method has been shown by experience to be able to perform in seconds the complete analysis of noncoherent fault trees with more than 10/sup 20/ prime implicants.< >", "num_citations": "125\n", "authors": ["1813"]}
{"title": "New ideas for solving covering problems\n", "abstract": " Covering problems occur at several steps during logic synthesis including two-level minimization and DAG covering. This paper presents a better lower bound computation algorithm and two new pruning techniques that signi cantly improve the e ciency of covering problem solvers. We show that these techniques reduce by up to three orders of magnitude the time required to solve covering problems exactly.", "num_citations": "115\n", "authors": ["1813"]}
{"title": "Exact coloring of real-life graphs is easy\n", "abstract": " Graph coloring has several important applications inVLSI CAD. Since graph coloring is NP-complete, heuristics are used to approximate the optimum solution. But heuristic solutions are typically 10% off, and as much as100% off, the minimum coloring. This paper shows thatsince real-life graphs appear to be 1-perfect, one can indeed solve them exactly for a small overhead.", "num_citations": "98\n", "authors": ["1813"]}
{"title": "Doing Two-Level Logic Minimization 100 Times Faster.\n", "abstract": " Two-level logic minimization consists in nding a minimal cost sum-of-products, ie, disjunctive normal form, of a given Boolean function. This paper presents a new algorithm to solve this problem, and gives experimental evidences showing that it outperforms the leading minimizers of several orders of magnitude. We suspect that it may be possible to explain this improvement in performance theoretically, and hope that our empirical results will stimulate research along these line.", "num_citations": "94\n", "authors": ["1813"]}
{"title": "New algorithms for gate sizing: A comparative study\n", "abstract": " Gate sizing consists of choosing for each node of a mapped network a gate implementation in the library so that some cost function is optimized under some constraints. It has a signi cant impact on the delay, power dissipation, and area of the nal circuit. This paper compares ve gate sizing algorithms targeting discrete, non-linear, non-unimodal, constrained optimization. The goal is to overcome the non-linearity and nonunimodality of the delay and the power to achieve good quality results within a reasonable CPU time, eg, handling a 10000 node network in 2 hours. We compare the ve algorithms on constraint free delay optimization and delay constrained power optimization, and show that one method is superior to the others.", "num_citations": "91\n", "authors": ["1813"]}
{"title": "Metaprime: An interactive fault-tree analyzer\n", "abstract": " The performances of almost all available fault tree analysis tools are limited by the performance of their prime implicant computation procedure. All these procedures manipulate the prime implicants of the fault trees in extension, so that the analysis costs are directly related to the number of prime implicants to be generated, which in practice makes these tools difficult to apply on fault trees with more than 20 000 prime implicants. This paper introduces an analysis method of coherent as well as noncoherent fault trees that overcomes this limitation because its computational cost is related to neither the number of basic events, nor the number of gates, nor the number of prime implicants of these trees. The authors present the concepts underlying the prototype tool MetaPrime, and the experimental results obtained with this tool on real fault trees. These results show that these concepts provide complete analysis in\u00a0\u2026", "num_citations": "82\n", "authors": ["1813"]}
{"title": "A new viewpoint on two-level logic minimization\n", "abstract": " This paper presents a new 2-level logic minimization procedure. It consists of computing in an implicit way the cyclic core of the Boolean function f to be minimized. This computation is done through original transformations of sets covering problems that take full advantage of the metaproduct based implicit set of products manipulations. The computational cost of this new procedure is independent of the number of minterms of the function f and of its number of prime implicants, which allows us to treat functions for which these numbers are so large that it has never been possible to perform a 2-level minimization. This method is, as far as we know, the first one that is able to produce the cyclic cores of all the functions of the MCNC benchmark.", "num_citations": "79\n", "authors": ["1813"]}
{"title": "New ideas on symbolic manipulations of finite state machines\n", "abstract": " Formal verification of finite state machines (FSM) using symbolic manipulations is addressed. It is shown that the use of symbolic manipulations algorithms for the traversal of a FSM can be sublinear in the number of state and input patterns for some classes of machines. A symbolic manipulation algorithm can be directly used as a method for the transformation of a FSM which preserves the observable behavior. It is also shown that a backward traversal of a FSM can also be performed using symbolic techniques.< >", "num_citations": "75\n", "authors": ["1813"]}
{"title": "A new method to compute prime and essential prime implicants of boolean functions\n", "abstract": " Computing the prime implicants and the essential prime implicants of Boolean functions is a problem that has applications in several areas of computer science, for instance it is critical in circuit synthesis and optimization, but also in automated reasoning. In this paper we propose a new method to compute implicitly the sets of prime implicants and of essential prime implicants of incompletely specified Boolean functions. This method allows us to handle functions that have sets of prime implicants and of essential prime implicants several orders of magnitude larger than those of the functions that could be handled by existing methods. The key idea that makes these computations possible is to manipulate sets of prime and of essential prime implicants denoted by their meta-products, which are characteristic functions. These functions are represented with binary decision diagrams that are a very compact canonical graph representation of Boolean functions and that support very efficiently all the operations needed here.", "num_citations": "73\n", "authors": ["1813"]}
{"title": "Incremental cad\n", "abstract": " Comprehensive study of incremental algorithms and solutions in the context of CAD tool development is an open area of research with a great deal of potential. Incremental algorithms for synthesis and layout are needed when design undergoes local or incremental change. Often these local changes are made to react to local change in the design, correct local errors or to make local improvements in one or more of the design quality metrics. In this paper we outline fundamental problems in incremental logic synthesis and physical design. Preliminary solutions to a subset of these problems are outlined.", "num_citations": "70\n", "authors": ["1813"]}
{"title": "A Logically Complete Reasoning Maintenance System Based on a Logical Constraint Solver.\n", "abstract": " This paper presents a logically complete assumption based truth maintenance system (ATMS) that is part of a complex blast furnace computer aided piloting system 5]. This system is built on an e cient and logically complete propositional constraint solver that has been successfully used for industrial applications in computer aided design.", "num_citations": "59\n", "authors": ["1813"]}
{"title": "Solving graph optimization problems with ZBDDs\n", "abstract": " This paper presents a ZBDD (Zero-Suppressed Binary Decision Diagram) based framework that solves a collection of graph optimization problems. We show how these problems reduce to three primitive problems, and how the later can be solved exactly using ZBDDs. The application of this framework is illustrated on multilayer planar routing, where it can solve real-life instances that cannot be handled otherwise.", "num_citations": "57\n", "authors": ["1813"]}
{"title": "Gate sizing: A general purpose optimization approach\n", "abstract": " Gate sizing consists of choosing for each node of a mapped network a gate implementation in the library so that some cost function is optimized under some constraints. The methods previously proposed to address this problem suffer from problems that makes them difficult to apply on real-life large circuits. This paper presents the gate sizing algorithm GS, which has the following characteristics. It is a general purpose optimizer, e.g., it can optimize the power or/and area under some delay constraints, or the delay under some power or/and area constraints. It is oriented to a pure combinatorial optimization, and addresses non-linear, nonunimodal, constrained optimization, which enables it to handle complex cost models. It can take into account user defined or library dependent design rules. It can be applied on large circuits within a reasonable CPU time, e.g., 10000 nodes in 2 hours.", "num_citations": "46\n", "authors": ["1813"]}
{"title": "Symbolic computation of the valid states of a sequential machine: algorithms and discussion\n", "abstract": " Computing the valid states of a sequential machine is a problem that appears in several veri cation and synthesis processes. The computation of the image of a vectorial function is the main operation required to solve this problem. The aim of this paper is to show how the image computation can be symbolically performed, and to discuss the complexities and behaviors of several approaches. We propose a parametric algorithm that performs the image computation. Several instances of this algorithm can be obtained according to the results and the heuristics we give to analyze and to improve the computation. Two instances of this algorithm will be compared on practical examples.", "num_citations": "45\n", "authors": ["1813"]}
{"title": "Two-level logic minimization\n", "abstract": " This chapter presents both exact and heuristic two-level logic minimization algorithms. For exact logic minimization, it shows various techniques to reduce the complexity of covering problems, discusses branching heuristics, and presents several methods to prune the recursions. For heuristic minimization, it presents the core procedures of the ESPRESSO minimizes Finally, the chapter surveys various works related to two-level logic minimization.", "num_citations": "39\n", "authors": ["1813"]}
{"title": "Timing and design closure in physical design flows\n", "abstract": " A physical design flow consists of producing a production-worthy layout from a gate-level netlist subject to a set of constraints. This paper focuses on the problems imposed by shrinking process technologies. It exposes the problems of timing closure, signal integrity, design variable dependencies, clock and power/ground routing, and design signoff. It also surveys some physical design flows, and outlines a refinement-based flow.", "num_citations": "37\n", "authors": ["1813"]}
{"title": "Implicit prime cover computation: An overview\n", "abstract": " A set of products is a prime cover of a Boolean function f if it is made of prime implicants of f, and if the sum of its products covers f. Finding a prime cover, an irredundant prime cover, or a minimal prime cover of a function f is a problem that arises in several elds of computer science, for instance in logic synthesis, automated reasoning, realiability analysis, and some optimization problems. This paper shows how the three prime cover computation problems mentioned above can be e ciently solved using implicit manipulations of sets of products.", "num_citations": "35\n", "authors": ["1813"]}
{"title": "Symbolic prime generation for multiple-valued functions\n", "abstract": " The authors present new techniques based on the implicit representation and generation of primes for multiple-valued functions with sets of primes several orders of magnitude larger than existing methods. The key idea that makes this computation possible is the symbolic representation of multiple-valued cubes in a characteristic function form called the characteristic-cube function. This symbolic representation can be efficiently denoted using a binary decision diagram (BDD), which is known to be a very compact representation for Boolean formulas. Since there is no direct correspondence between the number of elements in a characteristic function and the size of the BDD representation that denotes it, very large sets of primes may be captured symbolically using the characteristic-cube function representation. Functions with other 10/sup 10/ primes have been successfully generated by using the proposed method\u00a0\u2026", "num_citations": "30\n", "authors": ["1813"]}
{"title": "Formal boolean manipulations for the verification of sequential machines\n", "abstract": " The paper addresses the problem of verifying synchronous sequential machines. It first shows that there is a certain class of temporal properties that can be verified by proving two sequential machines equivalent. It then explains that the equivalence of two sequential machines can be checked without building any state diagram. It is sufficient to observe all the valid states of a machine, which can be done by traversing its state diagram. It finally presents the symbolic manipulation used to perform the traversal of a state diagram in a more efficient way than the usual traversal technique based on enumeration.<>", "num_citations": "26\n", "authors": ["1813"]}
{"title": "The implicit set paradigm: a new approach to finite state system verification\n", "abstract": " This paper presents a new state of the art in the field of finite state system verification. The paradigm of this approach is to represent and to manipulate these systems in an implicit, way. The computational costs of the verification procedures using this paradigm depend on the costs of the operations performed on this implicit representation instead of the number of states and transitions of the verified systems. This paradigm allows these new verification procedures to overcome the limitations of previously availble techniques.", "num_citations": "23\n", "authors": ["1813"]}
{"title": "A new graph based prime computation technique\n", "abstract": " Computing prime and essential primes of Boolean functions is a problem that has applications in many different areas of computer science including computer design [2, 9], automated reasoning [12], and reliability analysis [8]. Though much effort has been spent on this problem over the last decades, all the prime computation techniques that have been developed so far are of limited power because they all manipulate sets of primes explicitly. This chapter presents a new prime computation procedure that overcomes this limitation because its complexity is not related to the number of primes to be computed but to the sizes of the graphs used to represent the sets of primes implicitly.", "num_citations": "21\n", "authors": ["1813"]}
{"title": "Towards an interactive fault tree analyser\n", "abstract": " Currently available fault tree analysis techniques are not powerful enough to allow engineers to fully exploit these trees. Large fault trees require hours of CPU time on mainframe computers to be analysed, and this analysis provides designers only with approximate qualitative and quantitative informations. This paper presents data structures and algorithms that support the interactive exact analysis of very large coherent and noncoherent fault trees. The prototype tool METAPRIME that implements this method offers modeling engineers the possibility of analysing with an uncomparable finesse fault trees with billions of prime implicants.", "num_citations": "18\n", "authors": ["1813"]}
{"title": "An efficient algorithm to verify generalized false paths\n", "abstract": " Timing exception verification has become a center of interest as incorrect constraints can lead to chip failures. Proving that a false path is valid or not is a difficult problem because of the inherent computational cost, and because in practice false paths are not specified one full path at a time. Instead designers use generalized false paths, which represent a set of paths. For instance the SDC format (Synopsys Design Constraint) specifies false path exceptions using a \u201c-from -through -to\u201d syntax that applies on sets of pins, often using wildcards to denote these sets. This represents many (usually hundreds to thousands) actual full paths. This paper proposes a method to verify generalized false paths in a very efficient manner. It is shown to be about 10x faster than the current state-of-the-art, making false path verification an overnight task or less for multi-million gate designs.", "num_citations": "17\n", "authors": ["1813"]}
{"title": "Application of a new logically complete atms to digraph and network-connectivity analysis\n", "abstract": " The binary decision diagram (BDD) and the metaproduct technologies have made possible to perform interactively exact qualitative and quantitative analysis of fault trees that could not previously be exactly analysed. This paper shows that these technologies can also be used to build an interactive tool to perform exact analysis of digraphs and of network connectivity problems. The paper also shows that the basic functionalities needed to perform these analyses are exactly those of an assumption-based truth maintenance system (ATMS), and it describes a new logically complete ATMS built using BDDs and metaproducts. The usefulness and the efficiency of this approach is demonstrated through the analysis of the feedwater system of a nuclear plant.< >", "num_citations": "17\n", "authors": ["1813"]}
{"title": "Method for automatically producing an implicit representation of the prime implicants of a function\n", "abstract": " The invention provides a method for automatically producing, in a memory zone of a data-processing device, an implicit representation of the prime implicants of a Boolean function, using that device. A Boolean function is represented, in another memory zone of that device, in the form of a binary decision diagram (f) of that function. The implicit representation is obtained from the decision diagram, by taking recursive paths across that diagram to find intermediate elements, which are then combined after each recursion. Each intermediate element uses occurrence variables (O 1,..., O n) and sign variables (S 1,..., S n). Means are used to obtain standardized intermediate elements during their creation, thus reducing memory consumption, and means of combining the intermediate elements after their standardization.", "num_citations": "15\n", "authors": ["1813"]}
{"title": "A new paradigm for dichotomy-based constrained encoding\n", "abstract": " One essential step in sequential logic synthesis consists of finding a state encoding that meets some requirements, such as optimal implementation, or correctness in the case of asynchronous FSMs. Dichotomy-based constrained encoding is more general than other constrained encoding frameworks, but it is also more difficult to solve. This paper introduces a new formalization of this problem, which leads to original exact and heuristic algorithms. Experimental results show that the resulting exact solver outperforms the previous approaches.", "num_citations": "14\n", "authors": ["1813"]}
{"title": "Towards a symbolic logic minimization algorithm\n", "abstract": " This paper presents the application of the recently introduced implicit sets of products manipulations based on binary decision diagrams to the generation of irre-dundant prime covers of Boolean functions and of multiple output Boolean functions. The results obtained with this procedure are compared with the ones obtained with ESPRESSO and with the procedure presented in [ll].", "num_citations": "14\n", "authors": ["1813"]}
{"title": "What is the state of the art in commercial EDA tools for low power?\n", "abstract": " Integrated circuit design has principally focused on achieving performance goals (e.g., speed) with minimal cost (e.g., area) using as little design time as possible. To help designers achieve these goals computer-aided design tools have traditionally focused on tools which improve performance, reduce area, and improve productivity. In the beginning of this decade, a new design concern began to surface. Motivated by the desire to differentiate products by longer battery life, designers of integrated circuits for portable products began to be worried about the power consumption of their electronics. Moreover, as the decade progressed and smaller processing geometries appeared on the horizon, the problem of packing millions of transistors into a cost-effective plastic package emerged. Finally, product reliability added a third motivation to address the issue of power dissipation. As we approach the end of the decade\u00a0\u2026", "num_citations": "13\n", "authors": ["1813"]}
{"title": "Exact dichotomy-based constrained encoding\n", "abstract": " Constrained encoding has several applications in the synthesis of finite state machines (FSMs), e.g., it can be used to generate asynchronous FSM state assignment that guarantees a critical hazard-free implementation, or to generate synchronous FSM state assignment with minimum PLA implementation. This paper presents ZEDICHO, an original zero-suppressed binary decision diagram (ZBDD) based algorithm that solves exactly the dichotomy-based constrained encoding problem.", "num_citations": "12\n", "authors": ["1813"]}
{"title": "A new implicit graph-based prime and essential prime computation technique\n", "abstract": " Implicit set manipulation techniques based on binary decision diagrams (BDD) have made possible the verification of finite state machines with state graphs too large to be built. More recently, it has been shown that these techniques could be used with success to compute the sets of prime and essential prime implicants of Boolean functions for which these sets are much too large to be explicitly built. The key property of this approach is that the cost of these procedures are not related anymore with the number of implicants to be computed but with the sizes of the manipulated BDDs. This paper presents a new implicit prime computation procedure that allows us to handle a larger class of problems than the previously published ones do.", "num_citations": "11\n", "authors": ["1813"]}
{"title": "Integrated resynthesis for low power\n", "abstract": " Research on synthesis for low power has been done in all three stages of logic synthesis: technology independent optimization, technology mapping, and technology dependent optimization. This paper presents an integrated method, using remapping and technology dependent optimizations, to minimize the power of a mapped circuit under the given delay constraints. It produces 24% savings in power.", "num_citations": "9\n", "authors": ["1813"]}
{"title": "Simultaneous tracking and activity recognition\n", "abstract": " Many tracking problems involve several distinct objects interacting with each other. We develop a framework that takes into account interactions between objects allowing the recognition of complex activities. In contrast to classic approaches that consider distinct phases of tracking and activity recognition, our framework performs these two tasks simultaneously. In particular, we adopt a Bayesian standpoint where the system maintains a joint distribution of the positions, the interactions and the possible activities. This turns out to be advantegeous, as information about the ongoing activities can be used to improve the prediction step of the tracking, while, at the same time, tracking information can be used for online activity recognition. Experimental results in two different settings show that our approach 1) decreases the error rate and improves the identity maintenance of the positional tracking and 2) identifies the\u00a0\u2026", "num_citations": "8\n", "authors": ["1813"]}
{"title": "Method and apparatus for generating sign-off prototypes for the design and fabrication of integrated circuits\n", "abstract": " Methods and apparatus for a physical \u201csign-off\u201d prototype tool that includes a prototype tool that generates a physical prototype for a design and a optimization tool that provides a designer with the option to further optimize the physical prototype before signing off on the design. In either situation, the \u201csign-off\u201d prototype provides a forward prediction of the area, timing and performance of the final GDS of the design generated by a physical implementation tool.", "num_citations": "7\n", "authors": ["1813"]}
{"title": "The formal verification chain at BULL\n", "abstract": " Presents the chain of tools developed at BULL for the verification of circuit designs. For several years, BULL has been a leading site in the field of formal verification of hardware. Until now, the main concern of BULL was in the validation of the VLSI circuits of its mainframe CPUs. The effort is currently extended to board components such as PLDs and ASICs.< >", "num_citations": "7\n", "authors": ["1813"]}
{"title": "Une approche intentionnelle du calcul des implicants premiers et essentiels des fonctions bool\u00e9ennes\n", "abstract": " AU prime implicant computation procedures developed in the past have computational costs directly related to the number of prime implicants of the Boolean function under treatment. This makes these techniques difficult to apply to functions that have more than about 20 000 prime implicants. We propose h\u00e8re a new algorithm that has a completely diff\u00e9rent behavior. This algorithm computes an implicit repr\u00e9sentation of the set of prime implicants. This implicit repr\u00e9sentation of sets ofproducts, called the metaproduct repr\u00e9sentation, allows us to solve a wide variety of problems involving sets of product with complexities that are polynomial with respect to the size of the metaproducts. Since there is no relation between the size of a metaproduct and the number of products of the set it represents, the prime implicant computation procedure presented in this paper has a computational cost that is no longer related to the\u00a0\u2026", "num_citations": "6\n", "authors": ["1813"]}
{"title": "Method for automatically determining probabilities associated with a Boolean function\n", "abstract": " The invention relates to a method that makes it possible to automatically and exactly calculate the probabilities associated with a Boolean function. The probability of an event represented by a Boolean function (f) is determined by constituting a binary decision diagram of the function and by making recursive traversals through the diagram.", "num_citations": "5\n", "authors": ["1813"]}
{"title": "Exact multi-layer topological planar routing\n", "abstract": " This paper describes an exact algorithm for multi-layer topological planar routing in switchboxes and channels. Using recent developments in set covering resolution, this method produces in a few minutes the optimum solutions for routing problems that were previously solved by heuristics.", "num_citations": "4\n", "authors": ["1813"]}
{"title": "Automatic hierarchical design: Fantasy or reality?\n", "abstract": " The debate regarding the design of integrated systems, flat versus hierarchically, is almost as old as VLSI design itself. Through the years experts have predicted that future generations of design automation tools would have to adopt a strictly hierarchical scheme for mastering algorithmic and logistic complexity. However, the steady improvement of tools and algorithms and the desire to push integrated circuit performance to the ultimate extremes has pushed the flat design style into the multi-million gate domain. Will this development continue, or will hierarchy finally win? The panel will discuss the different views on this topic and explore possible options for future design and tool flows. In particular, the panel will address questions related to verification, system design, logic synthesis, and physical design.", "num_citations": "1\n", "authors": ["1813"]}
{"title": "New qualitative analysis strategies in Metaprime\n", "abstract": " The fault tree analysis tool Metaprime allows reliability engineers to make, in an interactive way, exact qualitative and quantitative analysis of very complex fault trees that could not be completely treated by previously available analysis technologies. The qualitative aspect of the analysis of a fault tree consists in computing all or part of the set of prime implicants (i.e., minimal cut sets) of this tree. Particularly interesting parts of this set are prime covers which are subsets of prime implicants that are sufficient to represent all the failure combinations of the system under analysis. When the tree is noncoherent, or/and when it is a multiple-fault tree, it is often possible, but very costly, to build covers with fewer prime implicants, which allows concise representation of the set of failure combinations. This paper proposes original algorithms, now integrated in Metaprime, to generate efficiently prime covers, irredundant prime\u00a0\u2026", "num_citations": "1\n", "authors": ["1813"]}
{"title": "A Generalized Constraint-Driven State Encoding Strategy\n", "abstract": " One essential task of finite state machine (FSM) synthesis is to find a minimum length encoding of the FSM's states. This encoding has to meet several optimality or correctness criteria, which can be expressed with dichotomies and facets. This paper introduces a hierarchical strategy that produces an encoding from a given set of facets. In contrast with the approaches proposed in the past, the hierarchical strategy decomposes the encoding task into a structured set of smaller subtasks. Experimental results shows that this new approach can produce a smaller encoding length, yielding simpler and more efficient circuits.", "num_citations": "1\n", "authors": ["1813"]}