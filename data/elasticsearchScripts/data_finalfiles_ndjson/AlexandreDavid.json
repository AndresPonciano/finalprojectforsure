{"title": "A Tutorial on Uppaal\n", "abstract": " This is a tutorial paper on the tool Uppaal. Its goal is to be a short introduction on the flavor of timed automata implemented in the tool, to present its interface, and to explain how to use the tool. The contribution of the paper is to provide reference examples and modeling patterns.", "num_citations": "2191\n", "authors": ["1625"]}
{"title": "Uppaal SMC tutorial\n", "abstract": " This tutorial paper surveys the main features of Uppaal\u00a0SMC, a model checking approach in Uppaal family that allows us to reason on networks of complex real-timed systems with a stochastic semantic. We demonstrate the modeling features of the tool, new verification algorithms and ways of applying them to potentially complex case studies.", "num_citations": "430\n", "authors": ["1625"]}
{"title": "Time for statistical model checking of real-time systems\n", "abstract": " We propose the first tool for solving complex (some undecidable) problems of timed systems by using Statistical Model Checking (SMC). The tool monitors several runs of the system, and then relies on statistical algorithms to get an estimate of the correctness of the entire design. Contrary to other existing toolsets, ours relies on i) a natural stochastic semantics for networks of timed systems, ii) an engine capable to solve problems that are beyond the scope of classical model checkers, and iii) a friendly user interface.", "num_citations": "175\n", "authors": ["1625"]}
{"title": "Statistical model checking for networks of priced timed automata\n", "abstract": " This paper offers a natural stochastic semantics of Networks of Priced Timed Automata (NPTA) based on races between components. The semantics provides the basis for satisfaction of Probabilistic Weighted CTL properties (PWCTL), conservatively extending the classical satisfaction of timed automata with respect to TCTL. In particular the extension allows for hard real-time properties of timed automata expressible in TCTL to be refined by performance properties, e.g. in terms of probabilistic guarantees of time- and cost-bounded properties. A second contribution of the paper is the application of Statistical Model Checking (SMC) to efficiently estimate the correctness of non-nested PWCTL model checking problems with a desired level of confidence, based on a number of independent runs of the NPTA. In addition to applying classical SMC algorithms, we also offer an extension that allows to efficiently\u00a0\u2026", "num_citations": "174\n", "authors": ["1625"]}
{"title": "UPPAAL-SMC: Statistical model checking for priced timed automata\n", "abstract": " This paper offers a survey of uppaalsmc, a major extension of the real-time verification tool uppaal. uppaalsmc allows for the efficient analysis of performance properties of networks of priced timed automata under a natural stochastic semantics. In particular, uppaalsmc relies on a series of extensions of the statistical model checking approach generalized to handle real-time systems and estimate undecidable problems. uppaalsmc comes together with a friendly user interface that allows a user to specify complex problems in an efficient manner as well as to get feedback in the form of probability distributions and compare probabilities to analyze performance aspects of systems. The focus of the survey is on the evolution of the tool - including modeling and specification formalisms as well as techniques applied - together with applications of the tool to case studies.", "num_citations": "166\n", "authors": ["1625"]}
{"title": "A tutorial on Uppaal 4.0\n", "abstract": " This is a tutorial paper on the tool Uppaal. Its goal is to be a short introduction on the flavour of timed automata implemented in the tool, to present its interface, and to explain how to use the tool. The contribution of the paper is to provide reference examples and modelling patterns.", "num_citations": "152\n", "authors": ["1625"]}
{"title": "Uppaal stratego\n", "abstract": " Uppaal Stratego is a novel tool which facilitates generation, optimization, comparison as well as consequence and performance exploration of strategies for stochastic priced timed games in a user-friendly manner. The tool allows for efficient and flexible \u201cstrategy-space\u201d exploration before adaptation in a final implementation by maintaining strategies as first class objects in the model-checking query language. The paper describes the strategies and their properties, construction and transformation algorithms and a typical tool usage scenario.", "num_citations": "128\n", "authors": ["1625"]}
{"title": "Model-based framework for schedulability analysis using UPPAAL 4.1\n", "abstract": " Embedded systems involve the monitoring and control of complex physical processes using applications running on dedicated execution platforms in a", "num_citations": "120\n", "authors": ["1625"]}
{"title": "Statistical model checking for stochastic hybrid systems\n", "abstract": " This paper presents novel extensions and applications of the UPPAAL-SMC model checker. The extensions allow for statistical model checking of stochastic hybrid systems. We show how our race-based stochastic semantics extends to networks of hybrid systems, and indicate the integration technique applied for implementing this semantics in the UPPAAL-SMC simulation engine. We report on two applications of the resulting tool-set coming from systems biology and energy aware buildings.", "num_citations": "88\n", "authors": ["1625"]}
{"title": "TAPAAL 2.0: Integrated development environment for timed-arc Petri nets\n", "abstract": " TAPAAL 2.0 is a platform-independent modelling, simulation and verification tool for extended timed-arc Petri nets. The tool supports component-based modelling and offers an automated verification of the EF, AG, EG and AF fragments of TCTL via translations to Uppaal timed automata and via its own dedicated verification engine. After more than three years of active development with a main focus on usability aspects and on the efficiency of the verification algorithms, we present the new version of TAPAAL 2.0 that has by now reached its maturity and offers the first publicly available tool supporting the analysis and verification of timed-arc Petri nets.", "num_citations": "72\n", "authors": ["1625"]}
{"title": "From HUPPAAL to UPPAAL--A Translation from Hierarchical Timed Automata to Flat Timed Automata\n", "abstract": " We present a hierarchical version of timed automata, equipped with data types, hand-shake synchronization, and local variables. We describe the formal semantics of this hierarchical timed automata (HTA) formalism in terms of a transition system. We report on the implementation of a flattening algorithm, that translates our formalism to a network of Uppaal timed automata. We establish a correspondence between symbolic states of an HTA and its translations, and thus are able to make use of Uppaal's simulator and model checking engine. This technique is exemplified with a cardiac pacemaker model. Here, the overhead introduced by the translation is tolerable. We give run-time data for deadlock checking, timed reachability, and timed response analysis.", "num_citations": "66\n", "authors": ["1625"]}
{"title": "Guided controller synthesis for climate controller using uppaal tiga\n", "abstract": " We present a complete tool chain for automatic controller synthesis using Uppaal Tiga and Simulink. The tool chain is explored using an industrial case study for climate control in a pig stable. The problem is modeled as a game, and we use Uppaal Tiga to automatically synthesize safe strategies that are transformed for input to Simulink, which is used to run simulations on the controller and generate code that can be executed in an actual pig stable provided by industrial partner Skov A/S. The model allows for guiding the synthesis process and generate different strategies that are compared through simulations.", "num_citations": "64\n", "authors": ["1625"]}
{"title": "Hierarchical scheduling framework based on compositional analysis using uppaal\n", "abstract": " This paper introduces a reconfigurable compositional scheduling framework, in which the hierarchical structure, the scheduling policies, the concrete task behavior and the shared resources can all be reconfigured. The behavior of each periodic preemptive task is given as a list of timed actions, which are some of the inputs for the parameterized timed automata that make up the framework. Components may have different scheduling policies, and each component is analyzed independently using Uppaal. We have applied our framework for the schedulability analysis of an avionics system.", "num_citations": "56\n", "authors": ["1625"]}
{"title": "On time with minimal expected cost!\n", "abstract": " (Priced) timed games are two-player quantitative games involving an environment assumed to be completely antogonistic. Classical analysis consists in the synthesis of strategies ensuring safety, time-bounded or cost-bounded reachability objectives. Assuming a randomized environment, the (priced) timed game essentially defines an infinite-state Markov (reward) decision proces. In this setting the objective is classically to find a strategy that will minimize the expected reachability cost, but with no guarantees on worst-case behaviour. In this paper, we provide efficient methods for computing reachability strategies that will both ensure worst case time-bounds as well as provide (near-) minimal expected cost. Our method extends the synthesis algorithms of the synthesis tool Uppaal-Tiga with suitable adapted reinforcement learning techniques, that exhibits several orders of magnitude improvements w.r.t\u00a0\u2026", "num_citations": "54\n", "authors": ["1625"]}
{"title": "Timed control with observation based and stuttering invariant strategies\n", "abstract": " In this paper we consider the problem of controller synthesis for timed games under imperfect information. Novel to our approach is the requirements to strategies: they should be based on a finite collection of observations and must be stuttering invariant in the sense that repeated identical observations will not change the strategy. We provide a constructive transformation to equivalent finite games with perfect information, giving decidability as well as allowing for an efficient on-the-fly forward algorithm. We report on application of an initial experimental implementation.", "num_citations": "53\n", "authors": ["1625"]}
{"title": "Schedulability of herschel-planck revisited using statistical model checking\n", "abstract": " Schedulability analysis is a main concern for several embedded applications due to their safety-critical nature. The classical method of response time analysis provides an efficient technique used in industrial practice. However, the method is based on conservative assumptions related to execution and blocking times of tasks. Consequently, the method may falsely declare deadline violations that will never occur during execution. This paper is a continuation of previous work of the authors in applying extended timed automata model checking (using the tool UPPAAL) to obtain more exact schedulability analysis, here in the presence of non-deterministic computation times of tasks given by intervals [BCET,WCET]. Considering computation intervals makes the schedulability of the resulting task model undecidable. Our contribution is to propose a combination of model checking techniques to obtain some\u00a0\u2026", "num_citations": "51\n", "authors": ["1625"]}
{"title": "Rewrite-based statistical model checking of wmtl\n", "abstract": " We present a new technique for verifying Weighted Metric Temporal Logic (WMTL) properties of Weighted Timed Automata. Our approach relies on Statistical Model Checking combined with a new monitoring algorithm based on rewriting rules. Contrary to existing monitoring approaches for WMTL ours is exact. The technique has been implemented in the statistical model checking engine of Uppaal and experiments indicate that the technique performs faster than existing approaches and leads to more accurate results.", "num_citations": "49\n", "authors": ["1625"]}
{"title": "An evaluation framework for energy aware buildings using statistical model checking\n", "abstract": " Cyber-physical systems are to be found in numerous applications throughout society. The principal barrier to develop trustworthy cyber-physical systems is the lack of expressive modelling and specification formalisms supported by efficient tools and methodologies. To overcome this barrier, we extend in this paper the modelling formalism of the tool UPPAAL-SMC to stochastic hybrid automata, thus providing the expressive power required for modelling complex cyber-physical systems. The application of Statistical Model Checking provides a highly scalable technique for analyzing performance properties of this formalisms.               A particular kind of cyber-physical systems are Smart Grids which together with Intelligent, Energy Aware Buildings will play a major role in achieving an energy efficient society of the future. In this paper we present a framework in UPPAAL-SMC for energy aware buildings\u00a0\u2026", "num_citations": "48\n", "authors": ["1625"]}
{"title": "Monitor-based statistical model checking for weighted metric temporal logic\n", "abstract": " We present a novel approach and implementation for analysing weighted timed automata (WTA) with respect to the weighted metric temporal logic (WMTL\u2009\u2264\u2009). Based on a stochastic semantics of WTAs, we apply statistical model checking (SMC) to estimate and test probabilities of satisfaction with desired levels of confidence. Our approach consists in generation of deterministic monitors for formulas in WMTL\u2009\u2264\u2009, allowing for efficient SMC by run-time evaluation of a given formula. By necessity, the deterministic observers are in general approximate (over- or under-approximations), but are most often exact and experimentally tight. The technique is implemented in the new tool Casaal. that we seamlessly connect to Uppaal-smc. in a tool chain. We demonstrate the applicability of our technique and the efficiency of our implementation through a number of case-studies.", "num_citations": "46\n", "authors": ["1625"]}
{"title": "Analyzing industrial architectural models by simulation and model-checking\n", "abstract": " The software architecture of any automotive system has to be decided well in advance of production, so it is very desirable to assess its quality in order to obtain quick indications of errors at early design phases. In this paper, we present a constellation of analysis techniques for architectural models described in EAST-ADL. The methods are complementary in terms of covering EAST-ADL model analysis against a rich set of requirements, and in terms of the varying degree of confidence in the provided guarantees. Based on the needs of the current model-driven development in a chosen automotive context, we propose three analysis techniques of EAST-ADL architectural models, in an attempt to tackle some of the exposed design needs: simulation of EAST-ADL functions in Simulink, model-checking EAST-ADL models with timed automata semantics, and statistical model-checking in UPPAAL, applied on an\u00a0\u2026", "num_citations": "43\n", "authors": ["1625"]}
{"title": "Statistical model checking for biological systems\n", "abstract": " Statistical Model Checking (SMC) is a highly scalable simulation-based verification approach for testing and estimating the probability that a stochastic system satisfies a given linear temporal property. The technique has been applied to (discrete and continuous time) Markov chains, stochastic timed automata and most recently hybrid systems using the tool Uppaal SMC. In this paper we enable the application of SMC to complex biological systems, by combining Uppaal SMC with ANIMO, a plugin of the tool Cytoscape used by biologists, as well as with SimBiology\u00ae, a plugin of Matlab to simulate reactions. ANIMO and SimBiology\u00ae\u00a0are two domain specific tools that have their own user interfaces and formalisms specifically tailored towards the biology domain. However\u2014though providing means for simulation\u2014both tools lack the powerful analytic capabilities offered by SMC, which in previous work have\u00a0\u2026", "num_citations": "37\n", "authors": ["1625"]}
{"title": "Checking and distributing statistical model checking\n", "abstract": " In this paper we propose a general framework for distributed statistical model checking of networks of priced timed automata. The first contribution is a new algorithm to distribute sequential hypothesis testing without introducing bias in the results. The second contribution is an implementation of this algorithm in Uppaal. The major contribution is an experimental and analytical evaluation of the approach through case studies, including an analysis of the SMC algorithm itself.", "num_citations": "37\n", "authors": ["1625"]}
{"title": "Timed testing under partial observability\n", "abstract": " This paper studies the problem of model-based testing of real-time systems that are only partially observable. We model the system under test (SUT) using timed game automata (TGA) which has internal actions, uncontrollable outputs and timing uncertainty of outputs. We define the partial observability of SUT using a set of predicates over the TGA state space, and specify the test purposes in computation tree logic (CTL) formulas. A developed partially observable timed game solver is used to generate winning strategies, which are used as test cases. We propose a conformance testing framework, define a partial observation-based conformance relation, present the test execution algorithms, and prove the soundness and completeness of this test method (i.e., a detected error really violates the conformance relation; and if the SUT violates the test purpose, then a test case can be generated to detect this violation\u00a0\u2026", "num_citations": "35\n", "authors": ["1625"]}
{"title": "Optimizing control strategy using statistical model checking\n", "abstract": " This paper proposes a new efficient approach to optimize energy consumption for energy aware buildings. Our approach relies on stochastic hybrid automata for representing energy aware systems. The model is parameterized by several cost values that need to be optimized in order to minimize energy consumption. Our approach exploits a stochastic semantic together with simulation in order to estimate the best value for such parameters. Contrary to existing techniques that would estimate energy consumption for each value of the parameters, our approach relies on a new statistical engine that exploits ANOVA, a technique that can reduce the number of runs needed by the comparison algorithm to perform the estimates. Our approach has been implemented and our experiments show that we clearly outperform the naive approach.", "num_citations": "31\n", "authors": ["1625"]}
{"title": "Runtime verification of biological systems\n", "abstract": " Complex computational systems are ubiquitous and their study increasingly important. Given the ease with which it is possible to construct large systems with heterogeneous technology, there is strong motivation to provide automated means to verify their safety, efficiency and reliability. In another context, biological systems are supreme examples of complex systems for which there are no design specifications. In both cases it is usually difficult to reason at the level of the description of the systems and much more convenient to investigate properties of their executions.               To demonstrate runtime verification of complex systems we apply statistical model checking techniques to a model of robust biological oscillations taken from the literature. The model demonstrates some of the mechanisms used by biological systems to maintain reliable performance in the face of inherent stochasticity and is therefore\u00a0\u2026", "num_citations": "31\n", "authors": ["1625"]}
{"title": "Scenario-based verification of real-time systems using Uppaal\n", "abstract": " This article proposes two approaches to tool-supported automatic verification of dense real-time systems against scenario-based requirements, where a system is modeled as a network of timed automata (TAs) or as a set of driving live sequence charts (LSCs), and a requirement is specified as a separate monitored LSC chart.               We make timed extensions to a kernel subset of the LSC language and define a trace-based semantics. By translating a monitored LSC chart to a behavior-equivalent observer TA and then non-intrusively composing this observer with the original TA-modeled real-time system, the problems of scenario-based verification reduce to computation tree logic (CTL) real-time model checking problems. When the real-time system is modeled as a set of driving LSC charts, we translate these driving charts and the monitored chart into a behavior-equivalent network of TAs by using a \u201cone\u00a0\u2026", "num_citations": "28\n", "authors": ["1625"]}
{"title": "Efficient on-the-fly algorithm for checking alternating timed simulation\n", "abstract": " In this paper we focus on property-preserving preorders between timed game automata and their application to control of partially observable systems. We define timed weak alternating simulation as a preorder between timed game automata, which preserves controllability. We define the rules of building a symbolic turn-based two-player game such that the existence of a winning strategy is equivalent to the simulation being satisfied. We also propose an on-the-fly algorithm for solving this game. This simulation checking method can be applied to the case of non-alternating or strong simulations as well. We illustrate our algorithm by a case study and report on results.", "num_citations": "27\n", "authors": ["1625"]}
{"title": "Playing games with timed games\n", "abstract": " In this paper we focus on property-preserving preorders between timed game automata and their application to control of partially observable systems. Following the example of timed simulation between timed automata, we define timed alternating simulation as a preorder between timed game automata, which preserves controllability. We define a method to reduce the timed alternating simulation problem to a safety game. We show how timed alternating simulation can be used to control efficiently a partially observable system. This method is illustrated by a generic case study.", "num_citations": "22\n", "authors": ["1625"]}
{"title": "A game-theoretic approach to real-time system testing\n", "abstract": " This paper presents a game-theoretic approach to the testing of uncontrollable real-time systems. By modelling the systems with Timed I/O Game Automata and specifying the test purposes as Timed CTL formulas, we employ a recently developed timed game solver UPPAAL-TIGA to synthesize winning strategies, and then use these strategies to conduct black-box conformance testing of the systems. The testing process is proved to be sound and complete with respect to the given test purposes. Case study and preliminary experimental results indicate that this is a viable approach to uncontrollable timed system testing.", "num_citations": "22\n", "authors": ["1625"]}
{"title": "Cooperative testing of timed systems\n", "abstract": " This paper deals with targeted testing of timed systems whose models may have uncontrollable behavior. The testing activity is viewed as a game between the tester and the system under test (SUT) towards a given test purpose. The SUT is modeled as Timed Game Automaton and the test purpose is specified in Timed CTL formula. We employ a timed game solver UPPAAL-TIGA to check if the test purpose is ture w.r.t. the model, and if yes, to generate a winning strategy and use it for black-box conformance testing of the SUT implementation. Specifically, we show that in case the checking yields a negative result, we can still test the SUT implementation against the test purpose as long as the SUT implementation reacts to our moves in a cooperative style. We present an operational framework of cooperative winning strategy generation, test case derivation and execution. The test method is proved to be sound and\u00a0\u2026", "num_citations": "20\n", "authors": ["1625"]}
{"title": "Hierarchical modeling and analysis of timed systems\n", "abstract": " Uppaal is a tool for model-checking real-time systems developed jointly by Uppsala University and Aalborg University. It has been applied successfully in case studies ranging from communication protocols to multimedia applications. The tool is designed to verify systems that can be modeled as networks of timed automata. But it lacks support for systems with hierarchical structures, which makes the construction of large models difficult. In this thesis we improve the efficiency of Uppaal with new data structures and extend its modeling language and its engine to support hierarchical constructs.To investigate the limits of Uppaal, we model and analyze an industrial fieldbus communication protocol. To our knowledge, this case study is the largest application Uppaal has been confronted to and we managed to verify the models. However, the hierarchical structure of the protocol is encoded as a network of automata without hierarchy, which artificially complicates the model. It turns out that we need to improve performance and enrich the modeling language. To attack the performance bottlenecks, we unify the two central structures of the Uppaal engine, the passed and waiting lists, and improve memory management to take advantage of data sharing between states. We present experimental results that demonstrate improvements by a factor 2 in time consumption and a factor 5 in memory consumption.", "num_citations": "20\n", "authors": ["1625"]}
{"title": "Statistical and exact schedulability analysis of hierarchical scheduling systems\n", "abstract": " This paper contains two contributions: 1) A development methodology involving two techniques to enhance the resource utilization and 2) a new generic multi-core resource model for hierarchical scheduling systems.As the first contribution, we propose a two-stage development methodology relying on the adjustment of timing attributes in the detailed models during the design stage. We use a lightweight method (statistical model checking) for design exploration, easily assuring high confidence in the correctness of the models. Once a satisfactory design has been found, it can be proved schedulable using the computation costly method (symbolic model checking). In order to analyze a hierarchical scheduling system compositionally, we introduce the notion of a stochastic supplier modeling the supply of resources from each component to its child components in the hierarchy. We specifically investigate two different\u00a0\u2026", "num_citations": "19\n", "authors": ["1625"]}
{"title": "Modelling social-technical attacks with timed automata\n", "abstract": " Attacks on a system often exploit vulnerabilities that arise from human behaviour or other human activity. Attacks of this type, so-called socio-technical attacks, cover everything from social engineering to insider attacks, and they can have a devastating impact on an unprepared organisation. In this paper we develop an approach towards modelling socio-technical systems in general and socio-technical attacks in particular, using timed automata and illustrate its application by a complex case study. Thanks to automated model checking and automata theory, we can automatically generate possible attacks in our model and perform analysis and simulation of both model and attack, revealing details about the specific interaction between attacker and victim. Using timed automata also allows for intuitive modelling of systems, in which quantities like time and cost can be easily added and analysed.", "num_citations": "18\n", "authors": ["1625"]}
{"title": "Schedulability and energy efficiency for multi-core hierarchical scheduling systems\n", "abstract": " We propose a framework for modeling and analyzing the schedulability and energy efficiency of embedded hierarchical scheduling systems running on a multi-core platform. The framework is realized using Hybrid Timed Automata describing the concrete task behavior. The schedulability can be verified in a compositional way using UPPAAL, and the energy profile can be generated using the statistical model checking algorithms of UPPAAL SMC. To our knowledge, our paper is the first one considering hierarchical scheduling, multi-core platforms and energy consumption simultaneously. The framework is being applied to a case-study from the CRAFTERS project.", "num_citations": "17\n", "authors": ["1625"]}
{"title": "Testing real-time systems under uncertainty\n", "abstract": " Model-based testing is a promising technique for improving the quality of testing by automatically generating an efficient set of provably valid test cases from a system model. Testing embedded real-time systems is challenging because it must deal with timing, concurrency, processing and computation of complex mixed discrete and continuous signals, and limited observation and control. Whilst several techniques and tools have been proposed, few deals systematically with models capturing the indeterminacy resulting from concurrency, timing and limited observability and controllability. This paper proposes a number of model-based test generation principles and techniques that aim at efficient testing of timed systems under uncertainty.", "num_citations": "17\n", "authors": ["1625"]}
{"title": "Widening the schedulability of hierarchical scheduling systems\n", "abstract": " This paper presents a compositional approach for schedulability analysis of hierarchical systems, which enables to prove more systems schedulable by having richer and more detailed scheduling models. We use a lightweight method (statistical model checking) for design exploration, easily assuring high confidence in the correctness of the model. A satisfactory design can be proved schedulable using the computation costly method (symbolic model checking). In order to analyze a hierarchical scheduling system compositionally, we introduce the notion of a stochastic supplier modeling the supply of resources in each component. We specifically investigate two different techniques to widen the set of provably schedulable systems: (1) a new supplier model; (2) restricting the potential task offsets. We also provide a way to estimate the minimum resource supply (budget) that a component is required to provide.", "num_citations": "16\n", "authors": ["1625"]}
{"title": "Computing nash equilibrium in wireless ad hoc networks: A simulation-based approach\n", "abstract": " This paper studies the problem of computing Nash equilibrium in wireless networks modeled by Weighted Timed Automata. Such formalism comes together with a logic that can be used to describe complex features such as timed energy constraints. Our contribution is a method for solving this problem using Statistical Model Checking. The method has been implemented in UPPAAL model checker and has been applied to the analysis of Aloha CSMA/CD and IEEE 802.15.4 CSMA/CA protocols.", "num_citations": "16\n", "authors": ["1625"]}
{"title": "Remote testing of timed specifications\n", "abstract": " We present a study and a testing framework on black box remote testing of real-time systems using Uppaal-TIGA. One of the essential challenges of remote testing is the communication latency between the tester and the system under test (SUT) that may lead to interleaving of inputs and outputs. This affects the generation of inputs for the SUT and the observation of outputs that may trigger a wrong test verdict. We model the overall test setup using Timed Input-Output Automata (TIOA) and present an adapted asynchronous semantics with explicit communication delays. We propose the -testability criterion for the requirement model where  describes the communication latency. The test case generation problem is then reduced into a controller synthesis problem. We use Uppaal-TIGA for this purpose to solve a timed game with partial observability between the tester and the communication media together\u00a0\u2026", "num_citations": "15\n", "authors": ["1625"]}
{"title": "Degree of schedulability of mixed-criticality real-time systems with probabilistic sporadic tasks\n", "abstract": " We present the concept of degree of schedulability for mixed-criticality scheduling systems. This concept is given in terms of the two factors 1) Percentage of Missed Deadlines (PoMD), and 2) Degradation of the Quality of Service (DoQoS). The novel aspect is that we consider task arrival patterns that follow user-defined continuous probability distributions. We determine the degree of schedulability of a single scheduling component which can contain both periodic and sporadic tasks using statistical model checking in the form of UPPAAL SMC. We support uniform, exponential, Gaussian and any user-defined probability distribution.", "num_citations": "14\n", "authors": ["1625"]}
{"title": "A context-aware user interface for wireless personal-area network assistive environments\n", "abstract": " The daily life of people with severe motor system impairments is challenging and thus often subordinated to extensive external help; increasing their level of self-support is thus highly desirable. Recent advances in wireless communications, in particular in wireless personal-area networks, serve as technological enablers well suited for implementing smart and convenient assistive environments which can increase self-support. This paper presents the design and prototyping of a versatile interface for such wireless assistive environments. We propose a modular framework that can accommodate several wireless personal-area network standards. The interface is built upon this framework and is designed in such a way that it can be controlled by various types of input devices such as a touch screen or a tongue-control unit. The interface can automatically discover consumer appliances (e.g. Zigbee and\u00a0\u2026", "num_citations": "14\n", "authors": ["1625"]}
{"title": "Merging dbms efficiently\n", "abstract": " The DBM Library of UPPAAL and DBM Subtractions Page 1 Merging DBMs Efficiently Alexandre David Aalborg University Page 2 Plan \uf06e Framework \uf06e Timed Automata \uf06e DBMs & Federations \uf06e Why Merging DBMs? \uf06e Merging DBMs \uf06e The Problem \uf06e The Different Algorithms \uf06e Experiments Page 3 Warming Up: Timed Automata in a Nutshell push? push? push? push? Lamp User push! init low high x:=0 x>5 x<=5 Page 4 What is it all about? \uf06e Difference Bound Matrix: Data structure for representing clock constraints, ie, zones. \uf06e DBMs represent convex zones. Note: canonical form. \uf06e Some operations (subtractions) may result in non-convex zones, ie, DBMs must be split. \uf06e Federations: unions of zones (DBMs). Page 5 Example of a DBM x 2 -x 2 <=0 x 2 -x 1 <=1 x 2 -x 0 <=5 x 1 -x 2 <=3 x 1 -x 1 <=0 x 1 -x 0 <=6 x 0 -x 2 <=-1 x", "num_citations": "14\n", "authors": ["1625"]}
{"title": "Schedulability of Herschel revisited using statistical model checking\n", "abstract": " Schedulability analysis is a main concern for several embedded applications due to their safety-critical nature. The classical method of response time analysis provides an efficient technique used in industrial practice. However, the method is based on conservative assumptions related to execution and blocking times of tasks. Consequently, the method may falsely declare deadline violations that will never occur during execution. This paper is a continuation of previous work of the authors in applying extended timed automata model checking (using the tool UPPAAL) to obtain more exact schedulability analysis, here in the presence of non-deterministic computation times of tasks given by intervals [BCET,WCET]. Computation intervals with preemptive schedulers make the schedulability analysis of the resulting task model undecidable. Our contribution is to propose a combination of model checking\u00a0\u2026", "num_citations": "13\n", "authors": ["1625"]}
{"title": "Application of model-checking technology to controller synthesis\n", "abstract": " In this paper we present two frameworks that have been implemented to link traditional model-checking techniques to the domain of control. The techniques are based on solving a timed game and using the resulting solution (a strategy) as a controller. The obtained discrete controller must fit within its continuous environment, which is modelled and taken care of in our frameworks. Our first technique does it by using Matlab to discretise the problem and then Uppaal-tiga to solve the obtained timed game. This is implemented as a toolbox. The second technique relies on the user defining a timed game model in Uppaal-tiga. Then the strategy is automatically imported in Simulink as an S-function for simulation and validation purposes. We demonstrate the effectiveness of these frameworks in different case-studies.", "num_citations": "13\n", "authors": ["1625"]}
{"title": "A formal semantics for UML statecharts\n", "abstract": " The UML language is a large set of notations and rules to describe different aspects of a system. It provides a set of diagrams to view the system from different angles: use case diagrams, class diagrams, statecharts diagrams, and deployment diagrams are some of them. In this report we are interested in the statecharts diagrams that describe dynamic behaviours. We give a formal semantics for a large subset of these statecharts, in particular we focus on the action language semantics. Our subset and semantics are very close to the one supported by the tool Rhapsody.", "num_citations": "12\n", "authors": ["1625"]}
{"title": "Uppaal2k: small tutorial\n", "abstract": " This document is intended to be used by new comers to \u042d\u0434\u0434 \u0430 and verification. \u042btudents or engineers with little background in formal methods should be able to use \u042d\u0434\u0434 \u0430 for practical purposes after this tutorial.", "num_citations": "11\n", "authors": ["1625"]}
{"title": "Verification and performance evaluation of timed game strategies\n", "abstract": " Control synthesis techniques, based on timed games, derive strategies to ensure a given control objective, e.g., time-bounded reachability. Model checking verifies correctness properties of systems. Statistical model checking can be used to analyse performance aspects of systems, e.g., energy consumption. In this work, we propose to combine these three techniques. In particular, given a strategy synthesized for a timed game and a given control objective, we want to make a deeper examination of the consequences of adopting this strategy. Firstly, we want to apply model checking to the timed game under the synthesized strategy in order to verify additional correctness properties. Secondly, we want to apply statistical model checking to evaluate various performance aspects of the synthesized strategy. For this, the underlying timed game is extended with relevant price and stochastic information. We first\u00a0\u2026", "num_citations": "10\n", "authors": ["1625"]}
{"title": "Formal verification and simulation for platform screen doors and collision avoidance in subway control systems\n", "abstract": " For hybrid systems, hybrid automata-based tools are capable of verification, while Matlab Simulink/Stateflow is proficient in simulation. We propose a co-verification procedure, in which the verification tool SpaceEx/PHAVer and simulation tool Matlab are integrated to analyze and verify hybrid systems. For the application of this procedure, a platform screen door system (PSDS, a subsystem of the subway control system), is modeled with hybrid automata and Simulink/Stateflow charts, respectively. The models of PSDS are simulated by Matlab and verified by SpaceEx/PHAVer. The simulation and verification results indicate that the sandwiched situation can be avoided under time interval conditions. We improve the model with four trains and four stations on a subway line and analyze the urgent control scenario for the safety distance requirement. In this paper, the Simulink/Stateflow model is a refinement of\u00a0\u2026", "num_citations": "9\n", "authors": ["1625"]}
{"title": "Distributed parametric and statistical model checking\n", "abstract": " Statistical Model Checking (SMC) is a trade-off between testing and formal verification. The core idea of the approach is to conduct some simulations of the system and verify if they satisfy some given property. In this paper we show that SMC is easily parallelizable on a master/slaves architecture by introducing a series of algorithms that scale almost linearly with respect to the number of slave computers. Our approach has been implemented in the UPPAAL SMC toolset and applied on non-trivial case studies.", "num_citations": "9\n", "authors": ["1625"]}
{"title": "Stochastic semantics and statistical model checking for networks of priced timed automata\n", "abstract": " This paper offers a natural stochastic semantics of Networks of Priced Timed Automata (NPTA) based on races between components. The semantics provides the basis for satisfaction of probabilistic Weighted CTL properties (PWCTL), conservatively extending the classical satisfaction of timed automata with respect to TCTL. In particular the extension allows for hard real-time properties of timed automata expressible in TCTL to be refined by performance properties, e.g. in terms of probabilistic guarantees of time- and cost-bounded properties. A second contribution of the paper is the application of Statistical Model Checking (SMC) to efficiently estimate the correctness of non-nested PWCTL model checking problems with a desired level of confidence, based on a number of independent runs of the NPTA. In addition to applying classical SMC algorithms, we also offer an extension that allows to efficiently compare performance properties of NPTAs in a parametric setting. The third contribution is an efficient tool implementation of our result and applications to several case studies.", "num_citations": "9\n", "authors": ["1625"]}
{"title": "A reconfigurable framework for compositional schedulability and power analysis of hierarchical scheduling systems with frequency scaling\n", "abstract": " This paper presents a compositional framework for the modeling and analysis of hierarchical scheduling systems. We consider both schedulability and energy consumption of individual components, while analyzing a single core setting with a voltage frequency scaling CPU. According to the CPU frequency scaling, each task has a set of different execution times. Thus, the energy consumption of the whole system varies from one execution to another.We analyze each component individually by checking the feasibility of its workload against both the CPU availability and energy consumption constraints of such a component. Our periodic task model considers both static and dynamic priorities together with preemptive and non-preemptive behaviors. The models are realized using different forms of Hybrid Automata, all of which are analyzed using variants of Uppaal. The CPU frequencies, task behavior and scheduling\u00a0\u2026", "num_citations": "8\n", "authors": ["1625"]}
{"title": "A forward reachability algorithm for bounded timed-arc Petri nets\n", "abstract": " Timed-arc Petri nets (TAPN) are a well-known time extension of the Petri net model and several translations to networks of timed automata have been proposed for this model. We present a direct, DBM-based algorithm for forward reachability analysis of bounded TAPNs extended with transport arcs, inhibitor arcs and age invariants. We also give a complete proof of its correctness, including reduction techniques based on symmetries and extrapolation. Finally, we augment the algorithm with a novel state-space reduction technique introducing a monotonic ordering on markings and prove its soundness even in the presence of monotonicity-breaking features like age invariants and inhibitor arcs. We implement the algorithm within the model-checker TAPAAL and the experimental results document an encouraging performance compared to verification approaches that translate TAPN models to UPPAAL timed automata.", "num_citations": "7\n", "authors": ["1625"]}
{"title": "More features in UPPAAL\n", "abstract": " Following the introduction to the model checking tool UPPAAL of the previous chapter, this chapter presents a number of additional modeling and verification features offered by the tool. These features include in particular a C-like imperative language with user-defined types and functions, allowing for readable and compact models with reusable updates of discrete variables. Using an example of a Train Gate, we demonstrate the use (fulness) of these features. Also, the chapter presents the full query language of UPPAAL covering both safety, liveness and timebounded liveness properties, again illustrated using the Train Gate example. Finally, directions are given on modelling choices and use of verification options that may improve time-and/or space-performance of the UPPAAL verifier", "num_citations": "7\n", "authors": ["1625"]}
{"title": "Uppaal DBM library programmer\u2019s reference\n", "abstract": " Difference bound matrices (DBMs) are efficient data structures commonly used in verification timed automata [1]. Uppaal is a verification tool for timed automata and uses this library for operating on DBMs. However, DBMs can only represent convex sets so the library provides access to federations as well, an arbitrary union of DBMs. The library architecture (Fig. 1.1) is as follows: A core of C functions for basic operations on DBMs serves as a basis for a C++ implementation of two main classes dbm t and fed t that implement DBMs and federations. The C++ API is developper friendly in the sense that memory allocation is hidden in the library and these structures can be manipulated as simple scalar types cheaply since the library implements reference counting and copy-on-write. A Ruby binding is available to access federations with different modules: udbm is the core module for federations, udbm-gtk is the module for the graphical viewer (based on Gtk), udbm-sys is a higher level abstraction on system of constraints where DBMs are entered only by means of constraints between clocks.", "num_citations": "5\n", "authors": ["1625"]}
{"title": "Specification of properties using live sequence charts\n", "abstract": " Uppaal Uppaal is an integrated tool environment for modeling, simulation and verification of real-time systems specified as networks of timed automata. It holds its name from the two universities that have been developing it: Uppsala University, Sweden and Aalborg University, Denmark. Uppaal was first released in 1995, and has since become a reference in the field of real-time model-checkers.", "num_citations": "4\n", "authors": ["1625"]}
{"title": "Quantified dynamic metric temporal logic for dynamic networks of stochastic hybrid automata\n", "abstract": " Multiprocessing systems are capable of running multiple processes concurrently. By now such systems have established themselves as the defacto standard for operating systems. At the core of an operating system is the ability to execute programs and as such there must be a primitive for instantiating new processes - also programs are allowed to die/terminate. Operating systems may allow the executing programs to split (spawn) into more computational threads in order to let programs take advantage of concurrent execution as well. One of the most used modelling languages, Timed Automata, is based on multiple automata interacting thus they easily model the concurrent execution of programs. However, this language assumes a fixed size system in the sense that automata cannot be created at will but must be instantiated when the overall system is created. This is in contrast with the fact that developers are\u00a0\u2026", "num_citations": "3\n", "authors": ["1625"]}
{"title": "Checking simulation relation between timed game automata\n", "abstract": " In this paper we focus on property-preserving preorders between timed game automata and their application to control of partially observable systems. We define timed weak alternating simulation as a preorder between timed game automata, which preserves controllability. We define the rules of building a symbolic turn-based two-player game such that the existence of a winning strategy is equivalent to the simulation being satisfied. We also propose an on-the-fly algorithm for solving this game. This simulation checking method can be applied to the case of non-alternating or strong simulations as well. We illustrate our algorithm by a case study and report on results.", "num_citations": "3\n", "authors": ["1625"]}
{"title": "Model-based framework for schedulability analysis using uppaal 4.1. Model-Based Design for Embedded Systems\n", "abstract": " Embedded systems involve the monitoring and control of complex physical processes using applications running on dedicated execution platforms in a resource constrained manner in terms of for example memory, processing power, bandwidth, energy consumption, as well as timing behavior.", "num_citations": "3\n", "authors": ["1625"]}
{"title": "Guided Controller Synthesis for Climate Controller Using UPPAAL-TIGA\n", "abstract": " Guided Controller Synthesis for Climate Controller Using UPPAAL-TIGA \u2014 Aalborg University's Research Portal Skip to main navigation Skip to search Skip to main content Aalborg University's Research Portal Logo Dansk English Home Profiles Projects Publications Activities Research Units Facilities Press / Media Prizes Datasets Impacts Search by keywords, name or affiliation Guided Controller Synthesis for Climate Controller Using UPPAAL-TIGA Alexandre David, Jan Jacob Jessen, Jacob Illum Rasmussen, Kim Guldstrand Larsen Automation & Control CISS - Center for Embedded Software Systems Department of Computer Science Department of Electronic Systems Research output: Contribution to book/anthology/report/conference proceeding \u203a Article in proceeding \u203a Research \u203a peer-review 34 Citations (Scopus) Overview Original language English Title of host publication Formal Modeling and Analysis of \u2026", "num_citations": "2\n", "authors": ["1625"]}
{"title": "Statistical Model Checking in Uppaal: Lets Practice\u22c6\n", "abstract": " Statistical model-checking is a recent technique used for both verification and performance analysis of hybrid systems. It does not suffer from decidability issues or state-space explosion compared to traditional model-checking. Furthermore, it is applicable to more powerful formalisms such as stochastic hybrid automata. Its principle is simple so how simple is it really to make it work in practice? In this extended abstract, we raise a number of practical issue, some of them disconnected from the underlying theory, and show how they are addressed in Uppaal SMC.", "num_citations": "1\n", "authors": ["1625"]}
{"title": "Controllers with minimal observation power (application to timed systems)\n", "abstract": " We consider the problem of controller synthesis under imperfect information in a setting where there is a set of available observable predicates equipped with a cost function. The problem that we address is the computation of a subset of predicates sufficient for control and whose cost is minimal. Our solution avoids a full exploration of all possible subsets of predicates and reuses some information between different iterations. We apply our approach to timed systems. We have developed a tool prototype and analyze the performance of our optimization algorithm on two case studies.", "num_citations": "1\n", "authors": ["1625"]}
{"title": "Statistical Model Checking\n", "abstract": " Formal definition A Priced Timed Automaton (PTA) is a tuple A=(L, l0, X, \u03a3, E, R, I) where:(i) L is a finite set of locations,(ii) l0\u2208 L is the initial location,(iii) X is a finite set of clocks,(iv) \u03a3= \u03a3i \u03a3o is a finite set of actions partitioned into inputs (\u03a3i) and outputs (\u03a3o),(v) E\u2286 L\u00d7 L (X)\u00d7 \u03a3\u00d7 2X\u00d7 L is a finite set of edges,(vi) R: L\u2192 NX assigns a rate vector to each location, and (viii) I: L\u2192 U (X) assigns an invariant to each location.", "num_citations": "1\n", "authors": ["1625"]}
{"title": "An introduction to schedulability analysis using timed automata\n", "abstract": " Embedded systems involve the monitoring and control of complex physical processes using applications running on dedicated execution platforms in a resource constrained manner in terms of for example memory, processing power, bandwidth, energy consumption, as well as timing behavior. Viewing the application as a collection of (interdependent tasks) various scheduling principles may be applied to coordinate the execution of tasks in order to ensure orderly and efficient usage of resources. Based on the physical process to be controlled, timing deadlines may be required for the individual tasks as well as the overall system. The challenge of schedulability analysis is now concerned with guaranteeing that the applied scheduling principle (s) ensure that the timining deadlines are met.For schedulability analysis of single processor systems, a number of industrially applied tools exists benefiting from great succes in real-time scheduling theories; results intiated in the 1970ies and the 1980ies, and by now well-established. However these theories and tools have become seriously challenged by the rapid increase in the use of multi-cores and multiprocessor system-on-chips (MPSoC). In this chapter we will present a framework for schedulability analysis based on timed automata which overcome the limitation to single-processor architectures, while providing absolute guarantees: if after model checking no violations of deadlines have been found, then it is guaranteed that no violations will occur during execution. In this approach, the (multiprocessor) execution platform, the tasks, the interdependencies between tasks, their execution times, and\u00a0\u2026", "num_citations": "1\n", "authors": ["1625"]}
{"title": "Optimal infinite runs in one-clock priced timed automata\n", "abstract": " We address the problem of finding an infinite run with the optimal cost-time ratio in a one-clock priced timed automaton and provide an algorithmic solution. Through refinements of the quotient graph obtained by strong time-abstracting bisimulation partitioning, we construct a graph with time and costs as weights and prove that the minimum ratio properties remain unaltered, allowing algorithms for finite weighted graphs to be applied. The resulting algorithm has an overall time complexity of O ((| Q|\u00b7(| T|+| Q|)) 6),| Q| being the number of locations and| T| the number of transitions of the one-clock priced timed automaton.", "num_citations": "1\n", "authors": ["1625"]}
{"title": "Minimal dbm substraction\n", "abstract": " Minimal DBM substraction \u2014 Aalborg University's Research Portal Skip to main navigation Skip to search Skip to main content Aalborg University's Research Portal Logo Dansk English Home Profiles Projects Publications Activities Research Units Facilities Press / Media Prizes Datasets Impacts Search by keywords, name or affiliation Minimal DBM substraction Kim Guldstrand Larsen, Alexandre David, John H\u00e5kansson, Paul Pettersson Department of Computer Science Research output: Contribution to book/anthology/report/conference proceeding \u203a Article in proceeding \u203a Research Overview Original language English Title of host publication Proceedings of 16th Nordic Workshop on Programming Theory : Uppsala Technical Report Editors Paul Pettersson, Wang Yi Number of pages 5 Publication date 2004 Edition 2004-041 Pages 17-21 Publication status Published - 2004 Event Nordic Workshop on Programming \u2026", "num_citations": "1\n", "authors": ["1625"]}
{"title": "Scenario-Based Verification of Real-Time Systems Using UPPAAL\n", "abstract": " This article proposes two approaches to tool-supported automatic verification of dense real-time systems against scenario-based requirements, where a system is modeled as a network of timed automata (TAs) or as a set of driving live sequence charts (LSCs), and a requirement is specified as a separate monitored LSC chart. We make timed extensions to a kernel subset of the LSC language and define a trace-based semantics. By translating a monitored LSC chart to a behavior-equivalent observer TA and then non-intrusively composing this observer with the original TA-modeled real-time system, the problems of scenario-based verification reduce to computation tree logic (CTL) real-time model checking problems. When the real-time system is modeled as a set of driving LSC charts, we translate these driving charts and the monitored chart into a behavior-equivalent network of TAs by using a \u201cone-TA-per-instance line\u201d approach, and then reduce the problems of scenario-based verification also to CTL real-time model checking problems. We show how we exploit the expressivity of the TA formalism and the CTL query language of the real-time model checker UPPAAL to accomplish these tasks. The proposed two approaches are implemented in the UPPAAL tool and built as a tool chain, respectively. We carry out a number of experiments with both verification approaches, and the results indicate that these methods are viable, computationally feasible, and the tools are effective.", "num_citations": "1\n", "authors": ["1625"]}