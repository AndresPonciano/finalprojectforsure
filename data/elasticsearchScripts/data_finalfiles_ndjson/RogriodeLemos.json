{"title": "Negative selection: How to generate detectors\n", "abstract": " The immune system is a remarkable and complex natural system, which has been shown to be of interest to computer scientists and engineers alike. This paper reports an on-going investigation into the usefulness of the negative selection metaphor for immune inspired fault tolerance. Various procedures to generate detectors for the negative selection algorithm are reviewed and compared in terms of time and space complexity for the production of competent detectors. A new algorithm has been identified and implemented. Experimentation was undertaken, and an analysis is presented on the effectiveness of the various algorithms. The outcome of this empirical analysis reveals that trade-offs have to be made in the choice of algorithm based on the time and space complexities, as well as the detection rate.", "num_citations": "226\n", "authors": ["526"]}
{"title": "Exception handling in the development of dependable component\u2010based systems\n", "abstract": " Exception handling is a structuring technique that facilitates the design of software systems by encapsulating the process of error recovery. In this paper, we present a systematic approach for incorporating exceptional behaviour in the development of component\u2010based software. The premise of our approach is that components alone do not provide the appropriate means to deal with exceptional behaviour in an effective manner, hence the need to consider the notion of collaborations for capturing the interactive behaviour between components when error recovery involves more than one component. The feasibility of the approach is demonstrated in terms of the mining control system case study. Copyright \u00a9 2004 John Wiley & Sons, Ltd.", "num_citations": "80\n", "authors": ["526"]}
{"title": "Evaluation of resilience in self-adaptive systems using probabilistic model-checking\n", "abstract": " The provision of assurances for self-adaptive systems presents its challenges since uncertainties associated with its operating environment often hamper the provision of absolute guarantees that system properties can be satisfied. In this paper, we define an approach for the verification of self-adaptive systems that relies on stimulation and probabilistic model-checking to provide levels of confidence regarding service delivery. In particular, we focus on resilience properties that enable us to assess whether the system is able to maintain trustworthy service delivery in spite of changes in its environment. The feasibility of our proposed approach for the provision of assurances is evaluated in the context of the Znn.com case study.", "num_citations": "75\n", "authors": ["526"]}
{"title": "A fault-tolerant architectural approach for dependable systems\n", "abstract": " A system's structure enables it to generate its intended behavior from its components' behavior. A well-structured system simplifies relationships among components, which can increase dependability. With software systems, the architecture is an abstraction of the structure. Architectural reasoning about dependability has become increasingly important because emerging applications are increasingly complex. We've developed an architectural approach for effectively representing and analyzing fault-tolerant software systems. The proposed solution relies on exception handling to tolerate faults associated with component and connector failures, architectural mismatches, and configuration faults. Our approach, a specialization of the peer-to-peer architectural style, hides inside the architectural elements the complexities of exception handling and propagation. Our goal is to improve a system's overall reliability and\u00a0\u2026", "num_citations": "58\n", "authors": ["526"]}
{"title": "Analyzing safety requirements for process-control systems\n", "abstract": " Safety-requirements analysis is typically conducted either ad hoc or with the unbridled use of formal methods. The approach presented in this paper offers the freedom to mix formal and traditional engineering methods and apply them at different abstraction levels to give a higher assurance that the software's contribution to system risk is acceptable.< >", "num_citations": "56\n", "authors": ["526"]}
{"title": "An architectural support for self-adaptive software for treating faults\n", "abstract": " Considering the current trend of building systems from existing components that allow neither code inspection nor change, the solution for enabling dynamic adaptation of software systems should not be intrusive in the way that components should be designed. The architectural approach for treating faults described in this paper, instead of providing mechanisms and techniques at the component level, it relies on the interactions between components for obtaining flexible software structures that are nevertheless robust to the occurrence of undesirable events.", "num_citations": "54\n", "authors": ["526"]}
{"title": "Immune-inspired adaptable error detection for automated teller machines\n", "abstract": " This paper presents an immune-inspired adaptable error detection (AED) framework for automated teller machines (ATMs). This framework has two levels: one is local to a single ATM, while the other is network-wide. The framework employs vaccination and adaptability analogies of the immune system. For discriminating between normal and erroneous states, an immune-inspired one-class supervised algorithm was employed, which supports continual learning and adaptation. The effectiveness of the proposed approach was confirmed in terms of classification performance and impact on availability. The overall results are encouraging as the downtime of ATMs can de reduced by anticipating the occurrence of failures before they actually occur.", "num_citations": "51\n", "authors": ["526"]}
{"title": "Method of and system for prediction of the state of health of an apparatus\n", "abstract": " A method is describe of predicting the probable future condition of one or more components within an apparatus comprising a plurality of sensors arranged to monitor the operation of components of the apparatus and a control means arranged to receive said information from said plurality of sensors. The method comprises receiving said sensor information; analyzing the information to ascertain sensor patterns from said sensor information; comparing said sensor patterns with detectors, which are predefined patterns, indicative of the future condition of said one or more components within the apparatus; and classifying said sensor patterns as being indicative of future failure of a component or not based upon a comparison of sensor patterns with said detectors.", "num_citations": "49\n", "authors": ["526"]}
{"title": "Software Engineering for Self-Adaptive Systems: International Seminar Dagstuhl Castle, Germany, October 24-29, 2010 Revised Selected and Invited Papers\n", "abstract": " Although the self-adaptability of systems has been studied in a wide range of disciplines, from biology to robotics, only recently has the software engineering community recognized its key role in enabling the development of self-adaptive systems that are able to adapt to internal faults, changing requirements, and evolving environments. The 15 carefully reviewed papers included in this state-of-the-art survey were presented at the International Seminar on\" Software Engineering for Self-Adaptive Systems\", held in Dagstuhl Castle, Germany, in October 2010. Continuing the course of the first book of the series on\" Software Engineering for Self-Adaptive Systems\" the collection of papers in this second volume comprises a research roadmap accompanied by four elaborating working group papers. Next there are two parts-with three papers each-entitled\" Requirements and Policies\" and\" Design Issues\"; part four of the book contains four papers covering a wide range of\" Applications\".", "num_citations": "48\n", "authors": ["526"]}
{"title": "A robust group membership algorithm for distributed real-time systems\n", "abstract": " An algorithm is presented by which nonfaulty processors of a group of fixed size will be able to maintain a consistent and timely knowledge of the group membership. The authors assume an architecture in which the broadcast network is accessed by some time domain multiplexing techniques where the exclusive right to transmit messages is granted to each processor once in every 'cycle'. In an execution of the proposed algorithm, every nonfaulty processor knows of any processor failure within at most two cycles following the cycle in which the failure occurred, and a restarted processor can join the group in two cycles. At most less than half the number of processors are assumed to fail in any three consecutive cycles.< >", "num_citations": "48\n", "authors": ["526"]}
{"title": "A cloud-edge based data security architecture for sharing and analysing cyber threat information\n", "abstract": " Cyber-attacks affect every aspect of our lives. These attacks have serious consequences, not only for cyber-security, but also for safety, as the cyber and physical worlds are increasingly linked. Providing effective cyber-security requires cooperation and collaboration among all the entities involved. Increasing the amount of cyber threat information (CTI) available for analysis allows better prediction, prevention and mitigation of cyber-attacks. However, organizations are deterred from sharing their CTI over concerns that sensitive and confidential information may be revealed to others. We address this concern by providing a flexible framework that allows the confidential sharing of CTI for analysis between collaborators. We propose a five-level trust model for a cloud-edge based data sharing infrastructure. The data owner can choose an appropriate trust level and CTI data sanitization approach, ranging from plain text\u00a0\u2026", "num_citations": "41\n", "authors": ["526"]}
{"title": "An idealized fault-tolerant architectural component\n", "abstract": " Component-based systems built from existing software components are being used in a wide range of applications that have high dependability requirements. In order to achieve the required levels of reliability and availability, it is necessary to incorporate into these complex systems means for coping with software faults. However, the problem is exacerbated if we consider the current trend of integrating third-party software components, which allow neither code inspection nor changes. To leverage the reliability properties of these systems, we need solutions at the architectural level that are able to guide the structuring of unreliable components into a fault tolerant architecture. In this paper, we present an approach for structuring fault tolerant component-based systems based on the C2 architectural style.", "num_citations": "41\n", "authors": ["526"]}
{"title": "Self-adaptive authorization framework for policy based RBAC/ABAC models\n", "abstract": " Authorization systems are an integral part of any network where resources need to be protected. They act as the gateway for providing (or denying) subjects (users) access to resources. As networks expand and organisations start to federate access to their resources, authorization infrastructures become increasingly difficult to manage. In this paper, we explore the potential of self-adaptive authorization as a means to automate the management of the access control configuration. We propose a Self-Adaptive Authorization Framework (SAAF) that is capable of managing any policy based distributed RBAC/ABAC authorization infrastructure. SAAF relies on a feedback control loop to monitor decisions (by policy decision points) of a target authorization infrastructure. These decisions are analysed to form a view of the subject's behaviour to decide whether to adapt the target authorization infrastructure. Adaptations are\u00a0\u2026", "num_citations": "39\n", "authors": ["526"]}
{"title": "A fault-tolerant software architecture for component-based systems\n", "abstract": " Component-based software built from reusable software components is being used in a wide range of applications that have high dependability requirements. In order to achieve the required levels of dependability, it is necessary to incorporate into these complex systems means for coping with software faults. However, the problem is exacerbated if we consider the current trend of integrating off-the-shelf software components, from independent sources, which allow neither code inspection nor changes. To leverage the dependability properties of these systems, we need solutions at the architectural level that are able to guide the structuring of unreliable components into a fault-tolerant architecture. In this paper, we present an approach for structuring fault-tolerant component-based systems based on the C2 architectural style.", "num_citations": "39\n", "authors": ["526"]}
{"title": "Dynamic plans for integration testing of self-adaptive software systems\n", "abstract": " Self-adaptive software systems are able to modify their own structure and/or behaviour at run-time in order to cope with changes. During software self-adaptation, new components may be incorporated to the software system. One crucial aspect when incorporating new components is to test them for guaranteeing that they can interoperate as specified. However, this aspect has been often neglected when considering architectural reconfiguration. To deal with this problem, this paper presents an approach for the dynamic generation of plans for conducting the integration testing of self-adaptive software systems. In order to evaluate our approach, we have developed a prototype application that has been used to conduct some experiments, and to demonstrate the feasibility of our approach.", "num_citations": "38\n", "authors": ["526"]}
{"title": "Assurances for self-adaptive systems: Principles, models, and techniques\n", "abstract": " During the past decade, one of the most important challenges in software engineering has been to face the increasing complexity that affects softwareintensive systems, regarding not only their development, but most importantly, their operation and maintenance, which cannot be entrusted to human operators because of cost and dependability issues. One of the most successful techniques to date when dealing with these issues is endowing systems with the ability to self-adapt. Such systems monitor themselves at run-time through a variety of probes, reflecting the observed behavior to a control layer that compares it against a model of expected system behavior. When any anomalies or conditions for improvement are detected, they attempt to address the situation (eg, repair a problem, optimize operation) through a set of effectors placed in the system. Despite recent advances in this area, one key aspect of self\u00a0\u2026", "num_citations": "35\n", "authors": ["526"]}
{"title": "A framework for automatic generation of processes for self-adaptive software systems\n", "abstract": " Carlos Eduardo da Silva and Rog\u00e9rio de Lemos School of Computing, University of Kent Canterbury, Kent, CT2 7NF, UK E-mail:{ces26, r. delemos}@ kent. ac. uk", "num_citations": "31\n", "authors": ["526"]}
{"title": "On formal support for industrial-scale requirements analysis\n", "abstract": " Drawing on practical experience in the development of dependable applications, this paper presents a number of \u201cgoals\u201d for industrially applicable formal techniques in the specification and analysis of requirements for hybrid systems. These goals stem from domain-specific concerns such as the division between environment, plant and controller; and from the development context with its wide variety of analysis and design activities.             Motivated by some of these goals, we present a methodology, based on formal methods, for the requirements analysis of hybrid systems that are safetycritical. This methodology comprises a framework whose stages are based on levels of abstraction that follow a general structure for process control systems, a set of techniques appropriate for the issues to be analysed at each stage of the framework, and a hierarchical structure for the product of the analysis. Some aspects\u00a0\u2026", "num_citations": "29\n", "authors": ["526"]}
{"title": "Architecting fault tolerance with exception handling: Verification and validation\n", "abstract": " When building dependable systems by integrating untrusted software components that were not originally designed to interact with each other, it is likely the occurrence of architectural mismatches related to assumptions in their failure behaviour. These mismatches, if not prevented during system design, have to be tolerated during runtime. This paper presents an architectural abstraction based on exception handling for structuring fault-tolerant software systems. This abstraction comprises several components and connectors that promote an existing untrusted software element into an idealised fault-tolerant architectural element. Moreover, it is considered in the context of a rigorous software development approach based on formal methods for representing the structure and behaviour of the software architecture. The proposed approach relies on a formal specification and verification for analysing exception\u00a0\u2026", "num_citations": "27\n", "authors": ["526"]}
{"title": "Architectural description of dependable software systems\n", "abstract": " The structure of a system is what enables it to generate the system\u2019s behaviour, from the behaviour of its components (see Chapter 1). The architecture of a software system is an abstraction of the actual structure of that system. The identification of the system structure early in its development process allows abstracting away from details of the system, thus assisting the understanding of broader system concerns [65]. One of the benefits of a well-structured system is the reduction of its overall complexity, which in turn should lead to a more dependable system. The process of system structuring may occur at different stages of the development or at different levels of abstraction. Reasoning about dependability at the architectural level has lately grown in importance because of the complexity of emerging applications, and the trend of building trustworthy systems from existing untrustworthy components. There has been a\u00a0\u2026", "num_citations": "27\n", "authors": ["526"]}
{"title": "Immunising automated teller machines\n", "abstract": " This paper presents an immune-inspired adaptable error detection (AED) framework for Automated Teller Machines (ATMs). This framework two levels, one level is local to a single ATM, while the other is a network-wide adaptable error detection. It employs ideas from vaccination, and adaptability analogies of the immune system. For discriminating between normal and erroneous states, an immune inspired one-class supervised algorithm was employed, which supports continual learning and adaptation. The effectiveness of the local AED was confirmed by its ability of detecting potential failures on an average 3 hours before the actual occurrence. This is an encouraging result in terms of availability, since measures can be devised for reducing the downtime of ATMs.", "num_citations": "27\n", "authors": ["526"]}
{"title": "Towards immune inspired fault tolerance in embedded systems\n", "abstract": " The immune system is a remarkable natural system that is proving to be of great inspiration to computer scientists and engineers alike. This paper discusses the role that the immune system can play in the development of fault tolerant embedded systems. Initial work in the area has highlighted the use of the immune process of negative selection, and more importantly the concept of self/non-self discrimination in the application of artificial immune systems to fault tolerance. This paper reviews those works, highlights issues relating to the way in which this area is approached, and raises important points that need to be considered before effective immune inspired fault tolerant systems can be constructed.", "num_citations": "23\n", "authors": ["526"]}
{"title": "On the safety analysis of requirements specifications for safety-critical software\n", "abstract": " For computer based safety-critical systems, it is most efficient to consider safety concerns as early as possible during software development in order to ensure that safety problems do not propagate through subsequent phases of development. In this paper, we present an approach for the safety analysis of software specifications that are produced during the requirements analysis. The safety analysis is conducted concurrently with the requirements analysis, and its aim is to assess whether the risk associated with a requirements specification is acceptable.", "num_citations": "23\n", "authors": ["526"]}
{"title": "A train set as a case study for the requirements analysis of safety-critical systems\n", "abstract": " Requirements analysis plays a vital role in the development of safety-critical systems since any faults in the requirements specification will corrupt the subsequent stages of system development. Experience in safety-critical systems has shown that faults in the requirements can and do cause disasters. The analysis of the safety requirements of a train set system is discussed in terms of a general framework for the requirements analysis of safety-critical systems. This framework is based on the clear separation of the mission and safety issues, and also on the separation of the analysis, into two phases, to be performed in terms of the properties of the real world, i.e. physical laws and rules of operation, and the properties of the system, i.e. the mapping of the real world properties in terms of the system sensors and actuators. Due to the different expressive needs of the two phases we propose the utilisation of different\u00a0\u2026", "num_citations": "22\n", "authors": ["526"]}
{"title": "Self-adaptive federated authorization infrastructures\n", "abstract": " Authorization infrastructures are an integral part of any network where resources need to be protected. As networks expand and organizations start to federate access to their resources, authorization infrastructures become increasingly difficult to manage. In this paper, we explore the automatic adaptation of authorization assets (policies and subject access rights) in order to manage federated authorization infrastructures. We demonstrate adaptation through a Self-Adaptive Authorization Framework (SAAF) controller that is capable of managing policy based federated role/attribute access control authorization infrastructures. The SAAF controller implements a feedback loop to monitor the authorization infrastructure in terms of authorization assets and subject behavior, analyze potential adaptations for handling malicious behavior, and act upon authorization assets to control future authorization decisions. We\u00a0\u2026", "num_citations": "21\n", "authors": ["526"]}
{"title": "Method of determining the cause of an error state in an apparatus\n", "abstract": " A method is described for determining the cause of an error state for one or more components within an apparatus. The apparatus comprises a plurality of sensors arranged to monitor the operation of components of the apparatus and a control means arranged to receive said information from said plurality of sensors. The method comprises analysing said sensor information in the form of an error log to ascertain sensor patterns from said sensor information comparing said sensor patterns with detectors, which are predefined patterns, indicative of the condition of said one or more components within the apparatus and classifying said sensor patterns as being indicative of said error state of a component or not based upon a comparison of sensor patterns with said detectors.", "num_citations": "21\n", "authors": ["526"]}
{"title": "Can self-managed systems be trusted? some views and trends\n", "abstract": " Self-managing or autonomic computing is a highly emerging field having been championed by industry and academia alike. Essentially the management of the system is being handed to the system itself, therefore the issue of trust in terms of the decisions the system makes regarding itself, is of paramount interest. This paper considers four aspects of trust in self-adaptive computing systems with the aim to identify trends and pinpoint areas that require more investigation.", "num_citations": "20\n", "authors": ["526"]}
{"title": "Extended RTL in the Specification and Verification of an Industrial Press\n", "abstract": " Extended Real Time Logic (ERTL) is proposed for the modelling and analysis of hybrid systems, taking as a basis Real Time Logic (RTL). RTL is a first order logic with uninterpreted predicates which relate events of a system to the time of their occurrence, thereby providing the means for reasoning about absolute timing properties of real-time systems. The extensions provided by ERTL allow reasoning about system behaviour in both value and time domains through predicates defined in terms of system variables. We illustrate the use of ERTL through the modelling and analysis of an industrial press.", "num_citations": "20\n", "authors": ["526"]}
{"title": "Analysis of safety requirements in the context of system faults and human errors\n", "abstract": " This paper describes an approach to the incremental and iterative analysis of requirements for safety-critical systems. Safety strategies are developed to ensure that hazard states are avoided and the system's integrity is maintained in the presence of failures in the system components. The approach supports an understanding of human error and the formulation of human error tolerance requirements ensuring that safety is preserved in the presence of user errors. The approach is illustrated with an example from the aerospace industry.", "num_citations": "20\n", "authors": ["526"]}
{"title": "Describing evolving dependable systems using co-operative software architectures\n", "abstract": " The paper describes an architectural approach that facilitates the modelling and analysis of dependable systems that are built from untrustworthy components whose designs, we assume, cannot be changed. The approach is based on the definition of an architectural style in which connectors are considered as first class entities, which embody the description of collaborative behaviour between components. This style is shown to be particularly suitable for describing system components that have to evolve in order for the system to provide dependable services. The feasibility of the proposed architectural style in dealing with evolving dependable systems is demonstrated in terms of a gas station case study.", "num_citations": "19\n", "authors": ["526"]}
{"title": "Explicit representation of exception handling in the development of dependable component-based systems\n", "abstract": " Exception handling is a structuring technique that facilitates the design of systems by encapsulating the process of error recovery. In this paper, we present a systematic approach for incorporating exceptional behaviour in the development of component-based software. The premise of our approach is that components alone do not provide the appropriate means to deal with exceptional behaviour in an effective manner. Hence, the need to consider the notion of collaborations for capturing the interactive behaviour between components, when error recovery involves more than one component. The feasibility of the approach is demonstrated in terms of the case study of the mining control system.", "num_citations": "19\n", "authors": ["526"]}
{"title": "Research challenges on multi-layer and mixed-initiative monitoring and adaptation for service-based systems\n", "abstract": " Adaptation of complex service-based systems is one of the most challenging research problems for the Future Internet. A considerable effort has been dedicated in recent years to address this problem. However, there are still several important issues that call for concrete solutions. In this paper, we present a set of research challenges for muti-layer and mixed-initiative adaptation and monitoring that may guide the research in this area for the next 5-10 years.", "num_citations": "14\n", "authors": ["526"]}
{"title": "Verifying architectural variabilities in software fault tolerance techniques\n", "abstract": " This paper considers the representation of different software fault tolerance techniques as a product line architecture (PLA) for promoting the reuse of software artifact. The proposed PLA enables to specify a series of closely related architectural applications, which is obtained by identifying variation points associated with design decisions regarding software fault tolerance. These decisions are used to choose the appropriate technique depending on the features selected, e.g, the number of redundant resources, or the type of adjudicator. The proposed approach also comprises the formalisation of the PLA, using B-method and CSP, for systematising the verification of fault-tolerant software systems at the architectural level. The properties verified cover two complementary contexts: the selection of the correct architectural variabilities for instantiating the PLA, and also the properties of the chosen fault tolerance\u00a0\u2026", "num_citations": "13\n", "authors": ["526"]}
{"title": "Using dynamic workflows for coordinating self-adaptation of software systems\n", "abstract": " The self-adaptation of a software system is a complex process that depends on the system requirements, its operational state and environment, which may change during the system operational lifetime. Hence, the process for coordinating the self-adaptation should also be adaptable to changes that may occur during run-time. As a means for coordinating the self-adaptation process of software systems, the proposed approach employs workflows that are dynamically generated for dealing with the variability associated with the self-adaptation process. In this context, our aim is to define and develop techniques for automatically generate workflows for coordinating the self-adaptation of software systems. For demonstrating the feasibility of the proposed approach, architectural reconfiguration of software systems is used as an example, whereby the reconfiguration is managed by workflows that are dynamically\u00a0\u2026", "num_citations": "13\n", "authors": ["526"]}
{"title": "Analysing failure behaviours in component interaction\n", "abstract": " In order to facilitate the process of safety analysis of an evolving software system, this paper presents an architectural approach that enhances the safety analysis by providing appropriate abstractions for modelling and analysing interactions between components, since faulty interactions are the usual cause of accidents. For that, instead of considering components as the locus of change, the proposed approach assumes that components remain unchanged while their interactions (captured by connectors) adapt to the different changes made in the system. The behavioural description of connectors is provided in terms of extended time automata, and the safety analysis is performed using model checking, which verifies whether safe behaviour is maintained when interactions between components change. The feasibility of the approach is demonstrated in terms of a case study that deals with the safety procedures\u00a0\u2026", "num_citations": "13\n", "authors": ["526"]}
{"title": "ERTL: an Extension to RTL for the Specification, Analysis and Verification of Hybrid Systems\n", "abstract": " Real time logic (RTL) was introduced as a formalism for reasoning about the relative and absolute timing properties of computational tasks of discrete real-time systems. Extended real time logic (ERTL) is a formalism for the modelling and analysis of relative and absolute timing properties of hybrid systems (systems that combine continuous variables and discrete event dynamics). The extensions provided by ERTL enable the modelling of system behaviour ranging from activities of the physical entities that form part of the environment of a computing system, to the temporal ordering of the computational tasks of the computing system itself thus providing a formal notation that can be used in all stages of software development.", "num_citations": "13\n", "authors": ["526"]}
{"title": "An approach for the risk analysis of safety specifications\n", "abstract": " Experience in safety-critical systems has shown that faults introduced during requirements analysis can and do cause accidents. Within a methodology for the systematic production of requirements specifications for safety, based on a framework to structure the analysis and the application of formal techniques, we focus, in this paper on the risk analysis of the specifications. This has the aim to locate and remove faults during the requirements phase, rather than later in development or during the operational lifetime of the system. The applicability of the proposed approach is demonstrated by conducting the risk analysis of an example based on a train set crossing. The example illustrates how the approach to risk analysis supports verification within a formal model and how the validation of the formal model is performed.< >", "num_citations": "13\n", "authors": ["526"]}
{"title": "The conflict between self-* capabilities and predictability\n", "abstract": " Although it would be desirable for any system to have self-* capabilities when faced with changes that might occur either in the system or its environment, there is a certain classes of systems in which the incorporation of such capabilities would be difficult to justify. These systems are mainly those that uncertainties in their behaviours are not desirable. In this paper, we discuss how the expected degree of autonomy of a system is related to the way in which a system is described, either process or data. The discussion is presented in the context of predictability. The type of system being considered are mission-critical system that are likely to restrict the degree of uncertainty associated with their behaviour, or the infrastructure that enables this behaviour.", "num_citations": "12\n", "authors": ["526"]}
{"title": "Sharing cyber threat intelligence under the general data protection regulation\n", "abstract": " Sharing Cyber Threat Intelligence (CTI) is a key strategy for improving cyber defense, but there are risks of breaching regulations and laws regarding privacy. With regulations such as the General Data Protection Regulation (GDPR) that are designed to protect citizens\u2019 data privacy, the managers of CTI datasets need clear guidance on how and when it is legal to share such information. This paper defines the impact that GDPR legal aspects may have on the sharing of CTI. In addition, we define adequate protection levels for sharing CTI to ensure compliance with the GDPR. We also present a model for evaluating the legal requirements for supporting decision making when sharing CTI, which also includes advice on the required protection level. Finally, we evaluate our model using use cases of sharing CTI datasets between entities.", "num_citations": "11\n", "authors": ["526"]}
{"title": "Risks of sharing cyber incident information\n", "abstract": " Incident information sharing is being encouraged and mandated as a way of improving overall cyber intelligence and defense, but its take up is slow. Organisations may well be justified in perceiving risks in sharing and disclosing cyber incident information, but they tend to express such worries in broad and vague terms. This paper presents a specific and granular analysis of the risks in cyber incident information sharing, looking in detail at what information may be contained in incident reports and which specific risks are associated with its disclosure. We use the STIX incident model as indicative of the types of information that might be reported. For each data field included, we identify and evaluate the threats associated with its disclosure, including the extent to which it identifies organisations and individuals. The main outcome of this analysis is a detailed understanding of which information in cyber incident\u00a0\u2026", "num_citations": "11\n", "authors": ["526"]}
{"title": "Architectural fault tolerance using exception handling\n", "abstract": " When building dependable systems by integrating untrusted software components that were not originally designed to interact with each other, it is inevitable the occurrence of architectural mismatches related to assumptions in the failure behaviours. These mismatches if not prevented during system design have to be tolerated during run-time. This paper presents an architectural abstraction based on exception handling for structuring fault-tolerant software systems. Exception handling has been used effectively for incorporating fault tolerance into software systems. The proposed architectural abstraction transforms untrusted software components into idealised fault tolerant architectural elements (iFTE), which clearly separate the normal and exceptional behaviours, in terms of their internal structure and interfaces. An advantage of this architectural abstraction is that it can be instantiated into both\u00a0\u2026", "num_citations": "11\n", "authors": ["526"]}
{"title": "On the integration of requirements analysis and safety analysis for safety-critical systems\n", "abstract": " Experience has shown that in computer based safety-critical systems, faults introduced during the phase of software requirements analysis can and do cause accidents. In this paper, we present an approach for integrating the activities of requirements analysis and safety analysis. The aim of safety analysis is to determine the risk associated with requirements specifications and assess whether this is acceptable within the context of system risk. The advantage of conducting the safety analysis during the early phases of software development is that safety related errors are less likely to propagate through to subsequent phases of development. The applicability of the proposed approach is demonstrated by conducting the safety analysis of an example based on a train set crossing. The example illustrates how the approach to safety analysis supports verification within a formal model of the train set system and how the\u00a0\u2026", "num_citations": "11\n", "authors": ["526"]}
{"title": "Formal Techniques for Requirements Analysys for Safety-Critical Systems\n", "abstract": " Formal support for the different activities performed during requirements analysis demands the utilisation of a set of formal notations and techniques whose features and expressive power match the characteristics of the activities. Selecting an appropriate formal technique for an activity allows emphasis to be placed on pertinent characteristics of the system, enabling the technique to work to its own strengths. In order to facilitate the utilization of different formal techniques, in this paper; we introduce an event/action model (E/A model) as a common foundation for models of system behaviour. To show the flexibility of the E/A model, we incorporate its concepts into two different classes of formalisms.", "num_citations": "11\n", "authors": ["526"]}
{"title": "Architecture-centric fault tolerance with exception handling\n", "abstract": " When building dependable systems by integrating untrusted software components that were not originally designed to interact with each other, it is inevitable the occurrence of architectural mismatches related to assumptions in the failure behaviours. These mismatches if not prevented during system design have to be tolerated during run-time. This paper presents an architectural abstraction based on exception handling for structuring fault-tolerant software systems. This abstraction comprises several components and connectors that transform an existing untrusted software element into an idealised fault-tolerant architectural element. The proposed rigorous approach relies on a formal representation for analysing exception propagation, and verifying important dependability properties. Beyond this, the formal models are also used for generating unit and integration test cases that would be used for\u00a0\u2026", "num_citations": "10\n", "authors": ["526"]}
{"title": "Safety analysis of an evolving software architecture\n", "abstract": " The safety analysis of an evolving software system has to consider the impact that changes might have on the software components, and to provide confidence that the risk is acceptable. If the impact of a change is not thoroughly analysed, accidents can occur as a result of faulty interactions between components, for example. However, the process of safety analysis can be enhanced if appropriate abstractions are provided for modelling and analysing software components and their interactions. Instead of considering components as the locus of change, the proposed approach assumes that components remain unchanged while their interactions (i.e. connectors) adapt to the different requirements needs. The safety analysis is then performed using model checking to verify whether safe behaviour is maintained when interactions between components change. The feasibility of the approach is demonstrated in terms\u00a0\u2026", "num_citations": "10\n", "authors": ["526"]}
{"title": "A co-operative object-oriented architecture for adaptive systems\n", "abstract": " Adaptive systems should be able to adapt to changes that occur in their operating environment without any external human intervention. Software architectures for such systems should be flexible enough to allow components to change their pattern of collaboration depending on the environmental changes and goals of the system, without changing the actual components themselves. This paper describes a co-operative object-oriented style that is able to represent software architectures for adaptive systems. The connectors in this style, described as co-operations, embody the description of complex interacting behaviour between the architectural components. Depending on the environmental changes, the behavioural adaptability in a co-operative object-oriented architecture is achieved by replacing the connectors. The applicability of the architectural style is demonstrated in terms of a case study of a control\u00a0\u2026", "num_citations": "10\n", "authors": ["526"]}
{"title": "An object-based approach to modelling and analysis of failure properties\n", "abstract": " In protection systems, when traditional technology is replaced by software, the functionality and complexity of the system is likely to increase. The quantitative evidence normally provided for safety certification of traditional systems cannot be relied upon in software-based systems. Instead there is a need to provide qualitative evidence. As a basis for the required qualitative evidence, we propose an object-based approach that allows modelling of both the application and software domains. From the object class model of a system and a formal specification of the failure properties of its components, we generate a graph of failure propagation over object classes, which is then used to generate a graph in terms of object instances in order to conduct fault tree analysis. The model is validated by comparing the resulting minimal cut sets with those obtained from the fault tree analysis of the original system. The\u00a0\u2026", "num_citations": "10\n", "authors": ["526"]}
{"title": "Robust Requirements Specifications for Safety\u2014Critical Systems\n", "abstract": " Experience in safety-critical systems has shown that deviations from assumed behaviour can and do cause accidents. This suggests that the development of requirements specifications for such systems should be supported with a risk analysis. In this paper we present an approach to the development of robust requirements specifications (i.e. specifications that are adequate for the risks involved), based on qualitative and quantitative analyses.", "num_citations": "10\n", "authors": ["526"]}
{"title": "Analysis of timeliness requirements in safety-critical systems\n", "abstract": " Requirements analysis plays a vital role in the development of safetycritical systems since any faults in the requirements specification will corrupt the subsequent stages of system development. Experience in safetycritical systems has shown that faults in the requirements can and do cause accidents. This paper presents a general framework for the analysis of timeliness requirements in safetycritical systems. The analysis is performed in two distinct phases; for each phase we propose different formalisms and time structures. The specification of the timing constraints is based on an event/action model. To illustrate the proposed approach an example based on a train set crossing is presented.", "num_citations": "10\n", "authors": ["526"]}
{"title": "Architectural-based validation of fault-tolerant software\n", "abstract": " Many architecture-centred approaches have been proposed for constructing dependable component-based systems. However, few of them provide an integrated solution for their development that combines fault prevention, fault removal, and fault tolerance techniques. This paper proposes a rigorous development approach based on an architectural abstraction, which combines formal methods and robustness testing. The architectural abstraction assumes a crash failure semantics, and when it is instantiated as an architectural element provides the basis for architecting fault tolerant systems. The architecture is formally specified using the B-method and CSP. Assurances that the software system is indeed dependable are obtained by combining formal specification for removing ambiguities from the architectural representation, and robustness testing for validating the source code against its software architecture\u00a0\u2026", "num_citations": "9\n", "authors": ["526"]}
{"title": "A fault-tolerant architectural approach for dependable systems\n", "abstract": " Developers typically address dependability concerns in the late phases of system development. However, two trends are compelling developers to consider dependability earlier, at the architectural level. First, emerging applications are increasingly complex. Second, to address this first trend, developers are increasingly attempting to build dependable systems from existing undependable components. A new architectural approach employs exception handling to represent and analyze fault-tolerant software systems. It partitions architectural elements into normal and exceptional parts, thus promoting a clear separation of concerns regarding how to detect and handle errors.This article is part of a focus section on software architecture.", "num_citations": "9\n", "authors": ["526"]}
{"title": "Idealised Fault Tolerant Architectural Element\n", "abstract": " This paper presents an architectural approach based on exception handling for structuring faulttolerant software systems. We introduce the concept of an idealised fault tolerant architectural element (iFTE) that clearly separates the normal and exceptional behaviours of architectural elements. An advantage of the proposed architectural solution is that it can be instantiated into components and connectors. The feasibility of the proposed architectural approach is evaluated in terms of a simple case study.", "num_citations": "9\n", "authors": ["526"]}
{"title": "Architecting web services applications for improving availability\n", "abstract": " In this paper, we address the problem of improving the availability and correctness of Web Services. An architectural approach is proposed that incorporates fault-tolerant techniques, such as, self-checking, comparison, and dynamic reconfiguration. The first two techniques are associated with the detection and handling of faults at the component level, while the latter is associated with the system. To demonstrate its applicability, a distributed application was designed and implemented that addresses the problem of obtaining dependable stock quotes from the Web. The system was implemented using Web Services core technologies, and preliminary measurements confirmed the improved availability of the whole application.", "num_citations": "9\n", "authors": ["526"]}
{"title": "Self-adaptive artificial intelligence\n", "abstract": " Machine learning tools, like deep neural networks, are perceived to be black boxes. That is, the only way of changing their internal data models is to retrain these models using different inputs. This is ineffective in dynamic systems that are prone to changes, like concept drift. A new promising solution is transparent artificial intelligence, based on the notions of interpretation and explanation, whose objective is to correlate the internal data models with predictions. The research question being addressed is whether we can have a self-adaptive machine learning system that is able to interpret and explain its data model in order for it to be controlled. In this position paper, we present our initial thoughts whether this can be achieved.", "num_citations": "7\n", "authors": ["526"]}
{"title": "Self-adaptation made easy with blockchains\n", "abstract": " This position paper describes how blockchains facilitate the implementation of distributed self-adaptive systems. We demonstrate how the master/slave decentralised control pattern for self-adaptive systems, integrated with a permissioned blockchain, can protect nodes of a network against attacks by continuously adapting the membership of an access control list. Whenever malicious behaviour is detected, consensus on an updated access control list is reached, and that node is removed from the network. Using a smart home, as an example, we demonstrate that a permissioned blockchain is able to maintain a consistent view of a network of Internet of Things (IoT) devices in the presence of malicious nodes.", "num_citations": "7\n", "authors": ["526"]}
{"title": "Software engineering for self-adaptive systems II\n", "abstract": " The complexity of current software-based systems has led the software engineering community to look for inspiration in diversely related fields (eg, robotics and control theory) as well as other areas (eg, biology) to find innovative approaches for building, running, and managing software systems and services. Therefore, self-adaptation\u2014systems that are able to adjust their behavior or structure at run-time in response to their perception of the environment and the system itself\u2013has become a hot topic within the software engineering community.This book is one of the outcomes of Dagstuhl Seminar 10431 on \u201cSoftware Engineering for Self-Adaptive Systems\u201d held in October 2010. It is the second book in the series and comprises a research roadmap, four working group papers, and invited papers from recognized experts in the field. The research roadmap, complemented by four group papers that detail the issues\u00a0\u2026", "num_citations": "7\n", "authors": ["526"]}
{"title": "Development of fault-tolerant software systems based on architectural abstractions\n", "abstract": " The incorporation of fault tolerance into systems normally increases their complexity, which consequently makes their analysis more difficult. This paper discusses how architectural abstractions can be effective in developing fault-tolerant software systems. Depending on the fault model and the resources available, different abstractions can be employed for representing issues that are related to fault tolerance, such as error detection, and error and fault handling. These architectural abstractions, and their internal views, can be instantiated into concrete components and connectors for designing fault-tolerant software architectures. Since structural and behavioural properties associated with these abstractions are formally specified, the process of verifying and validating software architectures can be automated. In this paper, we show how appropriate architectural abstractions and a recursive process can\u00a0\u2026", "num_citations": "7\n", "authors": ["526"]}
{"title": "A game theoretic solution for the optimal selection of software components\n", "abstract": " It is both difficult and expensive to design and implement a software system that excels in all its functional and non-functional properties. Instead, we could envisage a software system which is made up of several software components having complementary attributes. These components are obtained from a library of software components, each having a specific functional and non-functional profile, and they are selected by a decision maker to satisfy the system requirements and optimise the quality of service under cost constraints. This paper specifically considers the problem of the optimal selection of software components with respect to their non-functional attributes, and describes a game theoretic solution by formulating the problem as a bargaining game. In addition to the game theoretic solution, the paper also discusses other alternative approaches for the optimal selection of software components.", "num_citations": "7\n", "authors": ["526"]}
{"title": "Agreement on the group membership in synchronous distributed systems\n", "abstract": " When a group of processors in a distributed system cooperate with each other on processing of a common task, it is often necessary for the non-faulty processors to have a mutually consistent knowledge of the set of processors that can be considered to be non-faulty. The set of non-faulty processors in the group \u2014 known as the group membership \u2014 will change for example when a processor crashes or when a crashed processor, after restart, joins the group. These changes should be known by all non-faulty processors as quickly as possible within a known bounded time interval. We present an algorithm by which non-faulty processors of a group of bounded size will be able to maintain a consistent and timely knowledge of the group membership. Processors in the group are assumed to execute the algorithm in a synchronous manner and at periodic intervals or cycles of some fixed length. In an execution of\u00a0\u2026", "num_citations": "7\n", "authors": ["526"]}
{"title": "Self-adaptive authorisation in OpenStack cloud platform\n", "abstract": " Although major advances have been made in protection of cloud platforms against malicious attacks, little has been done regarding the protection of these platforms against insider threats. This paper looks into this challenge by introducing self-adaptation as a mechanism to handle insider threats in cloud platforms, and this will be demonstrated in the context of OpenStack. OpenStack is a popular cloud platform that relies on Keystone, its identity management component, for controlling access to its resources. The use of self-adaptation for handling insider threats has been motivated by the fact that self-adaptation has been shown to be quite effective in dealing with uncertainty in a wide range of applications. Insider threats have become a major cause for concern since legitimate, though malicious, users might have access, in case of theft, to a large amount of information. The key contribution of this paper is the definition of an architectural solution that incorporates self-adaptation into OpenStack Keystone in order to handle insider threats. For that, we have identified and analysed several insider threats scenarios in the context of the OpenStack cloud platform, and have developed a prototype that was used for experimenting and evaluating the impact of these scenarios upon the self-adaptive authorisation system for the cloud platforms.", "num_citations": "6\n", "authors": ["526"]}
{"title": "On architecting software fault tolerance using abstractions\n", "abstract": " In this position paper, we argue how architectural abstractions can be effective in developing fault-tolerant software systems. Depending on the fault model and the resources available, different abstractions can be employed for representing architectural issues related to fault tolerance. These architectural abstractions, and their internal views, can be instantiated into concrete components and connectors for designing fault-tolerant software architectures. Since structural and behavioural properties associated with these abstractions are formally specified, the process of verifying and validating software architectures can be automated. In this paper, we focus on two architectural abstractions: the idealised fault-tolerant architectural element (iFTE), which is based on exception handling, and the halt-on-failure architectural element (HoFE), which assumes crash failure semantics.", "num_citations": "6\n", "authors": ["526"]}
{"title": "Verification of exception control flows and handlers based on architectural scenarios\n", "abstract": " The use of exception handling mechanisms to develop robust software systems in a non-systematic manner can be a source of many design faults. This paper presents a rigorous development approach based on formal methods, which allows to systematise the verification of the system's abnormal behaviour at the architectural level. Our solution is based on the specification and verification of architectural scenarios, which describe both exception control flows and exception handlers involving architectural elements (components and connectors). We also adopt an architectural abstraction for guiding the internal structure of the architectural elements. The verification process is conducted using the ProB model checker, which combines the use of set-theory (B-Method) and a process algebra (CSP). The feasibility of our approach was evaluated by a case study from the financial domain.", "num_citations": "6\n", "authors": ["526"]}
{"title": "Verification and validation of a fault-tolerant architectural abstraction\n", "abstract": " Verification and Validation of a Fault-Tolerant Architectural Abstraction - Kent Academic Repository Skip to main content kent-logo Logo Login Admin Dashboards Accessibility Statement Help Simple search | Advanced search Home Browse Latest additions Policies Verification and Validation of a Fault-Tolerant Architectural Abstraction Brito, Patrick HS, de Lemos, Rog\u00e9rio, Martins, Eliane, Rubira, Cecilia MF (2007) Verification and Validation of a Fault-Tolerant Architectural Abstraction. In: Supplemental Proceedings of the 37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN 2007). Workshop on Architecting Dependable Systems (WADS 2007) . pp. 166-171. (The full text of this publication is not currently available from this repository. You may be able to access a copy if URLs are provided) (KAR id:14586) The full text of this publication is not currently available from this \u2026", "num_citations": "6\n", "authors": ["526"]}
{"title": "Analysis of Safety Requirements for Process Control Systems\n", "abstract": " An essential basis for the development of software for safety-critical systems is to establish high-quality requirements specifications. This paper describes an approach to the incremental and iterative analysis of requirements for safety-critical systems. Safety specifications are developed to ensure that hazard states are avoided and the system\u2019s integrity is maintained even in the presence of failures in system components.", "num_citations": "6\n", "authors": ["526"]}
{"title": "ERTL: An extension to RTL for requirements analysis for hybrid systems\n", "abstract": " this paper we provide extensions to RTL which allow reasoning about absolute timings for both continuous and discrete time, and reasoning about system behaviour in the value and time domains by parametrising predicates in terms of system variables. Incorporating these features into RTL we obtain Extended Real-Time Logic (ERTL) which is suitable for the modelling and analysis of hybrid systems. The paper is organized as follows. In the next section we present the concepts of an event-action model, and discuss their formalisation in terms of RTL and ERTL. Section 3 defines the syntax and semantics of ERTL. Section 4 presents two case studies, the first is the traditional cat and mouse problem, and the second concerns temperature control for a nuclear reactor by moving the reactor's rods. Finally, section 5 presents some concluding remarks. 2 Event-Action Model", "num_citations": "6\n", "authors": ["526"]}
{"title": "An architecture for privacy-preserving sharing of CTI with 3rdparty analysis services\n", "abstract": " Increasing numbers of Small and Medium Enterprises (SME) are outsourcing or hosting their services on different Cloud Service Providers (CSP). They are also using different security services from these CSPs such as firewalls, intrusion detection/prevention systems and anti-malware. Although for the SMEs the main purpose of using these security services is to protect their cyber assets, either physical or virtual, from security threats and compromises, a very useful and valuable by-product of these security services is the wealth of Cyber Threat Information (CTI) that is collected over time. However, a common problem faced by SMEs is that they lack the resources and expertise for monitoring, analysing and reacting to any security notifications, alerts or events generated by the security services they have subscribed to. An obvious solution to this problem is that the SMEs outsource this problem to a cloud based\u00a0\u2026", "num_citations": "5\n", "authors": ["526"]}
{"title": "Enabling the autonomic management of federated identity providers\n", "abstract": " The autonomic management of federated authorization infrastructures (federations) is seen as a means for improving the monitoring and use of a service provider\u2019s resources. However, federations are comprised of independent\u00a0management domains with varying scopes of control and data ownership. The focus of this paper is on the autonomic management of federated identity providers by service providers located in other domains, when the identity providers have been diagnosed as the source of abuse. In particular, we describe how an autonomic controller, external to the domain of the identity provider, exercises control over the issuing of privilege attributes. The paper presents a conceptual design and implementation of an effector for an identity provider that is capable of enabling cross-domain autonomic management. The implementation of an effector for a SimpleSAMLphp identity provider is\u00a0\u2026", "num_citations": "5\n", "authors": ["526"]}
{"title": "Dependable and secure distributed storage system for ad hoc networks\n", "abstract": " The increased use of ubiquitous computing devices is resulting in networks that are highly mobile, well connected and growing in processing and storage capabilities. The nature of these ubiquitous systems, however, also increases the risk of building systems that are undependable and potentially insecure. This paper investigates the use of autonomous agents combined with an intrusion tolerance technique for providing secure and dependable storage for ad hoc networks. The proposed approach is based on the fragmentation-redundancy-scattering (FRS) technique that is able to tolerate both accidental and intentional faults by fragmenting confidential information into insignificant fragments, and by scattering these fragments in a redundant fashion across a network. Two algorithms that are able to maintain a constant number of fragments replicas were developed for this study: one based on the game of\u00a0\u2026", "num_citations": "5\n", "authors": ["526"]}
{"title": "Dependable and Secure Storage in Pervasive Peer-to-Peer Systems\n", "abstract": " Architectural description languages (ADLs) are used within the software engineering community to support the description of high-level structure, or architecture, of software systems. A major advantage of this is the ability to analyze and evaluate trade-off among alternative solutions. This chapter will discuss the role of ADLs for representing and analyzing the architecture of software systems. Since ADLs vary considerably on the modeling aspects that they cover, we will focus our discussions on how ADLs support structuring dependability issues.", "num_citations": "5\n", "authors": ["526"]}
{"title": "Validating formal verification using safety analysis techniques\n", "abstract": " . The increased interest in the use of automated safety analysis is supported by the claim that manual safety analysis based on traditional techniques is error--prone, costly and not necessarily complete. It is also claimed that traditional techniques are not able to deal with the inherent complexities of software intensive systems. However, we show in this paper that a transition (from manual to automatic approaches) in the assessment process and technologies is accompanied by an inherent risk of obtaining false confidence, unless safeguards are provided. The safeguard presented in this paper integrates traditional deductive and inductive analysis techniques with model checking, a form of formal verification. The aim is to provide the safety analyst with a rigourous approach for the validation of formal models. The feasibility of the overall approach is illustrated in terms of a case study. Keywords: model checking, formal verification, traditional safety analysis techniques,...", "num_citations": "5\n", "authors": ["526"]}
{"title": "Safety analysis for requirements specifications: Methods and techniques\n", "abstract": " As the complexity of modern safety\u2014critical systems rises it is becoming increasingly evident that there is an intricate coupling between the different domains that make up such systems. The effective management of the interactions between the entities of these domains is essential to obtain high \u2014levels of safety. In this paper, we present a method for conducting safety analysis of requirements specifications that accommodates different domains. The method is based upon providing a common formal basis for the requirements and safety analyses, and an approach for explicitly identifying the potential causal relationships between these domains.", "num_citations": "5\n", "authors": ["526"]}
{"title": "Enabling Privacy-Preserving Sharing of Cyber Threat Information in the Cloud\n", "abstract": " Network threats often come from multiple sources and affect a variety of domains. Collaborative sharing and analysis of Cyber Threat Information (CTI) can greatly improve the prediction and prevention of cyber-attacks. However, CTI data containing sensitive and confidential information can cause privacy exposure and disclose security risks, which will deter organisations from sharing their CTI data. To address these concerns, the consortium of the EU H2020 project entitled Collaborative and Confidential Information Sharing and Analysis for Cyber Protection (C3ISP) has designed and implemented a framework (i.e. C3ISP Framework) as a service for cyber threat management. This paper focuses on the design and development of an API Gateway, which provides a bridge between end-users and their data sources, and the C3ISP Framework. It facilitates end-users to retrieve their CTI data, regulate data sharing\u00a0\u2026", "num_citations": "4\n", "authors": ["526"]}
{"title": "Identifying and handling uncertainties in the feedback control loop\n", "abstract": " In the feedback control loop, uncertainty is associated to different sources (e.g., the environment), and appears in different forms (e.g., as noise in variables or imperfections in techniques being used). In the MAPE-K control loop, uncertainty is normally handled by the decision maker at the Plan stage. However, depending on the complexity of the stages of the MAPE-K control loop, uncertainties need also to be handled at other stages, depending on the uncertainties associated with that stage. Moreover, uncertainties may also propagate between the stages of the control loop, which might affect how uncertainties are handled. In this position chapter, we claim that uncertainties should be identified and handled at the different stages of the feedback control loop. We propose an approach for the identification of internal and external sources of uncertainty for a given stage, and we promote error propagation analysis as a\u00a0\u2026", "num_citations": "4\n", "authors": ["526"]}
{"title": "Architectural reconfiguration using coordinated atomic actions\n", "abstract": " The provision of services despite the presence of faults is known as fault tolerance. One of its associated activities is fault handling, which aims to prevent the reactivation of already located faults. System reconfiguration, one of the steps of fault handling, is a complex cooperative activity involving several participants, thus should be designed in a structured fashion. This position paper describes how coordinated atomic actions (CAactions) and exception handling can be applied to the architectural reconfiguration of systems.", "num_citations": "4\n", "authors": ["526"]}
{"title": "Architecting Dependable Systems III\n", "abstract": " The structure of a system is what enables it to generate its behavior from the behaviors of its components. The architecture of a software system is an abstraction of the actual structure of that system. The identification of the system structure early in its development process allows us to abstract away from details of the system, thus assisting the understanding of broader system concerns. One of the benefits of a wellstructured system is the reduction of its overall complexity, which in turn should lead to a more dependable system. System dependability is defined as reliance that can be justifiably placed on the service delivered by the system. It has become an essential aspect of computer systems as everyday life increasingly depends on software. It is therefore a matter for concern that dependability issues are usually left until too late in the process of system development.The process of system structuring may occur at\u00a0\u2026", "num_citations": "4\n", "authors": ["526"]}
{"title": "An architectural approach for improving availability in web services\n", "abstract": " We address the problem of improving the reliability and availability of data oriented Web services. An architectural approach is proposed that incorporates fault-tolerant techniques, such as, self-checking and comparison for the components, and dynamic reconfiguration for the system. To demonstrate its applicability, a distributed application was designed and implemented that addresses the problem of obtaining dependable stock quotes from the Web. The system was implemented using Jini technology, and preliminary measurements confirmed the improved reliability and availability of the whole application.", "num_citations": "4\n", "authors": ["526"]}
{"title": "A Reflective Implementation of Software Architectures for Adaptive Systems\n", "abstract": " Adaptive systems should be able to adapt to changes that occur in their operating environment without any external human intervention. Software architectures for such systems should be flexible enough to allow components to change their pattern of collaboration depending on the environmental changes and goals of the system: considering that the capability of a system to be adaptable depends on how objects, as rigid entities, cooperate. This paper describes a reflective implementation of co-operative object-oriented architectures. The feasibility of the reflective implementation of software architectures is demonstrated in terms of a case study of a control system that has to adjust the height of a vehicle\u2019s suspension to different road conditions.", "num_citations": "4\n", "authors": ["526"]}
{"title": "Exception Handling in Real-Time Software from Specification to Design\n", "abstract": " In this paper we present a systematic method to cope with exception handling in the specification and design of real-time software. Guidelines for the construction of programs, directly, from a formal specification are also provided. The method proposed is an object-based approach which makes use of Petri Nets with Objects, and an object-based design notation which incorporates facilities for exception handling and active objects. To illustrate the proposed approach a case study based on a train set is presented.", "num_citations": "4\n", "authors": ["526"]}
{"title": "Software Engineering for Self-Adaptive Systems III. Assurances\n", "abstract": " Software Engineering for Self-Adaptive Systems III. Assurances - Kent Academic Repository Skip to main content kent-logo Logo Login Admin Dashboards Help Simple search | Advanced search Home Browse Latest additions Policies Accessibility Statement Software Engineering for Self-Adaptive Systems III. Assurances de Lemos, Rogerio and Ghezzi, Carlo and Garlan, David and Giese, Holger, eds. (2018) Software Engineering for Self-Adaptive Systems III. Assurances. Springer, Cham (doi:10.1007/978-3-319-74183-3) (The full text of this publication is not currently available from this repository. You may be able to access a copy if URLs are provided) (KAR id:65848) The full text of this publication is not currently available from this repository. You may be able to access a copy if URLs are provided. (Contact us about this Publication) Official URL https://doi.org/10.1007/978-3-319-74183-3 Item Type: Edited book \u2026", "num_citations": "3\n", "authors": ["526"]}
{"title": "An adaptive classification framework for unsupervised model updating in nonstationary environments\n", "abstract": " This paper introduces an adaptive framework that makes use of ensemble classification and self-training to maintain high classification performance in datasets affected by concept drift without the aid of external supervision to update the model of a classifier. The updating of the model of the framework is triggered by a mechanism that infers the presence of concept drift based on the analysis of the differences between the outputs of the different classifiers. In order to evaluate the performance of the proposed algorithm, comparisons were made with a set of unsupervised classification techniques and drift detection techniques. The results show that the framework is able to react more promptly to performance degradation than the existing methods and this leads to increased classification accuracy. In addition, the framework stores a smaller amount of instances with respect to a single-classifier approach.", "num_citations": "3\n", "authors": ["526"]}
{"title": "Software architectures for dependable systems: a software engineering perspective\n", "abstract": " Although there is a large body of research in dependability, architectural level reasoning about dependability is only just emerging as an important theme in software development. This is due to the fact that dependability concerns are often left until too late in the process of development. In addition, the complexity of emerging applications and the trend of building trustworthy systems from existing untrustworthy components are urging dependability concerns to be considered at the architectural level. This tutorial will present the current challenges and promising solutions for structuring dependable systems at the architectural level. In addition of providing basic concepts related to dependability and software architectures, the rest of the tutorial is presented in the context of the dependability technologies. Throughout the tutorial, case studies will be used to exemplify the key concepts.", "num_citations": "3\n", "authors": ["526"]}
{"title": "Diversity of safety arguments in the validation of a sounding rocket destruction system\n", "abstract": " This work describes an approach for the validation of a software system responsible for the destruction of the sounding rocket VS-40X. The process of validation uses three different techniques ranging from the automatic state exploration to the laborious failure analysis. The purpose of the exercise was to obtain diverse arguments in the provision of evidence that the safety properties of the sounding rocket destruction system are always maintained. The software system is modeled using a co-operative architecture, which contains abstractions for modeling and analyzing the interactions between components. The safety analysis is performed using model checking, a technique that exhaustedly explores the state space to determine whether the system satisfies a safety property. The combination of co-operative architectures and model checking has shown effective when modeling and analyzing the interactive behavior between components. However, caution must be taken over the (false) confidence that can be obtained when employing solely model checking for the safety analysis. In order to compensate this deficiency we have to seek diverse sources of evidence to build trustworthy arguments about the safety of the system. The model checking was substantiated using laborious deductive and inductive analysis techniques.", "num_citations": "3\n", "authors": ["526"]}
{"title": "Subjective safety analysis for software development\n", "abstract": " This paper presents a framework for subjective safety analysis of software requirements specifications for safety-critical systems. The framework incorporates fuzzy set modelling and evidential reasoning to assess the safety associated with safety requirements specifications. Fuzzy set theory is used to model each safety rule and evidential reasoning is employed to synthesize the information produced. Three basic parameters\u2014failure likelihood, consequence severity and failure consequence probability are used to analyse a safety rule (a basic element of a software requirements specification) in terms of membership functions. The subjective safety description associated with the safety rule is then mapped back to a scale of pre-defined safety expressions which are also characterised in terms of membership functions. Such a mapping results in the production of the safety evaluation associated with the safety rule, expressed in terms of the degrees to which the subjective safety description belongs to the pre-defined safety expressions. Such degrees represent uncertainty in the safety evaluation associated with the safety rule. The information produced for all safety rules can then be synthesized using an evidential reasoning approach to obtain the safety evaluation associated with the safety requirements specifications. The developed framework is capable of dealing with multiple safety analysts who make judgements on each safety rule.", "num_citations": "3\n", "authors": ["526"]}
{"title": "Extended real-time logic for hybrid systems controller design\n", "abstract": " Summary form only given. Hybrid systems are systems which combine both continuous variable and discrete event dynamics. Their complexity has risen to the extent that traditional approaches which dealt separately with the continuous and discrete aspects of such systems have become obsolete. Instead of proposing a novel formal notation for the specification of controllers for hybrid systems we have developed extended real time Logic (ERTL) as a formal notation for the modelling and analysis of relative and absolute timing properties of hybrid systems. ERTL embeds the discrete system model of the real time logic (RTL) of Jahanian and Mok (1986, 1988) into continuous time, and adds the ability to reason about piecewise continuous functions using predicates over real valued variables. While RTL is able to formally describe the behaviour of computational entities in the time domain, ERTL also permits the\u00a0\u2026", "num_citations": "3\n", "authors": ["526"]}
{"title": "An Approach to the Assessment of Requirements Specifications for Safety-Critical Systems\n", "abstract": " Requirements analysis plays a vital role in the development of safety-critical systems since any faults in the final requirements specification will corrupt the subsequent stages of system development. Experience in safety-critical systems has shown that faults in the requirements specifications can and do cause accidents. In this paper we deal with techniques that can be used to reduce (or eliminate) the possibility of a hazard occurring because of faults introduced during requirements analysis. We describe how requirements specifications are produced by exploiting a framework, and show how the quality of these specifications can be assessed by qualitative and quantitative means. To illustrate the proposed techniques an example based on a train set crossing is presented.", "num_citations": "3\n", "authors": ["526"]}
{"title": "Challenges in engineering self-adaptive authorisation infrastructures\n", "abstract": " As organisations expand and interconnect, authorisation infrastructures become increasingly difficult to manage. Several solutions have been proposed, including self-adaptive authorisation, where the access control policies are dynamically adapted at run-time to respond to misuse and malicious behaviour. The ultimate goal of self-adaptive authorisation is to reduce human intervention, make authorisation infrastructures more responsive to malicious behaviour, and manage access control in a more cost-effective way. In this chapter, we scope and define the emerging area of self-adaptive authorisation by describing some of its developments, trends, and challenges. For that, we start by identifying key concepts related to access control and authorisation infrastructures and provide a brief introduction to self-adaptive software systems, which provides the foundation for investigating how self-adaptation can\u00a0\u2026", "num_citations": "2\n", "authors": ["526"]}
{"title": "Evaluating self-adaptive authorisation infrastructures through gamification\n", "abstract": " Self-adaptive systems are able to modify their behaviour and/or structure in response to changes that occur to the system itself, its environment, or even its goals. In terms of authorisation infrastructures, self-adaptation has been shown to provide runtime capabilities for specifying and enforcing access control policies and subject access privileges, with a goal to mitigate insider threat. The evaluation of self-adaptive authorisation infrastructures, particularly, in the context of insider threats, is challenging because simulation of malicious behaviour can only demonstrate a fraction of the types of abuse that is representative of the real-world. In this paper, we present an innovative approach based on an ethical game of hacking, protected by an authorisation infrastructure. A key feature of the approach is the ability to observe user activity pre- and post-adaptation when evaluating runtime consequences of self-adaptation\u00a0\u2026", "num_citations": "2\n", "authors": ["526"]}
{"title": "Novel approaches in dependable computing\n", "abstract": " The complexity of systems and the way they work together will require new approaches for their development and operation, since conventional deterministic approaches may not be sufficient for enabling the provision of services expected from these systems. Several new approaches have emerged recently from different areas, such as, biologically inspired computing, agent technology, and software engineering, just to mention a few. Whether these approaches are able to meet the stringent requirements usually associated with dependable computing is still open to debate. Hence this Panel, which aims to discuss the promises and challenges of novel approaches for dependable computing. Next, in order to set the context of this Panel, some of these approaches are briefly presented.", "num_citations": "2\n", "authors": ["526"]}
{"title": "Design and Implementation of Evolvable Software Using Reflection\n", "abstract": " In object oriented programming the reuse of classes can be enhanced by explicitly considering cooperationsbetween objects. In this paper we show how a reflective implementation of a cooperative object oriented design is able to support evolution.", "num_citations": "2\n", "authors": ["526"]}
{"title": "Subjective Safety Analysis of Safety Requirements Specifications\n", "abstract": " This report presents a method for subjective safety analysis of safety requirements specifications of software for safety-critical systems, that are organised in an hierarchical structure. The methodology incorporates fuzzy set modelling and evidential reasoning to assess the safety associated with safety requirements specifications. Fuzzy set theory is used to model the primitive elements (ie safety rules) of the requirements specifications and an evidential reasoning approach is employed to synthesize the information produced. Three basic parameters-failure likelihood, consequence severity and failure consequence probability are used to analyse a safety rule in terms of membership functions. The subjective safety description associated with the safety rule is then mapped back to the defined safety expressions which are also characterised in terms of membership functions. Such a mapping results in the production of\u00a0\u2026", "num_citations": "2\n", "authors": ["526"]}
{"title": "Malicious changeload for the resilience evaluation of self-adaptive authorisation infrastructures\n", "abstract": " Self-adaptive systems are able to modify their behaviour and/or structure in response to changes that occur to the system, its environment, or even its goals. In terms of authorisation infrastructures, self-adaptation has shown to be a promising solution for enforcing access control policies and subject access privileges when mitigating insider threat. This paper describes the resilience evaluation of a self-adaptive authorisation infrastructure by simulating a case study related to insider threats. As part of this evaluation, a malicious changeload has been formally defined in order to describe scenarios of abuse in access control. This malicious changeload was then used to stimulate self-adaptation within a federated authorisation infrastructure. The evaluation confirmed the resilience of a self-adaptive authorisation infrastructure in handling abuse of access under repeatable conditions by consistently mitigating abuse\u00a0\u2026", "num_citations": "1\n", "authors": ["526"]}
{"title": "Human in the loop: what is the point of no return?\n", "abstract": " The main goal of any feedback control system is essentially to remove humans from the loop. This has always been the goal in the engineering of control systems. The MAPE-K loop is the embodiment of a feedback control loop in self-adaptive software systems, but the complete removal of humans from the control loop has not been thoroughly debated. One of the reasons is that, software systems are social-technical systems, and as such, humans need to be considered right from the inception of such systems, otherwise their deployment is bound to fail. However, as software self-adaptation progresses, enabling to place higher assurances on the deployment of these systems to the point humans become dispensable, some ethical questions need to be raised. Similar questions have been raised in past when the first automatic systems became intrinsic to the industrial fabric. The difference between then and now is\u00a0\u2026", "num_citations": "1\n", "authors": ["526"]}
{"title": "Microservices architectures and technical debt: A self-adaptation view\n", "abstract": " In this paper, we discuss the impact that technical debt (TD) may have on MSA regarding some quality attributes, like security, and hypothesise how self-adaptation could be useful in dealing with some aspects of TD.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Dynamic Management of Integration Testing for Self-Adaptive Systems\n", "abstract": " Dynamic Management of Integration Testing for Self-Adaptive Systems - Kent Academic Repository Skip to main content kent-logo Logo Login Admin Dashboards Help Simple search | Advanced search Home Browse Latest additions Policies Dynamic Management of Integration Testing for Self-Adaptive Systems da Silva, Carlos Eduardo, de Lemos, Rog\u00e9rio (2013) Dynamic Management of Integration Testing for Self-Adaptive Systems. In: Workshop on Dependable in Adaptive and Self-Managing Systems (WDAS 2013). . ISBN 978-85-7669-274-4. (The full text of this publication is not currently available from this repository. You may be able to access a copy if URLs are provided) (KAR id:42996) The full text of this publication is not currently available from this repository. You may be able to access a copy if URLs are provided. (Contact us about this Publication) Official URL http://www.lbd.dcc.ufmg.br/colecoes/ladc/\u2026", "num_citations": "1\n", "authors": ["526"]}
{"title": "Architecting dependable systems VII\n", "abstract": " As software systems become increasingly ubiquitous, issues of dependability become ever more crucial. Given that solutions to these issues must be considered from the very beginning of the design process, it is clear that dependability and security have to be addressed at the architectural level. This book, as well as its six predecessors, was born of an effort to bring together the research communities of software architectures, dependability, and security. This state-of-the-art survey contains expanded, peer-reviewed papers based on selected contributions from the Workshop on Architecting Dependable Systems (WADS 2009), held at the International Conference on Dependable Systems and Networks (DSN 2009), as well as a number of invited papers written by renowned experts in the area. The 13 papers are organized in topical sections on: mobile and ubiquitous systems, architecting systems, fault management, and experience and vision.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Towards the use of dynamic workflows for coordinating self-adaptation of software systems\n", "abstract": " The self-adaptation of software system is a complex process that depends on several factors that may change during the system operational lifetime. Hence, the process for coordinating the self-adaptation should also be adaptable to changes that may occur during run-time. As the means for coordinating the self-adaptation process of software systems, we are applying workflows that are dynamically generated for dealing with the variability associated with the self-adaptation process. In this context, this research aims to define and develop techniques for automatically generate workflows for coordinating the self-adaptation of software systems. For demonstrating the feasibility of the proposed approach, architectural reconfiguration of software systems is used as an example, whereby the reconfiguration is managed by workflows that are dynamically generated depending on the availability of resources.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Artificial iImmune systems for data fusion: A novel biologically inspired approach\n", "abstract": " This paper considers the notion of the immune system as an information processing system for the purpose of data fusion. As the study of the brain inspired the development of neural networks, the immune system has inspired the development of a wide variety of algorithms. In this position paper, we argue how the various processes of molecular interaction and fusion in the biological immune system can produce analogous behavior for the fusing of data in an artificial context. We provide a mapping between several analogous immunological and artificial immune processes to illustrate this point, and discuss what an immune inspired data fusion system might look like.", "num_citations": "1\n", "authors": ["526"]}
{"title": "08031 Abstracts Collection--Software Engineering for Self-Adaptive Systems\n", "abstract": " From 13.01. to 18.01. 2008, the Dagstuhl Seminar 08031``Software Engineering for Self-Adaptive Systems''was held in the International Conference and Research Center (IBFI), Schloss Dagstuhl. During the seminar, several participants presented their current research, and ongoing work and open problems were discussed. Abstracts of the presentations given during the seminar as well as abstracts of seminar results and ideas are put together in this paper. The first section describes the seminar topics and goals in general. Links to extended abstracts or full papers are provided, if available.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Architecting Fault Tolerance using Abstractions\n", "abstract": " This paper discusses how architectural abstractions can be effective in developing fault-tolerant software systems. Depending on the fault model and the resources available, different abstractions can be employed in order to represent explicitly issues that are related to fault tolerance, such as, error detection, and error and fault handling. These architectural abstractions, and their internal views, can be instantiated into concrete components and connectors for designing fault-tolerant software architectures. Since structural and behavioural properties associated with these abstractions are formally specified, the process of verifying and validating software architectures can be automated.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Dependable Computing\n", "abstract": " The dependability of systems is known as the reliance that can justifiably be placed on the service the system delivers. Dependability has become an important aspect of computer systems since everyday life increasingly depends on them, which has left us vulnerable to their potential malfunction. The causes to these malfunctions can potentially be introduced in every step of their development, deployment and operation. Hence the basic concerns associated with dependable systems: how to build them? What design principles are involved? How should these systems be evaluated?The basic concepts and taxonomy associated with dependability were recently presented in a paper by Avizienis, Laprie, Randell and Landwehr on the first issue of the IEEE Transactions of Dependable and Secure Computing. It is clear from this key publication that dependability is in fact an integrating concept that encompasses several main attributes: availability, reliability, safety, integrity, and maintainability. When addressing security, confidentiality is an additional attribute, which allows to define security as a composite attribute of confidentiality, integrity and availability. There are several means for attaining these attributes, which can be grouped into four major categories. Rigorous design, which aims at preventing the occurrence or the introduction of faults. Verification and validation, which aims at reducing the number or severity of faults. Fault tolerance, which aims at delivering correct service despite the presence of faults. System evaluation, which aims at estimating the present number, the future incidence, and the likely consequences of faults. Dependability\u00a0\u2026", "num_citations": "1\n", "authors": ["526"]}
{"title": "Explicit representation of exception handling in the development of dependable component-based systems\n", "abstract": " Exception handling is a structuring technique that facilitates the design of systems by encapsulating the process of error recovery. In this paper, we present a systematic approach for incorporating exceptional behaviour in the development of component-based software. The premise of our approach is that components alone do not provide the appropriate means to deal with exceptional behaviour in an effective manner. Hence the need to consider the notion of collaborations for capturing the interactive behaviour between components, when error recovery involves more than one component. The feasibility of the approach is demonstrated in terms of the case study of the mining control system.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Representing Exceptional Behaviour at the earlier Phases of Software Development\n", "abstract": " Exception handling is a structuring technique that facilitates the design of systems by encapsulating the process of error recovery. Exception handling has been traditionally associated with the design phase of the software lifecycle, during which all the effort is made to protect the application software from faults that may be introduced during requirements, design, and implementation, or can occur at the support level. The consequence of such approach is that the appropriate context in which errors should be detected and recovered is lost also it is lost the potential correlation that might exist between the error states of the different contexts and how these should be recovered in an optimised way. Dealing with concurrent manifestations of several faults at different phases of system development has been recognised as a serious problem that has not received enough attention/Avizienes 97/. Ideally, for each identified phase of the software lifecycle, a class of exceptions should be defined depending on the abstraction level (or context) of the software system being modelled and analysed, as represented in figure 1. As the software development progresses, new exceptions are identified and their respective handlers specified. However, the exceptions identified at the different phases can be causally and timely related, which might constraint the specification of their respective handlers. Moreover, it might be the case that the rationalisation of exceptions might enable the usage of a single handler for different classes of exceptions. At every phase of the software development failure assumptions have to be revised once the system structure is\u00a0\u2026", "num_citations": "1\n", "authors": ["526"]}
{"title": "Safety analysis techniques for validating formal models during verification\n", "abstract": " The increased interest in the use of automated safety analysis is supported by the claim that safety analysis based on traditional techniques (predominantly manual) is error-prone, costly and not necessarily complete. It is also claimed that traditional techniques are not able to deal with the inherent complexities of software intensive systems. However, we show in this paper that a transition (from manual to automatic approaches) in the assessment process and technologies is accompanied by an inherent risk of obtaining false confidence, unless safeguards are provided. The safeguard presented in this paper integrates traditional deductive and inductive analysis techniques with model checking, a form of formal verification. The aim is to provide the safety analyst with a rigorous approach for the validation of formal models.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Solution Concepts for the Optimal Selection of Software Components\n", "abstract": " We consider the problem of the optimal selection of software components from a library of components with respect to some non-functional attributes. Two potential solutions are presented, one based on utility theory, and the other based on a game theoretic formulation of the problem.", "num_citations": "1\n", "authors": ["526"]}
{"title": "A Reflective Approach for Describing Co-operation Between Objects\n", "abstract": " A reflective approach for describing co-operation between objects - OpenGrey fra | eng OpenGrey Open System for Information on Grey literature in Europe Home Search Subjects Partners Export Help Search XML To cite or link to this reference: http://hdl.handle.net/10068/623092 Title : A reflective approach for describing co-operation between objects Authors : Tramontana, E. ; De Lemos, R. ; Corporate author : Newcastle upon Tyne Univ. (United Kingdom). Computing Science ; Publication year : 1999 Language : English ; Pagination/Size : 19 p. ; SIGLE classification : 09H - Computer software, programming ; Keyword(s) : REFLECTION ; REUSABILITY ; Document type : R - Report ; Report number : NUTU-CS-TR--663 ; Other identifier : GB ; GB_ 2000:7625 ; handle : http://hdl.handle.net/10068/623092 Provenance : SIGLE ; Get a copy : BLDSC - British Library Document Supply Centre Availability : Available from \u2026", "num_citations": "1\n", "authors": ["526"]}
{"title": "Analysis of Safety Properties of a System from the Viewpoint of its Components Interactions\n", "abstract": " (1999) Analysis of Safety Properties of a System from the Viewpoint of its Components Interactions. In: Proceedings of the 9th Brazilian Symposium on Fault-Tolerant Computers (SCTF).. pp. 35-48., Campinas, Brazil (The full text of this publication is not currently available from this repository. You may be able to access a copy if URLs are provided)(KAR id: 21803)", "num_citations": "1\n", "authors": ["526"]}
{"title": "Formal techniques for requirements analysis for safe reactor control\n", "abstract": " [en] Requirements analysis plays a vital role in software development, since defective requirements specifications may introduce faults during subsequent phases of software development which can lead to accidents. In this paper we discuss a methodology, based on formal notations, to support requirements analysis for safety-critical systems. The proposed methodology consists of a framework whose phases are based on levels of abstraction which follow from a general structure for process control systems, a set of notations appropriate for the issues to be analysed at each phase of the framework and a hierarchical structure for the product of the analysis. The intention is to locate and remove faults during the requirements phase, rather than later in development or during the operational lifetime of the system. Some aspects of the methodology are illustrated using an example based on a nuclear reactor system.(Author)", "num_citations": "1\n", "authors": ["526"]}
{"title": "Software Architectures for Dependable and Distributed Systems\n", "abstract": " This position paper describes the current state-of-the-art and the future vision of software architectures for dependable systems. The study of software architectures is a relatively new field in software engineering, which has emerged from the need of modelling and analysing software systems at a very high level of abstraction. The current trend of building trustworthy systems from existing untrustworthy components, such, commercial off-the-shelf components (COTS), legacy systems, and component systems of systems-ofsystems, has been a major motivation to consider the dependability aspect of systems at the architectural level.", "num_citations": "1\n", "authors": ["526"]}
{"title": "Reflective Architecture Supporting Evolution: a Case Study\n", "abstract": " Evolution of object oriented systems is di cult to achieve when systems lack separation of concerns. To attain such a separation, it is important, among other things, that functional and interaction code are not mixed, and application is not entangled with support. A variant of collaborations (CO actions) is used to describe interactions between objects. Moreover, the evolution of a collaborative design is enhanced by de ning a re ective architecture which separates objects from their collaborations, and application from support code. The paper explains the re ective architecture in terms of a case study, and shows how evolution can be easily attained when both collaborations and objects need to be modi ed.", "num_citations": "1\n", "authors": ["526"]}