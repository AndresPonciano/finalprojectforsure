{"title": "Barriers to Adopting Agile Practices When Developing Medical Device Software\n", "abstract": " Agile methodologies such as XP and Scrum are founded upon the four values and twelve principles of agile software development. A software development project is only considered to be truly agile if these values and principles are followed. However, software developed for use in medical devices must be regulatory compliant and this can make the process of following a single agile methodology such as XP difficult to achieve. This paper outlines how we identified the barriers to agile adoption in the medical device software domain through performing a survey. These barriers include: lack of documentation; maintaining traceability; regulatory compliance; lack of up front planning and the process of managing multiple releases. Based on this research recommendations are also made as to how these barriers can be overcome.", "num_citations": "72\n", "authors": ["2249"]}
{"title": "Standalone software as an active medical device\n", "abstract": " With the release of the latest European Medical Device Directive (MDD) standalone software can now be classified as an active medical device. Consequently the methods used to ensure device safety and reliability needs to be reviewed. IEC 62304 is the current software development lifecycle framework followed by medical device software developers but important processes are beyond the scope of IEC 62304. These processes are covered by additional standards. However since the MDD became mandatory these additional standards are not comprehensive enough to ensure the reliability of an active medical device consisting of only software. By employing software process improvement techniques this software can be developed and validated to ensure it performs the required task in a safe and reliable way.", "num_citations": "31\n", "authors": ["2249"]}
{"title": "An agile implementation within a medical device software organisation\n", "abstract": " Three surveys conducted over a 6 year period revealed that medical device software organisations have difficulties in the area of requirements management, namely accommodating changes in requirements. Medical device software is traditionally developed in accordance with a plan driven software development lifecycle (SDLC). These SDLCs are rigid and inflexible to changes once the requirements management stage has been completed. Agile methods are gaining momentum in non-regulated industries but as of yet, the adoption of these methods in regulated industries such as the medical device software domain remains low. This study presents an implementation of agile methods within a medical device software development organisation based in Ireland. This implementation involved integrating agile practices with a traditional plan driven SDLC. Upon completing this implementation within a\u00a0\u2026", "num_citations": "26\n", "authors": ["2249"]}
{"title": "Software process improvement to assist medical device software development organisations to comply with the amendments to the medical device directive\n", "abstract": " A recent revision to the European Medical Device Directive (MDD) 2007/47/EC made 14 amendments to the original directive (93/42/EEC). A number of these changes directly affect the development of software for use in healthcare. The most significant change in relation to medical device software development is that stand-alone software is now seen as an active medical device and should be developed following state-of-the-art medical device software development processes. State-of-the-art medical device software processes are understood within the industry as developing software in accordance with IEC 62304 and standards that are aligned with it. This study identifies how changes to the MDD affect medical device software development companies and recommendations are made as to how medical device software development companies can conform to the latest regulatory requirements. Additionally\u00a0\u2026", "num_citations": "24\n", "authors": ["2249"]}
{"title": "Adopting agile practices when developing software for use in the medical domain\n", "abstract": " Non\u2010safety critical software developers have been reaping the benefits of adopting agile practices for a number of years. However, developers of safety critical software often have concerns about adopting agile practices. Through performing a literature review, this research has identified the perceived barriers to following agile practices when developing medical device software. A questionnaire\u2010based survey was also conducted with medical device software developers in Ireland to determine the barriers to adopting agile practices. The survey revealed that half of the respondents develop software in accordance with a plan\u2010driven software development lifecycle and that they believe that there are a number of perceived barriers to adopting agile practices when developing regulatory compliant software such as being contradictory to regulatory requirements, insufficient coverage of risk management activities and\u00a0\u2026", "num_citations": "22\n", "authors": ["2249"]}
{"title": "Barriers to using agile software development practices within the medical device industry\n", "abstract": " Non-safety critical software developers have been reaping the benefits of adopting agile practices for a number of years. However, developers of safety critical software often have concerns about adopting Agile practices. Through a literature review this research identified the perceived barriers to ollowing agile practices when developing medical device software. A questionnaire based survey was also conducted with medical device software developers in Ireland to determine what the actual barriers are to adopting agile practices. In addition a comparison is performed between the perceived and actual barriers and the results are reported.", "num_citations": "18\n", "authors": ["2249"]}
{"title": "Changes to the International Regulatory Environment\n", "abstract": " Since 2010, two significant international regulations regarding medical device development have come into force, the amendment to the European Union (EU) Medical Device Directive (MDD) 2007/47/EC and the United States (US) Food and Drug Administration (FDA) final rule on Medical Device Data Systems (MDDS). Adherence to these regulations is mandatory to be able to market a medical device in the respective region. The ability to understand these regulations and apply them to a development project can be difficult. The MDDS final rule changes the safety classification of a number of devices from Class III-high risk to Class I-low risk. The aim of this regulation is to make the process of achieving regulatory approval for manufacturers easier. The MDD aims to provide guidance for the development of medical devices to be marketed for use within the EU. It also provides defined pathways which\u00a0\u2026", "num_citations": "11\n", "authors": ["2249"]}
{"title": "Integrating agile practices with a medical device software development lifecycle\n", "abstract": " The rate at which agile software development practices are being adopted is growing rapidly. Agile software development practices and methodologies appear to offer the silver bullet which can solve the problems associated with following plan driven software development lifecycles. Agile software development practices offer the possibility of achieving lower development costs, increased efficiency and improved software quality. However, there is currently a low rate of publicly available information that suggests there is widespread adoption of agile practices within the medical device software domain. This is largely due to the fact that software developed for medical devices includes challenges not faced when developing non safety critical software. As a result of these challenges, medical device software is typically developed using plan driven software development lifecycles. However, such lifecycles are quite rigid and cannot accommodate changes easily. Previous research has revealed that medical device software development projects can benefit from adopting agile practices whilst still maintaining the discipline associated with following plan driven development lifecycles. This paper outlines the challenges faced by developers when developing medical device software and how shortcomings in both agile and plan driven approaches can be resolved by following a mixed method approach to medical device software development.", "num_citations": "11\n", "authors": ["2249"]}
{"title": "Designing physics video hooks for science students\n", "abstract": " This paper offers an insight into the design structure of physics video hooks that were developed by the Science Education Resource design team in the school of education (SOE) in National University of Ireland, Galway (NUI Galway). A hook, is an instructional technique used to stimulate student attention (Hunter 1994, Lemov 2010), interest (Jewett 2013) and engagement (McCrory 2011, Riendeau 2013). The physics video hooks followed a design framework that is illustrated below by breaking down the centre of gravity (COG) hook. Various design principles and elements embedded within the COG hook are presented with examples and the time they occur within the video. The intention of this article is that the design can be replicated and modified to aid teachers and designers in the development of a multitude of classroom based multimedia resources.", "num_citations": "9\n", "authors": ["2249"]}
{"title": "How can software SMEs become medical device software SMEs\n", "abstract": " The amount of software content within medical devices has grown considerably over recent years and will continue to do so as the level of complexity of medical devices increase. This is driven by the fact that software is introduced to produce sophisticated medical devices that would not be possible using only hardware. This therefore presents opportunities for software development SMEs to become medical device software development organisations. However, some obstacles need to be addressed and overcome in order to make the transition from being a generic software development organisation to becoming a medical device software development organisation. This paper describes these obstacles and how research that is currently being performed within the Regulated Software Research Group in Dundalk Institute of Technology may be used to assist with this transition.", "num_citations": "8\n", "authors": ["2249"]}
{"title": "Adopting Agile Practices when Developing Medical Device Software\n", "abstract": " Agile methods are gaining momentum amongst the developers of non-safety critical software. They offer the ability to improve development time, increase quality and reduce development costs. Despite this, the rate of adoption of agile methods within safety critical domains remains low. On face value agile methods appear to be contradictory to regulatory requirements. However while they may appear contradictory, they align on key values such as the development of the highest quality software. To demonstrate that agile methods could in fact be adopted when developing regulatory compliant software they were implemented on a medical device software development project. This implementation showed that not only can agile methods be successfully followed, but it also revealed that benefits were acquired. For example, the medical device software development project was completed 7% faster when following agile methods, when compared to if it had been completed in accordance with a plan-driven approach. While this implementation is confined to a single project, within a single organization it does strengthen the belief that adopting agile methods within regulated domains can reap the same benefits as those acquired in non-safety critical domains.", "num_citations": "7\n", "authors": ["2249"]}
{"title": "Integrating Agile Practices with a Medical Device SDLC.\n", "abstract": " The rate at which agile software development practices are being adopted is growing rapidly. Agile software development practices and methodologies appear to offer the silver bullet which can solve the problems associated with following plan driven software development lifecycles. Agile software development practices offer the possibility of achieving lower development costs, increased efficiency and improved software quality. However, there is currently a low rate of publicly available information that suggests there is widespread adoption of agile practices within the medical device software domain. This is largely due to the fact that software developed for medical devices includes challenges not faced when developing non safety critical software. As a result of these challenges, medical device software is typically developed using plan driven software development lifecycles. However, such lifecycles are quite rigid and cannot accommodate changes easily. Previous research has revealed that medical device software development projects can benefit from adopting agile practices whilst still maintaining the discipline associated with following plan driven development lifecycles. This paper outlines the challenges faced by developers when developing medical device software and how shortcomings in both agile and plan driven approaches can be resolved by following a mixed method approach to medical device software development", "num_citations": "7\n", "authors": ["2249"]}
{"title": "Integrating agile practices with plan-driven medical device software development\n", "abstract": " The popularity of Agile software development is growing rapidly with an increasing number of projects being developed following Agile methodologies such as Scrum and XP [1]. Research has revealed that following Agile practices when developing software can have a significantly positive impact in reducing development time, reducing cost and increasing overall quality [2-4]. Whilst Agile practices can have a positive impact on a development project there are incompatibilities between Agile methodologies and the plan driven approaches followed when developing safety critical software [5, 6]. However, it has been recognised that \u201cformal techniques may be used in an agile way\u201d [5]. Case studies have been performed in organisations developing safety critical software which validate this statement [7-9]. This Ph.D. is focusing on the area of medical device software development and integrating Agile software development principles into traditional plan driven lifecycles for use in developing medical device software.", "num_citations": "7\n", "authors": ["2249"]}
{"title": "Anchoring ocean literacy: participatory iBook design within secondary science classrooms\n", "abstract": " This article elucidates a participatory design process in which a prototype iBook was embedded within the context of secondary science classrooms through multiple interventions. The fundamental design intention of the iBook is to increase students\u2019 ocean literacy in a curriculum that lacks marine science. Two e-learning ecologies were identified across two schools; an iPad school and non-iPad school. Participants include two second-year science classes (14\u201315-year-olds) and their respective teachers. Science teachers were asked to implement the iBook, based on their appraisal, as an accompaniment to their lessons throughout three interventions. Qualitative data took the form of teacher interviews, teacher reflections and student exit cards. Findings illuminate emergent design principles of iBooks that enthuse students with content; mainly to draw upon their personal interest corresponding to interactive\u00a0\u2026", "num_citations": "6\n", "authors": ["2249"]}
{"title": "Improving safety in medical devices from concept to retirement\n", "abstract": " As with many domains the use of software within the healthcare industry is on the rise [1, 2] within the last 20 years.", "num_citations": "5\n", "authors": ["2249"]}
{"title": "Hooked on science\n", "abstract": " In this article, Martin McHugh and Veronica McCauley present a modern and interesting way to get students more engaged during lessons. They describe a detailed procedure that can be followed by any teacher or adapted to the teacher\u2019s own needs and plans. As science teachers may occasionally find it difficult to make science lessons exciting, the idea of using videos as hooks may be a great help. This idea can easily be applied to almost every science classroom or lab, even using students\u2019 own smartphones or cameras. The fact that these short science videos are produced by the students themselves offers extra added value.", "num_citations": "4\n", "authors": ["2249"]}
{"title": "Getting hooked on physics!\n", "abstract": " A number of papers in this journal have dealt with the idea of using hooks in physics instruction. A hook, as the name suggests, engages students in learning by triggering their attention and interest. Hooks can be any type of pedagogical approach\u2014a question, a demonstration, a puzzle or video. They are generally short and center on the most interesting aspects of a topic. Here we focus on using Conceptual Change (CC) teacher-led demonstrations as the pedagogical hook approach. Conceptual Change is an instructional method mentioned by a number of authors to stimulate interest among learners. This is where an educator presents an issue or topic that has associated misconceptions. As the teacher explains the truth behind the concept, cognitive conflict occurs and the students\u2019 initial perceptions are challenged and ideas start to change. However, the instruction used in association with the demonstrations\u00a0\u2026", "num_citations": "4\n", "authors": ["2249"]}
{"title": "Challenges Experienced by Medical Device Software Organisations while following a Plan-driven SDLC\n", "abstract": " Medical device software organisations face challenges not faced by generic software development organisations. These challenges include the adherence to regulatory controls. Regulatory bodies require medical device software organisations to provide objective evidence that the software they are developing is safe and reliable. To produce this, regulatory bodies require a number of deliverables which must be achieved. However, they do not dictate which Software Development Life Cycle (SDLC) must be followed in order to achieve these deliverables. Despite not dictating which SDLC must be followed when developing medical device software, organisations typically develop their software in accordance with a Plan-Driven software development lifecycle. By conducting semi structured interviews with seven medical device software organisations, we gained a deeper insight into how the challenges experienced impact on the development of medical device software. The interviews also attempted to learn from the participants how they believe the challenges experienced can be overcome. The aim of this paper is to explain the methodology used to perform interviews with medical device software organisations and to present these interviews.", "num_citations": "4\n", "authors": ["2249"]}
{"title": "US FDA releases final rule on Medical Device Data Systems-what does this mean for device manufacturers?\n", "abstract": " On 16 April 2011, the US Food and Drug Administration\u2019s (FDA\u2019s) final rule on medical device data systems (MDDSs) came into force. This rule attempts to remove the uncertainty surrounding the safety classification of certain information technology systems used in healthcare. Devices that now meet the criteria of being an MDDS are classified as Class I (general controls). However, this final ruling explicitly precludes specific software applications that meet the definition of an MDDS, such as electronic health record applications and computerised physician order entry applications, as being beyond the scope of an MDDS. Similarly, ambiguity still remains surrounding mobile device applications. The purpose of this article by Martin McHugh, Fergal McCaffery and Valentine Casey is to provide an overview of the FDA\u2019s final rule on the safety classification of an MDDS, how this rule has been amended in comparison to the proposed rule and what this rule means for MDDS manufacturers. In addition, the authors will be discussing the challenges medical device manufacturers face in the changing regulatory environment.", "num_citations": "4\n", "authors": ["2249"]}
{"title": "How amendments to the medical device directive affect the development of medical device software\n", "abstract": " A recent revision to the European Medical Device Directive (MDD 2007/47/EC) made fourteen amendments to the original directive (93/42/EEC). A number of these changes directly affect the development of software for use in healthcare. The most significant change in relation to medical device software development is that standalone software is now seen as an active medical device. Prior to this amendment medical device software was developed in accordance with the IEC 62304 standard. However, IEC 62304 is not sufficiently comprehensive to provide guidance in the development of standalone software as an active medical device. Medi SPICE is currently being developed to fill the gaps left by IEC 62304 in developing standalone software as an active medical device and to provide medical device software developers a single point of reference for developing software for use in healthcare.", "num_citations": "4\n", "authors": ["2249"]}
{"title": "RAw Communications and Engagement (RACE): Teaching Science Communication Through Modular Design\n", "abstract": " This project is motivated by an increasing demand from public bodies and research funding agencies for outreach and public engagement, believing this to be a path towards enhanced public understanding, recruitment and research with impact. Yet many STEM (Science, Technology, Engineering and Mathematics) graduates and professionals lack the appropriate communication skills required to engage with the public. To address some of these issues, the project RACE (RAw Communication and Engagement) was jointly initiated by universities and industrial partners across Europe. Through the design and implementation of adaptable modules incorporating content knowledge, scientific communication and public engagement skills, this international project aims to equip students and researchers alike to ground their work within the wider global society and communicate their research with public\u00a0\u2026", "num_citations": "2\n", "authors": ["2249"]}
{"title": "\u201cTo see ourselves as others see us\u201d: Post-primary school students\u2019 drawings of scientists before and after participation in a career orientation programme\n", "abstract": " The stereotypical image of a scientist has negative consequences in terms of promoting a perception of scientists and relevant careers that is both positive and realistic. This study employs a modified Draw a Scientist Test (DAST) to investigate the perceptions held by post-primary school students in Ireland about scientists and their work. Participants completed the DAST before and after partaking in a Career Orientation Programme that aimed to promote careers in science and portray scientists and their working life realistically.", "num_citations": "2\n", "authors": ["2249"]}
{"title": "The Impact of Regulatory Changes on the Development of Mobile Medical Apps\n", "abstract": " Mobile applications are being used to perform a wide variety of tasks in day-to-day life, ranging from checking email to controlling your home heating. Application developers have recognized the potential to transform a smart device into a medical device, by using a mobile medical application ie a mobile phone or a tablet. When initially conceived these mobile medical applications performed basic functions eg BMI calculator, accessing reference material etc.; however, increasing complexity offers clinicians and patients a range of functionality. As this complexity and functionality increases, so too does the potential risk associated with using such an application. Examples include any applications that provide the ability to inflate and deflate blood pressure cuffs, as well as applications that use patient-specific parameters and calculate dosage or create a dosage plan for radiation therapy. If an unapproved mobile\u00a0\u2026", "num_citations": "2\n", "authors": ["2249"]}
{"title": "Medical Device Software and Technology: the past, present and future\n", "abstract": " Early medical devices were crude and often dangerous. These devices had little complexity and only performed basic tasks. However, with advances in technology also came an increase in the complexity and functionality of medical devices. Medical devices became more and more relied upon in every day healthcare. As with technology in other industries, the medical device industry recognised the benefit of incorporating software into hardware devices. Software was first used in medical devices in in the 1980\u2019s. At this time, the software typically performed rudimentary functions such as turning a device on or off, or displaying limited information such as a patient\u2019s temperature. However, through advances in technology, the role of software has expanded well beyond its humble beginnings. A number of tasks traditionally performed manually by clinicians are now being performed by automated software driven\u00a0\u2026", "num_citations": "1\n", "authors": ["2249"]}
{"title": "Challenges experienced by medical device software development organizations while following a plan-driven software development life cycle\n", "abstract": " Medical device software organisations face challenges not faced by generic software development organisations. These challenges include the adherence to regulatory controls. Regulatory bodies require medical device software organisations to provide objective evidence that the software they are developing is safe and reliable. To produce this, regulatory bodies require a number of deliverables which must be achieved. However, they do not dictate which Software Development Life Cycle (SDLC) must be followed in order to achieve these deliverables. Despite not dictating which SDLC must be followed when developing medical device software, organisations typically develop their software in accordance with a Plan-Driven software development lifecycle. By conducting semi structured interviews with seven medical device software organisations, we gained a deeper insight into how the challenges experienced impact on the development of medical device software. The interviews also attempted to learn from the participants how they believe the challenges experienced can be overcome. The aim of this paper is to explain the methodology used to perform interviews with medical device software organisations and to present these interviews.", "num_citations": "1\n", "authors": ["2249"]}