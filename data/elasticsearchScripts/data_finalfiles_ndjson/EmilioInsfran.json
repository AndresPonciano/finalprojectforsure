{"title": "A systematic review of usability evaluation in web development\n", "abstract": " The challenge of developing more usable Web applications has motivated the appearance of a number of techniques, methods and tools to address Web usability issues. Although there are many proposals for supporting the development of usable Web applications, many developers are not aware of them and many organizations do not properly apply them. This paper reports on a systematic review of the use of usability evaluation methods in Web development. The objective of the review is to investigate what usability evaluation methods have been employed by researchers to evaluate Web artifacts and how they were employed. A total of 51 research papers have been reviewed from an initial set of 410 papers. The results show that 45% of the papers reviewed reported the use of evaluation methods specifically crafted for the Web and that the most employed method is user testing. In addition, the\u00a0\u2026", "num_citations": "89\n", "authors": ["583"]}
{"title": "Requirements Modeling for Multi-Agent Systems\n", "abstract": " Different approaches for building modern software systems in complex and open environments have been proposed in the last few years. Some efforts try to take advantage of the agent-oriented paradigm to model/engineer complex information systems in terms of independent agents. These agents may collaborate in a computational organization (Multi-Agent Systems, MAS) by playing some specific roles having to interact with others in order to reach a global or individual goal. In addition, due to the complex nature of this type of systems, dealing with the classical functional and structural perspectives of software systems are not enough. The organizational perspective, that describes the context where these agents need to collaborate, and the social behavior perspective, that describes the different \"intelligent\" manners in which these agents can collaborate, need to be identified and properly specified. Several methodologies have been proposed to drive the development of MAS (e.g., Ingenias, Gaia, Tropos) although most of them mainly focus on the design and implementation phases and do not provide adequate mechanisms for capturing, defining, and specifying software requirements. Poor requirements engineering is recognized as the root of most errors in current software development projects, and as a means for improving the quality of current practices in the development of MAS, the main objective of this work is to propose a requirements modeling process to deal with software requirements covering the functional, structural, organizational, and social behavior perspectives of MAS. The requirements modeling proposed is developed\u00a0\u2026", "num_citations": "14\n", "authors": ["583"]}
{"title": "An architecture-oriented model-driven requirements engineering approach\n", "abstract": " Software development processes have become highly complex with the increase in the complexity of software systems and their architectures. It is widely recognized that requirements engineering (RE) is a critical part of this process, along with the design of a system's software architecture with which to satisfy requirements. In this paper, we aim to provide a methodological approach for Architecture-oriented Model-Driven Requirements Engineering. We believe that considering architectural aspects for modeling requirements in a model-driven approach will provide software developers with several benefits such as an improvement in traceability, better architecture and implementation coherence. This paper presents the definition of a process which is based on the OpenUP method, including its activities, roles, and work products. We also provide an example of the use of this approach in a SOA-based software\u00a0\u2026", "num_citations": "13\n", "authors": ["583"]}
{"title": "An automated approach for architectural model transformations\n", "abstract": " Software architectures are frequently represented as large models where many competing quality attributes have to be taken into account. In this context, there may be a large number of possible alternative architectural transformations that the architecture designer has to deal with. The complexity and dimensions of the solution space make that finding the most appropriate architecture considering several quality attributes is a challenging and time-consuming task. In this paper, we present a model transformation framework designed to automate the selection and composition of competing architectural model transformations. We also introduce a case study showing that this framework is useful for rapid prototyping through model transformations.", "num_citations": "12\n", "authors": ["583"]}
{"title": "Transformaci\u00f3n de Especificaci\u00f3n de requisitos en esquemas conceptuales usando Diagramas de Interacci\u00f3n\n", "abstract": " En el \u00e1mbito de la Ingenier\u00eda del Software, diversos m\u00e9todos han sido propuestos para la especificaci\u00f3n y modelado de requisitos y el modelado conceptual. En este trabajo se presenta un Proceso de An\u00e1lisis de Requisitos (PAR) que permite refinar una Especificaci\u00f3n de Requisitos representada mediante Casos de Uso utilizando Diagramas de Secuencia extendidos con estereotipos de UML. Se define adem\u00e1s, un conjunto de reglas que facilita la trazabilidad de los elementos de la Especificaci\u00f3n de Requisitos a una representaci\u00f3n equivalente en el Esquema Conceptual.", "num_citations": "12\n", "authors": ["583"]}
{"title": "Model-driven requirements engineering for embedded systems development\n", "abstract": " The development of embedded systems is a complex and challenging task. Part of this complexity originates from limited resources and the need to solve tradeoffs between competing quality properties and goals. Producing a correct design therefore requires a complete and understandable requirements specification. Non-Functional Goals (NFGs) are commonly used to analyze these tradeoffs, while Model-Driven Development has the potential to reduce the design complexity of embedded systems by increasing the abstraction level. In this paper, we extend the Requirements Definition and Analysis Language (RDAL) for goals specification in order to drive a model-driven architecture refinement of embedded systems. Determining the impact of the refinements on Non-Functional Properties (NFPs) and relating these NFPs to design objects are the key aspects of our method. The feasibility of the approach is\u00a0\u2026", "num_citations": "11\n", "authors": ["583"]}
{"title": "Object-Oriented Conceptual Modeling Techniques to Design and Implement a Sound and Robust Oracle Environment\n", "abstract": " The paper will introduce the advantages of using the Object-Oriented Model for conceptual modeling, as a kind of knowledge model to capture information system properties. Next, the paper will explain how to properly implement such a system description in an advanced ORACLE environment, using ORACLE v7 as server and Developer/2000 as execution model tool.", "num_citations": "9\n", "authors": ["583"]}
{"title": "An agile method for model-driven requirements engineering\n", "abstract": " The complexity and pervasiveness of software applications has increased over the last few years. In this context, software development processes have also become complex and difficult to use. It is widely recognized that requirements engineering has become a critical activity within this process. In this paper, we aim to provide a methodological approach which focuses on requirements engineering within the Model-Driven Development (MDD) context. Our approach is an OpenUP extension in which the requirements discipline is placed in the model-driven context. We believe that the integration of requirements engineering and MDD into one consistent process will provide practitioners with the benefits of both. This paper presents the definition of the proposed process, OpenUP/MDRE, including its activities, roles, and work products. We also provide an example of its use in a SOA-based software development project. The use of our approximation guides the activities of requirements engineering and promotes automation by means of model transformations.", "num_citations": "7\n", "authors": ["583"]}
{"title": "Improving the quality of agent-based systems: Integration of requirements modeling into gaia\n", "abstract": " Nowadays, there is growing interest in the agent-oriented paradigm to deal with the construction of modern and complex software systems. However, most of the current agent-oriented development methodologies focus mainly on the design and implementation phases and do not appropriately cover the requirements phase. As poor requirements engineering is recognized as the root of most errors in current software systems, and as a means for improving the quality of these systems, the objective of our work is to propose a specific requirements modeling phase to extend Gaia, one of the most recognized agent-oriented methodologies. The proposal includes the adoption of techniques from goal-oriented and functional-oriented approaches for the modeling of requirements, according to the abstractions of agent-based systems. We describe how these complementary proposed techniques contribute to the models\u00a0\u2026", "num_citations": "7\n", "authors": ["583"]}
{"title": "Incorporating model-driven techniques into requirements engineering for the service-oriented development process\n", "abstract": " Modern information systems, which are the result of the interconnection of systems of many organizations, run in variable contexts, and require both a lightweight approach to interoperability and the capability to actively react to changing requirements and failures. Model-Driven Development (MDD) and Service-Oriented Architecture (SOA) are software development approaches that deal with this complexity, reducing time and cost development and augmenting flexibility and interoperability. Although, requirements engineering is accepted as a critical activity in these approaches, there is a need to appropriately integrate and automate the requirements modeling and transformation tasks as part of MDD and SOA development approaches. Our proposal is a Rational Unified Process (RUP) extension, in which the requirements discipline is placed in a model-driven context in order to derive SOAs. This paper\u00a0\u2026", "num_citations": "6\n", "authors": ["583"]}
{"title": "A requirements engineering approach for object-oriented conceptual modeling\n", "abstract": " Many different attempts have been made out over the last three decades to tackle the problems in software engineering that directly or indirectly lead to the symptoms of software crisis. These attempts have mostly focused on different specific fields, such as improved programming languages, improved modeling techniques, introduction of analysis and design methods, formal specifications, CASE tools, etc. In spite of the various attempts to develop high quality software systems, a difficult task still remains to be able to provide a solution to this classical problem: how to go from the problem space (user requirements) to the solution space (design and implementation) with sound methodological guidance.", "num_citations": "6\n", "authors": ["583"]}
{"title": "Are model-driven techniques used as a means to migrate SOA applications to cloud computing\n", "abstract": " In recent years, cloud computing has emerged as an option to use computing resources as a solution for the global economic crisis, namely, a cheaper way to have IT resources. Thus, many companies have started to migrate their systems to cloud infrastructures, without the required support to carry out this process. In this position paper, we provide an overview of the current state of research on cloud computing migration. To understand this subject, we conducted a systematic mapping. The results suggest that research into cloud computing migration is still in its early stages. We identify research gaps and provide general recommendations about how these gaps may be addressed as well as future research directions that may have potential impact on this research field.", "num_citations": "5\n", "authors": ["583"]}
{"title": "A comparative study on model-driven requirements engineering for software product lines\n", "abstract": " [EN] Model-Driven Engineering (MDE) and Software Product  Lines (SPL) are two software development paradigms that emphasize  reusing.  The former reuse domain knowledge  is  represented as  models and model transformations for product development, and the  latter reuse domain knowledge  is  represented as core assets to produce a family of products in a given domain.  The adequate  combination of both paradigms  can bring together important  advantages to the  software development community. However,  how  to manage  requirements during a model-driven product line development  remains  an open challenge. In particular, the Requirements Engineering (RE) activity must deal with specific  properties such as variability and commonality for a whole family of products. This paper presents a comparative study of eleven approaches that perform a MDE strategy in the RE activity  for SPL, with the aim  of  identify ing  current practices and research gaps. In summary, most of the approaches  are  focused on the Domain Engineering  phase  of the SPL development,  giving less attention to the Application Engineering  phase. Moreover there is a lack of  coverage of the Scoping  activity, which  defines the SPL boundaries. Several approaches apply some model transformations to obtain architectural and application requirements artifacts. Regarding the tool support for requirements specification and management, we found that most of the approaches use only academic prototypes. Regarding the validation  of the approaches, the  use of  Case Studies as a proof of concept was the most commonly used method; however, there is a lack\u00a0\u2026", "num_citations": "5\n", "authors": ["583"]}
{"title": "A multimodel approach for specifying the requirements variability on software product lines\n", "abstract": " Requirements engineering is a key activity on any software development project. In Software Product Line development, this activity is even more important since requirements may encompass commonality and variability. Furthermore, a requirement specification usually is composed by more than one model. In this context it is necessary to specify the requirements variability in the different models of a Software Product Line requirements specification. In order to solve this issue, this paper proposes a multimodel approach for specifying the requirements for the products of a Software Product Line. This multimodel is used in a model-driven development process in order to obtain the requirements of a single product by applying model transformations. This solution increases the flexibility allowing developers to add more views depending on the domain and to obtain the product requirements by using model-transformations, whereas improves the productivity. The feasibility of the approach is illustrated through a running example.", "num_citations": "4\n", "authors": ["583"]}
{"title": "Towards a model driven refinement process through architecture evaluation\n", "abstract": " Real-time embedded systems engineering is a complex process used in the development of industrial systems or products. The development of these systems may need to consider the assessment of numerous different and interrelated quality attributes. The Model-Driven Development approach implies many benefits for this process, owing to the use of high-level models and model transformations. However, it must be carefully applied, since all the quality attributes must be considered if acceptable results are to be attained. In this paper, we propose a method for the incremental refinement of transformations based on the non-functional requirements tradeoff analysis and on the study of its impact on the implementation of transformations. The approach employs sensitivities and the tradeoff identification method. The approach is illustrated with a simple example.", "num_citations": "3\n", "authors": ["583"]}
{"title": "An\u00e1lisis Comparativo de M\u00e9todos de Elicitaci\u00f3n de Requisitos para Sistemas Basados en Agentes.\n", "abstract": " En los \u00faltimos a\u00f1os han sido presentadas varias propuestas para la captura de requisitos haciendo uso de enfoques de diferentes tipos. Por otro lado, en la ingenier\u00eda de software basada en agentes, varias metodolog\u00edas no contemplan la etapa de elicitaci\u00f3n de requisitos. El presente estudio se centra en un an\u00e1lisis de algunos m\u00e9todos que podr\u00edan resultar interesantes para cubrir este d\u00e9ficit. En este trabajo se presentan los resultados de una comparaci\u00f3n entre m\u00e9todos, en particular identificando un conjunto de abstracciones m\u00e1s comunes de los sistemas basados en agentes y algunas cualidades deseables durante la elicitaci\u00f3n de requisitos. En particular, se consideran los enfoques propuestos por Agentis, GBRAM y RETO. Adem\u00e1s, este tipo de an\u00e1lisis podr\u00eda ser de utilidad para dar soporte a la elecci\u00f3n de un m\u00e9todo o la adopci\u00f3n e integraci\u00f3n del mismo por las metodolog\u00edas de agentes que no cuentan con una fase de requisitos.", "num_citations": "3\n", "authors": ["583"]}
{"title": "Generating Conceptual Schemas from Requirements Models\n", "abstract": " In order to understand the software production process as a true engineering activity, a comprehensive view of the involved set of phases must be introduced. This view must define a clear relationship between the different steps and must also define the transition between them. In this paper, a Conceptual Schema generation approach based on Requirements Modeling is presented as a way to improve the quality of the software production process. This approach combines a framework for requirements engineering (TRADE) and a graphical object0oriented method for conceptual modeling and code generation (OO0Method). The intended software production process improvement is accomplished by providing a precise methodological guidance to go from the user require0 ments (represented through the use of the appropriate TRADE tech0 niques) to the conceptual schema that properly represents them (ac0\u00a0\u2026", "num_citations": "3\n", "authors": ["583"]}
{"title": "Orientaci\u00f3n a objetos y orientaci\u00f3n a agentes: una propuesta de unificaci\u00f3n\n", "abstract": " La introducci\u00f3n de la tecnolog\u00eda de agentes a la industria, requiere de metodolog\u00edas que asistan en todas las fases del ciclo de vida del sistema agente. Sin t\u00e9cnicas adecuadas para soportar este proceso, tales sistemas probablemente no ser\u00e1n lo suficientemente confiables, mantenibles o extensibles, ser\u00e1n dif\u00edciles de comprender y sus elementos ser\u00e1n m\u00e1s dif\u00edcilmente reusables. En lugar de crear m\u00e9todos completamente nuevos, creemos que m\u00e9todos de ingenier\u00eda de software ya existentes, y que han probado ser exitosos para el modelado de sistemas complejos, podr\u00edan constituir un soporte conceptual y organizativo adecuado en la praxis del proceso de construcci\u00f3n de sistemas basados en agentes. Presentamos en este art\u00edculo OO-Method for Agents un m\u00e9todo de desarrollo autom\u00e1tico de software orientado a objetos ampliado para el modelado de agentes.", "num_citations": "2\n", "authors": ["583"]}
{"title": "Automatizaci\u00f3n del proceso de despliegue de servicios en la nube\n", "abstract": " The lack of standardization of the access methods and the management of resources in cloud environments hinders both, the portability of services between different cloud environments, and the agile deployment of services. In this context, it is important to reduce the deployment time in order to reduce the economic cost to organizations. The manuscript presents an approach for automating the deployment process of cloud services, by proposing a language that specifies the resource needs in cloud environments, in support to the logic of cloud services. The information about requirements is used for generating resource provisioning scripts and service configurations, both, specific to the deployment platform. This approach is applied to a case study in the Windows Azure\u00a9 platform, used as a deployment environment and the development of a deployment script based on the cloud resource specification.", "num_citations": "1\n", "authors": ["583"]}
{"title": "Especificaci\u00f3n de Temporalidad en Entornos Autom\u00e1ticos de Producci\u00f3n de Software a Partir de Modelos Conceptuales Objetuales\n", "abstract": " Para poder representur le mirnra decada los apt TTTTSLL L TTT LLL TT LL LLLLTT CCT LLLTT TT CCCCCTTS LLL T kTTCTT TTS TTTT LLLTTS TT TCCCLLLLLLLS LLLTTT TT TTCeSLLLLLLLL LCCCkT TCT CCCCTTT TBBBT TTCLS un milelo funcionalmente equivalente al viel viceplul del sistema estudiado.En el enterto kell proyecto IDEAS (Ingenieria le Amhertes de Sofiar financiado par la\"'T'Ell. v en partikular TL TT TT LLLL TTTTT SLLLLTT TT TCCCCCTTTT TT LLLLSSS sacciones en fare de modelado conceptual en anhients. el grupo de investigaci\u00f3n DSC-LP't'alencia, Espa\u00f1a tra-LLLL BT LT TTTTTT TT LLL TTTTBBT TT LLLSTTTT TTTTTS rica de sfiure haud en wielos nepriilex tempra-LLL TTTTTT TTCCCCCTTT TTTT TkTTLTS a partir die su aproximaci\u00f3n metodol\u00f3gica-Mehl El objetivo de este articulo s printar como se incluen al-CCTT LLLTT TT TTSTT LLLL TT CCCCCC SLLLLS TTTS LLLLTT\u00a0\u2026", "num_citations": "1\n", "authors": ["583"]}
{"title": "Temporality Specification in Automatic Production Software Environments Based on Object-Oriented Conceptual Models\n", "abstract": " The sotlwarc t] L\"'l\" t \u2018.! ll.\u2018I-Fl'l1'lt: t-\u2018ll classic li1'e cycle ol'l'ers it set| tIe1llia| approach starting from the most abauact aspects to the most concrete-[s] rs1em e1I| _t= ioIteriI1g. analysis. design. codi\ufb01cation. test and|!|'h| l1Ill: IlitIl\u00a2 L'I]. I-\u2018or ihe last stages tdcsitto. endil'| eation...] d|:\\-'elo|:| ers could use automatic 1. t: H: l-ls,\u2018-\\'l1-i'\u00a2 ll help assure the quality at the resulting product. The same does not oocur oith the previous stages. wlliclt usually are error and. in-\u00a2 i't': eicney source. aI't'ectin| _.', the tI|| JH| ll.}'and the costs and Torthese reuniting the|'It'1Z \u2018rI. lti1Ili\\'ll';|'1II|'lllf'liI!\" t \u20181! lttF'l3'll| uoduc1. tsowatiai;-s-efforts to iittro-cluce tools ti-as\u00bb.-13 on l'or| 1ls! methods are more notable.\" l'l1e-so etTot1s heighten a new|]'i5t; ip| i|\u2018| t,'i_ ['li\u00a2|:]| l: i:|'t,: l \u2018|!| t: l \u2018| lI I-lngineerirqtj tltat bases the 1'et:| uitements sptti\ufb01cation on conceptual models from the i1tl'ormatiot1 that is relevant!'or1he a| 1|]: licalic| n that wants to he represented.In lIl'| t: Object\u00a0\u2026", "num_citations": "1\n", "authors": ["583"]}
{"title": "Especificacion de Temporalidad en Modelos Conceptuales Orientados a Objetos\n", "abstract": " La especificaci\u00f3n de la informaci\u00f3n temporal es fundamental para disponer de un marco expresivo que, en la fase de modelado conceptual, permita capturar correctamente no s\u00f3lo los aspectos est\u00e1ticos y din\u00e1micos de los componentes del sistema estudiado, sino tambi\u00e9n su evoluci\u00f3n temporal. En el \u00e1mbito del proyecto CYTED IDEAS (\u201cIngenier\u00eda de Ambientes Software\u201d) y en particular asociado a su tarea 2 titulada \u201cM\u00e9todos para la especificaci\u00f3n de transacciones en fase de modelado conceptual en ambientes orientados al objeto\u201d, los grupos de investigaci\u00f3n en modelado conceptual de las Universidades Federal de R\u00edo Grande do Sul (Porto Alegre, Brasil) y Polit\u00e9cnica de Valencia (Espa\u00f1a) desarrollan un trabajo coordinado consistente en enriquecer la expresividad de un entorno de producci\u00f3n autom\u00e1tica de software llamado OO-Method, con las caracter\u00edsticas temporales utilizadas en la aproximaci\u00f3n TempER-Tr. OO-Method permite especificar modelos conceptuales orientados a objetos como m\u00e9todo de captura de requerimientos de un sistema organizacional, sin plantearse hasta la fecha la declaraci\u00f3n de propiedades temporales.El objetivo de este proyecto es aprovechar la experiencia adquirida por ambos grupos en sus respectivos entornos de trabajo, generando un ambiente de producci\u00f3n de software que, a partir de un modelo conceptual orientado a objetos definido de forma precisa, y que incluya expresividad temporal en la especificaci\u00f3n de clases y atributos, permita obtener autom\u00e1ticamente un prototipo software funcionalmente equivalente al modelo conceptual de partida.", "num_citations": "1\n", "authors": ["583"]}
{"title": "ENTORNOS AUTOMATICOS DE PRODUCCION DE SOFTWARE A PARTIR DE MODELOS CONCEPTUALES ORIENTADOS A OBJETOS Y TEMPORALES\n", "abstract": " Para poder especificar la informaci\u00f3n que represente de manera adecuada y completa los aspectos est\u00e1ticos y din\u00e1micos de un sistema, es importante incluir una expresividad temporal sobre los elementos utilizados para la construcci\u00f3n del modelo conceptual del sistema estudiado.En el contexto del proyecto IDEAS (Ingenier\u00eda de Ambientes de Software) financiado por el CYTED, y en particular en su tarea titulada \u201cM\u00e9todos para especificaci\u00f3n de transacciones en fase de modelado conceptual en ambientes OO\u201d, el grupo de investigaci\u00f3n DSIC-UPV (Valencia, Espa\u00f1a) en colaboraci\u00f3n con PISC de la UTP (Pereira, Colombia) y del Instituto de Inform\u00e1tica de la UFRGS (Porto Alegre, Brasil), trabaja en la definici\u00f3n de un ambiente de producci\u00f3n autom\u00e1tica de software basado en modelos conceptuales temporales y orientado a la especificaci\u00f3n y dise\u00f1o de sistemas, a partir de su aproximaci\u00f3n metodol\u00f3gica OO-Method. El objetivo de este trabajo es incluir los aspectos necesarios que permitan capturar la expresividad temporal de modelos conceptuales orientados a objetos y la estrategia de implementaci\u00f3n en el marco de la programaci\u00f3n autom\u00e1tica.", "num_citations": "1\n", "authors": ["583"]}
{"title": "Ingenier\u00eda de Ambientes Software: combinando expresividades temporales y objetuales en la fase de modelizaci\u00f3n conceptual\n", "abstract": " En este trabajo se presenta la fusi\u00f3n de dos aproximaciones metodol\u00f3gicas: OO-Method, basada en el uso de un modelo objetual con un soporte formal preciso, y TempER-Tr, que usa un modelo entidad-relaci\u00f3n temporal para dar cuenta de la arquitectura est\u00e1tica del sistema y un nuevo lenguaje de especificaci\u00f3n de transacciones para describir aspectos de comportamiento. La idea es sentar las bases de un nuevo m\u00e9todo que fije una aproximaci\u00f3n metodol\u00f3gica unificada para especificar los aspectos est\u00e1ticos y din\u00e1micos asociados a un sistema de informaci\u00f3n, aprovechando las propiedades m\u00e1s relevantes de cada uno de estos enfoques.", "num_citations": "1\n", "authors": ["583"]}