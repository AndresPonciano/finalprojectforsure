{"title": "Using the fomda approach to support object-oriented real-time systems development\n", "abstract": " This paper tackles the problem of ever changing embedded systems non-functional requirements, specially the architectural ones. It proposes a solution based on features model and MDA standards, which is called features-oriented model-driven architecture (FOMDA). This proposal can be used to help application designer in defining the mappings and transformations of UML models to as many target platforms as wished. This is done by configuring model-to-model and model-to-code transformations over tiers, where every tier represents some target platform properties that the system must be mapped and transformed to. To validate the proposal a case study related to the development of an embedded real-time system is presented, detailing how to transform a generic high-level UML model to a model specific for a given target platform. Obtained results are optimistic and conclude that the FOMDA approach can\u00a0\u2026", "num_citations": "29\n", "authors": ["2209"]}
{"title": "Supporting large scale model transformation reuse\n", "abstract": " The growth of applications developed with the support of model transformations makes reuse a required practice, specially when applied to transformation assets (eg transformation chains, algorithms, and configuration files). In order to promote reuse one must consider the different implementations, communalities, and variants among these assets. In this domain, a couple techniques have been used as solutions to adapt reusable assets for specific needs. However, so far, no work has discussed their combined use in real software projects. In this paper, we present a new tool named WCT, which can be used to adapt transformation assets. Moreover, through lessons learned in industry, we address some reuse techniques devoted to adapt these assets.", "num_citations": "26\n", "authors": ["2209"]}
{"title": "Automated design of multi-layered web information systems\n", "abstract": " In the development of web information systems, design tasks are commonly used in approaches for Model-Driven Web Engineering (MDWE) to represent models. To generate fully implemented prototypes, these models require a rich representation of the semantics for actions (e.g., database persistence operations). In the development of some use case scenarios for the multi-layered development of web information systems, these design tasks may consume weeks of work even for experienced designers. The literature pointed out that the impossibility for executing a software project with short iterations hampers the adoption of some approaches for design in some contexts, such as start-up companies. A possible solution to introduce design tasks in short iterations is the use of automated design techniques, which assist the production of models by means of transformation tasks and refinements. This paper details\u00a0\u2026", "num_citations": "19\n", "authors": ["2209"]}
{"title": "Combining mde and scrum on the rapid prototyping of web information systems\n", "abstract": " Rapid application prototyping (RAP) is recommended to obtain quick feedback from clients, allowing the validation of software requirements before acceptance tests. In this regard, model-driven engineering (MDE) and agile methods are two important approaches that suggest the use of techniques for RAP. Some fundamental differences between them exist: MDE focuses on software reuse through annotated system models while agile methods recommend the use simpler models to achieve quick feedback from clients. In order to comply with agility principles but still concerned about the future reuse of the developed software, the quick design of annotated models must be considered. This paper presents a MDE-based RAP methodology and tool support to quickly generate web front ends and models based on the MVC architectural pattern. In addition, we report a case study that has joined MDE and Scrum by\u00a0\u2026", "num_citations": "19\n", "authors": ["2209"]}
{"title": "Wireless sensor network UML profile to support model-driven development\n", "abstract": " Wireless Sensor Networks (WSNs) are rapidly becoming a necessary tool in many different application areas, such as environmental monitoring, security, safety, and so on. The heterogeneity of hardware is large, so there exists several different environments that support WSN programming. However, the great majority of such environments only target the sensors programming, forgetting about their real intent: the application. In this paper we propose an approach to satisfy the need of high level development methods in WSN applications, aiming to provide a clear link between the modelled WSN constraints and the programming entities. An important part of this proposal is the so-called Wireless Sensor Network (WiSeN) Profile, an UML profile devoted for WSN applications design in a Model-Drivel Development (MDD) paradigm.", "num_citations": "12\n", "authors": ["2209"]}
{"title": "Extending junit 4 with java annotations and reflection to test variant model transformation assets\n", "abstract": " Software Product Line (SPL) techniques are widely used to represent variability and commonality in reusable software assets. Similarly, model transformations are also software assets and can be reused with the same techniques. However, their applicability in the model transformations domain demands an extra effort to test the generated/adapted assets. Automated test cases should consider isolated transformations and also their combined use in a model transformation chain, that can vary according to different needs in software projects, eg libraries and frameworks. In order to facilitate the specification of automated test cases, this paper presents a JUnit extension to support unit and integration tests that execute dynamic SPL-based model transformation chains.", "num_citations": "11\n", "authors": ["2209"]}
{"title": "Systematic mapping study on domain-specific language development tools\n", "abstract": " Domain-specific languages (DSL) are programming or modeling languages devoted to a given application domain. There are many tools used to support the implementation of a DSL, making hard the decision-making process for one or another. In this sense, identifying and mapping their features is relevant for decision-making by academic and industrial initiative on DSL development. Objective: The goal of this work is to identify and map the tools, Language Workbenches (LW), or frameworks that were proposed to develop DSLs discussed and referenced in publications between 2012 and 2019. Method: A Systematic Mapping Study (SMS) of the literature scoping tools for DSL development. Results: We identified 59 tools, including 9 under a commercial license and 41 with non-commercial licenses, and analyzed their features from 230 papers. Conclusion: There is a substantial amount of tools that cover a large\u00a0\u2026", "num_citations": "10\n", "authors": ["2209"]}
{"title": "Thoth: A web-based tool to support systematic reviews\n", "abstract": " Background: Systematic Reviews (SR) are crucial for collecting evidence related with a particular field or area. Hence, there are different protocols for conducting SR in software engineering. There is also several tools designed to provide support for these protocols. Aims: We understand that there is still a lack of a web-tool, fully integrating the features considered important for SR. Implementing such a tool would be a great contribution to the field. Method: We analyzed several studies discussing features for tools supporting SR. We defined design decisions based on these features. Results: We created Thoth, a web-based tool for SR. In this study we present a first version, containing a set of features. Before moving forward with the implementation, we conducted a quasi-experiment for evaluating and comparing Thoth with a similar tool. Conclusion: Despite being in the right direction for achieving our goal, the\u00a0\u2026", "num_citations": "10\n", "authors": ["2209"]}
{"title": "Building the foundations for \u2018mde as service\u2019\n", "abstract": " Surveys on the Model-Driven Engineering (MDE) adoption agree that resources such as model transformations need customisation before introduction in a target context. This study highlights an emerging scenario for reuse named `MDE as Service' (MDEaaS), i.e. a business opportunity characterised by requests from application-independent contexts for customisations in MDE resources. In response for the increasing interest of some professionals in this opportunity and due to the absence of studies establishing reuse foundations for this scenario, it is presented here the authors' background in the Feature-Oriented Model-Driven Architecture (FOMDA) approach: an implementation of MDEaaS assisted by an integrated reuse mechanism to test, compose, check the consistency, and adapt these resources. By including an analysis of three cross-application domains composed by resources developed in support for\u00a0\u2026", "num_citations": "9\n", "authors": ["2209"]}
{"title": "Assisted Tasks to Generate Pre-prototypes for Web Information Systems.\n", "abstract": " Pre-prototypes are models represented in different abstraction levels that can be validated in preliminary software process phases. So far, these pre-prototypes have been designed by experienced modellers, requiring weeks of work to specify all the details required before generating source code and, finally, get a feedback from clients in acceptance tests. This paper presents a new methodology to develop web information systems through pre-prototypes. Such methodology aims at helping designers with low experience in modelling by allowing them quickly produce detailed pre-prototypes, which are used as input for model transformations that generate working application pieces. Thus, as means of validation, we report on a case study conducted in industry and discuss shortcomings and benefits about our methodology.", "num_citations": "9\n", "authors": ["2209"]}
{"title": "Model-driven development of WSN applications\n", "abstract": " Wireless Sensor Networks (WSNs) are rapidly becoming a necessary tool in many different application areas, such as environmental monitoring, security, safety, and so on. The heterogeneity of hardware is large, so there exists several different environments that support WSN programming. However, the great majority of such environments only target the sensors programming, forgetting about their real intent: the application. In this paper we propose an approach to satisfy the need of high level development methods in WSN applications, aiming to provide a clear link between the modeled WSN constraints and the programming entities. An important part of this proposal is the so-called WiSeN Profile, an UML profile devoted for WSN applications design in a Model-Drivel Development (MDD) paradigm.", "num_citations": "8\n", "authors": ["2209"]}
{"title": "Towards facilities to introduce solutions for mde in development environments with reusable assets\n", "abstract": " Model Driven Engineering (MDE) is a software development paradigm that promotes improvements in productivity through reuse of software model specifications. Although much effort has been dedicated for more than ten years, MDE has not achieved expressive use. In this paper we address the problem of a lack of a knowledge base about MDE-based solutions, a reason that hampers MDE in practice. To surpass it we propose a domain specific language named RAS++ that represents these solutions as reusable assets. Assets are composed by reuse structures and semantics for the execution of technical solutions for Automated Software Engineering, fostering the integration of tasks for MDE in development environments. Facilities are introduced through some supporting tools: one to design reusable assets and other to integrate them in target development environments. Practical experiences have proven to\u00a0\u2026", "num_citations": "7\n", "authors": ["2209"]}
{"title": "Study on Combining Model-driven Engineering and Scrum to Produce Web Information Systems.\n", "abstract": " Model-driven engineering and agile methods are two important approaches to produce web information systems. However, whereas model-driven engineering is based on widely detailed models, agile methods such as Scrum propose to not spend too much time in modelling. Model-driven engineering literature suggests the use of pre-prototypes models that can be evaluated by clients before generating source code, and, agile methods also propose to get client feedback soon after requirements are specified as user stories. Despite of agile methods and pre-prototypes aim to quick validate requirements, their combined use must be carefully studied. The quick design of pre-prototypes must be considered in order to achieve the benefits provided by both approaches. In this paper we propose a new pre-prototype based methodology, which combines practices to achieve quick feedback from clients from model-driven engineering and Scrum based agile methods. We also report on a real-world case study concerning the development of a web information system.", "num_citations": "7\n", "authors": ["2209"]}
{"title": "How do You Execute Reuse Tasks Among Tools?\n", "abstract": " Software reuse practices and tools have been proposed over the last three decades. From the reuser\u2019s point of view, it is necessary to provide facilitators in order to execute reuse tasks among tools. We propose the use of Reuse Assistants (RA) as a representation for tasks that tailors software assets to be used in chained executions of reuse tools. Since many tools do not interchange their input and output (IO) with others, reuse processes are limited to executing reuse tasks from a single tool. Moreover, reusers are required to manually adapt IO parameters between tools aiming to execute a more complete reuse process. However, such adaptations are subjected to inconsistencies and errors. In this sense, by specifying RAs through a common representation one would be able to execute a reuse process by chaining tools in an assisted way. This paper presents a work in progress to support software asset tailoring through RA.", "num_citations": "7\n", "authors": ["2209"]}
{"title": "RAS++: Representing Hybrid Reuse Assets for MDE as a Service\n", "abstract": " TESE SUBMETIDA AO CORPO DOCENTE DO INSTITUTO ALBERTO LUIZ COIMBRA DE POS-GRADUACAO E PESQUISA DE ENGENHARIA (COPPE) DA UNIVERSIDADE FEDERAL DO RIO DE JANEIRO COMO PARTE DOS REQUISITOS NECESSARIOS PARA A OBTENCAO DO GRAU DE DOUTOR EM CI\u00caNCIAS EM ENGENHARIA DE SISTEMAS E COMPUTACAO.", "num_citations": "6\n", "authors": ["2209"]}
{"title": "Criteria for description of mde artifacts\n", "abstract": " The large-scale collaboration in Model Driven Engineering (MDE) demands the use of one or more repositories such as GEMOC, ReMoDD and SEMAT, which share artifacts (eg, models, meta-models, transformations, etc) for global reuse scenarios. While recent researches motivated the need of data for decision making from the perspective of Software Ecosystems (SECOs), the cutting edge technologies on this topic merely classify these artifacts. Likewise, it is important the definition of criteria to represent this qualified data with enough semantic potential to support reuse of MDE Artifacts globally, which is missed in the literature of the area. This paper proposes some criteria, thus a small contribution to help on the establishment of a future SECO for MDE.", "num_citations": "6\n", "authors": ["2209"]}
{"title": "A Summary of Challenges for \u201cMDE as Service\u201d\n", "abstract": " The introduction of resources for Model Driven Engineering (MDE) in industrial contexts is seen as a business opportunity for some companies and professionals. From an ecosystems perspective, resources are analyzed, acquired from repositories, adapted and integrated in software development environments. This paper summarizes some challenges for \u201cMDE as Service\u201d, which require the introduction of these resources in target contexts, considering a perspective for MDE ecosystems.", "num_citations": "6\n", "authors": ["2209"]}
{"title": "Generative adaptation of model transformation assets: experiences, lessons and drawbacks\n", "abstract": " Model transformation is a central activity in Model Driven Engineering (MDE) as it specifies how models are consumed to generate other models or code. Complex scenarios typically involve the execution of several transformations that, due to variability of solutions to develop software projects, need to be tailored to attempt different implementation technologies, libraries, patterns, etc. Recent proposals to tailor these assets suggested that current Software Product Line (SPL) techniques can be used to promote reuse of model transformation assets. However, in a recent case study, we have found lacks in techniques, including ours, to apply reuse for this domain in particular. Thus, this paper presents this case study and discusses implications and challenges in tailoring these assets with SPL techniques.", "num_citations": "6\n", "authors": ["2209"]}
{"title": "Ensuring consistency of feature-based decisions with a business rule system\n", "abstract": " Feature Models are widely used in some domains to represent variabilities and support decisions that configure a specific combination of domain elements. A feature configuration is created by selecting a features set that satisfies constraints imposed by the model. However, especially regarding complex or large models, end users are prone to making inconsistent decisions. In these cases, an automated support to assist users while resolving decision conflicts and restoring the configuration's validity is highly desirable. Thus, this paper proposes a flexible approach to ensure the consistency of feature configurations which is based on a Business Rules Management System (BRMS). Such systems are essential components in the world of business decision support applications due to facilities provided for constraints specification and execution management. The proposed approach shows how existing BRMS can\u00a0\u2026", "num_citations": "6\n", "authors": ["2209"]}
{"title": "A common representation for reuse assistants\n", "abstract": " Software reuse practices and tools have been proposed over the last decades. From the reuser\u2019s perspective, it is necessary to provide facilitators in order to execute reuse tasks among tools. Accordingly, we propose the use of a common representation for Reuse Assistants (RA), which are computer executable reuse tasks specified in a model. This model is extensible since it extends Reusable Asset Specification metamodel, an OMG standard to define software assets such as artifacts and documents with structured information for reuse such as activities and guidelines. Besides, the metamodel is specified in Eclipse Modeling Framework (EMF), a widely used environment for metamodeling. The proposed extensions allow one to provide information to guide reusers through the execution of reuse tasks among tools, with structured information that can be used to generate deployment descriptors and\u00a0\u2026", "num_citations": "5\n", "authors": ["2209"]}
{"title": "Towards a web modeling environment for a model driven engineering approach\n", "abstract": " one of the most challenges in Software Engineering is to reduce the applications development time. Although such reduction is a Model Driven Architecture\u2019s (MDA) objective, its effectiveness in started from scratch applications is questionable. Generally, MDA approaches require a system model widely detailed whose production is time consuming. In this context, we present a MDA compliant approach based on rapid application prototyping. Our approach allows more reliable requirements gathering and validation because produces functional mockups.", "num_citations": "5\n", "authors": ["2209"]}
{"title": "Automated approach for asset integration in eclipse IDE\n", "abstract": " Model Driven Development (MDD) tasks are used in different software development processes. These tasks are traditionally started with transformation engines. Adapting MDD tasks to be managed in Eclipse Mylyn instead of traditional solutions can facilitate the access to and use of MDD techniques and tools for other contexts in software development, such as agile teams. In a previous work we have introduced a new Domain Specific Language (DSL) named RAS++ used on the top of proposals for MDE Artifacts and Settings. This work adds technical-level information that allows to transform RAS++ specifications to the Eclipse Mylyn. Through a proof-of-concept, we show that RAS++ plays the role of a pivotal representation language between a tool for Application Lifecycle Management in Eclipse IDE and Model-Driven Engineering (MDE) Ecosystems, pointing out new research directions.", "num_citations": "4\n", "authors": ["2209"]}
{"title": "WorkCASE Toolkit: Uma Ferramenta de Suporte para Agile Model Driven Architecture\n", "abstract": " The Model Driven Architecture (MDA) specification suggests patterns that can be used to support the Model Driven Development (MDD). Many tools have been developed to support the MDA defined patterns. However some challenges must be suppressed to acquire successful MDA tools usage by the organizations such as: the combination of domain specific languages and unified modeling language, the software development process customization for the MDA tool, the model interchange between tools, etc. This paper presents an MDA tool called as WorkCASE Toolkit and describes how such challenges are being suppressed in such tool.Resumo. A especifica\u00e7\u00e3o da Model Driven Architecture (MDA) sugere padr\u00f5es que podem ser utilizados para desenvolver ferramentas de suporte para o desenvolvimento de software dirigido a modelos (MDD). Muitas ferramentas foram desenvolvidas para suportar os padr\u00f5es definidos na MDA. No entanto, para se utilizar essas ferramentas com sucesso nas organiza\u00e7\u00f5es \u00e9 necess\u00e1rio superar alguns desafios como: a combina\u00e7\u00e3o entre linguagens de dom\u00ednio espec\u00edfico e a linguagem de modelagem unificada, a customiza\u00e7\u00e3o da ferramenta para processos de desenvolvimento de software das organiza\u00e7\u00f5es, o interc\u00e2mbio de modelos entre ferramentas, dentre outros. Este artigo apresenta uma ferramenta para MDA denominada WorkCASE Toolkit e descreve como estes desafios est\u00e3o sendo superados nesta ferramenta.", "num_citations": "4\n", "authors": ["2209"]}
{"title": "Uma solu\u00e7ao para reuso e manuten\u00e7ao de transformadores de modelos usando a abordagem fomda\n", "abstract": " The main goal for a company to use MDA is to gain in productivity, allowing designers to quickly migrate more generic system models to specific domains. So far, industry and academy have discussed many details about the benefits of using MDA and how it should be applied. Nevertheless, models transformations is always left the background stage, as if it is something done like a magic pass. However, this is one of the most complex issues about MDA process and should be discussed in details. One of main challenges to a company adopt the MDA is the repair of model transformers according to platform and architectures changes in a system development. This paper presents the Features-Oriented Model-Driven-Architecture (FOMDA) approach as a solution to model transformers repair. Such solution is detailed in an enterprise environment case study of a graphic user interface development.Resumo. A principal motiva\u00e7\u00e3o para uma corpora\u00e7\u00e3o usar a MDA \u00e9 ganhar em produtividade, permitindo aos projetistas migrarem modelos de sistemas mais gen\u00e9ricos para dom\u00ednios espec\u00edficos. Neste sentido, ind\u00fastria e academia v\u00eam discutindo muitos detalhes sobre os benef\u00edcios de usar a MDA e sobre como ela deve ser utilizada. No entanto, as transforma\u00e7\u00f5es de modelos quase sempre s\u00e3o deixadas de lado, como se o desenvolvimento dos transformadores fosse uma tarefa trivial. Entretanto, este \u00e9 um dos maiores desafios sobre o processo da MDA e deve ser discutido em detalhes. Neste contexto, um dos principais problemas para se utilizar a MDA \u00e9 a manuten\u00e7\u00e3o dos transformadores em decorr\u00eancia da troca de plataformas e arquiteturas\u00a0\u2026", "num_citations": "4\n", "authors": ["2209"]}
{"title": "Testing as a service (TaaS) a systematic literature map\n", "abstract": " Background: The knowledge and application of tools to automate testing is essential to ensure software reliability and therefore its quality. Due to the increasing demand for quality in software projects executed in short time-scales, Testing as a Service (TaaS) appeared in the literature as contributions for cost reduction and productivity of automated tests. Aims: Once quality attributes from these contributions are not deeply discussed by the literature of the area, our goal is to investigate and identify these attributes from the TaaS platforms and providers commonly reported in the literature. Method: A protocol was formulated and executed according to the guidelines for performing systematic literature map in Software Engineering. Results: The TaaS providers and platform proposals found were classified according to the number of mentions in the literature, highlighting the most commonly mentioned and widespread\u00a0\u2026", "num_citations": "3\n", "authors": ["2209"]}
{"title": "Revisiting criteria for description of MDE artifacts\n", "abstract": " Large-scale collaboration in Model Driven Engineering (MDE) demands the use of one or more repositories such as GEMOC, ReMoDD and SEMAT, which share artifacts (e.g., models, meta-models, transformations, etc.) for global reuse scenarios. In order to benefit the MDE community from an important quality attribute (i.e., understandability of MDE artifacts), this work analyzed the information available in ReMoDD. We conducted a study of the representation of reusable assets conformance to the criteria found through the execution of a multivocal research protocol. We found that these assets are not in conformity with these criteria, thus hampering the establishment of future Software Ecosystems (SECOs) for MDE.", "num_citations": "3\n", "authors": ["2209"]}
{"title": "A Proposal for a Common Representation Language for MDE Artifacts and Settings.\n", "abstract": " Empirical evidences suggest the need for a common representation language to be used in the core of a Knowledge Base (KB) for Model Driven Engineering (MDE). The absence of a common representation for MDE Artifacts (components, libraries, metamodels and model transformations and settings), hampers reuse and collaboration in inter-organizational contexts. The state-of-art introduces MDE Artifacts in target software projects with Domain Specific Languages (DSL) for MDE Settings including integration of MDE Artifacts, embedded with concepts for Model Transformation Chain (MTC), Model-Driven Integration (MDI), shared model-based tools though Software as Service (SaaS), process patterns and others. This research abstract presents a proposal for a common representation language named RAS++, intersecting existing metaclasses from DSLs for MDE Settings and adding metaclasses from the Reusable Asset Specification (RAS) OMG standard. Thus, it is presented past and ongoing work in the RAS++ in a PHD proposal.", "num_citations": "3\n", "authors": ["2209"]}
{"title": "Towards a quality model for model composition effort\n", "abstract": " This paper proposes an initial quality model for model composition effort, which serves as a frame of reference to developers and researchers to plan and perform qualitative and quantitative investigations, as well as replicate and reproduce empirical studies. A series of empirical studies supports the proposed quality model, including five industrial case studies, two controlled experiments, three quasi-experiments, interviews and seven observational studies. Moreover, these studies have systematically demonstrated the real benefits of using a frame of reference to enable learning about model composition effort from experimentation.", "num_citations": "3\n", "authors": ["2209"]}
{"title": "Textual Approach for Designing Database Conceptual Models: A Focus Group.\n", "abstract": " Different approaches to software development are based on at least three database models: conceptual, logical, and physical, requiring distinct abstraction levels to represent complementary concepts. The selection of a conceptual database modeling approach, among other things, depends on the problem domain, knowledge, and preferences of the developer. This paper presents a new domain-specific textual language devoted to the conceptual relational database modeling, ie, entity-relationship modeling. Furthermore, we present a preliminary evaluation conducted to analyze our proposed DSL, comparing two grammar versions in a focus group research method.", "num_citations": "2\n", "authors": ["2209"]}
{"title": "A customizable spl scoping process for spl reengineering\n", "abstract": " Software Product Lines (SPL) are a well known solution to systematically create reusable software products. SPL reengineering emerges as a strategy for obtaining SPL from a set of legacy systems. As there are different scenario variables, such as, available artifacts and team experience, the activities and techniques used to perform reengineering tasks may change, requiring that approaches provide some customization to user\u2019s scenarios. In this context, SPL scoping is important for de\ufb01ning domain variables used for decisions, intending to improve the cost bene\ufb01t of SPL. However, there is a lack of a process supporting these tasks considering different scenarios. Therefore, we specify Prepare, Assemble and Execute Process for SPL Reengineering (PAxSPL), a process that provides support to prepare, assemble and execute feature retrieval while also considering SPL scoping concepts and activities. In this work, we present our approach and perform a comparison to related works showing that PAxSPL customization may reduce effort of adoption in user\u2019s scenarios.", "num_citations": "2\n", "authors": ["2209"]}
{"title": "Model-Driven Engineering Infrastructure and Tool Support for Petrochemical Industry Automation\n", "abstract": " The definition of equipment and components of physical plants is a necessary step towards the development of simulation, control, and supervisory applications for the petrochemical industry. Often it happens that the same plant/equipment is (re) modeled on each application, causing a waste-oftime on repetitive (re) design, besides introducing potential inconsistencies between the models. Moreover, even though each software platform normally offers a different view of the same plant, it is desirable to have some kind of interoperability between them. This paper presents a solution for such issues named M4PIA, which consists in a Model-Driven Engineering (MDE) tool support developed mainly for petrochemical industry automation. M4PIA allows representing industrial plants by means of different and interchangeable object-oriented models, providing means to perform automatic code generation from a plant specification for different software platforms. Currently, our work involves using M4PIA in high-level automation manouvers and plant simulations. Evaluations studies performed with M4PIA shows that it covers most features expected from a MDE tool suite. Besides, the use of M4PIA is expected to result in less development time and costs, while it increases efficiency, maintainability, and reliability of the developed applications.", "num_citations": "2\n", "authors": ["2209"]}
{"title": "Analysis of asset specification languages for representation of descriptive data from mde artifacts\n", "abstract": " In order to improve the adoption of Model-Driven Engineering (MDE) Artifacts (e.g., design languages and associated model transformations), the literature points out that these elements need to be first shared in Knowledge Bases (KB) to be further downloaded, compared and integrated to software projects. A common concept used as pivotal representation between software artifacts and repositories is the Asset: structured information that provides standard taxonomies to catalog artifacts from different natures. In this work, we evaluated the applicability of concepts from two important asset specification languages on the representation of MDE artifacts: The Asset Management Specification (AMS) and the Reusable Asset Specification (RAS). Our contribution is a list of benefits and drawbacks from RAS and AMS to work as a pivotal language in KBs for MDE.", "num_citations": "2\n", "authors": ["2209"]}
{"title": "Emprego de simula\u00e7\u00f5es computacionais em problemas envolvendo agricultura: Um estudo de mapeamento sistem\u00e1tico\n", "abstract": " O avan\u00e7o das tecnologias de redes de sensores sem fio (RSSF) permite monitorar ambientes de forma assistida por software. Entre os v\u00e1rios contextos de emprego, a agricultura inteligente desempenha um papel importante na sociedade, caracterizando um potencial para a realiza\u00e7\u00e3o de estudos aplicados. No entanto, os custos associados aos equipamentos em cen\u00e1rios envolvendo diversos sensores dificultam o exerc\u00edcio da aprendizagem baseada em problemas. Estudos voltados para simula\u00e7\u00f5es computacionais t\u00eam o potencial de explorar o tema sem tais custos, portanto, um potencial de explora\u00e7\u00e3o em disciplinas de aprendizagem baseadas em problemas. A literatura da \u00e1rea carece de uma caracteriza\u00e7\u00e3o do uso de simula\u00e7\u00f5es computacionais para problemas envolvendo agricultura. Este artigo apresenta os resultados de um estudo de mapeamento sistem\u00e1tico, proporcionando essa caracteriza\u00e7\u00e3o por meio de 35 estudos analisados.", "num_citations": "1\n", "authors": ["2209"]}
{"title": "Empirical Evaluation of a Textual Approach to Database Design in a Modeling Tool\n", "abstract": " This article reports an empirical assessment study conducted with 27 subjects intended to verify the effort (time spent), precision, recall, F-Measure of a proposed tool based on a textual approach (ERtext), thereby a study developed for comparative reasons of ERtext with a tool based on graphical approach: thebrModelo. The results are: 1) less effort is associated with the graphical approach and that ERtext, and 2) regarding the model quality, brModelo have similar performances in both approaches. Since the results shows no considerable statistical differences among the two design approaches, we conclude that the usage of a textual approach is feasible, thus ERtext is a good tool alternative in the context of conceptual database modeling.", "num_citations": "1\n", "authors": ["2209"]}
{"title": "Enhancing the Feature Retrieval Process with Scoping and Tool Support: PAxSPL_v2\n", "abstract": " Software Product Lines (SPLs) are commonly adopted with an extractive approach, by performing a reengineering process in legacy systems, when dealing with variability and reuse became challenging. As a starting activity of the process, the legacy systems are analyzed to retrieve, categorize, and group their features in terms of commonality and variability. Due to the importance of this feature retrieving, we proposed the Prepare, Assemble, and Execute framework for SPL reengineering (PAxSPL). PAxSPL aims at guiding users to customize the feature retrieval for their scenario. In an initial evaluation of the PAxSPL in a real-world scenario, we could observe the need for including scoping activities and implementing a tool to make the framework more adoptable in practice. In this paper, we describe how we performed these improvements. We performed the evolution of PAxSPL by including SPL scoping\u00a0\u2026", "num_citations": "1\n", "authors": ["2209"]}
{"title": "Taxonomy of performance testing tools: a systematic literature review\n", "abstract": " Background: The knowledge and application of tools to automate performance testing is essential to ensure software reliability and therefore its quality. Aims: To identify and characterize existing performance testing tools reported in the literature. Method: A protocol was formulated and executed according to the guidelines for performing systematic literature reviews in Software Engineering. Results: The performance testing tools were classified according to their relevance in the literature, highlighting the most commonly used tools, their supported input approaches, workload approaches, monitored metrics and logging strategies. From the analysis of these results a taxonomy on performance testing tools was proposed using a Feature Model. Conclusion: With the results of this study, it was possible to quantify and qualify research related to existing performance testing technologies in the literature, and also to\u00a0\u2026", "num_citations": "1\n", "authors": ["2209"]}
{"title": "Performance Testing in Mobile Application: a Systematic Literature Map\n", "abstract": " Context: The technological evolution of wireless networks and the technological advancement of mobile devices make them ever more present in daily life, becoming almost indispensable solutions. With the popularization of mobile devices, developers need to be committed to building applications that can be reliable, robust, secure and that ensure adequate performance for their end users. A good practice to ensure the performance of mobile applications is through a performance testing approach. Although the literature can be used by specialists and non-specialists for decision-making and selection approaches for performance testing, it is limited in the sense of providing an overview. Goal: Our main objective is to contribute to the performance testing body of knowledge. Method: A protocol was formulated and executed according to the guidelines for performing systematic literature mappings in Software\u00a0\u2026", "num_citations": "1\n", "authors": ["2209"]}
{"title": "Uma Linguagem Espec\u00ed\ufb01ca de Dom\u00ednio para a Representa\u00e7\u00e3o de Modelos Conceituais de Bancos de Dados Relacionais\n", "abstract": " Com o avan\u00e7o da tecnologia os bancos de dados passaram a ser elementos vitais na sociedade contempor\u00e2nea. Posto isto, a capacita\u00e7\u00e3o na \u00e1rea para pro\ufb01ssionais oriundos da academia deve ser constante. Objetivando contribuir com uma alternativa open source relevante, este estudo prop\u00f5e uma Linguagem de Dom\u00ednio Espec\u00ed\ufb01co textual para apoiar o processo de ensino-aprendizagem da modelagem conceitual de banco de dados. Para isto houve a sele\u00e7\u00e3o do framework Xtext para apoiar o desenvolvimento inicial. Requisitos e decis\u00f5es de projeto foram concebidos para ent\u00e3o ser realizada a de\ufb01ni\u00e7\u00e3o preliminar de uma gram\u00e1tica. A implementa\u00e7\u00e3o de um prot\u00f3tipo funcional e a integra\u00e7\u00e3o da DSL em um RCP (Rich Client Platform) Eclipse foi feita. Dessa forma, houve o teste pr\u00e9vio onde o processo de modelagem com a nova linguagem ganhou recursos nativos como formata\u00e7\u00e3o, valida\u00e7\u00e3o e syntax highlighting", "num_citations": "1\n", "authors": ["2209"]}
{"title": "Features-oriented model-driven architecture: uma abordagem para MDD\n", "abstract": " O desenvolvimento de software dirigido por modelos, com a MDA, requer o refinamento de modelos de sistemas, inicialmente especificados em alto n\u00edvel e sem caracter\u00edsticas de plataformas, em modelos dependentes de plataformas. A Model Driven Architecture (MDA) apresenta uma t\u00e9cnica de modelagem voltada para arquiteturas, em que \u00e9 necess\u00e1rio aplicar mapeamentos e transforma\u00e7\u00f5es em modelos de sistemas para plataformas. Esse trabalho apresenta a abordagem FOMDA (Features-Oriented Model-Driven Architecture), que permite a desenvolvedores especificar modelos e gerenciar transforma\u00e7\u00f5es adotando a t\u00e9cnica MDA. A abordagem FOMDA combina Modelos de Features e MDA em um ambiente onde desenvolvedores s\u00e3o habilitados para representar caracter\u00edsticas atrav\u00e9s de features, mapeando-as para transforma\u00e7\u00f5es que geram a aplica\u00e7\u00e3o final. Este trabalho tamb\u00e9m apresenta um estudo de caso, que utiliza a abordagem FOMDA para auxiliar no desenvolvimento de um sistema de tempo real embarcado.", "num_citations": "1\n", "authors": ["2209"]}