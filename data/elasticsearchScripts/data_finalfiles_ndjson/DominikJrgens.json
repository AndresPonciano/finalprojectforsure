{"title": "Implementing mixed criticality software integration on multicore-a cost model and the lessons learned\n", "abstract": " The German funded project ARAMiS included work on several demonstrators one of which was a multicore approach on large scale software integration (LSSI) for the automotive domain. Here BMW and Audi intentionally implemented two different integration platforms to gain both experience and real life data on a Hypervisor based concept on one side as well as using only native AUTOSAR-based methods on the other side for later comparison. The idea was to obtain figures on the added overhead both for multicore as well as safety, based on practical work and close-to-production implementations. During implementation and evaluation on one hand there were a lot of valuable lessons learned about multicore in conjunction with safety. On the other hand valuable information was gathered to make it finally possible to set up a cost model for estimation of potential overhead generated by different integration\u00a0\u2026", "num_citations": "7\n", "authors": ["1125"]}
{"title": "Software Parallelization in Automotive Multi-Core Systems\n", "abstract": " In the context of the ARAMiS project, AUDI AG contributed the development of a multi-core demonstrator based on car functions already in production. For this demonstrator, these legacy car functions were ported from single-core platforms to a multi-core platform to gain real world close-to-production experience while utilizing the new technology. For complex functions with high demands for computational resources, it may be necessary to distribute computation over several cores. In this context, we investigated the parallelization of a legacy sequential AUTOSAR function. A main contribution of this work is an analysis of mechanisms provided by AUTOSAR, their limitations and, possible remedy. This paper will point out observations and experiences during the development of this demonstrator and show practical solutions for parallelization in an AUTOSAR environment. In our work, we analyze a sequential\u00a0\u2026", "num_citations": "5\n", "authors": ["1125"]}
{"title": "Survey on software engineering for scientific applications\n", "abstract": " Fields of modern science and engineering are in need of solving more and more complex numerical problems. The complexity of scientific software thereby rises continuously. This growth is caused by a number of changing requirements. Coupled phenomena gain importance and new technologies like computational-grids, graphical and heterogeneous multi-core processors have to be used to achieve high-performance.The amount of additional complexity can not be handled by a small group of specialised scientists. The interdiciplinary nature of scientific software thereby presents new challanges for software engineering. A paradigm shift towards a stronger separation of concerns becomes necessary in the development of future scientific software.", "num_citations": "4\n", "authors": ["1125"]}
{"title": "A process for stochastic material analysis based on empirical data\n", "abstract": " Material properties are often dominated by imperfections and geometrical variations in micro-scale. The manufacturing process of complex parts as stringers and their assembly creates specific microscopic imperfections whose influence to phenomena like delamination growth can not be understood with a deterministic homogenised material model. This paper describes a general approach to develop a stochastic model of anisotropic micro-structure on the basis of high-resolution image data. This approach uses a surrogate model for approximating material properties of meso-scale material blocks. The empirical material properties provided by the surrogate model are analysed for their marginal distribution and spatial covariance.", "num_citations": "3\n", "authors": ["1125"]}
{"title": "Survey on Software Engineering for Scienti\ufb01c Applications: Reuseable Software, Grid Computing and Application\n", "abstract": " Fields of modern science and engineering are in need of solving more and more complex numerical problems. The complexity of scienti\ufb01c software thereby rises continuously. This growth is caused by a number of changing requirements. Coupled phenomena gain importance and new technologies like the computational Grid, graphical and heterogeneous multi-core processors have to be used to achieve high-performance. The amount of additional complexity can not be handled by small groups of specialised scientists. The interdiciplinary nature of scienti\ufb01c software thereby presents new challanges for software engineering. A paradigm shift towards a stronger separation of concerns becomes necessary in the development of future scienti\ufb01c software. The coupling of independently simulated physical phenomena is an important example for a software-engineering concern in the domain of computational science. In this context, different simulation-programs model only a part of a more complex coupled system. The present work gives overview on paradigms which aim at making software-development in computational sciences more reliable and less interdependent. A special focus is put on the development of coupled simulations.", "num_citations": "3\n", "authors": ["1125"]}
{"title": "Elements of a computational framework for coupled simulations\n", "abstract": " Coupled problems arise because certain aspects of some systems have previously been modelled separately, assuming (implicitly) an uncoupled behaviour. More often then not, computational approaches and mature software have been developed for each of these aspects in isolation. If one has to consider now the coupled problem, it would be advantageous if this previous work could be put to good use. This, in particular, concerns the developed software. In this presentation we will analyse the requirements for this to be achieved, and outline some of the possible solutions. Several tasks have to be accomplished: Non\u2010matching spatial grids and geometric representations have to be joined, fulfilling certain consistency requirements. Similarly non\u2010matching time\u2010stepping schemes have tobe combined. After outlining a possible mathematical formulation for the coupling, the joining of the software will be\u00a0\u2026", "num_citations": "2\n", "authors": ["1125"]}