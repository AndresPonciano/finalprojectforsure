{"title": "Active muscle assistance device and method\n", "abstract": " A method for controlling movement using an active powered device including an actuator, joint position sensor, muscle stress sensor, and control system. The device provides primarily muscle support although it is capable of additionally providing joint support (hence the name \u201cactive muscle assistance device\u201d). The device is designed for operation in several modes to provide either assistance or resistance to a muscle for the purpose of enhancing mobility, preventing injury, or building muscle strength. The device is designed to operate autonomously or coupled with other like device (s) to provide simultaneous assistance or resistance to multiple muscles.", "num_citations": "225\n", "authors": ["525"]}
{"title": "TNet: A reliable system area network\n", "abstract": " A major departure from traditional I/O systems, TNet is a new system area network designed to support current and future needs for reliable, efficient communications among processors and peripherals. It is an extensible hardware-software layer that allows very large configurations by logically and physically isolating processor buses from I/O buses. TNet features wormhole routing, packet-switched transfers, and point-to-point links.< >", "num_citations": "225\n", "authors": ["525"]}
{"title": "Multiple-processor computer system with asynchronous execution of identical code streams\n", "abstract": " A fault-tolerant computer system employs multiple identical CPUs executing the same instruction stream, each with their own independent memory. The multiple CPUs are loosely synchronized, as by counting events such as operating cycles and stalling any CPU ahead of others. Data output references via separate busses are voted at separate ports of each of the CPUs by voting circuits which detect when all CPUs have made the same reference, and only then pass on identical references to external I/O busses. The ports may include FIFO buffers to allow output references from the asynchronous CPUs to be handled as the CPUs load the FIFOs at different times. Input data to the CPUs from the I/O busses is not voted, but is buffered to allow the CPUs to accept it at their own clock rate.", "num_citations": "154\n", "authors": ["525"]}
{"title": "Fail-fast, fail-functional, fault-tolerant multiprocessor system\n", "abstract": " A multiprocessor system includes a number of sub-processor systems, each substantially identically constructed, and each comprising a central processing unit (CPU), and at least one I/O device, interconnected by routing apparatus that also interconnects the sub-processor systems. A CPU of any one of the sub-processor systems may communicate, through the routing elements, with any I/O device of the system, or with any CPU of the system. The CPUs are structured to operate in one of two modes: a simplex mode in which the two CPUs operate independently of each other, and a duplex mode in which the CPUs operate in lock-step synchronism to execute each instruction of identical instruction streams at substantially the same time. Communications between I/O devices and CPUs is by packetized messages. Interrupts from I/O devices are communicated from the I/O devices to the CPUs (or from one CPU to\u00a0\u2026", "num_citations": "149\n", "authors": ["525"]}
{"title": "Self-checked, lock step processor pairs\n", "abstract": " A multiprocessor system includes a number of sub-processor systems, each substantially identically constructed, and each comprising a central processing unit (CPU), and at least one I/O device, interconnected by routing apparatus that also interconnects the sub-processor systems. A CPU of any one of the sub-processor systems may communicate, through the routing elements, with any I/O device of the system, or with any CPU of the system.", "num_citations": "148\n", "authors": ["525"]}
{"title": "Fault-tolerant computer with three independently clocked processors asynchronously executing identical code that are synchronized upon each voted access to two memory modules\n", "abstract": " A computer system in a fault-tolerant configuration employs three identical CPUs executing the same instruction stream, with two identical, self-checking memory modules storing duplicates of the same data. Memory references by the three CPUs are made by three separate busses connected to three separate ports of each of the two memory modules. The three CPUs are loosely synchronized, as by detecting events such as memory references and stalling any CPU ahead of others until all execute the function simultaneously; interrupts can be synchronized by ensuring that all three CPUs implement the interrupt at the same point in their instruction stream. Memory references via the separate CPU-to-memory busses are voted at the three separate ports of each of the memory modules. I/O functions are implemented using two identical I/O busses, each of which is separately coupled to only one of the memory\u00a0\u2026", "num_citations": "148\n", "authors": ["525"]}
{"title": "System and method for configuring adaptive sets of links between routers in a system area network (SAN)\n", "abstract": " Adaptive sets of lanes are configured between routers in a system area network. Source nodes determine whether packets may be adaptively routed between the lanes by encoding adaptive control bits in the packet header. The adaptive control bits also facilitate the flushing of all lanes of the adaptive set. Adaptive sets may also be used in uplinks between levels of a fat tree.", "num_citations": "144\n", "authors": ["525"]}
{"title": "Multiple instruction issue in the NonStop Cyclone processor\n", "abstract": " This paper describes the architecture for issuing multiple instructions per clock in the NonStop Cyclone Processor. Pairs of instructions are fetched and decoded by a dual two-stage prefetch pipeline and passed to a dual six-stage pipeline for execution. Dynamic branch prediction is used to reduce branch penalties. A unique microcode routine for each pair is stored in the large duplexed control store. The microcode controls parallel data paths optimized for executing the most frequent instruction pairs. Other features of the architecture include cache support for unaligned double-precision accesses, a virtually-addressed main memory, and a novel precise exception mechanism.", "num_citations": "143\n", "authors": ["525"]}
{"title": "Active muscle assistance and resistance device and method\n", "abstract": " A method for controlling movement using an active powered device including an actuator, joint position sensor, muscle stress sensor, and control system. The device provides primarily muscle support although it is capable of additionally providing joint support (hence the name \u201cactive muscle assistance device\u201d). The device is designed for operation in several modes to provide either assistance or resistance to a muscle for the purpose of enhancing mobility, preventing injury, or building muscle strength. The device is designed to operate autonomously or coupled with other like device (s) to provide simultaneous assistance or resistance to multiple muscles.", "num_citations": "127\n", "authors": ["525"]}
{"title": "Parallel pipelined merge engines\n", "abstract": " An image generator is organized into a plurality of rendering engines, each of which renders an image of a part scene and provides the part image to a merge engine associated with that rendering engine. The image is a part image in that it usually contains less than all of the objects in the image to be rendered. The merge engine merges the part image from its associated rendering engine with the part image provided by a prior merge engine and provides the merged part image to a next merge engine. One or more merge engines are designated the output merge engines and these output merge engines output a merged part image that is (a portion of) the ultimate output of the image generator, the full rendered image. Each merge engine performs its merge process on the pixels it has from its rendering engine and from its prior neighbor merge engine, in a pipelined manner and without necessarily waiting for all\u00a0\u2026", "num_citations": "127\n", "authors": ["525"]}
{"title": "Memory system using linear array wafer scale integration architecture\n", "abstract": " A cell architecture for use in a linear array wafer scale integration includes a plurality of multiplexers, each associated with a boundary of the cell, and each selectively operable to permit ingress to and egress from function logic of the cell by neighboring cells. Each multiplexer is configured to receive and select between input and output busses from and to a neighbor cell adjacent the associated boundary. The output of each multiplexer connects to the output bus of the boundary adjacent to that with which the multiplexer is associated. When such cell architecture is used in wafer scale integration, oriented so that opposing sides of each cell are rotated 180 degrees relative to any cell at any boundary, the multiplexers can be configured to form a linear array of cells that ensures a fixed, known, delay from function logic to function logic of the cells.", "num_citations": "125\n", "authors": ["525"]}
{"title": "ServerNet deadlock avoidance and fractahedral topologies\n", "abstract": " This paper examines the problems of deadlock avoidance in multistage networks, and proposes a new class of scalable topologies for constructing large networks without introducing loops that could cause deadlocks. The new topologies, called \"fractahedrons,\" are deadlock-free and reduce the maximum link contention compared to other networks. The use of fractahedral topologies is illustrated by various configurations of 6-port ServerNet routers. The properties of fractahedral networks are compared with networks configured as a mesh, hypercube or fat tree.", "num_citations": "122\n", "authors": ["525"]}
{"title": "Logical, fail-functional, dual central processor units formed from three processor units\n", "abstract": " A computing system includes a pair of central processor units structured to operate in substantial synchronism to each execute the same instruction at substantially the same moment in time of identical instruction streams to achieve a logical central processor unit with fail-functional operation. One of the central processor units includes a pair of processors that execute, instruction by instruction, the instruction stream with checking for fail-fast operation. The other central processor unit includes only a single processor element. The system achieves a low cost fail-functional architecture.", "num_citations": "118\n", "authors": ["525"]}
{"title": "Network message routing using routing table information and supplemental enable information for deadlock prevention\n", "abstract": " A processing system includes multiple processor units and multiple input/output elements communicatively interconnected by a system area network having a plurality of multi-ported router elements. Communication between the system elements uses message packets that contain, among other things, destination information that identifies the intended recipient of the message packet. That destination information is used, at least in part, for routing message packets from a its source to its intended destination. Deadlocks are eliminated by providing each router with information as to which ports cannot be used for re-transmission of a message packet, depending upon which port is receiving that message packet.", "num_citations": "111\n", "authors": ["525"]}
{"title": "Encoding for communicating data and commands\n", "abstract": " A method of encoding data and commands as N-bit words includes using a first portion of the word to identify whether the word carries data or a command. In the case of a command, the command is in a second portion of the word. In the case of data, a part of the data is contained in the second portion of the word, while the remaining part of the data is encoded in the first portion of the word.", "num_citations": "106\n", "authors": ["525"]}
{"title": "Method of data communication flow control in a data processing system using busy/ready commands\n", "abstract": " A multiprocessor system includes a number of sub-processor systems, each substantially identically constructed, and each comprising a central processing unit (CPU), and at least one I/O device, interconnected by routing apparatus that also interconnects the sub-processor systems. A CPU of any one of the sub-processor systems may communicate, through the routing elements, with any I/O device of the system, or with any CPU of the system.", "num_citations": "104\n", "authors": ["525"]}
{"title": "Multiple processor system with standby sparing\n", "abstract": " A multiprocessor system includes a number of sub-processor systems, each substantially identically constructed, and each comprising a central processing unit (CPU), and at least one I/O device, interconnected by routing apparatus that also interconnects the sub-processor systems. A CPU of any one of the sub-processor systems may communicate, through the routing elements, with any I/O device of the system, or with any CPU of the system. Communications between I/O devices and CPUs is by packetized messages. Interrupts from I/O devices are communicated from the I/O devices to the CPUs (or from one CPU to another CPU) as message packets. CPUs and I/O devices may write to, or read from, memory of a CPU of the system. Memory protection is provided by an access validation method maintained by each CPU in which CPUs and/or I/O devices are provided with a validation to read/write memory of that\u00a0\u2026", "num_citations": "102\n", "authors": ["525"]}
{"title": "Method and apparatus for synchronizing a plurality of processors\n", "abstract": " A method and apparatus for synchronizing a plurality of processors. Each processor runs off its own independent clock, indicates the occurrence of a prescribed process or event on one line and receives signals on another line for initiating a processor wait state. Each processor has a counter which counts the number of processor events indicated since the last time the processors were synchronized. When an event requiring synchronization is detected by a sync logic circuit associated with the processor, the sync logic circuit generates the wait signal after the next processor event. A compare circuit associated with each processor then tests the other event counters in the system and determines whether its associated processor is behind the others. If so, the sync logic circuit removes the wait signal until the next processor event. The processor is finally stopped when its event counter matches the event counter for\u00a0\u2026", "num_citations": "93\n", "authors": ["525"]}
{"title": "Refresh control for dynamic memory in multiple processor system\n", "abstract": " A computer system in a fault-tolerant configuration employs three identical CPUs executing the same instruction stream, with two identical, self-checking memory modules storing duplicates of the same data. Memory references by the three CPUs are made by three separate busses connected to three separate ports of each of the two memory modules. The three CPUs are loosely synchronized, as by detecting events such as memory references and stalling any CPU ahead of others until all execute the function simultaneously; interrupts can be synchronized by ensuring that all three CPUs implement the interrupt at the same point in their instruction stream. Memory references via the separate CPU-to-memory busses are voted at the three separate ports of each of the memory modules. Each CPU has a local memory, separate from the memory modules, and this local memory is of the dynamic type so it must be\u00a0\u2026", "num_citations": "86\n", "authors": ["525"]}
{"title": "Foot pad device and method of obtaining weight data\n", "abstract": " A foot pad device and a method of obtaining weight data from a force sensor in a foot pad worn by a user engaging in a footstep, including placing the force sensor under the ball of the foot of the user and/or the heel of the foot of the user; receiving an entered patient weight value for the user; collecting force data from the force sensor; calculating a weight value based on the collected force data and a scaling and/or offset parameter; comparing the calculated weight value to the entered patient weight value; comparing the calculated weight value to zero; adjusting the scaling and/or offset parameter; and repeating the steps periodically. The method may include comparing the collected force data to a functionality indication range, flagging the force sensor if the collected force data is outside the functionality indication range, and disregarding force data from the flagged force sensor.", "num_citations": "85\n", "authors": ["525"]}
{"title": "Storage access validation to data messages using partial storage address data indexed entries containing permissible address range validation for message source\n", "abstract": " A multiprocessor system includes a number of central processing unit (CPUs) and at least one input/output (I/O) device interconnected by routing apparatus for communicating packetized messages therebetween. The messages contain address information identifying the source and destination of the message, and may also contain requests to write to, or read from, storage of a CPU. Protection against errant reads or writes is provided by an access validation method that utilizes access validation information contained in plural entries maintained by each CPU. Each entry provides validation by identifying what elements of the system has read and/or write wccss to the memory of that CPU, without which memory access is denied.", "num_citations": "83\n", "authors": ["525"]}
{"title": "Cell structure for linear array wafer scale integration architecture with capability to open boundary i/o bus without neighbor acknowledgement\n", "abstract": " A cell architecture for use in a linear array wafer scale integration includes a plurality of multiplexers, each associated with a boundary of the cell, and each selectively operable to permit ingress to and egress from function logic of the cell by neighboring cells Each multiplexer is configured to receive and select between input and output busses from and to a neighbor cell adjacent the associated boundary. The output of each multiplexer connects to the output bus of the boundary adjacent to that with which the multiplexer is associated. When such cell architecture is used in wafer scale integration, oriented so that opposing sides of each cell are rotated 180 degrees relative to any cell at any boundary, the multiplexers can be configured to form a linear array of cells that ensures a fixed, known delay from function logic to function logic of the cells.", "num_citations": "80\n", "authors": ["525"]}
{"title": "A bio-robotic leg orthosis for rehabilitation and mobility enhancement\n", "abstract": " This paper describes a wearable powered leg orthosis that includes a high-torque actuator, electronics, sensors, and embedded firmware. The device provides multiple modes of operation including automatic assistance, manual assistance, continuous passive motion and robotic therapy. Patients affected by neurological conditions including stroke, MS, and Parkinson's disease may benefit from robotic therapy and from the improved mobility provided by this portable, lightweight device. A preliminary study of chronic stroke patients has shown retained improvement in walking speed for patients undergoing rehabilitation with the device.", "num_citations": "79\n", "authors": ["525"]}
{"title": "A flexible ServerNet-based fault-tolerant architecture\n", "abstract": " The paper introduces a new fault-tolerant architecture that combines the best attributes of the software fault-tolerant Tandem NonStop systems with the hardware fault-tolerant integrity systems. This architecture is based on the ServerNet System Area Network (SAN). ServerNet, formerly called TNet, is a packetized byte-serial multistage network that supports both I/O and interprocessor traffic in fault-tolerant systems. Dual-ported CPUs and VO controllers connect to independent subnetworks in a variety of different network topologies. Systems can expand either through shared or distributed memory multiprocessing. A separate maintenance system controls system initialization, online configuration changes, and error reporting. The architecture's flexibility makes it suitable for a wide range of environments with varying requirements for performance, fault tolerance, and software compatibility.< >", "num_citations": "77\n", "authors": ["525"]}
{"title": "Method and apparatus for recovering from an incorrect branch prediction in a processor that executes a family of instructions in parallel\n", "abstract": " A branch recovery mechanism completes the processing of a concurrently issued family of instructions depending on the location of the branch instruction in the family and on whether the branch was correctly predicted. If the branch was not correctly predicted, the writes and stores of instructions in the family the precede the branch instruction are completed and those instructions are retired. However, the writes and stores of the instructions in the family following the branch instruction are inhibited.", "num_citations": "67\n", "authors": ["525"]}
{"title": "Method and apparatus for synchronizing a plurality of processors\n", "abstract": " A method and apparatus for synchronizing a plurality of processors. Each processor runs off of its own independent clock, indicates the occurrence of a prescribed process or event on one line and receives signals on another line for initiating a processor wait state. Each processor has a counter which counts the number of processor events indicated since the last time the processors were synchronized. When an event requiring synchronization is detected by a sync logic circuit associated with the processor, the sync logic circuit generates the wait signal after the next processor event. A compare circuit associated with each processor then tests the other event counters in the system and determines whether its associated processor is behind the others. If so, the sync logic circuit removes the wait signal until the next processor event. The processor is finally stopped when its event counter matches the event counter\u00a0\u2026", "num_citations": "64\n", "authors": ["525"]}
{"title": "Method for verifying responses to messages using a barrier message\n", "abstract": " A processing system includes a number of communicatively interconnected system elements structured to send and receive data in the form of message packets. Message packets sent to a destination with expectation of response are timed, and if no response is received within an allotted time, a barrier transaction message packet is sent to the destination. The destination is required to provide a barrier transaction response to the barrier transaction packet only after it has responded to, or discarded, all prior received message packets requiring response by the destination. When the source of the barrier transaction message packet receives the barrier transaction response it can be assured that the communication path to the destination is in order, and no prior (late) responses will be forthcoming.", "num_citations": "61\n", "authors": ["525"]}
{"title": "Task flow computer architecture\n", "abstract": " A computer architecture has a plurality of processing cells interconnected to perform programming tasks. Each cell contains both memory and processing elements. Memory packets contain an instruction, a data element, and a pointer to another memory packet. Tasks are executed by following a linked list of memory packets. Transmission packets communicate instructions and register values along the linked list. A plurality of computer processes may be executed simultaneously.", "num_citations": "57\n", "authors": ["525"]}
{"title": "Computer architecture capable of concurrent issuance and execution of general purpose multiple instructions\n", "abstract": " A system for issuing a family of instructions during a single clock includes a decoder for decoding the family of instructions and logic, responsive to the decode result, for determining whether resource conflicts would occur if the family were issued during one clock. If no resource conflicts occur, an execution unit executes the family regardless of whether dependencies among the instructions in the family exist.", "num_citations": "56\n", "authors": ["525"]}
{"title": "Interrupts between asynchronously operating CPUs in fault tolerant computer system\n", "abstract": " A computer system in a fault-tolerant configuration employs three identical CPUs executing the same instruction stream, with two identical, self-checking memory modules storing duplicates of the same data. Memory references by the three CPUs are made by three separate busses connected to three separate ports of each of the two memory modules. The three CPUs are loosely synchronized, as by detecting events such as memory references and stalling any CPU ahead of others until all execute the function simultaneously; interrupts can be synchronized by ensuring that all three CPUs implement the interrupt at the same point in their instruction stream. Memory references via the separate CPU-to-memory busses are voted at the three separate ports of each of the memory modules. I/O functions are implemented using two identical I/O busses, each of which is separately coupled to only one of the memory\u00a0\u2026", "num_citations": "55\n", "authors": ["525"]}
{"title": "Methods and systems for selecting block sizes for use with disk arrays\n", "abstract": " The present invention is related to methods and systems for improving the read performance of a drive array, such as a RAID 5 array, having an \u201cn\u201d number of drives so that the read performance is greater than (n\u2212 1) times that of an independent single drive. Formatting information for each of at least three drives is received. A first parity block size for use with corresponding first zones of the at least three drives is selected. A second parity block size different than the first parity block size is selected for use with corresponding second zones of the at least three drives. The first and the second parity block sizes are selected to increase the read performance from the drive array based on at least a portion of the formatting information.", "num_citations": "50\n", "authors": ["525"]}
{"title": "Methods and systems for dynamically distributing disk array data accesses\n", "abstract": " The present invention is related to methods and systems for reducing head movements during accesses to drives within a drive array by dynamically selecting which one of a first drive and a second drive is to be used to read data stored within a first logical address range. A first set of data is stored in both the first drive and the second drive. The logical block addresses accessed by at least a portion of read operations are monitored. The first drive is designated as a data source for data stored on both the first drive and the second drive in the first logical address range. The second drive is designated as a data source for data stored on both the first drive and the second drive outside the first logical address range. The designation of drives is performed at least partly in response to the monitoring act.", "num_citations": "49\n", "authors": ["525"]}
{"title": "Performance evaluation of the ServerNet (R) SAN under self-similar traffic\n", "abstract": " Self-similar traffic distributions have been observed in a wide range of networking applications and models such as LANs, WANs, telnet, FTP, WWW, ISDN, SS7 and VBR traffic over ATM. Therefore, it has been suggested that many other theoretical protocols and systems need to be reevaluated under this different type of traffic before practical implementations potentially show their faults. The ServerNet SAN is a new core technology for server architectures that focuses on moving data. It is a wormhole-routed, packet-switched, point-to-point network with special attention paid to reducing latency and assuring reliability. In this paper we investigate the implications of self-similar traffic distributions in the ServerNet SAN, and compare the results with those obtained on the basis of the Poisson assumption.", "num_citations": "48\n", "authors": ["525"]}
{"title": "ServerNet SAN I/O Architecture\n", "abstract": " This paper presents several different ways of designing systems with ServerNet-connected I/O devices. The ServerNet System Area Network is a multistage, wormholerouted network designed for reliable I/O and inter-processor communications. Designing a SAN to be used both for I/O and IPC has benefits in system cost and flexible expansion, but requires a network well-suited to the task. The SAN must support read operations, and must have other features for reliability, expandability, and fairness. The paper discusses ServerNet-based I/O architectures for fault-tolerant and clustered systems. The clusters can connect I/O subsystems with embedded SAN support, I/O controllers on remote PCI busses, or native peripherals.", "num_citations": "48\n", "authors": ["525"]}
{"title": "Disk drive data protection using clusters containing error detection sectors\n", "abstract": " The present invention is related to methods and apparatus that can enhance the reliability of a hard drive by providing a built-in error check in the drive. Conventional hard drives can erroneously seek to an incorrect location on a platter of the hard drive. The erroneous seek corrupts the data stream and is difficult to detect and correct. Embodiments of the present invention can detect a logical block address assigned to a portion of the platter of the hard drive and thereby detect when an erroneous seek has occurred. Upon detection of an error, one embodiment of the present invention can further take corrective action to read from the correct portion of the platter.", "num_citations": "46\n", "authors": ["525"]}
{"title": "The risk of data corruption in microprocessor-based systems\n", "abstract": " Most microprocessor-based systems provide little or no checking for failures of the microprocessor itself. These systems rely on the high reliability of VLSI and the inherent run-time checks (e.g., virtual memory protection and illegal instruction exceptions) to ensure data integrity. The authors present a model for analyzing the vulnerability of systems to undetected data corruptions. The model estimates expected corruption rates based on commercial reliability studies, field experience with fault-tolerant systems, and academic fault-injection studies. They find that without lockstep, an undetected data corruption may occur nearly once per month in a population of 10,000 processors. Given the available data, however, it is difficult to provide tight bounds for the frequency of data integrity violations and the authors' current estimates of the data corruption rate vary by more than two orders of magnitude. Further study on\u00a0\u2026", "num_citations": "46\n", "authors": ["525"]}
{"title": "Routing arbitration for shared resources\n", "abstract": " A data communicating device, having a number of inputs whereat data is received for communication from one of a number of outputs of the device, includes apparatus for providing two levels of arbitration to select one of the inputs for data communication to an output. The first (lower) level of arbitration bases selection upon a round-robin order; the second (higher) arbitration level selects inputs based upon an indication from an input of an undue wait for access to the output over a period of time. Each input is provided a modulo-N counter, and a digital counter. Each time an input contends for access to an output and loses to selection by the output to another input, the modulo-N counter is incremented by an assigned value for that input. When N is exceed without access, the digital counter is incremented. The content of the counter operates to force the high-level arbitration.", "num_citations": "45\n", "authors": ["525"]}
{"title": "Use of activity bins to increase the performance of disk arrays\n", "abstract": " A disk array controller reliably improves performance in RAID configurations without the need for a battery backup. Write completion interrupts are queued until a write cache flush has been performed and are then sent to a host system. States of ranges of disk addresses (activity bins) are stored in nonvolatile storage elements associated with the ranges. The states allow rebuild times to be reduced after power failures and drive failures. A range is in a Changing state if at least one of the addresses is the target of a write operation that has been initiated but not completed. The range is in a Stable state if no addresses are the target of an uncompleted write operation. Two additional states are used to identify ranges of disk addresses that have been zeroed or never been written to. The additional states allow substantial reductions in RAID volume creation times.", "num_citations": "43\n", "authors": ["525"]}
{"title": "Paired instruction processor precise exception handling mechanism\n", "abstract": " A mechanism for handling exceptions in a processor system that issues a family of more than one instruction during a single clock that utilizes the exception handling procedures developed for single instructions. The mechanism detects an exception associated with one of the instructions in the family, inhibits the data writes for the instructions in the family, flushes the pipeline, and reissues the instruction singly. The exception handling procedure for the single instruction may then be utilized.", "num_citations": "43\n", "authors": ["525"]}
{"title": "Electrostatic actuator with fault tolerant electrode structure\n", "abstract": " A high-power electrostatic actuator comprising rotor and stator layers with fault-tolerant electrode structures, a housing to contain the electrodes and dielectric fluid, and electronic circuitry driving a plurality of high-voltage phases. The actuator is constructed from multiple rotor and stator films separated by spacing elements. The electrode structure provides self-alignment for precise assembly. The actuator assembly includes built-in fine-position sensors to allow optimal timing in powering phases, and a coarse position sensor for feedback control. The electrode structure has a large region of linear force to provide low torque-ripple allowing simple high/low voltage pulsing instead of analog high voltage waveforms. Single or double sided flexible circuit manufacturing techniques are used to fabricate the rotor and stator films at low cost.", "num_citations": "41\n", "authors": ["525"]}
{"title": "Pluggable drive carrier assembly\n", "abstract": " A computer system with a pluggable drive carrier assembly comprises a cabinet and a circuit board disposed within the cabinet. The circuit board, such as a base board, has a number of connectors attached to a first surface. A drive unit such as a hard disk drive is secured within a carrier. A logic connector and a power connector are adapted to attach to the drive. A flexible circuit assembly connects the logic connector and the power connector to a blind plug. The blind plug is adapted to mate with any of the number of connectors. A cam surface and lever arrangement is used to urge into engagement the blind plug and the selected one of the number of connectors. The logic connector and the power connector both have a number of contacts that extend in a direction generally parallel to the first surface of the circuit board such that a backplane is not required and can be eliminated.", "num_citations": "39\n", "authors": ["525"]}
{"title": "Use of deferred write completion interrupts to increase the performance of disk operations\n", "abstract": " A disk array controller reliably improves performance in RAID configurations without the need for a battery backup. Write completion interrupts are queued until a write cache flush has been performed and are then sent to a host system. States of ranges of disk addresses (activity bins) are stored in nonvolatile storage elements associated with the ranges. The states allow rebuild times to be reduced after power failures and drive failures. A range is in a Changing state if at least one of the addresses is the target of a write operation that has been initiated but not completed. The range is in a Stable state if no addresses are the target of an uncompleted write operation. Two additional states are used to identify ranges of disk addresses that have been zeroed or never been written to. The additional states allow substantial reductions in RAID volume creation times.", "num_citations": "38\n", "authors": ["525"]}
{"title": "Windows 2000 Disk IO Performance\n", "abstract": " This paper is an empirical study of the random and sequential I/O performance of Windows 2000\u2122 using the NT File System. It continues the work done by Riedel, et. al. in their 1997 paper exploring sequential IO performance under Windows NT 4.0\u2122. This paper explores the performance and overhead of today\u2019s Intel Pentium III\u2122 based memory and IO subsystems, including the processor bus, the PCI bus, the disk controllers, the SCSI and IDE buses, and the disk media. It also examines the performance available from IDE RAID, a relatively new technology built from inexpensive IDE disks. Network IO performance is briefly covered. We describe how to achieve good throughput, and discuss the major bottlenecks. While Riedel\u2019s model of software performance remains largely unchanged, increases in hardware performance have made the 32bit, 33MHz PCI bus the dominant bottleneck reaching saturation with three disks.", "num_citations": "37\n", "authors": ["525"]}
{"title": "Therapeutic method and device for rehabilitation\n", "abstract": " The invention relates to embodiments of methods for extending a subject-controllable range of joint motion, and for increasing subject control of joint movement within a range of motion. Embodiments include fastening a powered device around a joint so as to be able to control the joint, allowing the subject to move the joint within a range of volitional motion, and then engaging the powered device to support movement of the joint into an expanded, rehabilitative range. In some embodiments, the device supports joint movement by substantially providing the force to move the joint beyond the volitional boundary. In other embodiments, supporting movement includes the subject substantially providing the force, and the device allowing movement only in a desired direction. The invention further relates to a system for increasing the functional capability of a joint by implementing embodiments of the method. By such\u00a0\u2026", "num_citations": "35\n", "authors": ["525"]}
{"title": "Method and apparatus for executing tasks by following a linked list of memory packets\n", "abstract": " A computer architecture has a plurality of processing cells interconnected to perform programming tasks. Each cell contains both memory and processing elements. Memory packets contain an instruction, a data element, and a pointer to another memory packet. Tasks are executed by following a linked list of memory packets. Transmission packets communicate instructions and register values along the linked list. A plurality of computer processes may be executed simultaneously.", "num_citations": "35\n", "authors": ["525"]}
{"title": "Actuator system and method for extending a joint\n", "abstract": " An actuator system for assisting extension of a biological joint is provided with a motor assembly, a rotary-to-linear mechanism, and an extension stop. The rotary-to-linear mechanism includes a screw that accepts rotational output of the motor assembly, and a nut that cooperates with the screw to convert rotational movement of the screw to linear movement of the nut. The extension stop is driven by linear movement of the nut in an extension direction to cause extension of the biological joint. The motor assembly, the rotary-to-linear mechanism and the extension stop cooperate to allow unpowered flexion of the joint. The system is configured without a flexion stop, and is configured such that the nut cannot drive the joint in a flexion direction. Methods of use are also disclosed.", "num_citations": "34\n", "authors": ["525"]}
{"title": "Apparatus and method for reading, writing, and refreshing memory with direct virtual or physical access\n", "abstract": " A computer memory system is provided. Received memory requests can be for addresses which are virtual or physical. The type of address is determined, and a virtual/physical bit is set and stored. At least row address bits are compared to one or more registers which contain either a virtual or a physical row address, corresponding to a row addressed by a row address latch. When there is a hit with respect to one of these registers, column address bits are used to select the requested memory element, without the necessity for a virtual-to-physical translation. When there is a miss on all registers, a physical address is obtained, either from the requested address when this is physical, or from a virtual-to-physical translation. The physical address is used to load a new row address into a row address latch. Some column address bits are changed only when there has been a miss. A refresh cycle is described, which\u00a0\u2026", "num_citations": "32\n", "authors": ["525"]}
{"title": "High-torque motor\n", "abstract": " A motor that delivers high force linear motion or high torque rotary motion to a moving element. The motor may include a driving brake, a driver, a holding brake and a flexible moving element. Operation of the motor may involve activating the holding brake, activating the driver to flex the moving element, activating the holding brake to maintain the position of a portion of the moving element, releasing the driving brake, and restoring the moving element to an unflexed position. The elements are arranged to provide linear motion, belt-driven rotary motion, or directly-coupled rotary motion using brakes and drivers arranged in linear or circular fashion. Drivers may be linear or rotary actuators or motors based on electrostatic, piezoelectric, magnetic, or electrostrictive properties. The brakes may be applied through electrostatic forces, magnetic forces, or mechanical gears engaged with a linear or rotary driving mechanism.", "num_citations": "31\n", "authors": ["525"]}
{"title": "Method and devices for moving a body joint\n", "abstract": " Portable devices and methods for preventing deep vein thrombosis (DVT) by assuring that the ankle is flexed and extended sufficiently to promote blood flow in the lower leg are disclosed. The device includes an actuator with a free movement mode that allows a patient to move freely between activations or to initiate movement to delay a next automatic activation.", "num_citations": "28\n", "authors": ["525"]}
{"title": "Orthotic device sensor\n", "abstract": " A general-purpose force sensor, which can be used with an orthotic device, is provided utilizing both resistive and capacitive techniques for improved accuracy and reliability compared to either type of sensor alone. The system can detect internal fault conditions and continues to operate correctly despite the failure of one of the sensors. The sensor can be self-calibrating to give accurate readings despite changes in the physical properties of the sensing elements over time.", "num_citations": "27\n", "authors": ["525"]}
{"title": "Rotary actuator\n", "abstract": " A technique for providing a variable-ratio coupling between output shaft and input motor involves driving an output shaft with drivers that are out of phase with each other. Advantageously, the technique provides a gear reduction via a simple, high-efficiency mechanism; continuous output torque is provided by alternating the load between two belts deflected by, by way of example but not limitation, cam devices.", "num_citations": "27\n", "authors": ["525"]}
{"title": "Power regeneration in active muscle assistance device and method\n", "abstract": " A method for controlling movement using an active powered device including an actuator, joint position sensor, muscle stress sensor, and control system. The device provides primarily muscle support although it is capable of additionally providing joint support (hence the name \u201cactive muscle assistance device\u201d). The device is designed for operation in several modes to provide either assistance or resistance to a muscle for the purpose of enhancing mobility, preventing injury, or building muscle strength. The device is designed to operate autonomously or coupled with other like device (s) to provide simultaneous assistance or resistance to multiple muscles.", "num_citations": "27\n", "authors": ["525"]}
{"title": "Continuously variable transmission\n", "abstract": " A technique for providing a variable-ratio coupling between output shaft and input motor involves driving an output shaft with drivers that are out of phase with each other. Advantageously, the technique provides a gear reduction via a simple, high-efficiency mechanism; continuous output torque is provided by alternating the load between two belts deflected by, by way of example but not limitation, cam devices. The technique provides high torque and allows the torque to be traded for speed at a given power level, and provides continuous output torque when operated as a motor or continuous braking forces when operated as a generator. A system according to the technique can be used as a transmission to couple rotary or oscillating forces from an input drive shaft to a continuous, variable-ratio output shaft.", "num_citations": "26\n", "authors": ["525"]}
{"title": "Intention-based therapy device and method\n", "abstract": " A method for controlling movement using an active powered device including an actuator, joint position sensor, muscle stress sensor, and control system. The device provides primarily muscle support although it is capable of additionally providing joint support (hence the name \u201cactive muscle assistance device\u201d). The device is designed for operation in several modes to provide either assistance or resistance to a muscle for the purpose of enhancing mobility, preventing injury, or building muscle strength. The device is designed to operate autonomously or coupled with other like device (s) to provide simultaneous assistance or resistance to multiple muscles.", "num_citations": "25\n", "authors": ["525"]}
{"title": "ServerNet-II: A Reliable Interconnect for Scalable High-Performance Cluster Computing\n", "abstract": " The ServerNet-II System Area Network (SAN) is Compaq's native hardware implementation of the Virtual Interface (VI) Architecture. The ServerNet-II SAN implements the VI message passing and remote memory operation models. These models are supported by a VI Processor (VIP) mechanism for inter-process communication and by a Data Channel Engine (DCE) mechanism for intelligent scalable I/O across a network. Communication protocols are implemented in native hardware to eliminate the CPU overhead that is normally associated with message passing. Data links provide 1.25+ 1.25 gigabits per second of bi-directional bandwidth at distances up to 5 kilometers over standard gigabit Ethernet physical media. A Fat Pipe capability increases the effective bandwidth to 5.0+ 5.0 gigabits per second by merging sets of parallel links. This capability makes it possible to construct network topologies in which the bandwidth distribution is non-uniform. Best-case latency for short messages has been measured in single-digit microseconds. The ServerNet-II SAN is a reliable technology with fault-tolerant mechanisms at multiple architectural levels. These mechanisms automatically recover from link level failures while maintaining guarantees of reliable and ordered message delivery. This paper presents an introduction to the ServerNet-II SAN with a focus on it's use in scientific and technical cluster computing.", "num_citations": "25\n", "authors": ["525"]}
{"title": "Actuator system with a multi-motor assembly for extending and flexing a joint\n", "abstract": " An actuator system for extending and flexing a joint, including a multi-motor assembly for providing a rotational output, a rotary-to-linear mechanism for converting the rotational output from the multi-motor assembly into an extension and flexion of the joint, and a controller for operating the actuator system in several operational modes. The multi-motor assembly preferably combines power from two different sources, such that the multi-motor assembly can supply larger forces at slower speeds (\u201cLow Gear\u201d) and smaller forces at higher speeds (\u201cHigh Gear\u201d). The actuator has been specifically designed for extending and flexing a joint (such as an ankle, a knee, an elbow, or a shoulder) of a human. The actuator system may, however, be used to move any suitable object through any suitable movement (linear, rotational, or otherwise).", "num_citations": "24\n", "authors": ["525"]}
{"title": "Power regeneration in active muscle assistance device and method\n", "abstract": " A method for controlling movement using an active powered device including an actuator, joint position sensor, muscle stress sensor, and control system. The device provides primarily muscle support although it is capable of additionally providing joint support (hence the name \u201cactive muscle assistance device\u201d). The device is designed for operation in several modes to provide either assistance or resistance to a muscle for the purpose of enhancing mobility, preventing injury, or building muscle strength. The device is designed to operate autonomously or coupled with other like device (s) to provide simultaneous assistance or resistance to multiple muscles.", "num_citations": "24\n", "authors": ["525"]}
{"title": "Method and apparatus for cluster interconnection using multi-port nodes and multiple routing fabrics\n", "abstract": " Interconnect networks are described that allow nodes having more than two ports to be interconnected. More particularly, each node interfaces with multiple and more than two, fabrics. Also, all fabrics are incomplete in that not every node interfaces with every fabric, and no fabric includes all the nodes, yet every pair of nodes appears together in at least one fabric. Nodes are used that appear together in a fabric as a class of nodes that exhibit similar interconnection properties. The present invention allows for scalable, high-performance and reliable interconnection of large numbers of end nodes while satisfying constraints on architecture of end nodes and networking equipment. Bounds for the number of fabrics and fabric size are disclosed for designing an optimized interconnection network.", "num_citations": "24\n", "authors": ["525"]}
{"title": "First-order difference compression for interleaved image data in a high-speed image compositor\n", "abstract": " An encoder accepts an N byte set of values for each of a plurality of image components, with N being greater than one and, for each N byte set of values, identifies a compressed symbol length, K, wherein K is the smallest integer such that the difference between any two adjacent bytes is expressible in K bits or less, outputs an indication of K and outputs a K bit difference between the byte and an immediately prior byte, for each byte in the set.", "num_citations": "24\n", "authors": ["525"]}
{"title": "Methods and systems for accessing disks using forward and reverse seeks\n", "abstract": " The present invention is related to methods and systems for accessing multimedia data stored on a disk array to ensure that the transfer rate does not fall below a selected minimum transfer rate independent of where the multimedia data is stored on the disk array. In one embodiment, the sizes of blocks accessed are varied and the direction of access is selected to enhance read performance. A plurality of blocks are read whose sizes vary linearly as data is being read from a first disk in a backward direction, from an inner diameter side of the first disk, towards an outer diameter of the first disk. Blocks are read from a second disk in a forward direction, towards an inner diameter of the second disk.", "num_citations": "24\n", "authors": ["525"]}
{"title": "Task-flow architecture for WSI parallel processing\n", "abstract": " The basics of task-flow architecture and the simulated wafer-scale implementation of flowing tasks (SWIFT), a register-transfer simulator that investigates the behavior of task-flow programs, are discussed. SWIFT simulates a ring of cells with two pipeline stages between successive cells. Each cell contains an arithmetic logic unit (ALU), a receive queue for holding incoming transmission packets, and a memory for storing memory packets (MPs). The chain wafer-scale integration (WSI) architecture that allows linear arrays to be configured from the working cells on a partially good wafer is applied to task-flow-machine implementations. Results from a limited Monte Carlo simulation run to predict yields for a 164-cell wafer configured using the chain WSI technique are presented. Results of a simulated sparse matrix-vector multiplication application of the task-flow architecture are also presented.< >", "num_citations": "24\n", "authors": ["525"]}
{"title": "Method and apparatus for synchronizing a plurality of processors\n", "abstract": " A method and apparatus for synchronizing a plurality of processors. Each processor runs off of its own independent clock, indicates the occurrence of a prescribed process or event on one line and receives signals on another line for initiating a processor wait state. Each processor has a counter which counts the number of processor events indicated since the last time the processors were synchronized. When an event requiring synchronization is detected by a sync logic circuit associated with the processor, the sync logic circuit generates the wait signal after the next processor event. A compare circuit associated with each processor then tests the other event counters in the system and determines whether its associated processor is behind the others. If so, the sync logic circuit removes the wait signal until the next processor event. The processor is finally stopped when its event counter matches the event counter\u00a0\u2026", "num_citations": "23\n", "authors": ["525"]}
{"title": "Orthotic device drive system and method\n", "abstract": " An orthosis includes a first portion and a second portion configured to attach on opposite sides of a joint. An actuator is configured to apply a force between the first and second portions. The actuator includes a first spool and a second spool rotatably mounted to the first portion. An output pulley is mounted to the second portion. A belt has a first end wrapped around the first spool, a second end wrapped around the second spool, and a mid-portion wrapped around the output pulley. The actuator is configured to rotate the first and second spools. The rotation of the first spool pulls the belt a given length, and the rotation of the second spool feeds the belt less than the given length, so as to pull the output pulley towards the first portion to pull the second portion towards the first portion.", "num_citations": "22\n", "authors": ["525"]}
{"title": "Computer architecture capable of concurrent issuance and execution of general purpose multiple instruction\n", "abstract": " A system for issuing a family of instructions during a single clock includes a decoder for decoding the family of instructions and logic, responsive to the decode result, for determining whether resource conflicts would occur if the family were issued during one clock. If no resource conflicts occur, an execution unit executes the family regardless of whether dependencies among the instructions in the family exist.", "num_citations": "22\n", "authors": ["525"]}
{"title": "Network topology with asymmetric fabrics\n", "abstract": " Enhanced performance is realized in a multi-fabric/multi switch group interconnect network by providing asymmetric fabric topologies wherein at least one link between a user-port and a switch-port (or between a pair of switch ports) is different in the fabrics. Asymmetry in fabric topology can increase lower-distance (distance-1) pairs, increase network bisection capacity, or reduce the number of switches employed. End nodes can choose at the time of connection the fabric which offers a shorter connection or fewer router hops. Alternatively, a connection can be set up to use either fabric with the end node dynamically exercising its preference for the fabric that offers the shorter path at the time of data transfer. While the number of router hops does not significantly alter message latency in wormhole-routed networks, it does lower link occupancy and thereby average link contention.", "num_citations": "20\n", "authors": ["525"]}
{"title": "Entry control store for enhanced CPU pipeline performance\n", "abstract": " An entry control store in a central processing unit (CPU) is addressed by the next macroinstruction to be executed by the CPU and fetches the microcode for the first line of that macroinstruction. Subsequent lines of microcode for that macroinstruction are fetched from a main control store.", "num_citations": "20\n", "authors": ["525"]}
{"title": "Flexcva: A continuously variable actuator for active orthotics\n", "abstract": " Active orthotic devices require actuators with high torque, a free movement mode, high efficiency, and small size and weight. The FlexCVA is a new type of actuator that addresses these requirements in a unique way. It provides continuously varying torque through the use of two belts alternately deflected by cams. The belts alternate in supplying output torque with one belt pulling the output while the slack is removed from the other belt. The drive ratio is automatically adjusted in response to the load by varying the deflection distance of the belts. The resulting actuator prototype has been demonstrated to supply up to 34 Nm of output torque, and its free movement mode allows it to be backdriven at speeds greater than 400 deg/sec", "num_citations": "19\n", "authors": ["525"]}
{"title": "Linear actuator\n", "abstract": " A linear actuator is driven by an internal motor and delivers force to an output shaft. Advantageously, the technique provides speed/force tradeoffs via a simple, high-efficiency mechanism; continuous output force is provided by alternating the load between two belts deflected by, by way of example but not limitation, cam devices. The technique provides high force, allows the force to be traded for speed at a given power level, and provides continuous output force when operated as an actuator or continuous braking force when operated as a generator. Sensors may provide a low power tracking mode to allow the output to move freely.", "num_citations": "18\n", "authors": ["525"]}
{"title": "Latency reduction and routing arbitration for network message routers\n", "abstract": " A data communicating device, having a number of inputs whereat data is received for communication from one of a number of outputs of the device, includes apparatus for selecting one of the inputs based upon a comparison of accumulated bias values that can change over time when an input is kept waiting. Each input is provided an assigned bias value from which is developed the accumulated bias value that is compared with that of other inputs arbitrating for access to an output. The output selects one of the inputs, based upon the comparison, and the accumulated bias value of the selected input is diminished by the sum of the assigned bias values of the inputs participating in the arbitration, but not selected, while the accumulated bias values of the other participants are each increased by their corresponding assigned bias values. Thereby, numbers of inputs having data destined for the same output will have\u00a0\u2026", "num_citations": "18\n", "authors": ["525"]}
{"title": "Pressure chamber and lift for differential air pressure system with medical data collection capabilities\n", "abstract": " A differential air pressure system has a pressure bag with windows and preferred folding configuration such that when the bag is folded no window is folded. The pressure bag is supported by a lift support that is proximal to a user control panel and adjacent to or nearly adjacent to the user who is coupled to the pressure bag. A treadmill base for use with differential air pressure equipment is provided. There are various improvements provided to adapt the operations of the DAP system via the use of separate pressure volume and non-pressure volume portions of the treadmill base. Various improvements to serviceability and repairs are provided by placement of components outside of the pressure volume portion or by providing one or more pressure volume access points.", "num_citations": "17\n", "authors": ["525"]}
{"title": "Methods and systems for mirrored disk arrays\n", "abstract": " The present invention is related to methods and systems for providing different stripe sizes for different zones for at least a first of a plurality of mirrored drives to improve data rates. The first drive has a plurality of zones. In one embodiment, a first stripe size is selected for a first zone, and a second stripe size is selected for a second zone. The said second stripe size is different than said first stripe size.", "num_citations": "17\n", "authors": ["525"]}
{"title": "The hardware architecture and linear expansion of tandem nonstop systems\n", "abstract": " The Tandem NonStop TXP is a commercially available multiple processor system that delivers mainframe class performance for transaction processing applications. Several sixteen-processor systems may be configured in a ring structure using fiber optics. This structure allows from two to over two hundred processors to be applied to a single online application. Benchmark results are presented to demonstrate the linear growth of system performance as processors are added.", "num_citations": "17\n", "authors": ["525"]}
{"title": "Deflector assembly\n", "abstract": " A technique for deflecting an actuator belt includes applying a variable deflection force to the actuator belt. The technique may be used to construct actuators for active orthotics, robotics or other applications. Versions with passive clutches may also be used to construct variable-ratio motor gearheads, or may be scaled up to build continuously variable transmissions for automobiles, bicycles, or other vehicles.", "num_citations": "16\n", "authors": ["525"]}
{"title": "Performance Modeling of ServerNet\u2122 SAN Topologies\n", "abstract": " This paper describes a performance analysis of ServerNet SAN, a new system area network architecture developed by Tandem Computers. The paper focuses on three main topics: a brief description of the ServerNet SAN architecture and the simulation tool, the basis for modeling assumptions, and the initial results of the performance and scalability analysis. The ServerNet SAN is a new core technology for server architectures that focuses on moving data. The analysis uses simulation to obtain performance characteristics such as delivery time, throughput, and hot spot identification. The goal of the analysis is to provide a realistic measure of current system performance, while optimizing features such as network topology and traffic patterns to provide future improvement.", "num_citations": "16\n", "authors": ["525"]}
{"title": "Overlapped control store\n", "abstract": " An interleaved control store having a soft error recovery system. The system includes memory banks storing identical data sets, an error detection unit for indicating that an erroneous data element has been read from a given one of the memory banks, and a correction unit for substituting a corresponding data element read from another memory bank for the erroneous data element read from the given memory bank. Other embodiments include a feedback system for executing a branch and a dynamic, on-line memory element sparing system.", "num_citations": "13\n", "authors": ["525"]}
{"title": "Method of operating enhanced alu test hardware\n", "abstract": " Method and hardware associated with an arithmetic logic unit (ALU) in a central processing unit of a data processor provides for testing the inputs to the ALU to see if logical AND is zero or the two inputs are equal while allowing the ALU to perform another function at the time these tests are made.", "num_citations": "13\n", "authors": ["525"]}
{"title": "A linear-array WSI architecture for improved yield and performance\n", "abstract": " A new architecture is proposed for constructing a linear array from cells on a partially defective wafer. Each cell connects to its four nearest neighbors in a way that guarantees a fixed delay between any pair of communicating cells. Phase-shifted synchronous clocking further improves performance. A simple configuration scheme is presented, and is shown to exceed 96% harvest of working cells when the configuration logic yield is above 75%. The architecture is shown to compare favorably to existing schemes in terms of performance, yield and overhead.< >", "num_citations": "12\n", "authors": ["525"]}
{"title": "Multiple data patch CPU architecture\n", "abstract": " The various functional units which comprise a central processing unit of a computer are organized so as to enable a main arithmetic logic unit and special function units including an auxilliary arithmetic logic unit to access data registers, literal constants, and data from a memory cache. A general purpose bus closely couples the functional units to the main data paths and allows the CPU sequencer to branch on numerous conditions which may be indicated via test lines. Parity from the functional units is sent to clock cycle later than results in order that the parity path does not affect machine cycle time. The architecture allows unused microcode options to be used to check for correct CPU operation by halting CPU operation on a miscompare of two buses.", "num_citations": "12\n", "authors": ["525"]}
{"title": "An architecture for high volume transaction processing\n", "abstract": " This paper describes a commercially, vailable multiple processor system that lelivers mainframe class performance for high volume transaction processing. Multiple systems of up to sixteen processors each are configured in a ring structure using fiber optics. This structure allows from two to over two hundred processors to be applied to a single on-line application. We discuss the tradeoffs in selecting a large number of small processors versus a small number of large processors. Benchmark results are presented to demonstrate the linearity in system performance as processors are added.", "num_citations": "12\n", "authors": ["525"]}
{"title": "Foot pad device and method of obtaining weight data\n", "abstract": " A foot pad device includes a foot pad, force sensors that provide force data, sensor electronics coupled to the force sensors, and a processor. The foot pad includes a ball region configured to be located under a ball of the foot of the user or a heel region configured to be located under a heel of the foot of the user. At least a portion of the force sensors is located in the ball region or the heel region of the foot pad. The sensor electronics include a flexible circuit with force sensor connection paths adapted to transmit force data from the force sensors and are configured to condition the force data to be within a conditioned force data range. The processor is configured to calculate a weight value based on the conditioned force data, a gain value, and an offset value.", "num_citations": "11\n", "authors": ["525"]}
{"title": "Spatial display of disk drive activity data\n", "abstract": " 89 (binary) bin-(requested Iba<< zeros)>>(52-6) 1 OA/shift the lost Ibo to the left to get rid of zeros 11//then shift to the right by 52 bits-6 to get 12//highest 6 bits of requested bo 15//which is the number of the bin in binary", "num_citations": "11\n", "authors": ["525"]}
{"title": "Massively parallel systems you can trust\n", "abstract": " Massively parallel systems are needed to address the performance requirements of many current and future commercial applications. These applications require systems that can be trusted protect the integrity of data, to continue operation in spite of failures, and to provide scalable performance to serve ever-increasing customer needs. The design of current scientific MPPs has not considered many of these commercial requirements. Tandem has developed systems that have been designed specifically to address both the reliability and performance requirements for large commercial applications. The recently introduced Himalaya Range with the TorusNet interconnection architecture extends the capabilities of Tandem systems into the range of massively parallel systems. Recent benchmarks have demonstrated both the scalability and fault-tolerance of these systems.< >", "num_citations": "11\n", "authors": ["525"]}
{"title": "Actuator system with a motor assembly and latch for extending and flexing a joint\n", "abstract": " An actuator system for assisting extension of a biological joint is provided with a motor assembly, a rotary-to-linear mechanism, and an extension stop. The rotary-to-linear mechanism includes a screw that accepts rotational output of the motor assembly, and a nut that cooperates with the screw to convert rotational movement of the screw to linear movement of the nut. The extension stop is driven by linear movement of the nut in an extension direction to cause extension of the biological joint. The motor assembly, the rotary-to-linear mechanism and the extension stop cooperate to allow unpowered flexion of the joint. The system is configured without a flexion stop, and is configured such that the nut cannot drive the joint in a flexion direction. Methods of use are also disclosed.", "num_citations": "9\n", "authors": ["525"]}
{"title": "System for maintaining polarity synchronization during AMI data transfer\n", "abstract": " A communication system transmitting AMI encoded data forces a latent error to occur within a predetermined time duration from an event which generated the latent error. Bit values of original data are selectively inverted to prevent a long sequence of zeros from being transmitted.", "num_citations": "9\n", "authors": ["525"]}
{"title": "Tnet: a reliable system area network for 1/0 and ipc\n", "abstract": " TNet is a new system area network designed to support current and future needs for reliable, efficient communi cations among processors and peripherals. It is an exten sible hardwarelsoftware layer that allows very large configurations by logically and physically isolating the processor busses from the 1/0 busses. TNet is a worm hole-routed, packet-switched, point-to-point, system area network. The first i?nplementation has JWII-duplex, byte serial links with electrical interfaces supporting either backplane connections or inter-cabinet cables. Variable length packets contain up to 64-bytes of data per packet. Met transactions consist of pairs of request-response packets allowing data to either be pushed or p4ed across the network. The network is designed to support many simultaneous, low-latency, DMA transfers for both inter-processor communications and 1/0.", "num_citations": "9\n", "authors": ["525"]}
{"title": "Overlapped control store\n", "abstract": " An overlapped control store including a pair of memory elements, with each element in the pair storing a complete instruction set and with instructions from the elements accessed on alternate clock cycles. A mux, controlled by a control field in each instruction, is adapted to provide either a PC address or a target address to the control store. Unrestricted branches are facilitated because every instruction in the instruction set is included in both memory elements.", "num_citations": "9\n", "authors": ["525"]}
{"title": "Enhanced CPU microbranching architecture\n", "abstract": " Hardware for performing microcode branching in a pipeline central processing unit allows for two different speeds of branches which can be used by microcode and includes flexibility to optionally inhibit lines of microcode which are in the pipeline when a branch has been sensed. A default branch path can be taken for a test result not yet available and can be replaced with a correct branch target during a clock pause if the test result is false. A return address stack is provided with decoupling loading and pushing to accommodate the two branching speeds. The microcode can specify loading the return address stack with a literal or register value to allow vectored branching and return to a desired line after a delayed call.", "num_citations": "9\n", "authors": ["525"]}
{"title": "The effect of the router arbitration policy on the scalability of ServerNet\u2122 topologies\n", "abstract": " Multistage networks are finding increasing use in building clusters of workstations and PCs. The networks that support such connectivity must provide high bandwidth, low latency, scalability, low cost, high level of usability, and reliability [1]. A key parameter that influences the network performance characteristics such as maximum latency, throughput, scalability and tree saturation, is the arbitration policy implemented in routers.", "num_citations": "8\n", "authors": ["525"]}
{"title": "Enhanced CPU return address stack\n", "abstract": " Hardware for performing microcode branching in a central processing unit allows for two different speeds of branches which can be used by microcode and includes flexibility to optionally inhibit the extra lines which enter the pipeline on a branch. A default branch path can be taken for a test result not yet available and can be replaced with a correct branch target during a clock pause if the test result is false. A return address stack is provided with decoupled loading and pushing to accommodate the two branching speeds. Microcode can specify loading the return address stack with a literal or register value to allow vectored branching and return to a desired line after a delayed call.", "num_citations": "8\n", "authors": ["525"]}
{"title": "Reliable design of high-speed cache and control store memories\n", "abstract": " The design of the cache and control store memories of the Tandem NonStop VLX processor is discussed. Service costs are reduced by using hot-standby sparing to improve the reliability of the large static RAM arrays. Detection, isolation, and spare substitution of failed RAMs are performed automatically without the disruption of normal processing. A control store design with sparing is described. A mathematical model is used to predict reliability improvements for the multiple arrays for each processor board. The model takes into account the selected repair policy which calls for replacing a board only on spare exhaustion or on the failure of nonspared logic. The success of the chosen approach is illustrated through model predictions as well as through field failure data.<>", "num_citations": "8\n", "authors": ["525"]}
{"title": "Methods and devices for deep vein thrombosis prevention\n", "abstract": " Portable devices and methods for preventing deep vein thrombosis (DVT) by assuring that the ankle is flexed and extended sufficiently to promote blood flow in the lower leg are disclosed. The device includes an actuator with a free movement mode that allows a patient to move freely between activations or to initiate movement to delay a next automatic activation.", "num_citations": "7\n", "authors": ["525"]}
{"title": "Transpose table-biased arbitration\n", "abstract": " A biased arbitration technique utilizes a transpose table to arbitrate access to a shared resource. Each column of transpose table is a binary bias vector encoding a bias value assigned to one of the requesters. The rows of the table are fetched to assure that requesters having high bias values are granted more frequent access to the shared resource.", "num_citations": "7\n", "authors": ["525"]}
{"title": "Computer architecture capable of execution of general purpose multiple instructions\n", "abstract": " A system for issuing a family of instructions during a single clock includes a decoder for decoding the family of instructions and logic, responsive to the decode result, for determining whether resource conflicts would occur if the family were issued during one clock. If no resource conflicts occur, an execution unit executes the family regardless of whether dependencies among the instructions in the family exist.", "num_citations": "7\n", "authors": ["525"]}
{"title": "Maximum delivery time and hot spots in ServerNetTM topologies\n", "abstract": " This paper will center on analysis of the performance characteristics of ServerNet topologies, concentrating on the prediction, through simulation and statistical analysis, of the maximum two-way delivery time, the identification of congested links (hot spots) and tree saturation.ServerNetTM, developed by Tandem Computers Inc., is a wormhole-routed, packet-switched, point-to-point network, with special attention paid to reducing latency and to assuring reliability. ServerNet uses multiple high-speed, low-cost routers to rapidly switch data directly between data sources and destinations.The maximum two-way delivery time is necessary for determining the values of timeout counters, which are relevant to the fault-tolerant aspect of the system, and the QoS guarantees.Hot spots may cause the occurrence of tree saturation in the network i.e., where an individual tree will become congested (tree saturation) while all other\u00a0\u2026", "num_citations": "7\n", "authors": ["525"]}
{"title": "Microinstruction sequencer having multiple control stores for loading different rank registers in parallel\n", "abstract": " First and second banks of control stores are used to store microinstructions. Each bank contains three control stores: A horizontal control store, a vertical control store, and a jump control store. The horizontal control store contains the rank four microcode; the vertical control store contains the rank three microcode; and the jump control store contains the same microcode as the vertical control store but is used on conditional jump microoperations. This allows simultaneous accessing of different microinstructions using a single address incrementer. The control store banks are accessed in an overlapping manner so that upon each clock cycle one bank is loading the rank 3 and rank 4 registers. The sequencer according to the present invention includes a return address stack for returning from subroutine calls and trap routines. When processing trap routines, the return address stack stores two microinstruction\u00a0\u2026", "num_citations": "7\n", "authors": ["525"]}
{"title": "The effect of the router arbitration policy on the scalability of ServerNet/sup TM/topologies\n", "abstract": " We extend a previously introduced method for optimizing the arbitration policy employed by ServerNet routers and we evaluate the method's effect on scalability. The ServerNet/sup TM/ system area network (SAN), developed by Tandem Computers Inc., is a wormhole-routed, packet-switched, point-to-point network, with special attention paid to reducing latency and to assuring reliability. The ServerNet SAN uses multiple high-speed, low-cost routers to rapidly switch data directly between data sources and destinations. The ServerNet router arbitration algorithm has the ability to assign different priorities to different links thus controlling the distribution of available bandwidth among channels. We propose an analytical method that allows us to determine the correct priorities for channels so as to achieve fair arbitration thus increasing throughput and scalability, minimizing latency, and eliminating tree saturation. In our\u00a0\u2026", "num_citations": "7\n", "authors": ["525"]}
{"title": "Fault tolerance in Tandem computer systems\n", "abstract": " Tandem builds single-fault-tolerant computer systems. At the hardware level, the system is designed as a loosely coupled multi-processor with fail-fast modules connected via dual paths. It is designed for online diagnosis and maintenance. A range of CPUs may be inter-connected via a hierarchical fault-tolerant local network. A variety of peripherals needed for online transaction processing are attached via dual ported controllers. A novel disc subsystem allows a choice between low cost-per-Mbyte and low cost-per-access. System software provides processes and messages as the basic structuring mechanism. Processes provide software modularity and fault isolation. Process pairs tolerate hardware and transient software failures.", "num_citations": "7\n", "authors": ["525"]}
{"title": "Therapy and mobility assistance system\n", "abstract": " A therapy and mobility assistance system used by a patient that includes a leg device worn on the leg of the patient that provides assistance and/or resistance to enhance the mobility of the leg of the patient, a therapy shuttle that facilitates therapeutic extension and flexion of at least one of the joints of the leg of the patient, and an appendage fastener that selectively couples the therapy shuttle and the leg device. The therapy and mobility assistance system may additionally include a guide track that constrains motion of the therapy shuttle along a path.", "num_citations": "6\n", "authors": ["525"]}
{"title": "Enhanced CPU microbranching architecture\n", "abstract": " Hardware for performing microcode branching in a central processing unit allows for two different speeds of branches which can be used by microcode and includes flexibility to optionally inhibit the extra lines which enter the pipeline on a branch. A default branch path can be taken for a test result not yet available and can be replaced with a correct branch target during a clock pause if the test result is false. A return address stack is provided with decoupled loading and pushing to accommodate the two branching speeds. Microcode can specify loading the return address stack with a literal or register value to allow vectored and return to a desired line after a delayed call.", "num_citations": "6\n", "authors": ["525"]}
{"title": "Method and apparatus to manage storage devices\n", "abstract": " A method and apparatus to manage storage devices has been disclosed. In one embodiment, the method includes logically partitioning each of a number of storage devices in a networked data storage system into segments and managing the segments in response to how often each of the storage devices is accessed. Other embodiments are described and claimed.", "num_citations": "5\n", "authors": ["525"]}
{"title": "Clock error detection circuit\n", "abstract": " A method and digital circuit for indicating whether the frequencies of two clocks are within a predetermined range of each other, wherein a first pattern of alternating binary one's and zero's is created using the active edge of the first clock; first and second sampled patterns are generated by sampling the first pattern with respective first and second edges of the second clock; and a first acceptance signal is asserted if either the first or second sampled pattern has alternating binary one's and zero's. A second acceptance signal is asserted as above but interchanging the two clock signals. A near-frequency signal is generated when both acceptance signals are asserted. A clock error signal is the inversion of the near-frequency signal.", "num_citations": "5\n", "authors": ["525"]}
{"title": "Optimizing router arbitration in point-to-point networks\n", "abstract": " In this article we introduce and evaluate a method for optimizing the router arbitration policy in point-to-point networks. These networks use multiple high-speed, low-cost routers to rapidly switch data directly between data sources and destinations. We assume that routers use an arbitration algorithm that has the ability to assign different priorities to different links thus controlling the distribution of available bandwidth among channels. We propose an analytical method that allows us to determine the correct priorities for channels so as to achieve fair arbitration thus minimizing latency, increasing throughput and eliminating tree saturation.In our study we used data generated by a simulation tool to validate the proposed analytical model for determining the weights (priorities) of router ports and to evaluate the resulting performance improvements. Link usage statistics were recorded by the simulator for the purpose of\u00a0\u2026", "num_citations": "5\n", "authors": ["525"]}
{"title": "Circuit with low DC bias storage capacitors for high density power conversion\n", "abstract": " A circuit for converting DC to AC power or AC to DC power comprises a storage capacitor, boost and buck inductors and switching elements. The switches are controlled to steer current to and from the storage capacitor to cancel DC input ripple or to provide near unity power factor AC input. The capacitor is alternately charged to high positive or negative voltages with an average DC bias near zero. The circuit is configured to deliver high-efficiency power in applications including industrial equipment, home appliances, mobility devices and electric vehicle applications.", "num_citations": "4\n", "authors": ["525"]}
{"title": "Multi-mode active orthotic sensor\n", "abstract": " A general-purpose force sensor, which can be used with an orthotic device, is provided utilizing both resistive and capacitive techniques for improved accuracy and reliability compared to either type of sensor alone. The system can detect internal fault conditions and continues to operate correctly despite the failure of one of the sensors. The sensor can be self-calibrating to give accurate readings despite changes in the physical properties of the sensing elements over time.", "num_citations": "4\n", "authors": ["525"]}
{"title": "IP storage and the CPU consumption myth\n", "abstract": " Addresses a key issue that arises when attaching storage devices directly to IP networks: the perceived need for hardware acceleration of the TCP/IP networking stack. While many implicitly assume that acceleration is required, the evidence shows that this conclusion is not well-founded. In the past, network accelerators have had mixed success, and the current economic justification for hardware acceleration is poor, given the low cost of host CPU cycles. The I/O load for many applications is dominated by disk latency, not transfer rate, and hardware protocol accelerators have little effect on the I/O performance in these environments. Application benchmarks were run on an IP storage subsystem to measure performance and CPU utilization on e-mail, database, file serving and backup applications. The results show that good performance can be obtained without protocol acceleration.", "num_citations": "4\n", "authors": ["525"]}
{"title": "Multiple instruction issue in the nonstop cyclone system\n", "abstract": " This paper describes the architecture for issuing multiple instructions per clock in the NonStop Cyclone Processor. Pairs ofinstructions are fetched and decoded by a dual two-stage prefetch pipeline and passed to a dual six-stage pipeline for execution. Dynamic branch prediction is used to reduce branch penalties. A unique microcode routine for each pair is stored in the large duplexed control store. The microcode controls parallel data paths optimized for executing the most frequent instruction pairs. Other features of the architecture include cache support for unaligned doubleprecision accesses, a virtually-addressed main memory, and a novel precise exception mechanism. lA previous version of this paper was published in the conference proceedings of The 17th Annual International Symposium on Computer Architecture, May 28-31, 1990, Seattle, Washington.", "num_citations": "4\n", "authors": ["525"]}
{"title": "Intention-based therapy device and method\n", "abstract": " A method for controlling movement using an active powered device including an actuator, joint position sensor, muscle stress sensor, and control system. The device provides primarily muscle support although it is capable of additionally providing joint support (hence the name \u201cactive muscle assistance device\u201d). The device is designed for operation in several modes to provide either assistance or resistance to a muscle for the purpose of enhancing mobility, preventing injury, or building muscle strength. The device is designed to operate autonomously or coupled with other like device (s) to provide simultaneous assistance or resistance to multiple muscles.", "num_citations": "3\n", "authors": ["525"]}
{"title": "Modification of lower extremity kinetic symmetry during sit-to-stand transfers using a robotic leg orthosis with individuals post-stroke\n", "abstract": " The ability to transfer from sitting to standing (STS) is central to independent mobility and presents a significant, unique challenge to individuals post-stroke with residual unilateral lower-extremity weakness. We examined the effects of a novel, wearable robotic lower extremity orthosis on STS transfer kinetics. The device appears to facilitate symmetry of limb force allocation during STS.", "num_citations": "3\n", "authors": ["525"]}
{"title": "Transpose table biased arbitration scheme\n", "abstract": " A biased arbitration technique utilizes a transpose table to arbitrate access to a shared resource. Each column of transpose table is a binary bias vector encoding a bias value assigned to one of the requestors. The rows of the table are fetched to assure that requestors having high bias values are granted more frequent access to the shared resource. A look-ahead feature skips rows having all zeros and an unbiased cycle that assures all requesting ports are serviced regardless of their bias values.", "num_citations": "3\n", "authors": ["525"]}
{"title": "Challenges in Designing Fault-Tolerant Systems.\n", "abstract": " This Panel brings together designers from industry, who are involved in the design of fault-tolerant and highly available systems. Together, the designers span the spectrum from design of the CPU, I/O, Operating Systems, Failure Modes, to the Development Process. They will present their views on the challenges facing the designers of fault-tolerant systems. Following the panel they will be available at breakout sessions to pursue the discussion. We hope that this will provide an opportunity to explore the space of real problems and potential areas for research emphasis. Addressing real problems is clearly the final test of engineering research and development. This is an opportunity for Industry and Academia to exchange views on the challenges that face us both.Producing a product that actually serves and satisfies the needs of a customer base is a tremendous development, research and management accomplishment. In making this happen there are numerous challenges faced by the designers, often known only to the people who go through the development experience. The body of knowledge gained from the development experience can assist research in identifying areas of high impact. It is our goal to bring these people from different areas of development to share with us their experience and vision. It is also our goal to provide an opportunity for an interchange of ideas between researchers and developers. Through this forum we hope to bring to light the innate symbiotic relationship between research and development.", "num_citations": "3\n", "authors": ["525"]}
{"title": "Optimization of Lower Extremity Kinetics during Transfers Using a Wearable, Portable Robotic Lower Extremity Orthosis: A Case Study\n", "abstract": " The ability to transfer from sitting to standing (STS) is central to independent mobility and presents a significant, unique challenge to individuals post-stroke with residual unilateral lower-extremity weakness. We examined the effect of a novel, wearable robotic lower extremity orthosis on STS transfer kinetics, including paretic limb work, in a single post-stroke individual. The device appears to improve force allocation between paretic and non-paretic limbs during STS transfers, resulting in an optimal state of paretic limb engagement at a specific level of mechanical assistance from the device.", "num_citations": "2\n", "authors": ["525"]}
{"title": "Computer architecture capable of concurrent issuance and execution of general purpose multiple instructions\n", "abstract": " A system for issuing a family of instructions during a single clock includes a decoder for decoding the family of instructions and logic, responsive to the decode result, for determining whether resource conflicts would occur if the family were issued during one clock. If no resource conflicts occur, an execution unit executes the family regardless of whether dependencies among the instructions in the family exist.", "num_citations": "2\n", "authors": ["525"]}
{"title": "Task flow: A novel approach to fine-grain wafer-scale parallel computing.\n", "abstract": " This thesis introduces a parallel computer architecture known as task flow. Simple replicated cells contain both memory packets and processing logic. Each memory packet contains a data field, the next instruction, and a link. Transmission packets flow between memory packets to communicate instructions and temporary data values. Program execution is performed by multiple tasks that communicate through memory variables. Each task may remain local to one cell for extended periods or may flow between cells with as few as one instruction executed in each cell.", "num_citations": "2\n", "authors": ["525"]}
{"title": "Fault-Tolerant Computing: An Overview\n", "abstract": " The purpose of this report is to outline the major concepts and developments in the area of fault tolerant computing. Both hardware and software fault tolerance issues are addressed. The topics covered include module function and system-level fault detection methods, redundancy and reconfiguration strategies, valid fault models, and coding and checking in computer systems. Software fault tolerance methods such as recovery blocks, design diversity, and checkpointing and recovery are also discussed. Major issues in modeling and evaluation of fault-tolerant systems are outlined. The design of two successful commercial systems is discussed.Descriptors:", "num_citations": "2\n", "authors": ["525"]}
{"title": "Deferred comparison multiplier checker\n", "abstract": " In a data processing system, a multiplication operation is immediately followed by a redundant multiplication operation, using the same, albeit altered, operands, to check the initial result. The initial result is immediately available for use, but the check is not performed until some time later. The original operands are altered for the redundant multiplication operation by shifting one operand 1 bit, and swapping them before multiplication.", "num_citations": "2\n", "authors": ["525"]}
{"title": "Fair arbitration in point-to-point networks\n", "abstract": " In this paper we introduce and evaluate a method for optimizing the router arbitration policy in point-to-point networks. These networks use multiple high speed, low-cost routers to rapidly switch data directly between data sources and destinations. We assume that routers use an arbitration algorithm that has the ability to assign different priorities to different links thus controlling the distribution of available bandwidth among channels. We propose an analytical method that allows us to determine the correct priorities for channels so as to achieve fair arbitration thus minimizing latency, increasing throughput and eliminating tree saturation. In our study we used data generated by a simulation tool to validate the proposed analytical model for determining the weights (priorities) of router ports and to evaluate the resulting performance improvements. Link usage statistics were recorded by the simulator for the purpose of\u00a0\u2026", "num_citations": "1\n", "authors": ["525"]}
{"title": "Reliability Improvement Through Static RAM Sparing\n", "abstract": " This paper presents a practical approach to improving the failure rate of static RAM arrays through the use of spare RAMs. Assuming no preventative maintenance is performed, the repair rate of a spared array is a function of the failure rates of the other logic and other spared arrays on the same field-repairable unit. General equations are developed to express failure rate improvements for multiple spare", "num_citations": "1\n", "authors": ["525"]}