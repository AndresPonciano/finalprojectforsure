{"title": "Software process definition using process lines: A systematic literature review\n", "abstract": " Software processes have been the focus of discussion in literature, but defining a software process remains a challenge. The Software Process Line (SPrL) technique offers a systematic process reuse approach that identifies processes' similarities and variability. This study aims to characterize the state-of-the-art of the software process definition using SPrL. A Systematic Literature Review (SLR) was conducted and 26 papers were identified to be studied in depth. The results indicate a concentration of approaches that use mapping/rules techniques to support variability resolution and the need for integrated supporting tools. In addition, three problems that affect the software process definition using SPrL were observed: (1) low understanding of SPrL models complexity and their impact, (2) lack of understanding about the impacts of the defined software process, and (3) experts' knowledge dependence issues in\u00a0\u2026", "num_citations": "6\n", "authors": ["410"]}
{"title": "Odyssey-processcase: a case-based software process line approach\n", "abstract": " Software processes have been the focus of discussion in the literature, but defining a software process that meets project-specific needs remains a challenge. The Software Process Line (SPrL) technique offers a systematic to identify processes' similarities and variability to support software process reuse. Based on a literature review analysis, a concentration of SPrL approaches that use mapping/rules techniques to support project-specific software process definition was observed. However, the knowledge acquisition process required by this kind of technique is not trivial, due to the unavailability of experts and overhead in domain engineering. This paper presents an incremental learning approach for SPrL, called Odyssey-ProcessCase, focused on the decision-making support to solve SPrL variability during the project-specific software process definition. The approach applies techniques such as Case-Based\u00a0\u2026", "num_citations": "5\n", "authors": ["410"]}
{"title": "Systematic mapping on the use of games for software engineering education.\n", "abstract": " Games appeal to all kinds of people and are used for a wide range of purposes, from pure entertainment to educational research. Software Engineering is an area of computing that has much content to explore, distributed in different knowledge areas. Thus, there are many theoretical classes that make learning tiresome. In this scenario, educators and researchers are looking for new methods to engage students in order to facilitate the learning process. Many studies have already been produced using games as a teaching method. However, a recurring mistake when using games as a teaching method is the application of the wrong approach to a context that often hinders student learning. This paper presents a systematic mapping that aims to identify the main ways that games are being used as a teaching method focused on Software Engineering. The results highlight five ways of using games as a teaching method, where Game-based Learning, Digital Game-based Learning and Gamification are the most used ones.", "num_citations": "1\n", "authors": ["410"]}
{"title": "Evaluating the Usefulness and Ease of Use of a Software Process Line Tool.\n", "abstract": " Software Process Line (SPrL) provides a systematic way to support software process reuse. However, adopting SPrL approaches without supporting tools may be a very difficult task. Although SPrL supporting tools are becoming more practical, integrated tools are still needed to support all reuse stages. Hence, aiming to support SPrL activities, the Odyssey tool, which provides a software reuse environment, has been improved. Since every proposed technology should be evaluated before being available for use, this paper aims to characterize Odyssey acceptance through its usefulness and ease of use under the perspective of Brazilian software process experts during software process definition using SPrL. This study was designed using Technology Acceptance Model (TAM) and Goal, Question, Metric (GQM) paradigm with a predefined interpretation model. It was performed with seven experts and the collected data provides insights that Odyssey indeed helps the software process definition using SPrL. Although the results are positive, the identified threats highlight the study limitations. Finally, a set of improvements was identified based on the collected data, participants' comments, as well as researchers\u2019 notes. These improvements are being implemented.", "num_citations": "1\n", "authors": ["410"]}