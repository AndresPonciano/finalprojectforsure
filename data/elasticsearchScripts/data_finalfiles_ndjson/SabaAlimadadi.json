{"title": "Finding broken promises in asynchronous JavaScript programs\n", "abstract": " Recently, promises were added to ECMAScript 6, the JavaScript standard, in order to provide better support for the asynchrony that arises in user interfaces, network communication, and non-blocking I/O. Using promises, programmers can avoid common pitfalls of event-driven programming such as event races and the deeply nested counterintuitive control ow referred to as \u201ccallback hell\u201d. Unfortunately, promises have complex semantics and the intricate control\u2013 and data- ow present in promise-based code hinders program comprehension and can easily lead to bugs. The promise graph was proposed as a graphical aid for understanding and debugging promise-based code. However, it did not cover all promise-related features in ECMAScript 6, and did not present or evaluate any technique for constructing the promise graphs. In this paper, we extend the notion of promise graphs to include all promise-related\u00a0\u2026", "num_citations": "16\n", "authors": ["2171"]}
{"title": "Czsaw, imas & tableau: Collaboration among teams: Vast 2010 grand challenge award: Excellent student team analysis\n", "abstract": " The VAST 2010 Challenge consisted of three separate datasets which we investigated with three student teams using three different tools in order to solve each Mini Challenge (MC1-3). The teams met to share findings, request supporting evidence from the other mini challenges, and raise questions for other teams to investigate further. We used CZSaw to investigate the MC1 arms dealer reports by organizing an overview before drilling down to investigate each country's activities. We used Tableau for MC2 to summarize the spread of the Drafa virus within each country and compare the times at which it occurred. We used the IMAS genomics tool for MC3 to discover the origin and initial spread of the virus.", "num_citations": "8\n", "authors": ["2171"]}
{"title": "Model based interactive analysis of interwoven, imprecise narratives: VAST 2010 mini challenge 1 award: Outstanding interaction model\n", "abstract": " CZSaw is a visual analytics tool for sense-making across entities, documents, and relations with a focus on supporting the analysis process. It uses a variety of flexible data visualizations to represent and explore networks of entities and relations from different perspectives. CZSaw supports clustering documents and entities into smaller groups to make sense of them and weave individual facts into a complete picture. CZSaw also provides entity refinement functions to support interactive data cleaning. Its dependency propagation mechanism speeds the analysis sense-making loop by automatically synchronizing data and views, and propagating changes to the whole system.", "num_citations": "6\n", "authors": ["2171"]}
{"title": "Understanding behavioural patterns in JavaScript\n", "abstract": " JavaScript is one of the most popular programming languages. How-ever, understanding the dynamic behaviour of JavaScript apps is challenging in practice. There are many factors that hinder JavaScript comprehension, such as its dynamic, asynchronous, and event-driven nature, the dynamic interplay between JavaScript and the Document Object Model, and the asynchronous communication between client and server. In this research work, we have already proposed methods for understanding event-based and asynchronous JavaScript behaviour. To enhance the scalability of our methods, we propose a new technique that adopts bio-informatics algorithms to extract sequences of actions from execution traces that form higher-level patterns.", "num_citations": "3\n", "authors": ["2171"]}
{"title": "Propagation of change and visualization of causality in dependency structures\n", "abstract": " Analysts use visual analytics tools to gain insight through data. But one problem of these tools is the complexity of the analytics process itself. Sometimes the analyst has to repeat the same task during the analysis; to rerun some previous queries or to update the state of the system by the arrival of new data. CZSaw is a visual analytics tool that stores the process of analysis and visualizes it. The dependency graph of CZSaw allows parts of the analytical process to be reused on new data to prevent repetition of those parts. This document describes the design and development of CZSaw\u2019s dependency graph as well as its visualization. A major challenge is visualization of causality in the graph when an update gets propagated. We compare three different causality visualization methods in terms of task completion duration and accuracy in a study.", "num_citations": "1\n", "authors": ["2171"]}