{"title": "Membrane Computing Model for Software Requirement Engineering\n", "abstract": " The objective of this work is to propose a membrane computing model for software requirement engineering activities during the inception phase of the software development. The bio-inspired approach is used in requirement engineering for the transformation of user requirements into system requirements using a probabilistic distributed computing model with abstraction coefficients, amalgamation factors and clarity factors. The software company rules and policies are considered in the model and rewritten over a period of time. This model considers the different phases of software requirement engineering as membranes and the various requirements are considered as objects and the requirement engineering process hierarchy is modeled as a membrane structure. The key process activities like requirement analysis and requirements change management are considered as primary membranes in the model. The\u00a0\u2026", "num_citations": "7\n", "authors": ["1294"]}
{"title": "Knowledge based requirement engineering framework for emergency management system\n", "abstract": " The objective of this work is to propose a knowledge based requirement engineering framework to arrive at a reusable design and deployment of a flood situation service in emergency management system software. In this proposed framework, the software requirement specifications are treated as input data with their corresponding association in multiple contexts. All such requirement information is fed into an expert system in the domain layer out of which the first class entities are derived to arrive at a meta-modeling of the target services. A set of contexts that concentrate upon the essential services with respect to deployment time and workflow parameters are considered as field knowledge. The knowledge base with all these information in multiple dimensions is treated as an engine to deliver the resulting design for the software services. The evolutionary computations under different conflicts are carried out as\u00a0\u2026", "num_citations": "7\n", "authors": ["1294"]}
{"title": "Rewrite based software requirement engineering for signaling systems safety\n", "abstract": " The objective of the paper is to propose a rewrite based software requirement engineering model focusing the safety specifications of a distributed signaling system. In safety critical applications, the fault tolerance features can be utilized in the requirement engineering to enhance the software safety through terms, rules and equation rewriting. A formal specification based approach is used to concentrate on the operations that govern the safety of software system from its initial state to the point it reaches the final safe and desired states. The requirements for railway signaling safety is elaborated by the notion of controlled failures that should not have any catastrophic consequences and the system should be fail-safe. The system is modelled to control the behaviour of distributed software components through safe operations to improve the error containment. The assertions for safety and correctness requirements are made by rewriting the needed terms and rules within the concurrent system thereby reducing the total system safety failure rate.", "num_citations": "1\n", "authors": ["1294"]}