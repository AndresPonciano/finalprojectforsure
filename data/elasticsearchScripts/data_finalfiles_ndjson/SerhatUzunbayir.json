{"title": "A Review of Source Code Management Tools for Continuous Software Development\n", "abstract": " Continuous software development practices are very important in all organizations to deploy latest improvements of their products rapidly, reliably, and in a repeatable manner. In order to achieve these features, software development processes should provide a stable source code management. Nowadays many organizations are producing multiple releases per day, and this is also possible even with large projects and complex codebases. To facilitate such continuous activities, various tools have been developed over the years. In this article, we identify, review, and reveal the characteristics of available tools to summarize their best features, as well as to identify which tools can be used for specific continuous software practices.", "num_citations": "4\n", "authors": ["2051"]}
{"title": "Real-Time Monitoring of Elevators to Reduce Redundant Stops and Energy Wastage\n", "abstract": " Redundant stops of elevators result in an unnecessary consumption of energy and time. Moreover, redundant stops increase waiting time, leading to problems such physical and psychological discomfort for passengers inside the car as well as those waiting outside. This paper proposes a realtime elevator monitoring system to reduce total travelling time and energy consumption. The system contains a camera installed to the each floor to monitor the elevator waiting area, a weight sensor in the car for calculating the total weight of the car, and a computer which computes the approximate volume of the passengers inside and number of waiting passengers. A university elevator was selected for the monitoring and simulation of the proposed system, which was examined over a period of 15 days. The daily averages of this period are used for redundant stops\u2019 observations. The results show that 240 of the 943 or 24.54% of the stops (per day) were redundant, but that the proposed system has the potential to reduce this to 53,(5.6%), representing a 78% success ratio. Thus, this system may help to reduce unnecessary stops, passengers satisfaction from the elevators would, therefore, be increased. It may help to reduce also unnecessary consumption of electricity.", "num_citations": "3\n", "authors": ["2051"]}
{"title": "An Analysis on Mutation Testing Tools For C# Programming Language\n", "abstract": " Mutation testing is a fault-based white-box software testing technique which uses artificial defects known as mutants to represent faulty versions of the application to evaluate the quality of the test suite. It is a costly method in terms of time and efficiency, since it requires a vast amount of mutants to be generated. For this reason, mutant generation should be performed automatically with the help of automated tools. There are a number of mutation testing tools available and each one is supported by a single programming language. In this study, we analyze mutation testing tools for C#. We focus on different characteristics of the tools and aim to help the testers when deciding which tool they can use for their implementations by providing a comparative analysis.", "num_citations": "1\n", "authors": ["2051"]}