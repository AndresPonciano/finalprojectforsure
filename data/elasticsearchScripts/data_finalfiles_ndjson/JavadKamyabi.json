{"title": "Software defect prediction using Transitive dependencies on software dependency graph\n", "abstract": " In software production process, quality assurance resources are limited by time and cost. In order to achieve high quality, managers need to detect the defect prone parts of code and allocate the resources to them. So far, researchers have used some methods such as complexity metrics, design metrics and network measures for software defect prediction. Although these methods are somewhat efficient, still there isn\u2019t a global method for it. In this paper we have presented two new definitions which are dependency tree and circular dependency. Dependency tree covers all of the direct and indirect dependencies circular dependency evaluates all of the cyclic chains of dependency for each component. What has been differed our work from the previous related works is that we have presented that using transitive dependencies is efficient in defect prediction.", "num_citations": "1\n", "authors": ["1991"]}
{"title": "SOFTWARE DEFECT PREDICTION USING PARTICIPATION OF NODES IN SOFTWARE COUPLING.\n", "abstract": " Testing is the best way to ensure software quality. However, this activity makes a huge challenge about limited time and financial resources. In order to achieve high quality, managers need to detect the defect prone parts of code and allocate the resources to them. Although many metrics, techniques and models have been proposed, effective identification of such parts is still a challenge. In this paper two new metrics, namely PIEDG and PIMDG are proposed for predicting defects based on dependency between the file level components of the code. The proposed metrics use the notion of participation of nodes in the software dependency graph to recognize the parts of the code which possess defects. This research also investigates the effect of ego graph on the software dependency global graph. The feasibility of the software defect predictor which is built based on the proposed metrics is evaluated. The\u00a0\u2026", "num_citations": "0\n", "authors": ["1991"]}