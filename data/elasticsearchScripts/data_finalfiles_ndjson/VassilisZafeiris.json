{"title": "Automated refactoring to the strategy design pattern\n", "abstract": " ContextThe automated identification of code fragments characterized by common design flaws (or \u201ccode smells\u201d) that can be handled through refactoring, fosters refactoring activities, especially in large code bases where multiple developers are engaged without a detailed view on the whole system. Automated refactoring to design patterns enables significant contributions to design quality even from developers with little experience on the use of the required patterns.ObjectiveThis work targets the automated identification of refactoring opportunities to the Strategy design pattern and the elimination through polymorphism of respective \u201ccode smells\u201d that are related to extensive use of complex conditional statements.MethodAn algorithm is introduced for the automated identification of refactoring opportunities to the Strategy design pattern. Suggested refactorings comprise conditional statements that are characterized\u00a0\u2026", "num_citations": "46\n", "authors": ["824"]}
{"title": "Representing and querying histories of semistructured databases using multidimensional OEM\n", "abstract": " Multidimensional semistructured data (MSSD) are semistructured data that present different facets under different contexts. Context represents alternative worlds, and is expressed by assigning values to a set of user-defined variables called dimensions. The notion of context has been incorporated in the object exchange model (OEM), and the extended model is called Multidimensional OEM (MOEM), a graph model for MSSD. In this paper, we explain in detail how MOEM can represent the history of an OEM database. We discuss how MOEM properties are applied in the case of representing OEM histories, and show that temporal OEM snapshots can be obtained from MOEM. We present a system that implements the proposed ideas, and we use an example scenario to demonstrate how an underlying MOEM database accommodates changes in an OEM database. Furthermore, we show that MOEM is capable to\u00a0\u2026", "num_citations": "30\n", "authors": ["824"]}
{"title": "Automated refactoring to the null object design pattern\n", "abstract": " Context Null-checking conditionals are a straightforward solution against null dereferences. However, their frequent repetition is considered a sign of poor program design, since they introduce source code duplication and complexity that impacts code comprehension and maintenance. The N ull O bject design pattern enables the replacement of null-checking conditionals with polymorphic method invocations that are bound, at runtime, to either a real object or a Null Object. Objective This work proposes a novel method for automated refactoring to N ull O bject that eliminates null-checking conditionals associated with optional class fields, ie, fields that are not initialized in all class instantiations and, thus, their usage needs to be guarded in order to avoid null dereferences. Method We introduce an algorithm for automated discovery of refactoring opportunities to N ull O bject. Moreover, we specify the source code\u00a0\u2026", "num_citations": "24\n", "authors": ["824"]}
{"title": "Automated refactoring of super-class method invocations to the Template Method design pattern\n", "abstract": " Context: Implementation inheritance, ie, overriding of concrete method implementations through subtyping, is prone to potential class contract violations. Call Super is a code pattern that employs implementation inheritance for extending a method\u2019s behaviour. In Call Super the overriding method includes in its body an invocation to the overridden method. Template Method is a design pattern that enables extensions to a multi-step procedure without overriding its concrete implementation. Instead, subclasses provide different variants of the template method\u2019s behaviour through implementation of abstract method definitions (interface inheritance). Objective: This work studies the automated refactoring of Call Super to Template Method, contributing, thus, to replacement of implementation inheritance with interface inheritance. Method: We introduce an algorithm for the discovery of refactoring candidates that is based\u00a0\u2026", "num_citations": "22\n", "authors": ["824"]}
{"title": "An agent-based architecture for handover initiation and decision in 4G networks\n", "abstract": " The rollout of 3G networks coincides with the emergence of a variety of wireless access technologies (IEEE 802.11x, Bluetooth, etc.) supporting high bitrates in restricted areas and being complementary to wide coverage mobile networks. Integration of the different wireless access technologies is the general trend towards 4G. Our work focuses on the area of handover management in the context of 4G, and specifically on the initiation and decision phases of the handover mechanism. In 3G or earlier generation networks, handovers are initiated and decided by the base station on the basis of measurements of perceived SNR, cell congestion, terminal speed, etc. In 4G, due to the diversity of available radio access services, additional factors also need to be taken into account. We propose an agent-based architecture that determines the timing and target network of handovers with respect to user, application and\u00a0\u2026", "num_citations": "18\n", "authors": ["824"]}
{"title": "Agent-mediated knowledge management in multiple autonomous domains\n", "abstract": " Knowledge Management (KM) applications have proved their advantages and established their essential role in the context of organizations. Lately, Distributed KM has emerged as a means to utilize and exploit knowledge residing outside the boundaries of an organization. This paper presents an agentmediated KM approach in an environment of multiple autonomous domains, ie multiple organizations. Our approach allows knowledge asset discovery within a distributed and heterogeneous wealth of information, through an infrastructure of knowledge repositories by means of software agents. We describe and show the important role of ontologies and agents for providing distributed knowledge discovery in multiple autonomous domains. Interoperability of knowledge sources is achieved by software agent mediation. Finally, we describe the system architecture and present the implementation status of our work.", "num_citations": "17\n", "authors": ["824"]}
{"title": "Context-based caching and routing for P2P web service discovery\n", "abstract": " In modern heterogeneous environments, such as mobile, pervasive and ad-hoc networks, architectures based on web services offer an attractive solution for effective communication and inter-operation. In such dynamic and rapidly evolving environments, efficient web service discovery is an important task. Usually this task is based on the input/output parameters or other functional attributes, however this does not guarantee the validity or successful utilization of retrieved web services. Instead, non-functional attributes, such as device power features, computational resources and connectivity status, that characterize the context of both service providers and consumers play an important role to the quality and usability of discovery results. In this paper we introduce context-awareness in web service discovery, enabling the provision of the most appropriate services at the right location and time. We focus on\u00a0\u2026", "num_citations": "16\n", "authors": ["824"]}
{"title": "The role of caching and context-awareness in P2P service discovery\n", "abstract": " Mobile terminals (cellular phones, PDAs, palmtops etc.) emerge as a new class of small-scale, ad-hoc service providers that share data and functionality via mobile web services' calls. In mobile service discovery, it is often the case that implicit contextual information such as the location of the requestor, time the query was submitted, capabilities of the involved devices have a significant impact on query evaluation and the quality of the results. On the other hand, lack of scalability and the well-known single point of failure problem call for distribution of service directories into several peers. In this paper, we present an approach for context-aware service discovery where service directories reside in a P2P architecture. We explore the role and benefits of context-awareness and caching query results in the service discovery process. We conduct extensive experiments coming up with guidelines for service directory\u00a0\u2026", "num_citations": "11\n", "authors": ["824"]}
{"title": "Accommodating changes in semistructured databases using multidimensional OEM\n", "abstract": " Multidimensional Semistructured Data (MSSD) are semistructured data that present different facets under different contexts (sets of worlds). The notion of context has been incorporated in OEM, and the extended model is called Multidimensional OEM (MOEM), a graph model for MSSD. In this paper, we explain in detail how MOEM can represent the history of OEM databases. We discuss how MOEM properties are applied in the case of representing OEM histories, and show that temporal OEM snapshots can be obtained from MOEM. We present a system that implements the proposed ideas, and we use an example scenario to demonstrate how an underlying MOEM database accommodates changes in an OEM database. Furthermore, we show that MOEM is capable to model change occurring not only in OEM databases, but in Multidimensional OEM databases as well.", "num_citations": "11\n", "authors": ["824"]}
{"title": "Using neural networks and SVMs for automatic medical diagnosis: a comprehensive review\n", "abstract": " In this paper we make a comprehensive review regarding the use of neural networks in automated medical diagnosis, with a special emphasis in Support Vector Machines (SVMs), which are specialized types of neural functions. Through the study, we see that, in many cases, symptoms and diseases can be efficiently predicted by neural systems, while SVMs are increasingly used in medical diagnosis due to their accurate classification characteristics.", "num_citations": "9\n", "authors": ["824"]}
{"title": "An agent\u2010based perspective to handover management in 4G networks\n", "abstract": " In 3G or earlier generation networks handovers are usually initiated and decided by the base station, on the basis of measurements of RSS or SNR received by the terminal, cell congestion, terminal speed etc. In 4G, due to the diversity of available radio access services, additional factors, for example user profile, application requirements, and terminal device capabilities, need also to be taken into account. We propose an agent\u2010based architecture that determines the timing and target network for handovers in a 4G network setting. The capabilities of the architecture are provided as a value\u2010added service on top of network operators' wireless access infrastructure. Network selection spans both wireless access and core routing services and is performed by user agents executing in the network side. In order to deal with trust issues we study the integration of the regulatory authority in the architecture. A performance\u00a0\u2026", "num_citations": "8\n", "authors": ["824"]}
{"title": "An Infrastructure for Manipulating Multidimensional \u0116emistructured Data\n", "abstract": " Multidimensional Semistructured Data (MSSD) are semistructured data that present different facets under different contexts (ie alternative worlds). For the representation of MSSD various formalisms have been proposed by the authors, both syntactic (such as mssd-expressions and MXML) as well as graphical (such as Multidimensional OEM). In this paper we present an infrastructure for handling MSSD. This infrastructure provides appropriate tools for building MSSD applications, and is independent from any particular application that uses it. We also present a graphical interface, called MSSDesigner, that provides access to the infrastructure, and we describe OEM History, an MSSD application that supports keeping track of temporal changes in semistructured databases.", "num_citations": "8\n", "authors": ["824"]}
{"title": "Optimized traffic flow assignment in multi-homed, multi-radio mobile hosts\n", "abstract": " Multi-radio mobile communication devices are increasingly gaining market share due to the diversity of currently deployed and continuously emerging radio access technologies. Multi-homing support in multi-radio terminals, i.e., simultaneous use of two or more radio interfaces, provides improved user experience through increase in available bandwidth capacity and reliability of wireless access. Furthermore, optimized assignment of application traffic flows to available interfaces and radio access bearer services contributes to economic and power consumption efficiency. We study the problem of traffic flow assignment in a mobile node, multi-homed through a set of different technology radio interfaces. We provide an analytical formulation for the problem and prove its hardness through transformation from the Multiple Knapsack Problem with Assignment Restrictions. Problem solutions are approximated with a\u00a0\u2026", "num_citations": "7\n", "authors": ["824"]}
{"title": "Towards flow scheduling optimization in multihomed mobile hosts\n", "abstract": " The problem of network selection in a heterogeneous radio access environment has been extensively studied from the perspective of a single-homed mobile terminal. This work approaches the problem by assuming a multihomed mobile host reachable through multiple global IP addresses that are bound to its various radio interfaces. In the context of a multihomed mobile host, network selection sets further requirements than decision on the best available radio access technology and network provider. In the presence of device, application, user and provider constraints, the decision process involves: 1) selection of a subset of hostpsilas radio interfaces for activation, 2) selection of the best access network to be associated with each active radio interface, 3) assignment of application flows to the most appropriate radio interface in a way that maximizes user utility. For brevity reasons, this work uses the term flow\u00a0\u2026", "num_citations": "6\n", "authors": ["824"]}
{"title": "Automated refactoring of client-side JavaScript code to ES6 modules\n", "abstract": " JavaScript (JS) is a dynamic, weakly-typed and object-based programming language that expanded its reach, in recent years, from the desktop web browser to a wide range of runtime platforms in embedded, mobile and server hosts. Moreover, the scope of functionality implemented in JS scaled from DOM manipulation in dynamic HTML pages to full-scale applications for various domains, stressing the need for code reusability and maintainability. Towards this direction, the ECMAScript 6 (ES6) revision of the language standardized the syntax for class and module definitions, streamlining the encapsulation of data and functionality at various levels of granularity. This work focuses on refactoring client-side web applications for the elimination of code smells, relevant to global variables and functions that are declared in JS files linked to a web page. These declarations \"pollute\" the global namespace at runtime and\u00a0\u2026", "num_citations": "3\n", "authors": ["824"]}
{"title": "Mobile agents for flow scheduling support in multihomed mobile hosts\n", "abstract": " Mobile host multihoming provides benefits to both users and network providers. A mobile terminal's (MT) capability of simultaneously serving user traffic through multiple radio interfaces enhances the performance and reliability of wireless access. On the other hand, the availability of alternative paths for reaching end-hosts gives network operators the opportunity for load balancing their radio access networks. This work focuses on efficient utilization of available network resources from the perspective of a multi-mode MT, multihomed through its multiple radio interfaces. In the presence of device, application and user specific constraints, efficient utilization involves: i) selection of the host's radio interfaces that must be active, ii) selection of the best access network to be associated with each active radio interface, iii) assignment of application flows to the most appropriate radio interface in a way that maximizes user\u00a0\u2026", "num_citations": "3\n", "authors": ["824"]}
{"title": "NFC-triggered IMS flow mobility across different devices\n", "abstract": " Smartphones are gradually providing support for advanced user applications with high computation and network bandwidth requirements. However, their usually restricted size raises usability issues. A need is emerging for utilization and collaboration with devices in the user's reach that provide advanced capabilities. The 3GPP IP Multimedia Subsystem (IMS) is making an important contribution toward this direction, through specifications for distribution and replication of a multimedia session's media components to multiple devices that either belong to the same or different subscriptions. The IMS Service Continuity capability enables the transfer of one or more media components of an IMS session across different user devices. Although IMS can handle the media flow transfer, the user is still required to be engaged in a tedious device discovery and configuration process. We propose an out-of-band signaling\u00a0\u2026", "num_citations": "1\n", "authors": ["824"]}