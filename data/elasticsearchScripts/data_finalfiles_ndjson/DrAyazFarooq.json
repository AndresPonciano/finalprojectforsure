{"title": "Research directions in verification & validation process improvement\n", "abstract": " Software process establishment, evaluation and improvement are key research areas in the software engineering field today. Extensive research has been carried out and many different kinds of approaches exist to improve the software process and even more efforts are underway. Verification & validation process, which is part of the broader software process activities, plays a vital role in quality and profitability of the developed product but is believed to consume major portion of the development expenses and resources. Probably, research towards improving the verification & validation process has not been as actively directed as compared to software process improvement research. This paper identifies several potential future research directions towards improving verification and validation process.", "num_citations": "23\n", "authors": ["1258"]}
{"title": "Analysis of the Risk Assessment Methods\u2013A Survey\n", "abstract": " Risk assessment methods are one of the most important elements in the process of risk management. They are a vital element of software project management and software testing. Practitioners, particularly researchers, are interested in evaluation of these methods for their applicability, strengths, and weaknesses for particular scenarios. This paper surveys and analyzes several risk assessment methods from different perspectives. The paper characterizes the methods appearing in literature during a considerably large time span. The survey is expected to be helpful both to the practitioners and researchers in providing relevant information that could be used for improving the process of risk assessment or for developing new methods and it gives information that could be used in the evolution process of the risk assessment methods.", "num_citations": "14\n", "authors": ["1258"]}
{"title": "Evaluation approaches in software testing\n", "abstract": " There have been many reports of catastrophic effects of software failures. Peter Neumann\u2019s regular column Risks to the Public in ACM\u2019s Software Engineering Notes magazine lists several accounts of everyday incidents arising primarily due to software failures. The consequences of software failures may vary between mild and severe depending upon the kind of system involved [iee, 1990]. Software testing is used as a primary quality assurance technique to establish our confidence over successful execution of software. A detailed report [Tassey, 2002] analyzes economic impacts of insufficient software testing. The report summarizes the effects on software industry due to inadequate test technology as,\u2022 increased failures due to poor quality\u2022 increased software development costs\u2022 increased time to market due to inefficient testing\u2022 increased market transaction costsWhen we acknowledge the criticality of software testing we must pay special attention to manage this activity. While we are attempting to manage testing, we often come across probably the two most common questions. First, when testing should be stopped and software be released? While there may be many structured approaches for the purpose based on reliability, defects, or economic value [Sassenburg, 2005], a practitioner\u2019s response most probably would be\u2019when there is no more time or money left to invest!\u2019. Second, how effectively and efficiently testing is being (or has been) performed? It is a kind of continuous in-process and post-process evaluation of testing to track, monitor and control these activities. This spans determining efficiency and effectiveness of techniques used\u00a0\u2026", "num_citations": "14\n", "authors": ["1258"]}
{"title": "A meta-measurement approach for software test processes\n", "abstract": " Existing test process assessment and improvement models intend to raise maturity of an organization with reference to testing activities. Such process assessments are based on ldquowhatrdquo testing activities are being carried out, and thus implicitly evaluate process quality. Other test process measurement techniques attempt to directly assess some partial quality attribute such as efficiency or effectiveness some test metrics. There is a need for a formalized method of test process quality evaluation that addresses both implicitly and partially of these current evaluations. This paper describes a conceptual framework to specify and explicitly evaluate test process quality aspects. The framework enables provision of evaluation results in the form of objective assessments, and problem-area identification to improve the software testing processes.", "num_citations": "12\n", "authors": ["1258"]}
{"title": "Challenges in evaluating SOA test processes\n", "abstract": " Service-oriented architecture enables creation of enterprise-wide and cross-enterprise flexible, dynamic business processes and agile applications. The performance, reliability and other quality aspects of such systems, thus, become very important for the success of businesses. Testing is a way to evaluate these quality attributes. However, the new unique architecture style of SOA-based systems calls for reorienting testing procedures, methods, techniques, and tools etc. In this paper we discuss how we can evaluate efficiency and effectiveness of SOA test process. Considering an existing generic test process evaluation framework, we attempt to highlight areas where necessary adjustments to this framework are needed to care for the specialized testing perspectives of SOA-based systems.", "num_citations": "10\n", "authors": ["1258"]}
{"title": "An evaluation framework for software test processes\n", "abstract": " Existing assessment and improvement models of software testing process mainly intend to raise maturity of an organization with reference to testing activities. Such process assessments are based on what testing activities are being carried out, and thus implicitly evaluate process quality. Other test process measurement techniques attempt to directly assess some partial quality attribute such as efficiency or effectiveness using few test measurements. There exists a potential for a formalized method of evaluating test process quality that addresses both implicity and partially of these current evaluations. The first part of this dissertation surveys and analyzes breadth and depth of existing evaluation approaches in the area of software testing. Strengths and weaknesses of these approaches are highlighted to arrive at a set of requirements for an improved solution. On the other hand, to investigate the scientific and philosophical foundations of evaluation, a short study and analysis into the discipline of evaluation is also made in this part. This research helps identify salient features of an improved test evaluation approach. Building upon the first phase of research, the second part of the dissertation presents an evaluation framework for specifying and evaluating diverse quality aspects of software test processes. The framework comprises two types of components. Five informative components describe evaluation aspects of testing process, a quality model, a yardstick test process, test metrics, and synthesis techniques. These informative components support a sixth (core) component called evaluation process which details all the steps of test evaluations\u00a0\u2026", "num_citations": "9\n", "authors": ["1258"]}
{"title": "An empirical analysis of object-oriented metrics for java technologies\n", "abstract": " As a fact, the application of object-oriented approach is of high significance in the area of software development since it can abet efficiency or cost effectiveness and reduce error probability during software design and implementation. In order to quantify, especially qualitative aspects such as potential error hot spots caused by elevated design complexity, software measurement can strongly assist. Particularly, metrics proposed by Chidamber and Kemerer as well as Abreu's MOOD metrics set are presumably most prevalent in practice and provide adequate explanatory power. Especially the object-oriented programming language Java cannot be dismissed from one's thoughts because a lot of Java libraries serve as foundation for contemporary applications. Thus, after initially defining language bindings for the aforementioned metrics, we perform measurement and evaluation of various Java standard libraries like\u00a0\u2026", "num_citations": "9\n", "authors": ["1258"]}
{"title": "Towards meaningful metrics data bases\n", "abstract": " The importance of measuring artifacts emerging during the software development process is beyond controversy not only for economic purposes, these days. To expand those data towards empirical series of measurement and thus to benefit from it in the long-run, a structured and persistent acquisition is almost compulsory. Renowned proposals for measurement programs and models to assess an organization\u2019s measurement capability describe the prominence of measurements and suppose the usage of appropriate metrics data bases in different fields of application. But, analogous to common project management or process frameworks they leave organizations alone in providing guidelines or standards for the collection process, too. So we propose a Metrics Data Base Maturity Model (MDBMM) bearing the potential to appraise an organization\u2019s measurement collection process\u2019 maturity and to expose leverage points for its improvement.Withal, the conceived MDBMM has its seeds in a field study concerning prevalent metrics data bases in practice to characterize their status quo as well as commonly applied infrastructures, on the one hand. On the other hand, it strongly avails itself of an investigation in factors influencing and MDB\u2019s maturity thereby not abstracting away from accepted frameworks like CMMI, V-Modell\u00ae XT, or Measurement-CMM. As a result, the MDBMM enables us to appraise measurement collection process maturity with the aid of a maturity scale similar to that of CMMI-SE/SW simultaneously suggesting ways for improvement.", "num_citations": "9\n", "authors": ["1258"]}
{"title": "Developing and applying a consolidated evaluation framework to analyze test process improvement approaches\n", "abstract": " Following the general software process improvement initiatives, improvement models particular to the software test process have also been developed. Although these models have been based on nearly similar principles, yet they differ in a variety of aspects. To compare and critically analyze strengths and weaknesses of these test process models, we need a common analysis framework. Existing SPI evaluation frameworks focus only on some basic and key process characteristics and elements. A number of critical success factors for software process improvement have been identified in literature which impose higher level of requirements on SPI approaches. We present a consolidated evaluation framework derived from critical success factors/literature review and apply it to analyze well known test process improvement approaches.", "num_citations": "8\n", "authors": ["1258"]}
{"title": "Web services based measurement for it quality assurance\n", "abstract": " Concern for quality assurance in information technology is growing with every passing day. Software measurement encompasses all aspects of IT including product, process and resources and provides us adequate quantitative means for assessing various artifacts involved in information technology. Service-oriented architecture provides flexibility, reliability and scalability and is gaining tremendous potential. Conventional hard-wired software measurement and analysis tools are expensive and limited in functionality and ease of use. This situation can be improved by software measurement web services which can provide us an easy and flexible approach towards measurement-based quality evaluation of software products. We present the idea of service-oriented approach for IT quality assurance and introduce a software measurement web service for evaluating and analyzing software products. We apply our approach, using our web service as a case study, to evaluate and analyze Java software products and libraries thereby highlighting their various quality aspects.", "num_citations": "6\n", "authors": ["1258"]}
{"title": "Conception and prototypical implementation of a web service as an empirical-based consulting about java technologies\n", "abstract": " As a fact, the application of object-oriented approach is of high significance in the area of software development since it can abet efficiency or cost effectiveness, and can reduce error probability during software design and implementation. In order to quantify, especially qualitative aspects such as potential error hot spots caused by elevated design complexity, software measurement can strongly assist. Particularly, measurements of Chidamber and Kemerer metrics suite as well as Abreu\u2019s MOOD metrics set are presumably most prevalent in practice and provide adequate explanatory power. Especially the object-oriented programming language Java cannot be dismissed from one\u2019s thoughts because a lot of Java libraries serve as foundation for contemporary applications. This thesis presents a prototype software measurement web service which performs measurement and evaluation of various Java standard libraries like J2SE, J2EE, J2ME, JWSDP and few others concerning different aspects. The results acquired are beneficial to be used by software designers for aligning and orienting their design with common industry practices. Furthermore, these extensive measurements provide an opportunity for key metrics correlation studies incorporating many thousand Java classes.", "num_citations": "6\n", "authors": ["1258"]}
{"title": "PICASSOS\u2013Practical applications of automated formal methods to safety related automotive systems\n", "abstract": " PICASSOS was a UK government funded programme to improve the ability of automotive supply chains to develop complex software-intensive systems with high safety assurance and at an acceptable cost. This was executed by a consortium of three universities and five companies including an automotive OEM and suppliers. Three major elements of the PICASSOS project were: use of automated model based verification technology utilising formal methods; application of this technology in the context of ISO 26262; and evaluation to measure the impact of this approach to inform key management decisions on the costs, benefits and risks of applying this technology on live projects. The project spanned system level design and software development. This was achieved by using a unified model based process incorporating SysML at the system level and using Simulink and Stateflow auto-coded into C at the\u00a0\u2026", "num_citations": "5\n", "authors": ["1258"]}
{"title": "Applying Service-Oriented Software Measurement to Derive Quality Indicators of Open Source Components\n", "abstract": " In many conventional industrial sectors like automobile or consumer electronics, the diversified availability of domain-specific and most often standardized hardware components of certified quality is an essential prerequisite to long-term business success. Their production process can be better characterized as selecting and assembling components rather than developing a system from scratch. Unlike", "num_citations": "4\n", "authors": ["1258"]}
{"title": "Formal Modelling of Software Measurement Levels of Paradigm-Based Approaches\n", "abstract": " Formal descriptions of software measurement can be found in the following kinds of exemplary motivations,", "num_citations": "3\n", "authors": ["1258"]}
{"title": "QuaD2 - an ontology-based framework for quality driven design of architectures\n", "abstract": " The importance of providing integration architectures in every field of application is beyond controversy these days. Unfortunately existing solutions are focusing mainly on functionality. But for the success of systems integration in the long run, the quality of developed architectures is of substantial interest. Therefore a framework for quality-driven creation of architectures is proposed in this paper. Besides these quality-oriented characteristic, the usage of semantic knowledge and structured process descriptions enable an automatic procedure. Especially the combination of both is a promising approach.", "num_citations": "1\n", "authors": ["1258"]}