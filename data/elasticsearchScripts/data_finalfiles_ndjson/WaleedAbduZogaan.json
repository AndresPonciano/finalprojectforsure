{"title": "Automatic Classification of So ware Artifacts in Open-Source Applications\n", "abstract": " With the increasing popularity of open-source software development, there is a tremendous growth of software artifacts that provide insight into how people build software. Researchers are always looking for large-scale and representative software artifacts to produce systematic and unbiased validation of novel and existing techniques. For example, in the domain of software requirements traceability, researchers often use software applications with multiple types of artifacts, such as requirements, system elements, verifications, or tasks to develop and evaluate their traceability analysis techniques. However, the manual identification of rich software artifacts is very labor-intensive. In this work, we first conduct a large-scale study to identify which types of software artifacts are produced by a wide variety of open-source projects at different levels of granularity. Then we propose an automated approach based on Machine\u00a0\u2026", "num_citations": "16\n", "authors": ["2264"]}
{"title": "Automated training-set creation for software architecture traceability problem\n", "abstract": " Automated trace retrieval methods based on machine-learning algorithms can significantly reduce the cost and effort needed to create and maintain traceability links between requirements, architecture and source code. However, there is always an upfront cost to train such algorithms to detect relevant architectural information for each quality attribute in the code. In practice, training supervised or semi-supervised algorithms requires the expert to collect several files of architectural tactics that implement a quality requirement and train a learning method. Establishing such a training set can take weeks to months to complete. Furthermore, the effectiveness of this approach is largely dependent upon the knowledge of the expert. In this paper, we present three baseline approaches for the creation of training data. These approaches are (i) Manual Expert-Based, (ii) Automated Web-Mining, which generates\u00a0\u2026", "num_citations": "6\n", "authors": ["2264"]}
{"title": "Blockchain-Based Framework for Interoperable Electronic Health Record\n", "abstract": " Electronic Health Record (EHR) is being used in most healthcare institutions through the advancement in computer technologies to preserve and share health records instead of a paper-based method. Data information should be exchanged amongst various parties and users' privileges to manage access to their records should also be provided. In addition to the basic standards of secrecy, confidentiality and integrity of information, these acts further demonstrate the need for interoperability and consumer access to personal data. EHR frameworks face problems in the protection of data collection, reputation and management. Blockchain technology has arisen as a powerful technology that can offer the immutability, confidentiality and user access properties of stored information without the need for centralized storage. This paper discusses the different EHR norms, specifications and problems and also offers a comparative analysis of various EHR specifications and current blockchain-based EHR systems. Finally, it suggests an interoperable EHR system focused on blockchain.", "num_citations": "4\n", "authors": ["2264"]}
{"title": "BUDGET: A tool for supporting software architecture traceability research\n", "abstract": " Automated traceability techniques based on supervised machine learning algorithms can significantly reduce the cost and effort needed to create and maintain traceability links between requirements, architecture and source code. However, the upfront cost to train these algorithms is the main bottleneck for expanding, and validating these traceability techniques as well as applying them to complex industrial systems. In this tool demo, we present our Web-based tool named BUDGET, as a solution to automate creation of training data for the problem of tracing architectural concerns. BUDGET uses Automated Web-Mining, and Big-Data Analysis techniques to generate training data for supervised architecture-traceability techniques. It uses several sampling strategies and mines ultra-large scale code repositories to generate datasets of tactical code snippets. The BUDGET falls in the research tool category and\u00a0\u2026", "num_citations": "4\n", "authors": ["2264"]}
{"title": "Evaluating medical travelers\u2019 satisfaction through online review analysis\n", "abstract": " Medical tourism is increasing quickly since it contributes to both the health and tourism sectors. The use of big social data has been effective in the development of medical tourism as a huge amount of data is produced and shared by travelers about the services through different social media platforms. Indeed, communicative information and knowledge can be mined from a large amount of information provided by travelers about medical tourism services. It is important to analyze such data to understand the customers' satisfaction level and their demands. Although several studies have been conducted to find the factors influencing customer satisfaction in medical tourism, there is a lack of studies about big social data and online behavioral analysis of medical travelers. In addition, the analysis of customers' online reviews is fairly unexplored by machine learning techniques in the context of medical tourism. Hence\u00a0\u2026", "num_citations": "1\n", "authors": ["2264"]}