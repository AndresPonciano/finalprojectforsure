{"title": "Variability modeling\n", "abstract": " The aim of this chapter is to provide a comprehensive description of the notion of variability modeling in the context of software product line engineering and to give an overview of the techniques proposed for variability modeling.", "num_citations": "44\n", "authors": ["2211"]}
{"title": "Validating consistency between a feature model and its implementation\n", "abstract": " Consistency across different lifecycle artifacts is an important issue in software engineering. In software product line engineering, validating consistency becomes even more complicated because product line assets have embedded variabilities. Commonality and variability (C&V) of a software product line (SPL) are usually captured using a feature model. Then, they are embedded into an implementation (i.e., asset code) using various techniques including preprocessor directives. However, the product line asset code often evolves without properly updating other lifecycle artifacts including the variability model, and verification of the consistency of C&V across different product line assets is a major challenge. In this paper, an approach to validating the consistency between C&V expressed in a feature model and C&V embedded in an implementation is proposed. With this approach, product line engineers\u00a0\u2026", "num_citations": "29\n", "authors": ["2211"]}
{"title": "Experience report on using a domain model-based extractive approach to software product line asset development\n", "abstract": " When we attempted to introduce an extractive approach to a company, we were faced with a challenging project situation where legacy applications did not have many commonalities among their implementations as they were developed independently by different teams without sharing a common code base. Although there were not many structural similarities, we expected to find similarities if we view them from the domain model perspective as they were in the same domain and were developed with the object-oriented paradigm. Therefore, we decided to place the domain model at the center of extraction and reengineering, thus developing a domain model-based extractive method. The method has been successfully applied to introduce software product line to a set-top box manufacturing company.", "num_citations": "26\n", "authors": ["2211"]}
{"title": "Problem frames-based approach to achieving quality attributes in software product line engineering\n", "abstract": " In software product line engineering (SPLE), commonality and variability across products of a product line domain are captured typically by a feature model. Reusable components are then developed from features. However, mapping features to components remains a complex task requiring a systematic way of exploring and analyzing various concerns arising from inadequate/insufficient domain assumptions. Essentially, those concerns prevent SPLE from achieving various quality attributes. This paper proposes a problem frames-based approach to addressing this problem. An elevator product line example is used to demonstrate the feasibility of the approach.", "num_citations": "22\n", "authors": ["2211"]}
{"title": "Development and application of the smart helmet for disaster and safety\n", "abstract": " This paper introduces the development of the smart helmet needed to respond to accidents of rescue workers in the event of a disaster. With the emergence of many IoT-based devices and applications, many of the services that use them are active. However, each service was developed in a specific field, making it difficult to apply new devices, modify application and make changes to services. With the advent of a variety of IoT-based devices and services, we need middleware that can easily integrate them. Our researchers have developed the new software framework enable to integrate a wide range of devices and services and efficiently manage resources. In addition, based on this, we develop the smart helmet to respond the disaster safety accidents. The smart helmet collects, generates, and converts information on sensors (infrared camera, electro optical camera, drone camera, oxygen residual sensor, 6-axis\u00a0\u2026", "num_citations": "15\n", "authors": ["2211"]}
{"title": "VULCAN: architecture-model-based workbench for product line engineering\n", "abstract": " Adaptability and reusability are important quality attributes for software targeted for global market due to diverse market needs, ever increasing number of features, rapidly changing technologies, and various laws/standards of different countries. In response to these requirements, software development organizations are interested in product line engineering and searching for support tools. However, most of the existing tools for supporting product line engineering focus only on providing mechanisms for instantiating products without adequately supporting development of software assets that are adaptable and reusable.", "num_citations": "13\n", "authors": ["2211"]}
{"title": "An Internet of things system architecture for aiding firefighters in the scene of disaster\n", "abstract": " To support and protect firefighters in the scene of disaster, this research suggests an Internet of Things (IoT) system architecture that can be configurable and applicable to firefighting and rescue in various disaster situations. The proposed approach provides increased adaptability and reusability of systems compared to existing approaches. To validate the feasibility of the approach, a system of systems based on the architecture was developed and successfully tested for a specific firefighting and rescue scenario in a given test environment.", "num_citations": "9\n", "authors": ["2211"]}
{"title": "Dual-band MNG patch antenna for smart helmet\n", "abstract": " A novel dual-band compact patch wireless fidelity (Wi-Fi) antenna using \u03bc-negative (MNG) transmission lines (TLs) for the smart helmet is presented. In the smart helmet scenario, rescue agent is able to communicate with the other rescue agents, control centre, and drones via the helmet by Wi-Fi dual bands. For the smart helmet communication, the antenna, which consists of two MNG-TL loops located on the outside and inside, is devised. The dual-band corresponds to the zeroth-order resonance (ZOR) and second-positive-order resonance (SPOR) of the outer MNG-TL. The ZOR frequency of the outer MNG-TL is near the Wi-Fi 2.4 GHz band, and the SPOR frequency of the outer MNG-TL, excited by the coupling between the inner and outer MNG-TL loops, is the Wi-Fi 5 GHz band. The prototype of the proposed antenna has been fabricated and measured. The bandwidth of the antenna includes Wi-Fi 2.4 and 5\u00a0\u2026", "num_citations": "7\n", "authors": ["2211"]}
{"title": "VULCAN: architecture-model-based software development workbench\n", "abstract": " Recently, software developers are faced with a fierce market competition with: diverse market needs, ever increasing number of features, and shortening product life cycle. To survive in this fierce competition, software developers are searching for methods and tools to develop various products with reduced time-to-market and improved quality.", "num_citations": "5\n", "authors": ["2211"]}
{"title": "Augmented IoT service architecture assisting safe firefighting operation\n", "abstract": " In the field of firefighting, firefighters are usually confronted with isolation situation caused by disconnected communication and decreased visual and auditory sensing ability. Mostof all, they experience the lack of their own and co-workers' location information. This paperproposes augmented and intelligent services for firefighters doing rescue operation in the dangerous fire scene. The proposed services are developed on a distributed and collaborating software framework and specially designed hardware systems.", "num_citations": "4\n", "authors": ["2211"]}
{"title": "Mobile ad-hoc routing apparatus and method\n", "abstract": " A mobile ad-hoc routing apparatus includes a first communication module and a second communication module configured to transmit and receive data through a first communication band and a second communication band, respectively, a memory configured to store a program for transmitting and receiving the data, and a processor configured to execute the program stored in the memory, wherein when the program is executed, the processor receives first control information broadcast by one or more neighboring nodes via the first communication module and stores the first control information in the memory, wherein the first control information includes current position and communication status information of the neighboring node, the processor updates information on the neighboring node on the basis of the first control information, generates packet forwarding information which includes information on a node\u00a0\u2026", "num_citations": "3\n", "authors": ["2211"]}
{"title": "Method for developing software and apparatus for the same\n", "abstract": " Provided is software product line-based software development method using a software type automatic code generator, and an apparatus for the same. The method includes selecting features corresponding to software from a developer from a feature model created by analyzing features of multiple software to generate feature lists, determining an automatic code generator corresponding to a software type received from the developer, selecting architecture components using the software type, generating automatically generated code on the basis of the selected architecture components and requirements of the determined automatic code generator received from the developer, modifying the automatically generated code and code of the architecture components on the basis of the generated feature list to output configured code, and connecting a part calling a library of domains in the configured code with a part\u00a0\u2026", "num_citations": "2\n", "authors": ["2211"]}
{"title": "Domain-oriented variability modeling for reuse of simulation models\n", "abstract": " Reusability is an important quality attribute for defense modeling and simulation (MS) due to the ever-changing combat simulations and new requirements. There has been research conducted worldwide for reusing simulation models. The methods proposed in these studies (including One Semi-Automated Forces (OneSAF)) support reuse of simulation components in the development of new models. As the reuse units in the existing methods are at the simulation component level, when existing components do not satisfy new simulation requirements, new components have to be developed and maintained separately from the existing ones. However, simulation components in the same domain tend to have common parts; behavior models for tactical missions and battlefield functions in the same domain are derived from the same tactical doctrine/manual, and thus they tend to have a common structure. There is a\u00a0\u2026", "num_citations": "2\n", "authors": ["2211"]}
{"title": "VULCAN: A Workbench for Feature-Oriented Product Line Software Development\n", "abstract": " Software developers, especially embedded system developers, are faced with fierce market competition with: diverse market needs, ever increasing number of features, rapidly changing technologies, and time-to-market pressure. To survive in this environment and enhance their competitiveness in the market, developers are searching for methods and tools to increase their productivity and improve software quality. As a result, software product line engineering (SPLE) methods and support tools have gained popularity ([1, 2]).There are several methods/tools ([3, 4, 5, 6, 7]) that support SPLE. Existing methods such as [3, 4, 5] provide mechanisms for instantiating products from assets that are created manually. Other methods ([6, 7]) provide languages for describing product line architectures and integration mechanisms, but development of assets need to be done manually. With the existing method ([3,", "num_citations": "2\n", "authors": ["2211"]}
{"title": "Legacy System-Based Software Product Line Engineering: A Case Study on Cable Set-Top Box Software\n", "abstract": " Software product line (SPL) engineering is an emerging paradigm for successful software reuse and has been adopted for various industrial and consumer products to improve their productivity and quality. However, most SPL methods require high initial costs and long development time, which makes many companies hesitate to adopt the SPL paradigm. In this paper we introduce a method to construct an SPL by extracting core assets from legacy components based on the feature model, which requires less initial time and effort. We also present a case study on cable set-top box software to illustrate the applicability of this method, and lessons learned that will provide guidelines for many companies to adopt the SPL paradigm.", "num_citations": "2\n", "authors": ["2211"]}
{"title": "An Information Model and System for Fire Management Based on Integration of Fire Safety and Spatial Information\n", "abstract": " As urban structures become larger, higher, and more complex, utilizing high-precision spatial information in fire management is necessary to provide efficient countermeasures for urban safety. In this paper, a convergence model for integrating both fire safety and spatial information is defined addressing the following research problems: utilization of indoor spatial information as well as outdoor information; provision of various types of fire safety information; integration of fire safety and spatial information; and formalization of the integrated information. Also, a platform and systems for creating, managing and distributing convergence information based on the proposed model are presented. This is remarkable work to provide fire management based on the convergence model of fire safety and indoor/outdoor spatial information. Prototypes of the proposed platform and systems were implemented and tested with real\u00a0\u2026", "num_citations": "1\n", "authors": ["2211"]}
{"title": "Method and apparatus for controlling transmission signal for disaster scene communication system\n", "abstract": " A method and apparatus for controlling a transmission signal for a disaster scene communication system. The method includes determining a type of a transmission message transmitted to a mobile terminal device by a control terminal device of the disaster scene communication system, determining a criticality level of the transmission message corresponding to the type of the transmission message, determining an initial distance between the control terminal device and the mobile terminal device by checking initial location information of the mobile terminal device, setting an initial transmission power in consideration of the criticality level of the transmission message corresponding to the type of the transmission message and the initial distance between the mobile terminal device and the control terminal device, and controlling a current transmission power based on the initial transmission power.", "num_citations": "1\n", "authors": ["2211"]}
{"title": "Apparatus and method for performing routing using separate physical channel information in mobile ad-hoc network\n", "abstract": " Provided are an apparatus and method for performing routing for multi-hop communication. A mobile ad-hoc routing apparatus includes a control information manager configured to generate control information for managing a topology in a mobile ad-hoc network, a control information transceiver configured to transmit the control information or information for generating the control information to other nodes and receives control information of the other nodes or information for generating the control information from the other nodes, a data path manager configured to set a path for transmitting and receiving data using the generated control information and the received control information or the information for generating the control information, and a data transceiver configured to transmit and receive the data through the set path. The path for transmitting and receiving the data and a path for transmitting and receiving\u00a0\u2026", "num_citations": "1\n", "authors": ["2211"]}
{"title": "ATHENA: Distributed IoT Systems Providing Salient Features for Safety of Firefighters in Infra-Less Fire Environments\n", "abstract": " Firefighters are typically exposed to dangerous environments where a sense of vision, auditory, and direction is blocked by smoke, dusts, or flame. Some environments are even \"infra-less\"; power and communication infra is destroyed. Any commands and signals from outside are unavailable, so recognizing directions and making decisions are usually difficult. To protect and save lives of firefighters, we propose a system, ATHENA that provides salient features including tracking and navigation, emergency monitoring and notification, and information sharing among co-workers. ATHENA is a result of an on-going project supported by Korea Government. This paper provides an overview and demonstration of ATHENA.", "num_citations": "1\n", "authors": ["2211"]}
{"title": "A design feature-based approach to deriving program code from features: a step towards feature-oriented software development\n", "abstract": " Feature-oriented software development is a software development paradigm that uses\" features\" as the first class objects in designing program instead of objects as with the object-orientation. Most of researches on feature-oriented software development attempt to derive program code directly from a feature model, which presents several problems: there is no explicit attempt to embed required quality attributes into code; and features tend to cut across program units and it is difficult to derive program units from the features. To address these problems, a design-feature-based approach is proposed in this paper. Design feature model captures implementation-level design decisions explicitly. It bridges the abstraction gap between features (ie, functionalities in abstraction) and program units (ie, concrete implementation). Design features of a design feature model are identified based on required quality attributes. We\u00a0\u2026", "num_citations": "1\n", "authors": ["2211"]}
{"title": "Variability in the software product line life cycle\n", "abstract": " Product line (PL) engineering is a software engineering paradigm, which guides organizations toward the development of products from core assets rather than the development of products one by one from scratch [1\u20133]. Two major activities of PL software engineering are core asset development (i.e., PL engineering) and product development (i.e., application engineering) using the core assets.", "num_citations": "1\n", "authors": ["2211"]}
{"title": "Expressing Variability in Software Product Line Architecture Models: A Comparative Study\n", "abstract": " Software product line engineering is a software reuse paradigm that helps organizations improve software productivity and quality by developing software products from reusable core assets. For the satisfaction of common and variable requirements among products in the product line, the core assets must be configurable according to the selection of variable features. Therefore, unlike software architecture model of a single product, product line architecture model must embed and express variabilities among the products. Many researches have proposed methods of embedding and expressing variabilities in the product line architecture models, but there are few comparative studies on the proposed methods. In this paper we discuss strong points and weak points of the proposed methods and compare expressiveness of the methods, which helps select a proper method.", "num_citations": "1\n", "authors": ["2211"]}