{"title": "diffX: an algorithm to detect changes in multi-version XML documents\n", "abstract": " This paper presents the diffX algorithm for detecting changes between two versions of an XML document. The identified changes are reported as a script of edit operations. The script, when applied to the first version of the XML document, will produce the second version. The goal is to optimize the runtime of mapping the nodes between the two versions and to minimize the size of the edit script. To achieve this goal an isolated tree fragment mapping technique is used, in order to iteratively identify the largest matching tree fragments between the tree representations, of the two versions of the document. The mapping technique is robust enough to handle differences in both the structure and the content of the two trees. The generated edit script from the mapping acknowledges the different order sensitiveness of element and attributes of XML data model. The primitives for the edit script comprise both the atomic (node) and non-atomic (subtree) edit operations natural to XML document modification. The runtime of the algorithm is O (n2).", "num_citations": "94\n", "authors": ["220"]}
{"title": "Trust management for host-based collaborative intrusion detection\n", "abstract": " The accuracy of detecting an intrusion within a network of intrusion detection systems (IDSes) depends on the efficiency of collaboration between member IDSes. The security itself within this network is an additional concern that needs to be addressed. In this paper, we present a trust-based framework for secure and effective collaboration within an intrusion detection network (IDN). In particular, we define a trust model that allows each IDS to evaluate the trustworthiness of others based on personal experience. We prove the correctness of our approach in protecting the IDN. Additionally, experimental results demonstrate that our system yields a significant improvement in detecting intrusions. The trust model further improves the robustness of the collaborative system against malicious attacks.", "num_citations": "93\n", "authors": ["220"]}
{"title": "Mining twitter data for influenza detection and surveillance\n", "abstract": " Twitter---a social media platform---has gained phenomenal popularity among researchers who have explored its massive volumes of data to offer meaningful insights into many aspects of modern life. Twitter has also drawn great interest from public health community to answer many health-related questions regarding the detection and spread of certain diseases. However, despite the growing popularity of Twitter as an influenza detection source among researchers, healthcare officials do not seem to be as intrigued by the opportunities that social media offers for detecting and monitoring diseases. In this paper, we demonstrate that 1) Twitter messages (tweets) can be reliably classified based on influenza related keywords; 2) the spread of influenza can be predicted with high accuracy; and, 3) there is a way to monitor the spread of influenza in selected cities in real-time. We propose an approach to efficiently mine\u00a0\u2026", "num_citations": "56\n", "authors": ["220"]}
{"title": "Correlating social interactions to release history during software evolution\n", "abstract": " In this paper, we propose a method to reason about the nature of software changes by mining and correlating discussion archives. We employ an information retrieval approach to find correlation between source code change history and history of social interactions surrounding these changes. We apply our correlation method on two software systems, LSEdit and Apache Ant. The results of these exploratory case studies demonstrate the evidence of similarity between the content of free-form text emails among developers and the actual modifications in the code. We identify a set of correlation patterns between discussion and changed code vocabularies and discover that some releases referred to as minor should instead fall under the major category. These patterns can be used to give estimations about the type of a change and time needed to implement it.", "num_citations": "41\n", "authors": ["220"]}
{"title": "A qualitative study of mozilla\u2019s process management practices\n", "abstract": " The Mozilla Anthropology1 project was started in late 2011 to examine how various stakeholders make use of Bugzilla in practice and to gain a sense of how Bugzilla could be improved in the future to better support the Mozilla community. During this process, Martin Best interviewed 20 community members; we have split these 20 interviews into over 1,200 individual statements and performed an open card sort to try to gain insight into high-level themes about Bugzilla to identify strengths, weaknesses, and ideas for future enhancement of the platform. During this process, 4 high-level categories emerged from the data (along with 91 sub-themes). These were:", "num_citations": "24\n", "authors": ["220"]}