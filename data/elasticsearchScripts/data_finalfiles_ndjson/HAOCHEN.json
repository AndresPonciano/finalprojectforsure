{"title": "Hierarchical classification of web content\n", "abstract": " This paper explores the use of hierarchical structure for classifying a large, heterogeneous collection of web content. The hierarchical structure is initially used to train different second-level classifiers. In the hierarchical case, a model is learned to distinguish a second-level category from other categories within the same top level. In the flat non-hierarchical case, a model distinguishes a second-level category from all other second-level categories. Scoring rules can further take advantage of the hierarchy by considering only second-level categories that exceed a threshold at the top level.", "num_citations": "1236\n", "authors": ["330"]}
{"title": "AndroidLeaks: automatically detecting potential privacy leaks in android applications on a large scale\n", "abstract": " As mobile devices become more widespread and powerful, they store more sensitive data, which includes not only users\u2019 personal information but also the data collected via sensors throughout the day. When mobile applications have access to this growing amount of sensitive information, they may leak it carelessly or maliciously.               Google\u2019s Android operating system provides a permissions-based security model that restricts an application\u2019s access to the user\u2019s private data. Each application statically declares the sensitive data and functionality that it requires in a manifest, which is presented to the user upon installation. However, it is not clear to the user how sensitive data is used once the application is installed. To combat this problem, we present AndroidLeaks, a static analysis framework for automatically finding potential leaks of sensitive information in Android applications on a massive scale\u00a0\u2026", "num_citations": "783\n", "authors": ["330"]}
{"title": "Magnet: a two-pronged defense against adversarial examples\n", "abstract": " Deep learning has shown impressive performance on hard perceptual problems. However, researchers found deep learning systems to be vulnerable to small, specially crafted perturbations that are imperceptible to humans. Such perturbations cause deep learning systems to mis-classify adversarial examples, with potentially disastrous consequences where safety or security is crucial. Prior defenses against adversarial examples either targeted specific attacks or were shown to be ineffective.", "num_citations": "778\n", "authors": ["330"]}
{"title": "Bringing order to the web: Automatically categorizing search results\n", "abstract": " We developed a user interface that organizes Web search results into hierarchical categories. Text classification algorithms were used to automatically classify arbitrary search results into an existing category structure on-the-fly. A user study compared our new category interface with the typical ranked list interface of search results. The study showed that the category interface is superior both in objective and subjective measures. Subjects liked the category interface much better than the list interface, and they were 50% faster at finding information that was organized into categories. Organizing search results allows users to focus on items in categories of interest rather than having to browse through all the results sequentially.", "num_citations": "713\n", "authors": ["330"]}
{"title": "MOPS: an infrastructure for examining security properties of software\n", "abstract": " We describe a formal approach for finding bugs in security-relevant software and verifying their absence. The idea is as follows: we identify rules of safe programming practice, encode them as safety properties, and verify whether these properties are obeyed. Because manual verification is too expensive, we have built a program analysis tool to automate this process. Our program analysis models the program to be verified as a pushdown automaton, represents the security property as a finite state automaton, and uses model checking techniques to identify whether any state violating the desired security goal is reachable in the program. The major advantages of this approach are that it is sound in verifying the absence of certain classes of vulnerabilities, that it is fully interprocedural, and that it is efficient and scalable. Experience suggests that this approach will be useful in finding a wide range of security\u00a0\u2026", "num_citations": "628\n", "authors": ["330"]}
{"title": "Fireman: A toolkit for firewall modeling and analysis\n", "abstract": " Security concerns are becoming increasingly critical in networked systems. Firewalls provide important defense for network security. However, misconfigurations in firewalls are very common and significantly weaken the desired security. This paper introduces FIREMAN, a static analysis toolkit for firewall modeling and analysis. By treating firewall configurations as specialized programs, FIREMAN applies static analysis techniques to check misconfigurations, such as policy violations, inconsistencies, and inefficiencies, in individual firewalls as well as among distributed firewalls. FIREMAN performs symbolic model checking of the firewall configurations for all possible IP packets and along all possible data paths. It is both sound and complete because of the finite state nature of firewall configurations. FIREMAN is implemented by modeling firewall rules using binary decision diagrams (BDDs), which have been used\u00a0\u2026", "num_citations": "596\n", "authors": ["330"]}
{"title": "TouchLogger: Inferring Keystrokes on Touch Screen from Smartphone Motion.\n", "abstract": " Attacks that use side channels, such as sound and electromagnetic emanation, to infer keystrokes on physical keyboards are ineffective on smartphones without physical keyboards. We describe a new side channel, motion, on touch screen smartphones with only soft keyboards. Since typing on different locations on the screen causes different vibrations, motion data can be used to infer the keys being typed. To demonstrate this attack, we developed TouchLogger, an Android application that extracts features from device orientation data to infer keystrokes. TouchLogger correctly inferred more than 70% of the keys typed on a number-only soft keyboard on a smartphone. We hope to raise the awareness of motion as a significant side channel that may leak confidential data.", "num_citations": "489\n", "authors": ["330"]}
{"title": "Optimizing search by showing results in context\n", "abstract": " We developed and evaluated seven interfaces for integrating semantic category information with Web search results. List interfaces were based on the familiar ranked-listing of search results, sometimes augmented with a category name for each result. Category interfaces also showed page titles and/or category names, but re-organized the search results so that items in the same category were grouped together visually. Our user studies show that all Category interfaces were more effective than List interfaces even when lists were augmented with category names for each result. The best category performance was obtained when both category names and individual page titles were presented. Either alone is better than a list presentation, but both together provide the most effective means for allowing users to quickly examining search results. These results provide a better understanding of the perceptual and\u00a0\u2026", "num_citations": "370\n", "authors": ["330"]}
{"title": "Attack of the clones: Detecting cloned applications on android markets\n", "abstract": " We present DNADroid, a tool that detects Android application copying, or \u201ccloning\u201d, by robustly computing the similarity between two applications. DNADroid achieves this by comparing program dependency graphs between methods in candidate applications. Using DNADroid, we found at least 141 applications that have been the victims of cloning, some as many as seven times. DNADroid has a very low false positive rate \u2014 we manually confirmed that all the applications detected are indeed clones by either visual or behavioral similarity. We present several case studies that give insight into why applications are cloned, including localization and redirecting ad revenue. We describe a case of malware being added to an application and show how DNADroid was able to detect two variants of the same malware. Lastly, we offer examples of an open source cracking tool being used in the wild.", "num_citations": "367\n", "authors": ["330"]}
{"title": "Angora: Efficient fuzzing by principled search\n", "abstract": " Fuzzing is a popular technique for finding software bugs. However, the performance of the state-of-the-art fuzzers leaves a lot to be desired. Fuzzers based on symbolic execution produce quality inputs but run slow, while fuzzers based on random mutation run fast but have difficulty producing quality inputs. We propose Angora, a new mutation-based fuzzer that outperforms the state-of-the-art fuzzers by a wide margin. The main goal of Angora is to increase branch coverage by solving path constraints without symbolic execution. To solve path constraints efficiently, we introduce several key techniques: scalable byte-level taint tracking, context-sensitive branch count, search based on gradient descent, and input length exploration. On the LAVA-M data set, Angora found almost all the injected bugs, found more bugs than any other fuzzer that we compared with, and found eight times as many bugs as the second-best\u00a0\u2026", "num_citations": "275\n", "authors": ["330"]}
{"title": "Investigating user privacy in android ad libraries\n", "abstract": " Recent years have witnessed incredible growth in the popularity and prevalence of smart phones. A flourishing mobile application market has evolved to provide users with additional functionality such as interacting with social networks, games, and more. Mobile applications may have a direct purchasing cost or be free but ad-supported. Unlike in-browser ads, the privacy implications of ads in Android applications has not been thoroughly explored. We start by comparing the similarities and differences of in-browser ads and in-app ads. We examine the effect on user privacy of thirteen popular Android ad providers by reviewing their use of permissions. Worryingly, several ad libraries checked for permissions beyond the required and optional ones listed in their documentation, including dangerous permissions like", "num_citations": "259\n", "authors": ["330"]}
{"title": "Model Checking One Million Lines of C Code.\n", "abstract": " Implementation bugs in security-critical software are pervasive. Several authors have previously suggested model checking as a promising means to detect improper use of system interfaces and thereby detect a broad class of security vulnerabilities. In this paper, we report on our practical experience using MOPS, a tool for software model checking security-critical applications. As examples of security vulnerabilities that can be analyzed using model checking, we pick five important classes of vulnerabilities and show how to codify them as temporal safety properties, and then we describe the results of checking them on several significant Unix applications using MOPS. After analyzing over one million lines of code, we found more than a dozen new security weaknesses in important, widely-deployed applications. This demonstrates for the first time that model checking is practical and useful for detecting security weaknesses at large scale in real, legacy systems.", "num_citations": "232\n", "authors": ["330"]}
{"title": "Noncespaces: Using Randomization to Enforce Information Flow Tracking and Thwart Cross-Site Scripting Attacks.\n", "abstract": " Cross-site scripting (XSS) vulnerabilities are among the most common and serious web application vulnerabilities. Eliminating XSS is challenging because it is difficult for web applications to sanitize all user inputs appropriately. We present Noncespaces, a technique that enables web clients to distinguish between trusted and untrusted content to prevent exploitation of XSS vulnerabilities. Using Noncespaces, a web application randomizes the XML namespace prefixes of tags in each document before delivering it to the client. As long as the attacker is unable to predict the randomized prefixes, the client can distinguish between trusted content created by the web application and untrusted content provided by an attacker. To implement Noncespaces with minimal changes to web applications, we leverage a popular web application architecture to automatically apply Noncespaces to static content processed through a popular PHP template engine. We show that with simple policies Noncespaces thwarts popular XSS attack vectors.", "num_citations": "186\n", "authors": ["330"]}
{"title": "Andarwin: Scalable detection of semantically similar android applications\n", "abstract": " The popularity and utility of smartphones rely on their vibrant application markets; however, plagiarism threatens the long-term health of these markets. We present a scalable approach to detecting similar Android apps based on their semantic information. We implement our approach in a tool called AnDarwin and evaluate it on 265,359 apps collected from 17 markets including Google Play and numerous thirdparty markets. In contrast to earlier approaches, AnDarwin has four advantages: it avoids comparing apps pairwise, thus greatly improving its scalability; it analyzes only the app code and does not rely on other information - such as the app\u2019s market, signature, or description - thus greatly increasing its reliability; it can detect both full and partial app similarity; and it can automatically detect library code and remove it from the similarity analysis. We present two use cases for AnDarwin: finding similar apps\u00a0\u2026", "num_citations": "171\n", "authors": ["330"]}
{"title": "Exploiting MMS vulnerabilities to stealthily exhaust mobile phone's battery\n", "abstract": " As cellular data services and applications are being widely deployed, they become attractive targets for attackers, who could exploit unique vulnerabilities in cellular networks, mobile devices, and the interaction between cellular data networks and the Internet. In this paper, we demonstrate such an attack, which surreptitiously drains mobile devices' battery power up to 22 times faster and therefore could render these devices useless before the end of business hours. This attack targets a unique resource bottleneck in mobile devices (the battery power) by exploiting an insecure cellular data service (MMS) and the insecure interaction between cellular data networks and the Internet (PDP context retention and the paging channel). The attack proceeds in two stages. In the first stage, the attacker compiles a hit list of mobile devices - including their cellular numbers, IP addresses, and model information - by exploiting\u00a0\u2026", "num_citations": "167\n", "authors": ["330"]}
{"title": "Madfraud: Investigating ad fraud in android applications\n", "abstract": " Many Android applications are distributed for free but are supported by advertisements. Ad libraries embedded in the app fetch content from the ad provider and display it on the app's user interface. The ad provider pays the developer for the ads displayed to the user and ads clicked by the user. A major threat to this ecosystem is ad fraud, where a miscreant's code fetches ads without displaying them to the user or\" clicks\" on ads automatically. Ad fraud has been extensively studied in the context of web advertising but has gone largely unstudied in the context of mobile advertising.", "num_citations": "164\n", "authors": ["330"]}
{"title": "Setuid Demystified.\n", "abstract": " Access control in Unix systems is mainly based on user IDs, yet the system calls that modify user IDs (uid-setting system calls), such as setuid, are poorly designed, insufficiently documented, and widely misunderstood and misused. This has caused many security vulnerabilities in application programs. We propose to make progress on the setuid mystery through two approaches. First, we study kernel sources and compare the semantics of the uid-setting system calls in three major Unix systems: Linux, Solaris, and FreeBSD. Second, we develop a formal model of user IDs as a Finite State Automaton (FSA) and develop new techniques for automatic construction of such models. We use the resulting FSA to uncover pitfalls in the Unix API of the uid-setting system calls, to identify differences in the semantics of these calls among various Unix systems, to detect inconsistency in the handling of user IDs within an OS kernel, and to check the proper usage of these calls in programs automatically. Finally, we provide general guidelines on the proper usage of the uid-setting system calls, and we propose a high-level API that is more comprehensible, usable, and portable than the usual Unix API.", "num_citations": "158\n", "authors": ["330"]}
{"title": "Measuring privacy risk in online social networks\n", "abstract": " Measuring privacy risk in online social networks is a challenging task. One of the fundamental difficulties is quantifying the amount of information revealed unintentionally. We present PrivAware, a tool to detect and report unintended information loss in online social networks. Our goal is to provide a rudimentary framework to identify privacy risk and provide solutions to reduce information loss. The first instance of the software is focused on information loss attributed to social circles. In subsequent releases we intend to incorporate additional capabilities to capture ancillary threat models. From our initial results, we quantify the privacy risk attributed to friend relationships in Facebook. We show that for each user in our study a majority of their personal attributes can be derived from social contacts. Moreover, we present results denoting the number of friends contributing to a correctly inferred attribute. We also provide\u00a0\u2026", "num_citations": "148\n", "authors": ["330"]}
{"title": "I-arm-droid: A rewriting framework for in-app reference monitors for android applications\n", "abstract": " Mobile applications are a major force behind the explosive growth of mobile devices. While they greatly extend the functionality of mobile devices, they also raise security and privacy concerns, especially when they have not gone through a rigorous review process. To protect users from untrusted and potentially malicious applications, we design and implement a rewriting framework for embedding In-App Reference Monitors (I-ARM) into Android applications. The framework user identifies a set of security-sensitive API methods and specifies their security policies, which may be tailored to each application. Then, our framework automatically rewrites the Dalvik bytecode of the application, where it interposes on all the invocations of these API methods to implement the desired security policies. We have implemented a prototype of the rewriting framework and evaluated it on compatibility, functionality, and performance in time and size overhead. We showcase example security policies that this rewriting framework supports.", "num_citations": "147\n", "authors": ["330"]}
{"title": "Spam double-funnel: connecting web spammers with advertisers\n", "abstract": " Spammers use questionable search engine optimization (SEO) techniques to promote their spam links into top search results. In this paper, we focus on one prevalent type of spam-redirection spam-where one can identify spam pages by the third-party domains that these pages redirect traffic to. We propose a five-layer, double-funnel model for describing end-to-end redirection spam, present a methodology for analyzing the layers, and identify prominent domains on each layer using two sets of commercial keywords. one targeting spammers and the other targeting advertisers. The methodology and findings are useful for search engines to strengthen their ranking algorithms against spam, for legitimate website owners to locate and remove spam doorway pages, and for legitimate advertisers to identify unscrupulous syndicators who serve ads on spam pages.", "num_citations": "130\n", "authors": ["330"]}
{"title": "On the practicality of motion based keystroke inference attack\n", "abstract": " Recent researches have shown that motion sensors may be used as a side channel to infer keystrokes on the touchscreen of smartphones. However, the practicality of this attack is unclear. For example, does this attack work on different devices, screen dimensions, keyboard layouts, or keyboard types? Does this attack depend on specific users or is it user independent? To answer these questions, we conducted a user study where 21 participants typed a total of 47,814 keystrokes on four different mobile devices in six settings. Our results show that this attack remains effective even though the accuracy is affected by user habits, device dimension, screen orientation, and keyboard layout. On a number-only keyboard, after the attacker tries 81 4-digit PINs, the probability that she has guessed the correct PIN is 65%, which improves the accuracy rate of random guessing by 81 times. Our study also indicates that\u00a0\u2026", "num_citations": "129\n", "authors": ["330"]}
{"title": "Adrob: Examining the landscape and impact of android application plagiarism\n", "abstract": " Malicious activities involving Android applications are rising rapidly. As prior work on cyber-crimes suggests, we need to understand the economic incentives of the criminals to design the most effective defenses. In this paper, we investigate application plagiarism on Android markets at a large scale. We take the first step to characterize plagiarized applications and estimate their impact on the original application developers. We first crawled 265,359 free applications from 17 Android markets around the world and ran a tool to identify similar applications (\" clones\"). Based on the data, we examined properties of the cloned applications, including their distribution across different markets, application categories, and ad libraries. Next, we examined how cloned applications affect the original developers. We captured HTTP advertising traffic generated by mobile applications at a tier-1 US cellular carrier for 12 days. To\u00a0\u2026", "num_citations": "124\n", "authors": ["330"]}
{"title": "RetroSkeleton: retrofitting android apps\n", "abstract": " An obvious asset of the Android platform is the tremendous number and variety of available apps. There is a less obvious, but potentially even more important, benefit to the fact that nearly all apps are developed using a common platform. We can leverage the relatively uniform nature of Android apps to allow users to tweak applications for improved security, usability, and functionality with relative ease (compared to desktop applications). We design and implement an Android app rewriting framework for customizing behavior of existing applications without requiring source code or app-specific guidance. Following app-agnostic transformation policies, our system rewrites applications to insert, remove, or modify behavior. The rewritten application can run on any unmodified Android device, without requiring rooting or other custom software. This paper describes RetroSkeleton, our app rewriting framework, including\u00a0\u2026", "num_citations": "120\n", "authors": ["330"]}
{"title": "Software fault isolation with API integrity and multi-principal modules\n", "abstract": " The security of many applications relies on the kernel being secure, but history suggests that kernel vulnerabilities are routinely discovered and exploited. In particular, exploitable vulnerabilities in kernel modules are common. This paper proposes LXFI, a system which isolates kernel modules from the core kernel so that vulnerabilities in kernel modules cannot lead to a privilege escalation attack. To safely give kernel modules access to complex kernel APIs, LXFI introduces the notion of API integrity, which captures the set of contracts assumed by an interface. To partition the privileges within a shared module, LXFI introduces module principals. Programmers specify principals and API integrity rules through capabilities and annotations. Using a compiler plugin, LXFI instruments the generated code to grant, check, and transfer capabilities between modules, according to the programmer's annotations. An evaluation\u00a0\u2026", "num_citations": "116\n", "authors": ["330"]}
{"title": "A Quantitative Study of Forum Spamming Using Context-based Analysis.\n", "abstract": " Forum spamming has become a major means of search engine spamming. To evaluate the impact of forum spamming on search quality, we have conducted a comprehensive study from three perspectives: that of the search user, the spammer, and the forum hosting site. We examine spam blogs and spam comments in both legitimate and honey forums. Our study shows that forum spamming is a widespread problem. Spammed forums, powered by the most popular software, show up in the top 20 search results for all the 189 popular keywords. On two blog sites, more than half (75% and 54% respectively) of the blogs are spam, and even on a major and reputably well maintained blog site, 8.1% of the blogs are spam1. The observation on our honey forums confirms that spammers target abandoned pages and that most comment spam is meant to increase page rank rather than generate immediate traffic. We propose contextbased analyses, consisting of redirection and cloaking analysis, to detect spam automatically and to overcome shortcomings of content-based analyses. Our study shows that these analyses are very effective in identifying spam pages.", "num_citations": "114\n", "authors": ["330"]}
{"title": "Defending against sensor-sniffing attacks on mobile phones\n", "abstract": " Modern mobile phones possess three types of capabilities: computing, communication, and sensing. While these capabilities enable a variety of novel applications, they also raise serious privacy concerns. We explore the vulnerability where attackers snoop on users by sniffing on their mobile phone sensors, such as the microphone, camera, and GPS receiver. We show that current mobile phone platforms inadequately protect their users from this threat. To provide better privacy for mobile phone users, we analyze desirable uses of these sensors and discuss the properties of good privacy protection solutions. Then, we propose a general framework for such solutions and discuss various possible approaches to implement the framework's components.", "num_citations": "109\n", "authors": ["330"]}
{"title": "Back to the future: A framework for automatic malware removal and system repair\n", "abstract": " Malware, software with malicious intent, has emerged as a widely-spread threat to system security. It is difficult to detect malware reliably because new and polymorphic malware programs appear frequently. It is also difficult to remove malware and repair its damage to the system because it can extensively modify a system. We propose a novel framework for automatically removing malware from and repairing its damage to a system. The primary goal of our framework is to preserve system integrity. Our framework monitors and logs untrusted programs' operations. Using the logs, it can completely remove malware programs and their effects on the system. Our framework does not require signatures or other prior knowledge of malware behavior. We implemented this framework on Windows and evaluated it with seven spyware, trojan horses, and email worms. Comparing our tool with two popular commercial anti\u00a0\u2026", "num_citations": "93\n", "authors": ["330"]}
{"title": "Multi-party off-the-record messaging\n", "abstract": " Most cryptographic algorithms provide a means for secret and authentic communication. However, under many circumstances, the ability to repudiate messages or deny a conversation is no less important than secrecy and authenticity. For whistleblowers, informants, political dissidents and journalists---to name a few---it is most important to have means for deniable conversation, where electronic communication must mimic face-to-face private meetings. Off-the-Record Messaging, proposed in 2004 by Borisov, Goldberg and Brewer, and its subsequent improvements, simulate private two-party meetings. Despite some attempts, the multi-party scenario remains unresolved.", "num_citations": "92\n", "authors": ["330"]}
{"title": "Model checking an entire linux distribution for security violations\n", "abstract": " Software model checking has become a popular tool for verifying programs' behavior. Recent results suggest that it is viable for finding and eradicating security bugs quickly. However, even state-of-the-art model checkers are limited in use when they report an overwhelming number of false positives, or when their lengthy running time dwarfs other software development processes. In this paper we report our experiences with software model checking for security properties on an extremely large scale - an entire Linux distribution consisting of 839 packages and 60 million lines of code. To date, we have discovered 108 exploitable bugs. Our results indicate that model checking can be both a feasible and integral part of the software development process", "num_citations": "91\n", "authors": ["330"]}
{"title": "Noncespaces: Using randomization to defeat cross-site scripting attacks\n", "abstract": " Cross-site scripting (XSS) vulnerabilities are among the most common and serious web application vulnerabilities. It is challenging to eliminate XSS vulnerabilities because it is difficult for web applications to sanitize all user input appropriately. We present Noncespaces, a technique that enables web clients to distinguish between trusted and untrusted content to prevent exploitation of XSS vulnerabilities. Using Noncespaces, a web application randomizes the the (X)HTML tags and attributes in each document before delivering it to the client. As long as the attacker is unable to guess the random mapping, the client can distinguish between trusted content created by the web application and untrusted content provided by an attacker. To implement Noncespaces with minimal changes to web applications, we leverage a popular web application architecture to automatically apply Noncespaces to static content\u00a0\u2026", "num_citations": "85\n", "authors": ["330"]}
{"title": "Omash: enabling secure web mashups via object abstractions\n", "abstract": " The current security model used by web browsers, the Same Origin Policy (SOP), does not support secure cross-domain communication desired by web mashup developers. The developers have to choose between no trust, where no communication is allowed, and full trust, where third-party content runs with the full privilege of the integrator. Furthermore, the SOP has its own set of security vulnerabilities and pitfalls, including Cross-Site Request Forgery, DNS rebinding and dynamic pharming. To overcome the unfortunate tradeoff between security and functionality forced upon today's mashup developers, we propose OMash, a simple abstraction that treats web pages as objects and allows objects to communicate only via their declared public interfaces. Since OMash does not rely on the SOP for controlling DOM access or cross-domain data exchange, it does not suffer from the SOP's vulnerabilities. We show that\u00a0\u2026", "num_citations": "85\n", "authors": ["330"]}
{"title": "Scalable semantics-based detection of similar android applications\n", "abstract": " The popularity and utility of smartphones rely on their vibrant application markets; however, plagiarism threatens the long-term health of these markets. In this paper, we present a scalable approach to detecting similar Android apps based on semantic information. We implement our approach in a tool called AnDarwin and evaluate it on 265,359 apps collected from 17 markets including Google Play and numerous third-party markets. In contrast with earlier approaches, An-Darwin does not compare apps pairwise, thus greatly increasing its scalability. Additionally, AnDarwin does not rely on information other than the app code\u2014such as the app\u2019s market, signature, or description\u2014thus greatly increasing its reliability. AnDarwin can automatically detect library code and remove it from the similarity analysis. We present two use cases for AnDarwin: finding similar apps by different developers (\u201cclones\u201d) and similar apps from the same developer (\u201crebranded\u201d). In ten hours, AnDarwin detected at least 4,295 apps which have been the victims of cloning and 36,106 apps that are rebranded. By analyzing the clusters found by AnDarwin, we found 88 new variants of malware and identified 169 malicious apps based on differences in the requested permissions. In contrast to earlier approaches, AnDarwin can detect both full and partial app similarity. Additionally, AnDarwin can automatically detect similar code that is injected into many apps, which may indicate the spread of malware. Our evaluation demonstrates AnDarwin\u2019s ability to accurately detect similar apps on a large scale.", "num_citations": "76\n", "authors": ["330"]}
{"title": "Good Neighbor: Ad hoc Pairing of Nearby Wireless Devices by Multiple Antennas.\n", "abstract": " The proliferation of personal wireless devices requires secure connection between them. While it is easy to securely pair electronic devices by wires, it is very challenging to pair them wirelessly when they have no prior association. We propose Good Neighbor, a novel scheme that securely pairs nearby wireless devices by exploiting multiple antennas built in them. Our scheme requires neither shared secrets nor out-of-band channels (eg, audio, visual, keyboard, etc.) between the pairing devices. It only requires that the receiver has multiple antennas and that the sender can be placed nearby the receiver. Our scheme is based on the propagation characteristic of the wireless signal that the power of the received signal is inversely proportional to some exponent of the distance between the sender and receiver. When a nearby sender moves very close to one antenna on the receiver, the receiver can observe a large difference between the signal strength measured on its two antennas, whereas a faraway sender would be unable to induce such a large difference. We validate our scheme through theoretical analysis and experimental measurements. We discuss the factors that may affect our scheme\u2014including antenna gain, received signal strength (RSS) saturation, dynamic rate adaptation, and multipath effects\u2014and how to mitigate them. Finally, we demonstrate the practicality of our scheme by implementing and evaluating a prototype.", "num_citations": "69\n", "authors": ["330"]}
{"title": "Noise injection for search privacy protection\n", "abstract": " To protect user privacy in the search engine context, most current approaches, such as private information retrieval and privacy preserving data mining, require a server-side deployment, thus users have little control over their data and privacy. In this paper we propose a user-side solution within the context of keyword based search. We model the search privacy threat as an information inference problem and show how to inject noise into user queries to minimize privacy breaches. The search privacy breach is measured as the mutual information between real user queries and the diluted queries seen by search engines. We give the lower bound for the amount of noise queries required by a perfect privacy protection and provide the optimal protection given the number of noise queries. We verify our results with a special case where the number of noise queries is equal to the number of user queries. The simulation\u00a0\u2026", "num_citations": "62\n", "authors": ["330"]}
{"title": "A general framework for benchmarking firewall optimization techniques\n", "abstract": " Firewalls are among the most pervasive network security mechanisms, deployed extensively from the borders of networks to end systems. The complexity of modern firewall policies has raised the computational requirements for firewall implementations, potentially limiting the throughput of networks. Administrators currently rely on ad hoc solutions to firewall optimization. To address this problem, a few automatic firewall optimization techniques have been proposed, but there has been no general approach to evaluate the optimality of these techniques. In this paper we present a general framework for rule-based firewall optimization. We give a precise formulation of firewall optimization as an integer programming problem and show that our framework produces optimal reordered rule sets that are semantically equivalent to the original rule set. Our framework considers the complex interactions among the rules in\u00a0\u2026", "num_citations": "60\n", "authors": ["330"]}
{"title": "Andarwin: Scalable detection of android application clones based on semantics\n", "abstract": " Smartphones rely on their vibrant application markets; however, plagiarism threatens the long-term health of these markets. We present a scalable approach to detecting similar Android apps based on their semantic information. We implement our approach in a tool called AnDarwin and evaluate it on 265,359 apps collected from 17 markets including Google Play and numerous third-party markets. In contrast to earlier approaches, AnDarwin has four advantages: it avoids comparing apps pairwise, thus greatly improving its scalability; it analyzes only the app code and does not rely on other information-such as the app's market, signature, or description-thus greatly increasing its reliability; it can detect both full and partial app similarity; and it can automatically detect library code and remove it from the similarity analysis. We present two use cases for AnDarwin: finding similar apps by different developers (\u201cclones\u00a0\u2026", "num_citations": "57\n", "authors": ["330"]}
{"title": "iPhish: Phishing Vulnerabilities on Consumer Electronics.\n", "abstract": " As consumer electronic devices with embedded browsers become popular, financial institutions and online merchants set up websites to accommodate visitors using these devices. These devices range from cell phones to gaming consoles, cars, and even refrigerators. Porting a traditional desktop1 browser to a mobile device is more involved than resizing the display. To adapt to the hardware limitations inherent in mobile devices, mobile browsers often remove or replace certain features commonly found in traditional browsers. Unfortunately, some of these features are critical for depending against phishing attacks. We studied browsers on three mobile devices and discovered vulnerabilities in their input, chrome, and URL display. We conducted a user study to confirm our findings on the iPhone Safari browser, one of the most popular mobile browser platforms. For each potential vulnerability, we were able to construct a phishing scenario to successfully fool users into giving away the credentials for a role-played Bank of America account. To mitigate the vulnerabilities, we propose to designate and display URLs in a more phishing-resistant way, and to create an anti-phishing proxy that is independent of mobile devices or browsers.", "num_citations": "51\n", "authors": ["330"]}
{"title": "DBTaint: Cross-Application Information Flow Tracking via Databases.\n", "abstract": " Information flow tracking has been an effective approach for identifying malicious input and detecting software vulnerabilities. However, most current schemes can only track data within a single application. This singleapplication approach means that the program must consider data from other programs as either all tainted or all untainted, inevitably causing false positives or false negatives. These schemes are insufficient for most Web services because these services include multiple applications, such as a Web application and a database application. Although system-wide information flow tracking is available, these approaches are expensive and overkill for tracking data between Web applications and databases because they fail to take advantage of database semantics.We have designed DBTaint, which provides information flow tracking in databases to enable crossapplication information flow tracking. In DBTaint, we extend database datatypes to maintain and propagate taint bits on each value. We integrate Web application and database taint tracking engines by modifying the database interface, providing cross-application information flow tracking transparently to the Web application. We present two prototype implementations for Perl and Java Web services, and evaluate their effectiveness on two real-world Web applications, an enterprise-grade application written in Perl and a robust forum application written in Java. By taking advantage of the semantics of database operations, DBTaint has low overhead: our unoptimized prototype incurs less than 10-15% overhead in our benchmarks.", "num_citations": "50\n", "authors": ["330"]}
{"title": "Privacy-preserving alibi systems\n", "abstract": " An alibi provides evidence of a person's past location and can be critical in proving ones innocence. An alibi involves two parties: the owner, who benefits from the alibi, and the corroborator, who testifies for the owner. As mobile devices become ubiquitous, they can determine where we are and what we are doing, and help us to establish evidence of our location as they accompany us on our daily activities. Existing location-based services like Google Latitude can already track and record our every move, but these systems require us to reveal our identity when recording our location. This leaves our privacy at risk, and requires a trusted third party to maintain our location information.", "num_citations": "44\n", "authors": ["330"]}
{"title": "Secure file system services for web 2.0 applications\n", "abstract": " We present a design for a file system that provides a secure file storage service for Web 2.0 applications. Currently, each Web application stores its own user data. This not only burdens the applications with storing, managing, and securing user data but also deprives users from controlling their own data. With recent proposals of secure client-side cross-domain communication mechanisms, we can provide an independent file system service to Web applications. This service returns the control over user data back to the users, where users can share or restrict access to their files as they wish, and relieves web application servers from the contractual or regulatory obligation of safeguarding user data.", "num_citations": "44\n", "authors": ["330"]}
{"title": "Emu: An e-mail preprocessor for text-to-speech\n", "abstract": " E-mail reading is one of the most important commercial applications of text-to-speech synthesis (TTS). Yet e-mail is one of the most difficult types of text to deal with, since it is both highly structured -frequently containing elements such as tables, signatures, \"artwork\" and quotations from previous messages; and at the same time often lacks any reliable unambiguous indicators for such structure. This paper describes Emu, an e-mail mark-up and rendering program that preprocesses e-mail for TTS. We discuss algorithms for detecting regions of interest in the input text; for \"normalizing\" the input; and for actually rendering the input through the Bell Labs TTS system.", "num_citations": "38\n", "authors": ["330"]}
{"title": "Detecting third-party libraries in Android applications with high precision and recall\n", "abstract": " Third-party libraries are widely used in Android applications to ease development and enhance functionalities. However, the incorporated libraries also bring new security & privacy issues to the host application, and blur the accounting between application code and library code. Under this situation, a precise and reliable library detector is highly desirable. In fact, library code may be customized by developers during integration and dead library code may be eliminated by code obfuscators during application build process. However, existing research on library detection has not gracefully handled these problems, thus facing severe limitations in practice. In this paper, we propose LibPecker, an obfuscation-resilient, highly precise and reliable library detector for Android applications. LibPecker adopts signature matching to give a similarity score between a given library and an application. By fully utilizing the internal\u00a0\u2026", "num_citations": "35\n", "authors": ["330"]}
{"title": "Matryoshka: fuzzing deeply nested branches\n", "abstract": " Greybox fuzzing has made impressive progress in recent years, evolving from heuristics-based random mutation to approaches for solving individual branch constraints. However, they have difficulty solving path constraints that involve deeply nested conditional statements, which are common in image and video decoders, network packet analyzers, and checksum tools. We propose an approach for addressing this problem. First, we identify all the control flow-dependent conditional statements of the target conditional statement. Next, we select the taint flow-dependent conditional statements. Finally, we use three strategies to find an input that satisfies all conditional statements simultaneously. We implemented this approach in a tool called Matryoshka and compared its effectiveness on 13 open source programs against other state-of-the-art fuzzers. Matryoshka has significantly higher cumulative line and branch\u00a0\u2026", "num_citations": "34\n", "authors": ["330"]}
{"title": "Capauth: a capability-based handover scheme\n", "abstract": " Existing handover schemes in wireless LANs, 3G/4G networks, and femtocells rely upon protocols involving centralized authentication servers and one or more access points. These protocols are invariably complex and use extensive signaling on the wireless backhaul since they aim to be be efficient (minimal handover latency) without sacrificing robustness. However, the mobile user has little involvement especially with the so-called  context transfer  stage; this stage involves the transfer of necessary state to the new access point as well as the enforcement of security goals such as user authentication and single point of access. We propose the incorporation of user  capabilities , network-asserted proofs of user identity and access control, as a general mechanism to simplify the context transfer stage. To this end, we have designed  CapAuth , a capability-based scheme that has reduced complexity, low overhead\u00a0\u2026", "num_citations": "33\n", "authors": ["330"]}
{"title": "Evaluation of decision forests on text categorization\n", "abstract": " Text categorization is useful for indexing documents for information retrieval, filtering parts for document understanding, and summarizing contents of documents of special interests. We describe a text categorization task and an experiment using documents from the Reuters and OHSUMED collections. We applied the Decision Forest classifier and compared its accuracies to those of C4.5 and kNN classifiers using both category dependent and category independent term selection schemes. It is found that Decision Forest outperforms both C4.5 and kNN in all cases, and that category dependent term selection yields better accuracies. Performances of al three classifiers degrade from the Reuters collection to the OHSUMED collection, but Decision Forest remains to be superior.", "num_citations": "33\n", "authors": ["330"]}
{"title": "Gesture authentication with touch input for mobile devices\n", "abstract": " The convergence of our increasing reliance on mobile devices to access online services and the increasing number of online services bring to light usability and security problems in password entry. We propose using gestures with taps to the screen as an alternative to passwords. We test the recall and forgery of gesture authentication and show, using dynamic time warping, that even simple gestures are repeatable by their creators yet hard to forge by attackers when taps are added.", "num_citations": "30\n", "authors": ["330"]}
{"title": "Fooling Detection Alone is Not Enough: First Adversarial Attack against Multiple Object Tracking\n", "abstract": " Recent work in adversarial machine learning started to focus on the visual perception in autonomous driving and studied Adversarial Examples (AEs) for object detection models. However, in such visual perception pipeline the detected objects must also be tracked, in a process called Multiple Object Tracking (MOT), to build the moving trajectories of surrounding obstacles. Since MOT is designed to be robust against errors in object detection, it poses a general challenge to existing attack techniques that blindly target objection detection: we find that a success rate of over 98% is needed for them to actually affect the tracking results, a requirement that no existing attack technique can satisfy. In this paper, we are the first to study adversarial machine learning attacks against the complete visual perception pipeline in autonomous driving, and discover a novel attack technique, tracker hijacking, that can effectively fool MOT using AEs on object detection. Using our technique, successful AEs on as few as one single frame can move an existing object in to or out of the headway of an autonomous vehicle to cause potential safety hazards. We perform evaluation using the Berkeley Deep Drive dataset and find that on average when 3 frames are attacked, our attack can have a nearly 100% success rate while attacks that blindly target object detection only have up to 25%.", "num_citations": "29\n", "authors": ["330"]}
{"title": "revdroid: Code analysis of the side effects after dynamic permission revocation of android apps\n", "abstract": " Dynamic revocation of permissions of installed Android applications has been gaining popularity, because of the increasing concern of security and privacy in the Android platform. However, applications often crash or misbehave when their permissions are revoked, rendering applications completely unusable. Even though Google has officially introduced the new permission mechanism in Android 6.0 to explicitly support dynamic permission revocation, the issue still exists. In this paper, we conduct an empirical study to understand the latest application practice post Android 6.0. Specifically, we design a practical tool, referred to as revDroid, to help us to empirically analyze how often the undesirable side effects, especially application crash, can occur in off-the-shelf Android applications. From the analysis of 248 popular applications from Google Play Store, revDroid finds out that 70% applications and 46\u00a0\u2026", "num_citations": "27\n", "authors": ["330"]}
{"title": "Integrating geometrical and linguistic analysis for email signature block parsing\n", "abstract": " The signature block is a common structured component found in email messages. Accurate identification and analysis of signature blocks is important in many multimedia messaging and information retrieval applications such as email text-to-speech rendering, automatic construction of personal address databases, and interactive message retrieval. It is also a very challenging task, because signature blocks often appear in complex two-dimensional layouts which are guided only by loose conventions. Traditional text analysis methods designed to deal with sequential text cannot handle two-dimensional structures, while the highly unconstrained nature of signature blocks makes the application of two-dimensional grammars very difficult. In this article, we describe an algorithm for signature  block analysis which combines two-dimensional structural segmentation with one-dimensional grammatical constraints. The\u00a0\u2026", "num_citations": "27\n", "authors": ["330"]}
{"title": "E-mail signature block analysis\n", "abstract": " A technique analyzing loosely constrained text blocks, such as e-mail signature blocks by performing a two-dimensional geometrical analysis and a one-dimensional language analysis in order to classify sub-blocks at the loosely constrained text block into particular functional classes. The present technique may also be utilized to identify a personal name from a user name in a loosely constrained text block, such as an e-mail signature block.", "num_citations": "26\n", "authors": ["330"]}
{"title": "Quantifying the effects of removing permissions from android applications\n", "abstract": " With the growing popularity of Android smart phones, it is increasingly important to ensure the security of sensitive user information. A recent study found that approximately 26% of Android applications in Google Play can access personal data, such as contacts and email, and 42 percent, GPS location data [6]. While Android is known for giving the user control, it falls short when it comes to enabling and disabling the permissions on applications. Currently, the user is given the option to either give the application every permission it desires or not install it. While researchers have proposed approaches for allowing users to modify the permissions granted to applications, it is unclear how removing permissions would affect the behavior of current applications. At present, developers expect all requested permissions to be granted.In this paper, we take the first step to quantify the impact of enabling users to statically remove permissions on Android applications post-installation. We developed Pyandrazzi, a system for evaluating the effect of removing individual permissions from applications. Using Pyandrazzi, we evaluated how removing seven common permissions affect a set of randomly selected applications that request them. We found that approximately 5.8% of the 700 applications we tested crash after a permission is removed and investigated how", "num_citations": "24\n", "authors": ["330"]}
{"title": "Exploiting Opportunistic Scheduling in Cellular Data Networks.\n", "abstract": " Third Generation (3G) cellular networks utilize timevarying and location-dependent channel conditions to provide broadband services. They employ opportunistic scheduling to efficiently utilize spectrum under fairness or QoS constraints. Opportunistic scheduling algorithms rely on collaboration among all mobile users to achieve their design objectives. However, we demonstrate that rogue cellular devices can exploit vulnerabilities in opportunistic scheduling algorithms, such as Proprotional Fair (PF), to usurp the majority of time slots in 3G networks. Our simulations show that only five rogue device per 50-user cell can use up to 90% of the time slots, and can cause 2 seconds of end-to-end inter-packet transmission delay on VoIP applications for every user in the same cell, rendering VoIP applications useless. To defend against these attacks, we explore several detection and prevention schemes, including modifications to the PF scheduler and a secure handoff procedure.", "num_citations": "23\n", "authors": ["330"]}
{"title": "Opaak: using mobile phones to limit anonymous identities online\n", "abstract": " Trust and anonymity are both desirable properties on the Internet. However, online services and users often have to make the trade off between trust and anonymity due to the lack of usable frameworks for achieving them both. We propose Opaak, a practical anonymous authentication framework. Opaak enables its users to establish identities with different online services while ensuring that these identities cannot be linked with each other or their real identity. In addition, Opaak allows online service providers to control the rate at which users utilize their services while preserving their anonymity. Hence, allowing the service providers to prevent abuse in the form of spam or Sybil attacks, which are prevalent in such online services that offer anonymity. Opaak leverages the mobile phone as a scarce resource combined with anonymous credentials in order to provide these features. We target two kinds of applications\u00a0\u2026", "num_citations": "22\n", "authors": ["330"]}
{"title": "Piecewise linear modulation model of handwriting\n", "abstract": " A new piecewise linear modulation model of handwriting is proposed. In this model, the velocity of handwriting trajectory is modeled as the impulse response of a time varying second order system. For mathematical tractability, the entire trajectory is segmented into several non-overlapping frames, while the natural frequency and the damping factor of the system are assumed to vary linearly with time in each frame and are continuous along the entire trajectory. In other words, handwriting is regarded as an oscillation modulated by a continuous and piecewise linear signal. The parameters of this model are estimated by Powell's optimization algorithm which does not require the computation of the first order derivative. The number and lengths of the frames are decided by a modified binary search algorithm along with the estimation of parameters. This model has achieved very high data compression rate as well as\u00a0\u2026", "num_citations": "21\n", "authors": ["330"]}
{"title": "Falsified data attack on backpressure-based traffic signal control algorithms\n", "abstract": " In urban transportation, scheduling algorithms in traffic signal control (TSC) are important for achieving high throughput and low latency traffic flow, lowering accidents, and reducing emissions. As new scheduling algorithms are being developed particularly to leverage and accommodate connected and autonomous vehicles, there is increased potential for cyber-attacks on TSC that can undermine the benefits of new algorithms. Attackers can learn the behavior of scheduling algorithms and launch attacks to get scheduling priority and/or to create traffic panic and congestion. These attacks can compromise the system and significantly increase traffic delay and make TSC completely ineffective. In this paper, we compare the performance of different backpressure-based scheduling algorithms when they are under attack. We consider four different backpressure-based schemes, namely, delay-based, queue-based, sum\u00a0\u2026", "num_citations": "20\n", "authors": ["330"]}
{"title": "E-mail signature block segmentation\n", "abstract": " A technique for segmenting a loosely constrained text block, such as an e-mail signature block into sub-blocks by performing line segment extraction and connected component analysis on the foreground characters and background characters and recursively repeating connected component analysis on both the foreground and background characters and line segment extraction on the background characters until a text output includes no mixed reading blocks. A technique for correcting over segmentation errors in a line of text from a loosely constrained text block which has undergone geometrical analysis.", "num_citations": "17\n", "authors": ["330"]}
{"title": "Feature omission vulnerabilities: Thwarting signature generation for polymorphic worms\n", "abstract": " To combat the rapid infection rate of today's Internet worms, signatures for novel worms must be generated soon after an outbreak. This is especially critical in the case of polymorphic worms, whose binary representation changes frequently during the infection process. In this paper, we examine the assumptions underlying two leading network-based signature generation systems for polymorphic worms: polygraph [14] and Hamsa [12]. By identifying an assumption of both systems not met by all vulnerabilities, we discover a class of vulnerabilities (feature omission vulnerabilities) that neither system can accurately characterize. We demonstrate the limitations of polygraph and Hamsa by testing the signatures that they generate for exploits targeting a feature omission vulnerability. We discuss why feature omission vulnerabilities are difficult to characterize and how increased semantic awareness can help the signature\u00a0\u2026", "num_citations": "16\n", "authors": ["330"]}
{"title": "Backpropagating linearly improves transferability of adversarial examples\n", "abstract": " The vulnerability of deep neural networks (DNNs) to adversarial examples has drawn great attention from the community. In this paper, we study the transferability of such examples, which lays the foundation of many black-box attacks on DNNs. We revisit a not so new but definitely noteworthy hypothesis of Goodfellow et al.'s and disclose that the transferability can be enhanced by improving the linearity of DNNs in an appropriate manner. We introduce linear backpropagation (LinBP), a method that performs backpropagation in a more linear fashion using off-the-shelf attacks that exploit gradients. More specifically, it calculates forward as normal but backpropagates loss as if some nonlinear activations are not encountered in the forward pass. Experimental results demonstrate that this simple yet effective method obviously outperforms current state-of-the-arts in crafting transferable adversarial examples on CIFAR-10 and ImageNet, leading to more effective attacks on a variety of DNNs.", "num_citations": "15\n", "authors": ["330"]}
{"title": "Rethinking permission enforcement mechanism on mobile systems\n", "abstract": " To protect sensitive resources from unauthorized use, modern mobile systems, such as Android and iOS, design a permission-based access control model. However, current model could not enforce fine-grained control over the dynamic permission use contexts, causing two severe security problems. First, any code package in an application could use the granted permissions, inducing attackers to embed malicious payloads into benign apps. Second, the permissions granted to a benign application may be utilized by an attacker through vulnerable application interactions. Although ad hoc solutions have been proposed, none could systematically solve these two issues within a unified framework. This paper presents the first such framework to provide context-sensitive permission enforcement that regulates permission use policies according to system-wide application contexts, which cover both intra-application\u00a0\u2026", "num_citations": "15\n", "authors": ["330"]}
{"title": "Using build-integrated static checking to preserve correctness invariants\n", "abstract": " A key missing link in the creation of secure and robust systems is finding a ost effective way to demonstrate and preserve correspondence between a software design and its implementation. This paper explores the use of software model checking techniques to validate selected design invariants in the EROS operating system kernel. Several global consistency policies in the EROS kernel can be expressed as finite state automata. Using the MOPS static hecker, we have been able to validate the EROS kernel implementation against these automata. In the process, we have confirmed the practical utility of the basic verification technique, identified a number of desirable enhancements in MOPS, and located bugs in the EROS implementation.", "num_citations": "15\n", "authors": ["330"]}
{"title": "Finedroid: Enforcing permissions with system-wide application execution context\n", "abstract": " To protect sensitive resources from unauthorized use, modern mobile systems, such as Android and iOS, design a permission-based access control model. However, current model could not enforce fine-grained control over the dynamic permission use contexts, causing two severe security problems. First, any code package in an application could use the granted permissions, inducing attackers to embed malicious payloads into benign apps. Second, the permissions granted to a benign application may be utilized by an attacker through vulnerable application interactions. Although ad hoc solutions have been proposed, none could systematically solve these two issues within a unified framework.               This paper presents the first such framework to provide context-sensitive permission enforcement that regulates permission use policies according to system-wide application contexts, which cover both\u00a0\u2026", "num_citations": "14\n", "authors": ["330"]}
{"title": "Mitigating DoS Attacks on the Paging Channel by Efficient Encoding in Page Messages\n", "abstract": " Paging is an important mechanism for network bandwidth efficiency and mobile terminal battery life. It has been widely adopted by mobile networks, such as cellular networks, WiMax, and Mobile IP. Due to certain mechanisms for achieving paging efficiency and the convergence of wireless voice and data networks, the paging channel is vulnerable to inexpensive DoS attacks. To mitigate these attacks, we propose to leverage the knowledge of the user population size, the slotted nature of the paging operation, and the quick paging mechanism to reduce the length of terminal identifiers. In the case of a CDMA2000 system, we can reduce each identifier from 34 bits down to 7 bits, effectively doubling the paging channel capacity. Moreover, our scheme incurs no paging latency, missed pages, or false pages. Using a simulator and data collected from a commercial cellular network, we demonstrate that our\u00a0\u2026", "num_citations": "14\n", "authors": ["330"]}
{"title": "Practical no-box adversarial attacks against dnns\n", "abstract": " The study of adversarial vulnerabilities of deep neural networks (DNNs) has progressed rapidly. Existing attacks require either internal access (to the architecture, parameters, or training set of the victim model) or external access (to query the model). However, both the access may be infeasible or expensive in many scenarios. We investigate no-box adversarial examples, where the attacker can neither access the model information or the training set nor query the model. Instead, the attacker can only gather a small number of examples from the same problem domain as that of the victim model. Such a stronger threat model greatly expands the applicability of adversarial attacks. We propose three mechanisms for training with a very small dataset (on the order of tens of examples) and find that prototypical reconstruction is the most effective. Our experiments show that adversarial examples crafted on prototypical auto-encoding models transfer well to a variety of image classification and face verification models. On a commercial celebrity recognition system held by clarifai.com, our approach significantly diminishes the average prediction accuracy of the system to only 15.40%, which is on par with the attack that transfers adversarial examples from a pre-trained Arcface model.", "num_citations": "13\n", "authors": ["330"]}
{"title": "Less is more: Culling the training set to improve robustness of deep neural networks\n", "abstract": " Deep neural networks are vulnerable to adversarial examples. Prior defenses attempted to make deep networks more robust by either changing the network architecture or augmenting the training set with adversarial examples, but both have inherent limitations. Motivated by recent research that shows outliers in the training set have a high negative influence on the trained model, we studied the relationship between model robustness and the quality of the training set. We first show that outliers give the model better generalization ability but weaker robustness. Next, we propose an adversarial example detection framework, in which we design two methods for removing outliers from training set to obtain the sanitized model and then detect adversarial example by calculating the difference of outputs between the original and the sanitized model. We evaluated the framework on both MNIST and SVHN. Based\u00a0\u2026", "num_citations": "12\n", "authors": ["330"]}
{"title": "Appcracker: Widespread vulnerabilities in user and session authentication in mobile apps\n", "abstract": " A fundamental security principle in developing networked applications is end-to-end security, where the confidentiality and integrity of the data transmitted over the network do not rely on the security of the network. In response to the ever increasing traffic from mobile apps, WiFi networks are spreading fast and widely. Since WiFi networks are unregulated, a passive attacker may eavesdrop on the traffic on open WiFi networks, while an active attacker may set up his own WiFi network to modify its traffic at will. In theory, end-to-end security should protect mobile apps from both these attacks; in practice, however, the situation is far less rosy.We examine how the popular, important mobile apps on Chinese Android markets defend themselves against untrusted networks. We select top apps from major categories, such as online shopping, banking, social networks, travel services, and apps from companies with huge market capitalization. We analyze both their code and their network traffic to identify vulnerabilities. We design a mini-language for describing the vulnerabilities and develop a tool, AppCracker, that launches both passive and active attacks on these apps to verify their vulnerabilities. AppCracker has confirmed that 100 apps from 69 companies are vulnerable during their user or session authentication. These vulnerabilities allow an adversary to capture the victim user\u2019s login credentials or to hijack the victim\u2019s session. We describe these diverse types of vulnerabilities, many of which are caused by the misuse of cryptography in their homegrown cryptographic protocols. Finally, we discuss the lessons learned during our investigation to help\u00a0\u2026", "num_citations": "12\n", "authors": ["330"]}
{"title": "Exploiting and defending opportunistic scheduling in cellular data networks\n", "abstract": " Third Generation (3G) cellular networks take advantage of time-varying and location-dependent channel conditions of mobile users to provide broadband services. Under fairness and QoS constraints, they use opportunistic scheduling to efficiently utilize the available spectrum. Opportunistic scheduling algorithms rely on the collaboration among all mobile users to achieve their design objectives. However, we demonstrate that rogue cellular devices can exploit vulnerabilities in popular opportunistic scheduling algorithms, such as Proportional Fair (PF) and Temporal Fair (TF), to usurp the majority of time slots in 3G networks. Our simulations show that under realistic conditions, only five rogue device per 50-user cell can capture up to 95 percent of the time slots, and can cause 2-second end-to-end interpacket transmission delay on VoIP applications for every user in the same cell, rendering VoIP applications\u00a0\u2026", "num_citations": "12\n", "authors": ["330"]}
{"title": "Yet Another Intermediate-Level Attack\n", "abstract": " The transferability of adversarial examples across deep neural network (DNN) models is the crux of a spectrum of black-box attacks. In this paper, we propose a novel method to enhance the black-box transferability of baseline adversarial examples. By establishing a linear mapping of the intermediate-level discrepancies (between a set of adversarial inputs and their benign counterparts) for predicting the evoked adversarial loss, we aim to take full advantage of the optimization procedure of mulch-step baseline attacks. We conducted extensive experiments to verify the effectiveness of our method on CIFAR-100 and ImageNet. Experimental results demonstrate that it outperforms previous state-of-the-arts considerably. Our code is at                  https://github.com/qizhangli/ila-plus-plus                                .", "num_citations": "10\n", "authors": ["330"]}
{"title": "Exploring static checking for software assurance\n", "abstract": " A key missing link in the creation of practically secure systems is finding a cost effective way to demonstrate and preserve correspondence between a software design and its implementation. This paper explores the use of software model checking techniques to validate selected design invariants in the EROS operating system kernel. Several global consistency policies in the EROS kernel can be expressed as finite state automata. Using the MOPS static checker, we have been able to validate the EROS kernel implementation against these automata. In the process, we have confirmed the practical utility of the basic verification technique, identified a number of desirable enhancements in MOPS, and located a small number of bugs in the EROS implementation. Current commodity assurance processes have no objectively verifiable benefit, while the formal verification needed for high assurance evaluation is expensive and requires specialized expertise. To date, no effective middle ground solution has emerged. Our work with EROS and MOPS suggests that domain specific application of software model checking is a practical and powerful technique for software assurance and maintenance.", "num_citations": "10\n", "authors": ["330"]}
{"title": "A first look at Firefox OS security\n", "abstract": " With Firefox OS, Mozilla is making a serious push for an HTML5-based mobile platform. In order to assuage security concerns over providing hardware access to web applications, Mozilla has introduced a number of mechanisms that make the security landscape of Firefox OS distinct from both the desktop web and other mobile operating systems. From an application security perspective, the two most significant of these mechanisms are the the introduction of a default Content Security Policy and code review in the market. This paper describes how lightweight static analysis can augment these mechanisms to find vulnerabilities which have otherwise been missed. We provide examples of privileged applications in the market that contain vulnerabilities that can be automatically detected. In addition to these findings, we show some of the challenges that occur when desktop software is repurposed for a mobile operating system. In particular, we argue that the caching of certificate overrides across applications--a known problem in Firefox OS--generates a counter-intuitive user experience that detracts from the security of the system.", "num_citations": "9\n", "authors": ["330"]}
{"title": "Distributed authentication for low-cost wireless networks\n", "abstract": " Cost is one of the key challenges facing the deployment of wireless networks. Though 802.11-based networks have shown that costly, licensed spectrum is not always necessary, the costs of other components especially backhaul and network equipment continue to impede the growth of mobile wireless networks. In this paper, we provide some insights into how such costs can be reduced by designing a novel, low-cost authentication infrastructure for wireless networks. Our authentication scheme relies on base stations to collectively store authentication information. Thus, it eliminates the need to maintain costly infrastructure required by the traditional centralized scheme. Moreover, our scheme is optimized for mobility-induced handover\" re-authentication\" and, hence, reduces the authentication overhead.", "num_citations": "9\n", "authors": ["330"]}
{"title": "WebCallerID: Leveraging cellular networks for Web authentication\n", "abstract": " Web authentication that is both secure and usable remains a challenge. Passwords are vulnerable to phishing attacks, while physical tokens face deployment obstacles. We propose to leverage the authentication infrastructure of cellular networks to enhance Web authentication. We design WebCallerID, a Web authentication scheme that uses cell phones as physical tokens and uses cellular networks as trusted identity providers. Since WebCallerID requires no user participation during authentication, it prevents security mistakes by users. WebCallerID also prevents rogue websites from replaying authentication assertions or stealing users' identities. We have implemented a prototype of WebCallerID using the OpenID framework. The prototype shows that WebCallerID seamlessly integrates into OpenID-capable Web authentication while avoiding phishing problems in OpenID and simplifying user participation.", "num_citations": "8\n", "authors": ["330"]}
{"title": "Evaluating private modes in desktop and mobile browsers and their resistance to fingerprinting\n", "abstract": " Modern browsers implement private mode to protect user privacy. However, they do not agree on what protection private mode should provide. We performed the first study on comparing private modes in popular desktop and mobile browsers and found many inconsistencies between different browsers and between the desktop and mobile versions of the same browser. We show that some inconsistencies result from the tradeoff between security and privacy. However, even if private mode leaks no information about the user, the attacker could still track the user by fingerprinting the browser. Recent work suggested that a browser could report randomized configurations, such as font sizes and installed plugins, to defeat fingerprinting. To show that randomizing configuration reports is insecure, we propose an attack that estimates the true configuration based on statistical methods. We demonstrated that this attack was\u00a0\u2026", "num_citations": "7\n", "authors": ["330"]}
{"title": "Underground economy of android application plagiarism\n", "abstract": " As Android became the most popular mobile operating system, malicious activities targeting Android and its applications are rising rapidly. While technical approaches may mitigate the attacks with varying effectiveness, understanding the economic incentives of the criminals may shed light on the most effective defense. In this talk, I will focus on application plagiarism on Android markets. First, I will describe the unique characteristics of android applications, the fundamental differences between plagiarism of Android applications and that of non-mobile software, and the relationship between plagiarism and mobile advertising. Next, I will illustrate the challenges in measuring the scale, severity, and impact of Android application plagiarism. To achieve this, we need not only detect plagiarism among the large number of applications on different Android markets but also measure their usage and impact on advertising\u00a0\u2026", "num_citations": "7\n", "authors": ["330"]}
{"title": "E-mail signature block analysis\n", "abstract": " The signature block is a common structured component found in e-mail messages. Accurate identification and analysis of signature blocks are important in many multimedia messaging and information retrieval applications such as e-mail text-to-speech rendering. Traditional text analysis methods designed to deal with sequential text cannot handle 2D structures, while the highly unconstrained nature of signature blocks makes the application of 2D grammars very difficult. In this paper we describe an algorithm for signature block analysis which combines 2D structural segmentation with 1D grammatical constraints. The information obtained from both geometrical and linguistic analysis are integrated in a form of weighted finite state transducers, and the final solution is the optimal interpretation under both constraints.", "num_citations": "6\n", "authors": ["330"]}
{"title": "OldBlue: Causal Broadcast In A Mutually Suspicious Environment (Working Draft)\n", "abstract": " Many protocols have been proposed to provide reliability and consistency guarantees for group-oriented communication in distributed systems. However, existing systems tolerate only benign failures or a limited number of Byzantine failures. This limitation is problematic for systems consisting of mutually suspicious Internet peers not controlled by a centralized authority.We propose OldBlue, a broadcast protocol for distributed systems that: ensures causal delivery ordering over all messages, guarantees that any two correct processes will have consistent views of the full causal history of any message delivered to both processes, remains secure in the presence of an arbitrary number of Byzantine failures, and allows connected correct processes to make progress during periods of network partition. To our knowledge, OldBlue is the first protocol which provides these guarantees in such a strong threat model. We provide proofs that OldBlue meets its formal requirements and present simulation results indicating an upper-bound on its expected performance in practice.", "num_citations": "5\n", "authors": ["330"]}
{"title": "Explore the Transformation Space for Adversarial Images\n", "abstract": " Deep learning models are vulnerable to adversarial examples. Most of current adversarial attacks add pixel-wise perturbations restricted to some-norm, and defense models are evaluated also on adversarial examples restricted inside-norm balls. However, we wish to explore adversarial examples exist beyond-norm balls and their implications for attacks and defenses. In this paper, we focus on adversarial images generated by transformations. We start with color transformation and propose two gradient-based attacks. Since-norm is inappropriate for measuring image quality in the transformation space, we use the similarity between transformations and the Structural Similarity Index. Next, we explore a larger transformation space consisting of combinations of color and affine transformations. We evaluate our transformation attacks on three data sets---CIFAR10, SVHN, and ImageNet---and their corresponding\u00a0\u2026", "num_citations": "3\n", "authors": ["330"]}
{"title": "sendroid: Auditing sensor access in android system-wide\n", "abstract": " Sensors are widely used in modern mobile devices (e.g., smartphones, watches) and may gather abundant information from environments as well as about users, e.g., photos, sounds and locations. The rich set of sensor data enables various applications (e.g., health monitoring) and personalized apps as well. However, the powerful sensing abilities provide opportunities for attackers to steal both personal sensitive data and commercial secrets like never before. Unfortunately, the current design of smart devices only provides a coarse access control on sensors and does not have the capability to audit sensing. We argue that knowing how often the sensors are accessed and how much sensor data are collected is the first-line defense against sensor data breach. Such an ability is yet to be designed. In this paper, we propose a framework that allows users to acquire sensor data usages. In particular, we leverage a\u00a0\u2026", "num_citations": "3\n", "authors": ["330"]}
{"title": "Appshield: Enabling multi-entity access control cross platforms for mobile app management\n", "abstract": " Bring-your-own-device (BYOD) is getting popular. Diverse personal devices are used to access enterprise resources, and deployment of the solutions with customized operating system (OS) dependency will thus be restricted. Moreover, device utilization for both business and personal purposes creates new threats involving leakage of sensitive data. As for functionalities, a BYOD solution should isolate an arbitrary number of entities, such as those relating to business and personal uses and provide fine-grained access control on multi-entity management. Existing BYOD solutions lack in these aspects; we propose a system, called AppShield, which supports multi-entity management and role-based access control with file-level granularity, apart from local data sharing/isolation. AppShield includes (1) application rewriting framework for Android apps, which builds Mobile Application Management (MAM\u00a0\u2026", "num_citations": "3\n", "authors": ["330"]}
{"title": "Predictive Eviction: A Novel Policy for Optimizing TLS Session Cache Performance\n", "abstract": " Transport Layer Security (TLS) is the most commonly used security protocol to encrypt web traffic. TLS connections are computationally expensive to set up, so the TLS protocol supports session resumption, where previously negotiated connection parameters can be used to short- circuit the TLS handshake. The server assigns new sessions a session identifier (ID) and caches each session by its ID so it can be retrieved later. As clients come and go, sessions in the server's cache will have to be evicted according to the server's eviction policy. We find that first-in-first-out (FIFO) and least-recently- used (LRU) are the most common session cache eviction policies among popular TLS libraries, however, for applications whose clients connect at regular intervals, such as mobile advertising, the performance of these policies may be far worse than randomly evicting policies from the cache. To handle this, we propose a\u00a0\u2026", "num_citations": "3\n", "authors": ["330"]}
{"title": "Cellular authentication for authentication to a service\n", "abstract": " An identification system comprises a communication interface. The communication interface is configured to receive from a mobile device a registration request to initiate an access session between the mobile device and a communication network, wherein the registration request comprises a device identifier that identifies the mobile device. In response to the registration request, the communication interface is configured to transfer a packet address to the mobile device, wherein the mobile device transfers a service request for a service on the communication network during the access session, wherein the service request includes the packet address. The communication interface is configured to receive an identification request transferred from an authentication system in response to the service request, wherein the identification request indicates the packet address. In response to the identification request, the\u00a0\u2026", "num_citations": "3\n", "authors": ["330"]}
{"title": "Classified displays of web search results.\n", "abstract": " Most text retrieval systems return a ranked list of results in response to a user's search request. Such lists can be long and overwhelming. Furthermore, results on different topics or different aspects of the same topic are intermixed in the list requiring users to sift through a long undifferentiated list to find items of interest. We have been exploring the use of automatic text classification techniques combined with novel interface ideas to allow users to quickly focus in on results of interest. Our approach combines the advantages of human knowledge in an initial classification stage with the broad coverage available with text retrieval systems. In a series of user studies we developed and evaluated several interfaces for structuring search results in order to better understand the cognitive processes that lead to effective analysis of search results. There are two key aspects to our work that we describe in more detail: 1\u00a0\u2026", "num_citations": "3\n", "authors": ["330"]}
{"title": "Informer: irregular traffic detection for containerized microservices RPC in the real world\n", "abstract": " Containerized microservices have been widely deployed in industry. Meanwhile, security issues also arise. Many security enhancement mechanisms for containerized microservices require predefined rules and policies. However, it is challenging when it comes to thousands of microservices and a massive amount of real-time unstructured data. Hence, automatic policy generation becomes indispensable. In this paper, we focus on the automatic solution for the security problem: irregular traffic detection for RPCs.", "num_citations": "2\n", "authors": ["330"]}
{"title": "On the origin of mobile apps: Network provenance for android applications\n", "abstract": " Many mobile services consist of two components: a server providing an API, and an application running on smartphones and communicating with the API. An unresolved problem in this design is that it is difficult for the server to authenticate which app is accessing the API. This causes many security problems. For example, the provider of a private network API has to embed secrets in its official app to ensure that only this app can access the API; however, attackers can uncover the secret by reverse-engineering. As another example, malicious apps may send automatic requests to ad servers to commit ad fraud.", "num_citations": "2\n", "authors": ["330"]}
{"title": "Rewriting an Android app using retroskeleton\n", "abstract": " This video demonstrates one potential application of RetroSkeleton, which is a system for specifying and applying transformations to Android apps via bytecode rewriting. These transformation policies are app-agnostic and can be applied to Android apps without any manual guidance. In this video, we show how RetroSkeleton can be used to automatically add custom fine-grained network access controls into an existing app, giving users more control over their apps. We also show the use of the RetroSkeleton web interface, available at http://retroskeleton. com.", "num_citations": "2\n", "authors": ["330"]}
{"title": "MOPS User\u2019s Manual\n", "abstract": " MOPS is a tool for finding security bugs or verifying their absence in C programs. MOPS checks for bugs that violate temporal safety properties, which require that the program must or must not perform certain operations in specific orders. For example, a setuid-root process on Unix systems should not execute an untrusted program (eg, by making the system call execv () with untrusted parameters supplied by the user) before dropping the root privilege in its effective user ID (eg, by calling seteuid (getuid ())); otherwise, a malicious user may let the process execute a program of her choice and then gain the root privilege through the program. In another example of prudent coding practice, the call strncpy (dst, src, n) in a C program should be followed immediately by the statement dst [n]=\u2019\\0\u2019; otherwise, the array dst may not be null-terminated, which makes it vulnerable to buffer overrun attacks. These examples\u00a0\u2026", "num_citations": "2\n", "authors": ["330"]}
{"title": "Proteome analysis of Sinorhizobium meliloti\n", "abstract": " With the completion of the Sinorhizobium meliloti strain 1021 (Galibert et al. 2001) and Mesorhizobium loti genomes (Kaneko et al. 2000) and with the knowledge of the NGR234 pSym (Freiberg et al. 1997) and Bradyrhizobium symbiosis regions (Gottfert et al. 2001), we have now entered the post-genome era for the analysis of these microsymbionts. The assembly of the strain 1021 genome has enabled the Sinorhizobium research community to be in the most advantageous position yet to understand the complexities of this model organism. Until recently, there was a frequent implication that knowledge of genome sequences alone would be sufficient to understand biological systems. It is now well recognized that the genome provides a huge resource that will assist understanding gene function. However, in isolation, the genome sequence is unable to predict the following:(i) if and when mRNA species are translated;(ii) the relative concentrations of the proteins in vivo;(iii) the extent and types of post-translational modifications of proteins;(iv) the cellular or sub-cellular locations of proteins;(v) the unexpected pleiotropic effects of mutation or overexpression upon protein levels;(vi) the occurrence of small ORFs that are often overlooked by sequence annotation programs; and (vii) whether start sites for ORFs have been assigned correctly in all cases.Nevertheless, armed with the genome sequence, there will be an increasing emphasis to use this extensive resource to undertake a functional genomic analysis of S. meliloti. There remain gaps in our knowledge, for example, in how the microsymbiont (a) escapes the full attention of the host defence\u00a0\u2026", "num_citations": "2\n", "authors": ["330"]}
{"title": "Automatically detecting and fixing concurrency bugs in go software systems\n", "abstract": " Go is a statically typed programming language designed for efficient and reliable concurrent programming. For this purpose, Go provides lightweight goroutines and recommends passing messages using channels as a less error-prone means of thread communication. Go has become increasingly popular in recent years and has been adopted to build many important infrastructure software systems. However, a recent empirical study shows that concurrency bugs, especially those due to misuse of channels, exist widely in Go. These bugs severely hurt the reliability of Go concurrent systems. To fight Go concurrency bugs caused by misuse of channels, this paper proposes a static concurrency bug detection system, GCatch, and an automated concurrency bug fixing system, GFix. After disentangling an input Go program, GCatch models the complex channel operations in Go using a novel constraint system and\u00a0\u2026", "num_citations": "1\n", "authors": ["330"]}
{"title": "Distributed wireless device association with basestations\n", "abstract": " An embodiment of the invention is directed to associating a wireless device with a basestation. A connection request is received from the wireless device. The wireless device is authenticated to the basestation. A token-transfer-request message is received. The wireless device is associated with the basestation by transferring a token associated with the wireless device to the basestation.", "num_citations": "1\n", "authors": ["330"]}