{"title": "Data-Driven Context-Sensitivity for Points-to Analysis\n", "abstract": " We present a new data-driven approach to achieve highly cost-effective context-sensitive points-to analysis for Java. While context-sensitivity has greater impact on the analysis precision and performance than any other precision-improving techniques, it is difficult to accurately identify the methods that would benefit the most from context-sensitivity and decide how much context-sensitivity should be used for them. Manually designing such rules is a nontrivial and laborious task that often delivers suboptimal results in practice. To overcome these challenges, we propose an automated and data-driven approach that learns to effectively apply context-sensitivity from codebases. In our approach, points-to analysis is equipped with a parameterized and heuristic rules, in disjunctive form of properties on program elements, that decide when and how much to apply context-sensitivity. We present a greedy algorithm that\u00a0\u2026", "num_citations": "40\n", "authors": ["2275"]}
{"title": "End-to-End Prediction of Buffer Overruns from Raw Source Code via Neural Memory Networks\n", "abstract": " Detecting buffer overruns from a source code is one of the most common and yet challenging tasks in program analysis. Current approaches have mainly relied on rigid rules and handcrafted features devised by a few experts, limiting themselves in terms of flexible applicability and robustness due to diverse bug patterns and characteristics existing in sophisticated real-world software programs. In this paper, we propose a novel, data-driven approach that is completely end-to-end without requiring any hand-crafted features, thus free from any program language-specific structural limitations. In particular, our approach leverages a recently proposed neural network model called memory networks that have shown the state-of-the-art performances mainly in question-answering tasks. Our experimental results using source codes demonstrate that our proposed model is capable of accurately detecting simple buffer overruns. We also present in-depth analyses on how a memory network can learn to understand the semantics in programming languages solely from raw source codes, such as tracing variables of interest, identifying numerical values, and performing their quantitative comparisons.", "num_citations": "28\n", "authors": ["2275"]}
{"title": "Precise and scalable points-to analysis via data-driven context tunneling\n", "abstract": " We present context tunneling, a new approach for making k-limited context-sensitive points-to analysis precise and scalable. As context-sensitivity holds the key to the development of precise and scalable points-to analysis, a variety of techniques for context-sensitivity have been proposed. However, existing approaches such as k-call-site-sensitivity or k-object-sensitivity have a significant weakness that they unconditionally update the context of a method at every call-site, allowing important context elements to be overwritten by more recent, but not necessarily more important, context elements. In this paper, we show that this is a key limiting factor of existing context-sensitive analyses, and demonstrate that remarkable increase in both precision and scalability can be gained by maintaining important context elements only. Our approach, called context tunneling, updates contexts selectively and decides when to\u00a0\u2026", "num_citations": "20\n", "authors": ["2275"]}
{"title": "Learning a Strategy for Choosing Widening Thresholds from a Large CodeBase\n", "abstract": " In numerical static analysis, the technique of widening thresholds is essential for improving the analysis precision, but blind uses of the technique often significantly slow down the analysis. Ideally, an analysis should apply the technique only when it benefits, by carefully choosing thresholds that contribute to the final precision. However, finding the proper widening thresholds is nontrivial and existing syntactic heuristics often produce suboptimal results. In this paper, we present a method that automatically learns a good strategy for choosing widening thresholds from a given codebase. A notable feature of our method is that a good strategy can be learned with analyzing each program in the codebase only once, which allows to use a large codebase as training data. We evaluated our technique with a static analyzer for full C and 100 open-source benchmarks. The experimental results show that the learned\u00a0\u2026", "num_citations": "14\n", "authors": ["2275"]}
{"title": "FBDtoVerilog: a vendor-independent translation from FBDs into Verilog programs\n", "abstract": " FBD (Function Block Diagram) is one of the widely used PLC (Programmable Logic Controller) programming languages in plant automation industry. Many vendors and products have their own forms and formats, which are not compatible with others. Formal verification techniques and tools for FBDs should have provided vendor-and product-specific versions. PLCopen, a vendor/product independent worldwide association, provides a standardized way to define FBDs in an XML format. This paper proposes a CASE tool, FBDtoVerilog, which translates the PLCopen-FBDs into Verilog programs. Verilog is an input programming language for formal verification tools such as VIS (Verification with Interaction and Synthesis). It had been efficiently used as an input front-end of formal verifications, when developing software controllers of nuclear power plants in Korea. We demonstrate its usefulness and effectiveness with a prototype version of FBDs which had developed for APR-1400 nuclear power reactor in Korea.", "num_citations": "13\n", "authors": ["2275"]}
{"title": "Generating various contexts from permissions for testing Android applications\n", "abstract": " Generating various contexts from permissions for testing Android applications Page 1 Generating various contexts from permissions for testing Android applications Kwangsik Song, Ah-Rim Han, Sehun Jeong, Sungdeok Cha Presented by Ah-Rim Han Korea University, South Korea 2015. 7. 6 Page 2 Contents \u2022 Introduction \u2022 Overview \u2022 Testing Android applications in various contexts \u2022 Evaluation \u2022 Conclusion and future Work 2 Page 3 Testing for mobile applications \u2022 Mobile application is context-aware application \u2013 Can provide rich, context-aware contents to users \u2013 Designed to be aware of the computing context in which it runs and adapt and react according to its findings \u2013 Should be testable in any environment and in any contextual inputs 3 * http://www.peakvision.org \u2192 Example of context-aware application: Peak Vision* - Medical images can be captured using a clip-on camera adapter - Images can be sent to \u2026", "num_citations": "8\n", "authors": ["2275"]}
{"title": "VIS analyzer: A visual assistant for VIS verification and analysis\n", "abstract": " Formal verification plays an important role in demonstrating the quality of safety-critical systems such as nuclear power plants. We have used the VIS verification system to determine behavioral equivalence between two successive revisions in developing the KNICS RPS (Reactor Protection System) in Korea. The VIS accepts a high-level programming language Verilog as input, and its verification results contain valuable information about one reason of the failure. However the VIS offers no graphical interface, and partially displays relevant information necessary to understand the full verification scenario accurately. Many nuclear engineers and verification experts found the information insufficient, and it makes hard to the wide use of the VIS verification system in industry. This paper proposes the VIS Analyzer, a visual assistant for VIS verification and analysis, which can help nuclear engineers take full benefits of\u00a0\u2026", "num_citations": "7\n", "authors": ["2275"]}
{"title": "A machine-learning algorithm with disjunctive model for data-driven program analysis\n", "abstract": " We present a new machine-learning algorithm with disjunctive model for data-driven program analysis. One major challenge in static program analysis is a substantial amount of manual effort required for tuning the analysis performance. Recently, data-driven program analysis has emerged to address this challenge by automatically adjusting the analysis based on data through a learning algorithm. Although this new approach has proven promising for various program analysis tasks, its effectiveness has been limited due to simple-minded learning models and algorithms that are unable to capture sophisticated, in particular disjunctive, program properties. To overcome this shortcoming, this article presents a new disjunctive model for data-driven program analysis as well as a learning algorithm to find the model parameters. Our model uses Boolean formulas over atomic features and therefore is able to express\u00a0\u2026", "num_citations": "6\n", "authors": ["2275"]}
{"title": "Testing of safety-critical software embedded in an artificial heart\n", "abstract": " Software is being used more frequently to control medical devices such as artificial heart or robotic surgery system. While much of software safety issues in such systems are similar to other safety-critical systems (e.g., nuclear power plants), domain-specific properties may warrant development of customized techniques to demonstrate fitness of the system on patients. In this paper, we report results of a preliminary analysis done on software controlling a Hybrid Ventricular Assist Device (H-VAD) developed by Korea Artificial Organ Centre (KAOC). It is a state-of-the-art artificial heart which completed animal testing phase. We performed software testing in in-vitro experiments and animal experiments. An abnormal behaviour, never detected during extensive in-vitro analysis and animal testing, was found.", "num_citations": "4\n", "authors": ["2275"]}
{"title": "A scalable learning algorithm for data-driven program analysis\n", "abstract": " Context: Recently data-driven program analysis has emerged as a promising approach for building cost-effective static analyzers. The ideal static analyzer should apply accurate but costly techniques only when they benefit. However, designing such a strategy for real-world programs is highly nontrivial and requires labor-intensive work. The goal of data-driven program analysis is to automate this process by learning the strategy from data through a learning algorithm.Objective: Current learning algorithms for data-driven program analysis are not scalable enough to be used with large codebases. The objective of this paper is to overcome this shortcoming and present a new algorithm that is able to efficiently learn a strategy from large codebases.Method: The key idea is to use an oracle and transform the existing blackbox learning problem into a whitebox one that is much easier to solve. The oracle quantifies the\u00a0\u2026", "num_citations": "3\n", "authors": ["2275"]}
{"title": "Method for detecting detoured connection via anonymous network using changes in round trip times\n", "abstract": " Disclosed is a method for detecting a detoured connection via an anonymous network using changes in round trip times. In the method for detecting a detoured connection, a server receives a plurality of sequential requests constituting one service request; responds to the received plurality of requests; measures round trip times (RTTs) according to the requests and responses, respectively; and distinguishes whether there is a detoured connection to the service request on the basis of a difference between the measured round trip times.", "num_citations": "3\n", "authors": ["2275"]}