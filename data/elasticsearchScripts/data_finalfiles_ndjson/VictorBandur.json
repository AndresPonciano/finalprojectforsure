{"title": "Code-generating VDM for embedded devices\n", "abstract": " Current code generators for VDM target high-level programming languages and hardware platforms, and are hence not suitable for embedded platforms with limited memory and computational power. This paper presents an overview of a new component of the Overture platform, a code generator from a subset of VDM-RT to ANSI C, suitable for such embedded platforms, as well as FMI-compliant co-simulation. The subset includes object-orientation and distribution features. This component is delivered as part of the Horizon 2020 project INTO-CPS and the generated code conforms to a novel semantics of VDM-RT developed under the same project.", "num_citations": "7\n", "authors": ["1489"]}
{"title": "Microcontroller assembly synthesis from timed automaton task specifications\n", "abstract": " A method for the automatic refinement of single-task timed automaton specifications into microcontroller assembly code is proposed. The outputs of the refinement are an assembly implementation and a timed automaton describing its exact behaviour. Implementation is only possible when all specified timing behaviours can be met by the target microcontroller. Crucially, the implementation does not make the simplifying synchrony assumption, yet correctness with respect to timing is guaranteed. Currently this method copes with parallel inputs and outputs, but is restricted to timed automaton specifications with only one clock variable that is reset after each transition. Further generalization is possible. A tool illustrates the method on a simple example.", "num_citations": "7\n", "authors": ["1489"]}
{"title": "Making the Case for Centralized Automotive E/E Architectures\n", "abstract": " The rapidly increasing complexity of software in modern cars dictates new trends in electrical and/or electronic (E/E) automotive architectures. As a result, many original equipment manufacturers (OEMs) and suppliers have been advocating centralized E/E architectures as the automotive architectures of the future. In this article we make the case for centralized E/E architectures in the automotive industry. We discuss the motivation for centralized architectural schemes by carefully examining challenges and drawbacks of the traditional decentralized automotive E/E architectures, while contrasting with the corresponding benefits offered by centralization. Then, the technologies required to support new centralized architectures are discussed in detail. In particular, we present the state of the art in networking technologies, virtualization, electronic control unit (ECU) hardware and AUTOSAR, and discuss the state of\u00a0\u2026", "num_citations": "5\n", "authors": ["1489"]}
{"title": "Code generation for distributed embedded systems with VDM-RT\n", "abstract": " Developing embedded systems that are distributed is a challenging endeavour, since they need to ensure system-wide properties as well as existence of a large number of possible candidate system architectures. Various model based techniques advocate raising the abstraction level in order to support a holistic view of such a distributed embedded system. Furthermore, automatically generating implementation specific code from models can support realisation efforts including avoiding inconsistencies between model and code. In this paper we present how such efforts can be aided for a distributed embedded system modelled in the real time dialect of the Vienna Development Method, VDM-RT, by means of automatic code generation. The contributions in this paper are (1) code generation capabilities for distributed embedded system modelled in VDM-RT; (2) demonstration of its applicability for an industrial case\u00a0\u2026", "num_citations": "4\n", "authors": ["1489"]}
{"title": "Towards integration of Overture into TASTE\n", "abstract": " Both TASTE and Overture have successfully demonstrated that method integration is a very promising strategy to create robust and effective tool suites. We show how the automated generation of bidirectional translation functions between VDM and ASN. 1 type and value definitions allows the smooth integration of C-code generated from VDM models into TASTE. This enables rapid prototyping and early design validation directly in the target environment, while seamlessly interacting with other parts of the system specified in other notations supported by TASTE.", "num_citations": "4\n", "authors": ["1489"]}
{"title": "Informing assurance case review through a formal interpretation of GSN core logic\n", "abstract": " A formalization of a logical subset of Goal Structuring Notation (GSN) arguments is presented. The aim is to reveal the conditions which must be true in order to guarantee that an argument thus formalized is internally consistent. These conditions justify a number of systematic questions which must be answered in the affirmative if a standard safety argument based on natural language is to be believed to be free from inconsistencies. The relevance of these findings to the combination of GSN and controlled natural language with first-order logic semantics is discussed.", "num_citations": "4\n", "authors": ["1489"]}
{"title": "Something is Rotten in the State of Documenting Simulink Models.\n", "abstract": " In this paper we draw on our experience in the automotive industry to portray the clear need for proper documentation of Simulink models when they describe the implementations of embedded systems. We effectively discredit the \u201cmodel is documentation\u201d motto that has been hounding the model-based paradigm of software development. The state of the art of documentation of Simulink designs of embedded systems, both in academia and industrial practice, is reviewed. We posit that lack of proper documentation is costing industry dearly, and propose that a significant change in development culture is needed to properly position documentation within the software development process. Further, we discuss what is required to foster such a culture.", "num_citations": "2\n", "authors": ["1489"]}
{"title": "Hard Real-Time Microcontroller Code Generation from Timed Automaton Specifications\n", "abstract": " A method is developed for automatically synthesizing hard real-time assembly code for simple microcontrollers directly from timed automaton software specifications. The method uses the microcontrollers' individual instruction execution times to approximate as closely as possible the timing requirements indicated in the specification. In order to accommodate this approximation, certain transitions in the specification automaton require tolerances on timing constraints to be provided as part of the specification. A second automaton is produced that is a model of the behaviour of the implementation. The method is applied to the synthesis of a software metronome device for the Microchip PIC 18F452 microcontroller.", "num_citations": "2\n", "authors": ["1489"]}
{"title": "A Domain-Centralized Automotive Powertrain E/E Architecture\n", "abstract": " This paper proposes a domain-centralized powertrain E/E (electrical and/or electronic) architecture for all-electric vehicles that features: a powerful master controller (domain controller) that implements most of the functionality of the domain; a set of smart actuators for electric motor (s), HV (High Voltage) battery pack, and thermal management; and a gateway that routes all hardware signals, including digital and analog I/O, and field bus signals between the domain controller and the rest of the vehicle that is outside of the domain. Major functional safety aspects of the architecture are presented and a safety architecture is proposed. The work represents an early E/E architecture proposal. In particular, detailed partitioning of software components over the domain\u2019s Electronic Control Units (ECUs) has not been determined yet; instead, potential partitioning schemes are discussed. A thorough evaluation of the\u00a0\u2026", "num_citations": "1\n", "authors": ["1489"]}