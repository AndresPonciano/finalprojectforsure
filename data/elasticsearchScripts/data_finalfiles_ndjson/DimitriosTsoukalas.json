{"title": "Reputation assessment mechanism for carpooling applications based on clustering user travel preferences\n", "abstract": " One way to ensure sustainable and environmental friendly mobility is the use of less vehicles for carrying more passengers, and carpooling is a means to achieve this goal. One major concern in carpooling services is related to trust, as carpooling users need to either share their vehicles, if they act as drivers, or travel with strangers if they act as passengers. One way to tackle trust concerns is the utilization of user reputation assessment mechanisms, whose objective is to provide ranking of users with respect to their behavior, based on feedback provided by other users. This paper presents a newly introduced reputation assessment mechanism for carpooling applications, which, in addition to feedback provided by other users, takes into account user travel preferences. Preliminary experimental results have shown that the proposed mechanism is robust against attacks by malicious users, on their attempt to\u00a0\u2026", "num_citations": "12\n", "authors": ["1340"]}
{"title": "Methods and Tools for TD Estimation and Forecasting: A State-of-the-art Survey\n", "abstract": " Technical debt (TD), a metaphor inspired by the financial debt of economic theory, indicates quality compromises that can yield short-term benefits in the software development process, but may negatively affect the long-term quality of software products. Numerous techniques, methods, and tools have been proposed over the years for estimating and managing TD, providing a variety of options to the developers and project managers of software applications. However, apart from managing TD, predicting its future value is equally important since this knowledge is expected to facilitate decision-making tasks regarding software implementation and maintenance, such as incurring or paying off TD instances. To this end, the purpose of the present study is to (i) summarize the work that has been conducted until today in the field of TD estimation and forecasting, and (ii) to identify existing open issues that have not been\u00a0\u2026", "num_citations": "12\n", "authors": ["1340"]}
{"title": "Technical debt forecasting: an empirical study on open-source repositories\n", "abstract": " Technical debt (TD) is commonly used to indicate additional costs caused by quality compromises that can yield short-term benefits in the software development process, but may negatively affect the long-term quality of software products. Predicting the future value of TD could facilitate decision-making tasks regarding software maintenance and assist developers and project managers in taking proactive actions regarding TD repayment. However, no notable contributions exist in the field of TD forecasting, indicating that it is a scarcely investigated field. To this end, in the present paper, we empirically evaluate the ability of machine learning (ML) methods to model and predict TD evolution. More specifically, an extensive study is conducted, based on a dataset that we constructed by obtaining weekly snapshots of fifteen open source software projects over three years and using two popular static analysis tools to\u00a0\u2026", "num_citations": "10\n", "authors": ["1340"]}
{"title": "Technical debt as an indicator of software security risk: a machine learning approach for software development enterprises\n", "abstract": " Vulnerability prediction facilitates the development of secure software, as it enables the identification and mitigation of security risks early enough in the software development lifecycle. Although several factors have been studied for their ability to indicate software security risk, very limited attention has been given to technical debt (TD), despite its potential relevance to software security. To this end, in the present study, we investigate the ability of common TD indicators to indicate security risks in software products, both at project-level and at class-level of granularity. Our findings suggest that TD indicators may potentially act as security indicators as well.", "num_citations": "9\n", "authors": ["1340"]}
{"title": "Cross-project vulnerability prediction based on software metrics and deep learning\n", "abstract": " Vulnerability prediction constitutes a mechanism that enables the identification and mitigation of software vulnerabilities early enough in the development cycle, improving the security of software products, which is an important quality attribute according to ISO/IEC 25010. Although existing vulnerability prediction models have demonstrated sufficient accuracy in predicting the occurrence of vulnerabilities in the software projects with which they have been trained, they have failed to demonstrate sufficient accuracy in cross-project prediction. To this end, in the present paper we investigate whether the adoption of deep learning along with software metrics may lead to more accurate cross-project vulnerability prediction. For this purpose, several machine learning (including deep learning) models are constructed, evaluated, and compared based on a dataset of popular real-world PHP software applications\u00a0\u2026", "num_citations": "5\n", "authors": ["1340"]}
{"title": "The sdk4ed platform for embedded software quality improvement-preliminary overview\n", "abstract": " Maintaining high level of quality with respect to important quality attributes is critical for the success of modern software applications. Hence, appropriate tooling is required to help developers and project managers monitor and optimize software quality throughout the overall Software Development Lifecycle (SDLC). Moreover, embedded software engineers and developers need support to manage complex interdependencies and inherent trade-offs between design and run-time qualities. To this end, in an attempt to address these issues, we are developing the SDK4ED Platform as part of the ongoing EU-funded SDK4ED project, a software quality system that enables the monitoring and optimization of software quality, with emphasis on embedded software. The purpose of this technical paper is to provide an overview of the SDK4ED Platform and present the main novel functionalities that have been\u00a0\u2026", "num_citations": "4\n", "authors": ["1340"]}
{"title": "A clustering approach towards cross-project technical debt forecasting\n", "abstract": " Technical debt (TD) describes quality compromises that can yield short-term benefits but may negatively affect the quality of software products in the long run. A wide range of tools and techniques have been introduced over the years in order for the developers to be able to determine and manage TD. However, being able to also predict its future evolution is of equal importance to avoid its accumulation, and, in turn, the unlikely event of making the project unmaintainable. Although recent research endeavors have showcased the feasibility of building accurate project-specific TD forecasting models, there is a gap in the field regarding cross-project TD forecasting. Cross-project TD forecasting is of practical importance, since it would enable the application of pre-existing forecasting models on previously unknown software projects, especially new projects that do not exhibit sufficient commit history to enable\u00a0\u2026", "num_citations": "2\n", "authors": ["1340"]}