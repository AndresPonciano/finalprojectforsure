{"title": "A holistic approach to security attack modeling and analysis\n", "abstract": " A Holistic Approach to Security Attack Modeling and Analysis Page 1 A Holistic Approach to Security Attack Modeling and Analysis Tong Li, Elda Paja, and John Mylopoulos University of Trento 8th International i* Workshop (iStar\u201915), Ottawa, Canada August 24th, 2015 Jennifer Horkoff City University London Kristian Beckers Technische Universit\u00e4t M\u00fcnchen Page 2 Outline \uf097 Background \u25e6 Motivation \uf096 Holistic security requirements analysis \u25e6 Research outline \u25e6 Challenges \uf096 Security attack analysis \uf097 Proposal \u25e6 A holistic security attack analysis framework \uf097 Future Work \uf097 Summaries 2 24/08/15 Page 3 Motivation \uf097 Socio-Technical Systems (STSs) consist of human, software, and physical infrastructure \uf097 Holistic security analysis 24/08/15 3 AMI Network Smart Meter Energy Provider\u2019s Data Server Home Area Network Home Energy Management System Users Internet Staff Page 4 Research outline 24/08/15 4 \uf097 A \u2026", "num_citations": "9\n", "authors": ["611"]}
{"title": "Modeling design patterns with description logics: A case study\n", "abstract": " Design Patterns constitute an effective way to model design knowledge for future reuse. There has been much research on topics such as object-oriented patterns, architectural styles, requirements patterns, security patterns, and more. Typically, such patterns are specified informally in natural language, and it is up to designers to determine if a pattern is applicable to a problem-at-hand, and what solution that pattern offers. Of course, this activity does not scale well, either with respect to a growing pattern library or a growing problem. In this work, we propose to formalize such patterns in a formal modeling language, thereby automating pattern matching for a given problem. The patterns and the problem are formalized in a description logic. Our proposed framework is evaluated with a case study involving Security & Dependability patterns specified in Tropos SI*. The paper presents the formalization of all concepts\u00a0\u2026", "num_citations": "7\n", "authors": ["611"]}
{"title": "Holistic security requirements analysis: An attacker's perspective\n", "abstract": " The ever-growing complexity of systems makes their protection more challenging, as a single vulnerability or exposure of any component of the system can lead to serious security breaches. This problem is exacerbated by the fact that the system development community has not kept up with advances in attack knowledge. In this demo paper, we propose a holistic attack analysis approach to identify and tackle both atomic and multistage attacks, taking into account not only software attacks but also attacks that are targeted at people and hardware. To bridge the knowledge gap between attackers and defenders, we systematically analyze and refine the malicious desires of attackers (i.e., anti-goals), and leverage a comprehensive attack pattern repository (CAPEC) to operationalize attacker goals into concrete attack actions. Based on the results of our attack analysis, appropriate security controls can be selected to\u00a0\u2026", "num_citations": "5\n", "authors": ["611"]}
{"title": "Analyzing attack strategies through anti-goal refinement\n", "abstract": " Analyzing security from an attacker\u2019s perspective has been accepted as an effective approach for dealing with security requirements for complex systems. However, there is no systematic approach for constructing attack scenarios. As a result, the completeness of the derived attack scenarios is subject to the expertise of analysts. In this paper, we propose a systematic process for identifying attack scenarios to support security analysis, founded on anti-goal refinement. In particular, we examine three real attack scenarios in order to understand attack strategies that have been applied in reality. Based on our examination, we propose a comprehensive anti-goal refinement framework, which consists of five anti-goal refinement patterns and an analysis process for using the patterns as part of security design. Finally, we evaluate the proposed anti-goal refinement framework by applying it to a credit card theft\u00a0\u2026", "num_citations": "4\n", "authors": ["611"]}
{"title": "The Importance of Teaching Goal-Oriented Analysis Techniques: an Experience Report.\n", "abstract": " In this paper, we report on our experience in teaching i* and related goal-oriented techniques at a master-level course at the University of Trento. In our experience, we have observed that analysis is an important factor that influences learning and understanding of i*. Analysis allows students to not only evaluate the satisfaction of goals in their model, but also to better understand their models, helping to refine models until they are more meaningful and more likely to fulfill their intended purpose.", "num_citations": "4\n", "authors": ["611"]}
{"title": "The importance of teaching systematic analysis for conceptual models: an experience report\n", "abstract": " In this paper, we report on our experience in teaching conceptual modeling at a master-level course at the University of Trento. We use our experiences to argue that systematic model analysis is an important factor that influences learning and understanding of conceptual modeling techniques. In particular, we have observed this effect with the i* goal-oriented language. In previous years students were required to perform only modeling as part of their projects, while in the last year they were also required to apply systematic analysis. We observe that i* analysis not only allows students to evaluate the satisfaction of goals in their model, but also to better understand their models, helping to refine models until they are more meaningful and more likely to fulfill their intended purpose.", "num_citations": "2\n", "authors": ["611"]}
{"title": "STS: a Security Requirements Engineering methodology for socio-technical Systems\n", "abstract": " Today\u2019s software systems are situated within larger socio-technical systems, wherein they interact \u2014 by exchanging data and delegating tasks \u2014 with other technical components, humans, and organisations. The components (actors) of a socio-technical system are autonomous and loosely controllable. Therefore, when interacting, they may endanger security by, for example, disclosing confidential information, breaking the integrity of others\u2019 data, and relying on untrusted third parties, among others. The design of a secure software system cannot disregard its collocation within a socio-technical context, where security is threatened not only by technical attacks, but also by social and organisational threats. This thesis proposes a tool-supported model-driven methodology, namely STS, for conducting security requirements engineering for socio-technical systems. In STS, security requirements are specified \u2014 using the STS-ml requirements modelling language \u2014 as social contracts that constrain the social interactions and the responsibilities of the actors in the socio-technical system. A particular feature of STS-ml is that it clearly distinguishes information from its representation \u2014 in terms of documents, and separates information flow from the permissions or prohibitions actors specify to others over their interactions. This separation allows STS-ml to support a rich set of security requirements. The requirements models of STS-ml have a formal semantics which enables automated reasoning for detecting possible conflicts among security requirements as well as conflicts between security requirements and actors\u2019 business policies \u2014 how they intend to\u00a0\u2026", "num_citations": "1\n", "authors": ["611"]}