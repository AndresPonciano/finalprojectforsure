{"title": "Qos aggregation for web service composition using workflow patterns\n", "abstract": " Contributions in the field of Web services have identified that (a) finding matches between semantic descriptions of advertised and requested services and (b) nonfunctional characteristics - the quality of service (QoS) - are the most crucial criteria for composition of Web services. A mechanism is introduced that determines the QoS of a Web service composition by aggregating the QoS dimensions of the individual services. This allows to verify whether a set of services selected for composition satisfies the QoS requirements for the whole composition. The aggregation performed builds upon abstract composition patterns, which represent basic structural elements of a composition, like sequence, loop, or parallel execution. This work focusses on workflow management environments. We define composition patterns that are derived from Van der Aalst's et al. comprehensive collection of workflow patterns. The resulting\u00a0\u2026", "num_citations": "597\n", "authors": ["905"]}
{"title": "Ranked matching for service descriptions using owl-s\n", "abstract": " Semantic Web services envision the automated discovery and selection of Web services. This can be realised by adding semantic information to advertised services and service requirements. The discovery and selection process finds matches between requirements and advertisements according to their semantic description. Based on the Web Ontology Language (OWL) an ontology for Web services (OWL-S) was introduced to standardise their semantic description. There are already some approaches available for matching of service requirements with service advertisements according to such an ontology.               We propose an algorithm, which ranks the matching degree of service descriptions according to OWL-S. Different matching degrees are achieved based on the contravariance of the input and output types for requested and advertised services. Furthermore, additional elements of the service\u00a0\u2026", "num_citations": "175\n", "authors": ["905"]}
{"title": "QoS aggregation in Web service compositions\n", "abstract": " For the composition of Web services non-functional characteristics are commonly considered criteria for finding and selecting available services. Our work focuses on a mechanism that determines the overall quality-of-service (QoS) of a composition by aggregating the QoS of the individual services. With aggregated QoS it can be verified whether a set of services satisfies the QoS requirements for the whole composition or not. The aggregation performed builds upon abstract composition patterns, which model basic structural elements of a composition like parallel paths, a sequence, or a looped execution. In this work we extend existing composition patterns with the abilities to consider dependencies between services. Furthermore we introduce, how to use the pattern-based aggregation in the monitoring process during run-time. We explain how the data derived from the monitoring process can be used to calculate\u00a0\u2026", "num_citations": "170\n", "authors": ["905"]}
{"title": "QoS-based selection of services: The implementation of a genetic algorithm\n", "abstract": " In today's businesses we can see the trend that service-oriented architectures (SOA) represent the main paradigm for IT infrastructures. In this setting, software offers its functionality as an electronic service to other software in a network. In order to realise more complex tasks or business processes that are comprised of individual services, compositions of these are formed. Thus, several research efforts cover the creation of service compositions, including their modelling, development and provision. In this setting, individual services must be selected that perform the tasks of the composition. This selection can consider the quality-of-service (QoS). This paper discusses the optimisation problem when selecting services while considering different QoS characteristics. For this problem, we investigate the application of a genetic algorithm. Based on previous research work, the implementation of this algorithm is tested in\u00a0\u2026", "num_citations": "149\n", "authors": ["905"]}
{"title": "Qos-aware composition of web services: An evaluation of selection algorithms\n", "abstract": " A composition arranges available services resulting in a defined flow of executions. Before the composition is carried out, a discovery service identifies candidate services. Then, a selection process chooses the optimal candidates. This paper discusses how the selection can consider different Quality-of-Service (QoS) categories as selection criteria to select the most suitable candidates for the composition.\u00a0If more than one category is used for optimisation, a multi-dimensional optimisation problem arises which results in an exponential computation effort for computing an optimal solution. We explain the problem and point out similarities to other combinatorial problems \u2013 the knapsack problem and the resource constraint project scheduling problem (RCPSP). Based on this discussion, we describe possible heuristics for these problems and evaluate their efficiency when used for web service candidate\u00a0\u2026", "num_citations": "108\n", "authors": ["905"]}
{"title": "Transformations between uml and owl-s\n", "abstract": " As the number of available Web services increases there is a growing demand to realize complex business processes by combining and reusing available Web services. The reuse and combination of services results in a composition of Web services that may also involve services provided in the Internet. With semantically described Web services, an automated matchmaking of capabilities can help identify suitable services. To address the need for semantically defined Web services, OWL-S and WSML have been proposed as competing semantic Web service languages.               Both proposals are quite low-level and hard to use even for experienced Web service developers. We propose a UML profile for semantic Web services that enables the use of high-level graphical models as an integration platform for semantic Web services. The UML profile provides flexibility as it supports multiple semantic Web\u00a0\u2026", "num_citations": "100\n", "authors": ["905"]}
{"title": "Monitoring dependencies for slas: The mode4sla approach\n", "abstract": " In service oriented computing different techniques for monitoring service level agreements (SLAs) are available. Many of these monitoring approaches focus on bilateral agreements between partners. However, when monitoring composite services it is not only important to figure out whether SLAs are violated, but we also need to analyze why these violations have occurred. When offering a composite service a company depends on its content providers to meet the service level they agreed upon. Due to these dependencies a company should not only monitor the SLA of the composite service, but also the SLAs of the services it depends on. By analyzing and monitoring the composite service in this way, causes for SLA violations can be easier found. In this paper we demonstrate how to analyze SLAs during development phase and how to monitor these dependencies using event logs during runtime. We call our\u00a0\u2026", "num_citations": "93\n", "authors": ["905"]}
{"title": "QoS-aware composition of Web services: a look at selection algorithms\n", "abstract": " When a composition of Web services is designed, available services are put together to form a defined flow of executions. In a discovery process, a trader proposes available Web services as potential candidates. In a succeeding selection, for each task a trader chooses one candidate to form the optimal composition due to selection criteria. This paper discusses how the selection can consider different quality-of-service (QoS) categories to determine the most suitable candidates for the composition. If more than one category is used for optimisation, a multi-dimensional optimisation problem arises. This mentions similarities to similar combinatorial problems. Then, possible solutions are proposed and their performance is evaluated.", "num_citations": "93\n", "authors": ["905"]}
{"title": "Model-driven semantic web service composition\n", "abstract": " As the number of available Web services increases there is a growing demand to realise complex business processes by combining and reusing available Web services. The reuse and combination of services results in a composition of Web services that may also involve services provided in the Internet. With semantically described Web services, an automated matchmaking of capabilities can help identify suitable services. To address the need for semantically defined Web services, OWL-S and WSML have been proposed as competing semantic Web service languages. We show how the proposed semantic Web service languages can be utilized within a model-driven methodology for building composite Web services. In addition we combine the semantic-based discovery with the support for processing QoS requirements to apply a ranking or a selection of the candidates. The methodology describes a process\u00a0\u2026", "num_citations": "86\n", "authors": ["905"]}
{"title": "Modeling QoS characteristics in WSMO\n", "abstract": " Service oriented architectures (SOAs) are becoming widespread solutions for realizing distributed applications. They promote a service view of the world in which functionalities exposed as services by different companies are assembled and reused in a standardized manner. Services are the core building blocks of SOAs and therefore modeling various aspects of services becomes a fundamental challenge. Among these aspects, quality-of-service (QoS) need to be addressed given the high dynamism of any SOA-based system. This paper introduces the basic steps of modeling QoS characteristics of services with the Web Service Modeling Ontology (WSMO) in order to provide a QoS-aware SOA. It discusses the current limitations of modeling QoS characteristics with WSMO and proposes a set of approaches towards a richer QoS modeling support. Each approach is analyzed in terms of complexity and the\u00a0\u2026", "num_citations": "71\n", "authors": ["905"]}
{"title": "Model-driven methodology for building QoS-optimised web service compositions\n", "abstract": " As the number of available Web services increases there is a growing demand to realise complex business processes by combining and reusing available basic Web services. For each of the needed basic Web services there may be many candidate services available from different vendors and with different Quality of Service (QoS) values.This paper proposes a model-driven methodology for building new Web service compositions that are QoS-optimised. We investigate if UML is suitable for modelling the QoS aspects and we explain how transformations can be used to automate most parts of the methodology. Some of these transformations are already implemented in previous work.               As part of the methodology we present a control flow pattern approach that optimises the QoS values of the composition given user-defined requirements and preferences. The pattern approach is compared towards\u00a0\u2026", "num_citations": "67\n", "authors": ["905"]}
{"title": "WSC-08: continuing the web services challenge\n", "abstract": " The capabilities of organizations can be openly exposed, easily searched and discovered, and made readily-accessible to humans and particularly to machines, using service-oriented computing approaches. Artificial intelligence and software engineering researchers alike are tantalized by the promise of ubiquitously discovering and incorporating services into their own business processes (i.e. composition and orchestration). With growing acceptance of service-oriented computing, an emerging area of research is the investigation of technologies that will enable the discovery and composition of web services. The Web Services Challenge (WSC) is a forum where academic and industry researchers can share experiences of developing tools that automate the integration of Web services. In the fourth year (i.e. WSC-08) of the Web Services Challenge, software platforms will address several new composition\u00a0\u2026", "num_citations": "64\n", "authors": ["905"]}
{"title": "A cloud environment for data-intensive storage services\n", "abstract": " The emergence of cloud environments has made feasible the delivery of Internet-scale services by addressing a number of challenges such as live migration, fault tolerance and quality of service. However, current approaches do not tackle key issues related to cloud storage, which are of increasing importance given the enormous amount of data being produced in today's rich digital environment (e.g. by smart phones, social networks, sensors, user generated content). In this paper we present the architecture of a scalable and flexible cloud environment addressing the challenge of providing data-intensive storage cloud services through raising the abstraction level of storage, enabling data mobility across providers, allowing computational and content-centric access to storage and deploying new data-oriented mechanisms for QoS and security guarantees. We also demonstrate the added value and effectiveness of\u00a0\u2026", "num_citations": "61\n", "authors": ["905"]}
{"title": "Improving the QoS of WS compositions based on redundant services\n", "abstract": " A composition arranges available services resulting in a defined flow of tasks. A discovery process identifies the suitable candidate services for a composition. A subsequent selection process chooses the optimal candidate for each task. The selection process can consider - if supported - different quality-of-service (QoS) categories of the individual services to optimize the quality of the whole composition. The result is a quality-optimized assignment of candidates to each task. This paper discusses how already identified candidates, which a selection process originally has separated out, can improve a composition w.r.t. particular QoS categories. To realize this improvement, redundant arrangements involve the alternative candidates in order to supplement the originally assigned service. We formed these redundant arrangements on the basis of our previously introduced compositions patterns. The contribution of this\u00a0\u2026", "num_citations": "55\n", "authors": ["905"]}
{"title": "Data on-boarding in federated storage clouds\n", "abstract": " One of the main obstacles hindering wider adoption of storage cloud services is vendor lock-in, a situation in which large amounts of data that are placed in one storage system can not be migrated to another vendor, e.g., due to time and cost considerations. To prevent this situation we present an advanced on-boarding federation mechanism, enabling a cloud to add a special federation layer to efficiently import data from other storage clouds. This is achieved without being dependent on any special function from the other clouds. We design a generic, modular on-boarding architecture and demonstrate its implementation as part of a VISION Cloud, which is a large scale storage cloud designed for content-centric data. Our system is capable of integrating storage data from various clouds, providing a common global view of storage data. The users can access the data through the new cloud provider immediately after\u00a0\u2026", "num_citations": "49\n", "authors": ["905"]}
{"title": "Ranked Matching for Service Descriptions using DAML-S.\n", "abstract": " The vision of Semantic Web services is that computer systems shall find eligible services autonomously. This can be realised with providing semantic description about advertised and requested services. In this scenario a so-called matchmaker finds matches between service requirements and advertisements according to their description. Based on the ontology language DAML+ OIL a proposal for an upper ontology for the semantic description of services called DAML-S exists already. Also, approaches were introduced, which act as matchmakers for DAML-S descriptions. The contribution of this work is a new algorithm, which ranks the level of matching for DAML-S descriptions. To determine the different degrees of matching, elements of the DAML-S description are considered and matched individually. With ranking a criterion is available to select a service among a large set of results. Consider the result of flat matchmaking that consists of a set of matching and another set of non-matching services. If an autonomous system must still choose one of the set of matching services. An ordered list of services provides a decision support to autonomously choose the best service possible.", "num_citations": "47\n", "authors": ["905"]}
{"title": "A methodology for developing owl-s descriptions\n", "abstract": " This work proposes a methodology to develop the semantic description about Web services using OWL Services (OWL-S). In a preceding paper we have introduced a matchmaker algorithm for OWL-S and its prototype implementation to match semantic service descriptions of service requesters and providers. The experience from this work has revealed that the development of such a description is not easily done and requires the support of a software tool. Consequently, we propose in this work a methodology for how an OWLS description is developed. The purpose of this proposal is to build a software tool upon this. The methodology is divided into three main steps. In the first step a software generates automatically an abstract template from existing descriptions (such as a software model or a WSDL file). In a second step, suitable ontologies or classification systems are identified for the semantic description of the service elements. And as the third step, the classification of the relevant elements is performed. This paper discusses the problems that may occur and introduces research findings, which can support our approach.", "num_citations": "44\n", "authors": ["905"]}
{"title": "Analyzing impact factors on composite services\n", "abstract": " Although Web services are intended for short term, ad hoc collaborations, in practice many Web service compositions are offered longterm to customers. While the Web services making up the composition may vary, the structure of the composition is rather fixed. For companies managing such Web service compositions, however, challenges arise which go far beyond simple bilateral contract monitoring. It is not only important to determine whether or not a component (i.e., Web service) in a composition is performing properly, but also to understand what the impact of its performance is on the overall service composition. In this paper we show which challenges emerge and we provide an approach on determining the impact each Web service has on the composition at runtime.", "num_citations": "43\n", "authors": ["905"]}
{"title": "Optimising quality of service for the composition of electronic services.\n", "abstract": " Electronic services and their composition gain a growing interest from businesses that intend to implement their processes with software systems. The general characteristics of electronic services resemble the idea of process-orientation as proposed by the business process re-engineering initiative introduced in the 90s. Thus, the software industry promotes developing service compositions in order to efficiently implement business processes. The development of service compositions involves service brokers. These brokers implement a trading functionality in order to identify the suitable services based on requirement descriptions. The trading functionality can also consider different optimisation criteria in order to optimise the resulting composition. In the proposed application scenario, numerical Quality-of-Service (QoS) characteristics usually serve as optimisation criteria. When multiple criteria have to be considered at once, an optimisation problem arises that can result in an unfeasible computational effort. A novel approach for this problem is to apply heuristic algorithms. This approach requires a discussion, because heuristic algorithms do not guarantee to find the optimal solution. The question is how well the approximations compare with the optimal solution referring to the resulting QoS of the composition. Based on the characteristics of the application scenario a method is developed for computing the QoS of compositions based on the QoS statements of the involved services. A QoS-based selection must use such a method in order to determine the QoS of the entire composition when selecting individual services. Based on this method, a\u00a0\u2026", "num_citations": "30\n", "authors": ["905"]}
{"title": "Wsc-06: The web service challenge\n", "abstract": " In today's businesses, there is a trend that service-oriented architecture (SOA) is evolving into a popular architectural paradigm for IT infrastructure. SOA allows companies' software systems to be shared as network-enabled electronic services with their commonly specified interfaces. Service discovery and composition are two emerging ones which are both fundamental and important to SOA. Service discovery occurs when software modules identify suitable services that meet pre-established requirements based on the service descriptions. Service composition takes one step further to chain up the discovered services as execution plans. To motivate and promote the research in the areas, the Web services challenge 2006 (WSC-06) is organized and will take place at the joint 2006 CEC/EEE conferences. Building upon the success of the first two Web services challenges held at EEE-05 and ICEBE-05, WSC-06\u00a0\u2026", "num_citations": "29\n", "authors": ["905"]}
{"title": "SENECA\u2013simulation of algorithms for the selection of web services for compositions\n", "abstract": " This paper discusses a combinatorial problem about the selection of candidates for Web service compositions. The problem occurs if we assume that a discovery process has identified several candidates for each task of a composition and if the selection must consider multiple criteria. We anticipate to use quality-of-service (QoS) categories as selection criteria and thus the problem is about optimising the QoS of compositions at their planning-phase. This paper will explain this problem and propose different heuristics as possible solutions. Based on a software simulation a performance evaluation of these heuristics is given.", "num_citations": "29\n", "authors": ["905"]}
{"title": "WSC-07: Evolving the web services challenge\n", "abstract": " Service-oriented architecture (SOA) is an evolving architectural paradigm where businesses can expose their capabilities as modular, network-accessible software services. By decomposing capabilities into modular services, organizations can share their offerings at multiple levels of granularity while also creating unique access points for their peer organizations. The true impact of SOA will be realized when 3 rd  party organizations can obtain a variety of services, on-demand, and create higher-order composite business processes. The Web Services Challenge (WSC) is a forum where academic and industry researchers can share experiences of developing tools that automate the integration of Web services. In the third year (i.e. WSC-07) of the Web services challenge, software platforms will address several new composition challenges. Requests and results will be transmitted within SOAP messages. In addition\u00a0\u2026", "num_citations": "20\n", "authors": ["905"]}
{"title": "Using aspect-orientation in industrial projects: appreciated or damned?\n", "abstract": " Aspect-orientation (AO) is a recent technology for handling crosscutting concerns in a structured and modular manner. In spite of being considered useful, researchers often complain that industry is not widely adopting AO concepts and technologies in commercial projects.", "num_citations": "12\n", "authors": ["905"]}
{"title": "Soft real-time aspects for service-oriented architectures\n", "abstract": " In today's businesses we can see the trend that service-oriented architectures (SOA) represent the main paradigm for IT infrastructures. In this setting, a software offers its functionality as an electronic service to other software in a network. In order to realise more complex tasks or business processes that are comprised of individual services, compositions of these are formed. For specific application cases such as the time-dependent trading of goods or the IT-based management of natural disasters, service compositions are anticipated to provide soft real-time characteristics. Soft real-time characteristics for service compositions involve the QoS-based trading of services as well as a real-time conforming trading process that is capable of optimising the QoS in predictable and feasible amount of time. This paper discusses the two aspects and introduce two heuristics for the QoS-aware trading that show feasible\u00a0\u2026", "num_citations": "12\n", "authors": ["905"]}
{"title": "A Model for the Aggregation of QoS in WS Compositions Involving Redundant Services.\n", "abstract": " A composition arranges available services resulting in a defined flow of tasks. A discovery process identifies the suitable candidate services for a composition. A subsequent selection process chooses the optimal candidate for each task. The selection process can consider different quality-of-service (QoS) categories of the individual services to optimise the quality of the whole composition. The result is a quality-optimised assignment of candidates to each task. In this work, we discuss the case how already identified candidates, which a selection process originally has separated out, can improve a composition wrt particular QoS categories. To realise this improvement, redundant arrangements involve the alternative candidates in order to supplement the originally assigned service. We formed these redundant arrangements on the basis of our previously introduced compositions patterns. The contribution of this work is a computational model that allows the aggregation of the QoS for the composition when these arrangements are applied. This work presents extensions and refinements to our previous work [jaeger etal 05] where the basic concepts of this computational model were already discussed.", "num_citations": "12\n", "authors": ["905"]}
{"title": "Industrial Experience with Open Source Software Process Management\n", "abstract": " The usage of external open source software components can improve proprietary software in multiple ways, such as higher quality, lower cost, and faster time-to-market. But in order to fully benefit from its usage there are some important aspects to take into account, as well as significant risks to specifically manage to avoid potential legal consequences. This paper lays out the foundations for a process framework that successfully manages those risks and addresses the intrinsic aspects of open source software usage. Furthermore, it proposes a well-proven basis and best practices for corporate governance, policy, strategy, and process implementation.", "num_citations": "10\n", "authors": ["905"]}
{"title": "Modelling of service compositions: Relations to business process and workflow modelling\n", "abstract": " The service oriented architecture (SOA) represents a trend in the IT industry for the development of a flexible and unifying software infrastructure. In an SOA, software components provide their functionality as a service by using uniform interface description and invocation protocols. The provision of software components in an uniform manner allow their efficient composition to form new complex services. Currently, the compositions of services is a popular field of research with many ongoing efforts.               However, the sheer number of existing proposals and efforts to describe service compositions in this field have led to term Web Services Acronym Hell (WSAH)\u00a0[1] and an obvious confusion. This paper intends to serve as an orientation for explaining what the differences between business processes and workflow control flow languages are and why service compositions are used in this field. It will also\u00a0\u2026", "num_citations": "8\n", "authors": ["905"]}
{"title": "VISION Cloud: A Cloud Storage Solution Supporting Modern Media Production\n", "abstract": " This paper describes VISION Cloud, a European Commission Framework Project (EC FP VII) whose aim is to build innovative storage services for a number of key business cases. Among these, the media business case poses a number of challenges connected to the intrinsic characteristics of media assets such as huge dimension, rich metadata and time-critical workflows. As a result, there is a growing need for dedicated \u201cmedia clouds.\u201d The paper describes the requirements coming from this area, and illustrates the innovations and architectural approaches in the design of the VISION Cloud system. The VISION Cloud project is now in its full development stage, and it is expected that several of the developed technologies will prove to be crucial elements for future media storage systems. More information about the project timeline and deliverables can be found at www.visioncloud.eu.", "num_citations": "7\n", "authors": ["905"]}
{"title": "Cloud-based content centric storage for large systems\n", "abstract": " Content centric storage refers to a paradigm where applications access data objects through information about their content, rather than their path in a hierarchical structure. The application does not need any knowledge about the data store organization, or the place in a storage hierarchy. Rather, the application is able to query for the desired content based on metadata associated with the data objects. We illustrate the need for content centric storage and access through an example from a media production application. Our approach for building an industrial-capable content centric storage employs a cloud storage technology where metadata is treated as first class citizen and extends this technology with an API layer that manages and leverages metadata regarding content.", "num_citations": "7\n", "authors": ["905"]}
{"title": "How a structured testbed enables the rapid development and deployment of cloud services: The VISION Cloud use case\n", "abstract": " The right setup of a testbed is important for enabling the rapid development and deployment of cloud services, in particular all the times the testbed hosts more concurrent interactions. This work shows how to configure an environment where more developers insist on it. In particular what tools are indispensable for managing compelling distributed cloud environments. We looked at mature Open Source solutions, performing their smoothed integration. The paper describes all parts necessary for accomplishing complex scenarios, even in a bounded perimeter as the VISION Cloud EU project offering. VISION Cloud represents the reference architecture dealing with Cloud Storage, and our work attempts to provide solutions applied on VISION, but suitable for any type of framework.", "num_citations": "7\n", "authors": ["905"]}
{"title": "Open Source for Open Source License Compliance\n", "abstract": " Today, many software systems are of a level of complexity that no single company can implement modern solutions alone. Thus many companies engage in the open source software (OSS) ecosystem to keep the development costs manageable. But the usage of third-party components (both OSS and commercial) also mandates the need of a license compliance process supported by suitable tools. This paper is focused on using open source tools and relevant processes for open source license compliance. OSS license compliance is a very important topic, and requires appropriate processes, culture, and tools.               This work is based on extensive practical industrial experience and broad use at Siemens AG. We first describe the process and culture, then a set of tools. We complement this with related work in the community and future directions.", "num_citations": "6\n", "authors": ["905"]}
{"title": "Open Source Engineering Processes/Open Source-Entwicklungsprozesse\n", "abstract": " Software engineering in open source projects faces similar challenges as in traditional software development (coordination of and cooperation between contributors, change and release management, quality assurance, ...), but often uses different means of solving them. This leads to some salient distinctions between both worlds, especially with respect to communication and how technical issues are addressed. The variations within open source software (OSS) communities are considerable, and many different approaches are currently in use, ranging from informal conventions to highly systematic, formally specified and rigidly applied processes. We discuss the archetypal best practises in the field, illustrate them by presenting example projects, and provide a comparison to traditional approaches.", "num_citations": "5\n", "authors": ["905"]}
{"title": "Improving connection pooling persistence systems\n", "abstract": " Server-sided applications often use a persistence system for storing and managing their data in a database. Such a system has become complex and includes but is not limited to a database system, drivers, connection pools, query languages, the mapping between application logic and a database data model and it involves the optimization of resources. One important resource is the connection from applications to the database system since acquiring a connection is a very expensive operation. This paper introduces monitoring facilities for the use or misuse of connections in a persistence system. In particular, it explains how the monitoring can take place in order to configure connection pooling for optimal performance. The implemented solution uses conventional programming methods as well as an aspect-oriented approach. The described facilities are integrated into the development of an enterprise-scale\u00a0\u2026", "num_citations": "5\n", "authors": ["905"]}
{"title": "The FOSSology Project: 10 Years Of License Scanning\n", "abstract": " FOSSology is an open source project developing a Web server application and a toolkit for open source license compliance. As a toolkit it allows performing license copyright and export control scans from the command line. The FOSSology Web application provides a database and Web UI for implementing a compliance workflow. The FOSSology project published the first version of its software in December 2007. Given this ten year anniversary of license scanning this article presents the motivation for building and using FOSSology its history and its status as of today. Because SPDX represents the de facto standard for exchanging license and copyright information about software packages an introduction to FOSSology's support for exporting and importing SPDX documents is also presented.", "num_citations": "4\n", "authors": ["905"]}
{"title": "Autonomie in verteilten IT-Architekturen\n", "abstract": " Heutige IT-Systeme werden immer komplexer und kommen in immer dynamischeren Umgebungen zum Einsatz. Daneben entstehen durch die steigende Vernetzung Abh\u00e4ngigkeiten, die f\u00fcr Menschen nur schwer zu \u00fcberblicken sind. Insbesondere sind die globalen Auswirkungen selbst kleiner Anderungen kaum abzusch\u00e4tzen und manchmal auch von \u00fcberraschender Art.Aktuelle Forschungsarbeiten sehen in autonomem Systemverhalten einen vielversprechenden Ansatz zur Beherrschung der inh\u00e4renten Komplexit\u00e4t heutiger IT-Systeme. H\u00e4ufig werden in diesen Arbeiten die verwendeten Begrifflichkeiten jedoch nicht klar definiert und voneinander abgegrenzt. Ferner konzentriert sich die Forschung bisher weitgehend auf die positiven, gewollten Aspekte autonomen Verhaltens und ignoriert die Gefahren, z. B. eine Verringerung der Verl\u00e4sslichkeit, die von unerw\u00fcnscht auftretender Autonomie ausgehen.", "num_citations": "4\n", "authors": ["905"]}
{"title": "A service composition construct to support iterative development\n", "abstract": " Development of composed services requires a continues adaptation of the composed service to the changing environment of offered services. Services may no longer be available or may change performance characteristics, price, or quality of service criteria after they have been selected and used in a composition. The replacement of such a service requires a good understanding why this service got selected in the first place. This is hard to accomplish as it is known from software maintenance. Therefore we propose an approach where the conceptual task implemented by a selected service as well as the relationship between task and selected service is explicated and maintained during the complete life cycle of a composed service. This covers the design of the composition, derivation of service search criteria, and the execution of the composed service. The approach has been validated by an\u00a0\u2026", "num_citations": "4\n", "authors": ["905"]}
{"title": "Search and evaluation of ontologies for semantic web services in the internet\n", "abstract": " To discover Web services in the Internet more efficiently, different approaches propose to use semantic descriptions about required and provided services. For Web services, the approaches have in common that this kind of description uses ontologies and ontology languages developed for the upcoming Semantic Web initiated by the W3C. A semantic description of Web service represents an addition to already existing syntactic interface description. The idea is that elements of the service such as input parameters are referenced to concepts of existing ontologies in order to provide a definition for their semantics.Services that provide such a description are called Semantic Web services. For Semantic Web services, languages for their description, infrastructures for facilitating the discovery process and tools to create such description have already been proposed. In this work, we discuss the specific problem, how to\u00a0\u2026", "num_citations": "4\n", "authors": ["905"]}
{"title": "Towards federation and interoperability of cloud storage systems\n", "abstract": " While it is common to use storage in a cloud-based manner, the question of true interoperability is rarely fully addressed. This question becomes even more relevant since the steadily growing amount of data that needs to be stored will supersede the capacity of a single system in terms of resources, availability, and network throughput quite soon. The logical conclusion is that a network of systems needs to be created that is able to cope with the requirements of big data applications and data deluge scenarios. This chapter shows how federation and interoperability will fit into a cloud storage scenario. The authors take a look at the challenges that federation imposes on autonomous, heterogeneous, and distributed cloud systems, and present approaches that help deal with the special requirements introduced by the VISION Cloud use cases from healthcare, media, telecommunications, and enterprise domains\u00a0\u2026", "num_citations": "3\n", "authors": ["905"]}
{"title": "Resource allocation for cloud SaaS offerings based on Social Web applications\n", "abstract": " Novel approaches in resource provisioning and releasing grew out of cloud computing. Nevertheless, the management of resource pools still needs manual configuration to react on load changes. The presented idea is to procure user-data based on Social Web applications and to use this information for forecasting load progression. Thereby data of geocaching-services are included to determine how many people are at a specific place with a particular focus of interest. Then the system infers the pure volume of the processed load at the corresponding location to appropriately set up resources in advance at an optimal location for the hosting of the software-as-a-service (SaaS) offering.", "num_citations": "3\n", "authors": ["905"]}
{"title": "Application Portability for Public and Private Clouds.\n", "abstract": " With cloud computing, the general idea is to deploy applications and services in the cloud, at some cloud provider\u2019s facilities. But as with traditional software applications, business demands still exist including legal, privacy, cost and technical issues. These demands can prohibit the deployment of the entire software in a cloud provider space. Thus, some cases demand for a hybrid deployment where the application is split into one part that resides on premises and into another part that is deployed to the cloud provider facilities. Nevertheless, individual components could be suitable for a deployment in the cloud. Thus, an important characteristic for cloud computing is portability of components: software should be ready for being deployed on-premises, in a provider cloud or in a hybrid (mixed) setup. The goal is to provide flexibility to this regard for leveraging the advantages of cloud computing. This paper introduces design considerations for developing a hybrid application, in terms of software architecture, communication and security between modules. We give recent trends and recommendations on how to solve these issues so as to achieve portability of the components.", "num_citations": "3\n", "authors": ["905"]}
{"title": "Web Services Dependability\n", "abstract": " This chapter presents the definition of relevant terminology and a conceptual model of the basic terms. The chapter starts with the presentation of research in the area of dependability. Based on this, Web service concepts related to the dependability are introduced. The presentation leads into a statement identifying individual quality-of-service (QoS) characteristics for forming dependable Web services. Then, the chapter discusses the current status quo in the area of QoS-aware Web services. This part is divided into three subparts: description, management, and monitoring. This also identifies ongoing efforts as well as efforts that do not show present activity. By this discussion, this chapter puts research about dependability in relation with ongoing QoS-related efforts in the Web services domain. Thus it identifies how these efforts can be combined in order to form a dependable Web services platform.", "num_citations": "3\n", "authors": ["905"]}
{"title": "Autonomie in IT-Systemen. Ein Konzeptionelles Modell\n", "abstract": " Die Erforschung und Anwendung von autonomen Systemen ist momentan in der Informatik ein Themengebiet von wachsendem Interesse. Die Aussicht, mit autonomen Verfahren komplexe Systeme handhabbar zu machen und Kosteneinsparungen bei deren Betrieb zu erzielen, hat bereits die Softwareindustrie auf dieses Thema gelenkt und zu neuartigen Produkten gef\u00fchrt. Andererseits darf die Verl\u00e4sslichkeit eines Systems nicht aufgrund eines autonomen Verfahrens herabgesetzt werden. Dieses Spannungsfeld ist ein Fokus verschiedener Forschungsbem\u00fchungen, um autonome Systeme alltagstauglich zu machen.Beim Gebiet der autonomen Systeme handelt es sich um ein junges Themengebiet, welches noch nicht durch allgemein akzeptierte Definitionen gepr\u00e4gt ist. Dadurch entsteht der Bedarf einer terminologischen Basis, die sich momentan in der Phase der Etablierung befindet. Diese Arbeit beteiligt\u00a0\u2026", "num_citations": "3\n", "authors": ["905"]}
{"title": "Metrics for objective ontology evaluations\n", "abstract": " We present new metrics and techniques which allow one to configure a metadata catalogue and objectively describe knowledge management ontologies. Per C.E. Shannon (1948), when describing information based systems, statistical measures are a necessity; yet very few ontology based standards mention quantifiable measures such as entropy, data encapsulation, complexity, efficiency, evolution, or redundancy. We hope to demonstrate how statistical information measures can be implemented for ontology-based knowledge management systems using our    statistic, entropy, evolution, organization, sensitivity, and an interpretation of complexity.", "num_citations": "3\n", "authors": ["905"]}
{"title": "A Multi-criteria Approach for Large-object Cloud Storage.\n", "abstract": " In the area of storage, various services and products are available from several providers. Each product possesses particular advantages of its own. For example, some systems are offered as cloud services, while others can be installed on premises, some store redundantly to achieve high reliability while others are less reliable but cheaper. In order to benefit from the offerings at a broader scale, eg, to use specific features in some cases while trying to reduce costs in others, a federation is beneficial to use several storage tools with their individual virtues in parallel in applications. The major task of a federation in this context is to handle the heterogeneity of involved systems. This work focuses on storing large objects, ie, storage systems for videos, database archives, virtual machine images etc. A metadata-based approach is proposed that uses the metadata associated with objects and containers as a fundamental concept to set up and manage a federation and to control storage locations. The overall goal is to relieve applications from the burden to find appropriate storage systems. Here a multi-criteria approach comes into play. We show how to extend the object storage developed by the VISION Cloud project to support federation of various storage systems in the discussed sense.", "num_citations": "2\n", "authors": ["905"]}
{"title": "An Approach for Hybrid Clouds using VISION Cloud Federation\n", "abstract": " Hybrid clouds combine the benefits of a public cloud and on-premise deployments of cloud solutions. One scenario for the use of hybrid clouds is privacy: since public clouds are considered unsafe, sensitive data is often kept on premise. However, other non-sensitive resources can be deployed in a public cloud in order to benefit from elasticity, fast provisioning, or lower cost. In this work, we present an approach for hybrid cloud object storage based on the federation of storage resources. It uses the metadata of the objects and containers as a fundamental concept to set up and manage a hybrid cloud. Our approach extends an existing scheme for implementing federation for object storage developed by the VISION Cloud project.", "num_citations": "2\n", "authors": ["905"]}
{"title": "Viewpoints in the Smart Home Product Line\n", "abstract": " In product lines for systems engineering a number of different viewpoints on the modeled system have to maintained, comprising both software-related viewpoints and domain-specific views on hardware and environment. A major engineering challenge is to maintain model transformations and code generators working on these viewpoints. This paper proposes an engineering approach that explicitly describes the relation between viewpoints. We use these descriptions to better modularize transformations and thus improve the maintainability of MDD tool chains. This is shown within a smart home case study, which combines building automation and software engineering.", "num_citations": "2\n", "authors": ["905"]}
{"title": "Economical Aspects of Database Sharding.\n", "abstract": " Database sharding is a technique to handle large data volumes efficiently by spreading data over a large number of machines. Sharding techniques are not only integral parts of NoSQL products, but also relevant for relational database servers if applications prefer standard relational database technology and also have to scale out with massive data. Sharding of relational databases is especially useful in a public cloud because of the pay-per-use model, which already includes licenses, and the fast provisioning of virtually unlimited servers. In this paper, we investigate relational database sharding thereby focussing in detail on one of the important aspects of cloud computing: the economical aspects. We discuss the difficulties of cost savings for database sharding and present some surprising findings on how to reduce costs.", "num_citations": "1\n", "authors": ["905"]}
{"title": "Extending Cloud-based Object Storage with Content Centric Services.\n", "abstract": " Content centric storage refers to a paradigm where data objects are accessed by applications through information about their content, rather than their path in a hierarchical structure. Applications are relieved from having knowledge about the data store organization or the place in a (physical) storage hierarchy. Instead, applications can use metadata associated with objects in order to to query for the desired content. In this paper, we explain the new functionality added to our first version of the content centric storage (Jaeger et al., 2012): We present a new REST API for the management of relations and the ability to use schemas for enforcing metadata. The need for such a content centric storage is presented with examples from the media production domain.", "num_citations": "1\n", "authors": ["905"]}
{"title": "Tackling the challenges of integrating 3rd party software using AspectJ\n", "abstract": " This article reports on the usage of aspect-orientation in an industrial project, which means that aspects are an active part of a real software product. Moreover, aspect-orientation, in particular the language AspectJ, is used to overcome several critical problems. Those problems are well motivated and discussed in detail. Some of them are hard to solve with conventional programming techniques whereas an AspectJ-based solution is very straight forward. Since some of the reported problems are not really of crosscutting nature, the solutions might be questionable. This leads to a discussion about the \u201cpolitical correctness\u201d of this approach. Furthermore, the paper explains why and how the project management has been convinced to use AspectJ.", "num_citations": "1\n", "authors": ["905"]}
{"title": "Database Connection Monitoring for Component-based Persistence Systems\n", "abstract": " Server applications often use a relational database management system (RDBMS) for storing and managing their data. Storage and management is not limited to the RDBMS itself, but involves also other software forming a persistence system. Such system has become complex. Besides the RDBMS it includes drivers, connection pools, query languages, the mapping between application logic and a database data model and it involves the optimisation of resources. One important resource is the connection from applications to the database system, because the acquisition of a connection is a very expensive operation.This work introduces monitoring facilities for the use or misuse of connections in component-based applications. In particular, it explains how the monitoring can take place in order to configure connection pooling for a set of different components. The implemented solution uses conventional programming methods as well as an aspect-oriented approach. The described facilities are integrated into the development of an enterprise-scale application implementing a communications middleware.", "num_citations": "1\n", "authors": ["905"]}
{"title": "Lastregelung von Web Services mittels Proof-of-Work Funktionen.\n", "abstract": " Kostenlos frei angebotene Web Services sind anf\u00e4llig f\u00fcr \u00dcberlastsituationen, die beispielsweise durch eine zu gro\u00dfe Anzahl von Clients oder durch zu h\u00e4ufig anfragende Clients verursacht werden k\u00f6nnen. Auch Denial-of-Service Angriffe durch b\u00f6sartige Clients k\u00f6nnen \u00dcberlastsituationen verursachen. Eine L\u00f6sung w\u00e4re, den betroffenen Web Service kostenpflichtig zu machen. Dies scheitert jedoch in der Praxis meist an der umst\u00e4ndlichen Erhebung. In diesem Artikel erl\u00e4utern wir, wie mittels Proof-of-Work Funktionen eine Lastregelung von Web Services realisiert werden kann. Proof-of-Work Funktionen er- m\u00f6glichen Clients nachzuweisen, dass sie eine gewisse Menge von Rechenleistung oder anderen Ressourcen erbracht haben. Durch die Regelung wird sichergestellt, dass alle Clients weiterhin Zugriff haben, aber die Zugriffe von zu h\u00e4ufig nachfragenden Clients eingeschr\u00e4nkt werden.", "num_citations": "1\n", "authors": ["905"]}
{"title": "Transformations between uml and owl-s\n", "abstract": " As the number of available Web services increases there is a growing demand to realize complex business processes by combining and reusing available Web services. The reuse and combination of services results in a composition of Web services that may also involve services provided in the Internet. With semantically described Web services, an automated matchmaking of capabilities can help identify suitable services. To address the need for semantically defined Web services, OWL-S and WSML have been proposed as competing semantic Web service languages.Both proposals are quite low-level and hard to use even for experienced Web service developers. We propose a UML profile for semantic Web services that enables the use of high-level graphical models as an integration platform for semantic Web services. The UML profile provides flexibility as it supports multiple semantic Web service languages. Transformations of both ways between OWL-S and UML are implemented to show that the UML profile is expressive enough to support one of the leading semantic Web service languages.", "num_citations": "1\n", "authors": ["905"]}
{"title": "Addendum: QoS aggregation using WF patterns\n", "abstract": " This document contains a revised version of the aggregation rules for the different composition patterns which we have introduced in previous work [1][2]. During our subsequent research activities we have developed a clearer view on the composition patterns which were developed almost one year ago. We have also revealed a few oddities we wish to eliminate. The clarifications include issues about the OR-split, the aggregation rules covering mean values and the aggregation rules for the reputation.", "num_citations": "1\n", "authors": ["905"]}