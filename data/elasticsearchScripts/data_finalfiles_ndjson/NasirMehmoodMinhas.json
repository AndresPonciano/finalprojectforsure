{"title": "An improved framework for requirement change management in global software development\n", "abstract": " In this research, an improved framework for requirement change management in global software development (RCM_GSD) has been presented. The objective is to manage the change in requirement specifically in global software development in an appropriate manner. The proposed frame-work RCM_GSD follows the required processes of RCM and reduces the concerns of GSD. Systematic Literature Review (SLR) was conducted for exploration of relevant research. During literature study, it is analyzed that the existing techniques of change management were not suitable for global software development (GSD). The change in requirements becomes more complicated in distributed environment due to the lack of communication and collaboration among globally dispersed stakeholders. The proposed model is compared with other models proposed in recent literature and analysis is made between them; feedback was obtained from the domain experts as well. The feedback and comparison results show that the proposed model provides an appropriate solution for requirement change management in GSD.", "num_citations": "40\n", "authors": ["394"]}
{"title": "Integrating formal methods in XP\u2014A conceptual solution\n", "abstract": " Formal methods can be used at any stage of product development process to improve the software quality and efficiency using mathematical models for analysis and verification. From last decade, researchers and practitioners are trying to establish successful transfer of practices of formal methods into industrial process development. In the last couple of years, numerous analysis approaches and formal methods have been applied in different settings to improve software quality. In today\u2019s highly competitive software development industry, companies are striving to deliver fast with low cost and improve quality solutions and agile methodologies have proved their efficiency in acquiring these. Here, we will present an integration of formal methods, specifications and verification practices in the most renowned process development methodology of agile i.e. extreme programming with a conceptual solution. That leads towards the development of a complete formalized XP process in future. This will help the practitioners to understand the effectiveness of formal methods using in agile methods that can be helpful in utilizing the benefits of formal methods in industry.", "num_citations": "16\n", "authors": ["394"]}
{"title": "Specification of e-Health system using Z: A motivation to formal methods\n", "abstract": " Formal Method (FM) is an emergent feature that uses mathematical notations to mark accurate and explicit specifications that error and discrepancies are identified during early phases of the software development process. By using the Z specification, system specification, design and verification can improve the quality effectively. In this paper, we present the formal specification for the e-Health system by using Z schema. This paper will be motivation to Formal Methods that FM not only beneficial for mission critical systems but also in the commercial and business oriented applications, because the development time, verification and maintenance cost will drastically reduce.", "num_citations": "13\n", "authors": ["394"]}
{"title": "Model Based Testing for Web Applications: A Literature Survey Presented\n", "abstract": " The World Wide Web has a great impact in the world of computing. Testing of web applications is becoming more challenging task with the tremendous growth, distributed nature, dynamic nature and heterogeneity of web applications. With the growing complexity and usage of web applications, there is a need of rigorous testing techniques for producing reliable applications. Model-based testing (MBT) is a promising paradigm for generating test cases from models of the system under test (SUT). Different techniques (based on model based testing) have been presented in the literature. The focus of this study is to present a survey of model based testing techniques with specific reference to web applications. Existing literature has been surveyed using a systematic literature review (SLR) approach. Applicability of MBT for web applications have been studied, comparison of existing approaches has been presented in the study, finally strengths and limitations of existing approaches have been highlighted.", "num_citations": "10\n", "authors": ["394"]}
{"title": "A Comparative Analysis of Formal languages Based upon Various Parameters\n", "abstract": " Formal method is collection of mathematics notations addressing the requirement specification, analysis and verification at any stage of the system life-cycle. Formal method identifies bugs or error in early stage of development. At the end product is delivered as per user requirement. Due to this reason many critical control systems are developed using formal methods. Formal method play silver built role in the software industry. Model based languages are Z, B and VDM are popular formal specification languages and mostly used in the industry. In this paper we compare three formal specification languages Z, B and VDM based upon various factor. The factors use for comparison is specification style, writing specification structure, support for object orientation, tool support, cost and Quality, Concurrency, Code generation, industrial application and domain.", "num_citations": "9\n", "authors": ["394"]}
{"title": "Automated requirements elicitation for global software development (gsd) environment\n", "abstract": " Global software development (GSD) outsourcing is a modern business strategy for producing high quality software at low cost. Most of the problems in Global software development (GSD) occur due to the lack of communication between stakeholders, time zone issues, cultural differences, etc. In this paper, our main emphasis will be to improve the Value-based requirement elicitation (VBRE) steps in GSD environment and also to overcome the major GSD environment problems while taking the process of requirement elicitation from valued stakeholders. Though this model works for every kind of project but specifically for generic software.", "num_citations": "8\n", "authors": ["394"]}
{"title": "A Review of Class Based Test Case Generation Techniques.\n", "abstract": " One of the important phases in software development is testing, due to advancement in software development in recent years, testing has also grabbed great attention and various testing techniques have been devised in order to test the software. Researchers are rapidly moving towards model based testing due to its advantages. UML class diagram has been used alone or with some hybrid approaches in order to achieve concentrated level of test case generation. However, before progression towards new approaches, there is a need to analyze and synthesize existing evidence based techniques in the area of software test case generation. In this paper, we have discussed various approaches that exercises class diagram to support their test case generation activities. Systematic Literature Review (SLR) was conducted to collect related papers to examine the relevant research. The outcome of this study shows analysis of class based test case generation techniques. In the end, we elaborated the usage and significance of class diagram in generating test cases with the help of evidences and propose thinkable direction and practices for further research.", "num_citations": "7\n", "authors": ["394"]}
{"title": "An Integration of UML Sequence Diagram with Formal Specification Methods\u2014A Formal Solution Based on Z\n", "abstract": " UML Diagrams are considered as a main component in requirement engineering process and these become an industry standard in many organizations. UML diagrams are useful to show an interaction, behavior and structure of the system. Similarly, in requirement engineering, formal specification methods are also being used in crucial systems where precise information is required. It is necessary to integrate System Models with such formal methods to overcome the requirements errors i.e. contradiction, ambiguities, vagueness, incompleteness and mixed values of abstraction. Our objective is to integrate the Formal Specification Language (Z) with UML Sequence diagram, as sequence diagram is an interaction diagram which shows the interaction and proper sequence of components (Methods, procedures etc.) of the system. In this paper, we focus on components of UML Sequence diagram and then implement these components in formal specification language Z. And the results of this research papers are complete integrated components of Sequence diagram with Z schemas, which are verified by using tools and model based testing technique of Formal Specifications. Results can be more improved by integrating remaining components of Sequence and other UML diagrams into Formal Specification Language.", "num_citations": "6\n", "authors": ["394"]}
{"title": "Controlled vocabulary based software requirements classification\n", "abstract": " The nature of software requirements is very much subjective and multi-faceted. The level of complexity increases along-with the volume, especially when the requirements are in natural language. In the primary phase of requirements engineering, it is mostly desirable to transform these user written requirements into more understandable form. Organizing the requirements in different groups may support further activities much easier than direct working. In this paper, we present a classifier that sufficiently transforms natural language written requirements into corresponding groups. The organization of these groups depends upon the inter-keywords association i.e., hierarchy of keywords. The classifier works best when requirements have been written using relative vocabulary i.e., controlled vocabulary. The overall structure of this technique is composed on three main components: 1) Repository: of keywords and their\u00a0\u2026", "num_citations": "6\n", "authors": ["394"]}
{"title": "Information retrieval based requirement traceability recovery approaches-a systematic literature review\n", "abstract": " The term traceability is an important concept regarding software development. It enables software engineers to trace requirements from their origin to fulfillment. Maintaining traceability manually is a time consuming and expensive job. Information retrieval methods provide a mean of automation for requirement traceability. A visible number of IR based traceability techniques have been proposed in the literature, but the adoption of these techniques in the industry is limited. In this paper, we examine the information retrieval-based traceability recovery approaches through systematic literature review. We presented a synthesis of these techniques. We also identified challenges that are potentially limiting the adoption of IR based traceability recovery approaches. We conclude that term mismatch is a major barrier faced by IR based approaches. We also did classify the approaches that are attempting to solve the term mismatch problem.", "num_citations": "5\n", "authors": ["394"]}
{"title": "Are project managers informally following capability maturity model integration practices for project management?\n", "abstract": " Project planning is crucial for fruitful completion of a software development project. In case of a certified software development organisation, one can guess whether the software development projects are planned properly or not. But, what to do for a non-certified organisation? The objective of this study is to address this problem. For this purpose, a questionnaire survey has been conducted by involving experienced practitioners. The results show that several software development organisations follow Capability Maturity Model Integration) Project Planning-Process Area practices unofficially. Such organisations are potential candidate organisations for software process improvement initiatives, and would be cheap and safe for successful completion of a project.", "num_citations": "5\n", "authors": ["394"]}
{"title": "AN Integrated Approach to Requirement Prioritization With Reference to Distributed Software Development\n", "abstract": " In software engineering it is very important to include those requirements in the product release, which are really needed by the customers. Distributed Software Development (DSD)/Global Software Development (GSD) allow team members to be located in various distance sites across the different time zone nations during the software development lifecycle. The geographical distributed development has some barriers in term of distance, culture, time zone, knowledge management and technical ability etc. In this paper we proposed an integrated approach to requirement prioritization process with reference to DSD/GSD. Our technique is consisting of five steps, based on stakeholder\u2019s weightage and requirement\u2019s weightage with respect DSD/GSD impact factors. An automated procedure is used to generate prioritized requirements for releases. Requirement negotiation process may adopt for negotiation among the geographically distributed stakeholders if conflict occurred in prioritization process.", "num_citations": "4\n", "authors": ["394"]}
{"title": "Impact of Stress on Software Engineers Knowledge Sharing and Creativity [A Pakistani Perspective]\n", "abstract": " Software development involves technology as well as human efforts. Software engineering is supportive to create a quality of product by adopting the process of sharing knowledge. A lot of research was conducted on the technical side but human side of software development disregarded. Knowledge and creativity considered major factors for improving the software quality. Currently professionals working in the field of software engineering are under impressive pressure which cause stress for the Software engineers. It is highly desirable to conduct an empirical study on \u201cimpact of stress on software engineers knowledge sharing & creativity\u201d. The major motivation for this study is to investigate the impact of job stress factors which can affect the software engineering knowledge sharing capabilities and creativity. The research is based on industrial assessment. For conducting this study we developed a questionnaire based on Stress Factors. Statistical analyses are performed through SPSS tool. On the basis of the results from the survey, we proposed some strategies for those factors that have high impact on software engineers and try to mitigate their affect. These results highlight stress factors and their impact on software engineers knowledge sharing and creativity, working in Pakistani software industry.", "num_citations": "3\n", "authors": ["394"]}
{"title": "Formal methods for commercial applications issues vs. solutions\n", "abstract": " It was advocated that in 21st century, most of software will be developed with benefits of formal methods. The benefits include faults found in earlier stage of software development, automating, checking the certain properties and minimizing rework. In spite of their recognition in academic world and these claimed advantages, formal methods are still not widely used by commercial software industry. The purpose of this research is to promote formal methods for commercial software industry. In this paper we have identified issues in use of formal methods for commercial applications and devised strategies to overcome these difficulties which will provide motivations to use formal methods for commercial applications.", "num_citations": "3\n", "authors": ["394"]}
{"title": "A Systematic Review of Use Cases based Software Testing Techniques\n", "abstract": " Use case based Software testing concerned with testing an entire system\u2019s functionality and its constraints. User\u2019s requirements can be drawn in form of use cases to show the internal and external behaviour of a system. The use case has been used to test software system for different levels as well as through many ways according to nature of software. Rather than proposing a new technique, it is necessary to synthesize the existing techniques of Use case based software testing which is available in the literature. A Systematic Literature Review has been performed to investigate all the current approaches of Use case based software testing techniques. A question-wise analysis has also been presented for the researchers to investigate the effectiveness of these techniques. In results, we have discussed all the existing approaches of Use case based software testing along with its strengths & weaknesses and measure the characteristics of these approaches based on some key parameters. We have concluded the current state of the art of all the existing approaches of Use case based testing. Results are based on both types of analysis; Qualitative as well as Quantitative.", "num_citations": "2\n", "authors": ["394"]}
{"title": "A Systematic Approach for Requirement Elicitation in Globally Distributed Software Development\n", "abstract": " Globally Distributed Software Development (GDSD) has different characteristics that make it different from traditional software development. These characteristics are directly affecting the requirement engineering process which is most crucial step in software development phase. GDSD trend is rapidly increasing for few years, and demanding an investigation on requirement engineering in multi site organization.", "num_citations": "1\n", "authors": ["394"]}
{"title": "Scientific Research\n", "abstract": " Background: The optimal regimen has still to be determined for the use of misoprostol in the surgical termination of pregnancy in the early second trimester. Objective: To compare the outcomes of two different regimens for cervical priming with misoprostol before dilatation and evacuation (D & E) in 13 weeks-16 weeks gestation pregnancy terminations. Methods: A retrospective analysis was performed of the medical records of two cohorts of 334 women each who were treated with either 3 sublingual doses of 2 misoprostol 200 \u00b5g tablets 30 minutes apart on admission or the same dosage preceded by 1 oral tablet of misoprostol 200 \u00b5g at home 3 hours before admission. Results: The addition of the home tablet of misoprostol increased the rate of one day completion of D & E from 97.3% to 100%(P= 0.004), and the overall mean theatre time for D&E was reduced by 12.3% in parous women (P= 0.001) and 6.4% in nulliparous women (P= 0.003) with the reduction being consistent across all gestations. Conclusions: This retrospective study showed that the addition of 1 oral tablet of misoprostol 200 \u00b5g at home 3 hours before admission to a regimen of 3 sublingual doses of 2 misoprostol 200 \u00b5g tablets 30 minutes apart on admission significantly increases the probability of all women at 13 weeks-16 weeks gestation completing a termination of pregnancy in one day with a single D & E procedure and with a reduced theatre time.", "num_citations": "1\n", "authors": ["394"]}
{"title": "Prioritizing Stakeholders\u2019 Role in Prioritization Process\n", "abstract": " The quality requirements of a software system have great concerns with the decisions made by stakeholders about them. Not all stakeholders have same approach toward each requirement. Even some core requirements might not be of any worth to some stakeholder. This problem can greatly reduce the quality of prioritization outputs. In this paper a technique has been presented to prioritize stakeholders\u2019 roles by considering two elements ie, Stakeholder Profile Weight (SPW) and Requirement Specific Stakeholder Weight (RSSW). The result of given technique has been discussed theoretically and assure quality improvement in software requirements prioritization.", "num_citations": "1\n", "authors": ["394"]}