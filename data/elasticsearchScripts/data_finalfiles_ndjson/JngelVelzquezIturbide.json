{"title": "An evaluation of students\u2019 motivation in computer-supported collaborative learning of programming concepts\n", "abstract": " Motivation is a very important factor for successful instruction. This factor is especially relevant in collaborative learning contexts, where social interaction plays an important role. In this paper we present an evaluation of motivation in 139 students who were instructed under four pedagogical approaches: traditional lecture, collaborative learning, collaborative learning guided by CIF (an instructional framework for collaborative learning), and collaborative learning guided by CIF and supported by MoCAS (a collaborative learning tool). We considered the four dimensions of motivation according to self-determination theory. The statistical results show that, in global terms, students were more motivated by jointly using the collaborative instructional approach CIF and the MoCAS tool than by using a collaborative approach. Detailed analysis of the different kinds of motivation yields mixed results. Students who were\u00a0\u2026", "num_citations": "109\n", "authors": ["926"]}
{"title": "GreedEx: A visualization tool for experimentation and discovery learning of greedy algorithms\n", "abstract": " Several years ago we presented an experimental, discovery-learning approach to the active learning of greedy algorithms. This paper presents GreedEx, a visualization tool developed to support this didactic method. The paper states the design goals of GreedEx, makes explicit the major design decisions adopted, and describes its main characteristics in detail. It also describes the experience of use, the usability evaluations conducted, and the evolution of GreedEx in these years in response to the findings of the usability evaluations. Finally, the positive results obtained in an evaluation of educational effectiveness are shown. The paper has three main contributions. First, the GreedEx system itself is an innovative system for experimentation and discovery learning of greedy algorithms. Second, GreedEx is different from other visualization systems in its support to higher levels of learning, in particular evaluation\u00a0\u2026", "num_citations": "52\n", "authors": ["926"]}
{"title": "E-learning platforms analysis and development of students tracking functionality\n", "abstract": " We are working in building better tools for analysing students' interactions with different multimedia universities e-learning platforms. In order to develop the best required solution for each campus, we have made a comprehensive analysis of which are the major advantages and disadvantages of the main ones, and try to meet requirements with the implementation of our university campus application. Different techniques and tools have been used to obtain this analysis, and it is supported by different study cases that are explained in this paper. Some of the functionality developed in our campus e-learning application based on this analysis is also shown. We also analyze, by two study cases, other type of tools to obtain students' feedback.", "num_citations": "52\n", "authors": ["926"]}
{"title": "Active learning of greedy algorithms by means of interactive experimentation\n", "abstract": " Greedy algorithms are one of the most common algorithm design techniques. Despite their apparent simplicity, their design is a demanding task. As a consequence, they are usually taught and learnt in a passive way. In this paper, we make a new proposal aimed at active learning of greedy algorithms. The paper contains two main contributions. First, we introduce a novel approach to their active learning, based on experimentation with and evaluation of alternative greedy strategies for a given problem. Second, we present a family of interactive assistants designed to support this approach. The assistants were evaluated for their usability in real lab situations, having obtained high scores from students as well as useful information to enhance them.", "num_citations": "45\n", "authors": ["926"]}
{"title": "A systematic review of the use of Bloom's taxonomy in computer science education\n", "abstract": " Bloom's taxonomy is a model that allows characterizing students' learning achievements. It is frequently used in computer science education (CSE), but its use is not straightforward. We present a systematic review conducted to know actual use of the taxonomy in CSE. We found that it was mostly used in programming education and to assess students' performance. A more relevant contribution is a classification of authors' difficulties. In particular, the most often reported difficulty is determining the level of the taxonomy where an assessment task can be classified. In addition, we present authors' hypotheses about possible causes of the difficulties and the solutions they adopted.", "num_citations": "43\n", "authors": ["926"]}
{"title": "Student perception and usage of an automated programming assessment tool\n", "abstract": " Automated assessment systems are gaining popularity within computer programming courses. In this paper we perform an empirical evaluation of Mooshak, an online judge that verifies program correctness, in order to determine its usefulness in classroom settings. In particular, we provide a detailed study on how students use the tool, analyze their opinions and critiques about it, and measure other features like its capability to reduce dropout rates. The experience was carried out within a course on algorithm design and analysis where we collected information through several questionnaires and data generated by the tool during the course. Among the main findings we highlight: (1) the usage of the tool was adequate in relation to students\u2019 own testing; (2) its feedback needs to be richer in order to improve its acceptance among students; and (3) there was no statistical evidence to claim Mooshak reduced the\u00a0\u2026", "num_citations": "38\n", "authors": ["926"]}
{"title": "Recursion in gradual steps (is recursion really that difficult?)\n", "abstract": " We propose a gradual approach to teach recursion. Our main assumption is that the difficulty in learning recursion does not come from the recursion concept itself, but from its interaction with other mechanisms of imperative programming. We use this basic idea to propose a new pedagogical approach. On the one hand, recursion is introduced in a gradual way by means of three fields (grammars, functional programming and imperative programming). On the other hand, each instance of recursion is explained so that all of its accompanying mechanisms are clearly identified.", "num_citations": "36\n", "authors": ["926"]}
{"title": "InfoVis interaction techniques in animation of recursive programs\n", "abstract": " Algorithm animations typically assist in educational tasks aimed simply at achieving understanding. Potentially, animations could assist in higher levels of cognition, such as the analysis level, but they usually fail in providing this support because they are not flexible or comprehensive enough. In particular, animations of recursion provided by educational systems hardly support the analysis of recursive algorithms. Here we show how to provide full support to the analysis of recursive algorithms. From a technical point of view, animations are enriched with interaction techniques inspired by the information visualization (InfoVis) field. Interaction tasks are presented in seven categories, and deal with both static visualizations and dynamic animations. All of these features are implemented in the SRec system, and visualizations generated by SRec are used to illustrate the article. View Full-Text", "num_citations": "28\n", "authors": ["926"]}