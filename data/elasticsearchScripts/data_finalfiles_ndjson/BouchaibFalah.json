{"title": "Application domain and programming language readability yardsticks\n", "abstract": " Software maintainability is one of the most factors that used to ensure software quality. It targets the structure of the software rather than its functionality. Hence, code readability is highlighted whenever maintainability is discussed. There is a huge difference between an organized code and a messy code, or between easy to read code and a difficult to read code. This difference can be very subjective but many efforts have been put together in order to formalize it. Therefore, the result was a set of readability factors that have a direct or indirect impact on software readability. These factors measure to which extent readers can understand the text of the software code. Many metrics were developed to generalize the readability score across a set of pieces of code. Unfortunately, not all proposed metrics take into account the possibility of having variable readability factors. This paper tries to investigate to which extent the\u00a0\u2026", "num_citations": "13\n", "authors": ["2039"]}
{"title": "Test case selection based on a spectrum of complexity metrics\n", "abstract": " Quality continues to be a significant issue for software, and testing is a key activity in ensuring the quality of software. Unfortunately, since testing usually was near the end of software development, it is often rushed and frequently not done well. Thus, this paper suggests an approach that can address some of these issues and examine ways to reduce the software testing costs by selecting test cases based on a Spectrum of Complexity Metrics (SCM). We have developed a comprehensive taxonomy of product metrics based on two dimensions, the product level (class, method, statement) and the characteristics of the product. To evaluate these metrics, we have developed a tool which uses these metrics to target test cases. This tool enables us to identify three sample metric combinations. We have conducted a series of experiments based on three applications. The combinations of metrics were applied to test\u00a0\u2026", "num_citations": "13\n", "authors": ["2039"]}
{"title": "Mutation testing techniques: A comparative study\n", "abstract": " Testing is a very crucial phase in any software development, in which various testing techniques are used with the intent of finding software defects. Different approaches have been suggested to effectively accomplish an application testing, and testers shall choose the most adequate one in terms of cost and efficiency. Mutation has been ranked as one the most effective testing techniques in assessing the quality of input values and test cases. However, it has been neglected by many testers because of the costly techniques it encompasses. This paper conducts a comparative study of four different mutation testing techniques (class-level operators, method-level operators, all operators, and random sampling). The purpose of this research paper is to conduct the most effective and reliable mutation testing technique. To do this, an empirical study on five different java applications is presented and focused on\u00a0\u2026", "num_citations": "7\n", "authors": ["2039"]}
{"title": "RSM: Reducing mutation testing cost using random selective mutation technique\n", "abstract": " Mutation testing has been neglected by researchers because of the high cost associated with the technique. To manage this issue, researchers have developed cost reduction strategies that aim to reduce the overall cost of mutation, while maintaining the effectiveness and the efficiency of testing. The purpose of this research paper is to present a new cost reduction strategy that cuts the cost of mutation testing through reducing the number of mutation operators used. The experimental part of the paper focuses on the implementation of this strategy on five different java applications. The results of the experiment areused to evaluate the efficiency and quantify the savings of our approach compared to two other existing mutation testing strategies.", "num_citations": "5\n", "authors": ["2039"]}
{"title": "Taxonomy Dimensions of Complexity Metrics\n", "abstract": " Over the last several years, software engineers have devoted a great effort to measuring the complexity of computer programs and many software metrics have been introduced. These metrics have been invented for the purpose of identifying and evaluating the characteristics of computer programs. But, most of them have been defined and then tested only in a limited environment. Scientists proposed a set of complexity metrics that address many principles of object oriented software production to enhance and improve software development and maintenance. The aim of this paper is to present taxonomy of complexity metrics that, separately, evaluate structural and dynamic characteristics of size, control flow, and data. While most invented metrics applied to only the method and class levels of complexity, our approach uses metrics on each of the three levels: class, method, and statement.", "num_citations": "4\n", "authors": ["2039"]}
{"title": "Pedagogical Robotics \u2013 A Way to Experiment and Innovate in Educational Teaching in Morocco\n", "abstract": " Over the last decades, robotics in education has emerged as an interdisciplinary, project-based learning activity offering major new benefits to education at all levels. They have become an urgent and essential need for the development of students mind. In this work, we highlight the role of practical pedagogy and consequent educational methodologies while using robotics in school education in Morocco. In this framework, the necessity of shifting from the traditional learning methodology to an approach that gives a great importance on the curricula by integrating robotics in Moroccan school and in training professional teacher are suggested", "num_citations": "3\n", "authors": ["2039"]}
{"title": "An Effective Approach for Transforming Use Cases Specifications into Class Diagram\n", "abstract": " The transition from object-oriented software requirements to design is a crucial activity in the software process. Being the most important diagram of the design phase, class diagram combines the presentation of the components that will provide the solution and their relationships. Class diagram requires much focus and effort to be developed. In order to read the use cases specifications written in natural languages and design the class diagram will provide the intended solution, several software researches made great effort in this matter. This paper suggests the use of natural language processing techniques in order to extract information from the use case specifications and translate these information into a class diagram. The approach will identify the classes, how they are related and will provide information about the internal structure of each class.", "num_citations": "3\n", "authors": ["2039"]}
{"title": "An Alternative Threat Model-based Approach for Security Testing\n", "abstract": " In modern interaction, web applications has gained more and more popularity, which leads to a significate growth of exposure to malicious users and vulnerability attacks. This causes organizations and companies to lose valuable information and suffer from bad reputation. One of the effective mitigation practices is to perform security testing against the application before release it to the market. This solution won't protect web application 100% but it will test the application against malicious codes and reduce the high number of potential attacks on web application. One of known security testing approach is threat modeling, which provides an efficient technique to identify threats that can compromise system security. The authors proposed method, in this paper, focuses on improving the effectiveness of the categorization of threats by using Open 10 Web Application Security Project's (OWASP) that are the most critical\u00a0\u2026", "num_citations": "3\n", "authors": ["2039"]}
{"title": "GUI Regression Test Selection Based on Event Interaction Graph Strategy\n", "abstract": " Testing is an efficient mean for assuring the quality of software. Nowadays, Graphical User Interfaces (GUIs) make up a big part of applications being developed. Within the scope of regression testing, some test cases from the original GUI are usable and others are unusable. This paper presents an algorithm that drops the unusable test cases and creates new test cases based on the main differences between the two GUIs, which are represented as uncovered edges. Furthermore, the algorithm creates a new test suite for the modified version by combining the usable test cases and the new created test cases.", "num_citations": "3\n", "authors": ["2039"]}
{"title": "Roadmap to Testing the Cloud Techniques, Methodology, and Tools\n", "abstract": " Cloud computing has recently received a significant attention and started attracting companies, general users, and developers. With the increase of the popularity of this paradigm, the importance of testing the cloud started to emerge. Many authors came up with paper about testing technologies applied to the cloud, however; there is no clear methodology to follow in order to complete a cloud test. This paper presents an overview of cloud computing, cloud testing techniques and tools. It presents a roadmap to testing the cloud. This consists of a fivestep process to test cloud services in a logical and effective way. This work has for a goal to provide new testers on the cloud with the necessary information to start their test.", "num_citations": "3\n", "authors": ["2039"]}
{"title": "A complexity based regression test selection strategy\n", "abstract": " Software is unequivocally the foremost and indispensable entity in this technologically driven world. Therefore quality assurance, and in particular, software testing is a crucial step in the software development cycle. This paper presents an effective test selection strategy that uses a Spectrum of Complexity Metrics (SCM). Our aim in this paper is to increase the efficiency of the testing process by significantly reducing the number of test cases without having a significant drop in test effectiveness. The strategy makes use of a comprehensive taxonomy of complexity metrics based on the product level (class, method, statement) and its characteristics. We use a series of experiments based on three applications with a significant number of mutants to demonstrate the effectiveness of our selection strategy. For further evaluation, we compareour approach to boundary value analysis. The results show the capability of our approach to detect mutants as well as the seeded errors.", "num_citations": "3\n", "authors": ["2039"]}
{"title": "A Novel Approach for Android Malware Detection and Classification using Convolutional Neural Networks.\n", "abstract": " Malicious software or malware has been growing exponentially in the last decades according to antiviruses vendors. The growth of malware is due to advanced techniques that malware authors are using to evade detection. Hence, the traditional methods that antiviruses vendors deploy are insufficient in protecting people\u2019s digital lives. In this work, an attempt is made to address the problem of mobile malware detection and classification based on a new approach to android mobile applications that uses Convolutional Neural Networks (CNN). The paper suggests a static analysis method that helps in malware detection using malware visualization. In our approach, first, we convert android applications in APK format into gray-scale images. Since malware from the same family has shared patterns, we then designed a machine learning model to classify Android applications as malware or benign based on pattern recognition. The dataset used in this research is a combination of self-made datasets that used public APIs to scan the APK files downloaded from open sources on the internet, and a research dataset provided by the University of New Brunswick, Canada. Using our proposed solution, we achieved an 84.9% accuracy in detecting mobile malware.", "num_citations": "1\n", "authors": ["2039"]}
{"title": "A Comprehensive Technique to Generate and Prioritize Test Case Paths\n", "abstract": " In path-based software testing, the generation and prioritization of test case paths are two major activities on which the cost-effectiveness of the procedure relies. Those two activities can either be performed manually or automatically. This paper introduces a comprehensive technique that aims at automating the test case paths generation and automatization. The control flow graph representation of software program are used as a basis as well as graph traversal algorithms for the generation of paths. For the prioritization activity, three criteria are defined based on previous research of control flow and data flow metrics. A sample program is used through the paper in order to illustrate the techniques developed.", "num_citations": "1\n", "authors": ["2039"]}
{"title": "Testing web applications by unifying Fuzzy and All-Pairs techniques\n", "abstract": " Testing is a primordial activity that certifies the quality of software, which remains an important issue for the majority of applications. Since testing occurs at the end of the software development life cycle, it is usually rushed and not done in the proper way. In addition, the lack of knowledge about the internal structure and source code of applications decreases considerably the number of options available, especially when it comes to testing web applications. This paper proposes an approach that combines Fuzzy testing and All-Pairs testing techniques and maximizes the effectiveness of testing web applications. The hybrid approach called Fuzzy All-Pairs Testing enables us to detect errors and bugs resulting from combinations of classes of inputs. To evaluate our approach, we compared it to Equivalence Partitioning and Boundary Value Analysis using three different websites. Our empirical study showed that our\u00a0\u2026", "num_citations": "1\n", "authors": ["2039"]}
{"title": "Continuous integration testing of web applications by sanitizing program input\n", "abstract": " Software testing is known to be the most difficult and expensive phase of the software development life-cycle. When it comes to testing web based applications, this task is even more difficult because of the peculiarities of such applications. Many techniques and tools have been developed to test web applications and automate the different activities involved in this practice, both for the server side and the client side of the application. However, these tests are performed separately; there exists no such a tool that supports integration testing for web applications where server and client side are combined and tested as a group. In this paper, we provide a method that allows testing both parts at the same time. The aim of this method is to sanitize data sent from the server before it is received by the client. Hence, it ensures that the client receives the right response from the server. It supports teams by applying agile development methods such as continuous integration.", "num_citations": "1\n", "authors": ["2039"]}