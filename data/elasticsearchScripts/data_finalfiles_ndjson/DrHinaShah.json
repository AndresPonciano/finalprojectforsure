{"title": "Understanding exception handling: Viewpoints of novices and experts\n", "abstract": " Several recent studies indicate that many industrial applications exhibit poor quality in the design of exception-handling. To improve the quality of error-handling, we need to understand the problems and obstacles that developers face when designing and implementing exception-handling. In this paper, we present our research on understanding the viewpoint of developers-novices and experts-toward exception-handling. First, we conducted a study with novice developers in industry. The study results reveal that novices tend to ignore exceptions because of the complex nature of exception-handling. Then, we conducted a second study with experts in industry to understand their perspective on exception-handling. The study results show that, for experts, exception-handling is a crucial part in the development process. Experts also confirm the novices' approach of ignoring exception-handling and provide insights as\u00a0\u2026", "num_citations": "81\n", "authors": ["1555"]}
{"title": "Visualization of exception handling constructs to support program understanding\n", "abstract": " This paper presents a new visualization technique for supporting the understanding of exception-handling constructs in Java programs. To understand the requirements for such a visualization, we surveyed a group of software developers, and used the results of that survey to guide the creation of the visualizations. The technique presents the exception-handling information using three views: the quantitative view, the flow view, and the contextual view. The quantitative view provides a high-level view that shows the throw-catch interactions in the program, along with relative numbers of these interactions, at the package level, the class level, and the method level. The flow view shows the type-throw-catch interactions, illustrating information such as which exception types reach particular throw statements, which catch statements handle particular throw statements, and which throw statements are not caught in the\u00a0\u2026", "num_citations": "48\n", "authors": ["1555"]}
{"title": "Why do developers neglect exception handling?\n", "abstract": " In this paper, we explore the problems associated with exception handling from a new dimension: the human. We designed a study that evaluates (1) different perspectives of software developers to understand how they perceive exception handling and what methods they adopt to deal with exception handling constructs, and (2) the usefulness of a visualization tool that we developed in previous work for exception handling. We describe the design of our study, present details about the study's participants, describe the interviews we conducted with the participants, present the results of the study, and discuss what we learned from the study. Based on our analysis, we suggest several future directions, including the proposal of a new role for the software-development process---exception engineer, who works closely with software developers throughout all phases of the software-development life cycle and who\u00a0\u2026", "num_citations": "46\n", "authors": ["1555"]}
{"title": "Studying human and social aspects of testing in a service-based software company: case study\n", "abstract": " This paper presents a case study that reports the findings of a preliminary ethnographic study (35 days of fieldwork over a period of two months) conducted at a service-based software company. The focus of the study was on understanding the human-dimension and social aspects involved in software testing. In this paper, we present the design of the study, our observations, and the analysis of the findings. We also discuss the differences between the senior and junior participants' attitudes towards testing, how the seniors' attitudes influence the juniors' attitudes, and reasons that seem to motivate juniors to work on testing projects. Additionally, we report our findings about the relationship between enthusiasm and responsibility with ownership, the relationship between the developer and test engineer, the communication gaps faced by test engineers in various situations, and how hierarchical structuring in an\u00a0\u2026", "num_citations": "43\n", "authors": ["1555"]}
{"title": "Studying the influence of culture in global software engineering: thinking in terms of cultural models\n", "abstract": " Culture appears to have a greater influence on software-engineering practice than originally envisioned. Many recent studies have reported that cultural factors greatly impact global software-engineering (GSE) practice. However, many of these studies characterize culture as a set of dimensions (eg, Hofstede's), which significantly limits the meaning of culture. In this paper, we discuss the limitations of such a dimensional approach to studying culture by highlighting the aspects of culture that such dimensions fail to capture. Next, we present the idea of thinking of culture in terms of cultural models (inspired by Shore's work), and illustrate this idea by presenting cultural models adopted by the software-engineering domain. Then, based on this idea of cultural models, we present a conceptual reference framework for studying the influence of culture in the global software-engineering setting. Finally, we present some\u00a0\u2026", "num_citations": "30\n", "authors": ["1555"]}
{"title": "Systems and Methods for Visualization of Exception Handling Constructs\n", "abstract": " Disclosed are various embodiments for visualization of exception-handling constructs. In one embodiment, among others, a system includes at least one computing device; a program maintained in a memory accessible to the at least one computing device; and logic executable in the at least one computing device configured to analyze the program to determine exception-handling information; generate a graphical user interface based upon the exception-handling information; and provide the graphical user interface for display on a display device.", "num_citations": "10\n", "authors": ["1555"]}
{"title": "Culture and Testing: What is the Relationship?\n", "abstract": " This paper presents the results of a four-month ethnographically-informed study that we performed at a vendor organization in India to understand how culture influences global software-testing practice. The paper discusses our findings and analysis of software-testing activities conducted by two teams: one working for a Japanese client, the other working for a U.S. client. The findings show the differences in the software-testing approaches of the two teams with respect to team structure, thought processes, expectations, testing focus areas, and trust levels. The analysis suggests that cultural differences (e.g., national, user, and software-developer) are responsible for these differences in testing approaches. The paper describes the study details, our observations about the different testing-approach patterns that the teams adopted, our analysis of the reasons for those differences, and our reflections and suggested\u00a0\u2026", "num_citations": "9\n", "authors": ["1555"]}
{"title": "Exception handling negligence due to intra-individual goal conflicts\n", "abstract": " Despite research to provide support for improving the usage of exception handling in programs, studies show that exception handling is neglected. In previous work, we interviewed novice developers to understand their problems when dealing with exceptions. The results show that these developers gave exception handling low priority and they thought that use of exception handling was forced on them. Thus, developers adopted an ignore-for-now approach for dealing with exceptions. In this paper, we present the results of our investigation of this problem of neglecting exception handling. We conducted a literature study to understand the psychological aspects of the problem that may be affecting the appropriate usage of exception handling in programs. Based on our investigation that was supported by this study, we believe that developers have intra-individual conflicting goals when they are expected to design\u00a0\u2026", "num_citations": "7\n", "authors": ["1555"]}
{"title": "Studying the Influence of Culture on Outsourced, Offshored Software-Testing Practice: An Ethnographic Approach\n", "abstract": " The practice of outsourcing software testing to offshore companies has grown significantly. Moreover, the outsourced, offshored software testing (OOST) practice demands that test engineers at the vendor organization adopt their client's (or potential users') perspective to perform the testing tasks effectively. However, vendor test engineers and clients (users) have different cultures and thus, may have different understandings and expectations. These differences may influence the way testing is performed and thus, impact factors such as the quality of the testing (and product) and productivity. Because recent studies indicate that culture appears to have a greater influence on the outsourced, offshored software-engineering practice than originally envisioned, it is important to study culture's influence on OOST practice. However, most studies on outsourcing and offshoring consider culture in the context of cultural\u00a0\u2026", "num_citations": "4\n", "authors": ["1555"]}
{"title": "Revisiting the Global Software Engineering Terminology\n", "abstract": " Abstract Even though Global Software Engineering (GSE) has been a research topic of interest for many years, some of its ground terminology is still lacking a unified, coherent, and shared definition and/or classification. The purpose of this report is to collect, outline, and relate several fundamental and discussed terms to form an initial body of knowledge. In particular, we define the diverse flavor of the GSE term relating its variations to the business, project, and team perspectives. Furthermore, we provide an overview of the various uses of the terms cooperation, collaboration, coordination, communication, and awareness taken from the Computer-Supported Cooperative Work (CSCW) tradition. This report represents on the one hand a starting point to help stimulate fruitful discussions in the relevant communities with regards to the more controversial and delicate topics, while on the other hand a coherent reference for those readers seeking clarity.", "num_citations": "1\n", "authors": ["1555"]}