{"title": "Synthesized essence: What game jams teach about prototyping of new software products\n", "abstract": " The development of video games comprises engineering teams within various disciplines, eg, software engineering, game production, and creative arts. Game jams are a promising approach for (software+) development projects to foster on new product development. This paper evaluates the concept of game jam, a community design/development activity, and its positive effects on new software product development with tight schedules in time-oriented, competitive environments. Game jams have received more public attention in recent times, but the concept itself has not been formally discussed so far. A game jam is a composition of design and development strategies: new product development, participatory design, lightweight construction, rapid experience prototyping, product-value focusing, aesthetics and technology, concurrent development and multidisciplinarity. Although game jams are normally used for\u00a0\u2026", "num_citations": "90\n", "authors": ["759"]}
{"title": "Improving video game development: Facilitating heterogeneous team collaboration through flexible software processes\n", "abstract": " Based on our observations of Austrian video game software development (VGSD) practices we identified a lack of systematic processes/method support and inefficient collaboration between various involved disciplines, i.e. engineers and artists. VGSD includes heterogeneous disciplines, e.g. creative arts, game/content design, and software. Nevertheless, improving team collaboration and process support is an ongoing challenge to enable a comprehensive view on game development projects. Lessons learned from software engineering practices can help game developers to increase game development processes within a heterogeneous environment. Based on a state of the practice survey in the Austrian games industry, this paper presents (a) first results with focus on process/method support and (b) suggests a candidate flexible process approach based on Scrum to improve VGSD and team\u00a0\u2026", "num_citations": "38\n", "authors": ["759"]}
{"title": "Introduction and challenges of environment architectures for collective intelligence systems\n", "abstract": " Collective Intelligence Systems (CIS), such as wikis, social networks, and content-sharing platforms, are an integral part of today\u2019s collective knowledge creation and sharing processes. CIS are complex adaptive systems, which realize environment-mediated coordination, in particular with stigmergic mechanisms. The behavior of CIS is emergent, as high-level, system-wide behavior is influenced by low-level rules. These rules are encapsulated by the CIS infrastructure that comprises in its center an actor-created artifact network that stores the shared content. In this chapter, we provide an introduction to the CIS domain, CIS architectural principles and processes. Further, we reflect on the role of CIS as multi-agent system (MAS) environments and conclude with an outlook on research challenges for CIS architectures.", "num_citations": "16\n", "authors": ["759"]}
{"title": "Elements of software ecosystem early-stage design for collective intelligence systems\n", "abstract": " User-contribution driven software service platforms like crowdsourcing and social media services represent an efficient way of aggregating and distributing knowledge. However, only little research has been reported on early-stage design of software ecosystems (SECOs) for software service platforms, in particular in the collective intelligence (CI) domain. In this work we analyze needs for CI-centered SECOs leading to new research challenges. We have identified self-organization and feedback mechanisms as essential characteristics in CI-centered SECOs and thus introduce design elements for structuring them properly at an early stage of design. We discuss the concept with a real-world use case from a widely used CI-centered SECO, Wikipedia. A major result is the successful mapping of the design elements to the specific SECO elements.", "num_citations": "15\n", "authors": ["759"]}
{"title": "A survey on the state of the practice in video game software development\n", "abstract": " Video Game Software Development is a promising area of empirical research because our first observations in industry environment identified a lack of a systematic process and method support and rarely conducted/documented studies. Nevertheless, video games-specific types of software products-focus strongly on user interface and game design. Thus, engineering processes, methods for game construction and verification/validation, and best-practices, derived from traditional software engineering, might be applicable in context of video game development. We selected the Austrian games industry as a manageable and promising starting point for systematically capturing the state-of-the practice in Video game development. In this paper we present the survey design and report on the first results of a national survey in the Austrian games industry. The results of the survey showed that the Austrian games industry is organized in a set of small and young studios with the trend to ad-hoc and flexible development processes and limitations in systematic method support.", "num_citations": "13\n", "authors": ["759"]}
{"title": "SIS: an architecture pattern for collective intelligence systems\n", "abstract": " Collective intelligence systems (CIS) like social networking services, wikis and social media platforms have influenced the way how people create knowledge and share information. An important aspect of these systems is how they mediate interaction and coordination among their user base. In this paper we report the Stigmergic Information System (SIS) architecture pattern that can be used by software architects to describe a wide range of CIS on a systemic level. The SIS pattern builds upon the nature-inspired coordination mechanism of stigmergy, which enables indirect communication of agents via traces in the environment. The SIS pattern describes a hybrid human-computer system where humans collectively create and share knowledge and thereby a virtual artifact network is growing that is managed by a reactive/adaptive computing infrastructure. The SIS pattern aims to support software architects to take\u00a0\u2026", "num_citations": "12\n", "authors": ["759"]}
{"title": "A first account on stigmergic information systems and their impact on platform development\n", "abstract": " Modern software platforms often depend on networks of user-generated content. Although such platforms are very popular, their architectural concepts and underlying system dynamics are not yet fully understood. This paper uses stigmergy, a form of indirect communication and self-organization, as basis for framing certain groups of software services in order to propose an architectural concept of stigmergic information systems and describe identified key fields (actor base, architecture, software ecosystem) influencing them. Thus enabling the creation of better solution stack configurations needed to support effective and efficient development of such services.", "num_citations": "12\n", "authors": ["759"]}
{"title": "Towards a coordination-centric architecture metamodel for social web applications\n", "abstract": " Social web applications like wikis, social networks, and crowdsourcing markets have provided people with new dynamic forms of communication and collaboration. Although communities have widely adopted these systems, the methodological support for their architecting is still at the beginning. Since social web applications are mediation environments for human interaction, environment-based coordination models like stigmergy have increased in relevance. Therefore, we propose the concept of a Stigmergic Information System (SIS) architecture metamodel, which embeds a stigmergy-like coordination model. The metamodel defines key system elements and organizes a system into four layers: agent, artifact data, analysis & control and workflow. The metamodel should support the systematic investigation of common architecture elements, their relations and interdependencies, and future approaches for\u00a0\u2026", "num_citations": "8\n", "authors": ["759"]}
{"title": "Towards collective intelligence system architectures for supporting multi-disciplinary engineering of Cyber-physical production systems\n", "abstract": " The engineering process of Cyber-Physical Production Systems (CPPS) involves collaboration of multiple engineering disciplines. Major obstacles arising from these multi-disciplinary engineering processes are heterogeneous representations, weak accumulation and integration of dispersed, local engineering knowledge, and required effective coordination between multi-disciplinary engineering teams across the organization. Further, heterogeneous communication channels lead to increased information sharing effort for individual team members, ill-structured knowledge representation and management, and poor discoverability of business-critical know-how. These challenges can be addressed by Collective Intelligence Systems (CIS) that enhance engineering methods and tools in large, multi-disciplinary projects. CIS help to identify important implicit, hard-to-access dispersed information and engineering\u00a0\u2026", "num_citations": "6\n", "authors": ["759"]}
{"title": "Major variants of the SIS architecture pattern for collective intelligence systems\n", "abstract": " Collective Intelligence Systems (CIS), such as social networking services, wikis, and media sharing platforms, access and harness the collective knowledge of connected people by providing a web-based environment to share, distribute, and retrieve topic-specific information in an efficient way. In order to design well-tailored CIS, software architects need a complete understanding about (1) architectural principles that all kinds of CIS have in common, and (2) system variants in the field. Thus to provide consolidated systematic knowledge of architectural commonalities and variations in the CIS domain, we present in this work five major pattern variants of CIS. We investigated a number of CIS in the field with focus on a detailed survey of existing variants among key architecture-significant principles based on previously identified basic concepts, principles, and characteristics of software architectures that all CIS have\u00a0\u2026", "num_citations": "5\n", "authors": ["759"]}
{"title": "Software Architecture Patterns: Reflection and Advances: [Summary of the MiniPLoP Writers' Workshop at ECSA'14]\n", "abstract": " Architectural software patterns capture successful designs for recurring problems in software architecture. For the first time, a workshop in the tradition of the software-pattern conference series (e.g. PLoP, EuroPLoP) was held jointly with the European Conference on Software Architecture (ECSA 2014) in Vienna, Austria. The main objective of this workshop called MiniPLoP was to bring software architecture researchers closer to the pattern community and to introduce the writers' workshop format to them. Writers' workshop at PLoP conferences provide authors of pattern papers with high-density feedback given by peers within a limited timeframe. In addition, our workshop provided a forum to reect on the state of software architecture patterns and to discuss advances pattern research. This report contains an extended keynote abstract and summaries of the papers discussed during the workshop.", "num_citations": "4\n", "authors": ["759"]}
{"title": "Collective intelligence-based quality assurance: combining inspection and risk assessment to support process improvement in multi-disciplinary engineering\n", "abstract": " In Multi-Disciplinary Engineering (MDE) environments, engineers coming from different disciplines have to collaborate. Typically, individual engineers apply isolated tools with heterogeneous data models and strong limitations for collaboration and data exchange. Thus, projects become more error-prone and risky. Although Quality Assurance (QA) methods help to improve individual engineering artifacts, results and experiences from previous activities remain unused. This paper describes a Collective Intelligence-Based Quality Assurance (CI-Based QA) approach that combines two established QA approaches, i.e., (Software) Inspection and the Failure Mode and Effect Analysis (FMEA), supported by a Collective Intelligence System (CIS) to improve engineering artifacts and processes based on reusable experience. CIS can help to bridge the gap between inspection and FMEA by collecting and\u00a0\u2026", "num_citations": "3\n", "authors": ["759"]}
{"title": "Collective intelligence aspects of cyber-physical social systems: results of a systematic mapping study\n", "abstract": " Cyber-physical systems (CPS) are systems that span the physical and cyber-world by linking objects and process from these spaces (see Fig 1). In a typical CPS data is collected from the physical world via sensors and computation resources from the cyber-space are used to integrate and analyze this data in order to decide on optimal feedback processes which can be put in place by physical actuators. CPS have started to diffuse into many areas, including mission-critical public transportation, energy services, and industrial production and manufacturing processes. While CPS affect the lives of people that rely on them on a daily basis, they so far only interact with humans as passive consumers. The results of a recent study about adaptation in CPS [Musil et al. 2017] revealed an emerging trend to add an additional \u201csocial\u201d layer in a CPS architecture to address human and social factors (see Fig 1). This trend shows the growing recognition of the importance of the social dimension of such CPS and of the need to evolve them into cyber-physical social systems (CPSS)[Wang 2010]. CPSS consist not only of software and raw sensing and actuating hardware, but are fundamentally grounded in the behaviour of human actors, who both generate data Fig. 1: CPSS example: smart transportation system and make informed decisions based on data [Guo et al. 2015; Cassandras 2016; Xiong et al. 2015]. As CPSS extend CPS with a social dimension, the question of the relation between CPSS and selforganizational, crowd-powered systems and Collective Intelligence (CI) systems naturally arises. What are the characteristics of the social component\u00a0\u2026", "num_citations": "2\n", "authors": ["759"]}