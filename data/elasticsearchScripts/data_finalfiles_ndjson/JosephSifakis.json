{"title": "Specification and verification of concurrent systems in CESAR\n", "abstract": " The aim of this paper is to illustrate by an example, the alternating bit protocol, the use of CESAR, an interactive system for aiding the design of distributed applications.             CESAR allows the progressive validation of the algorithmic description of a system of communicating sequential processes with respect to a given set of specifications. The algorithmic description is done in a high level language inspired from CSP and specifications are a set of formulas of a branching time logic, the temporal operators of which can be computed iteratively as fixed points of monotonic predicate transformers. The verification of a system consists in obtaining by automatic translation of its description program an Interpreted Petri Net representing it and evaluating each formula of the specifications.", "num_citations": "2169\n", "authors": ["1580"]}
{"title": "On the synthesis of discrete controllers for timed systems\n", "abstract": " This paper presents algorithms for the automatic synthesis of real-time controllers by finding a winning strategy for certain games defined by the timed-automata of Alur and Dill. In such games, the outcome depends on the players' actions as well as on their timing. We believe that these results will pave the way for the application of program synthesis techniques to the construction of real-time embedded systems from their specifications.", "num_citations": "707\n", "authors": ["1580"]}
{"title": "Use of Petri nets for performance evaluation\n", "abstract": " Petri nets [1],[2] have been found a simple and elegant formalism for the description of asynchronous systems with concurrent evolutions. According to the adopted interpretation, they can be used to model flow phenomena of information, of energy and of materials [3],[4] and [5]. However, this model is not complete enough for the study of system performances since no assumption is made about the firing of a transition as far as its duration and the moment at which it takes place after the transition has been enabled.Timed Petri nets have been introduced by C. Ramchandani [6] by associating firing times to the transitions of Petri nets. He studied the steady'state behavior and gave methods for calculating the throughput rate for certain classes of Petri nets. The results given in this paper are applicable to the class of pure [7] Petri nets and generalize, in some sense, those presented in [6]. The litt\u00e9rature on timed Petri nets is very poor: to the author's knowledge, the only works on this subjet are the Ramchandani's thesis and a paper by S. Ghosh [8] comparing the properties of boundedness and liveness for timed Petri nets and unrestricted Petri nets.", "num_citations": "496\n", "authors": ["1580"]}
{"title": "The embedded systems design challenge\n", "abstract": " We summarize some current trends in embedded systems design and point out some of their characteristics, such as the chasm between analytical and computational models, and the gap between safety-critical and best-effort engineering practices. We call for a coherent scientific foundation for embedded systems design, and we discuss a few key demands on such a foundation: the need for encompassing several manifestations of heterogeneity, and the need for constructivity in design. We believe that the development of a satisfactory Embedded Systems Design Science provides a timely challenge and opportunity for reinvigorating computer science.", "num_citations": "461\n", "authors": ["1580"]}
{"title": "An overview and synthesis on timed process algebras\n", "abstract": " We present an overview and synthesis of existing results about process algebras for the specification and analysis of timed systems. The motivation is double: present an overview of some relevant and representative approaches and suggest a unifying framework for them.             After presenting fundamental assumptions about timed systems and the nature of abstract time, we propose a general model for them: transition systems whose labels are either elements of a vocabulary of actions or elements of a time domain. Many properties of this model are studied concerning their impact on description capabilities and on realisability issues.             An overview of the language features of the process algebras considered is presented, by focusing on constructs used to express time constraints. The presentation is organised as an exercise of building a timed process algebra from a standard process algebra for\u00a0\u2026", "num_citations": "450\n", "authors": ["1580"]}
{"title": "The algebra of timed processes, ATP: Theory and application\n", "abstract": " The algebra of timed processes, ATP, uses a notion of discrete global time and suggests a conceptual framework for introducing time by extending untimed languages. The action vocabularly of ATP contains a special element representing the progress of time. The algebra has, apart from standard operators of process algebras such as prefixing by an action, alternative choice, and parallel composition, a primitive unit-delay operator. For two arguments, processes P and Q, this operator gives a process which behaves as P before the execution of a time event and behaves as Q afterwards. It is shown that several d-unit delay constructs such as timeouts and watchdogs can be expressed in terms of the unit-delay operator and standard process algebra operators. A sound and complete axiomatization for bisimulation semantics is studied and two examples illustrating the adequacy of the language for the description of\u00a0\u2026", "num_citations": "340\n", "authors": ["1580"]}
{"title": "Composition for component-based modeling\n", "abstract": " We propose a framework for component-based modeling using an abstract layered model for components. A component is the superposition of two models: a behavior model and an interaction model. Interaction models describe architectural constraints induced by connectors between components.We propose and analyze general requirements for component composition that motivated and guided the development of the framework. We define an associative and commutative composition operator on components encompassing heterogeneous interaction. As a particular instance of the proposed framework, we consider components where behavior models are transition systems and interaction models are described by priority relations on interactions. This leads to a concept of \u201cflexible\u201d composition different from usual composition in that it preserves deadlock-freedom and is appropriate for correctness by\u00a0\u2026", "num_citations": "329\n", "authors": ["1580"]}
{"title": "The algebra of connectors\u2014structuring interaction in BIP\n", "abstract": " We provide an algebraic formalization of connectors in the BIP component framework. A connector relates a set of typed ports. Types are used to describe different modes of synchronization, in particular, rendezvous and broadcast. Connectors on a set of ports P are modeled as terms of the algebra AC(P), generated from P by using a binary fusion operator and a unary typing operator. Typing associates with terms (ports or connectors) synchronization types - trigger or synchron - that determine modes of synchronization. Broadcast interactions are initiated by triggers. Rendezvous is a maximal interaction of a connector that includes only synchrons. The semantics of AC(P) associates with a connector the set of its interactions. It induces on connectors an equivalence relation which is not a congruence as it is not stable for fusion. We provide a number of properties of AC(P) used to symbolically simplify and handle\u00a0\u2026", "num_citations": "253\n", "authors": ["1580"]}
{"title": "The discipline of embedded systems design\n", "abstract": " The wall between computer science and electrical engineering has kept the potential of embedded systems at bay. It is time to build a new scientific foundation with embedded systems design as the cornerstone, which will ensure a systematic and even-handed integration of the two fields. The embedded systems design problem certainly raises technology questions, but more important, it requires building a new scientific foundation that will systematically and even-handedly integrate computation and physicality from the bottom up. Support for this foundation will require enriching computer science paradigms to encompass models and methods traditionally found in electrical engineering.", "num_citations": "245\n", "authors": ["1580"]}
{"title": "Modeling urgency in timed systems\n", "abstract": " Timed systems can be modeled as automata (or, generally, discrete transition structures) extended with real-valued variables (clocks) measuring the time elapsed since their initialization. The following features are also common in the above models.                                     States are associated with time progress conditions specifying how time can advance. Time can progress at a state by t only if all the intermediate states reached satisfy the associated time progress condition.                                                     At transitions, clock values can be tested and modified. This is usually done by associating with transitions guards (conditions on clocks) and assignments. If a guard is true from an automaton state and a given clock valuation, the corresponding transition can be executed by modifying clocks as specified by the corresponding assignment.", "num_citations": "244\n", "authors": ["1580"]}
{"title": "Fairness and related properties in transition systems\u2014a temporal logic to deal with fairness\n", "abstract": " In this paper we propose a notion of fairness for transition systems and a logic for proving properties under the fairness assumption corresponding to this notion.               We start from an informal characterization of the unfairness as the situation where some event becomes possible infinitely often but has only a finite number of occurrences, which induces various definitions of fairness by considering different classes of events. It results from the comparison of these definitions that the concept of fairness which is useful is \u201cfair reachability\u201d of a given set of states P in a system, i.e. reachability of states of P when considering only the computations such that if, during their execution, reaching states of P is possible infinitely often, then states of P are visited infinitely often.               This definition of fairness suggests the introduction of a branching time logic FCL, the temporal operators of which express, for a given set\u00a0\u2026", "num_citations": "238\n", "authors": ["1580"]}
{"title": "Performance evaluation of systems using nets\n", "abstract": " This paper presents a method for computing firing frequencies corresponding to steady state functionings of Timed Place-Transition Nets (TPIN). Two different models of TPIN's \u2014 the one with delays associated to its places and the other with delays associated to its transitions \u2014 are compared and proved to be equivalent. Given a TPIN it is provided a set of relations established between its initial marking, the firing frequences of its transitions and the delays associated to its places. Furthermore, for given initial marking and delays it is shown that maximal firing frequencies can be computed as solutions of a set of n linear equations, where n is the number of places of the TPIN. The presented results are illustrated by two applications.", "num_citations": "227\n", "authors": ["1580"]}
{"title": "Compilation and verification of LOTOS specifications.\n", "abstract": " The ISO specification language Lotos is a Formal Description Technique for concurrent systems. This paper presents the main features of the C\u00e6sar system, intended for formal verification of Lotos specifications by model-checking. This tool compiles a subset of Lotos into extended Petri Nets, then into state graphs, which can be verified by using either temporal logics or automata equivalences. The design choices and the principles of functioning of C\u00e6sar are described and compared to those of other Lotos tools. The paper also proposes ideas to deal with the state explosion problem arising in verification by model-checking.", "num_citations": "182\n", "authors": ["1580"]}
{"title": "Embedded systems design: the ARTIST roadmap for research and development\n", "abstract": " Embedded systems now include a very large proportion of the advanced products designed in the world, spanning transport (avionics, space, automotive, trains), electrical and electronic appliances (cameras, toys, televisions, home appliances, audio systems, and cellular phones), process control (energy production and distribution, factory automation and optimization), telecommunications (satellites, mobile phones and telecom networks), and security (e-commerce, smart cards), etc. The extensive and increasing use of embedded systems and their integration in everyday products marks a significant evolution in information science and technology. We expect that within a short timeframe embedded systems will be a part of nearly all equipment designed or manufactured in Europe, the USA, and Asia. There is now a strategic shift in emphasis for embedded systems designers: from simply achieving feasibility, to achieving optimality. Optimal design of embedded systems means targeting a given market segment at the lowest cost and delivery time possible. Optimality implies seamless integration with the physical and electronic environment while respecting real-world constraints such as hard deadlines, reliability, availability, robustness, power consumption, and cost. In our view, optimality can only be achieved through the emergence of embedded systems as a discipline in its own right.", "num_citations": "180\n", "authors": ["1580"]}
{"title": "Scheduler modeling based on the controller synthesis paradigm\n", "abstract": " The controller synthesis paradigm provides a general framework for scheduling real-time applications. Schedulers can be considered as controllers of the applications; they restrict their behavior so that given scheduling requirements are met. We study a modeling methodology based on the controller synthesis paradigm. The methodology allows to get a correctly scheduled system from timed models of its processes in an incremental manner, by application of composability results which simplify schedulability analysis. It consists in restricting successively the system to be scheduled by application of constraints defined from scheduling requirements. The latter are a conjunction of schedulability requirements that express timing properties of the processes and policy requirements about resource management. The presented methodology allows a unified view of scheduling theory and approaches based on\u00a0\u2026", "num_citations": "160\n", "authors": ["1580"]}
{"title": "A framework for component-based construction\n", "abstract": " We present an overview of results developed mainly at Verimag, by the author and his colleagues, on a framework for component-based construction, characterized by the following: the behavior of atomic components is represented by transition systems; components are built from a set of atomic components by using \"glue\" operators; for each component, it is possible to separate its behavior from its structure, due to specific properties of glue operators. We show an instance of this framework, which combines two independent classes of glue operators, interaction models and priorities. The combination of interaction models and priorities is expressive enough to encompass heterogeneous interaction and execution. We show that separation between behavior and structure is instrumental for correctness-by-construction. Finally, we discuss new research problems related to a structure-dependent notion of\u00a0\u2026", "num_citations": "155\n", "authors": ["1580"]}
{"title": "A unified approach for studying the properties of transition systems\n", "abstract": " In this paper a systematic method for generating, comparing and proving the properties of transition systems is presented. It is assumed that any property of a system can be defined by giving a set of \u2018target\u2019 states and a type of reachability. Ten different types of reachability are proposed; by appropriately choosing the set of target states, a family of ten potentially different properties is generated. The main conclusion is that the reachability types and therefore the system properties, can be characterized by simple relations involving the set of the possible initial states and fixed points of certain continuous predicate trasformers depending on the set of target states. As a consequence, in order to prove a given property it is sufficient to compute iteratively greatest or least fixed points of continuous predicate transformers.Some examples are presented which show how the results can be applied to prove the properties of\u00a0\u2026", "num_citations": "144\n", "authors": ["1580"]}
{"title": "A toolbox for the verification of LOTOS programs\n", "abstract": " This paper presents the tools ALDEBARAN, CRSAR, CESAR. ADT and CL fiOPilTRE which constitute a toolbox for compiling and verifying LOTOS programs. The principles of these tools are described, as well as their performances and limitations. Finally, the formal verification of the rel/REL atomic multicast protocol is given as an example to illustrate the practical use of the toolbox.", "num_citations": "143\n", "authors": ["1580"]}
{"title": "Structural properties of Petri nets\n", "abstract": " Several necessary conditions for structural liveness and a necessary and sufficient condition for structural boundedness are given. These conditions can be verified by using techniques of linear algebra and could be used for proving liveness and boundedness depending on a given marking. Structural boundedness and liveness are related to the existence of deadlocks traps absorbers and generators of a special type in a PN. A necessary condition for a PN to be structurally bounded and live is that it be both invariant and consistent. Thus invariance and consistency, which imply also the strong connexity of the graphic representation, are necessary conditions for evitating pathological situations such as structural unboundedness and structural unliveness.", "num_citations": "129\n", "authors": ["1580"]}
{"title": "A notion of glue expressiveness for component-based systems\n", "abstract": " Comparison between different formalisms and models is often by flattening structure and reducing them to behaviorally equivalent models e.g. automaton and Turing machine. This leads to a notion of expressiveness which is not adequate for component-based systems where separation between behavior and coordination mechanisms is essential. The paper proposes a notion of glue expressiveness for component-based frameworks characterizing their ability to coordinate components.               Glue is a closed under composition set of operators mapping tuples of behavior into behavior. Glue operators preserve behavioral equivalence. They only restrict the behavior of their arguments by performing memoryless coordination.               Behavioral equivalence induces an equivalence on glue operators. We compare expressiveness of two glues G                 1 and G                 2 by considering whether glue\u00a0\u2026", "num_citations": "126\n", "authors": ["1580"]}
{"title": "Verification in Xesar of the sliding window protocol\n", "abstract": " Verification in XESAR of the Sliding Window Protocol | Proceedings of the IFIP WG6.1 Seventh International Conference on Protocol Specification, Testing and Verification VII ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of the IFIP WG6.Seventh International Conference on Protocol Specification, Testing and Verification VIIVerification in XESAR of the Sliding Window Protocol Article Verification in XESAR of the Sliding Window Protocol Share on Authors: Jean-Luc Richier View Profile , Carlos Rodriguez View Profile , Joseph Sifakis View Profile , Jacques Voiron View Profile Authors Info & Affiliations \u2026", "num_citations": "117\n", "authors": ["1580"]}
{"title": "An algebraic framework for urgency\n", "abstract": " A sub-class of timed automata known as timed automata with deadlines was presented. Parallel composition and other operators were defined according to'orthogonality'principal, for timed process algebras and hybrid automata. The compositional description methods that are based on'flexible'composition rules that relax urgency constraints to preserve time reactivity was also studied.", "num_citations": "103\n", "authors": ["1580"]}
{"title": "Model-based implementation of real-time applications\n", "abstract": " Correct and efficient implementation of general real-time applications remains by far an open problem. A key issue is meeting timing constraints whose satisfaction depends on features of the execution platform, in particular its speed. Existing rigorous implementation techniques are applicable to specific classes of systems eg with periodic tasks, time deterministic systems.", "num_citations": "86\n", "authors": ["1580"]}
{"title": "Modeling real-time systems\u2014Challenges and work directions\n", "abstract": " The evolution of information sciences and technologies is characterized by the extensive integration of embedded components in systems used in various application areas, from telecommunications to automotive, manufacturing, medical applications, e-commerce etc. In most cases, embedded components are real-time systems that continuously interact with other systems and the physical world. Integration and continuous interaction of software and hardware components makes the assurance of global quality a major issue in system design. The failure of a component may have catastrophic consequences on systems performance, security, safety, availability etc.", "num_citations": "73\n", "authors": ["1580"]}
{"title": "Property preserving homomorphisms of transition systems\n", "abstract": " We study functions preserving properties of transition systems described by formulas of a logic.             Let L be a logic for which transition systems constitute a class of models. A formula F of L defines for a given transition system S and interpretation i, a property ; a state q of S satisfies the property represented by F iff                                                                     . Given two transition systems S1 and S2 with sets of states respectively Q1 and Q2 and a function f, f : 2Q 1\u21922Q 2, we say that f preserves the property represented by F iff                                                                                   The results presented concern the characterization of functions f which preserve properties independently of the particular choice of S1 and S2 provided that the transition systems be related via homomorphisms of a certain type.", "num_citations": "69\n", "authors": ["1580"]}
{"title": "Incremental component-based construction and verification of a robotic system\n", "abstract": " Autonomous robots are complex systems that require the interaction/cooperation of numerous heterogeneous software components. Nowadays, robots are critical systems and must meet safety properties including in particular temporal and real-time constraints. We present a methodology for modeling and analyzing a robotic system using the BIP component framework integrated with an existing framework and architecture, the LAAS Architecture for Autonomous System, based on G en o M. The BIP componentization approach has been successfully used in other domains. In this study, we show how it can be seamlessly integrated in the preexisting methodology. We present the componentization of the functional level of a robot, the synthesis of an execution controller as well as validation techniques for checking essential \u201csafety\u201d properties.", "num_citations": "68\n", "authors": ["1580"]}
{"title": "Using BIP for modeling and verification of networked systems--a case study on tinyos-based networks\n", "abstract": " We apply a model construction methodology to TinyOS- based networks, using the behavior-interaction-priority (BIP) component framework. The methodology consists in building the model of a node as the composition of a model extracted from a nesC program describing the application, and models of TinyOS components. Models for networks are obtained by composition of models for nodes by using BIP connectors implementing different types of radio chan- nels. This opens the way for enhanced analysis and early error detection by using verification techniques.", "num_citations": "66\n", "authors": ["1580"]}
{"title": "On the composition of hybrid systems\n", "abstract": " Concurrent systems can be usually specified as systems of communicating processes obtained by composing sequential processes by means of binary parallel composition operators. The latter express process interaction in terms of action composition. Their semantics is usually defined by two types of rules.", "num_citations": "66\n", "authors": ["1580"]}
{"title": "Causal semantics for the algebra of connectors\n", "abstract": " The Algebra of Connectors  is used to model structured interactions in the BIP component framework. Its terms are connectors, relations describing synchronization constraints between the ports of component-based systems. Connectors are structured combinations of two basic synchronization protocols between ports: rendezvous and broadcast.               In a previous paper, we have studied interaction semantics for  which defines the meaning of connectors as sets of interactions. This semantics reduces broadcasts into the set of their possible interactions and thus blurs the distinction between rendezvous and broadcast. It leads to exponentially complex models that cannot be a basis for efficient implementation. Furthermore, the induced semantic equivalence is not a congruence.               For a subset of , we propose a new causal semantics that does not reduce broadcast into a set of rendezvous and\u00a0\u2026", "num_citations": "63\n", "authors": ["1580"]}
{"title": "Synchronized Petri nets: A model for the description of non-autonomous sytems\n", "abstract": " We introduce and study the functioning of non-autonomous Petri Nets (PN). The Synchronized Petri Nets (SPN) are defined as being PN's such that transition finings are synchronized on the occurrences of external events. We show that the nesults concerning the verification of characteristic properties (eive, bounded, persistent) by autonomous PN's are only partially valid for this mode of functioning. The model of Labeled SPN is proposed and studied as a tool for the description and analysis of non-autonomous systems.", "num_citations": "62\n", "authors": ["1580"]}
{"title": "D-finder 2: Towards efficient correctness of incremental design\n", "abstract": " D-Finder                 2 is a new tool for deadlock detection in concurrent systems based on effective invariant computation to approximate the effects of interactions among modules. It is part of the BIP framework, which provides various tools centered on a component-based language for incremental design. The presented tool shares its theoretical roots with a previous implementation, but was completely rewritten to take advantage of a new version of BIP and various new results on the theory of invariant computation. The improvements are demonstrated by comparison with previous work and reports on new results on a practical case study.", "num_citations": "61\n", "authors": ["1580"]}
{"title": "Component-based construction of deadlock-free systems\n", "abstract": " We propose a framework for building deadlock-free systems from deadlock-free components. The framework is based on a methodology for the layered construction of systems by superposing three layers. A layer of components, an interaction model and a restriction layer. The interaction model specifies the possible interactions between components. The restriction layer restricts the behavior of the two lower layers by a global constraint. Layered structuring allows separating three orthogonal aspects in system construction. Apart from its methodological interest it makes technically possible the definition of a unique and powerful associative composition operator.               We study sufficient deadlock-freedom conditions for systems built from deadlock-free components and given interaction model and restriction. We also provide a sufficient condition for individual deadlock-freedom of the components of such\u00a0\u2026", "num_citations": "61\n", "authors": ["1580"]}
{"title": "Priority systems\n", "abstract": " We present a framework for the incremental construction of deadlock-free systems meeting given safety properties. The framework borrows concepts and basic results from the controller synthesis paradigm by considering a step in the construction process as a controller synthesis problem.             We show that priorities are expressive enough to represent restrictions induced by deadlock-free controllers preserving safety properties. We define a correspondence between such restrictions and priorities and provide compositionality results about the preservation of this correspondence by operations on safety properties and priorities. Finally, we provide an example illustrating an application of the results.", "num_citations": "61\n", "authors": ["1580"]}
{"title": "A vision for computer science\u2014the system perspective\n", "abstract": " Computer Science is a young discipline. Its foundations were laid in 1936 by the seminal work of AM Turing and K. G\u00f6del. Its scope and focus have changed continuously over the past seven decades. The first computers ran numerical software for defense applications. In the 70\u2019s, the advent of mainframe computers broadened the scope to include commercial applications. In parallel, large-scale circuit integration allowed exponential increases in computing power (Moore\u2019s law). In the 80\u2019s, the convergence between information technologies and telecommunications opened the way for the Internet, the Web and the Information Society. In the 90\u2019s, another very important, but less visible, revolution started with the dissemination of embedded systems technologies. More than 95% of the chips produced today are for embedded applications. These are electronic components integrating software and hardware jointly\u00a0\u2026", "num_citations": "56\n", "authors": ["1580"]}
{"title": "A methodology for the construction of scheduled systems\n", "abstract": " We study a methodology for constructing scheduled systems by restricting successively the behavior of the processes to be scheduled. Restriction is used to guarantee the satisfaction of two types of constraints: schedulability constraints characterizing timing properties of the processes, and constraints characterizing particular scheduling algorithms including process priorities, non-idling, and preemption.               The methodology is based on a controller synthesis paradigm. The main results deal with the characterization of scheduling policies as safety constraints and the simplification of the synthesis process by applying a composability principle.", "num_citations": "56\n", "authors": ["1580"]}
{"title": "Rigorous system design\n", "abstract": " We advocate rigorous system design as a coherent and accountable model-based process leading from requirements to implementations. We present the state of the art in system design, discuss its current limitations, and identify possible avenues for overcoming them. A rigorous system design flow [3] is defined as a formal accountable and iterative process composed of steps, and based on four principles:(1) separation of concerns;(2) component-based construction;(3) semantic coherency; and (4) correctness-by-construction. We show that the combined application of these principles allows the definition of rigorous design flows clearly identifying where human intervention and ingenuity are needed to resolve design choices, as well as activities that can be supported by tools to automate tedious and error-prone tasks. An implementable system model is progressively derived by source-to-source automated\u00a0\u2026", "num_citations": "55\n", "authors": ["1580"]}
{"title": "A general framework for architecture composability\n", "abstract": " Architectures depict design principles: paradigms that can be understood by all, allow thinking on a higher plane and avoiding low-level mistakes. They provide means for ensuring correctness by construction by enforcing global properties characterizing the coordination between components. An architecture can be considered as an operator A that, applied to a set of components , builds a composite component  meeting a characteristic property . Architecture composability is a basic and common problem faced by system designers. In this paper, we propose a formal and general framework for architecture composability based on an associative, commutative and idempotent architecture composition operator . The main result is that if two architectures A                         1 and A                         2 enforce respectively safety properties  and , the architecture  enforces the property \u00a0\u2026", "num_citations": "53\n", "authors": ["1580"]}
{"title": "Priority scheduling of distributed systems based on model checking\n", "abstract": " Priorities are used to control the execution of systems to meet given requirements for optimal use of resources, e.g., by using scheduling policies. For distributed systems it is hard to find efficient implementations for priorities; because they express constraints on global states, their implementation may incur considerable overhead.               Our method is based on performing model checking for knowledge properties. It allows identifying where the local information of a process is sufficient to schedule the execution of a high priority transition. As a result of the model checking, the program is transformed to react upon the knowledge it has at each point. The transformed version has no priorities, and uses the gathered information and its knowledge to limit the enabledness of transitions so that it matches or approximates the original specification of priorities.", "num_citations": "53\n", "authors": ["1580"]}
{"title": "Hybrid systems\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "52\n", "authors": ["1580"]}
{"title": "On the construction of live timed systems\n", "abstract": " We present a method that allows to guarantee liveness by construction of a class of timed systems. The method is based on the use of a set of structural properties which can be checked locally at low cost. We provide sufficient conditions for liveness preservation by parallel composition and priority choice operators. The latter allow to restrict a system\u2019s behavior according to a given priority order on its actions.               We present several examples illustrating the use of the results, in particular for the construction of live controllers.", "num_citations": "46\n", "authors": ["1580"]}
{"title": "Deadlocks and livelocks in transition systems\n", "abstract": " In this paper we study the concepts of deadlock and livelock and give a method for proving the system properties related to these concepts.The model used, transition systems, is a highly abstract relational model with a few primitive notions such as those of state and transition (action) which are at the base of any discrete model. The advantage of using such a primitive model, as far as the clarity of presentation and the generality of the results are concerned, is now widely recognized especially when studying the properties of parallel systems [KEL72]~ KEL76][KW077][KWO79][ROS76].", "num_citations": "45\n", "authors": ["1580"]}
{"title": "Configuration logics: Modeling architecture styles\n", "abstract": " We study a framework for the specification of architecture styles as families of architectures involving a common set of types of components and coordination mechanisms. The framework combines two logics: 1) interaction logics for the specification of architectures as generic coordination schemes involving a configuration of interactions between typed components; and 2) configuration logics for the specification of architecture styles as sets of interaction configurations. The presented results build on previous work on architecture modeling in BIP. We show how propositional interaction logic can be extended into a corresponding configuration logic by adding new operators on sets of interaction configurations. In addition to the usual set-theoretic operators, configuration logic is equipped with a coalescing operator + to express combination of configuration sets. We provide a complete axiomatization of propositional\u00a0\u2026", "num_citations": "42\n", "authors": ["1580"]}
{"title": "Relating time progress and deadlines in hybrid systems\n", "abstract": " Time progress conditions in hybrid systems are usually specified in terms of invariants, predicates characterizing states where time can continuously progress or dually, deadline conditions, predicates characterizing states where time progress immediately stops. The aim of this work is the study of relationships between general time progress conditions and these generated by using state predicates. It is shown that using deadline conditions or invariants allows to characterize all practically interesting time progress conditions. The study is performed by using a Galois connection between the corresponding lattices. We provide conditions for the connection to be a homomorphism and apply the results to the compositional description of hybrid systems.", "num_citations": "42\n", "authors": ["1580"]}
{"title": "Architecture-based design: A satellite on-board software case study\n", "abstract": " In this case study, we apply the architecture-based design approach to the control software of the CubETH satellite. Architectures are a means for ensuring global coordination properties and thus, achieving correctness of complex systems by construction. We illustrate the following three steps of the design approach: (1) definition of a domain-specific taxonomy of architecture styles; (2) design of the software model by applying architectures to enforce the required properties; (3) deadlock-freedom analysis of the resulting model. We provide a taxonomy of architecture styles for satellite on-board software, formally defined by architecture diagrams in the BIP component-based framework. We show how architectures are instantiated from the diagrams and applied to a set of atomic components. Deadlock-freedom of the resulting model is verified using DFinder from the BIP tool-set. We provide additional\u00a0\u2026", "num_citations": "39\n", "authors": ["1580"]}
{"title": "Towards validated real-time software\n", "abstract": " We present a tool for the design and validation of embedded real time applications. The tool integrates two approaches: the use of the synchronous programming language, ESTEREL for design, and the application of model checking techniques for validation of real time properties. Validation is carried out on a global formal model (timed automata) taking into account the effective implementation of the application on the target hardware architecture as well as its external environment behavior.", "num_citations": "38\n", "authors": ["1580"]}
{"title": "Le contr\u00f4le des syst\u00e8mes asynchrones: concepts, propri\u00e9t\u00e9s, analyse statique\n", "abstract": " Hypoth\u00e8se de travail. Les systemes de transitions. Contr\u00f4leurs \u00e0 commandes gard\u00e9es. Les reseaux de Petri en tant que contr\u00f4leurs. Analyse des propri\u00e9t\u00e9s logiques des reseaux de Petri. La notion de place implicite : deux applications. Analyse des proprietes dynamiques : les reseaux de petri temporis\u00e9s.", "num_citations": "37\n", "authors": ["1580"]}
{"title": "Synthesizing glue operators from glue constraints for the construction of component-based systems\n", "abstract": " We study glue operators used in component-based frameworks to obtain systems as the composition of atomic components described as labeled transition systems (LTS). Glue operators map tuples of LTS into LTS. They restrict the behavior of their arguments by performing memoryless coordination. In a previous paper, we have proposed a simple format for SOS rules that captures, in particular, glue operators from known frameworks such as CCS, SCCS, CSP, and BIP.               This paper studies a new way for characterizing glue operators: as boolean glue constraints between interactions (sets of ports) and the state of the coordinated components. We provide an SOS format for glue, which allows a natural correspondence between glue operators and glue constraints. This correspondence is used for automated synthesis of glue operators implementing given glue constraints. By focusing on the properties\u00a0\u2026", "num_citations": "29\n", "authors": ["1580"]}
{"title": "Qos control for optimality and safety\n", "abstract": " We propose a method for fine grain QoS control of real-time applications. The method allows adapting the overall system behavior by adequately setting the quality level parameters of its actions. The objective of the control policy is to meet QoS requirements including three types of properties: 1) safety that is, no deadline is missed; 2) optimality that is, maximization of the available time budget; 3) smoothness of quality levels. The method takes as input a model of the application software, QoS requirements and platform-dependent timing information, and produces a controlled application software meeting the QoS requirements on the target platform. This paper provides a complete formalization of the quality control problem. It proposes a new control management policy ensuring safety, near-optimality and smoothness. It also describes a prototype tool implementing the quality control algorithm and experimental\u00a0\u2026", "num_citations": "29\n", "authors": ["1580"]}
{"title": "Realization of fault-tolerant systems by coding Petri nets\n", "abstract": " 4method is given for obtaining a fault-tolerant system from its representation by a Petri net. It is shown that there exist linear mappings G such that for every Petri net N having as incidence matrix C, the Petri net having as incidence matrix GC is a realization of N. By adequately choosinZ G, distance properties can be given to the markings of GC and techniques of linear codes can be used for their verification. Introduction~ Amongthe existing methods for obtaining fault-tolerant systems by selective redundancy, only those relative to the realization of fault-tolerant sequential machines, for example [11 [2][3][4], could be applied to Petri nets, although in an indirect manner: after decomposition into cooperating state machines or after transforming a Petri net to the state machine simulating it (if it is bounded). The method proposed in this paper is directly applicable to Petri nets and independently of the type of their implementation, programmed or hardwired.", "num_citations": "29\n", "authors": ["1580"]}
{"title": "Early validation of system requirements and design through correctness-by-construction\n", "abstract": " Early validation of requirements aims to reduce the need for the high-cost validation testing and corrective measures at late development stages. This work introduces a systematic process for the unambiguous specification of system requirements and the guided derivation of formal properties, which should be implied by the system \u2019s structure and behavior in conjunction with its external stimuli. This rigorous design takes place through the incremental construction of a model using the BIP (Behavior-Interaction-Priorities) component framework. It allows building complex designs by composing simpler reusable designs enforcing given properties. If some properties are neither enforced nor verified, the model is refined or certain requirements are revised. A validated model provides evidence of requirements\u2019 consistency and design correctness. The process is semi-automated through a new tool and existing\u00a0\u2026", "num_citations": "28\n", "authors": ["1580"]}
{"title": "A temporal logic to deal with fairness in transition systems\n", "abstract": " In this paper, we propose a notion of fairness for transition systems and a logic for proving properties under the fairness assumption corresponding to this notion. We consider that the concept of fairness which is useful is \"fair reachability\" of a given set of states P in a system, i.e. reachability of states of P when considering only the computations such that if, during their execution, reaching states of P is possible infinitely often, then states of P are visited infinitely often. This definition of fairness suggests the introduction of a branching time logic FCL, the temporal operators of which express, for a given set of states P, the modalities \"it is possible that P\" and \"it is inevitable that P\" by considering fair reachability of P. The main result is that, given a transition system S and a formula f of FCL expressing some property of S under the assumption of fairness, there exists a formula f\u2032 belonging to a branching time logic CL such\u00a0\u2026", "num_citations": "28\n", "authors": ["1580"]}
{"title": "A methodology and supporting tools for the development of component-based embedded systems\n", "abstract": " The paper presents a methodology and supporting tools for developing component-based embedded systems running on resource-limited hardware platforms. The methodology combines two complementary component frameworks in an integrated tool chain: BIP and Think. BIP is a framework for model-based development including a language for the description of heterogeneous systems, as well as associated simulation and verification tools. Think is a software component framework for the generation of small-footprint embedded systems. The tool chain allows generation, from system models described in BIP, of a set of functionally equivalent Think components. From these and libraries including OS services for a given hardware platform, a minimal system can be generated. We illustrate the results by modeling and implementing a software MPEG encoder on an iPod.", "num_citations": "26\n", "authors": ["1580"]}
{"title": "System design automation: Challenges and limitations\n", "abstract": " Electronic design automation (EDA) has enabled the integrated circuit industry to sustain exponentially increasing product complexity growth until today, while maintaining consistent product development timeline and costs. We argue that the success of EDA-based design relies on the application of four interrelated principles: 1) separation of concerns implying a decomposition of a design flow into steps, each step dealing with specific aspects, namely user requirements, functional design, and implementation; 2) component-based design enabling the reasoned construction of complex systems as the composition of components; 3) semantic coherency meaning that descriptions used in successive design steps are semantically related through adequate semantic mappings; this implies, in particular, that the formalisms used at each design step are rooted in well-defined semantics; and 4) correctness by construction\u00a0\u2026", "num_citations": "25\n", "authors": ["1580"]}
{"title": "Model-based implementation of parallel real-time systems\n", "abstract": " One of the main challenges in the design of real-time systems is how to derive correct and efficient implementations from platform-independent specifications.               We present a general implementation method in which the application is represented by an abstract model consisting of a set of interacting components. The abstract model executes sequentially components interactions atomically and instantaneously. We transform abstract models into physical models representing their execution on a platform. Physical models take into account execution times of interactions and allow their parallel execution. They are obtained by breaking atomicity of interactions using a notion of partial state. We provide safety conditions guaranteeing that the semantics of abstract models is preserved by physical models. These provide bases for implementing a parallel execution engine coordinating the execution of the\u00a0\u2026", "num_citations": "25\n", "authors": ["1580"]}
{"title": "Embedded Systems Design- Scientific Challenges and Work Directions\n", "abstract": " Embedded Systems Design \u2013 Scientific Challenges and Work Directions Page 1 Embedded Systems Design \u2013 Scientific Challenges and Work Directions Joseph Sifakis VERIMAG Laboratory & ArtistDesign NoE Brussels, June 18, 2009 Page 2 The Evolution of Computer Science Foundations Alan Turing, Kurt G\u00f6del Scientific Computing \u2013 Defence Applications WEB \u2013 Information Society Embedded Systems: Computing + Physicality \u25aa Seamless revolution \u25aa 95% of chips are embedded \u25aa Convergence between Computing and Telecommunications \u25aa Graphic Interfaces, Mouse \u25aa Information Systems: Commercial Applications \u25aa Integrated circuits Informatics is a young discipline, driven by exponential growth of components and their applications. The Internet of Things: Convergence between Embedded Systems and Internet Multi-core Systems 1936 1945 1970 1980 1990 2000 2015 2010 Page 3 O V E R V I E W 3 \u2751 \u2026", "num_citations": "25\n", "authors": ["1580"]}
{"title": "Automatic Verification Methods for Finite State Systems: International Workshop, Grenoble, France. June 12-14, 1989. Proceedings\n", "abstract": " This volume contains the proceedings of a workshop held in Grenoble in June 1989. This was the first workshop entirely devoted to the verification of finite state systems. The workshop brought together researchers and practitioners interested in the development and use of methods, tools and theories for automatic verification of finite state systems. The goal at the workshop was to compare verification methods and tools to assist the applications designer. The papers in this volume review verification techniques for finite state systems and evaluate their relative advantages. The techniques considered cover various specification formalisms such as process algebras, automata and logics. Most of the papers focus on exploitation of existing results in three application areas: hardware design, communication protocols and real-time systems.", "num_citations": "25\n", "authors": ["1580"]}
{"title": "Formal methods for the validation of fault tolerance in autonomous spacecraft\n", "abstract": " One of the major challenges to be faced in the design of new-generation spacecrafts comes with the requirement to increase the capacity of autonomous operation, in particular in presence of abnormal events. Formal methods are becoming more accepted in the space industry as a possible way to manage induced systems complexity. The Data Management System Design Validation (DDV) study has accomplished an experimental junction between the spacecraft autonomy trends and emerging formal methodologies. A methodological framework applicable to the early life cycle phases of fault-tolerant systems engineering has been defined. It focuses on the verification of fault tolerance properties using model-based formalisms. The Specification and Design Language (SDL) was selected for this study as the best suited language with respect to the application. This work has resulted in an executable specification\u00a0\u2026", "num_citations": "24\n", "authors": ["1580"]}
{"title": "Autonomous systems\u2013an architectural characterization\n", "abstract": " The concept of autonomy is key to the IoT vision promising increasing integration of smart services and systems minimizing human intervention. This vision challenges our capability to build complex open trustworthy autonomous systems. We lack a rigorous common semantic framework for autonomous systems. It is remarkable that the debate about autonomous vehicles focuses almost exclusively on AI and learning techniques while it ignores many other equally important autonomous system design issues.                 Autonomous systems involve agents and objects coordinated in some common environment so that their collective behavior meets a set of global goals. We propose a general computational model combining a system architecture model and an agent model. The architecture model allows expression of dynamic reconfigurable multi-mode coordination between components. The agent model\u00a0\u2026", "num_citations": "23\n", "authors": ["1580"]}
{"title": "Rigorous implementation of real-time systems\u2013from theory to application\n", "abstract": " The correct and efficient implementation of general real-time applications remains very much an open problem. A key issue is meeting timing constraints whose satisfaction depends on features of the execution platform, in particular its speed. Existing rigorous implementation techniques are applicable to specific classes of systems, for example, with periodic tasks or time-deterministic systems.We present a general model-based implementation method for real-time systems based on the use of two models:       \u2022An abstract model representing the behaviour of real-time software as a timed automaton, which describes user-defined platform-independent timing constraints. Its transitions are timeless and correspond to the execution of statements of the real-time software.\u2022A physical model representing the behaviour of the real-time software running on a given platform. It is obtained by assigning execution times to the\u00a0\u2026", "num_citations": "23\n", "authors": ["1580"]}
{"title": "Symbolic quality control for multimedia applications\n", "abstract": " We present a fine grain quality control method for multimedia applications. The method takes as input an application software composed of actions. The execution times of actions are unknown increasing functions of quality level parameters. The method allows the construction of a Controller which computes adequate action schedules and corresponding quality levels, so as to meet QoS requirements for a given platform. These include requirements for safety (action deadlines are met) as well optimality (maximization and smoothness of quality levels).               The Controller consists of a Quality Manager and a Scheduler. For each action, the Controller uses a quality management policy for choosing a schedule and quality levels meeting the QoS requirements. The schedule is selected amongst a set of optimal schedules computed by the Scheduler.               We extend and improve results of previous papers\u00a0\u2026", "num_citations": "22\n", "authors": ["1580"]}
{"title": "Incremental invariant generation for compositional design\n", "abstract": " We consider a compositional method for the verification of component-based systems described in a subset of the BIP language encompassing multi-party interactions. The method is based on the use of two kinds of invariants. Component invariants are over-approximations of components' reach ability sets. Interaction invariants are constraints on the states of components involved in interactions. In this paper we propose fixed point characterization for computing interaction invariants. We also propose a new technique that takes the incremental design of the system into account. In many situations, the technique will help to avoid redoing all the verification process each time an interaction is added in the design. Our two techniques have been implemented as extension of the D-Finder toolset. The result has been applied to check deadlock-freedom on several case studies. Our experiments show that our new\u00a0\u2026", "num_citations": "21\n", "authors": ["1580"]}
{"title": "Interactive Methods for the Analysis of Petri Nets\n", "abstract": " The aim of this paper is to show how the iterative methods for the analysis of discrete systems presented in [1][2][3] can be applied to Petri nets and their extensions. The results given in this paper have been obtained by direct application of those exposed in the references.", "num_citations": "21\n", "authors": ["1580"]}
{"title": "ETUDE DU COMPORTEMENT PERMANENT DES RESEAUX DE PETRI TEMPORISES.\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "21\n", "authors": ["1580"]}
{"title": "Fine grain QoS control for multimedia application software\n", "abstract": " We propose a method for fine grain QoS control of dataflow applications. We assume that the application software is described as the composition of actions (C-functions) with quality level parameters. The method allows a QoS controller to be computed from this description, and also average execution times, worst case execution times and deadlines for its actions. The controller computes dynamically feasible schedules and quality assignments for their actions. Furthermore, the control policy ensures optimal time budget utilization. A prototype tool implementing the method is shown, as well as experimental results for a non trivial example. The results show the interest of fine grain QoS control for video encoders.", "num_citations": "19\n", "authors": ["1580"]}
{"title": "Rigorous design of cyber-physical systems\n", "abstract": " Cyber-physical systems have developed into a very active research field, with a broad range of challenges and research directions going from requirements, to implementation and simulation, as well as validation and verification to guarantee essential properties. In this survey paper, we focus exclusively on the following fundamental issue: how to link physicality and computation, continuous time-space dynamics with discrete untimed ones? We consider that cyber-physical system design flow involves the following three main steps: (1)\u00a0cyber-physical systems modeling; (2)\u00a0discretization for executability; and (3)\u00a0simulation and implementation. We review\u2014and strive to provide insight into possible approaches for addressing\u2014the key issues, for each of these three steps.", "num_citations": "17\n", "authors": ["1580"]}
{"title": "Use of timed Petri nets for performance evaluation\n", "abstract": " CiNii \u8ad6\u6587 - Use of timed Petri nets for performance evaluation CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853 \u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005 \u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3 \u696d\u52d9\u306e\u518d\u958b\u306b\u3064\u3044\u3066 Use of timed Petri nets for performance evaluation SIFAKIS J. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 SIFAKIS J. \u53ce\u9332\u520a\u884c\u7269 3rd Int. Sysmp, measuing. Modeling and Evaluations Compt. Syst 3rd Int. Sysmp, measuing. Modeling and Evaluations Compt. Syst, 1977 North-Holland \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u30b3\u30f3\u30ab\u30ec\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3051\u308b\u30a4\u30f3\u30d0\u30ea\u30a2\u30f3\u30c8 : \u5c55\u671b \u677e\u672c \u5fe0 \u96fb\u5b50 \u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u6280\u8853\u7814\u7a76\u5831\u544a. CST, \u30b3\u30f3\u30ab\u30ec\u30f3\u30c8\u5de5\u5b66 98(565), 51-58, 1999-01-28 \u53c2\u8003\u6587\u732e58\u4ef6 \u88ab\u5f15\u7528\u6587\u732e3\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) 10021857598 \u8cc7\u6599\u7a2e\u5225 \u4f1a\u8b70\u8cc7\u6599 \u30c7\u30fc\u30bf\u2026", "num_citations": "17\n", "authors": ["1580"]}
{"title": "Architecture diagrams: A graphical language for architecture style specification\n", "abstract": " Architecture styles characterise families of architectures sharing common characteristics. We have recently proposed configuration logics for architecture style specification. In this paper, we study a graphical notation to enhance readability and easiness of expression. We study simple architecture diagrams and a more expressive extension, interval architecture diagrams. For each type of diagrams, we present its semantics, a set of necessary and sufficient consistency conditions and a method that allows to characterise compositionally the specified architectures. We provide several examples illustrating the application of the results. We also present a polynomial-time algorithm for checking that a given architecture conforms to the architecture style specified by a diagram.", "num_citations": "16\n", "authors": ["1580"]}
{"title": "Autonomics: In search of a foundation for next-generation autonomous systems\n", "abstract": " The potential benefits of autonomous systems are obvious. However, there are still major issues to be dealt with before developing such systems becomes a commonplace engineering practice, with accepted and trustworthy deliverables. We argue that a solid, evolving, publicly available, community-controlled foundation for developing next-generation autonomous systems is a must, and term the desired foundation \u201cautonomics.\u201d We focus on three main challenges: 1) how to specify autonomous system behavior in the face of unpredictability; 2) how to carry out faithful analysis of system behavior with respect to rich environments that include humans, physical artifacts, and other systems; and 3) how to build such systems by combining executable modeling techniques from software engineering with artificial intelligence and machine learning.", "num_citations": "15\n", "authors": ["1580"]}
{"title": "Embedded systems-Challenges and work directions\n", "abstract": " Certainly the Federal Aviation Administration's Advanced Automation System (AAS) project dwarfs even the largest corporate information technology fiascoes in terms of dollars wasted. Kmart's $130 million write-off last year on its supply chain systems is chump change compared to the AAS. The FAA ultimately declared that", "num_citations": "15\n", "authors": ["1580"]}
{"title": "The Compositional Specification of Timed Systems\u2014A Tutorial\n", "abstract": " The analysis of reactive systems requires models representing the system, its interaction with the environment and taking into account features of the underlying execution structure. It is important that such models are timed if analysis concerns performance, action scheduling or in general, dynamic aspects of the behavior. In practice, timed models of systems are obtained by adding timing constraints to untimed descriptions. For instance, given the functional description of a circuit, the corresponding timed model can be obtained by adding timing constraints about propagation delays of the components; to build a timed model of a real-time software, quantitative timing information concerning execution times of the statements and significant changes of the environment must be added.The construction of timed models of reactive systems raises some important questions concerning their composition and in particular\u00a0\u2026", "num_citations": "15\n", "authors": ["1580"]}
{"title": "Autonomous robot software design challenge\n", "abstract": " We summarize some current trends in autonomous robot software systems design and point out some of their characteristics, such as the chasm between analytical and computational models, and the gap between safety critical and besteffort engineering practices. We call for a coherent scientific foundation for autonomous robot software systems design, and we discuss a few key demands on such a foundation: the need for encompassing several manifestations of heterogeneity, and the need for constructivity in design. We believe that a longterm and continuous research effort is necessary to develop a framework for the rigorous construction of robust autonomous robot software systems.", "num_citations": "14\n", "authors": ["1580"]}
{"title": "System Design in the Era of IoT---Meeting the Autonomy Challenge\n", "abstract": " The advent of IoT is a great opportunity to reinvigorate Computing by focusing on autonomous system design. This certainly raises technology questions but, more importantly, it requires building new foundation that will systematically integrate the innovative results needed to face increasing environment and mission complexity. A key idea is to compensate the lack of human intervention by adaptive control. This is instrumental for system resilience: it allows both coping with uncertainty and managing mixed criticality services. Our proposal for knowledge-based design seeks a compromise: preserving rigorousness despite the fact that essential properties cannot be guaranteed at design time. It makes knowledge generation and application a primary concern and aims to fully and seamlessly incorporate the adaptive control paradigm in system architecture.", "num_citations": "12\n", "authors": ["1580"]}
{"title": "Modeling Real-Time Systems.\n", "abstract": " Aucun titre de diapositive Page 1 J. Sifakis Modeling Real-time Systems RTSS04 Modeling Real-time Systems Joseph Sifakis VERIMAG & ARTSIST2 NoE RTSS 2004 December 5-8, 2004 Lisbon Page 2 J. Sifakis Modeling Real-time Systems RTSS04 Motivation - Modeling Modeling plays a central role in systems engineering \u2022 Can profitably replace experimentation on actual systems \u2022 Can provide a basis for rigorous system development and implementation (model-based approaches). Modeling real-time systems \u2022 Raises hard problems about concepts, languages and their semantics eg What is an architecture? What is a scheduler? How synchronous and asynchronous systems are related? \u2022 Requires a deep understanding of basic system design issues such as development methodologies (combination of techniques and tools, refinement ) and architecture design principles It\u2019s not just playing with graphical \u2026", "num_citations": "12\n", "authors": ["1580"]}
{"title": "A la recherche d'une m\u00e9thodologie de conception s\u00fbre des automatismes logiques bas\u00e9e sur l'utilisation des r\u00e9seaux de Petri\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "12\n", "authors": ["1580"]}
{"title": "A design tool for the multilevel description and simulation of systems of interconnected modules\n", "abstract": " We suggest a methodology and a language to permit the study of a system's behavior (functional validation, evaluation of global performances, critical situations). Every system is regarded as an interconnection of communicating modules functioning in a synchronous or asynchronous manner. The control section and the data section of each module are described separately in terms of respectively non-procedural and procedural sub-languages.", "num_citations": "12\n", "authors": ["1580"]}
{"title": "An overview and synthesis on timed process algebra\n", "abstract": " We present an overview and synthesis of existing results about process algebras for the specification and analysis of timed systems. The motivation is double: present an overview of some relevant and representative approaches and suggest a unifying framework for them.After presenting fundamental assumptions about timed systems and the nature of abstract time, we propose a general model for them: transition systems whose labels are either elements of a vocabulary of actions or elements of a time domain. Many properties of this model are studied concerning their impact on description capabilities and on realisability issues.", "num_citations": "11\n", "authors": ["1580"]}
{"title": "Time-predictable and composable architectures for dependable embedded systems\n", "abstract": " Embedded systems must interact with their real-time environment in a timely and dependable fashion. Most embedded-systems architectures and design processes consider\" non-functional\" properties such as time, energy, and reliability as an afterthought, when functional correctness has (hopefully) been achieved. As a result, embedded systems are often fragile in their real-time behaviour, and take longer to design and test than planned. Several techniques have been proposed to make real-time embedded systems more robust, and to ease the process of designing embedded systems:", "num_citations": "10\n", "authors": ["1580"]}
{"title": "Component-Based Construction of Heterogeneous Real-Time Systems in Bip.\n", "abstract": " Component-based Construction of Heterogeneous Real-time Systems in BIP Page 1 Component-based Construction of Heterogeneous Real-time Systems in BIP Joseph Sifakis in collaboration with A. Basu, S. Bensalem, S. Bliudze, M. Bozga, Hung Nguyen VERIMAG Laboratory Heraklion, July 22, 2008 Page 2 Motivation Building systems from heterogeneous components \u25aa SW Component frameworks, such as \u2751 Coordination languages, extensions of programming languages : Linda, Javaspaces, Concurrent Fortran, NesC, BPEL \u2751 Middleware eg Corba, Javabeans, .NET \u2751 Software development environments: PCTE, SWbus, Softbench, Eclipse \u25aa System modeling languages: Statecharts, UML, Simulink/Stateflow, Metropolis, Ptolemy \u25aa Hardware description languages: VHDL, Verilog, SystemC We need an all-encompassing component-based construction framework for \u25aa Mastering complexity through \u2026", "num_citations": "10\n", "authors": ["1580"]}
{"title": "Rigorous design of cyber-physical systems\n", "abstract": " Cyber-physical systems (CPS) break with traditional systems such as desktop computers and servers, in various ways: (1) they are instrumented in order to interact with physical environments; (2) they are interconnected to allow interaction between people and objects in entirely new modes; (3) they must be smart to ensure predictability of events and optimal use of resources. Currently, we lack theory methods and tools for building cost-effectively trustworthy CPS. In this talk, I will show how and why CPS challenge our capabilities for ensuring their trustworthiness. I will advocate for a coherent scientific foundation of CPS design and will discuss three main scientific challenges: (1) Marrying physicality and computation; (2) Correctness-by-construction; (3) Adaptivity. Meeting these challenges is a prerequisite for moving from empirical to rigorous design. This can be formalized as a sound, scalable and accountable\u00a0\u2026", "num_citations": "9\n", "authors": ["1580"]}
{"title": "Knowledge based scheduling of distributed systems\n", "abstract": " Priorities are used to control the execution of systems to meet given requirements for optimal use of resources, e.g., by using scheduling policies. For distributed systems it is hard to find efficient implementations for priorities; because they express constraints on global states, their implementation may incur considerable overhead.             Our method is based on performing model checking for knowledge properties. It allows identifying where the local information of a process is sufficient to schedule the execution of a high priority transition. As a result of the model checking, the program is transformed to react upon the knowledge it has at each point. The transformed version has no priorities, and uses the gathered information and its knowledge to limit the enabledness of transitions so that it matches or approximates the original specification of priorities.", "num_citations": "9\n", "authors": ["1580"]}
{"title": "Using speed diagrams for symbolic quality management\n", "abstract": " We present a quality management method for multimedia applications. The method takes as input an application software composed of actions. The execution times of actions are unknown increasing junctions of quality level parameters. The method allows the construction of a quality manager which computes adequate action quality levels so as to meet QoS requirements for a given platform. These include deadlines for the actions as well as quality maximization and smoothness. We extend and improve results of a previous paper by focusing on the reduction of overhead due to quality management. We propose a symbolic quality management method using speed diagrams, a representation of the system's dynamics. Instead of numerically computing a quality level for each action, the quality manager changes action quality levels based on the knowledge of constraints characterizing control relaxation regions\u00a0\u2026", "num_citations": "9\n", "authors": ["1580"]}
{"title": "Global and local invariants in transition systems\n", "abstract": " Given a transition system and a cover P of the set of its states, a set of local invariants with respect to P is defined as a set of predicates in bijection with the set of the blocks of P and in such a way that a local invariant be true every time the system is in a state belonging to the corresponding block of the cover. This definition is proved to be sufficiently general in the sense that any proof made by using global invariants can be also made by using sets of local invariants with respect to any cover P. The same result is proved for two more restrictive definitions of the notion of local invariant by using well-known properties of connections between lattices. Finally, it is shown that the notion of invariant assertion, commonly used for proving programs, can be deduced from the definition of local invariant when a transition system represents a program. In this case, the fixed point equations characterizing local invariants can be\u00a0\u2026", "num_citations": "9\n", "authors": ["1580"]}
{"title": "Survey of French research and applications based on Petri nets\n", "abstract": " Models of control schemes based on place/transition nets are widely used by French research Laboratories and industrial groups for design, verification and implementation of process control svstems as well as for studvinq DroDerties of parallel proqrams and systems.The theoretical researches developed particularly at the Univeris% ties of Grenoble and Paris, are related to decidability of net languages~ Equivalence of control schemes, semantics of programs, properties of schemes and performance evaluation. Other tools than PT-nets are often used, such as transition-systems[Sifakis 79] 7 KarD and Miller automata [Roucairol 78~, unimodular modules [Memmi 78~; however a final return to the simple case of PT-nets is generally made to obtain less cumbersome or more precise results allowing pratical use. A popular trend is to search for new properties that depend only upon the structure of the net and to use\u00a0\u2026", "num_citations": "9\n", "authors": ["1580"]}
{"title": "Tools for verification and validation\n", "abstract": " Verification and validation consists in exploring the current design against side properties expressed as part of the requirements. Verification & validation can concern:               1. the specification level, at early stages of the design process, or               2. the embedded code, from C/Ada/Java, to assembly.", "num_citations": "7\n", "authors": ["1580"]}
{"title": "An algebraic framework for urgency\n", "abstract": " this paper, we present a unified algebraic framework that encompasses the already presented results and provides laws for choice and parallel composition on timed systems, modulo strong bisimulation. The algebraic framework is characterized by the following.--Timed systems are obtained as the composition of timed actions by using operators. A timed action is a discrete transition, labeled with an action name, a guard, a deadline and a jump. Guards and deadlines are predicates on clocks characterizing respectively, the states at which the action is enabled and the states at which the action becomes urgent (time progress stops). We require that the deadline implies the corresponding guard which guarantees time reactivity. The jumps are functions that specify clock assignments when the action is executed.", "num_citations": "7\n", "authors": ["1580"]}
{"title": "Can we trust autonomous systems? Boundaries and risks\n", "abstract": " Can we trust autonomous systems? This question arises urgently with the perspective of massive use of AI-enabled techniques in autonomous systems, critical systems intended to replace humans in complex organizations. We propose a framework for tackling this question and bringing reasoned and principled answers. First, we discuss a classification of different types of knowledge according to their truthfulness and generality. We show basic differences and similarities between knowledge produced and managed by humans and computers, respectively. In particular, we discuss how differences in the system development process of knowledge affect its truthfulness. To determine whether we can trust a system to perform a given task, we study the interplay between two main factors: (1) the degree of trustworthiness achievable by a system performing the task; and (2) the degree of criticality of the task. Simple\u00a0\u2026", "num_citations": "6\n", "authors": ["1580"]}
{"title": "Designbip: A design studio for modeling and generating systems with bip\n", "abstract": " The Behavior-Interaction-Priority (BIP) framework, rooted in rigorous semantics, allows the construction of systems that are correct-by-design. BIP has been effectively used for the construction and analysis of large systems such as robot controllers and satellite on-board software. Nevertheless, the specification of BIP models is done in a purely textual manner without any code editor support. To facilitate the specification of BIP models, we present DesignBIP, a web-based, collaborative, version-controlled design studio. To promote model scaling and reusability of BIP models, we use a graphical language for modeling parameterized BIP models with rigorous semantics. We present the various services provided by the design studio, including model editors, code editors, consistency checking mechanisms, code generators, and integration with the JavaBIP tool-set.", "num_citations": "6\n", "authors": ["1580"]}
{"title": "Component-Based Construction of Real-Time Systems in BIP.\n", "abstract": " Results:\u2022 The operation\u2295 is partial, associative and commutative\u2022 pr1 (pr2 (B))\u2260 pr1 (pr2 (B))\u2022 pr1\u2295 pr2 (B) refines pr1\u222a pr2 (B) refines pr1 (pr2 (B))\u2022 Priorities preserve deadlock-freedom pr1 pr2 pr1\u2295 pr2", "num_citations": "6\n", "authors": ["1580"]}
{"title": "Scheduler modeling based on the controller synthesis paradigm\n", "abstract": " The controller synthesis paradigm provides a general framework for scheduling real-time applications. Schedulers can be considered as controllers of the applications; they restrict their behavior so that given scheduling requirements are met.               We study a modeling methodology based on the controller synthesis paradigm. The methodology allows to get a correctly scheduled system from timed models of its processes, in an incremental manner, by application of composability results which simplify schedulability analysis. It consists in restricting successively the system to be scheduled by application of constraints defined from scheduling requirements. The latter are a conjunction of schedulability requirements that express timing properties of the processes and policy requirements about resource management.               The presented methodology allows a unified view of analytic approaches and\u00a0\u2026", "num_citations": "6\n", "authors": ["1580"]}
{"title": "Research directions for concurrency\n", "abstract": " The main achievements of research on concurrency concern the development of languages, models and underlying verification theories. Executable specification languages include asynchronous ones like CSP and synchronous ones like Esterel, Lustre and the Statecharts. The work on process calculi contributed a lot to understanding the problem of compositionality and led to investigation of theories for fully abstract semantics.The study of logical specification languages such as the various temporal logics and mu-calculi allowed understanding of the significant classes of properties of concurrent systems. Interesting results make it possible to combine logical and executable specifications. For both logical and executable specifications, verification methods and tools have been developed by using proof methods or algorithmic methods.", "num_citations": "6\n", "authors": ["1580"]}
{"title": "An example of specification and verification in CESAR\n", "abstract": " The aim of this paper is to illustrate by an example the use of the syste~ CESAR for the specification and verification of systems of ccramunicating processes.Cesar is a verification tool which allows to~ e a program with its specifications given by a set of formulas of temporal logic. The verification principle-in the version presented-consists in translating the program into a state graph which is functionally equivalent to it. The conformity of the program to its specifications is\" verified by evaluation of the folTnulas on the state graph thus obtained. The description of programs is done in a CSP-like language. A program is a set of tasks~ unicating by exchanging messages. For the verification method to be effective, we rec~ Jire that all program variables are of type integer and bounded. Specifications are a set of formulas of a branching time logic and express properties which must be satisfied by the program. Using\u00a0\u2026", "num_citations": "6\n", "authors": ["1580"]}
{"title": "MAS: UN OUTIL D'AIDE A LA DESCRIPTION ET A LA CONCEPTION DES AUTOMATISMES LOGIQUES.\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "6\n", "authors": ["1580"]}
{"title": "A tool box for the verification of LOTOS programs\n", "abstract": " This paper presents the tools ALD\u00c9BARAN, CESAR, CESAR. ADT and CL\u00c9OP\u00c2TRE which constitute a tool-boz for compiling and verifying LOT os programs. The principles of these tools are described, as well as their performances and limitations. Finally, the formal verifi-cation of the rel/REL atomic multicast protocol is given as an example to illustrate the practical use of the tool-box.", "num_citations": "6\n", "authors": ["1580"]}
{"title": "Functional BIP: Embedding connectors in functional programming languages\n", "abstract": " This paper presents a theoretical foundation for functional language implementations of Behaviour\u2013Interaction\u2013Priority (BIP). We introduce a set of connector combinators describing synchronisation, data transfer, priorities and dynamicity in a principled way. A static type system ensures the soundness of connector semantics.Based on this foundation, we implemented BIP as an embedded domain specific language (DSL) in Haskell and Scala. The DSL embedding allows programmers to benefit from the full expressive power of high-level languages. The clear separation of behaviour and coordination inherited from BIP leads to systems that are arguably simpler to maintain and reason about, compared to other approaches.", "num_citations": "5\n", "authors": ["1580"]}
{"title": "Integrating architectural constraints in application software by source-to-source transformation in bip\n", "abstract": " Performance of embedded applications strongly depends on features of the hardware platform on which they are deployed. A grand challenge in complex embedded systems design is developing methods and tools for modeling and analyzing the behavior of an application software running on a given hardware architecture. We propose a rigorous method that allows to obtain a model which faithfully represents the behavior of a mixed hardware/software system from a model of its application software and a model of its underlying hardware architecture. The method takes a model of the application software in BIP, a model of the hardware architecture in XML and a mapping associating read and write operations of the application software with execution paths in the architecture. It builds a model of the corresponding mixed hardware/software system in BIP. The latter can be simulated and analyzed for verification of both functional and extra-functional properties. The method consists in progressively enriching the application software model. It involves three steps: 1) The generation of a BIP model of the application software; 2) The generation of a BIP model of the hardware architecture; 3) The composition of the two models. The steps are implemented by application of source-to-source transformations that are correct-by-construction. In particular they preserve functional properties of the application software. The obtained system model is highly parametrized and allows flexible integration of specific target architecture features, such as bus policy and scheduling policy of the processors. The method has been implemented for application software and\u00a0\u2026", "num_citations": "5\n", "authors": ["1580"]}
{"title": "Programming languages for real-time systems\n", "abstract": " The real-time and embedded systems market is huge and growing all the time. It has been estimated that 100 times more processors are destined for embedded systems rather than the desktop [Egg02]. Embedded real-time systems [Bur01]:                                                                        are mainly small (for example, mobile phones) but can also be extremely large and complex (for example air traffic control systems)                                                           have potentially complex mathematical models of their controlled environment                                                           must be dependable                                                           are inherently concurrent                                                           must interact within the time frame of the environment                                                           must interact with low-level mechanisms such as hardware devices and memory management faculties.", "num_citations": "5\n", "authors": ["1580"]}
{"title": "Buzz: analyzable embedded component-based software\n", "abstract": " The paper presents an experimental toolset for developping component-based embedded systems. This environment uses as input a dedicated language, called Buzz, that combines two complementary component based programming paradigms: BIP and Think. This language can act as a pivot and most popular execution paradigms (even-driven, Thread oriented,...) can be translated into it. BIP is a framework for model-based development including a language for the description of heterogeneous systems, as well as associated simulation and verification tools. Think is a software component framework for the generation of small-footprint embedded systems. Buzz comes with a compiler that allows both the generation of a Think architecture for the software execution on the embedded platform and the generation of a BIP model for verifications and analysis.", "num_citations": "4\n", "authors": ["1580"]}
{"title": "Adaptive real-time system development\n", "abstract": " Current real-time embedded systems used in today\u2019s industrial products have very limited capabilities for adaptation. The main reason is due to the fact that they are built on top of commercial components that do not offer the possibility of being reconfigured at runtime. For example, at the operating system level, most of the internal kernel mechanisms, such as scheduling, interrupt handling, synchronization, mutual exclusion, or communication, have a precise behaviour dictated by a specific policy that cannot be changed, nor adapted.", "num_citations": "4\n", "authors": ["1580"]}
{"title": "QoS management\n", "abstract": " QoS has been defined as a collective effect of service and performances that determine the degree of satisfaction of the service. This satisfaction is usually associated with a number of extra-functional requirements or QoS characteristics, such as dependability, reliability, timeliness, robustness, throughput, etc.", "num_citations": "4\n", "authors": ["1580"]}
{"title": "Current design practice and needs in selected industrial sectors\n", "abstract": " The overall automotive industry structure is different in the US versus Europe and Japan that share some similarity. In the US, subsystems manufacturers are the results of spin-offs from GM (Delphi) and Ford (Visteon) and cannot be considered as independent as the European subsystem auto makers. In addition, Ford and Gm have hardly invested in the recent past to improve substantially their design methods. It is common belief, and we concur with this assessment, that the European automotive industry is the most advanced in terms of quality and design approaches.", "num_citations": "4\n", "authors": ["1580"]}
{"title": "Integration, the Price of Success\u2014Extended Abstract\n", "abstract": " It is generally recognized that formal techniques have a limited impact on current industrial practice. Several reasons often had been advocated to explain this fact: youth of the discipline, intrinsic limitations due to complexity and undecidability, lack of trained practitioners and engineers. All these are factors limiting the application of formal techniques. How ever, a reason that is less frequently suggested is the relevance of our contribution to current industrial practice. Clearly, Informatics is a scientific discipline with its own evolution laws and proper objectives. How ever, as an experimental discipline it should find inspiration and validation in applications whose development is also driven by external needs, technologic, economic and ultimately social. The recognition and the success of our discipline is intimately related to the capability to address problems raised by the fast evolving practice.Many theoretical results, concepts and methods have been integrated in current engineering practice so perfectly that their use is completely transparent: automata and formal languages theory in compiler technology, or more recently, circuit v erification by model-chec king. On the other hand, it is clear that most of the existing theoretical results will not find a direct application in the foreseeable future while at the same time softw are and systems engineering techniques develop on a more empirical and technology driven basis. It is remarkable that pessimistic predictions about limitations of the current industrial practice to produce reliable software and systems, have been falsified. In fact, the rapid increase of complexity and the introduction of new technologies\u00a0\u2026", "num_citations": "4\n", "authors": ["1580"]}
{"title": "Behaviour-Interaction-Priority in functional programming languages: Formalisation and implementation of concurrency frameworks in Haskell and Scala\n", "abstract": " From embedded systems to large distributed systems, concurrency is everywhere. Even in the world of general purpose systems, concurrency is becoming increasingly important. We can no longer rely on Moore\u2019s law [1] and wait for faster processors to come out at regular intervals. Instead of speeding up single processors, hardware manufacturers are shifting to the world of many-cores. With the multiplication of cores and processors in today\u2019s systems, concurrency is becoming a must to achieve reasonable performance. Parallelisation of sequential code performed by hardware is reaching its limits. Programs must be written with concurrency in mind to take advantage of those increasingly common multi-cores architectures [2].Alas, writing concurrent systems is difficult. Going from sequential programs to systems of multiple concurrent components is not an easy task. The usual solution of using threads and synchronisation primitives such as locks, semaphores [3] and monitors [4] is highly error prone and unsatisfactory, due to their largely nondeterministic behaviour [5]. We are in need better of abstractions.", "num_citations": "3\n", "authors": ["1580"]}
{"title": "Systems Architecture, Design, Engineering, and Verification\u2014The Practice in Research and Research in Practice\n", "abstract": " More than any other area in computer science, the interaction and boundary between science and engineering is blurred in the systems area, with cross fertilization from both directions. The systems panel will explore the past, present and future relationship between systems research and engineering practice.", "num_citations": "3\n", "authors": ["1580"]}
{"title": "Embedded Software: Second International Conference, EMSOFT 2002, Grenoble, France, October 7-9, 2002. Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the Second International Conference on Embedded Software, EMSOFT 2002, held in Grenoble, France in October 2002. The book presents 13 invited papers by leading researchers and 17 revised full papers selected during a competitive round of reviewing. The book spans the whole range of embedded software, including operating systems and middleware, programming languages and compilers, modeling and validation, software engineering and programming methodologies, scheduling and execution-time analysis, formal methods, and communication protocols and fault-tolerance", "num_citations": "3\n", "authors": ["1580"]}
{"title": "Integration, the price of success\n", "abstract": " It is generally recognized that formal techniques have a limited impact on current industrial practice. Several reasons often had been advocated to explain this fact: youth of the discipline, intrinsic limitations due to complexity and undecidability, lack of trained practitioners and engineers. All these are factors limiting the application of formal techniques. How ever, a reason that is less frequently suggested is the relevance of our contribution to current industrial practice. Clearly, Informatics is a scientificc discipline with its own evolution laws and proper objectives. How ever,as an experimental discipline it should find inspiration and validation in applications whose development is also driven by external needs, technologic, economic and ultimately social. The recognition and the success of our discipline is intimately related to the capability to address problems raised by the fast evolving practice.", "num_citations": "3\n", "authors": ["1580"]}
{"title": "Modeling and performance evaluation of computer systems\n", "abstract": " CiNii \u8ad6\u6587 - Modeling and performance evaluation of computer systems CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005 \u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 Modeling and performance evaluation of computer systems SIFAKIS J. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 SIFAKIS J. \u53ce\u9332\u520a\u884c\u7269 Proc. Third International Symposium on Measuring, Modeling and Evaluating Computer Systems, Amstedam, 1977 Proc. Third International Symposium on Measuring, Modeling and Evaluating Computer Systems, Amstedam, 1977, 1977 North-Holland \u88ab\u5f15\u7528 \u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u6642\u9593\u4ed8\u304d\u30da\u30c8\u30ea\u30cd\u30c3\u30c8\u306b\u3088\u308b\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306e\u767a\u898b\u7684 \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0SDS \u5c71\u5185 \u96c5\u5f18 , \u829d \u6e05\u9999 , \u6e21\u9089 \u654f\u6b63 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u6280\u8853\u7814\u7a76\u5831\u544a. CAS, \u56de\u8def\u3068\u2026", "num_citations": "3\n", "authors": ["1580"]}
{"title": "Mod\u00e8les temporels des syst\u00e8mes logiques\n", "abstract": " Ce travail est une contribution \u00e0 la moaelisation temporelle des sys\u2014t\u00e8mes logiques. La premi\u00e8re partie (chapitres I, dI, III) est consacr\u00e9e \u00e0 la d\u00e9finition des outils utilis\u00e9s (alg\u00e8bre tenporis\u00e9e, structures alg\u00e9briques et d\u2019op\u00e9rateurs). La seconde partie pr\u00e9sente des applications \u00e0 des probl\u00e8mes clas siques et propose des mod\u00e8les plus g\u00e9n\u00e9raux.Le chapitre I pr\u00e9sente la th\u00e9orie des alg\u00e8bres bool\u00e9ennes temporis\u00e9es. La notion de Quantit\u00e9 Bool\u00e9enne Temporis\u00e9e (QBT), qui est une application de R dans {0, 1} est d\u2019abord introduite, ainsi que l\u2019alg\u00e8bre bool\u00e9enne sur l\u2019ensemble des QBT Il faut noter ici, que le probl\u00e8me de la d\u00e9finition d\u2019une alg\u00e8bre bool\u00e9enne sur l\u2019ensemble des QBT a \u00e9t\u00e9 trait\u00e9 dans une optique dif\u00ef\u00e9rente dans (2) et (S).", "num_citations": "3\n", "authors": ["1580"]}
{"title": "Toward a System Design Science\n", "abstract": " Design is a universal concept. It links the immaterial world of concepts to the physical world. It is an essential area of human experience, expertise, and knowledge, which deals with our ability to mold our environment to satisfy material and spiritual needs.             Design has two different connotations. One is simply a plan or a pattern for assembling objects constituting a given artifact. The other is the creative process for devising plans or patterns and carrying them out to produce an artifact. For this paper we focus on the second interpretation. We are ultimately interested in putting design on a more scientific basis. Toward this end, we focus here on articulating a new structure for the design process, which we believe will support this goal.", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Methods and tools for component-based system design\n", "abstract": " Traditional engineering disciplines such as civil or mechanical engineering are based on solid theory for building artefacts with predictable behavior over their lifetime. In contrast, we lack similar constructivity results for computing systems engineering: computer science provides only partial answers to particular system design problems. With few exceptions, predictability is impossible to guarantee at design time and therefore, a posteriori verification remains the only means for ensuring their correct operation.", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Embedded Systems Research Challenges and Work Directions\n", "abstract": " Embedded Systems Research Challenges and Work Directions Page 1 1 Embedded Systems Research Challenges and Work Directions 40-i\u00e8me Anniversaire du LAAS 28 mai 2008 Joseph Sifakis VERIMAG & ARTIST2 NoE Page 2 2 Embedded Systems: Scope An Embedded System integrates software and hardware jointly and specifically designed to provide given functionalities, which are often critical. Page 3 3 Embedded Technologies are of strategic importance for modern economies Embedded Systems: Economic Stakes Embedded Systems are of strategic economic importance \u2756 Factor for innovation and differentiation: \u27a2 new functionalities and services in existing products \u27a2 new products and services \u2756 Principal source of added value: particularly for embedded software \u2756 Increased competitivity \u2756 This is the fastest-growing sector in IT Europe has leading positions in sectors where embedded \u2026", "num_citations": "2\n", "authors": ["1580"]}
{"title": "TAXYS: A Tool for the Development and Veri\ufb01cation of Real-Time Embedded Systems\u22c6\n", "abstract": " The correct behavior of real-time applications depends not only on the correctness of the results of computations but also on the times at which these results are produced. As a matter of fact, violations of real-time constraints in embedded systems are the most di\ufb03cult errors to detect, because they are extremely sensitive both to the patterns of external events stimulating the system and to the timing behavior of the system itself. Clearly, the development of realtime systems requires rigorous methods and tools to reduce development costs and\u201d time-to-market\u201d while guaranteeing the quality of the produced code (in particular, respect of the temporal constraints). The above requirements motivated the development of the Taxys tool, dedicated to the design and validation of real-time telecommunications software. One of the major goal of the Taxys tool is to produce a formal model that captures the temporal behavior of the whole application which is composed of the embedded computer and its external environment. For this purpose we use the formal model of timed automata [2]. The choice of this model allows the use of results, algorithms and tools available. Here, we use the KRONOS model checker [4] for model analysis.From the source code of the application, an Esterel program annotated with temporal constraints, the Taxys tool produces on one hand a sequential executable code and on the other hand a timed model of the application. This model is again composed with a timed model of the external environment in order to obtain a global model which is statically analyzed to validate timing constraints. This validation should notably shorten\u00a0\u2026", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Modeling Urgency in Timed Systems?\n", "abstract": " Timed systems can be modeled as automata (or, generally, discrete transition structures) extended with real-valued variables (clocks) measuring the time elapsed since their initialization. The following features are also common in the above models.{States are associated with time progress conditions specifying how time can advance. Time can progress at a state by t only if all the intermediate states reached satisfy the associated time progress condition.{At transitions, clock values can be tested and modified. This is usually done by associating with transitions guards (conditions on clocks) and assignments. If a guard is true from an automaton state and a given clock valuation, the corresponding transition can be executed by modifying clocks as specified by the corresponding assignment.", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Formal methods and their evaluation\n", "abstract": " Producing systems which satisfy given quality requirements at reasonable costs and within reasonable delays is an important economic stake and also a scienti c and technological challenge.", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Modelling Urgency in Timed Systems\n", "abstract": " Timed systems can be modeled as automata (or, generally, discrete tran\u00e1tion structures) extended with real-valued variables (clocks) measuring the time elapsed since their initialization. The following features are also common in the above models.\u2014States are associated with time progress conditions specifying how time can advance. Time can progress at a state by t only if all the intermediate states reached satisfy the associated time progress condition.\u2014At transitions, clock values can be tested and modified. This is usually done by associating with tran\u00e1tions guards (conditions on clocks) and assign-", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Safety, security and quality\n", "abstract": " Producing systems satisfying safety, security and quality-of-service requirements is an important economic stake and also a scientific and technological challenge. There is an increasing demand for methods and tools for:", "num_citations": "2\n", "authors": ["1580"]}
{"title": "Definition and Implementation of Validation Strategies for a Nanosatellite Flight Control Software Model\n", "abstract": " Based on an existing model for the flight control software of cubETH previously developed [1] using the BIP framework [2], the goal of this project was to determine some essential properties the satellite was expected to have, and to review the model so as to verify that those properties were respected.In order to do so, translations and simplifications of the model were first attempted-those are described in section 3.1. The model was then adjusted such that some properties were exhibited by construction. We describe this in section 3.2. 1. Thirdly, an abstraction of the model was developed, which reduces the system\u2019s complexity by clearly differentiating modes of behaviour the satellite is expected to adopt; formal verification of properties based on those modes can then be achieved. Explanations regarding design and implementation in BIP are given in section 4.", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Introduction to the special section on rigorous embedded systems design\n", "abstract": " Embedded systems design brakes with traditional system design as it must jointly take into account extra-functional conflicting requirements such as performance, low energy consumption, autonomy, dependability, and short time-to-market. It raises important research challenges including modeling interaction between a system and its physical environment, component-based construction from heterogeneous components, resource-aware compilation, adaptive QoS management, automatic code generation, and deployment.This special section, organized by the European Network of Excellence ArtistDesign, focuses on design approaches guaranteeing essential system properties and determining trade-offs between conflicting design requirements. The call for papers was open for researchers outside of ArtistDesign. TECS received 18 submissions, of which four were accepted. The rest were rejected or withdrawn\u00a0\u2026", "num_citations": "1\n", "authors": ["1580"]}
{"title": "The Quest for Correctness: Beyond Verification\n", "abstract": " The Quest for Correctness: Beyond Verification Page 1 The Quest for Correctness: Beyond Verification Joseph Sifakis VERIMAG Laboratory University of Athens, October 3 2008 Page 2 Correctness by checking vs. Correctness by construction Building systems which are correct with respect to given requirements is the main challenge for all engineering disciplines Correctness can be achieved: \uf0a7 Either by checking that a system or a model of a system meets given requirements \uf0a7 Or by construction by using results such as algorithms, protocols, architectures eg token ring protocol, time triggered architecture A big difference between Computing Systems Engineering and disciplines based on Physics is the importance of a posteriori verification for achieving correctness Page 3 O V E R V I E W 3 \uf0a7 Current status \uf0a7 Work directions \uf0a7 Conclusion Page 4 Approaches for checking correctness Checking correctness \u2026", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Position Statement for Panel on Grand Challenges in Embedded Software\n", "abstract": " Embedded software design is part of embedded system design, which by its very nature, requires a deep and coherent integration of competencies in software, hardware, and controller design. The scientific challenge is in setting up embedded systems as a new discipline, which systematically and even-handedly marries computation and physicality, performance and robustness. Our aim is not to discuss this grand challenge presented in detail in [1], but rather to identify missing pieces for applying the formal methods paradigm to embedded systems design. Formal methods, in particular formal verification, have been successfully applied to hardware design, and more recently, to software design. To what extent is it possible to adapt existing methods and tools to embedded systems?Design is the process of deriving a system that meets given requirements. Correctness can be demonstrated using formal models\u00a0\u2026", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Component-Based system development\n", "abstract": " Component-Based Software Engineering (CBSE) uses methods, tools and principles of general software engineering. However there is one distinction: CBSE distinguishes component development and system development with components.", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Real-Time Scheduling\n", "abstract": " Real-time scheduling is the kernel mechanism having the most impact on RTOS performance. After describing existing algorithms and methodologies for embedded realtime applications, we present their limitations in handling dynamic environments, and discuss new research trends for overcoming them in next generation operating systems.", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Executive overview on component-based design and integration platforms\n", "abstract": " Component-Based Design is expected to increase software productivity, by reducing the amount of effort needed to develop, update, and maintain systems. There are two main benefits expected from component technology. First, it gives structure to system design and system development, thus making system verification and maintenance more tractable. Second, it allows reuse of development effort by allowing components to be re-used across products and in the longer term by paving the way for a market for software components.", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Component models and integration platforms: landscape\n", "abstract": " This section provides an overview of existing component models and component integration platforms. In some cases, particularly for proprietary component models, there is a tight connection between the component model and a particular integration platform, and sometimes also a particular ADL. In such cases we combine the descriptions. Thereafter follow descriptions of (some) available toolsets and platforms that support the component model.", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Composition for Component Based Modeling\n", "abstract": " Component-based engineering is of paramount importance for rigorous system design methodologies. It is founded on a paradigm which is common to all engineering disciplines: complex systems can be obtained by assembling components (building blocks). Components are usually characterized by abstractions that ignore implementation details and describe properties relevant to their composition eg transfer functions, interfaces. Composition is used to build complex components from simpler ones. It can be formalized as an operation that takes in components and their integration constraints. From these, it provides the description of a new, more complex component. Component-based engineering is widely used in VLSI circuit design methodologies, supported by a large number of tools. Software and system componentbased techniques have known significant development, especially due to the use of object technologies supported by languages such as C++, Java, and standards such as UML and CORBA. However, these techniques have not yet achieved the same level of maturity as has been the case for hardware. The main reason seems to be that software systems are immaterial and are not directly subject to the technological constraints of hardware, such as fine granularity and synchrony of execution. For software components, it is not as easy to establish a precise characterization of the service and functionality offered at their interface. Existing component technologies encompass a restricted number of interaction types and execution models, for instance, interaction by method calls under asynchronous execution. We lack concepts\u00a0\u2026", "num_citations": "1\n", "authors": ["1580"]}
{"title": "On the composition of timed systems\n", "abstract": " It is generally admitted that timed models can be obtained as extensions of untimed (discrete) models by adding constructs that allow to manipulate time explicitly or implicitly. For instance, timed automata are automata extended with continuous variables, called clocks, that can be tested and modified at transitions. Timed process algebras are languages obtained by adding constructs such as delays, timeouts and watchdogs to untmed process algebras. Finally, the different classes of timed Petri nets can be obtained by adding interval time constraints to Petri nets.             In timed models, a run can be considered as composed of alternating steps: time steps where time progresses synchronously in all the sequential components and transitions, timeless discrete state changes. This implies in particular, that discrete and continuous steps are mutually exclusive. Model behavior is represented by the language of\u00a0\u2026", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Real-time systems specification and verification\n", "abstract": " Real-time systems specification and verification | Proceedings of the 8th international symposium on System synthesis ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search esweek Conference Proceedings Upcoming Events Authors Affiliations Award Winners More HomeConferencesESWEEKProceedingsISSS '95Real-time systems specification and verification Article Real-time systems specification and verification Share on Author: Joseph Sifakis View Profile Authors Info & Affiliations ISSS '95: Proceedings of the 8th international symposium on System synthesisSeptember 1995 https://doi.org/10.1145/224486.224502 Published:13 September 1995 1citation 0 Downloads Metrics Total Citations1 Total \u2026", "num_citations": "1\n", "authors": ["1580"]}
{"title": "Un Langage d'aide \u00e0 la conception et \u00e0 la simulation de syst\u00e8mes complexes\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "1\n", "authors": ["1580"]}