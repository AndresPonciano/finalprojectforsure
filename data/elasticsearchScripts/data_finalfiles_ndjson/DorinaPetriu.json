{"title": "Sensor-based information appliances\n", "abstract": " Using the existing home infrastructure based on open industry standards, we will be able to integrate the home network with external networks to easily manage home devices, both locally and remotely. The advent of pervasive computing marks an urgent need for a new generation of intelligent sensing agents and information appliances. It will also demand environments for resource management of broad applications involving loosely coupled, event-driven, diverse information appliances. It is suggested that the development of intelligent sensing agents and sensor-based information appliances will spread pervasive technology to a multitude of human activities such as mining and manufacturing, security, transportation, sports, and health care. The topics discussed also include management of heterogeneous functions and networking technologies.", "num_citations": "292\n", "authors": ["578"]}
{"title": "Applying the UML performance profile: Graph grammar-based derivation of LQN models from UML specifications\n", "abstract": " The Object Management Group (OMG) is in the process of defining a UML Profile for Schedulability, Performance and Time that will enable the construction of models for making quantitative predictions regarding these characteristics. The paper proposes a graph-grammar based method for transforming automatically a UML model annotated with performance information into a Layered Queueing Network (LQN) performance model. The input to our transformation algorithm is an XML file that contains the UML model in XML format according to the standard XMI interface. The output is the corresponding LQN model description file, which can be read directly by existing LQN solvers. The LQN model structure is generated from the high-level software architecture and from deployment diagrams indicating the allocation of software components to hardware devices. The LQN model parameters are obtained from\u00a0\u2026", "num_citations": "231\n", "authors": ["578"]}
{"title": "A dependability profile within MARTE\n", "abstract": " The importance of assessing software non-functional properties (NFP) beside the functional ones is well accepted in the software engineering community. In particular, dependability is a NFP that should be assessed early in the software life-cycle by evaluating the system behaviour under different fault assumptions. Dependability-specific modeling and analysis techniques include for example Failure Mode and Effect Analysis for qualitative evaluation, stochastic Petri nets for quantitative evaluation, and fault trees for both forms of evaluation. Unified Modeling Language (UML) may be specialized for different domains by using the profile mechanism. For example, the MARTE profile extends UML with concepts for modeling and quantitative analysis of real-time and embedded systems (more specifically, for schedulability and performance analysis). This paper proposes to add to MARTE a profile for\u00a0\u2026", "num_citations": "198\n", "authors": ["578"]}
{"title": "Architecture-based performance analysis applied to a telecommunication system\n", "abstract": " Software architecture plays an important role in determining software quality characteristics, such as maintainability, reliability, reusability, and performance. Performance effects of architectural decisions can be evaluated at an early stage by constructing and analyzing quantitative performance models, which capture the interactions between the main components of the system as well as the performance attributes of the components themselves. The paper proposes a systematic approach to building layered queueing network (LQN) performance models from a UML description of the high-level architecture of a system and more exactly from the architectural patterns used for the system. The performance model structure retains a clear relationship with the system architecture, which simplifies the task of converting performance analysis results into conclusions and recommendations related to the software architecture\u00a0\u2026", "num_citations": "127\n", "authors": ["578"]}
{"title": "Software bottlenecking in client-server systems and rendezvous networks\n", "abstract": " Software bottlenecks are performance constraints caused by slow execution of a software task, in typical client-server systems a client task must wait in a blocked state for the server task to respond to its requests, so a saturated server will slow down all its clients. A rendezvous network generalizes this relationship to multiple layers of servers with send-and-wait interactions (rendezvous), a two-phase model of task behavior, and to a unified model for hardware and software contention. Software bottlenecks have different symptoms, different behavior when the system is altered, and a different cure from the conventional bottlenecks seen in queueing network models of computer systems, caused by hardware limits. The differences are due to the \"push-back\" effect of the rendezvous, which spreads the saturation of a server to its clients. The paper describes software bottlenecks by examples, gives a definition, shows\u00a0\u2026", "num_citations": "120\n", "authors": ["578"]}
{"title": "XSLT transformation from UML models to LQN performance models\n", "abstract": " A graph grammar-based transformation of a UML design model into a Layered Queueing Network (LQN) performance model was previously proposed by the authors of this paper. The actual transformation was implemented in two ways: first by using an existing graph-rewriting tool, and secondly through an ad-hoc graph transformation implemented in Java. This paper extends the previous work of the authors by proposing a third approach to implement the UML to LQN transformation by using XSLT. Recommended by the World Wide Web Consortium (W3C) the Extensible Stylesheet Language for Transformations (XSLT) is a flexible language for transforming XML documents into various formats including HTML, XML, text, PDF, etc. The input to our XSLT transformation is an XML file that contains the UML model in XML format according to the standard XML Metadata Interchange (XMI). The output is the\u00a0\u2026", "num_citations": "119\n", "authors": ["578"]}
{"title": "Dependability modeling and analysis of software systems specified with UML\n", "abstract": " The goal is to survey dependability modeling and analysis of software and systems specified with UML, with focus on reliability, availability, maintainability, and safety (RAMS). From the literature published in the last decade, 33 approaches presented in 43 papers were identified. They are evaluated according to three sets of criteria regarding UML modeling issues, addressed dependability characteristics, and quality assessment of the surveyed approaches. The survey shows that more works are devoted to reliability and safety, fewer to availability and maintainability, and none to integrity. Many methods support early life-cycle phases (from requirements to design). More research is needed for tool development to automate the derivation of analysis models and to give feedback to designers.", "num_citations": "113\n", "authors": ["578"]}
{"title": "From UML descriptions of high-level software architectures to LQN performance models\n", "abstract": " Performance characteristics as response time and through-put play an important role in defining the quality of software products. The software developers should be able to assess and understand the performance effects of various architectural decisions starting at an early stage, when changes are easy and less expensive, and continuing through-out the software life cycle. This can be achieved by constructing and analyzing quantitative performance models that capture the interactions between the main system components and point to the system\u2019s performance trouble spots. The paper proposes a formal approach to building Layered Queueing Network (LQN) performance models from Unified Modeling Language (UML) descriptions of the high-level architecture of a system, and more exactly from the architectural patterns used in the system. The performance modelling formalism, LQN, is an extension of\u00a0\u2026", "num_citations": "91\n", "authors": ["578"]}
{"title": "From UML to LQN by XML algebra-based model transformations\n", "abstract": " The change of focus from code to models promoted by OMG's Model Driven Development raises the need for verification of non-functional characteristics of UML models. such as performance, reliability, scalability, security, etc. Many modeling formalisms, techniques and tools have been developed over the years for the analysis of different non-functional characteristics. The challenge is not to reinvent new analysis methods for UML models, but to bridge the gap between UML-based software development tools and different kinds of existing analysis tools. Traditionally, the analysis models were built\" by hand\". However, a new trend is starting to emerge, that involves the automatic transformation of UML models (annotated with extra information) into various kinds of analysis models. This paper proposes a transformation method of an annotated UML model into a performance model. The mapping between the input\u00a0\u2026", "num_citations": "74\n", "authors": ["578"]}
{"title": "Predicting high-risk preterm birth using artificial neural networks\n", "abstract": " A reengineered approach to the early prediction of preterm birth is presented as a complimentary technique to the current procedure of using costly and invasive clinical testing on high-risk maternal populations. Artificial neural networks (ANNs) are employed as a screening tool for preterm birth on a heterogeneous maternal population; risk estimations use obstetrical variables available to physicians before 23 weeks gestation. The objective was to assess if ANNs have a potential use in obstetrical outcome estimations in low-risk maternal populations. The back-propagation feedforward ANN was trained and tested on cases with eight input variables describing the patient's obstetrical history; the output variables were: 1) preterm birth; 2) high-risk preterm birth; and 3) a refined high-risk preterm birth outcome excluding all cases where resuscitation was delivered in the form of free flow oxygen. Artificial training sets\u00a0\u2026", "num_citations": "61\n", "authors": ["578"]}
{"title": "Adding dependability analysis capabilities to the MARTE profile\n", "abstract": " Dependability is a non-functional property that should be assessed early in the software lifecycle. Although several UML profiles exist for quantitative annotations of non-functional properties, none of them provides concrete capabilities for dependability analysis of UML system models. In this paper, we propose a dependability analysis and modeling profile. The objective is twofold: to reuse proposals from the literature on deriving dependability models from UML annotated specifications and to be compliant with the recently adopted MARTE profile, which provides a framework for general quantitative analysis concepts that can be specialized to a particular analysis domain. The profile definition process was done in several steps. Firstly, an in depth analysis of the literature has been carried out to collect the information requirements for the profile. Secondly, a domain model for dependability analysis was\u00a0\u2026", "num_citations": "60\n", "authors": ["578"]}
{"title": "Model-driven dependability assessment of software systems\n", "abstract": " During the last two decades, a major challenge for the researchers working on modeling and evaluation of computer-based systems has been the assessment of system Non-functional Properties (NFP), such as performance, schedulability, dependability, or security. We can say that this is still an open research challenge today, although considerable progress has been made and different approaches have been developed, which are of interest not only to researchers but also to practitioners in the field.A class of successful approaches found in the literature relies on building traditional formal models for NFP analysis (such as fault trees, Markov chains, Petri nets, or Bayesian networks) from system descriptions based on the Unified Modeling Language (UML). UML is a widely used modeling language, adopted by both industry and academia, which has become the \u201clingua franca\u201d for software modeling. Model\u00a0\u2026", "num_citations": "59\n", "authors": ["578"]}
{"title": "Performance analysis with UML\n", "abstract": " The performance of a software design specified in UML is analyzed to estimate the delays, throughputs and resource utilizations, and such measures as the probability of missing a target response time. A case study that defines scenarios for the important responses is described by using the recently adopted UML Profile for Schedulability, Performance and Time. Using the Profile, stereotypes and annotations are added to the UML model to define desired values for performance measures such as response time, and estimated or budgeted values for performance parameters such as the CPU demand for an operation. From this information a performance model is created (a Layered Queueing Model, in this case) from which the performance estimates are computed, either by simulation or by analytic techniques.", "num_citations": "56\n", "authors": ["578"]}
{"title": "Using analytic models predicting middleware performance\n", "abstract": " The client-server paradigm is very popular in building distributed computing applications. Heterogeneity is natural in client-server systems, where components implemented using different technologies must interact and collaborate with each other. Interoperability is provided through middleware on such a heterogeneous system. Common Object Request BrokerArchitecture (CORBA) is a standard for middleware-based distributed object computing systems. This paper focuses on analytic modeling of middleware-based systems that can be used in the performance engineering of CORBA-based client server applications. The paper applies the Layered Queuing Network model to two types of middleware architectures: handle-driven and forwarding. The model outputs are compared with measured values to determine the accuracy of the modeling technique.", "num_citations": "53\n", "authors": ["578"]}
{"title": "Virtual theater for industrial training: A collaborative virtual environment\n", "abstract": " Collaborative Virtual Environment concepts have been used in many systems in the past few years. Applications of such technology range from military combat simulations to various civilian commercial applications. In this paper we present a CVE prototype developed for industrial tele-training. We are showing that users can successfully control the environment through wireless input based on video processing and speech recognition.", "num_citations": "53\n", "authors": ["578"]}
{"title": "Automatic derivation of a product performance model from a software product line model\n", "abstract": " We propose to integrate performance analysis in the early phases of the model-driven development process for Software Product Lines (SPL). We start with a multi-view UML model of the core family assets representing the commonality and variability between different products, which we call the SPL model. We add another perspective to the SPL model, annotating it with generic performance specifications expressed in the standard UML profile MARTE, recently adopted by OMG. The runtime performance of a product is affected by factors contained in the UML model of the product (derived from the SPL model), but also by external factors depending on the implementation and execution environments. The external factors not contained in the SPL model need to be eventually represented in the performance model. In order to do so, we propose to represent the variability space of different possible implementation\u00a0\u2026", "num_citations": "52\n", "authors": ["578"]}
{"title": "Software Performance Engineering of a Web Service-Based Clinical Decision Support Infrastructure\n", "abstract": " This paper has two contributions: a) it proposes a web services-based infrastructure to support Clinical Decision Support Systems (CDSSs) for processing multi-domain medical data from the obstetrical, perinatal and neonatal care domains, and b) applies Software Performance Engineering (SPE) to the proposed infrastructure. This extends a XML-based framework for medical data interoperability and integration of CDSSs into the Neonatal Intensive Care Unit, developed previously by the authors. The framework integrates CDSSs, such as Artificial Neural Networks (ANNs), Case-Based Reasoning (CBR) tools, and alert detection systems. The goal is to reduce medical errors, to support the physician's decision-making process and to improve ultimately patient care. We applied SPE from the early design stages in order to ensure that the system will meet its performance requirements, and to identify possible\u00a0\u2026", "num_citations": "51\n", "authors": ["578"]}
{"title": "Real-time 2 (1/2)-D head pose recovery for model-based video-coding\n", "abstract": " This paper discusses a 2(1/2)-D tracking method allowing real-time recovery of the three-dimensional (3-D) position and orientation of a head moving in its image plane. The described method uses a two-dimensional (2-D) elliptical head model, region- and edge-based matching algorithms, and a linear Kalman filter estimator. The resulting motion tracking system works in a realistic environment without makeup on the face, with an uncalibrated camera, normal lighting conditions, and an unknown background.", "num_citations": "47\n", "authors": ["578"]}
{"title": "Integrating performance analysis in the model driven development of software product lines\n", "abstract": " The paper proposes to integrate performance analysis in the early phases of the model-driven development process for Software Product Lines (SPL). We start by adding generic performance annotations to the UML model representing the set of core reusable SPL assets. The annotations are generic and use the MARTE Profile recently adopted by OMG. A first model transformation realized in the Atlas Transformation Language (ATL), which is the focus of this paper, derives the UML model of a specific product with concrete MARTE performance annotations from the SPL model. A second transformation generates a Layered Queueing Network performance model for the given product by applying an existing transformation approach named PUMA, developed in previous work. The proposed technique is illustrated with an e-commerce case study that models the commonality and variability in both structural\u00a0\u2026", "num_citations": "46\n", "authors": ["578"]}
{"title": "High sampling resolution tactile sensor for object recognition\n", "abstract": " The paper discusses a tactile sensor with a specially designed compliant overlay which reduces the tactile sensor distortions caused by deformations of the elastic material during probing. The sensor is used for model-based active tactile recognition of fixed 3-D objects.< >", "num_citations": "40\n", "authors": ["578"]}
{"title": "Three-dimensional head tracking and facial expression recovery using an anthropometric muscle-based active appearance model\n", "abstract": " This paper describes a novel 3-D model-based tracking algorithm allowing the real-time recovery of 3-D position, orientation, and facial expressions of a moving head. The method uses a 3-D anthropometric muscle-based active appearance model (3-D AMB AAM), a feature-based matching algorithm, and an extended Kalman filter (EKF) pose and expression estimator. Our model is an extension of the classical 2-D AAM and uses a generic 3-D wireframe model of the face based on two sets of controls: the anatomically motivated muscle actuators to model facial expressions and the statistically based anthropometrical controls to model different facial types.", "num_citations": "38\n", "authors": ["578"]}
{"title": "Consistent behaviour representation in activity and sequence diagrams\n", "abstract": " The paper proposes a formal approach for constructing UML activity diagrams from sequence diagrams by using graph transformations. Activity diagrams are good at describing the overall flow of control in a system, as they provide support for conditional and parallel behaviour, but do not capture well object interactions. Activity diagrams are mostly used in the preliminary stages of analysis and design. As the design progresses, more detailed descriptions of object interactions become necessary, and interaction diagrams are used for this purpose. During the transition from a high level to a detailed design, the mapping between the behavior represented in activity diagrams and that described in interaction diagrams may be lost, and the two views may become inconsistent. By reconstructing the activity diagrams from sequence diagrams, consistency is re-enforced. Every activity block is cross-referenced with\u00a0\u2026", "num_citations": "38\n", "authors": ["578"]}
{"title": "Hierarchical animation control of avatars in 3-d virtual environments\n", "abstract": " This paper reports the development of a three-layer hierarchical control system for the animation of anthropomorphic avatars in three-dimensional virtual environments. The lower layer controls the movement of the avatar's joints, the second layer defines skills or basic behaviors (such as walk, run, and jump), and the highest layer executes a behavior-based script language that can be used to describe stories to be enacted by the avatars. In order to verify how flexible the proposed hierarchical approach is, the two lower control layers were implemented in two different ways, without affecting the script language layer.", "num_citations": "35\n", "authors": ["578"]}
{"title": "Approximate mean value analysis of client-server systems with multi-class requests\n", "abstract": " Stochastic Rendezvous Networks (SRVNs) are performance models for multitasking parallel software with intertask communication via rendezvous introduced in [1], which are very appropriate to model client-server systems. SRVNs differ from Queueing Networks (QNs) in two ways: nodes act as both clients and servers (allowing for nested service), and servers have two distinct phases of service\u2014the first one \u201cin RV\u201d with the client, and the second \u201cafter RV\u201d, executed in parallel with the client. Early work on solving SRVN models has used a kind of approximate Mean Value Analysis based on heuristic ad hoc assumptions to determine the task queue properties at the instant of RV request arrivals. Approximation are necessary since SRVN violates product form. Recently, a more rigorous approach was proposed in [2] for the solution of SRVN models, based on a special aggregation (named \u201cTask-Directed\u00a0\u2026", "num_citations": "30\n", "authors": ["578"]}
{"title": "Internet-based teleoperation of a robot manipulator for education\n", "abstract": " In order to facilitate the study of the robot manipulator control for the users who cannot access the real robot manipulator, we are developing an Internet-based teleoperation system for a robot manipulator-Thermo CRS A465 which is located in the lab at Lakehead University. In this paper, the system architecture and software design will be introduced.", "num_citations": "29\n", "authors": ["578"]}
{"title": "Deriving software performance models from architectural patterns by graph transformations\n", "abstract": " The paper proposes a formal approach to building software performance models for distributed and/or concurrent software systems from a description of the system\u2019s architecture by using graph transformations. The performance model is based on the Layered Queueing Network (LQN) formalism, an extension of the well-known Queueing Network modelling technique [16, 17, 8]. The transformation from the architectural description of a given system to its LQN model is based on PROGRES, a known visual language and environment for programming with graph rewriting systems [9-11]. The transformation result is an LQN model that can be analysed with existent solvers [5].", "num_citations": "29\n", "authors": ["578"]}
{"title": "Software model-based performance analysis\n", "abstract": " The chapter starts with a brief review of performance modelling formalisms and a discussion of the performance annotations that need to be added to UML software models in order to enable performance analysis. The principles for transforming annotated software models into performance models are presented next. Such model transformations must bridge a large semantic gap between the source and the target model; hence a pivot model is often used. An example of such a transformation is given, from UML extended with the MARTE profile to the Layered Queueing Network performance model. The role of an intermediate pivot language named Core Scenario Model is also discussed. The chapter ends with a discussion of lesson learned and future challenges for integrating the analysis of multiple non-functional properties in the context of MDE.", "num_citations": "28\n", "authors": ["578"]}
{"title": "Performance analysis of uml models using aspect-oriented modeling techniques\n", "abstract": " Aspect-Oriented Modeling (AOM) techniques allow software designers to isolate and address separately solutions for crosscutting concerns (such as security, reliability, new functional features, etc.) This paper proposes an approach for analyzing the performance effects of a given aspect on the overall system performance, after the composition of the aspect model with the primary model of a system. Performance analysis of UML models is enabled by the \u201dUML Performance Profile for Schedulability, Performance and Time\u201d (SPT) standardized by OMG, which defines a set of quantitative performance annotations to be added to a UML model. The first step of the proposed approach is to add performance annotations to both the primary model and to the aspect model(s). An aspect model is generic at first, and therefore its performance annotations must be parameterized. A generic model will be converted into\u00a0\u2026", "num_citations": "28\n", "authors": ["578"]}
{"title": "Flexible agent-based robotic assembly cell\n", "abstract": " This paper describes a flexible, coherent framework for organizing and operating a robotic assembly cell that has multiple robots. This framework, which is based on the concept of an agent as understood in the field of multiagent systems, supports the task-level programming and scheduling of assembly operations. In this framework, we decompose an assembly operation into two distinct phases: part fetching and part assembling. The agents of the cell correspond to these two assembly phases plus an agent to manage the shared physical space of the cell and an agent to properly schedule the assembly operations. The simulations and experiments with this framework are presented and discussed.", "num_citations": "28\n", "authors": ["578"]}
{"title": "Applying performance modelling to a telecommunication system\n", "abstract": " As telecommunication software systems are growing in size and complexity, the eflort of tuning them for performance becomes more costly and time-consuming. Performance modelling ofleers an eficient means of estimating software design and implementation alternatives, and is much easier to apply than actually changing the real system. Although it is widelv recognized that performance engineering is very important to the telecommunications industry, modelling techniques are not easily accessible to software developers. The most important obstacle is the cognitive gap between the software and the performance domains. This paper presents the experience of the authors in modelling an existing telecommunication product and then in using its results for capacity planning and for feeding back recommendations to the sofmare development team. The paper also describes an approach to make performance\u00a0\u2026", "num_citations": "27\n", "authors": ["578"]}
{"title": "Approach for generating performance models from UML models of SOA systems\n", "abstract": " Model-Driven SOA is an emerging approach for developing service-oriented systems using models at different levels of abstractions and applying model transformations to generate either code or other models for the analysis of non-functional properties, such as performance. The paper proposes an approach for deriving layered queueing performance models for the evaluation of the runtime performance characteristics of such systems in the early development phases, before the entire system is built and can be deployed and measured. Early performance evaluation helps to choose an appropriate architecture, design and configuration alternatives, so that the final system meets its performance requirements. The starting point for derivation is a platform independent UML model of a SOA system representing the workflows, architecture of the underlying components offering services, and behavior of the\u00a0\u2026", "num_citations": "25\n", "authors": ["578"]}
{"title": "Towards automatic derivation of a product performance model from a UML software product line model\n", "abstract": " Software Product Line (SPL) engineering is a software development approach that takes advantage of the commonality and variability between products from a family, and supports the generation of specific products by reusing a set of core family assets. This paper proposes a UML model transformation approach for software product lines to derive a performance model for a specific product. The input to the proposed technique, the\" source model\", is a UML model of a SPL with performance annotations, which uses two separate profiles: a\" product line\" profile from literature for specifying the commonality and variability between products, and the MARTE profile recently standardized by OMG for performance annotations. The source model is generic and therefore its performance annotations must be parameterized. The proposed derivation of a performance model for a concrete product requires two steps: a) the\u00a0\u2026", "num_citations": "25\n", "authors": ["578"]}
{"title": "Early evaluation of software performance based on the UML performance profile\n", "abstract": " The\" UML Profile for Schedulability, Performance and Time\" recently adopted by OMG defines performance extensions via the Unified Modeling Language (UML) stereotypes, tagged values and constraints. In order to conduct quantitative performance analysis of a UML model with performance annotations, one must first translate it into a performance model, then solve the generated model with an existing performance analysis tool. This paper proposes a method for transforming automatically an annotated UML model into a simulation-based performance model. The UML model represents the software architecture, the deployment of software on hardware resources, and a set of key performance scenarios. The transformation was implemented in Extensible Stylesheet Language for Transformations (XSLT). It takes as input an annotated UML model in eXtensible Markup Language (XML) Metadata Interchange\u00a0\u2026", "num_citations": "24\n", "authors": ["578"]}
{"title": "Comparing two UML Profiles for non-functional requirement annotations: the SPT and QoS Profiles\n", "abstract": " The paper compares two UML Profiles adopted by OMG for annotating non-functional requirements of software systems: the UML Profile for Schedulability, Performance and Time (SPT) formally adopted in 2003 and the recently emerging UML Profile for Modeling Quality of Service and Fault Tolerance Characteristics and Mechanisms (QoS). The SPT Profile was the first attempt to extend UML with basic timing and concurrency concepts, and to express requirements and properties needed for conducting schedulability and performance analysis. While the SPT Profile is focused on these two types of analysis, the more recent QoS Profile has a broader scope, aiming to allow the user to define a wider variety of QoS requirements and properties. In order to compare the two profiles, we will focus on performability and timing aspects of software systems, by exemplifying the concepts through an example of embedded automation system. The comparative analysis shows that new concepts are needed in both profiles to express time intervals between two arbitrary events. Also, the two profiles will need to reach a common agreement on the specification of complex timing values, especially of those with stochastic characteristics. Another open problem is the parameterization of models, as in many cases fixed values for model parameters are not enough. The SPT Profile goes a step further by supporting symbolic variables and expressions, but the QoS Profile does not have such a capability yet. In general, both Profiles struggle with the balance between flexibility (ie, allow the user to introduce its own definitions) and simplicity/convenience of expression\u00a0\u2026", "num_citations": "23\n", "authors": ["578"]}
{"title": "Performance analysis of aspect-oriented UML models\n", "abstract": " Aspect-Oriented Modeling (AOM) techniques allow software designers to isolate and address separately solutions for crosscutting concerns (such as security, reliability, new functional features, etc.). Current AOM research is concerned not only with the separate expression of concerns and their composition into a complete system model, but also with the analysis of different properties of such models. This paper proposes an approach for analyzing the performance effects of a given aspect on the overall system performance, after the composition of the aspect model with the system\u2019s primary model. Performance analysis of UML models is enabled by the \u201cUML Performance Profile for Schedulability, Performance and Time\u201d (SPT) standardized by OMG, which defines a set of quantitative performance annotations to be added to a UML model. The first step of the proposed approach is to add performance\u00a0\u2026", "num_citations": "21\n", "authors": ["578"]}
{"title": "Capturing behaviour for the use of avatars in virtual environments\n", "abstract": " Avatars, representations of people in virtual environments, are subject to human control. However, for most applications, it is impractical for a person to directly control each joint in a complex avatar.          Rather, people must be allowed to specify complex behaviours with simple instructions and the avatar permitted to select the correct movements in sequence to execute the instruction. This requires a variety          of technologies that are currently available. Human behaviour must be captured and stored it so that it can be retrieved at a later time for use by the avatar. This has been done successfully with a variety          of haptic interfaces, with visual observation of human head movements, and with verbal behaviour in natural language applications. The behaviour must be broken into atomic actions that can be sequenced          with a regular grammar, and an appropriate grammar developed. Finally, a user interface\u00a0\u2026", "num_citations": "20\n", "authors": ["578"]}
{"title": "Dependability analysis techniques\n", "abstract": " An overview of the techniques traditionally used in dependability analysis that are compliant with current industrial standards (i.e., the International Electrotechnical Commission standards) is provided. In particular, the focus is on those techniques that are chosen as target formalism of model transformations (described in                Chap. 7                            ), that is Fault Tree analysis and Petri Net analysis.", "num_citations": "19\n", "authors": ["578"]}
{"title": "3-D head pose recovery for interactive virtual reality avatars\n", "abstract": " This paper discusses a tracking method allowing real-time recovery of the three-dimensional (3-D) position and orientation of a moving head. The described method uses a wireframe model of the head, a feature-based matching algorithm, and an extended Kalman filter estimator. The resulting motion tracking system works in a realistic environment without makeup on the face, with uncalibrated camera, and unknown lighting conditions and background.", "num_citations": "19\n", "authors": ["578"]}
{"title": "UML model to fault tree model transformation for dependability analysis\n", "abstract": " This thesis proposes a model transformation to automatically generate Fault Tree models from UML models annotated with dependability annotations. Fault tree analysis is a top down deductive failure analysis model using both qualitative and quantitative analysis of undesired events of a system. It is used in safety and reliability engineering. The main purpose of this work is to use a specialized model transformation language to transform UML Sequence Diagrams, along with UseCase Diagrams and Composite Structure Diagrams (extended with MARTE/DAM stereotypes) into Fault Tree Models. The trans- formation language used in this study is ATL (ATL Transformation Language). The transformation covers both hardware software, as well as their allocation within the system.", "num_citations": "18\n", "authors": ["578"]}
{"title": "Dependability modeling and assessment in UML-based software development\n", "abstract": " Assessment of software nonfunctional properties (NFP) is an important problem in software development. In the context of model-driven development, an emerging approach for the analysis of different NFPs consists of the following steps: (a) to extend the software models with annotations describing the NFP of interest; (b) to transform automatically the annotated software model to the formalism chosen for NFP analysis; (c) to analyze the formal model using existing solvers; (d) to assess the software based on the results and give feedback to designers. Such a modeling\u2192analysis\u2192assessment approach can be applied to any software modeling language, be it general purpose or domain specific. In this paper, we focus on UML-based development and on the dependability NFP, which encompasses reliability, availability, safety, integrity, and maintainability. The paper presents the profile used to extend UML with dependability information, the model transformation to generate a DSPN formal model, and the assessment of the system properties based on the DSPN results.", "num_citations": "18\n", "authors": ["578"]}
{"title": "Script language for avatar animation in 3D virtual environments\n", "abstract": " This paper continues previous work by the authors on the animation of anthropomorphic avatars in virtual reality environments. An avatar animation control system was built in three hierarchical levels: joint control, basic behaviors and script language. This paper focuses on the grammar and parser for the script language, which was designed to be easy to extend and modify. Also, in order to verify how flexible the hierarchical approach is, the two lower control levels were implemented in two different ways, without affecting the script language level.", "num_citations": "18\n", "authors": ["578"]}
{"title": "Product model derivation by model transformation in software product lines\n", "abstract": " Product derivation is an essential part of the Software Product Line (SPL) development process. The paperproposes a model transformation for deriving automatically a UML model of a specific product from the UML model of a product line. This work is a part of a larger project aiming to integrate performance analysis in the SPL model-driven development. The SPL source model is expressed in UML extended with two separate profiles: a \"product line\" profile from literature for specifying the commonality and variability between products, and the MARTE profile recently standardized by OMG for performance annotations. The automatic derivation of a concrete product model based on a given feature configuration is enabled through the mapping between features from the feature model and their realizations in the design model. The paper proposes an efficient mapping technique that aims to minimize the amount of\u00a0\u2026", "num_citations": "17\n", "authors": ["578"]}
{"title": "An UML profile for dependability analysis and modeling of software systems\n", "abstract": " In this document we define the Dependability Analysis Modelling profile, namely DAM profile. The process of deriving a DAM profile has been going through several steps. First of all, an in depth analysis of the literature has been carried out, in order to collect in a checklist the information requirements for the profile. Then a two-step approach for the profile definition has been followed. In the first step, a Dependability Analysis (DA) domain model is defined, in terms of a structured set of UML Class Diagrams, where the basic concepts supporting dependability analysis are represented. The domain model is assessed with respect to the works in the literature considered before passing to the second step. In the second step, the DAM profile is defined considering the domain model. The DAM profile is then assessed with respect to the checklist of information requirements.", "num_citations": "16\n", "authors": ["578"]}
{"title": "Towards a web services infrastructure for perinatal, obstetrical, and neonatal clinical decision support\n", "abstract": " This paper presents the design of a unifying infrastructure for clinical decision support systems (CDSSs) and medical data relating to the perinatal life cycle. The diverse CDSSs designed for deployment within the perinatal life cycle to improve care, such as Artificial Neural Networks and Case-Based Reasoners, are integrated using the eXtended Markup Language (XML) and are subsequently offered as a secure web service. These web services are accessible from anywhere within the hospital information system and from remote authorized sites. The goal of such an infrastructure is to provide integrated CDSS processing in a complex distributed environment, in order to support real-time physician decision-making. This design provides a novel web services infrastructure implementation and offers a strong case study for deploying and evaluating the web services paradigm within a health care environment.", "num_citations": "16\n", "authors": ["578"]}
{"title": "A Hierarchical Distributed Protocol for MPLS path creation\n", "abstract": " Network service provisioning involves the control of network resources through signaling, routing and management protocols that achieve quality of service and traffic engineering objectives. Network service providers are typically faced with scalability problems due to the explosion in network size and demand. In this paper we propose a new hierarchical distributed protocol for the provisioning of MPLS-based tunnels. The protocol encapsulates the required signaling and routing. The protocol alleviates the scalability problem through extending the current two-tier architecture of the Internet to a multi-level hierarchical one. It enables mechanisms for quality of service, and intra- and inter-domain traffic engineering. Analytical analysis and simulation results show that the protocol exploits parallelism in routing computation to reduce the setup time of an MPLS path. This comes at the expense of an increased message\u00a0\u2026", "num_citations": "16\n", "authors": ["578"]}
{"title": "Approximate MVA from Markov model of software client/server systems\n", "abstract": " Stochastic rendezvous networks (SRVN) are performance models for multitasking parallel software with intertask communication via rendezvous (RV). The paper describes an approximation for the arrival instant probabilities for a class of simple client/server SRVN, based on a rigorous analysis of the Markov chain model describing the interference of different client tasks contending for a single server task with FIFO queueing discipline. The algorithm for a simple client/server SRVN is integrated into an iterative decomposition algorithm for complex SRVN models with any number of servers and multi-layered service. Finally, the SRVN model is used to study an example of software bottleneck.< >", "num_citations": "16\n", "authors": ["578"]}
{"title": "Approximate mean value analysis based on Markov chain aggregation by composition\n", "abstract": " Markovian performance models are impractical for large systems because their state space grows very rapidly with the system size. This paper derives an approximate Mean Value Analysis (AMVA) solution for Markov models that represent a composition of subsystems. The goal is robust scalable analytical approximation. The approach taken here is to create approximate aggregated Markov chain submodels, each representing a view of the Markov chain for the entire system from the perspective of a selected set D of tagged components, and to derive mean value equations from them. The analytic solutions of submodels are then combined using system-level relationships, which must be identified for each system; this is not automatic but is usually straightforward. The first point of novelty is the method used to create the aggregate submodels for different sets D, building up each submodel by composition of the\u00a0\u2026", "num_citations": "15\n", "authors": ["578"]}
{"title": "3D head pose recovery for interactive virtual reality avatars\n", "abstract": " This paper discusses a 3D tracking method allowing real-time recovery of the 3D position and orientation of a moving head. The described method uses a 3D wireframe model of the head, a 2D feature-based matching algorithm, and an extended Kalman filter estimator. The resulting motion tracking system works in a realistic environment without makeup on the face, with uncalibrated camera, and unknown fighting conditions and background.", "num_citations": "15\n", "authors": ["578"]}
{"title": "A pattern language for improving the capacity of layered client/server systems with multi-threaded servers\n", "abstract": " The paper describes a set of patterns that extend the pattern language proposed in [Meszaros96] for improving the capacity of reactive systems. The intent of these patterns is to identify some specific causes that limit the efficiency of a distributed layered client-server system with multi-threaded servers, and to find appropriate corrective measures. The type of systems considered here is a subclass of the larger category of reactive systems, and the new patterns are dealing with their specific performance characteristics. The effects of the patterns are illustrated with performance measurements conducted on a layered client-server system.", "num_citations": "15\n", "authors": ["578"]}
{"title": "Model Driven Engineering Languages and Systems: 13th International Conference, MODELS 2010, Oslo, Norway 3-8, 2010, Proceedings, Part II\n", "abstract": " The MODELS series of conferences is the premier venue for the exchange of-novative technical ideas and experiences focusing on a very important new te-nical discipline: model-driven software and systems engineering. The expansion ofthisdisciplineisadirectconsequenceoftheincreasingsigni? canceandsuccess of model-based methods in practice. Numerous e? orts resulted in the invention of concepts, languagesand tools for the de? nition, analysis, transformation, and veri? cationofdomain-speci? cmodelinglanguagesandgeneral-purposemodeling language standards, as well as their use for software and systems engineering. MODELS 2010, the 13th edition of the conference series, took place in Oslo, Norway, October 3-8, 2010, along with numerous satellite workshops, symposia and tutorials. The conference was fortunate to have three prominent keynote speakers: Ole Lehrmann Madsen (Aarhus University, Denmark), Edward A. Lee (UC Berkeley, USA) and Pamela Zave (AT&T Laboratories, USA). To provide a broader forum for reporting on scienti? c progress as well as on experience stemming from practical applications of model-based methods, the 2010 conference accepted submissions in two distinct tracks: Foundations and Applications. The primary objective of the? rst track is to present new research results dedicated to advancing the state-of-the-art of the discipline, whereas the second aims to provide a realistic and veri? able picture of the current state--the-practice of model-based engineering, so that the broader community could be better informed of the capabilities and successes of this relatively young discipline. This\u00a0\u2026", "num_citations": "14\n", "authors": ["578"]}
{"title": "Model-based face and lip animation for interactive virtual reality applications\n", "abstract": " In this paper, we describe an experimental performance-driven animation system for an avatar face using model-based video coding and audio-track driven lip animation.", "num_citations": "14\n", "authors": ["578"]}
{"title": "Deriving performance Models from UML models by Graph Transformations\n", "abstract": " Deriving Performance Models from UML Models by Graph Transformations Page 1 See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/267939426 Deriving Performance Models from UML Models by Graph Transformations Article CITATIONS 7 READS 7 1 author: Dorina C. Petriu Carleton University 162 PUBLICATIONS 2,775 CITATIONS SEE PROFILE Available from: Dorina C. Petriu Retrieved on: 13 May 2016 Page 2 September 2000 WOSP\u20192000 1 Deriving Performance Models from UML Models by Graph Transformations Dr. Dorina Petriu Carleton University Department of Systems and Computer Engineering Ottawa, Canada, K1S 5B6 http://www.sce.carleton.ca/faculty/petriu.html Page 3 WOSP\u2019 2000 \u00a9Dorina Petriu 2 Outline s Background q Layered Queueing Network (LQN) performance models s Methodology for performance model derivation s Software \u2026", "num_citations": "14\n", "authors": ["578"]}
{"title": "Performance bounds for concurrent software with rendezvous\n", "abstract": " Synchronous message-passing communication, or rendezvous, occurring between software tasks can have a significant effect on system performance. The rendezvous style of communication is coming into wider use in programming languages and operating systems for parallel and distributed environments. Understanding the performance implications of this style of inter-task communication is becoming a matter of practical importance. The dual nature of a task which acts both like a customer as well as a server, makes the performance analysis of rendezvous-based multitasking systems quite different from the analysis of the other queueing systems with known results. This research focuses on rendezvous-based systems in which the execution behavior of the software has a nondeterministic component of a very general nature which may for example be the manifestation of a data dependent behavior. Based on\u00a0\u2026", "num_citations": "14\n", "authors": ["578"]}
{"title": "A web-based 3d virtual robot remote control system\n", "abstract": " Robot remote control is a major subfield of robotics. It has many potential applications, such as remote production monitoring, remote exploration and manipulation in dangerous environments, tele-surgery, tele-teaching, etc. The paper proposes an approach to develop a robot remote control system by combining a 3D graphical model of the robot and its environment with Web based control software. The 3D graphical model of the environment and the robot is to get a more realistic interface which can help the user to control remotely the robot or part of the robot, such as the arm, for easier manipulation.", "num_citations": "13\n", "authors": ["578"]}
{"title": "Performance modeling for virtual network based service provisioning\n", "abstract": " One of the goals of network service providers (SP) is to provision efficiently value-added networking services to their end users. The services may have different duration, connectivity, and quality of service (QoS) requirements. An SP meets such requirements by exploiting various routing and management mechanisms for edge and core networks. We focus on network services that require the establishment of virtual networks (VNs). This paper considers a VN creation architecture based on multi-protocol label switching (MPLS). MPLS is one approach for implementing VNs that enables programmability for network infrastructure and hence the creation of value-added services. An analytic performance model is developed to assess the scalability of the architecture as the underlying physical network infrastructure evolves. The model we present describes only coarse features of the architecture, yet offers insights\u00a0\u2026", "num_citations": "13\n", "authors": ["578"]}
{"title": "Automatic Transformation of UML software specification into LQN performance Models using Graph Grammar Techniques\n", "abstract": " The interest in relating Software Architecture speci\ufb01cation to Software Performance Analysis has been growing rapidly in the past few years. However, there is still a gap between the software development and the performance analysis domains. The main reasons for having this gap has been the lack of a simple. inexpensive, and scalable techniques and tools for building models of complex, distributed and real-time software systems, and for solving these models to obtain the systems performance properties. Automated techniques are therefore needed to ease the process of building and solving performance models.In this thesis, a systematic methodology is developed to automatically translate Uni\ufb01ed Modeling Language (UMi..) software speci\ufb01cation into Layered Queueing networks (LQN) performance models using Graph Grammar techniques. UML was chosen as the input language because it is a standard\u00a0\u2026", "num_citations": "13\n", "authors": ["578"]}
{"title": "Performance analysis roundtrip: automatic generation of performance models and results feedback using cross-model trace links\n", "abstract": " This paper proposes an approach for performance analysis roundtrip in the context of model-driven engineering (MDE) of real-time distributed and embedded systems. The starting point is a UML software model with MARTE performance annotations, such as performance requirements and resource demands. The source software model is automatically transformed into a Layered Queueing Network (LQN) performance model. We developed the transformation with Epsilon, a family of languages for model-to-model transformation, model validation and model management. Using specialized languages helped us create a more compact transformation, easier to understand and maintain than transformations developed with general purpose languages, such as Java. Beside the performance model, the transformation also generates a traceability model containing trace links between mapped elements of the software and performance model. After solving the performance model with an existing solver, the performance results are fed back to the software model by following in reverse the cross-model trace links. The software developers can see the performance results as MARTE stereotype attributes, using a standard UML editor. The approach is illustrated by applying it to an e-commerce application.", "num_citations": "12\n", "authors": ["578"]}
{"title": "User-friendly approach for handling performance parameters during predictive software performance engineering\n", "abstract": " A Software Product Line (SPL) is a set of similar software systems that share a common set of features. Instead of building each product from scratch, SPL development takes advantage of the reusability of the core assets shared among the SPL members. In this work, we integrate performance analysis in the early phases of SPL development process, applying the same reusability concept to the performance annotations. Instead of annotating from scratch the UML model of every derived product, we propose to annotate the SPL model once with generic performance annotations. After deriving the model of a product from the family model by an automatic transformation, the generic performance annotations need to be bound to concrete product-specific values provided by the developer. Dealing manually with a large number of performance annotations, by asking the developer to inspect every diagram in the\u00a0\u2026", "num_citations": "11\n", "authors": ["578"]}
{"title": "Software Performance Evaluation: Graph grammar-based Transformation of UML design models into performance models\n", "abstract": " The quality of many software intensive systems is determined to a large extent by their performance characteristics, such as response time and throughput. The developers of such systems should be able to assess and understand the performance effects of various design decisions starting at an early stage, when changes are easy and less expensive, and continuing throughout the software life cycle. This can be achieved by constructing and analyzing quantitative performance models that capture the interactions between the main system components and point to the system\u2019s performance trouble spots. The paper proposes a graph grammar-based transformation from UML design models into Layered Queueing Network (LQN) performance models. The LQN model structure is generated from the high-level software architecture showing the architectural patterns used in the system, and from deployment diagrams indicating the allocation of software components to hardware devices. The LQN model parameters are obtained from detailed models of key performance scenarios, represented as UML interaction or activity diagrams annotated with performance information (according to the recently proposed UML performance profile). The proposed transformation from UML to LQN was implemented with PROGRES, a well-known visual language and environment for programming with graph rewriting systems. The proposed technique was applied to the performance analysis of three CORBA-based client server systems, and the performance model results are reasonably close to measurements obtained from the actual implementations.", "num_citations": "11\n", "authors": ["578"]}
{"title": "A performance study of client-broker-server systems\n", "abstract": " The role of broker in client-server systems is to accommodate flexible, open, heterogeneous system design and to facilitate fault tolerance and improved performance through load balancing. Some architectural design decisions, such as broker distribution and server replication, strongly affect the system performance. The paper presents alternative client-broker-server architectures and compares their performance by using a combination of measurements and simulation. Broker distribution is found to reduce some of the overheads due to the introduction of brokers into client-server systems, and results in a system that has performance characteristics comparable to that of a pure client-server system. It is shown that in a client-server-broker system employing stateful server replication and using the unicast group communication mechanism for server-state consistency, there is a critical message size beyond which the\u00a0\u2026", "num_citations": "11\n", "authors": ["578"]}
{"title": "Analytic performance estimation of client-server systems with multi-threaded clients\n", "abstract": " The authors present an analytical performance model named rendezvous network with multi-threaded clients (RNMTC) for performance analysis of client-server systems. RNMTC is able to model systems with multiple clients inter-communicating with multiple servers which may represent either hardware or software system components. Each system client is described by a precedence graph, and may consist of multiple concurrent execution threads whose number can vary due to fork and join operations. The analytic method for RNMTC proposed is based on hierarchical decomposition: at the higher level the system behaviour is represented by a Markov chain (MC) model whose states correspond to all possible combinations of client execution states; at the lower level a stochastic rendezvous network (SRVN) model with simple clients corresponds to each MC slate. SRVN was previously introduced and MVA\u00a0\u2026", "num_citations": "11\n", "authors": ["578"]}
{"title": "Predicting preterm birth using artificial neural networks\n", "abstract": " This paper has three contributions: 1) to evaluate how changing the a priori distribution of the training set affects the performance of a back-propagation feed-forward artificial neural network (ANN) in predicting PreTerm Birth (PTB) for obstetrical patients, 2) to assess the effectiveness of the weight elimination cost function in improving the ANN's classification of PTB and in identifying a new minimal dataset, and (3) to determine if PTB can be predicted outside of clinical trial situations using data readily available to the physician during obstetrical care. The ANN was trained and tested on cases with 8 input variables describing the patient's obstetrical history; the output variable was PTB before 37 weeks gestation. To observe the impact of training with a higher-than-normal prevalence, an artificial training set with a PTB rate of 23% was created. Networks trained on higher-than-normal prevalence achieved higher\u00a0\u2026", "num_citations": "10\n", "authors": ["578"]}
{"title": "Performance Analysis based on the UML SPT Profile\n", "abstract": " \u25cf Software Performance Engineering (SPE)(Smith, 1990):\u220e integrate performance evaluation into the software development process from the early stages throughout the whole life-cycle\u220e requires the construction and analysis of performance models\u25cf Why SPE is not frequently applied in practice:\u220e cognitive gap between the software development domain and the performance analysis domain\u220e pressure for \u201cshorter time to market\u201d leaves no time for SPE\u25cf Performance analysis of UML models\u220e OMG\u2019s UML Profile for Schedulability, Performance and Time (SPT)\u25cf STP Profile sparked research efforts to:\u220e automate the derivation of performance models from UML models\u220e bridge the gap between software design and performance analysis", "num_citations": "10\n", "authors": ["578"]}
{"title": "Virtual prototyping tools for electronic design automation\n", "abstract": " Virtual prototyping environments are emerging as a new generation of EDA tools. Such a tool will allow the designer to test interactively complex electronic systems on an enhanced-reality virtual workbench, by concurrently running multidomain (mechanical, electrical, thermal, etc.) what-if experiments. Virtual prototyping will shorten the design cycle, improve the product quality, and reduce the time to market. Advanced computational techniques are needed to reduce the execution time, especially for the field (EM and thermal) models used in these virtual prototyping environments. This article shows how neural networks could be used efficiently for 3D EM field modeling. Neural network models have much better real-time performance than classical numerical EM-field modeling methods, and this is particularly important when the field analysis is coupled with system optimization.", "num_citations": "10\n", "authors": ["578"]}
{"title": "Throughput of stochastic rendezvous networks with caller-specific service and processor contention\n", "abstract": " Stochastic rendezvous networks (SRVN) are models for the throughput of distributed programs executed concurrently and synchronously on distributed computing nodes. Server tasks respond to requests from user tasks and execute in a two-phase pattern (in-rendezvous phase, then postrendezvous phase), and may themselves act as user tasks to further servers, to any depth. The authors extend the model to permit the execution time and the occurrence of nested rendezvous calls to depend on the identity of the calling user task. An iterative approximation method is developed, and compared to exact throughput calculations found with timed Petri nets. The approximation has errors of a few percent in most cases, and executes very much faster than the Petri-net calculation.< >", "num_citations": "10\n", "authors": ["578"]}
{"title": "Automatic derivation of fault tree models from SysML models for safety analysis\n", "abstract": " Safety Critical Systems (SCS) are those systems that may cause harm to the user(s) and/or the environment if operating outside of their prescribed specifications. Such systems are used in a wide variety of domains, such as aerospace, automotive, railway transportation and healthcare. In this paper, we propose an approach to integrate safety analysis of SCSs within the Model Driven Engineering (MDE) system development process. The approach is based on model transformation and uses standard well-known techniques and open source tools for the modeling and analysis of SCSs. More specifically, the system modeled with the OMG\u2019s standard systems modeling language, SysML, is automatically transformed in Fault Tree (FT) models, that can be analyzed with existing FT tools. The proposed model transformation takes place in two steps: a) generate FTs at the component level, in order to tackle complexity and enable reuse; and b) generate system level FTs by composing the components and their FTs. The approach is illustrated by applying it to a simplified industry-inspired case study.", "num_citations": "9\n", "authors": ["578"]}
{"title": "Challenges in integrating the analysis of multiple non-functional properties in model-driven software engineering\n", "abstract": " This vision paper discusses the challenges of integrating the analysis of multiple Non-Functional Properties (NFP) in the model-driven software engineering process, where formal analysis models are generated by model transformations from annotated software models. The paper proposes an integration approach based on an ecosystem of inter-related heterogeneous modeling artifacts intended to support consistent co-evolution of the software and analysis models, cross-model traceability, incremental propagation of changes across models and (semi) automated software process steps. Another goal is to investigate new metaheuristics approaches for reducing the size of the design space to be explored in the search for a design solution that will meet all the non-functional requirements.", "num_citations": "9\n", "authors": ["578"]}
{"title": "Performance of concurrent rendezvous systems with complex pipeline structures\n", "abstract": " The term \u201ccomplex pipeline\u201d describes a set of tasks which process incoming data in a sequence, like a pipeline, but have various kinds of parallel execution steps coupled into the main stream of execution. Examples are, splitting off of parallel streams, and shared server tasks. Examples are found in processing to interpret radar data, and other real-time systems. Rendezvous systems like Ada have static tasks, static processor allocations and synchronous inter-task communications, which can cause potential performance problems. The growing importance of rendezvous-based environments, including Ada, requires that we be able to predict these problems. Models such as Petri nets, are often too expensive to solve; fast approximation techniques are needed. The approach of \u201cstochastic rendezvous networks\u201d is adapted here to deal with complex pipelines. This paper describes an algorithm and evaluates\u00a0\u2026", "num_citations": "9\n", "authors": ["578"]}
{"title": "Traceability links in model transformations between software and performance models\n", "abstract": " In Model Driven Engineering, traceability is used to establish relationships between various software artifacts during the software life cycle. Traceability can be also used to define dependencies between related elements in different models, to propagate and verify properties from one model to another and to analyze the impact of changes. In this paper we describe how to define typed trace-links between different kinds of models in our model transformation chain PUMA4SOA, which generates Layered Queuing performance models from UML software models of service-oriented applications. The goal of PUMA4SOA is to help evaluate the performance of SOA systems in the early development phases. In our approach, the traceability links are stored externally in a new model, which maintain traces separately from the source and target models they refer to. We illustrate how traceability links can be used to\u00a0\u2026", "num_citations": "8\n", "authors": ["578"]}
{"title": "Load-balancing data traffic among inter-domain links\n", "abstract": " The Internet has evolved into a multi-service infrastructure for the telecom and computer industries. Internet services are affected by congestions caused by the operations of Internet routing protocols. We propose a novel information service that guides the operations of Internet routing protocols to avoid such congestion. The information service maintains information about utilization of inter-domain links. The proposed service minimizes the maximum of utilization of Internet links by selecting potential network domains to be traversed by Internet services. Simulation results show better balanced distribution of traffic workloads among network links using the proposed service. We show that the proposed service scales well as network size grows. This comes at the cost of greater control messaging overhead which suggests using the proposed service with long-lived and higher bandwidth services", "num_citations": "8\n", "authors": ["578"]}
{"title": "Knowledge-based animation of articulated anthropomorphic models for virtual reality applications\n", "abstract": " This paper presents development aspects of a semi-autonomous animated avatar for real-time interactive virtual environment applications.", "num_citations": "8\n", "authors": ["578"]}
{"title": "Using aspects for platform-independent to platform-dependent model transformations\n", "abstract": " This paper presents an aspect-based approach for realizing a transformation from platform-independent to platform-dependent models in the context of a model transformation chain that generates queueing-based performance models from UML design models of service-oriented applications. The purpose of generating such performance models is to evaluate the performance of the system under development in the early software lifecycle phases, in order to insure that it will meet the performance requirements. The paper presents the model transformation chain PUMA4SOA, which transforms automatically a UML model of a service-oriented architecture (SOA) system extended with MARTE performance annotations into an intermediate model, Core Scenario Model (CSM), which in turn is used to generate a Layered Queueing Network (LQN) performance model. Aspect-oriented modeling is used to represent\u00a0\u2026", "num_citations": "7\n", "authors": ["578"]}