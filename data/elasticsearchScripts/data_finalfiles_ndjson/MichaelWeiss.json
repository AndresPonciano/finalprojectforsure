{"title": "Modeling the mashup ecosystem: structure and growth\n", "abstract": " Mashups combine data and services provided by third parties through open APIs (such as Google Maps and Flickr), as well as internal data sources owned by users. The creation of mashups is supported by a complex ecosystem of interconnected data providers, mashup platforms, and users. In this paper, we examine the structure of the mashup ecosystem and its growth over time. Several observations follow from our analysis. First, we can conclude that while the number of new APIs and mashups over time follows a linear growth pattern, the distribution of mashups over APIs is not uniform but follows a power law. This implies that a small number of APIs provides the basis for the majority of mashups, and the other APIs are only used in certain application niches. Second, our analysis suggests that mashup platforms were introduced in response to the increasing complexity of mashups, as mashups evolved from\u00a0\u2026", "num_citations": "113\n", "authors": ["856"]}
{"title": "Agent-based data mining and warehousing\n", "abstract": " An agent-based networking system and process for building a data warehouse containing application specific information and for mining data therefrom. The networking system utilizes functional and resource agents to communicate with distributed databases in order to collect pertinent data. The agents employ multiple strategies for identifying and resolving potential ambiguities involving information gathered by the process.", "num_citations": "108\n", "authors": ["856"]}
{"title": "Reusable patterns for agent coordination\n", "abstract": " Much of agent system development to date has been done ad hoc. These problems limit the extent to which \u201cindustrial applications\u201d can be built using agent technology, as the building blocks, reusable techniques, approaches and architectures have either not been exposed or have not yet been fully elaborated. In the mid 80\u2019s, supporters of object-oriented technology had similar problems. However, with the aid of software patterns, objects have provided an important shift in the way developers successfully build applications today. In this paper, after describing an agent pattern\u2019s generic format, we identify a set of software patterns for agent coordination.", "num_citations": "103\n", "authors": ["856"]}
{"title": "Virtual meeting rooms with spatial audio\n", "abstract": " A system for conducting a virtual audio-visual conference between two or more users comprising two or more client stations each acting as a signal source and destination for each respective user, having a user interface for audio-visual input and output including audio signal reception and generation means for receiving and generating audio signals, one or more servers, and a network coupling the client stations and the servers, wherein each user is represented as a corresponding movable visual symbol displayed on the user interfaces of all coupled client stations and the audio signal of all users is generated at each client station with an attenuation according to the spatial position of the respective symbols on the user interfaces and according to the direction in which each movable visual symbol of each signal source is oriented on the user interface.", "num_citations": "100\n", "authors": ["856"]}
{"title": "Resource sharing with sliding constraints\n", "abstract": " The resource sharing system according to the present invention dynamically adjusts the priorities at which requests from applications in different request classes (or classes of service) for a shared resource, are processed. The dynamic priority of a request class is based in part on the average resource allocation to requests in this request class, and in part on settings for the minimum and maximum allocations to the request class. The average resource allocation is the proportion of time the shared resource has been assigned to requests of this class relative to other classes. The dynamic adjustment of priorities uses \u201csliding constraints\u201d whereby the priorities are caused to \u201cslide\u201d with the average resource allocation, and the priority imposes a constraint on when the requests of a resource class can be satisfied: namely, when there are no other requests from higher-priority request classes waiting for the resource.", "num_citations": "78\n", "authors": ["856"]}
{"title": "Crowdsourcing literature reviews in new domains\n", "abstract": " A standard approach to exploring a domain is to conduct a literature review. However, conducting a literature review in a new domain presents unique challenges. Whereas in an existing domain, researchers can use established classifications of knowledge to guide their search for and interpretation of the literature, this is not the case for a new domain that lacks such classifications. In a new domain, the literature is typically broad, fragmented, and, at the same time, growing quickly. The task of the researcher is to make sense of evidence when it does not fit existing models and classifications. Encountering such evidence forces them to extend existing knowledge.This article first examines the characteristics of new domains and summarizes lessons from conducting two literature reviews in new domains. It then reviews the goals and types of literature reviews and the typical structure of a systematic narrative literature review. Third, it introduces crowdsourcing as a technique for leveraging groups of people to solve complex tasks and", "num_citations": "71\n", "authors": ["856"]}
{"title": "Towards a classification of web service feature interactions\n", "abstract": " The rapid introduction of new web services into a dynamic business environment can lead to undesirable interactions that negatively affect service quality and user satisfaction. In previous work, we have demonstrated how such interactions between web services can be modeled as feature interactions. In this paper, we outline a classification of web service feature interactions. The goals of this classification are to understand the scope of the feature interaction problem in the web services domain, and to propose a benchmark against which to assess the coverage of solutions to this problem. As there is no standard set of web services that one could use as examples, we illustrate the interactions using a fictitious e-commerce scenario.", "num_citations": "70\n", "authors": ["856"]}
{"title": "On feature interactions among web services\n", "abstract": " Web Services promise to allow businesses to adapt rapidly to changes in the business environment and to the needs of customers. However, the rapid introduction of new services paired with the dynamicity of the business environment also leads to undesirable interactions that negatively impact service quality and user satisfaction. In this paper, we propose an approach for modeling such undesirable interactions as feature interactions. As each functional feature ultimately is motivated by non-functional requirements, we make an explicit distinction between functional and non-functional features. We then describe our approach for detecting and resolving feature interactions among Web Services. The approach is based on goal-oriented analysis and scenario modeling. It allows us to reason about feature interactions in terms of goal conflicts and feature deployment. Three case studies illustrate the approach. The\u00a0\u2026", "num_citations": "66\n", "authors": ["856"]}
{"title": "Selecting security patterns that fulfill security requirements\n", "abstract": " Over the last few years a large number of security patterns have been proposed. However, this large number of patterns has created a problem in selecting patterns that are appropriate for different security requirements. In this paper, we present a selection approach for security patterns, which allows us to understand in depth the trade-offs involved in the patterns and the implications of a pattern to various security requirements. Moreover, our approach supports the search for a combination of security patterns that will meet given security requirements.", "num_citations": "65\n", "authors": ["856"]}
{"title": "Evolution of open source communities\n", "abstract": " The goal of this paper is to document the evolution of a portfolio of related open source communities over time. As a case study, we explore the subprojects of the Apache project, one of the largest and most visible open source projects. We extract the community structure from the mailing list data, and study how the subcommunities evolve, and are interrelated over time. Our analysis leads us to propose the following hypotheses about the growth of open source communities: (1) communities add new developers by a process of preferential attachment; (2) links between existing communities are also subject to preferential attachment; (3) developers will migrate between communities together with other collaborators; and (4) information flow follows project dependencies. In particular, we are concerned with the underlying factors that motivate the migration between communities, such as information flow, co\u00a0\u2026", "num_citations": "56\n", "authors": ["856"]}
{"title": "Pattern-driven design of agent systems: Approach and case study\n", "abstract": " Current approaches to agent system design are generally goal-driven. An agent system is designed by iteratively decomposing system goals until they can be assigned to individual agents. However, this may lead developers to rediscover solutions to common design problems without benefiting from how they were resolved in the past. This results in duplicated effort, inconsistent design, brittle systems, and poor traceability. A more effective approach is to build an agent system incrementally from well-documented agent patterns. An agent pattern documents a proven assignment of roles to agents, and their interaction. It also documents the system qualities achieved by the application of this pattern. Individual patterns can, furthermore, be linked to each other in the form of pattern languages, which guide the designer through the design process. In this paper we describe a pattern-driven agent design\u00a0\u2026", "num_citations": "52\n", "authors": ["856"]}
{"title": "Feature Interactions in Web Services.\n", "abstract": " PowerPoint Presentation - Detecting Feature Interactions in Web Services Page 1 June 11-13, 2003 Michael Weiss, FIW 03 1 Feature Interactions in Web Services Michael Weiss Carleton University Page 2 June 11-13, 2003 Michael Weiss, FIW 03 2 Web Services \u2022 Web services are a way of packaging and publishing functionality to the network for use by other applications \u2022 Web services can aggregate other web services from a web of services to provide a higher-level set of features Page 3 June 11-13, 2003 Michael Weiss, FIW 03 3 Web Services \u2022 Paradigm for constructing distributed applications \u2013 Lack of centralized control (# businesses) \u2013 Diversity of technology platforms \u2013 Rapid evolution of business environment \u2022 Much work to date on low level concerns \u2013 Publishing, discovering, and invoking of services \u2022 Service integration raise significant challenges \u2013 Little research on managing interactions Page 4 June \u2026", "num_citations": "50\n", "authors": ["856"]}
{"title": "Service license composition and compatibility analysis\n", "abstract": " Services enable the transformation of the World Wide Web as distributed interoperable systems interacting beyond organizational boundaries. Service licensing enables broader usage of services and a means for designing business strategies and relationships. A service license describes the terms and conditions for the use and access of the service in a machine interpretable way that services could be able to understand. Service-based applications are largely grounded on composition of independent services. In that scenario, license compatibility is a complex issue, requiring careful attention before attempting to merge licenses. The permissions and the prohibitions imposed by the licenses of services would deeply impact the composition. Thus, service licensing requires a comprehensive analysis on composition of these rights and requirements conforming to the nature of operations performed and\u00a0\u2026", "num_citations": "47\n", "authors": ["856"]}
{"title": "ODRL service licensing profile (ODRL-S)\n", "abstract": " Service licensing is a significant way to manage the rights between service con-sumers and service providers. Licensing, being the mechanism of technology trans-fer, is the common denominator for distribution of services associated with designing business strategies and relationships. The currently available service description standards and languages do not cover the critical clauses of licensing. This paper proposes ODRL-S, a profile of the ODRL for Service Licensing, to represent exclusively the licenses for services, in machine interpretable form.", "num_citations": "38\n", "authors": ["856"]}
{"title": "Patterns for e-Commerce agent architectures: Using agents as delegates\n", "abstract": " Agents are rapidly emerging as a new paradigm for developing software applications. They are being used in an increasing variety of applications, ranging from relatively small systems such as assistants to large, open, mission-critical systems like electronic marketplaces. One of the most promising areas of applications for agent technology is e-commerce [13, 20, 12]. In this paper we describe a group of architectural patterns for agent-based e-commerce systems, Agent as Delegate and its derivatives. These patterns relate to front-end e-commerce activities that involve interaction with the user, and delegation of tasks. They are part of a larger pattern language that will be described in a companion paper. Together, these patterns are just the beginnings of a pattern language for agent-based e-commerce system design. Consider it as the structural foundation on which more detailed pattern languages such as for the collection of user profiles, or maintaining persistence can be based. There is no universally accepted definition of the notion of agent. However, the following four properties are widely accepted to characterize agents: autonomy, social ability, reactivity and proactiveness [29]. Agents are autonomous computational entities (autonomy), which interact with their environment (reactivity) and other agents (social ability) in order to achieve their own goals (proactiveness). Agents typically represent different users, and there are thus", "num_citations": "35\n", "authors": ["856"]}
{"title": "Design evolution of an open source project using an improved modularity metric\n", "abstract": " Modularity of an open source software code base has been associated with community growth, incentives for voluntary contribution, and a reduction in free riding. As a theoretical construct, it links open source software to other domains of research, including organization theory, the economics of industry structure, and new product development; however, measuring the modularity of an open source software design has proven difficult, especially for large and complex systems. Building on previous work on Design Structure Matrices (DSMs), this paper describes two contributions towards a method for examining the evolving modularity of large-scale software systems: (1) an algorithm and new modularity metric for comparing code bases of different size; and (2) evolution analysis of Apache Tomcat to illustrate the insights gained from this approach. Over a ten-year period, the modularity of Tomcat continually\u00a0\u2026", "num_citations": "31\n", "authors": ["856"]}
{"title": "Patterns for web applications\n", "abstract": " This paper contains work in progress on a pattern language for \u201csmall\u201d web A conceptual framework for\u201csmall\u201d web applications applications. Its goal is to outline a conceptual framework for developing web applications. The pattern language has reached a certain stage where I would like to get the feedback of the pattern community. Why a conceptual framework? Many web applications may not need a comprehensive application server framework, only micro-frameworks for specific tasks such as template processing. The main application can be developed on top of a standard open-source platform such as LAMP (Linux, Apache, MySQL, and Perl/PHP/Python)[11]. There is a trade-off between the complexity of a comprehensive framework, and the needs of your application. Frameworks often have a large feature set, and thus a steep learning curve, and can be difficult to deploy. For example, while some web applications may warrant a content management system, a template processor may be all that is required for most. A conceptual framework, on the other hand, gives you a model for how to build a custom application server, and and tells you when to use task-specific micro-frameworks. The conceptual framework introduced in this paper is documented as a pattern language. These patterns are geared towards non-trivial, small to medium sized web applications. Our goal is to document common practices for typical design issues encountered.", "num_citations": "31\n", "authors": ["856"]}
{"title": "Managing license compliance in free and open source software development\n", "abstract": " License compliance in Free and Open Source Software development is a significant issue today and organizations using free and open source software are predominately focusing on this issue. The non-compliance to licenses in free and open source software development leads to the loss of reputation and the high costs of litigation for organizations. Towards an automated compliance management, we use the Open Digital Rights Language to implement the clauses of open source software licenses in a machine interpretable way and propose a novel algorithm that analyzes compatibility between free and open source software licenses. Also, we describe a framework that inductively manages compliance of license clauses in a free and open source software development. We simulate and evaluate the formalized license compliance management by analyzing a real-time open source software project\u00a0\u2026", "num_citations": "30\n", "authors": ["856"]}
{"title": "Linking patterns and non-functional requirements\n", "abstract": " CiteSeerX \u2014 Linking Patterns and Non-Functional Requirements Documents Authors Tables Log in Sign up MetaCart DMCA Donate CiteSeerX logo Documents: Advanced Search Include Citations Authors: Advanced Search Include Citations Tables: DMCA Linking Patterns and Non-Functional Requirements (2002) Cached Download as a PDF Download Links [jerry.cs.uiuc.edu] Save to List Add to Collection Correct Errors Monitor Changes by Ivan Araujo , Michael Weiss Venue: PROCEEDINGS OF THE NINTH CONFERENCE ON PATTERN LANGUAGE OF PROGRAMS (PLOP 2002), SEPTEMBER 8\u201312, 2002 Citations: 4 - 0 self Summary Citations Active Bibliography Co-citation Clustered Documents Version History Share Facebook Twitter Reddit Bibsonomy OpenURL Abstract Keyphrases non-functional requirement Powered by: Apache Solr About CiteSeerX Submit and Index Documents Privacy Policy Help \u2026", "num_citations": "30\n", "authors": ["856"]}
{"title": "Quotation mechanism for service environments\n", "abstract": " The present invention provides a quotation mechanism for service environments where the service level is negotiated. A client makes a request for a type, quality or volume of service. The service provider provides a response in the form of a quote. A quote binds the service provider to providing a service at a specified price. The quote also contains parameters of type, quality, or volume of service that the service provider can provide at that price. The client, after evaluating the quote, can either accept or reject a quote. The client can also obtain quotes from multiple service providers and enter a service contract with the service provider of its choice. This choice will not be based solely on price, but also on the levels of service quoted, since the service provider might not be able to supply the service at the requested level.", "num_citations": "28\n", "authors": ["856"]}
{"title": "System for discounting in a bidding process based on quality of service\n", "abstract": " A multi-agent system for selecting a service based on competing bids, comprising a Bid Manager agent for issuing a call for bids, receiving the bids and selecting a best bid from among the received bids taking into consideration Quality of Service, and a plurality of Bidder agents for issuing the bids in response to the call for bids, wherein one of the Bidder agents issues the best bid and provides the service upon selection of the best bid by the Bid Manager.", "num_citations": "28\n", "authors": ["856"]}
{"title": "A hierarchical blackboard architecture for distributed AI systems\n", "abstract": " A framework for distributed problem solving should support the incremental development and integration of problem solvers into the system in agreement with the principles of stepwise refinement and functional decomposition. The organizational structure of the framework should guide the mapping of each of the functional areas onto agents and its communication structure should reflect this decomposition. The authors describe a hierarchical multi-blackboard architecture, called the Hierarchical Blackboard System (HBBS) which satisfies these requirements. It serves as an integration architecture for heterogeneous expert systems. Important features of the system, such as the hierarchy concept, communication strategy and configuration management of the system at run-time are discussed. A working prototype HBBS for distributed CAD/CAE of communication systems is described.< >", "num_citations": "28\n", "authors": ["856"]}
{"title": "Modelling security patterns using NFR analysis\n", "abstract": " While many theoretical approaches to security engineering exist, they are often limited to systems of a certain complexity, and require security expertise that is not widely available. Additionally, in the practice of information system development security is but one of many concerns that needs to be addressed, and security concerns are often dealt with in an ad hoc manner. Security patterns promise to? ll this gap. Patterns enable an ef? cient transfer of experience and skills. However, representing and selecting security patterns remains largely an empirical task. This becomes the more of a challenge as the number of security patterns documented in the literature grows, and as the patterns proposed by different authors often overlap in scope. Our contribution is to use a more explicit representation of the forces addressed by a pattern in the description of security patterns, which is based on non-functional requirements\u00a0\u2026", "num_citations": "24\n", "authors": ["856"]}
{"title": "Adaptive rule-based mechanism and method for feature interaction resolution\n", "abstract": " An adaptive rule-based mechanism and method to resolve conflicting feature interactions includes the steps of determining conflicting features available for execution in response to an event; examining the conflicting features to determine whether one of the conflicting features takes priority over other conflicting features; if one of the conflicting features takes priority, selecting that conflicting feature for execution; and if one conflicting feature does not take priority, prompting the user to make a selection to resolve the conflicting feature interaction.", "num_citations": "24\n", "authors": ["856"]}
{"title": "Formalizing architectural patterns with the goal-oriented requirement language\n", "abstract": " Many pattern descriptions put their emphasis on the solution to a problem rather than on often conflicting forces and how patterns balance such forces. This work uses the Goal-oriented Requirement Language (GRL) to formalize the forces of architectural patterns in a way that en-ables rigorous trade-off analysis while allowing the pattern user to deter-mine the applicability of a pattern to the problem in a given context. The formalization of forces does not replace other pattern descriptions but rather complements them and relies on them to provide descriptions of the problem and solution. This work presents a description of the forces appli-cable in the context of architectural design, introduces how to represent patterns and forces with GRL, and then formalizes a subset of a recently published architectural pattern language.", "num_citations": "21\n", "authors": ["856"]}
{"title": "Towards a classification of web service feature interactions\n", "abstract": " Web services promise to allow businesses to adapt rapidly to changes in the business environment, and the needs of different customers. The rapid introduction of new web services into a dynamic business environment can lead to undesirable interactions that negatively impact service quality and user satisfaction. In previous work, we have shown how to model such interactions between web services as feature interactions, and reason about undesirable side-effects of web service composition. In this paper we present the results of subsequent research on a classification of feature interactions among web services. Such a classification is beneficial as we can then search for ways of detecting and resolving each class of feature interaction in a generic manner. To illustrate the interactions we use a fictitious e-commerce scenario.", "num_citations": "21\n", "authors": ["856"]}
{"title": "Profiting from open source\n", "abstract": " The patterns in this paper describe open source business models. Many businesses now incorporate open source, either leveraging open source to develop new products or starting their own open source projects and building their products and services around their open source offerings. The patterns in this paper aim to provide entrepreneurs, managers and students of business models with a language for creating new business models around open source, or for incorporating open source into existing business models.", "num_citations": "19\n", "authors": ["856"]}
{"title": "A pattern language for motivating the use of agents\n", "abstract": " The advantages of the agent-based approach are still not widely recognized outside the agent research community. We believe that there is a need for guidelines that summarize the key benefits of the agent approach to non-agent experts. Agent patterns can provide that guidance. The agent community has already started to use patterns for describing best practices of agent design. However, these patterns tend to pre-suppose that the decision to follow an agent approach has already been made. In this paper we present a pattern language \u2013 a set of patterns that build on each other \u2013 as a starting point for more specific agent pattern languages. It documents the forces \u2013 the drivers, and design trade- offs \u2013 involved in agent-based design, and a set of generic patterns that apply to all agent systems. These patterns introduce and motivate the concepts of agent society, roles, common vocabulary, delegation\u00a0\u2026", "num_citations": "19\n", "authors": ["856"]}
{"title": "A case for mobile agent patterns\n", "abstract": " In this position paper, we make a case for the development of mobile agent patterns. Patterns have proven extremely useful to the object-oriented programming community. However, of the large amount of pattern research, little effort has been devoted to developing mobile agent patterns. We wish to correct this situation. We believe that the ongoing success of mobile agent systems depends on the development of software engineering principles for them. Patterns are a recognized means to this end, and one that we wish to promote.", "num_citations": "18\n", "authors": ["856"]}
{"title": "Patterns for motivating an agent-based approach\n", "abstract": " The advantages of the agent-based approach are still not widely recognized outside the agent research community. In this paper we use patterns as a way of motivating the use of agents. Patterns have proven to be an effective means for communicating design knowledge, describing not only solutions, but also documenting the context and motivation for applying these solutions. The agent community has already started to use patterns for describing best practices of agent design. However, these patterns tend to pre-suppose that the decision to follow an agent approach has already been made. Yet, as this author has experienced on many occasions, that is usually far from a given. There is a need for guidelines that summarize the key benefits of the agent approach, and serve as a context for more specific agent patterns. Our response to this need is a pattern language \u2013 a set of patterns that build on each\u00a0\u2026", "num_citations": "17\n", "authors": ["856"]}
{"title": "Rewriting a pattern language to make it more expressive\n", "abstract": " Representing and selecting patterns remains largely an empirical task. It is difficult to recognize when to apply a given pattern, as well as the consequences its application could generate. This creates the need for extensions to the existing pattern representation. Elsewhere, we have proposed an explicit representation of the forces involved in a pattern and their interrelationships. It interprets forces as non-functional requirements, and uses the non-functional requirements framework developed in requirements engineering to analyze the context of applicability of a pattern, and its consequences. In this paper we describe a case study in which we apply our new pattern representation to an existing pattern language. We illustrate how the extended pattern representation enables us to discover contributions made by the patterns to overall system concerns that were implicit in the textual description of the pattern.", "num_citations": "17\n", "authors": ["856"]}
{"title": "Lost in the canvases: Managing uncertainty in lean global startups\n", "abstract": " The main objective of this paper is to suggest a dynamic double canvas approach to business model development that would reduce ambiguity during the adoption of a specific business model canvas by executive managers of technology-based lean global startups. We start with a conceptual analysis and continue with empirical research approach based on four technology-based startups, two in Denmark and two in Canada, in order to justify the need for managers to start with the lean canvas, suggested by Ash Maurya (2012), and then shift to the business model canvas, suggested by Osterwalder and Pigneur (2010). The logic of such shift was conceptualized by focusing on the key differences between the lean canvas (problem, customer segment, solution, value proposition, key metrics and unfair advantage) and business model canvas (key partners, value propositions, key activities, resources, customer relationships). The second contribution consists in examining the application of business model canvases to the context of lean global startups by emphasizing the importance of relationships with global partners, the adaptation of the value proposition to different global markets, and the activities and resources specific to a particular global market. The third contribution is to provide a comprehensive categorization of risk that could be used within the context of lean global startups. The findings would be relevant for entrepreneurship scholars, researchers focusing on business model innovation and entrepreneurs. It should help entrepreneurs to adopt a dynamic approach to business model development that would reflect the realities of their\u00a0\u2026", "num_citations": "16\n", "authors": ["856"]}
{"title": "Economics of collectives\n", "abstract": " The transition from a software product line to a software ecosystem, as reported by Bosch [5], takes place, when the product line company makes its platform available to developers outside the company. A similar transition takes place from a software ecosystem to a collective, when the platform is jointly created and owned by a group of members. Building on the literature on software product line economics, this research identifies three factors affecting the economics of collectives (level of contribution, number of members, and diversity of use), and develops a model linking those factors to three economic outcomes (time, quality, and cost).", "num_citations": "16\n", "authors": ["856"]}
{"title": "Building a pattern repository: Benefitting from the open, lightweight, and participative nature of wikis\n", "abstract": " The growing number of patterns creates the problem of finding the right pattern for a given design problem. As one reply to this problem, several pattern collections have been captured in the form of pattern repositories. In this paper we motivate the use of wiki for building a pattern repository, namely their openness, lightweight nature and participative architecture. These properties allow the formal structure of the repository to emerge in response to needs of pattern authors and users. At the same time, current wiki frameworks, built on extensible architectures provide a rich set of features that facilitate the rapid implementation of a repository. It appears that such a lightweight approach outweighs the benefits of a more customized, special-purpose framework\u2013at least initially, until there is a consensus on the repository structure, and a community of users has evolved.", "num_citations": "16\n", "authors": ["856"]}
{"title": "Performance of Open Source Projects.\n", "abstract": " The patterns in this paper describe open source development practices from a performance perspective. In product development, performance is measured in terms of the time it takes to develop a software product, the resulting quality of the software, and the cost of development. These dimensions are in tension with one another. Since improving performance has side effects, we also need to include the impact on other dimensions than performance (eg risk, trust) in our discussion of the practices.The audience for these patterns are developers and project managers, who are thinking about adopting an open source development approach. The practices documented in the patterns are derived both from the literature on open source development, and from the author's experience as contributor to several open source projects. The author also had the opportunity to observe a large open source project.", "num_citations": "15\n", "authors": ["856"]}
{"title": "From P2P to reliable semantic P2P systems\n", "abstract": " Current research to harness the power of P2P networks involves building reliable Semantic Peer-to-Peer (SP2P) systems. SP2P systems combine two complementary technologies: P2P networking and ontologies. There are several types of SP2P systems with applications to knowledge management systems, databases, the Semantic Web, emergent semantics, web services, and information systems. Correct semantic mapping is fundamental for success of SP2P systems where semantic mapping refers to semantic relationship between concepts from different ontologies. Current research on SP2P systems has emphasized semantics at the cost of dealing with the traditional issues of P2P networks of reliability and scalability. As a result of their lack of resilience to temporary mapping faults, SP2P systems can suffer from disconnection failures. Disconnection failures arise when SP2P systems that use\u00a0\u2026", "num_citations": "14\n", "authors": ["856"]}
{"title": "An overview of four issues on technology entrepreneurship in the TIM Review\n", "abstract": " The field of technology entrepreneurship is in its infancy when compared to other fields such as economics and management. Articles on technology entrepreneurship have been published in at least 62 journals, of which only 18 contribute to technology innovation management or entrepreneurship. Less than a handful of these 62 journals are considered to be\" good\" journals and none can claim a leadership position in technology entrepreneurship. The purpose of this article is to provide an overview of the 20 journal articles published in the February, March, April, and May 2012 issues of the Technology Innovation Management Review (TIM Review).", "num_citations": "13\n", "authors": ["856"]}
{"title": "Profiting even more from open source\n", "abstract": " The patterns in this paper continue the description of open source business models started in Weiss [2010]. Many businesses now incorporate open source, either leveraging open source to develop new products or starting their own open source projects and building their products and services around their open source offerings. The patterns in this paper aim to provide entrepreneurs, managers and students of business models with a language for creating new business models around open source, or for incorporating open source into existing business models. The patterns in this paper capture more advanced patterns such as the use of an open source foundation.", "num_citations": "12\n", "authors": ["856"]}
{"title": "Virtual communities and team formation\n", "abstract": " With the growth of global computer networks, virtual communities have become an important new way for people to interact. People are beginning to realize that networks are not only affecting the way businesses operate, but also our everyday lives [7]. One of the simplest examples of a virtual community is online chat. Through a chat application, one can participate in diverse discussions with numerous people, many of whom are strangers.A community has been defined as\" a social grouping that exhibits to varying degrees: shared spatial relations, social conventions, a sense of membership and boundaries, and an ongoing rhythm of social interaction\"[14]. Based on the meaning of the word\" virtual\"(ie, computer-mediated), a virtual community can be understood as a social grouping that emerges from the webs of personal relationships embedded in computer networks. It describes the union between individuals or\u00a0\u2026", "num_citations": "11\n", "authors": ["856"]}
{"title": "Issues In Using an Agent Framework For Converged Voice/Data Applications\n", "abstract": " This paper describes the issues arising in the use of an agent framework as a technology platform for rapid development of next generation business communications systems. New communications systems will provide an enterprise wide multimedia environment for information delivery and communications services, and will be an integral part of the business process [7, 27, 8]. The architecture of such systems must enable customization and incremental evolution to accommodate the changing needs of an enterprise, its different work groups and individual users. The architecture must handle the rational management of resources, including automatic reconfiguration on failure and pervasive self-management.Despite the increased complexity of such systems, developers will be faced with users demanding greater ease of use, and quicker turn around time. Present voice systems cannot meet these requirements without a fundamental change in architecture. We have examined a variety of alternatives and decided that an agent based system can meet these requirements. Mitel has developed an agent based framework, MANA (Multi Agent Networking Architecture)[1, 2, 3, 4, 5] which we are using to develop a communication system which meets the service needs of customers and the business needs of the development organization.", "num_citations": "11\n", "authors": ["856"]}
{"title": "Evolution of the mashup ecosystem by copying\n", "abstract": " Previous work has explored the structure of the mashup ecosystem, which can be modeled as a network of mashups and APIs. However, it did not offer an explanation for its growth. In this paper, we seek an answer to the question how mashup developers select APIs. One hypothesis that has been put forward is that APIs are selected by their popularity, that is, by preferential attachment. However, this hypothesis is unsatisfying, as it disregards that mashups are composed from multiple APIs, and neglects the learning between mashup developers. Instead, we propose a copying model. We test to what degree developers create mashups by copying other mashups. We show that a good fit between the actual distribution of APIs and our model can be obtained. We can conclude that copying plays a significant role in explaining how mashups are developed. We also identify open research questions raised by the results.", "num_citations": "10\n", "authors": ["856"]}
{"title": "Consumer-specified service license selection and composition\n", "abstract": " Service oriented computing represents the convergence of technology with an understanding of cross-organizational business processes. A service license describes the terms and conditions for the use and access of the service in a machine interpretable way. Generally, a service provider defines individual services with corresponding service licenses which consumers have to follow. Often, service consumers are interested in selecting a service based on certain licensing terms and/or in composing individual services depending on their needs. Thus, consumer-specified licenses become pivotal in service composition as this allows consumers to make a preference on what their service licenses should be and whether they can compose certain services together in a composition satisfying their specified licensing terms. In this paper, we propose an approach allowing service consumers to specify service licensing\u00a0\u2026", "num_citations": "10\n", "authors": ["856"]}
{"title": "Mechanism for sharing of guaranteed resources\n", "abstract": " A method for service allocation among a plurality of entities requiring service allocation in a communications or computing environment comprising the steps of initializing a supply of services of one or more holding entities, endowing one or more bidding entities with an adjustably fixed amount of utility and a requirement for an amount of the supply of services, wherein the fixed amount of utility is a measure representative of the possibility of failure due to lack of resources, negotiating the supply of services of the holding entities, with each bidding entity bidding a selected amount of its fixed amount of utility, and redistribution of the supply of the holding entities among the bidding entities based on the negotiating.", "num_citations": "10\n", "authors": ["856"]}
{"title": "Free/Open Services: Conceptualization, Classification, and Commercialization\n", "abstract": " The concept of Free/Open Services (F/O-Services) emerges by bringing together services with Free/Open Source Software (FOSS). F/O-Services enable the creation of transparent composite services collectively and allow people and other services to access them. This paper extends the concept of F/O-Services beyond the level of open interfaces, analyzing the associated licensing interpretations and exploring the notion of open service dependencies. Further, the paper overviews the business models for F/O-Services as a part of this social mechanism of exchange.", "num_citations": "10\n", "authors": ["856"]}
{"title": "Method for detecting functional feature interactions of web services\n", "abstract": " Web services expose features of business applications, and make them accessible to other businesses. Services can be combined and recombined into higher-level services. However, as services evolve, undesirable results and poor service quality can be the outcome: web services may interact with each other in unexpected and undesirable ways. This problem is also known as the feature interaction problem. In our earlier work, we have provided examples of functional and non-functional feature interactions of web services, i.e. interactions related to service functionality and service properties. In this paper, we describe a method for detecting feature interactions between functional features. This method is based on the verification of safety and progress properties in Labeled Transition Systems (LTSs). We also discuss the use of Use Case Maps (UCMs) to describe the high-level behavior of a composite service\u00a0\u2026", "num_citations": "10\n", "authors": ["856"]}
{"title": "Credential delegation: Towards grid security patterns\n", "abstract": " Security is a central concern in grid computing. A grid is a platform for sharing resources (such as computers and storage) across organizational boundaries. Thus, using a grid raises fundamental security challenges such as ensuring that only trusted organizations access our resources, data integrity and confidentiality, and delegation of credentials to grid applications. The Grid Security Infrastructure (GSI) implemented by Globus [5] and other grid toolkits [1] addresses many of these security challenges. A practical introduction to the GSI is given in the Globus Toolkit 4 tutorial [8]. Our goal is to document the patterns underlying such grid security solutions.In this paper we describe the Credential Delegation pattern. This is one pattern from a pattern language for grid security we are writing. One of the other patterns that we will describe is Mutual Authentication, a precondition for applying the Credential Delegation pattern. Its intent is for two parties (client and server) to verify each other\u2019s identities. In our description of Credential Delegation, we follow the format for security patterns defined in [7]. Our focus is on security aspects. For a general pattern-oriented introduction to grid computing see the grid architectural pattern in [3].", "num_citations": "10\n", "authors": ["856"]}
{"title": "Free/open services\n", "abstract": " A novel concept of free/open services adopts the principles of the free/ open source software approach and adapts them for service-oriented computing to enhance the widespread use of services.", "num_citations": "9\n", "authors": ["856"]}
{"title": "Communication as a means to differentiate objects, components and agents\n", "abstract": " Choosing the right abstractions is important for managing the complexity of your system. Three important abstractions used today are object, component and agent. Many similarities exist between these abstractions, but to make proper use of each, one should have a good understanding of their differences. Too often, we hear people discussing their agent-based systems when they have simply used the object abstraction. In this conceptual paper, we use communication as a means to differentiate the three abstractions. We describe communication patterns for each abstraction using an abbreviated pattern format, identifying the contexts, forces and solutions to different problems that present themselves for each abstraction. Our objective is to help developers identify the abstractions they are working with so they can make better use of them.", "num_citations": "9\n", "authors": ["856"]}
{"title": "Caching mechanism to optimize a bidding process used to select resources and services\n", "abstract": " A caching mechanism is provided for use by a Bid Manager in a multi-agent resource allocation bidding system. The caching mechanism stores the most recent bids issued by one or more Bidders for a given bidding context. The cache is updated using a notification mechanism.", "num_citations": "8\n", "authors": ["856"]}
{"title": "An open platform for customized learning environments\n", "abstract": " This paper describes the Open Learning Suite (OLS), an architecture that uses web services to integrate open source learning applications and systems. Managers of organizations faced with the adoption of proprietary software systems will benefit the most from this paper. The objective of OLS is to (i) provide a platform that allows applications and systems to communicate with one another, and (ii) a component that creates customized configurations of learning environments on top of that platform. Central to OLS is the notion of exposing the functionality of applications and systems as web services, and delivering this functionality through an easy to use, recognizable user interface with a common look and feel across different configurations. Customized learning environments can be created by either adding new services to existing systems, or by recomposing services provided by modules of existing systems into new systems. We foresee OLS to be used for standalone applications that deliver narrow services (eg, bulletin board), systems that deliver various service modules (eg, lecture delivery), and small systems focused on solving a problem (eg, issue tracker).", "num_citations": "8\n", "authors": ["856"]}
{"title": "Niche formation in the mashup ecosystem\n", "abstract": " Mashups enable end-users to\" mix and match\" data and services available on the web to create applications. Their creation is supported by a complex ecosystem of i) data providers who offer open APIs to users, ii) users who combine APIs into mashups, and iii) platforms, such as the ProgrammableWeb or Mashape, that facilitate the construction and publication of mashups. In this article, we argue that the evolution of the mashup ecosystem can be explained in terms of ecosystem niches anchored around hub or keystone APIs. The members of a niche are focused on an area of specialization (eg, mapping applications) and contribute their knowledge to the value proposition of the ecosystem as a whole. To demonstrate the formation of niches in the mashup ecosystem, we model groups of related mashups as species, and we reconstruct the evolution of mashup species through phylogenetic analysis.", "num_citations": "7\n", "authors": ["856"]}
{"title": "Going open: Does it mean giving away control?\n", "abstract": " Open source software has evolved from being an effort driven by a collective of volunteers to become an integral part of commercial software. Constant demands for new features besides maintaining product quality made companies seek open source as an answer for these demands. These growing demands brought with them control of quality, architecture, contribution management, and community management.  This article explores the governance strategies adopted by open source software projects to manage the quality of complements (such as plug-ins that extend a platform's functionality) developed by community members outside the core team. The outcomes of the research contribute to our understanding of the strategies followed by different open source platform owners (the open source project initiators) to manage external innovation in the case of platform extensions in two areas: i) governance models and ii) regulatory tools.", "num_citations": "7\n", "authors": ["856"]}
{"title": "Economics of software product development collectives\n", "abstract": " Where software product development occurs is shifting from single companies to groups or collectives of companies. In this article, we retrace the evolution of how software product development is organized and then offer insights into the economic motivation for collectives, which will be relevant to companies considering joining a software product development collective. Building on the literature on software product line economics, we identify three factors affecting the economics of collectives (level of contribution, number of members, and diversity of use), and develop a model that links those factors to three economic outcomes (time, quality, and cost). This model can be used by potential members when deciding whether or not to join a collective.", "num_citations": "7\n", "authors": ["856"]}
{"title": "Issues for robust consensus building in p2p networks\n", "abstract": " The need for semantic interoperability between ontologies in a peer-to-peer (P2P) environment is imperative. This is because, by definition participants in P2P environment are equal, autonomous and distributed. For example, the synthesis of concepts developed independently by different academic researchers, different research labs, various emergency service departments and, hospitals and pharmacies, just to mention a few, are an assertive request for cooperation and collaboration among these independent peers. In this work we are looking at issues that enable us to build a robust semantic consensus to solve the interoperability problem among heterogeneous ontologies in P2P networks. To achieve a robust semantic consensus we focus on three key issues: i. semantic mapping faults, ii. consensus construction iii. fault-tolerance. All these three issues will be further elaborated in this paper, initial\u00a0\u2026", "num_citations": "7\n", "authors": ["856"]}
{"title": "Agent Patterns\n", "abstract": " Slide 3 of 126 http://www. scs. carleton. ca/~ deugo/Patterns/Agent/Presentations/AgentPatterns/sld003. htm9/24/2005 1: 37: 13 PM", "num_citations": "7\n", "authors": ["856"]}
{"title": "Community Design Canvas: A tool for designing innovation communities\n", "abstract": " While interaction with customers has always been central to new product development, the Internet has enabled many new forms of collaboration with customers during product innovation. Innovation communities, in particular, provide ways for innovators to share and develop ideas, discuss new ideas, and promote their innovations. The goal of this paper is to provide a comprehensive tool that allows managers to communicate the various decisions involved in designing an innovation community in a clear and systematic manner. The paper examines the literature on community design to identify common areas of concern in community design and related questions that form the building blocks of a tool for community design. It also presents the results of an initial validation of the effectiveness of the tool.", "num_citations": "6\n", "authors": ["856"]}
{"title": "The business of open source: Missing patterns\n", "abstract": " Open source has become an integral part of commercial software development. An open source business is a business that uses open source as a strategy to strengthen its business model. This paper documents common patterns followed by open source businesses. It complements a series of papers on open source business patterns that together form a pattern language on open source business. It identifies a gap in the existing pattern language and adds three new patterns (HEALTHY COMMUNITY, DUAL PRODUCT, and IP MODULARITY). The patterns are aimed at entrepreneurs, managers in established companies, and students interested in business models that use open source.", "num_citations": "6\n", "authors": ["856"]}
{"title": "Control and diversity in company-led open source projects\n", "abstract": " A majority of open source development today is carried out by companies. Building on open source allows companies to focus their development effort on the points of difference over their competitors. This article discusses the recent trend towards collectives of companies that develop shared assets in the form of open source projects, and creates a model for company-led open source projects around two dimensions: the level of control over the project and the diversity of applications derived from the project. The article then explores how the model can be interpreted from a product line engineering perspective.", "num_citations": "6\n", "authors": ["856"]}
{"title": "Patterns 2.0: a Service for Searching Patterns.\n", "abstract": " With ever-increasing number of patterns in the literature and online repositories, it can be hard for non-experts to know about new patterns and select patterns appropriate to their needs. We argue that a systematic way for searching patterns is required and we present the Patterns 2.0 service, a composite software service for facilitating pattern search and selection. The service combines several pattern-related services with a recommendation service that allows users to share their experiences in using patterns. The contributions of the paper are: the overview of existing services related to the problem of pattern selection, the definition of Patterns 2.0 service, and description of its possible uses.", "num_citations": "6\n", "authors": ["856"]}
{"title": "Exploring the intellectual rights in the Mashup ecosystem\n", "abstract": " Over the last three years there has been a rapid proliferation of mashups as an emerging paradigm of Web 2.0. Mashups are applications that combine data and services provided through several open APIs, allowing the quick creation of custom applications by users. However, the intellectual rights associated with services and data associated with mashups are not focused intensively. In this paper, we explore the actors and roles involved in a mashup ecosystem and analyze the intellectual rights associated with mashups.", "num_citations": "6\n", "authors": ["856"]}
{"title": "Ecology and dynamics of open source communities\n", "abstract": " The goal of this chapter is to document the evolution of a portfolio of open source communities. These are communities formed around a set of related projects with common governance, which often produce artifacts shared among all projects. It helps to think of a portfolio of project communities as an ecology, in which the projects are mutually dependent, and there is both cross-project collaboration and competition for resources among the communities. As a case study, we explore the ecology of communities within the Apache project, one of the largest and most visible open source projects. We infer the community structure from developer mailing lists, and study how the communities evolve and interact over time. The analysis lends support to the often-stated hypothesis that open source communities grow by a process of preferential attachment. However, we show that the influx of external developers is not the\u00a0\u2026", "num_citations": "6\n", "authors": ["856"]}
{"title": "Offline Detection of Functional Feature Interactions of Web Services\n", "abstract": " This paper proposes an offline method for detecting feature interactions related to the functionality of a composite web service. There are several important ways in which functional features of web services can adversely affect each other through interaction. This problem is a particular challenge in the web services domain, since these services evolve rapidly and independently, that is, not under the control of a single party. Our approach uses labeled transition systems (LTS) to model service compositions. An LTS allows us to model the salient behavioral aspects of each web service, and to define properties for composite services through which we can detect different types of feature interactions, including assumption violation, race conditions, and incorrect invocation order. We have performed a number of case studies that demonstrate the different types of functional feature interactions, and their detection. One emphasis in the paper will be on the approach, the other on the case studies.", "num_citations": "6\n", "authors": ["856"]}
{"title": "Patterns for modelling agent systems with tropos\n", "abstract": " Tropos is an agent-oriented development methodology based on knowledge-level concepts (such as actor, goal, and the dependency between actors) with a particular focus on requirements analysis. This paper presents a pattern language for guiding developers, especially those without previous Tropos experience, through the various design challenges faced when using Tropos. The patterns format allows us to motivate the modelling constructs, justify each of the development stages, and address specific modelling problems. These patterns are inter-linked in such a way that developers can navigate from higher-level to lower-level patterns as they apply the Tropos methodology. The paper has two goals: to motivate the use of agent-oriented methodologies such as Tropos to a wider set of developers, and to provide guidance for the different development activities of the Tropos methodology. Specifically\u00a0\u2026", "num_citations": "6\n", "authors": ["856"]}
{"title": "Invocation order matters: functional feature interactions of web services\n", "abstract": " This paper proposes a method for detecting feature interactions related to the functionality of a composite web service. There are several important ways in which functional features of Web Services can affect each other through interaction. A feature interaction is an undesirable side effect of the composition of services (also known as features in this context). There are various causes for interactions, including race conditions, violation of assumptions, goal conflicts, and invocation order. We have categorized the sources of feature interactions among web services in related work. In this work, we present the results of ongoing work on the formalization of functional interactions between web services. In our approach we use on labeled transition systems to model service compositions. These models are analyzed using the LTS Analyzer to detect undesirable feature interactions. As a specific example, we look at invocation order as a source of functional feature interaction.", "num_citations": "6\n", "authors": ["856"]}
{"title": "Redesign of local area networks using similarity-based adaptation\n", "abstract": " This paper describes the design of a case-based reasoning system for the redesign of local area networks. It introduces a mechanism for solution adaptation based on a hierarchy of possible actions, each of which is associated with background knowledge about its suitability. A novel similarity measure is used to rank actions where multiple alternative actions are found for an action that cannot be applied in the current problem context. The measure uses a heuristic weighting function between the degree of abstraction and the degree of specificity. It is shown how other measures for closeness may be derived as specializations of the one presented.< >", "num_citations": "6\n", "authors": ["856"]}
{"title": "A reference model for semantic peer-to-peer networks\n", "abstract": " Current research directions in Semantic Peer-to-Peer(SP2P) networks are evolving to combine two complementary technologies: Peer-to-Peer(P2P) networks and formally-structured information, Ontology. SP2P systems incorporate several additional features not present in P2P networks. However, the current SP2P research efforts have generated many and diverse realizations and architectures. This diversity in implementation and architecture in turn has led to an ambiguity and incompatibility in defining domain abstracts and concepts and as such has hampered progress in this area. For instance, system comparison as well as their translation into practical implementation have been hindered. In this work, we describe a reference model for SP2P systems in an effort to model the emerging decentralized computing paradigm in a generic and high level abstraction. The potential contribution of the reference\u00a0\u2026", "num_citations": "5\n", "authors": ["856"]}
{"title": "Fault-Tolerant Emergent Semantics in P2P Networks\n", "abstract": " To survive in the 21st century, enterprises need to collaborate. Collaboration at the enterprise-level presupposes the interoperability of the underlying information systems. Access to heterogeneous information sources must be provided transparently while maintaining their autonomy. Further, the availability of nearly unlimited information calls for efficient and precise information retrieval, which can be achieved by making the semantics embedded in information sources explicit. Solving the semantic interoperability problem becomes imperative to the success of information search and retrieval applications and enterprises that rely on them. Inspired by self-organizing systems found in biology, physics, and computing, the approach of emergent semantics has been proposed as a solution to the semantic interoperability problem. Emergent semantics refers to the bottom-up construction of interoperable systems, in\u00a0\u2026", "num_citations": "5\n", "authors": ["856"]}
{"title": "Service licensing composition and compatibility analysis\n", "abstract": " Services enable the transformation of the World Wide Web as distributed interoperable systems interacting beyond organizational boundaries. Service licensing enables broader usage of services and a means for designing business strategies and relationships. A service license describes the terms and conditions for the use and access of the service in a machine interpretable way that services could be able to understand. Service-based applications are largely grounded on composition of independent services. In that scenario, license compatibility is a complex issue, requiring careful attention before attempting to merge licenses. The permissions and the prohibitions imposed by the licenses of services would deeply impact the composition. Thus, service licensing requires a comprehensive analysis on composition of these rights and requirements conforming to the nature of operations performed and\u00a0\u2026", "num_citations": "5\n", "authors": ["856"]}
{"title": "Patterns and their Impact on System Concerns.\n", "abstract": " Making the link between architectural decisions and system concerns explicit is a major contribution that patterns can make. Over the past decade, there have been several efforts to close the gap between requirements and architecture by using patterns. In this paper, our goal is to take a step back and survey these different contributions, as well as related efforts in other communities (such as the work on aspect-oriented requirements engineering). From these, we identify common elements and present a perspective on how to move forward. This thematic track on Pragmatic and Systematic Approaches in Applying Patterns should provide a good conduit for this discussion.", "num_citations": "5\n", "authors": ["856"]}
{"title": "Goal-oriented design of business models and software architectures\n", "abstract": " E-business initiatives succeed when the business model and the deployed software architecture contribute directly to the firm's business goals. The design of e-business initiatives should elicit and evaluate alternative business models and software architectures in order to find the combination which best achieves the business goals. The elicitation and evaluation of alternatives requires effective communication between stakeholders with different skill sets. In this paper, we introduce an end-to-end process which facilitates stakeholder communication throughout the development process. We leverage goal-modeling and scenario evaluation notations to compare alternative business models and software architectures and to select the alternatives which best satisfy the firm's business goals. We illustrate the process with a case study. The process assists cross-functional stakeholders in documenting decisions made\u00a0\u2026", "num_citations": "5\n", "authors": ["856"]}
{"title": "On the Use of Patterns in Agent System Design.\n", "abstract": " In this paper we make a case for a pattern-driven approach to agent system design that complements the goal-driven approach of most design methodologies. Current approaches to agent system design such as Gaia [15], and MASSIVE [11], are generally goal-driven. This is understandable given the nature of agents as goaldriven entities. Therefore, in these design approaches, an agent system is designed by iteratively decomposing system goals until they can be assigned to individual agents. However, this may lead developers to solve the same design problems over and over without benefiting from how they were resolved in the past, resulting in duplicated effort, and inconsistent designs. A more effective and less ad hoc approach is to build an agent system incrementally from well-documented interaction patterns. In the sections below we introduce the notions of patterns and agent patterns, and discuss the role of patterns in agent system design. Following that we outline the steps of a pattern-based methodology, and relate it to our current work on formalizing agent patterns using the non-functional requirements (NFR) framework [5].", "num_citations": "5\n", "authors": ["856"]}
{"title": "An agent-based distributed multimedia service environment\n", "abstract": " This paper describes our experiences in using agent-based technology for the design of distributed multimedia service environments. These new systems must be able to operate in a constantly evolving enterprise and to adapt to unexpected contingencies or failures in hardware, software and even human resources. Our Multi-Agent-Architecture for Networked Applications (MANA) is based on the notion of an organizational network of agents that cooperate to provide services to internal and external customers of the enterprise. Key to the approach is the decoupling of service definition and provisioning through a declarative model of the enterprise.", "num_citations": "5\n", "authors": ["856"]}
{"title": "A leader-driven open collaboration platform for exploring new domains\n", "abstract": " This paper describes the design and initial evaluation of a leader-driven open collaboration platform for exploring new domains. The goal of this platform is to enable the collaboration of subject matter experts across knowledge boundaries. Traditionally, new domains are explored from within a single specialist or a focused group perspective. However, this often introduces bias. Collaboration helps reduce such bias by providing access to a broader range of information sources, increasing the chances for producing new insights in a new domain. However, it also introduces a new problem: variance between the contributions made. Variance makes it difficult to produce a coherent document. In this paper, we derive propositions about how leader-driven open collaboration is expected to help reduce bias while containing variance. We also offer an initial evaluation of these propositions based on our observations from\u00a0\u2026", "num_citations": "4\n", "authors": ["856"]}
{"title": "Value of open source projects: a case for open source cybersecurity\n", "abstract": " Current solutions to address cybersecurity threats take a siloed approach. Such a siloed approach favors attackers who share exploits with one another. The paper argues that cybersecurity threats are best addressed through open source projects that combine the shared expertise of security experts. To this end we develop a tool for assessing the value of open source projects and then apply it to examine how cybersecurity threats can be addressed through open source projects. This article will be relevant to organizations and government agencies who need to ensure that their networks are safe from cyberattacks, cybersecurity service providers, and to researchers interested in the intersection of open source and cybersecurity.", "num_citations": "4\n", "authors": ["856"]}
{"title": "User frustrations as opportunities\n", "abstract": " User frustrations are an excellent source of new product ideas. Starting with this observation, this article describes an approach that entrepreneurs can use to discover business opportunities. Opportunity discovery starts with a problem that the user has, but may not be able to articulate. User-centered design techniques can help elicit those latent needs. The entrepreneur should then try to understand how users are solving their problem today, before proposing a solution that draws on the unique skills and technical capabilities available to the entrepreneur. Finally, an in-depth understanding of the user allows the entrepreneur to hone in on the points of difference and resonance that are the foundation of a strong customer value proposition.", "num_citations": "4\n", "authors": ["856"]}
{"title": "Diversity of the Mashup Ecosystem.\n", "abstract": " Mashups allow users to develop applications from a variety of open APIs. The creation of mashups is supported by a complex ecosystem of interconnected data providers, mashup platforms, and users. A sign of a healthy ecosystem is that the number and diversity of APIs and mashups in the ecosystem increases continuously. In this paper, we describe a model of the evolution of the mashup ecosystem that allows us to estimate the diversification of the mashup ecosystem over time. In this model we show the evolutionary relationships between mashups as branches in a phylogenetic tree. We discuss how the diversification rate of the mashup ecosystem can be estimated by fitting this tree to a birth-death process model. The results of our research show that the diversity of the mashup ecosystem is increasing with time, however, not monotonically.", "num_citations": "4\n", "authors": ["856"]}
{"title": "Keystone: Adjective or Noun?\n", "abstract": " \" Conceit spoils the finest genius. There is not much danger that real talent or goodness will be overlooked long; even if it is, the consciousness of possessing and using it well should satisfy one, and the great charm of all power is modesty.\"", "num_citations": "4\n", "authors": ["856"]}
{"title": "In Bed with the Enemy.\n", "abstract": " Executive from the Japanese partner:\u201cWhen it is necessary to collaborate, I go to my employees and say,\u2018This is bad, I wish we had the skills ourselves. Collaboration is second best. But I will feel worse if after four years we do not know how to do what our partner knows how to do.\u2019We must digest their skills.\u201d(Hamel et al, 1989)", "num_citations": "4\n", "authors": ["856"]}
{"title": "Patterns and non-functional requirements: an interim report\n", "abstract": " Software is becoming critical to more and more sectors of the economy. Time-to-market, robustness, and quality of software is now more important than ever before, due to new competitive environments, and the resulting need to evolve rapidly with changing business requirements. Thus the difficulty in understanding and modifying evolving software systems remains a serious obstacle to innovation and change, as evidenced by the Y2K problem.One manifestation this is the \u201cfeature interaction\u201d problem in telecom systems. The problem is often stated as that as new features are added to a system they may interact in unexpected ways with existing features. This problem is exacerbated by a shortage of personnel and frequent turnover, the former leading to a lack of documentation, the latter to an issue of how to ensure continuity of the system architecture. Thus companies are looking for ways of improving documentation of design decisions, and passing on design knowledge.", "num_citations": "4\n", "authors": ["856"]}
{"title": "Conceptualizing a new domain using topic modeling and concept mapping: A case study of managed security services for small businesses\n", "abstract": " The objective of this paper is to show how topic modeling and concept mapping can be used to conduct a literature review in a new domain. The paper makes two contributions. First, it uses topic modeling to map out the literature in the new domain. Topic modeling provides an alternative to manual clustering of articles and allows the identification of non-obvious connections between ideas expressed in a collection of articles. Second, it identifies the underlying concepts in the new domain and their relationships by creating a concept map from the extracted topics. As a case study, the paper reviews the recent literature in the intersection of managed security services and small businesses. In particular, it identifies elements of the managed security services concept as it applies to small businesses. The audience of the paper includes anyone who is exploring a new domain by reviewing the literature, and in particular, students, researchers, and members of industrial R&D projects.", "num_citations": "3\n", "authors": ["856"]}
{"title": "Resource description framework\n", "abstract": " The Resource Description Framework (RDF) is a graph-based data model for sharing information on the Web. RDF has been standardized by the World Wide Web Consortium (W3C). The data model puts special emphasis on the globally unique identification of all model elements with Uniform Resource Identifiers (URIs). The globally unique identification of the described objects (called resources in the RDF context) enables data from different sources to be represented in a single RDF graph and lays the foundation for the integration of the data in a pay-as-you-go fashion. The globally unique identification of schema elements (called vocabulary terms in the RDF context) provides for mixing terms from different schemata in a single RDF graph and makes RDF a schema-less data model. The RDF data model forms the foundation for a wide range of RDF-based technologies including the SPARQL query language\u00a0\u2026", "num_citations": "3\n", "authors": ["856"]}
{"title": "Designing collaborative problem-solving communities\n", "abstract": " Community design is often still treated as an engineering problem. However, you should not let technology drive the design of your community. Instead, you want the community's purpose and the activities that the community needs to support drive the design. This paper documents patterns for designing collaborative problem-solving communities. Such communities bring together people to solve problems collaboratively. The patterns draw on research on human-computer interaction and open collaboration and on the author's personal experience with designing a crowdsourcing platform. The primary audience of the paper are designers of problem-solving communities.", "num_citations": "3\n", "authors": ["856"]}
{"title": "Pay to play or requirements prioritization in collectives\n", "abstract": " This paper presents two patterns for requirements prioritization in a collective. A collective is a group of stakeholders with a common need. The stakeholders join the collective to create an infrastructure that they can leverage to develop their own products more effectively. This new organizational model differs from the traditional value chain, and changes the way requirements are identified and prioritized.", "num_citations": "3\n", "authors": ["856"]}
{"title": "A reference model for semantic peer-to-peer networks\n", "abstract": " Today\u2019s information systems are highly networked and need to operate in a global world. With this comes the problem of semantic heterogeneity of information representations. Semantic peer-to- peer networks have been proposed as a solution to this problem. They are based around two components: a peer-to-peer infrastructure for information exchange between information system, and the use of ontologies to define application semantics. However, progress in this area is hampered by a lack of commonality between these approaches, which makes their comparison and translation into practical implementations difficult. In this paper, we describe a reference model for semantic peer-to-peer networks in an effort to remedy this problem. The reference model will (1) enable the establishment of a common terminology for describing semantic peer-to-peer networks, and (2) pave the way for an emerging\u00a0\u2026", "num_citations": "3\n", "authors": ["856"]}
{"title": "Managing the quality of platform extensions\n", "abstract": " Innovation increasingly happens in networks (Tuomi, 2002) or ecosystems (Moore, 2006); few companies can still afford to innovate on their own. The question is no longer whether or not to collaborate, but how to best leverage a network of external parties (Pisano & Verganti 2008). Collaboration allows companies to share risk and cost, gives them access to new markets, resources, and knowledge, and reduces the time to develop a new product (von Stamm, 2008).At the core of each innovation network or ecosystem is a focal organization or keystone (Iansiti and Levien, 2004) that provides a platform which allows the parties in the network to contribute. Here, we define a platform with Haigu et al.(2009) as a product, service or technology that provides a foundation for other parties to develop complementary products. This platform can be provided by a single player, as in the case of Apple's control over the iPod\u00a0\u2026", "num_citations": "3\n", "authors": ["856"]}
{"title": "Patterns and Non-Functional Requirements\n", "abstract": " ObjectivesDevelop a representation for patterns that incorporates non-functional requirements Document a new design process for selecting patterns based on NFR softgoals Refine the representation and process in a case study with the industrial partner Install new representation in a search tool that helps a developer select patterns", "num_citations": "3\n", "authors": ["856"]}
{"title": "Ein hierarchischer Blackboard-Ansatz f\u00fcr verteilte PPS-Systeme\n", "abstract": " Mit unserem Beitrag wollen wir unsere Forschungsaktivit\u00e4ten im Bereich Verbindung von Verteilter K\u00fcnstlicher Intelligenz (VKI) mit Verteilten PPS-Systemen (VPPS) vorstellen, die im Rahmen der Entwicklung des Hierarchischen Blackboard-Systems HBBS durchgef\u00fchrt werden. Zun\u00e4chst wollen wir unseren hierarchischen Blackboard-Ansatz gegen andere Forschungsans\u00e4tze abgrenzen bzw. einordnen. Nach einer Motivation unseres Ansatzes f\u00fcr die Verbindung von VKI mit VPPS wird die System-und Kontrollstruktur von HBBS vorgestellt. Es folgt die Anwendung von HBBS auf die Verbindung von VPPS und VKI sowie die Vorstellung eines Prototyps zur kurzfristigen Umdisposition im St\u00f6rungsfall. Es zeigt sich, da\u00df HBBS f\u00fcr die Anwendung im Bereich der VPPS \u00fcber ausreichend m\u00e4chtige Mechanismen verf\u00fcgt. Insbesondere wird gezeigt, wie unter HBBS verschiedene Interaktionsstrategien (Kooperation und Konkurrenz) innerhalb derselben Multiagentenstruktur umgesetzt werden k\u00f6nnen.", "num_citations": "3\n", "authors": ["856"]}
{"title": "Extraction of architectural patterns from frameworks and modeling their contributions to qualities\n", "abstract": " Context: A framework is a highly reusable design for an application or part of an application in a given domain. It often defines the basic architecture of the applications that use it. With the increasing complexity of developing modern software systems and shorter delivery times, it is essential to reuse existing designs in the form of frameworks as much as possible. Therefore, selecting frameworks and documenting the underlying design rationale becomes an important task for system architects. An architect always needs to justify his/her architecture decisions, particularly when it comes to choosing among multiple frameworks. Problem: Selecting frameworks has been done in the past based on different characteristics and criteria. There were no studies that identify the key criteria and characteristics of frameworks to enable a more informed choice by architects. Objective: In this paper, we try to provide a way to compare automatically the framework quality attributes based on specific characteristics of a framework. Method: In this paper, we extract the implemented architectural patterns from a framework\u2019s source code and document them to connect frameworks to quality requirements upon which a selection can be made. We use a tool called Archie (a tool used to extract tactics from code and produces a candidate set of tactics of a Javabased system) to extract the implemented architectural patterns of frameworks. We then document and model the patterns implemented by a framework and their impact on quality attributes using the Goal-oriented Requirements Language (GRL). Results: The satisfaction level of the quality requirements by a set of\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "Digital Warfare: Machine Learning and Contract Cheating\n", "abstract": " Contract cheating services are lucrative global enterprises where student assignments are bought and sold. This form of academic misconduct is one of the hardest to detect because original work is submitted and no automated solution exists. Studies report between 65-87% of American college students have self-reported cheating. If students are not focused on learning and are instead focused on the cost-benefit ratio, this commodification of education may cause students to pursue unethical means to get ahead. Artificial intelligence (AI) will change many things, and student cheating is no exception. Contract cheating sites will use AI and attack higher education by using new methods to scale their business. Higher education must defend to avoid the proliferation of\" fake\" credentials. This paper will focus on digital warfare between contract cheating services and higher education. It will discuss the impact of\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "From prediction to anticipation of cyber attacks\n", "abstract": " With the rising volume and variety of cyber attacks, it has become increasingly harder for businesses and organizations to defend against attacks. The paper makes the case that to respond to this challenge, we need to anticipate new threats, not merely react to known threats. It reviews reactive approaches to cyber attacks where current actions are based on past behavior, and proactive approaches guided by predictions about the future.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Patterns for regulating behavior in innovation communities\n", "abstract": " Innovation communities enable organizations and their customers to jointly develop new products, discuss product ideas, and promote new products. For an innovation community to be productive, community members need to agree on what behaviors are expected and acceptable. The patterns in this paper focus on regulating community behavior by rewarding appropriate behavior and sanctioning inappropriate behavior, and on ways of communicating and creating rules of community behavior. The audience for these patterns include organizations and individuals involved in the creation, operation, and growth of innovation communities.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Combining exploratory analysis and automated analysis for anomaly detection in real-time data streams\n", "abstract": " Security analysts can become overwhelmed with monitoring real-time security information that is important to help them defend their network. They also tend to focus on a limited portion of the alerts, and therefore risk missing important events and links between them. At the heart of the problem is the system that analysts use to detect, explore, and respond to cyber-attacks. Developers of security analysis systems face the challenge of developing a system that can present different sources of information at multiple levels of abstraction, while also creating a system that is intuitive to use. In this article, we examine the complementary nature of exploratory analysis and automated analysis by testing the development of a system that monitors real-time Border Gateway Protocol (BGP) traffic for anomalies that might indicate security threats. BGP is an essential component for supporting the infrastructure of the Internet; however, it is also highly vulnerable and can be hijacked by attackers to propagate spam or launch denial-of-service attacks. Some of the attack scenarios on the BGP infrastructure can be quite elaborate, and it is difficult, if not impossible, to fully automate the detection of such attacks. This article makes two contributions: i) it describes a prototype platform for computing indicators and threat alerts in real time and for visualizing the context of an alert, and ii) it discusses the interaction of exploratory analysis (visualization) and automated analysis. This article is relevant to students, security researchers, and developers who are interested in the development or use of real-time security monitoring systems. They will gain insights into the\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "Managing the quality of platform complements\n", "abstract": " High-technology industries have been witnessing the emergence of a product system where core components (a platform) provided by a focal company and complements provided by external parties. To satisfy the increasing demands for new and customized features product, companies had to reach beyond their organizational boundaries to seek external sources of innovation. To align external innovation with their goals and protect the integrity their platform, companies need to take a more active role coordinating the flow of ideas and controlling the quality of innovation outcomes. This research focuses on exploring strategies followed by software platform owners to manage the quality of complements (such as plug-ins that extend platform functionality) developed by external parties. The outcomes of the research contribute to our understanding of the strategies followed by platform owners to manage external\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "Managing the quality of platform complements: The case of extensions in open source software platforms\n", "abstract": " High-technology industries have been witnessing the emergence of a product system where core components (a platform) provided by a focal company and complements provided by external parties. To satisfy the increasing demands for new and customized features product, companies had to reach beyond their organizational boundaries to seek external sources of innovation. To align external innovation with their goals and protect the integrity their platform, companies need to take a more active role coordinating the flow of ideas and controlling the quality of innovation outcomes.This research focuses on exploring strategies followed by software platform owners to manage the quality of complements (such as plug-ins that extends the functionality of the platform) developed by external parties. The outcomes of the research contribute to our understanding of the strategies followed by platform owners to manage external innovation in the case of platform extensions in two areas: i) governance models, and ii) regulatory instruments.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Gathering in digital spaces: exploring topical communities on twitter\n", "abstract": " On Twitter, hashtags allow users to gather around a topic in a digital space, something that has been common since early IRC and internet chat rooms. However there are three important differences when gathering on Twitter: persistence, invitation, and device independence. In this paper, we search for patterns in these digital spaces through the use of visualization to explore the temporal rhythms that emerge.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Following the conversation: a more meaningful expression of engagement\n", "abstract": " Twitter is a relatively recent phenomenon, and the common metric of success is number of followers. Because people use Twitter in a myriad different ways, and the presence of spammers, it is necessary to discover new ways of quantifying success. In this paper, we explore the nature of engagement on Twitter and find the traditional follower/following network to be meaningless in this regard. Building on previous research, we define engagement in terms of interactions using the @ notation, and visualize this as a graph. We then apply clique finding techniques to this graph, to extract a sub-graph of the most important connections in a user\u2019s immediate network.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Patterns for Licensing Web Services.\n", "abstract": " The trend towards providing software as a service has required us to rethink the way software is licensed. There are different types of proprietary and open source licenses for software. However, the nature of web services differs significantly from traditional software and software components, which prevents the direct adoption of their respective licenses. As web services can be accessed and consumed in a variety of ways, there is a also spectrum of licenses for web services. We have mined existing licenses for web services for commonalities, and present the different licensing options in the form of patterns.", "num_citations": "2\n", "authors": ["856"]}
{"title": "License compliance issues in free and open source software\n", "abstract": " Today, Free and open source software (FOSS) is widely used by organizations and individuals and viewed as a new approach to developing software. New software can be developed by integrating FOSS components or incorporating source code fragments, thus adding value in terms of functionality and quality. The use of FOSS components in developing new software requires developers to comply with the terms of the licenses associated with those components. The issues related to this compliance scenario are of paramount importance, because the license of a FOSS component can impact the whole Information System or computer application being developed. License compliance in FOSS is a significant issue today and organizations using FOSS are predominately focusing on this issue. The non-compliance to licenses in FOSS systems leads to the loss of reputation and the high costs of litigation for\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "Modeling method for assessing privacy technologies\n", "abstract": " In this chapter we propose a modeling framework for assessing privacy technologies. The main contribution of the framework is that it allows us to model aspects of privacy and related system concerns (such as security and scalability) in a more comprehensive manner than the dataflow diagrams traditionally used for privacy analysis. The feature interaction perspective taken in the chapter allows us to reason about conflicts between a service user\u2019s model of how the service works and its actual implementation. In our modeling framework such conflicts can be modeled in terms of goal conflicts and service deployment. Goal conflicts allow us to reflect conflicting points of view on system concerns (primarily privacy and security) among the different stakeholders, which are part of the system and its context. Deployment refers to the assignment of functionality to system components, which allows us to reason about\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "TIM Series: Open APIs, Mashups and User Innovation\n", "abstract": " The TIM Lecture Series provides a forum that promotes the exchange of knowledge between university research and technology company executives and entrepreneurs. Readers outside the Ottawa area who are unable to attend the lectures in person are invited to view upcoming lectures in the series either through voice conferencing or webcast.On June 11, 2008, Michael Weiss from Carleton University delivered a presentation entitled\" Open APIs, Mashups and User Innovation\". This section provides the key messages from the lecture. Michael's lecture examined the structure of the mashup ecosystem as well as implementation issues, including licensing.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Patterns for grid security\n", "abstract": " Grid computing is a novel technology that enables the integrated, collaborative use of computers, networks, databases, and scientific instruments owned and managed by multiple organizations in different locations. Due to large amount of data involved and the dynamic nature of grids, managing the security needs in an open grid environment is very challenging. This paper presents a catalog of security patterns for grids. These patterns have been mined from the Grid Security Infrastructure (GSI) as implemented in the Globus Toolkit 4, as well as from other grid frameworks.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Workshop on integration of open source components into large software systems\n", "abstract": " Developing large software systems has largely become an exercise in integration. The main effort is writing\" glue\" that holds externally developed components together. We will explore the shift away from commercial off-the-shelf (COTS) to free/open source software (F/OSS) components, and identify the opportunities and issues introduced by it.", "num_citations": "2\n", "authors": ["856"]}
{"title": "A Feature Interaction View of License Conflicts.\n", "abstract": " In this paper, we introduce the problem of license conflicts, which occurs when information assets (such as software, data, or multimedia files) are composed, derived or versioned. A license specifies a set of permissions granted by an asset owner to an asset consumer (as expressed in the form of licensing clauses), effectively waiving what would otherwise be an infringement of the owner\u2019s intellectual rights. Thus, a license allows producers to control how consumers may use and extend the asset. New assets can be produced by composing multiple assets or deriving an asset from an existing asset, as governed by their licenses. Licenses interact with each other either directly or indirectly during the composition or derivation of assets. Licenses can also interact with other versions of the same license during the evolution of an asset. We view interactions of licenses as feature interactions, especially if those interactions result in conflicts. Here, features correspond to licensing clauses. In this paper, we identify and analyze feature interactions of licenses during the composition, derivation, and evolution of assets.", "num_citations": "2\n", "authors": ["856"]}
{"title": "ODRL/L (S): A Language for Service Licensing\n", "abstract": " Service licensing is a significant way to manage the rights between service consumers and service providers. Licensing, being the mechanism of technology transfer, is the common denominator for distribution of services associated with designing business strategies and relationships. The currently available service description standards and languages do not cover the critical clauses of licensing. This paper proposes a language ODRL/L(S), derived from the Open Digital Rights language (ODRL), to represent exclusively the licenses for services, in machine interpretable form.", "num_citations": "2\n", "authors": ["856"]}
{"title": "A service-oriented architecture for creating customized learning environments\n", "abstract": " We propose an architecture for creating customized learning environments comprised of existing open source applications and systems. The proposed architecture enables a different approach to providing an organization with a learning environment. One known approach is to decide on adopting a particular proprietary system (eg, WebCT, or Blackboard) across all departments of the organization, irrespective of specific needs of individual departments. The other is to customize an existing open source learning environment (eg, Moodle, or ANote) by modifying its source code. While this solution affords maximum flexibility, it is also very costly. The Open Learning Suite (OLS) project [3] builds a custom learning environment using existing open source applications and systems. It supports multiple configurations across one organization and requires no source code modifications to those components other than the creation of a web service wrapper, which is a onetime effort, and can be supplied by the component provider. The OLS project is itself an open source project hosted on the eduforge. org site. Eduforge [1] is a recently started initiative for the development and dissemination of open source e-learning environments. It was founded in January 2004 as part of the New Zealand Open Source Virtual Learning Environment project (NZOSVLE). The NZOSVLE is a major collaborative education project funded by the New Zealand Tertiary Education Commission (TEC). The project\u2019s goals are to adopt, adapt and develop open source e-learning infrastructures for its consortium members. The software developed will be made available on Eduforge\u00a0\u2026", "num_citations": "2\n", "authors": ["856"]}
{"title": "Exploiting Communities of Interest to Find Information on the Web\n", "abstract": " We describe a system that uses peer recommendations to improve the quality of search results when looking for information on the Web. Our approach is based on the well-known technique of collaborative filtering. However, our proposal aims to address some of its scalability issues by using a multi-agent approach. This approach is also a better match for the distributed nature of the Web than the centralized processing model in most existing proposals. The result is a community-based mechanism for navigating the Web. Initial experiments indicate that it considerably reduces the information overload associated with current search engines, while better supporting serendipity, providing assistance when the user is browsing the Web.", "num_citations": "2\n", "authors": ["856"]}
{"title": "The bidding model of configuration control\n", "abstract": " Eine wesentliche Anforderung an heutige CAD-Systeme ist die transparente Integration mehrerer Werkzeuge. Wesentlicher Bestandteil eines Schemas zur Werkzeugintegration ist ein Kontrollmechanismus f\u00fcr die sich dynamisch \u00e4ndernde Laufzeit-Konfiguration des Systems. Als L\u00f6sungsansatz wird hier ein Protokoll zur Konfigurationskontrolle und seine Implementierung in einem Lisp-Dialekt vorgestellt. Est is dies auch eine Fallstudie zum objekt-orientierten Programmieransatz und zum Client-Server Paradigma.", "num_citations": "2\n", "authors": ["856"]}
{"title": "Modeling and Selecting Frameworks in Terms of Patterns, Tactics and System Qualities\n", "abstract": " Selecting a framework and documenting the rationale for choosing it is an essential task for system architects. Different framework selection approaches have been proposed in the literature. However, none of these connect frameworks to qualities based on their implemented patterns and tactics. In this paper, we propose a way to semi-automatically compare the quality attributes of frameworks by extracting the patterns and tactics\u00a0from a framework\u2019s source code and documenting them to connect frameworks to requirements upon which a selection can be made. We use a tool called Archie (a tool used to extract tactics from a Java-based system\u2019s code) to extract the patterns/tactics from the implementation code of frameworks. We then document and model these patterns/tactics and their impact on qualities using the Goal-oriented Requirements Language (GRL).\u00a0After that, we reuse these models of patterns and\u00a0\u2026", "num_citations": "1\n", "authors": ["856"]}
{"title": "Detecting architectural integrity violation patterns using machine learning\n", "abstract": " Recent 1 years have seen a surge of research into new ways of analyzing software quality. Specifically, a set of studies has been devoted to the impact the architectural relations among files have on system maintainability and file bug-proneness. The literature has proposed a set of rules for determining recurring architectural design flaws that occur in most complex systems, are associated with bugs, and thus incur high maintenance costs. In the present paper we advocate for using machine learning as the means of refining the approach and revealing new patterns of architectural integrity violations. Having trained a machine learning model on the combination of structural and historical information acquired from the Tiki open source project, we have been able to replicate three of the six known types of architectural violations and discover one new type, the Reverse Unstable Interface pattern. The implication of our\u00a0\u2026", "num_citations": "1\n", "authors": ["856"]}
{"title": "Business of open source: A case study of integrating existing patterns through narratives\n", "abstract": " This paper integrates previously published patterns (many of them documented by the author) for open source businesses through narratives. An open source business employs open source as a strategy to strengthen its business model. The paper makes three contributions: it links patterns by creating narratives of how they have been applied by different companies; it documents pattern sequences for each example; and it proposes a way to group the patterns that reflects how strategic open source is to a business.", "num_citations": "1\n", "authors": ["856"]}
{"title": "RDF Technology\n", "abstract": " Family of technologies that are standardized by the World Wide Web Consortium (W3C) and built on the Resource Description Framework (RDF). RDF technologies encompass data exchange formats, query languages, and various vocabularies and ontologies. RDF technologies provide the basis for data integration of heterogeneous data sources as well as for the semantic description of resources in terms of assertions on the properties of these resources and relationships among them.", "num_citations": "1\n", "authors": ["856"]}
{"title": "Patterns for idea management in innovation communities\n", "abstract": " Innovation communities enable companies and their customers to create new products, discuss product ideas, and promote new products. The patterns in this paper focus on idea management, an essential element of innovation communities concerned with attracting, evaluating, and developing ideas. The paper is part of a series of papers on patterns for designing innovation communities. The audience for the patterns includes organizations and individuals involved in the creation, operation, and growth of innovation communities.", "num_citations": "1\n", "authors": ["856"]}
{"title": "E-Technologies: Embracing the Internet of Things\n", "abstract": " This book constitutes the refereed proceedings of the 7th International Conference on E-Technologies, MCETECH 2017, held in Ottawa, ON, Canada, in May 2017. This yearees conference drew special attention to the ever-increasing role of the Internet of Things (IoT); and the contributions span a variety of application domains such as e-Commerce, e-Health, e-Learning, and e-Justice, comprising research from models and architectures, methodology proposals, prototype implementations, and empirical validation of theoretical models. The 19 papers presented were carefully reviewed and selected from 48 submissions. They were organized in topical sections named: pervasive computing and smart applications; security, privacy and trust; process modeling and adaptation; data analytics and machine learning; and e-health and e-commerce. . ;", "num_citations": "1\n", "authors": ["856"]}
{"title": "Architecture as Enabler of Open Source Project Contributions\n", "abstract": " The patterns in this paper are part of a larger pattern language for open source businesses. Other parts of the pattern language (Weiss, 2009; 2010; 2011) discuss the performance of open source projects and open source business models. The focus of these patterns is on the role of architecture in getting external developers to contribute to open source projects.Architecture affects the ease with which open source components can be integrated; how contributions to an open source project can be made; what parts of the product are under the control of the project initiator or champion, and how straightforward it is to create different configurations of the product; and how collaboration among contributors is organized.", "num_citations": "1\n", "authors": ["856"]}
{"title": "Cloud Services.\n", "abstract": " Dru Lavigne is a technical writer and IT consultant who has been active with open source communities since the mid-1990s. She writes regularly for BSD Magazine and is the author of the books BSD Hacks, The Best of FreeBSD Basics, and the Definitive Guide to PC-BSD.", "num_citations": "1\n", "authors": ["856"]}
{"title": "Service for selecting patterns\n", "abstract": " Given the steadily growing number of patterns in the literature and online repositories, it can be hard for non-experts to select patterns appropriate to their needs, or even to be aware of the patterns that exist. In this paper, we present the ICPatterns service, a generic service for facilitating pattern selection. The service can combine existing pattern retrieval services with a recommendation service that allows users to share their experiences in using patterns. Almost fifteen years ago, the GoF stated the problem of selecting patterns:\u201cWith more than 20 design patterns in the catalog to choose from, it might be hard to find the one that addresses a particular design problem, especially if the catalog is new and unfamiliar to you\u201d[6]. As time passed, patterns have become an integral part of many development approaches. However, the problem of selecting patterns still exists. If anything, it has become more critical, as the number of documented patterns has continually increased: for instance, Rising\u2019s Pattern Almanac [13] lists more than 1200 patterns. In the past nine years since the publication of the alamnac, many new patterns and books on patterns have been published. The problem of choosing the appropriate pattern is particularly hard to solve for inexperienced programmers [14]:Only experienced software engineers who have a deep knowledge of patterns can use them effectively. These developers can recognize generic situations where a pattern can be applied. Inexperienced programmers, even if they have read the pattern books, will always find it hard to decide whether they can reuse a pattern or need to develop a special-purpose solution.", "num_citations": "1\n", "authors": ["856"]}
{"title": "Mapping Mashup Ecosystems\n", "abstract": " \" A key advantage of the advent of open APIs is that many people can simultaneously tackle a particular problem by working on their own version of a mashup.\" Palfrey & GasserMashups enable users to\" mix and match\" data and user interface elements from different online information sources to create new applications. The creation of mashups is supported by a complex ecosystem of interconnected data providers, mashup platforms, and users. In our recent research, we examined the structure of the mashup ecosystem and its growth over time. The main contribution of our research is a method for the analysis of mashup ecosystems. Its novelty lies in the development of techniques for mapping the mashup ecosystem, and the use of network analysis to obtain key characteristics of the ecosystem and identify significant ecosystem members and their relationships. In this paper, we summarize the key steps of our analysis method, describe the members of the mashup ecosystem, and discuss the managerial implications of our analysis.", "num_citations": "1\n", "authors": ["856"]}
{"title": "Formalizing Architectural Patterns with the Goal-oriented Requirement\n", "abstract": " Many pattern descriptions put their emphasis on the solution to a problem rather than on often conflicting forces and how patterns balance such forces. This work uses the Goal-oriented Requirement Language (GRL) to formalize the forces of architectural patterns in a way that enables rigorous trade-off analysis while allowing the pattern user to determine the applicability of a pattern to the problem in a given context. The formalization of forces does not replace other pattern descriptions but rather complements them and relies on them to provide descriptions of the problem and solution. This work presents a description of the forces applicable in the context of architectural design, introduces how to represent patterns and forces with GRL, and then formalizes a subset of a recently published architectural pattern language.", "num_citations": "1\n", "authors": ["856"]}
{"title": "More Patterns for Web Applications.\n", "abstract": " Small to medium sized web applications are often built using a standard opensource platform such as LAMP, rather than a comprehensive, but more complex framework like J2EE. Our goal is to document a pattern language for this domain. In this paper, we describe patterns for the interaction with external data sources. It is part of a larger effort to document a conceptual model of web applications, and web application frameworks.", "num_citations": "1\n", "authors": ["856"]}
{"title": "Patterns for Negotiating Actors.\n", "abstract": " Negotiation is the process through which two or more autonomous actors (or agents) arrive at a mutually agreeable course of action. In the context of software systems, the need for negotiation stems from increased software modularity and increased autonomy of the resulting modules. Modules can consist of third-party (web) services or more sophisticated software agents. We shall use the term \u201cactor\u201d to designate such entities. Negotiation is a search process. The actors jointly search a (multidimensional) space of actions in an attempt to find a point in the space at which they each meet their individual objectives. In this paper we present three alternative solutions for organizing the negotiation. Our focus is on how actors reveal their preferences, and whether they interact directly or not. We do not consider other design issues such as negotiation language, protocols or strategies, which are discussed eg in [12, 15].", "num_citations": "1\n", "authors": ["856"]}
{"title": "Web Services\n", "abstract": " \u2022 What are web services? In essence, a technology for application integration based on open standards (HTTP, XML)\u2022 In what sense are they related to the Web (capital \u201cW\u201d to refer to the WWW)?\u2022 In fact, deploying web services over the web is more of an artefact than a necessity...\u2022 What we care about is the web of services (services assembled from other services)", "num_citations": "1\n", "authors": ["856"]}