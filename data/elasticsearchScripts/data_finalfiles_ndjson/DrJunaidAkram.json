{"title": "Droidcc: A scalable clone detection approach for android applications to detect similarity at source code level\n", "abstract": " Android became more popular and widely used operating system. It has been noticed that the code clones in Android apps make it difficult to maintain the security flaws in source code. To avoid these problems, it is essential to find, identify, evaluate and recover those code clones as early as possible. In this paper, we propose and design DroidCC, a novel clone detection approach in Android applications, that helps to detect different types of clones from APK's source code. A prototype has been developed and implemented on the dataset of almost 30,000 top rated Android apps. DroidCC detects type-1, type-2 and type-3 clones in Android apps at the source code level. It also detects the similar code fragments, that were injected into many applications, which might be an indication of spreading malware. Meanwhile it can detect full and partial level similarity between applications. We evaluate DroidCC clone\u00a0\u2026", "num_citations": "17\n", "authors": ["830"]}
{"title": "How to build a vulnerability benchmark to overcome cyber security attacks\n", "abstract": " Cybercrimes are on a dramatic rise worldwide. The crime rate is growing day by day in every field or department which is directly or indirectly connected to the internet including Government, business or any individual. The main objective of this study is to evaluate the vulnerabilities in different software systems at the source code level by tracing their patch files. The authors have collected the source code of different types of vulnerabilities at a different level of granularities. They have proposed different ways to collect or trace the vulnerability code, which can be very helpful for security experts, organisations and software developers to maintain security measures. By following their proposed method, you can build your own vulnerability data-set and can detect vulnerabilities in any system by using suitable code clone detection technique. The study also includes a discussion of reasons for the rise in cybercrimes\u00a0\u2026", "num_citations": "11\n", "authors": ["830"]}
{"title": "MTHAEL: Cross-architecture IoT malware detection based on neural network advanced ensemble learning\n", "abstract": " The complexity, sophistication, and impact of malware evolve with industrial revolution and technology advancements. This article discusses and proposes a robust cross-architecture IoT malware threat hunting model based on advanced ensemble learning (MTHAEL). Our unique MTHAEL model using stacked ensemble of heterogeneous feature selection algorithms and state-of-the-art neural networks to learn different levels of semantic features demonstrates enhanced IoT malware detection than existing approaches. MTHAEL is the first of its kind that effectively optimizes recurrent neural network (RNN) and convolutional neural network (CNN) with high classification accuracy and consistently low computational overheads on different IoT architectures. Cross-architecture benchmarking is performed during the training with different architectures such as ARM, Intel80386, MIPS, and MIPS+Intel80386 individually\u00a0\u2026", "num_citations": "10\n", "authors": ["830"]}
{"title": "VCIPR: vulnerable code is identifiable when a patch is released (hacker's perspective)\n", "abstract": " Vulnerable source code fragments remain unfixed for many years and they always propagate to other systems. Unfortunately, this happens often, when patch files are not propagated to all vulnerable code clones. An unpatched bug is a critical security problem, which should be detected and repaired as early as possible. In this paper, we present VCIPR, a scalable system for vulnerability detection in unpatched source code. We present a unique way, that uses a fast, token-based approach to detect vulnerabilities at function level granularity. This approach is language independent, which supports multiple programming languages including Java, C/C++, JavaScript. VCIPR detects most common repair patterns in patch files for the vulnerability code evaluation. We build fingerprint index of top critical CVE's source code, which were retrieved from a reliable source. Then we detect unpatched (vulnerable/non\u00a0\u2026", "num_citations": "7\n", "authors": ["830"]}
{"title": "DCCD: An Efficient and Scalable Distributed Code Clone Detection Technique for Big Code.\n", "abstract": " Code clone detection is a very hot topic in the field of software maintenance, reuseability and security. There is still a lack of techniques to detect near-miss clones at different level of granularities, especially in big code. This paper presents Distributed Code Clone Detection (DCCD) technique, which detects clones from big code bases based on feature extraction. We performed preprocessing, indexing and clone detection for almost 27 TB of source code (324 billion LOC), DCCD is quite faster and efficient as compared to existing distributed indexing and clone detection techniques, ie 36 times faster than Benjamin technique, which is 86 times faster than CCFinder. These two techniques are also distributed and just detect Type-1 and Type-2 clones, but our technique DCCD even detects Type-3 clones, efficiently. Our approach is faster, flexible, scalable and provides 87% accurate results with authenticity, ease of accessibility, upgradeability and maintainability.", "num_citations": "7\n", "authors": ["830"]}
{"title": "An RSA based authentication system for smart IoT environment\n", "abstract": " Authentication is the fundamental security service used in almost all remote applications. All such sensitive applications over an open network need authentication mechanism that should be delivered in a trusted way. In this paper, we design an RSA based authentication system for smart IoT environment over the air network using state-of-the-art industry standards. Our system provide security services including X.509 certificate, RSA based Public Key Infrastructure (PKI), challenge/response protocols with the help of proxy induced security service provider. We describe an innovative system model, protocol design, system architecture and evaluation against known threats. Also the implemented solution designed as an add on service for multiple other sensitive applications (smart city apps, cyber physical systems etc.) which needs the support of X.509 certificate based on hard tokens to populate other security\u00a0\u2026", "num_citations": "6\n", "authors": ["830"]}
{"title": "DroidMD: an efficient and scalable android malware detection approach at source code level\n", "abstract": " Security researchers and anti-virus industries have speckled stress on an Android malware, which can actually damage your phones and threatens the Android markets. In this paper, we propose and develop DroidMD, a scalable self-improvement based tool, based on auto optimisation of signature set, which detect malicious apps in the market at source code level. A prototype has been developed tested and implemented to detect malware in applications. We implement and evaluate our approach on almost 30,000 applications including 27,000 benign and 3,670 malware applications. DroidMD detects malware in different applications at partial level and full level. It analyses only the applications code, which increase its reliability. Our evaluation of DroidMD demonstrates that our approach is very efficient in detecting malware at large scale with high accuracy of 95.5%.", "num_citations": "5\n", "authors": ["830"]}
{"title": "An Integrated Software Vulnerability Discovery Model based on Artificial Neural Network.\n", "abstract": " Quantitative approaches for software security are needed for effective testing, maintenance and risk assessment of software systems. Vulnerabilities that are present in a software system after its release represent a great risk. Vulnerability discovery models (VDMs) have been proposed to model vulnerability discovery and have has been fined to vulnerability data against calendar time. Though, these models have various shortcomings include changes and development of VDMs for different dataset due to diverse approaches and assumptions in their analytical formulation. There is a clear need for an intensive investigation on these models to enhance predictive accuracy of existing VDMs and adopt the actual behavior of software vulnerabilities which were not modeled previously. This study proposed an integrated model to predict a number of software vulnerabilities by hybridizing the Multi-Layer Perceptron (MLP) artifical neural network and Vulnerability Discovery Models. The proposed model is also widely applicable across various vulnerability datasets and models due to its input diversity by providing improved fitting and predictive accuracy. Further, the experimental results show that this model not only retained the properties of traditional parametric VDM models as well as MLP\u2019s good nonlinear mapping ability and useful generalization.", "num_citations": "5\n", "authors": ["830"]}
{"title": "Swarm intelligence based localization in wireless sensor networks\n", "abstract": " Wireless sensor networks (WSNs) increasingly penetrate our everyday life and are already employed in a wide range of application areas, such as habitat monitoring, precision agriculture, home automation, and logistics. Localization of sensor nodes in a network is a highly desirable capability in all these applications. The ability to precisely determine the position of nodes in sensor networks enables many new upcoming technologies such as robotics, automated driving, traffic monitoring, or inventory management. For all these applications, different requirements regarding accuracy, reliability, and speed of position estimation are posed. WSNs is a field with many optimization problems that have to be addressed. Optimization of power consumption of nodes in WSNs is the main problem that have to be addressed. WSN node has a limited power backup so this makes it a very critical issue. This paper formulates the\u00a0\u2026", "num_citations": "3\n", "authors": ["830"]}
{"title": "IBFET: Index\u2010based features extraction technique for scalable code clone detection at file level granularity\n", "abstract": " Many techniques have been developed over the years to detect code clones in different software systems to maintain security measures. These techniques often require the source code to compare the subject system against a very large data set of big code. This paper presents index\u2010based features extraction technique (IBFET) to detect code clones at a very large\u2010scale level to billions of LOC at file level granularity. We performed preprocessing, indexing, and clone detection for more than 324 billion of LOC using a Hadoop distributed environment, which is quite faster and more efficient as compared to existing distributed indexing and clone detection techniques; meanwhile, it detects all three types of clones efficiently. The MapReduce rule of divide and conquer is used for a count and retrieve the similar features between different systems. We evaluated the execution time, scalability, precision, and recall of\u00a0\u2026", "num_citations": "3\n", "authors": ["830"]}
{"title": "SQVDT: A scalable quantitative vulnerability detection technique for source code security assessment\n", "abstract": " Vulnerability detection and exploit is becoming a very important part of security, especially in malware code delivery, hacking a system, efforts to create patches, improving the source code, or updating a software. Vulnerabilities in applications, including browsers, media players, online services, document readers, and so forth. are often exploited and cause a serious damage. In this article, we propose a vulnerability detection technique to detect vulnerabilities in software, as well as shared libraries at source code level. We crawl the vulnerable source code by tracing and locating the patch files from different web sources according to their CVE\u2010numbers and built a fingerprint index of 2931 vulnerable files. Then we developed a vulnerability detection approach based on code clone detection technique and detect hundreds of vulnerabilities in thousands of GitHub open source projects, which are not noticed before as\u00a0\u2026", "num_citations": "2\n", "authors": ["830"]}
{"title": "Intelligent Target Coverage in Wireless Sensor Networks with Adaptive Sensors\n", "abstract": " Day by day innovation in wireless communications and micro-technology has evolved in the development of wireless sensor networks. This technology has applications such as healthcare supervision, home security, battlefield surveillance and many more. However, due to the use of small batteries with low power this technology faces the issue of power and target monitoring. There is much research done to overcome these issues with the development of different architecture and algorithms. In this paper, a scheduling machine learning algorithm called adaptive learning automata algorithm(ALAA) is used. It provides an efficient scheduling technique. Such that each sensor node in the network has been equipped with learning automata, and with this, they can select their proper state at any given time. The state of the sensor is either active or sleep. For the experiment, different parameters are used to check the\u00a0\u2026", "num_citations": "2\n", "authors": ["830"]}
{"title": "DroidSD: An Efficient Indexed Based Android Applications Similarity Detection Tool.\n", "abstract": " Android is becoming more and more popular in recent years. Meanwhile, it has been noticed that the security threats are also increasing with the passage of time because of the code reuse from other applications. In this paper, we propose and design DroidSD, a clone detection tool for Android applications, that helps to detect different types of code clones from APK's source code. A prototype has been developed and implemented to detect clones in Android applications. DroidSD detects Type-1, Type-2 and Type-3 (near-miss) clones in Android applications at the source code level with high accuracy rate, which was not possible in previous Android similarity detection techniques. DroidSD can detect full and partial level similarity between applications. We evaluate DroidSD on real time data-set and count the Recall and Precision on BigCloneBench, which is quite significant. The real time data-set includes 30,500\u00a0\u2026", "num_citations": "2\n", "authors": ["830"]}
{"title": "Cognitive effects of visualization on learning data structure and algorithms\n", "abstract": " Education has the explicit task in society of developing cognition. This study has explored the cognition effects in four different aspects: The first is the psychological implications and effects of visualization applied to educational purposes and successfully guiding the learner to engage in cognitive processes essential for comprehension, the second aspect is prototyping data structure visualization platform, third aspect is implementation of prototype in real time environments like a classroom, the fourth and last impact is the feedback from students through a survey. Our research has showed the effectiveness of using visualization and animation techniques during lessons to engage people\u2019s attention towards cognitive learning. From the survey that we have conducted, we get to know that majority of people are unaware of the use of education visualization platform. All these observations motivate a critical look at visualization to facilitate learners in cognitive learning.", "num_citations": "2\n", "authors": ["830"]}