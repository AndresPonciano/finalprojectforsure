{"title": "The situational factors that affect the software development process: Towards a comprehensive reference framework\n", "abstract": " ContextAn optimal software development process is regarded as being dependent on the situational characteristics of individual software development settings. Such characteristics include the nature of the application(s) under development, team size, requirements volatility and personnel experience. However, no comprehensive reference framework of the situational factors affecting the software development process is presently available.ObjectiveThe absence of such a comprehensive reference framework of the situational factors affecting the software development process is problematic not just because it inhibits our ability to optimise the software development process, but perhaps more importantly, because it potentially undermines our capacity to ascertain the key constraints and characteristics of a software development setting.MethodTo address this deficiency, we have consolidated a substantial body of\u00a0\u2026", "num_citations": "388\n", "authors": ["866"]}
{"title": "Exploring the impact of situational context: A case study of a software development process for a microservices architecture\n", "abstract": " Over the decades, a variety of software development processes have been proposed, each with their own advantages and disadvantages. It is however widely accepted that there is no single process that is perfectly suited to all settings, thus a software process should be molded to the needs of its situational context. In previous work, we have consolidated a substantial body of related research into an initial reference framework of the situational factors affecting the software development process. Practitioners can consult this framework in order to profile their context, a step necessary for effective software process decision making. In this paper, we report on the findings from a case study involving process discovery in a small but successful and growing software development firm. In this organization, which has a focus on continuous software evolution and delivery, we also applied the situational factors reference\u00a0\u2026", "num_citations": "34\n", "authors": ["866"]}
{"title": "Effective Social Productivity Measurements During Software Development: An Empirical Study\n", "abstract": " Much of contemporary scientific discussion regarding factors that influence software development productivity is undertaken in various domains where there is an insufficient empirical basis for exploring socio-technical factors of productivity that are specific to a software development organization. The purpose of the study is to characterize the multidimensional nature of software development productivity and its social aspects as a set of latent constructs (i.e. variables that are not directly observed) for a medium-sized software company. To this end, we designed an exploratory in-depth field study based on the hypothesized productivity constructs, which were modeled by a set of factors identified from literature reviews, and later refined by industrial focus groups. In order to demonstrate the applicability of our approach, we conducted confirmatory factor analysis with the data attained from a questionnaire with 216\u00a0\u2026", "num_citations": "23\n", "authors": ["866"]}
{"title": "Development and benefits of MDevSPICE\u00ae, the medical device software process assessment framework\n", "abstract": " Software development companies moving into the medical device domain often find themselves overwhelmed by the number of regulatory requirements they need to satisfy before they can market their device. Several international standards and guidance documents have been developed to help companies on their road to regulatory compliance, but working their way through the various standards is a challenge in itself. In order to help software companies in the medical device domain, we have developed an integrated framework of medical device software development best practices called MDevSPICE\u00ae. This framework integrates generic software development best practices with medical device standards' requirements enabling consistent assessment of medical device processes. MDevSPICE\u00ae can be used by software companies evaluating their readiness for regulatory audits as well as by large medical\u00a0\u2026", "num_citations": "20\n", "authors": ["866"]}
{"title": "Development of a Process Assessment Model for Medical Device Software Development\n", "abstract": " Software that is incorporated into a medical device, or which is a standalone medical device in its own right, is of a safety critical nature and subject to regulation from various jurisdictions (principally the EU and the US). In order to satisfy jurisdictional regulations, developers of medical device software generally implement standards and guidance provided by international standards bodies and national administrative departments. However, the various standards and guidance documents are not developed as a single cohesive set but often as separate re-sources addressing distinct areas of concern. The result for medical device software developers is that integration of these various sources represents a challenging undertaking. The aim of this paper is to describe the integration of the several process models and regulatory standards, first, into a process reference model and then into a process assessment model for medical device software development. The focus is on the integration of regulatory standards from the medical device domain with generic software development process models, resulting in a unified best practice framework for medical device software development. The process reference model for medical device software development is going to be published this year as IEC TR 80002-3, and the process assessment model for medical device software development is currently being validated through pilot studies in medical device industry. This best practice framework will help small software developers in their adoption of regulations-compliant best practices while reducing the overhead associated with understanding the long\u00a0\u2026", "num_citations": "12\n", "authors": ["866"]}
{"title": "Technology-Enabled Continuous Software Development\n", "abstract": " Given that organizations need to innovate and release software in faster parallel cycles of days or even hours, there are good reasons why new practices are being adopted in industry. In this paper, we present the case of a highly responsive process that is driven by tooling technology and which facilitates continual delivery of software at up to hourly intervals. Understanding and analyzing such industry practices can inform academic and practitioner dialogue on current challenges and potential solutions, and on the evolution of new'better'practices.", "num_citations": "9\n", "authors": ["866"]}
{"title": "Development of MDevSPICE - the Medical Device Software Process Assessment Framework\n", "abstract": " Software that is incorporated into a medical device, or which is a standalone medical device in its own right, is of a safety critical nature and subject to regulation from various jurisdictions. In order to satisfy jurisdictional regulations, developers of medical device software adopt standards and guidance provided by international standards bodies and regulators. However, the various standards and guidance documents are often not developed as a single cohesive set resulting in a complex and costly challenge for medical device software developers when complying with regulation. The aim of this paper is to describe the integration of medical device guidance documents and software engineering standards into a unified framework for medical device software process assessment called MDevSPICE\u00ae. The paper illustrates the development of both the process reference model and the process assessment model\u00a0\u2026", "num_citations": "9\n", "authors": ["866"]}
{"title": "Piloting MDevSPICE - the Medical Device Software Process Assessment Framework\n", "abstract": " Software development companies moving into the medical device domain often find themselves overwhelmed by the number of regulatory requirements they need to satisfy before they can market their device. Several international standards and guidance documents have been developed to help companies on their road to regulatory compliance but working their way through the various standards is a challenge in itself. In order to help software companies in the medical device domain, we have developed an integrated framework of medical device software development best practices called MDevSPICE\u00ae. This framework integrates generic software development best practices with medical device standards\u2019 requirements enabling consistent and thorough assessment of medical device processes. MDevSPICE\u00ae can be used by software companies evaluating their readiness for regulatory audits as well as by\u00a0\u2026", "num_citations": "8\n", "authors": ["866"]}
{"title": "A Lightweight Assessment Method for Medical Device Software Processes\n", "abstract": " This paper outlines the MDevSPICE-Adept process assessment method. MDevSPICE-Adept is a lightweight process assessment method that has been created for the MDevSPICE software process assessment model which is currently being developed for the medical device industry. MDevSPICE is a fully validated release of a medical device software process assessment model (formerly known as Medi SPICE), which was developed by the authors. While the MDevSPICE process assessment model is detailed and comprehensive, there is industry demand for a lightweight medical device software process assessment method. To address this requirement the MDevSPICE-Adept method has been developed. Details on how this has taken place and the procedures for implementing an MDevSPICE-Adept process assessment are presented. Information is also provided regarding how an MDevSPICE\u00a0\u2026", "num_citations": "6\n", "authors": ["866"]}
{"title": "An Auction-Based Serious Game for Bug Tracking\n", "abstract": " Today, one of the challenges in software engineering is utilising application lifecycle management (ALM) tools effectively in software development. In particular, it is hard for software developers to engage with the work items that are appointed to themselves in these ALM tools. In this study, the authors have focused on bug tracking in ALM where one of the most important metrics is mean time to resolution that is the average time to fix a reported bug. To improve this metric, they developed a serious game application based on an auction-based reward mechanism. The ultimate aim of this approach is to create an incentive structure for software practitioners to find and resolved bugs that are auctioned where participants are encouraged to solve and test more bugs in less time and improve quality of software development in a competitive environment. They conduct hypothesis tests by performing a Monte Carlo\u00a0\u2026", "num_citations": "5\n", "authors": ["866"]}
{"title": "Safety Critical Software Process Assessment: How MDevSPICE Addresses the Challenge of Integrating Compliance and Capability\n", "abstract": " One of the primary outcomes of a software process assessment is visibility of the capability of a software process which among other things, informs us of the ability of a process to deliver consistent product quality levels. In safety critical domains, such as the medical device sector, high product quality \u2013 and particularly high product safety - is an important consideration. To address this safety concern, the medical device sector traditionally employs audits to determine compliance to software process standards and guidance. Unlike an audit which results in a pass/fail outcome, an assessment provides a process capability profile which identifies areas for improvement and enables a comparison with broader best practice. MDevSPICE\u00ae integrates the various medical device software standards and guidance within the infrastructure of a SPICE assessment model, thus encompassing aspects of compliance and\u00a0\u2026", "num_citations": "5\n", "authors": ["866"]}
{"title": "An ISO/IEC 12207 Perspective on Software Development Process Adaptation.\n", "abstract": " In their earlier work, the authors had a sustained engagement with situational factors affecting software development, particularly how these factors affect the software development process. Part of this previous engagement involved the development of a situational factors reference framework. As part of an ongoing industrial engagement, the authors are currently examining situational factors and software development processes in a series of case studies. This latest case study is concerned with a small start-up organization. They start by identifying the software development process in this organization. Thereafter, the authors examine the situational context of the company, leading to an analysis of the relationship between the process and the situational context. Their general findings are consistent with their previous related work, supporting the case that a software development process is dependent on the organizational context, perhaps in a highly complex manner. In this particular case study, the authors also find that the role of organizational learning and process adaption is considered to be central to organizational survival.", "num_citations": "3\n", "authors": ["866"]}
{"title": "Characteristics of a medical device software development framework\n", "abstract": " This paper aims to describe the software development settings of medical device domain focusing on the demands of the safety critical software processes. Medical device software developers have to adhere to a number of regulations and standards. This paper addresses the most important characteristics of a software development framework that could support medical device software developers in their efforts to comply with these regulations as well as to improve their software development processes.", "num_citations": "2\n", "authors": ["866"]}
{"title": "Systems, Software and Services Process Improvement: 27th European Conference, EuroSPI 2020, D\u00fcsseldorf, Germany, September 9-11, 2020, Proceedings\n", "abstract": " This volume constitutes the refereed proceedings of the 27th European Conference on Systems, Software and Services Process Improvement, EuroSPI conference, held in D\u00fcsseldorf, Germany, in September 2020*. The 50 full papers and 13 short papers presented were carefully reviewed and selected from 100 submissions. They are organized in topical sections on visionary papers, SPI manifesto and improvement strategies, SPI and emerging software and systems engineering paradigms, SPI and standards and safety and security norms, SPI and team performance & agile & innovation, SPI and agile, emerging software engineering paradigms, digitalisation of industry, infrastructure and e-mobility, good and bad practices in improvement, functional safety and cybersecurity, experiences with agile and lean, standards and assessment models, recent innovations, virtual reality.* The conference was partially held virtually due to the COVID-19 pandemic.", "num_citations": "1\n", "authors": ["866"]}
{"title": "Software Process Improvement and Capability Determination\n", "abstract": " This book constitutes the refereed proceedings of the 16th International Conference on Software Process Improvement and Capability Determination, SPICE 2016, held in Dublin, Ireland, in June 2016. The 28 full papers presented together with 5 short papers were carefully reviewed and selected from 52 submissions. The papers are organized in the following topical sections: SPI in regulated and safety critical domains; gamification and education issues in SPI; SPI in agile and small settings; SPI and assessment; SPI and project management concerns; empirical research case studies of SPI; knowledge and human communications issues in SPI.", "num_citations": "1\n", "authors": ["866"]}