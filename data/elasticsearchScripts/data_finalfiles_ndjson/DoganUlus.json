{"title": "First-order temporal logic monitoring with BDDs\n", "abstract": " Runtime verification is aimed at analyzing execution traces stemming from a running program or system. The traditional purpose is to detect the lack of conformance with respect to a formal specification. Numerous efforts in the field have focused on monitoring parametric specifications, where events carry data, and formulas can refer to such. Since a monitor for such specifications has to store observed data, the challenge is to have an efficient representation and manipulation of Boolean operators, quantification, and lookup of data. The fundamental problem is that the actual values of the data are not necessarily bounded or provided in advance. In this work we explore the use of binary decision diagrams for representing observed data. Our experiments show a substantial improvement in performance compared to related work.", "num_citations": "47\n", "authors": ["1667"]}
{"title": "Montre: A Tool for Monitoring Timed Regular Expressions\n", "abstract": " We present Montre, a monitoring tool to search patterns specified by timed regular expressions over real-time behaviors. We use timed regular expressions as a compact, natural, and highly-expressive pattern specification language for monitoring applications involving quantitative timing constraints. Our tool essentially incorporates online and offline timed pattern matching algorithms so it is capable of finding all occurrences of a given pattern over both logged and streaming behaviors. Furthermore, Montre is designed to work with other tools via standard interfaces to perform more complex and versatile tasks for analyzing and reasoning about cyber-physical systems. As the first of its kind, we believe Montre will enable a new line of inquiries and techniques in these fields.", "num_citations": "36\n", "authors": ["1667"]}
{"title": "DejaVu: A monitoring tool for first-order temporal logic\n", "abstract": " In this paper, we describe our monitoring tool, DejaVu, which implements our algorithm for monitoring first-order past linear-time temporal logic over a sequence of events that carry data. We propose the use of Binary Decision Diagrams (BDDs) for representing and manipulating sets of observed data since (1) BDDs provide highly compact representations, (2) operations overBDDs, in particular complementation, are very efficient, and (3) the monitor construction for the propositional case shown in naturally extends to BDDs. Our experiments show a substantial improvement in performance compared to a related tool.", "num_citations": "6\n", "authors": ["1667"]}
{"title": "Using haloes in mixed-signal assertion based verification\n", "abstract": " We develop an assertion based verification solution for analog mixed-signal designs. We introduce the halo concept for analog signals to express them with their tolerance and variation values in assertions. The halo of a signal provides a relaxation over the signal and it defines an effective region for that signal which can be used in assertion based verification. Using haloes for analog signals allow us to define a new set of comparison relations between two analog signals including their equivalence. In our intended design flow, these new analog signal operators are placed into the Analog layer of mixed-signal assertion languages as an extension. We present experimental results on a programmable switch and a VCO.", "num_citations": "6\n", "authors": ["1667"]}
{"title": "Online monitoring of metric temporal logic using sequential networks\n", "abstract": " Metric Temporal Logic (MTL) is a popular formalism to specify patterns with timing constraints over the behavior of cyber-physical systems. In this paper, I propose sequential networks for online monitoring applications and construct network-based monitors from the past fragment of MTL over discrete and dense time behaviors. This class of monitors is more compositional, extensible, and easily implementable than other monitors based on rewriting and automata. I first explain the sequential network construction over discrete time behaviors and then extend it towards dense time by adopting a point-free approach. The formulation for dense time behaviors and MTL radically differs from the traditional pointy definitions and in return, we avoid some longstanding complications. I argue that the point-free approach is more natural and practical therefore should be preferred for the dense time. Finally, I present my implementation together with some experimental results that show the performance of the network-based monitors compared to similar existing tools.", "num_citations": "5\n", "authors": ["1667"]}
{"title": "Sequential circuits from regular expressions revisited\n", "abstract": " We revisit the long-neglected problem of sequential circuit constructions from regular expressions. The class of languages that are recognized by sequential circuits is equivalent to the class of regular languages. This fact is shown in [5] together with an inductive construction technique from regular expressions. In this note, we present an alternative algorithm, called the trigger-set approach, obtained by reversing well-known the follow-set approach to construct automata. We use our algorithm to obtain a regular expression matcher based on sequential circuits. Finally, we report our performance results in comparison with existing automata-based matchers.", "num_citations": "5\n", "authors": ["1667"]}
{"title": "Timescales: A benchmark generator for MTL monitoring tools\n", "abstract": " This article presents a benchmark generator, Timescales, which can be used to evaluate the performance and scalability of runtime verification tools using Metric Temporal Logic (MTL) formulas as their specifications. We mainly target runtime verification of cyber-physical systems and generate traces similar to the qualitative behavior of sensor readings and state variables of such systems that are observed/sampled continuously. Since such systems are composed of many heterogeneous components that work over very different time scales, it is crucial to measure the performance of the MTL monitoring tool for a wide range of timing parameters in specifications. Hence, Timescales supports the generation of benchmarks for 10 typical timed properties for any given trace length and timing parameters with several other useful features. Finally, we include some default benchmark suites generated by Timescales.", "num_citations": "4\n", "authors": ["1667"]}
{"title": "Pattern Matching with Time: Theory and Applications\n", "abstract": " Dynamical systems exhibit temporal behaviors that can be expressed in various sequential forms such as signals, waveforms, time series, and event sequences. Detecting patterns over such temporal behaviors is a fundamental task for understanding and assessing these systems. Since many system behaviors involve certain timing characteristics, the need to specify and detect patterns of behaviors that involves timing requirements, called timed patterns, is evident. However, this is a non-trivial task due to a number of reasons including the concurrency of subsystems and density of time.The key contribution of this thesis is in introducing and developing emph{timed pattern matching}, that is, the act of identifying segments of a given behavior that satisfy a timed pattern. We propose timed regular expressions (TREs) and metric compass logic (MCL) as timed pattern specification languages. We first develop a novel framework that abstracts the computation of time-related aspects called the algebra of timed relations. Then we provide offline matching algorithms for TRE and MCL over discrete-valued dense-time behaviors using this framework and study some practical extensions.It is necessary for some application areas such as reactive control that pattern matching needs to be performed during the actual execution of the system. For that, we provide an online matching algorithm for TREs based on the classical technique of derivatives of regular expressions. We believe the underlying technique that combines derivatives and timed relations constitutes another major conceptual contribution for timed systems research.Furthermore, we present an\u00a0\u2026", "num_citations": "2\n", "authors": ["1667"]}
{"title": "Analog layer extensions for analog/mixed-signal assertion languages\n", "abstract": " Assertion-based methodology is gaining popularity in analog and mixed-signal (AMS) verification. Early AMS assertion languages are built on digital assertion languages. This results in limited native support to express most low-level aspects of AMS properties. We present three analog layer extensions to increase analog expressiveness in AMS assertion languages. We first describe the concept of haloes, an implicit way to handle tolerance values of analog signals in assertions. Then, booleanization of analog signals using dual-threshold is introduced to solve problems caused by fluctuations on signals. Finally, we integrate analog measurement operators into assertions. We validate our extensions using our prototype tool on a 10-bit two-stage pipelined analog-to-digital converter design.", "num_citations": "1\n", "authors": ["1667"]}