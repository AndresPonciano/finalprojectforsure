{"title": "Shorter identifier names take longer to comprehend\n", "abstract": " Developers spend the majority of their time comprehending code, a process in which identifier names play a key role. Although many identifier naming styles exist, they often lack an empirical basis and it is not quite clear whether short or long identifier names facilitate comprehension. In this paper, we investigate the effect of different identifier naming styles (letters, abbreviations, words) on program comprehension, and whether these effects arise because of their length or their semantics. We conducted an experimental study with 72 professional C# developers, who looked for defects in source-code snippets. We used a within-subjects design, such that each developer saw all three versions of identifier naming styles and we measured the time it took them to find a defect. We found that words lead to, on average, 19% faster comprehension speed compared to letters and abbreviations, but we did not find a\u00a0\u2026", "num_citations": "68\n", "authors": ["2169"]}
{"title": "Descriptive compound identifier names improve source code comprehension\n", "abstract": " Reading and understanding source code is a major task in software development. Code comprehension depends on the quality of code, which is impacted by code structure and identifier naming. In this paper we empirically investigated whether longer but more descriptive identifier names improve code comprehension compared to short names, as they represent useful information in more detail. In a web-based study 88 Java developers were asked to locate a semantic defect in source code snippets. With descriptive identifier names, developers spent more time in the lines of code before the actual defect occurred and changed their reading direction less often, finding the semantic defect about 14% faster than with shorter but less descriptive identifier names. These effects disappeared when developers searched for a syntax error, i.e., when no in-depth understanding of the code was required. Interestingly, the\u00a0\u2026", "num_citations": "31\n", "authors": ["2169"]}
{"title": "Influence of identifier length and semantics on the comprehensibility of source code\n", "abstract": " Identifiers are essential for the understanding of source code. Programmers can name them arbitrarily, which is a major source for hard to understand code. We investigated how an identifier\u2019s length and semantics affect program comprehensibility. In a controlled experiment, we showed that identifier names using proper words lead to a faster defect detection than identifier names using abbreviated words or single letters.", "num_citations": "3\n", "authors": ["2169"]}