{"title": "A taxonomy for software voting algorithms used in safety-critical systems\n", "abstract": " Voting algorithms are used to provide an error masking capability in a wide range of highly dependable commercial & research applications. These applications include N-Modular Redundant hardware systems and diversely designed software systems based on N-Version Programming. The most sophisticated & complex algorithms can even tolerate malicious (or Byzantine) subsystem errors. The algorithms can be implemented in hardware or software depending on the characteristics of the application, and the type of voter selected. Many voting algorithms have been defined in the literature, each with particular strengths and weaknesses. Having surveyed more than 70 references from the literature, a functional classification is used in this paper to provide taxonomy of those voting algorithms used in safety-critical applications. We classify voters into three categories: generic, hybrid, and purpose-built voters\u00a0\u2026", "num_citations": "170\n", "authors": ["2231"]}
{"title": "Artefacts and Agile Method Tailoring in Large-Scale Offshore Software Development Programmes\n", "abstract": " Context: Large-scale offshore software development programmes are complex, with challenging deadlines and a high risk of failure. Agile methods are being adopted, despite the challenges of coordinating multiple development teams. Agile processes are tailored to support team coordination. Artefacts are tangible products of the software development process, intended to ensure consistency in the approach of teams on the same development programme.Objective: This study aims to increase understanding of how development processes are tailored to meet the needs of large-scale offshore software development programmes, by focusing on artefact inventories used in the development process.Method: A grounded theory approach using 46 practitioner interviews, supplemented with documentary sources and observations, in nine international companies was adopted. The grounded theory concepts of open\u00a0\u2026", "num_citations": "120\n", "authors": ["2231"]}
{"title": "How product owner teams scale agile methods to large distributed enterprises\n", "abstract": " Software development teams in large scale offshore enterprise development programmes are often under intense pressure to deliver high quality software within challenging time contraints. Project failures can attract adverse publicity and damage corporate reputations. Agile methods have been advocated to reduce project risks, improving both productivity and product quality. This article uses practitioner descriptions of agile method tailoring to explore large scale offshore enterprise development programmes with a focus on product owner role tailoring, where the product owner identifies and prioritises customer requirements. In globalised projects, the product owner must reconcile competing business interests, whilst generating and then prioritising large numbers of requirements for numerous development teams. The study comprises eight international companies, based in London, Bangalore and Delhi\u00a0\u2026", "num_citations": "92\n", "authors": ["2231"]}
{"title": "Cloud Computing: Adoption Issues for Sub-Saharan Africa SMEs\n", "abstract": " This paper explores the emergence and adoption of cloud computing by small and medium-sized enterprises (SMEs) and points towards its implications for developing countries in sub-Saharan Africa. Several studies have shown the importance of technologies to SMEs and the potentials of SMEs for economic growth. Using qualitative techniques we obtained and analysed data from ten SMEs that have adopted cloud computing as an IT strategy. These SMEs span across various sectors including finance, information and communication technology (ICT), and manufacturing in Nigeria, a developing country in sub-Saharan Africa. We found that, contrary to the literature on cloud computing adoption in the global north, these SMEs are less concerned with challenges like security, privacy and data loss rather; they continue to show optimism in using the potential opportunities that cloud computing presents to them. We envisage that as cloud computing evolves, more SMEs in sub-Saharan Africa will adopt it as an IT Strategy. This could positively contribute to the successes of these SMEs and consequently contribute to the economic growth desired by these developing countries.", "num_citations": "83\n", "authors": ["2231"]}
{"title": "Scrum master activities: process tailoring in large enterprise projects\n", "abstract": " This paper explores practitioner descriptions of agile method tailoring in large-scale offshore or outsourced enterprise projects. Specifically, tailoring of the scrum master role is investigated. The scrum master acts as a facilitator for software development teams, nurturing adherence to agile practices and removing impediments for team members. But in large projects, scrum masters often work together in geographically distributed teams. Scrum masters use sprint planning to avoid development tasks that overlap team boundaries, coordinate status and effort across teams, and integrate code bases. The study comprises 8 international companies in London, Bangalore and Delhi. Interviews with 46 practitioners were conducted between February 2010 and May 2012. A grounded theory research method was used to identify that the scrum master role comprises six activities: process anchor, stand-up facilitator\u00a0\u2026", "num_citations": "73\n", "authors": ["2231"]}
{"title": "Smoothing voter: a novel voting algorithm for handling multiple errors in fault-tolerant control systems\n", "abstract": " Voting algorithms are used to arbitrate between variant results in a wide range of highly dependable real-time control applications. These applications include N-Modular Redundant hardware systems and diversely designed software systems based on N-Version Programming. The most sophisticated and complex voting algorithms can even tolerate malicious (or Byzantine) variant errors. Voting algorithms can be implemented in either hardware or software depending on the characteristics of the application and the type of voter selected. The behaviour of voting algorithms in multiple error scenarios is considered in this article. Complete disagreement is defined as those cases where no two variant results are the same. A novel algorithm for real-time control applications, the smoothing voter, is introduced and its behaviour compared with three previously published voters. Software implemented error-injection tests\u00a0\u2026", "num_citations": "63\n", "authors": ["2231"]}
{"title": "A framework using institutional analysis and the capability approach in ICT4D\n", "abstract": " Institutional theory and the capability approach have grown influential in development research and practice. Both theories offer analytical tools for interpreting and guiding information and communication technology for development (ICT4D) interventions. In this article, we propose an analytical framework that applies institutional theory and the capability approach in the domain of ICT4D. Using empirical evidence from a case study, we argue that there are benefits for both ICT4D-research and-practice of using the contrasting strengths of these analytical tools. A combined theoretical framework offers analytical and practical insights in terms of potential for stimulation (excitation) and degradation (inhibition) of development goals. The novel approach taken for combining institutional theory with the capability approach uses institutional theory to understand the social drivers that may inhibit or enable individuals from taking full advantage of ICT resources for furtherance of their lives. These social drivers could be overlooked when using any of the approaches in isolation. We also observe how enhanced capabilities can strengthen and develop institutions. In this article, we contribute a combined framework linking both theories and their attendant exciters and inhibitors. The framework\u2019s utility is illustrated with a case study based on empirical work in the Ethiopian higher education sector. The combined framework and case study contribute to theory development and inform practice by offering a novel approach to analyzing ICT-led developmental interventions.", "num_citations": "60\n", "authors": ["2231"]}
{"title": "History-based weighted average voter: a novel software voting algorithm for fault-tolerant computer systems\n", "abstract": " Voting algorithms have been widely used in the realisation of fault-tolerant systems. We propose a new software voting algorithm which uses the history record of redundant modules to compute the final output. Two versions for the novel algorithm are introduced In the first version any module result is assigned to a weighting value such that module results with higher history record value, are assigned to a higher weighing value than those with lower history record value. In the second version of the novel voter, those module results which have a history record value, less than the average record value, are allocated a weight of zero and removed from the contribution toward the voter output. Furthermore, a novel method for creation of a history record of modules is proposed. Empirical results show that both versions of the novel voter give higher safety performance than the Standard Weighted Average voter with\u00a0\u2026", "num_citations": "58\n", "authors": ["2231"]}
{"title": "Changing computing curricula in African universities: Evaluating progress and challenges via design-reality gap analysis\n", "abstract": " Information and communication technologies (ICTs) are diffusing rapidly into all African nations. Effective use of the new technology requires a step\u2010change in local skill levels; including a step\u2010change in ICT\u2010related university education. Part of that process must be an updating of university computing curricula, ranging from computer science through to information systems. Adoption of international curricula offers a ready means for updating, but African universities face challenges of implementing these curricula \u2013 curricula that were typically designed for Western rather than African realities. To help understand the issues surrounding implementation of international computing curricula in Africa, we selected a case example: Ethiopian higher education. Using the design\u2010reality gap model and its \u2019OPTIMISM\u2019 checklist of dimensions, we analysed what ensued following its 2008 decision to adopt a new IEEE/ACM\u00a0\u2026", "num_citations": "55\n", "authors": ["2231"]}
{"title": "Agile method tailoring in distributed enterprises: Product owner teams\n", "abstract": " This paper explores practitioner descriptions of agile method tailoring in large-scale offshore or outsourced enterprise projects. Specifically, tailoring of the product owner role is discussed. The product owner identifies and prioritizes customer requirements. But in globalized projects, the product owner must reconcile large numbers competing business interests and generate prioritized requirements for many development teams. The study comprises 8 international companies in London, Bangalore and Delhi. Interviews with 46 practitioners were conducted between February 2010 and May 2012. A grounded theory approach was used to identify that product owner teams comprise nine roles: Groom, Prioritizer, Release Master, Technical Architect, Governor, Communicator, Traveler, Intermediary and Risk Assessor. These product owner roles arbitrate between conflicting customer requirements, approve release\u00a0\u2026", "num_citations": "50\n", "authors": ["2231"]}
{"title": "A novel object-oriented environment for distributed process control systems\n", "abstract": " This paper addresses the design, development and implementation of distributed process control systems. A novel object-oriented environment is presented that supports the development lifecycle phases. The core of this environment is the integrated design notation (IDN), which is based on the unified modelling language (UML). Its emphasis is on open architectures and thus it uses open standards such as UML (for software engineering), IEC 61131-3 (for process control) and SIMULINK (for control engineering). Automated translation of models and languages across the different disciplines is created with the IDN. Also, the source code implementation phase is produced in Java, thus achieving greater portability for control systems.", "num_citations": "49\n", "authors": ["2231"]}
{"title": "Automating the development of distributed control software\n", "abstract": " The Development Framework translates application-specific system specifications into parallel, hard real-time implementations, using methods that are both familiar to developers and optimal for the application. The Development Framework approach applies CASE tools-as well as several new tools-to the development of distributed systems, so designers can concentrate on the control-engineering aspects of their systems. The approach addresses three development phases: specification, software design, and implementation. In the specification phase, the control engineer refines behavioral requirements through simulation and analysis, thereby verifying that the system meets its functional requirements prior to implementation. Once the simulated behavior is satisfactory, the specified behavior is translated into a design. Finally, our tools produce source code, either by automatically generating it or by drawing it\u00a0\u2026", "num_citations": "43\n", "authors": ["2231"]}
{"title": "Tailoring product ownership in large-scale agile projects: managing scale, distance, and governance\n", "abstract": " In large-scale agile projects, product owners undertake a range of challenging and varied activities beyond those conventionally associated with that role. We describe product-owner activities and behaviors that are valued by experienced product owners and their line managers.", "num_citations": "35\n", "authors": ["2231"]}
{"title": "Experimental comparison of voting algorithms in cases of disagreement\n", "abstract": " Voting algorithms are used to mask erroneous results from redundant subsystems (variants) in fault tolerant systems. While voting algorithms are well known and widely used, the authors are not aware of any detailed investigation of voter behaviour in the presence of multiple errors. The results of an experimental evaluation of seven voting algorithms in a variety of simulated error scenarios are reported. A software error injection approach is used to simulate multiple errors in a triple modular redundant configuration. The Majority and Plurality voters produce the lowest number of catastrophic errors, in these tests. The Median voter produces the largest number of correct results, but also produces the largest number of catastrophic errors. The Three Domain voter results show a compromise between the large number of correct results identified by the Median voter and the small number of catastrophic results produced\u00a0\u2026", "num_citations": "35\n", "authors": ["2231"]}
{"title": "Influences on agile practice tailoring in enterprise software development\n", "abstract": " Agile development projects have become a reality in large enterprises using offshore development models. A case study involving seven international companies with offices in Bangalore, India, and London, UK was conducted, including interviews with 19 practitioners. The contribution of this paper is to illustrate the reasons for tailoring Agile practices within the context of large enterprises. The findings show that scrum roles and practices did not conflict with enterprise policies or processes and were thought to improve product quality and productivity. However, agile practices from the XP tradition were not so widely adopted. Test driven development did not integrate well within enterprises where independent quality assurance teams were constituted as separate departments. Continuous integration was found to be challenging where enterprise software products required time consuming regression testing and\u00a0\u2026", "num_citations": "31\n", "authors": ["2231"]}
{"title": "Experimenting with docker: Linux container and base OS attack surfaces\n", "abstract": " Linux containers showed great superiority when compared to virtual machines and hypervisors in terms of networking, disk and memory management, start-up and compilation speed, and overall processing performance. In this research, we are questioning whether it is more secure to run services inside Linux containers than running them directly on a host base operating system or not. We used Docker v1.10 to conduct a series of experiments to assess the attack surface of hosts running services inside Docker containers compared to hosts running the same services on the base operating system represented in our paper as Debian Jessie. Our vulnerability assessment shows that using Docker containers increase the attack surface of a given host, not the other way around.", "num_citations": "26\n", "authors": ["2231"]}
{"title": "An Early-Stage ICT Maturity Model Derived from Ethiopian Education Institutions\n", "abstract": " Developing an initial ICT infrastructure in education institutions is disproportionately expensive in developing countries and sustainable interventions are difficult to achieve. There has been a lack of concrete guidance regarding the stages of development needed to make efficient use of resources and maximise the chances of sustainable investments. To address these needs, an ICT Maturity Model is presented that has been derived from documentary sources and an analysis of selected schools, colleges and universities in Ethiopia. The surveyed institutions include five primary schools, six teacher education colleges, five public universities and a higher education preparatory schohol. The Model defines the ICT infrastructure resource levels required to achieve primary organisational objectives expressed in the form of student learning outcomes. The Model consists of eight levels, with the focus here on the lowest\u00a0\u2026", "num_citations": "26\n", "authors": ["2231"]}
{"title": "Virtual teams and employability in global software engineering education.\n", "abstract": " Universities face many challenges when creating opportunities for student experiences of global software engineering. We provide a model for introducing global software engineering into the computing curriculum. Our model is based on a three year collaboration between Robert Gordon University, UK and the International Institute for IT Bangalore, India. We provide evidence based on student feedback from three cohorts of virtual team who never met face to face. We found potential employers were supportive of global software engineering in university curricula. We identify four key principles for global software engineering student projects: reconcile contrasting assessment demands between institutions, create a detailed joint timetable to reconcile teaching calendars, provide a project management framework to support phased delivery and carefully manage project scope.", "num_citations": "24\n", "authors": ["2231"]}
{"title": "Voting in real-time distributed computer control systems.\n", "abstract": " British Library EThOS: Voting in real-time distributed computer control systems. New search | Advanced search | Search results Login / Register | About | Help | FAQ | Follow dividing line Use this URL to cite or link to this record in EThOS: https://ethos.bl.uk/OrderDetails.do?uin=uk.bl.ethos.364312 Title: Voting in real-time distributed computer control systems. Author: Bass, Julian M. ISNI: of Sheffield Date of Award: 1995 Availability of Full Text: Full text unavailable from EThOS. Please contact the current institution\u2019s library for further details. Abstract: No abstract available Supervisor: Not available Sponsor: Not available Qualification Name: Thesis (Ph.D.) Qualification Level: Doctoral EThOS ID: uk.bl.ethos.364312 DOI: Not available Keywords: Control systems & control theory Share: Terms and Conditions | Notice and Takedown \u2026", "num_citations": "23\n", "authors": ["2231"]}
{"title": "Cloud-Computing: Adoption Issues for Ethiopian Public and Private Enterprises\n", "abstract": " This paper explores the emergence and adoption of cloud computing by enterprises in sub\u2010Saharan Africa. Several studies have shown the benefits of cloud technologies for enterprises. Using qualitative techniques we obtained and analyzed data from nine enterprises regarding the adoption of cloud computing as an IT strategy. These enterprises span the finance, information and communication technology (ICT) training, research, construction and manufacturing sectors in Ethiopia. We found that, contrary to the literature on cloud computing adoption in the global north, these enterprises are yet to adopt cloud computing as an IT provisioning method and they lack awareness of the advantages and disadvantages of adopting the cloud. The enterprises are concerned with challenges like security, privacy and trust issues as well as government telecommunications infrastructure policies and cloud technology skills\u00a0\u2026", "num_citations": "19\n", "authors": ["2231"]}
{"title": "Cloud Computing: Adoption Issues for Ethiopian Public and Private Enterprises\n", "abstract": " This paper explores the emergence and adoption of cloud computing by enterprises in sub\u2010Saharan Africa. Several studies have shown the benefits of cloud technologies for enterprises. Using qualitative techniques we obtained and analyzed data from nine enterprises regarding the adoption of cloud computing as an IT strategy. These enterprises span the finance, information and communication technology (ICT) training, research, construction and manufacturing sectors in Ethiopia. We found that, contrary to the literature on cloud computing adoption in the global north, these enterprises are yet to adopt cloud computing as an IT provisioning method and they lack awareness of the advantages and disadvantages of adopting the cloud. The enterprises are concerned with challenges like security, privacy and trust issues as well as government telecommunications infrastructure policies and cloud technology skills\u00a0\u2026", "num_citations": "19\n", "authors": ["2231"]}
{"title": "A prototype framework of design tools for computer-aided control engineering\n", "abstract": " This paper introduces a framework of tools which allow the design of distributed, potentially fault-tolerant, real-time control software. This framework takes a system specified in the control engineering domain and translates this application-oriented representation into a software engineering representation. From this new representation, automatic code generation tools have been developed to create a complete, executable control system implementation.< >", "num_citations": "17\n", "authors": ["2231"]}
{"title": "Spotify tailoring for promoting effectiveness in cross-functional autonomous squads\n", "abstract": " Organisations tend to tailor agile methods to scale employed practices to have cross-functional autonomous teams while promoting sustainable creative and productive development at a constant pace. Thus, it is important to investigate how organisations tailor agile practices to get the balance right between teams\u2019 autonomy and alignment. Spotify model is originally introduced to facilitate the development of music streaming services in a very large-scale project with a Business-to-Consumer (B2C) model. However, developing a large-scale mission-critical project with a Business-to-Business (B2B) model is not essentially supported by the Spotify model. Thus, embracing Spotify model for such projects should be concerned about the question of how Spotify practices are adjusted to promote effectiveness of cross-functional autonomous squads in a mission-critical project with B2B model?               In this\u00a0\u2026", "num_citations": "15\n", "authors": ["2231"]}
{"title": "A new ICT maturity model for education institutions in developing countries\n", "abstract": " There is increasing interest in the use of information and communication technologies (ICTs) in education institutions in low-income countries. Developing ICT infrastructure is disproportionately expensive in developing countries and sustainable interventions are difficult to achieve: in part because leaders of educational institutions and donors have often not had the opportunity to develop ICT infrastructure planning and implementation skills. There has been a lack of concrete guidance regarding the stages of development needed to make efficient use of resources and maximise the chances of sustainable investments.", "num_citations": "15\n", "authors": ["2231"]}
{"title": "Three domain voting in real-time distributed control systems\n", "abstract": " An intelligent and robust voting service for real-time distributed control systems is proposed. Three novel features of the voter are described. Firstly, the voter is distributed using a primary site algorithm. This algorithm is used to coordinate the voter elements ensuring service is provided even in the presence of single faults. Secondly, the voter is capable of selecting a correct re-sult in certain cases of disagreement. This is achieved by moniroring the temporal behaviour and reliability of the application modules in addition to the comparison of numerical result values, an approach called Three Domain Voting. Thirdly, inclusion of a voting service in a Framework of tools for the design of real-time distributed control sofiare is discussed. The Frame work allows control engineers to specify their problem in a familiar application speciJic manner. The tools then provide a highly transparent transformation to an executable\u00a0\u2026", "num_citations": "15\n", "authors": ["2231"]}
{"title": "Matlab-based real-time framework for distributed control systems\n", "abstract": " Embedded systems are computer-based systems that often must have deterministic temporal behaviour. The application software must ensure overall system performance in terms of hard real-time constraints, reliability and safety requirements. Often application constraints include distribution of input/output. In some other cases, distribution is needed to achieve demanding performance or dependability requirements. This paper presents the design and implementation of the so-called Real Time Framework (RTF) that consists of a general environment for the easy generation of distributed control software. RTF covers from the specification of the distributed system to automatic code generation. The design is based on the integration of well-known commercial software for control systems into a framework that extends its use to distributed systems using a fieldbus as communication system. The internal design\u00a0\u2026", "num_citations": "14\n", "authors": ["2231"]}
{"title": "Complete disagreement in redundant real-time control applications\n", "abstract": " Redundant application algorithm \u201cvariants\u201d are used to minimise errors in fault-tolerant real-time control systems. Voting algorithms arbitrate between variant results to select a single, hopefully correct, output. Both variants and voting algorithms can be implemented in either hardware or software. The behaviour of voting algorithms in multiple error scenarios is considered in this paper. Complete disagreement is defined as those cases where no two variant results are the same. A novel algorithm for real-time control applications, the smoothing voter, is introduced and its behaviour compared with previously published algorithms. Software implemented error-injection tests, reported here, show that the smoothing voter achieves a compromise between the result selection capabilities of the median voter and the safety features of the majority voter.", "num_citations": "13\n", "authors": ["2231"]}
{"title": "Exploring the factors that influence the success of insourced government ICT projects\n", "abstract": " This paper explores information system insourcing in selected government agencies in Malaysia and discusses the challenges and barriers that have impeded its implementation. The paucity of similar projects and limited literature has resulted in this study that considers a post outsourcing context following the decision to insource a major Malaysian Government Information System in 2011. A qualitative research method was conducted in a selected government agency to obtain empirical evidence from 55 semi\u2010structured interviews with government servants from top management to clerical staff including the users of the government information system. By using a combination of institutional theory and the capability approach to analyse the data, we found that insourcing reduced costs, provided a means to access new technologies and enhanced skills in the internal development team, despite challenges such as\u00a0\u2026", "num_citations": "12\n", "authors": ["2231"]}
{"title": "Evaluating degrees of multitenancy isolation: A case study of cloud-hosted gsd tools\n", "abstract": " Multitenancy is an essential cloud computing property where a single instance of an application serves multiple tenants. Multitenancy introduces significant challenges when deploying application components to the cloud due to the demand for different degrees of isolation between tenants. At the very basic degree of isolation, tenants still share application components as much as possible. However, while some components may benefit from low degree of isolation between tenants, others may need a higher degree of isolation, for instance, in a situation where a component is too critical to be shared, or needs to be configured specifically for individual tenants. This paper describes COMITRE (COmponent-based approach to Multitenancy Isolation Through request RE-routing) to empirically evaluate the degree of isolation between tenants enabled by three multitenancy patterns (i.e., shared component, tenant\u00a0\u2026", "num_citations": "12\n", "authors": ["2231"]}
{"title": "Process control systems integration using object oriented technology\n", "abstract": " The development of a control software design environment, namely the Integrated Design Notation (IDN), is presented. IDN supports the design, development and implementation of decentralised distributed control systems. A cable extrusion process is targeted as a demonstrator application, where object-oriented technology is expected to facilitate the improvement of extruder control in a distributed environment. IDN is based on the Unified Modelling Language (UML). A CASE tool supporting UML is integrated with IDN. The translation to integrate a control software tool (Simulink) and options to generate automatic Java code are described.", "num_citations": "12\n", "authors": ["2231"]}
{"title": "Teaching Africa: A guide for the 21st-century classroom\n", "abstract": " Teaching Africa introduces innovative strategies for teaching about Africa. The contributors address misperceptions about Africa and Africans, incorporate the latest technologies of teaching and learning, and give practical advice for creating successful lesson plans, classroom activities, and study abroad programs. Teachers in the humanities, sciences, and social sciences will find helpful hints and tips on how to bridge the knowledge gap and motivate understanding of Africa in a globalizing world.", "num_citations": "11\n", "authors": ["2231"]}
{"title": "Proposals toward an integrated design environment for Complex Embedded Systems\n", "abstract": " Proposals for an integrated design environment to ease the design of complex embedded systems are presented. Complex embedded systems are distributed, typically to achieve demanding performance or dependability requirements, and must operate within hard real time constraints. Considerable effort is required to select optimal design solutions and ensure adherence to specified requirements. The proposed environment seeks to combine iterative and search/optimisation approaches to the design problem. Graphical modelling techniques are used for detailed analysis and to establish feasible design solutions. Integration of disparate detailed models, through co simulation, is desirable to enable the resolution of conflicting trade-offs.", "num_citations": "11\n", "authors": ["2231"]}
{"title": "A building-block approach to the temporal modelling of control software\n", "abstract": " This paper describes a formal process model used in a real-time control software development environment. This model allows the generation of a time Petri net representation of the processes within a system that is intended to enable temporal simulation. Processes are categorised, for the purpose of modelling, as either: data-transforming, control or choice (ALT) processes. Models which represent the temporal behaviour and the synchronisation of these individual process types are presented. It is then shown how these models may be extended to support varying numbers of process inputs and outputs. An illustrative example is presented to demonstrate the interconnection of individual process models into an integrated model of the system under development. The process model represented in time Petri net form provides the semantic basis for automatic translation from designs to temporal models.", "num_citations": "11\n", "authors": ["2231"]}
{"title": "Heterogeneous tailoring approach using the spotify model\n", "abstract": " Organisations tailor agile methods to fit their specific needs. There are two recognised approaches to agile method tailoring: Contingency Factors and Method Engineering. Spotify has developed its own agile culture, which has become influential among agile proponents. The Spotify model has formed the basis of agile methods used in numerous other organisations. We have identified a lack of research into the tailoring approach used in the Spotify model.", "num_citations": "10\n", "authors": ["2231"]}
{"title": "Information and Communication Technologies for Development - 14th IFIP WG 9.4 International Conference on Social Implications of Computers in Developing Countries, ICT4D 2017\u00a0\u2026\n", "abstract": " This book constitutes the refereed proceedings of the 14th IFIP WG 9.4 International Conference on Social Implications of Computers in Developing Countries, ICT4D 2017, held in Yogyakarta, Indonesia, in May 2017. The 60 revised full papers and 8 short papers presented together with 3 keynotes were carefully reviewed and selected from 118 submissions. The papers are organized in the following topical sections: large scale and complex information systems for development; women empowerment and gender justice; social mechanisms of ICT-enabled development; the data revolution and sustainable development goals; critical perspectives on ICT and open innovation for development; the contribution of practice theories to ICT for development; agile development; indigenous local community grounded ICT developments; global sourcing and development; sustainability in ICT4D; and information systems development and implementation in Southeast Asia. Also included are a graduate student track, current issues and notes. The chapter \u2018An Analysis of Accountability Concepts for Open Development\u2019is open access under a CC BY 4.0 license via link. springer. com.", "num_citations": "10\n", "authors": ["2231"]}
{"title": "Evaluating degrees of tenant isolation in multitenancy patterns: A case study of cloud-hosted version control system (vcs)\n", "abstract": " One of the key concerns of implementing multitenancy (i.e., serving multiple tenants with a single instance of an application) on the cloud is how to enable the required degree of isolation between tenants, so that the required performance of one tenant does not affect other tenants. There is little research which provides empirical evidence on the required degree of isolation between tenants under different cloud deployment conditions. This paper applies COMITRE (COmponent-based approach to Multitenancy Isolation Through request RE-routing) to empirically evaluate the degree of isolation between tenants enabled by multitenancy patterns for cloud-hosted Version Control System (VCS). We implemented three multitenancy patterns (i.e., shared component, tenant-isolated component, and dedicated component) by developing a multitenant component using the FileSystem SCM plugin integrated within Hudson\u00a0\u2026", "num_citations": "10\n", "authors": ["2231"]}
{"title": "Towards a control software design environment using a meta-modelling technique\n", "abstract": " The novelty of this paper is mainly the integration of multi-disciplinary software tools into a control software design environment, namely the Integrated Design Notation (IDN). The IDN supports the design, development and implementation of decentralised distributed control systems. This new environment is based on the UML meta-model standard. The translation process to integrate a control software tool (Simulink) and a process control standard (SFC) into the IDN are described. An approach for generating Java code automatically from UML also is proposed. The Java code generated is tested on a real-time target hardware architecture.", "num_citations": "10\n", "authors": ["2231"]}
{"title": "Efficient implementation of inexact majority and median voters\n", "abstract": " Majority and median voters have been widely used in fault-tolerant systems. An efficient implementation of these voters not only decreases the time overhead but also improves their reliability and readability. The benefits of using a sort technique in the implementation of these voters is explained. The results indicate that the use of a sort technique decreases the order of computations from O(n/sup 2/) to O(n log n) for majority and from O(n/sup 3/) to O(n/sup 2/) for median voters.", "num_citations": "10\n", "authors": ["2231"]}
{"title": "Integrating selected fault masking and self-diagnosis mechanisms\n", "abstract": " Fault Detection and Isolation (FDI) using self-diagnosing elements is used in distributed systems to facilitate system monitoring and maintenance. Voting algorithms are used to increase reliability by masking faults. This research addresses the integration of self-diagnosing elements and voting algorithms in a Triple Modular Redundant (TMR) configuration. A self-diagnosing element model is presented and the problem of masking element faults is considered. A range of integrated (or hybrid) voters which handle diagnosis information are introduced. Experimental results show that the appropriate use of diagnosis in a fault masking system enables the voter to select more correct results than voting on element results values alone. Three categories of architecture are proposed which have ability to mask certain self-diagnosing element common error modes. This approach results in a modest improvement in the safety\u00a0\u2026", "num_citations": "10\n", "authors": ["2231"]}
{"title": "A prototype development framework for hybrid control system design\n", "abstract": " Hybrid control systems are a combination of real-time control law and discrete-state logic. This paper describes how a Development Framework for control systems software has been adapted so that it may also handle discrete events such as mode switching. The Framework provides a highly automated path from a control engineering specification to a distributed system implementation. Simulink, an extension to Matlab, is used to specify control laws, and a statecharts tool, Statemate, is used to specify and model discrete-state components. The design phase of the Development Framework supports the integration of the two sets of specification. An inverted pendulum control system is introduced as a simple example of a hybrid system implemented using the Framework. The translation of statecharts to dataflow notations is described for the example system. General translation rules are also presented.", "num_citations": "10\n", "authors": ["2231"]}
{"title": "Future Trends in Agile at Scale: A Summary of the 7th International Workshop on Large-Scale Agile Development\n", "abstract": " This workshop explored the main research challenges in conducting agile software development in large-scale software development. We considered multi-site companies with projects that include a large number of teams which develop sophisticated systems by adopting and using agile methods. Such topics include inter-team coordination, knowledge sharing, agile transformations, and project management models that facilitate multiple cooperating self-organising teams. The keynote talk, by Darja \u015cmite, provided empirical results on communities of practice within the music streaming service Spotify. We accepted five full research papers which are included in this volume. These five papers report empirical research studies using surveys, observational and case studies. Workshop participants also worked together in groups to establish current research topics and priorities. This workshop summary\u00a0\u2026", "num_citations": "9\n", "authors": ["2231"]}
{"title": "Multi-casting in mountainous regions of developing countries: Analysis through ICT, institutions, and capabilities perspectives\n", "abstract": " Overcoming shortages of teachers or teachers with required skills and experience is a major challenge in rural schools in the global south. We investigate a classroom video conference multi-casting project under development by the Nepal Wireless Networking Project. Our case study draws on one-to-one interviews and focus group discussions from three areas and 10 village research sites in Nepal. An analytical framework which combines the capability approach, institutions theory and ICTs is used. We found that multi-casting projects in the health domain (eHealth projects) focus on capacity building for rural health workers. Despite concerns about the quality of health outreach workers, they were central to eHealth project design. In contrast, teachers were not afforded such a central role in the classroom multi-casting project. Teachers were being sidelined or replaced, rather than being seen as an essential asset\u00a0\u2026", "num_citations": "9\n", "authors": ["2231"]}
{"title": "Influential factors of aligning spotify squads in mission-critical and offshore projects\u2013a longitudinal embedded case study\n", "abstract": " Changing the development process of an organization is one of the toughest and riskiest decisions. This is particularly true if the known experiences and practices of the new considered ways of working are relative and subject to contextual assumptions. Spotify engineering culture is deemed as a new agile software development method which increasingly attracts large-scale organizations. The method relies on several small cross-functional self-organized teams (i.e., a squads). The squad autonomy is a key driver in Spotify method, where a squad decides what to do and how to do it. To enable effective squad autonomy, each squad shall be aligned with a mission, strategy, short-term goals and other squads. Since a little known about Spotify method, there is a need to answer the question of: How can organizations work out and maintain the alignment to enable loosely coupled and tightly aligned squads\u00a0\u2026", "num_citations": "8\n", "authors": ["2231"]}
{"title": "A novel taxonomy of deployment patterns for cloud-hosted applications: A case study of global software development (gsd) tools and processes\n", "abstract": " Cloud patterns describe deployment and use of various cloud-hosted applications. There is little research that focuses on applying these patterns to cloud-hosted Global Software Development (GSD) tools. As a result, it is difficult to know the applicable deployment patterns, supporting technologies and trade-offs to consider for specific software development processes. This paper presents a taxonomy of deployment patterns for cloud-hosted applications. The taxonomy is composed of 24 subcategories, which were systematically integrated and structured into 8 high-level categories. The taxonomy is applied to a selected set of software tools: JIRA, VersionOne, Hudson, Subversion and Bugzilla. The study confirms that most deployment patterns are related and cannot be fully implemented without being combined with others. The taxonomy revealed that (i) the functionality provided by most deployment patterns can often be accessed through an API or plugin integrated with the GSD tool, and (ii) RESTful web services and messaging are the dominant strategies used by GSD tools to maintain state and exchange information asynchronously, respectively. This paper also describes CLIP (CLoud-based Identification process for deployment Patterns), to guide software architects in selecting applicable cloud deployment patterns for GSD tools using the taxonomy and thereafter applies it to a motivating cloud deployment problem. Recommendations for guiding architects in selecting applicable deployment patterns for cloud deployment of GSD tools are also provided.", "num_citations": "8\n", "authors": ["2231"]}
{"title": "Dependable, intelligent voting for real-time control software\n", "abstract": " An intelligent and dependable voting mechanism for use in real-time control applications is presented. Strategies proposed by current safety standards advocate N-version software to minimize the effects of undetected software design faults (bugs). This requires diversity in design but presents a problem in that truly diverse code produces diverse results; that is, differences in output values, timeliness and reliability. Reaching a consensus requires an intelligent voter, especially when non-stop operation is demanded, e.g. in aerospace applications. This paper, therefore, firstly considers the applicable safety standards and the requirements for an intelligent voter service. The use of replicated voters to improve reliability is examined and a mechanism to ensure non-stop operation is presented. The formal mathematical analysis used to verify the crucial behavioural properties of the voting service design is detailed\u00a0\u2026", "num_citations": "8\n", "authors": ["2231"]}
{"title": "An empirical taxonomy of DevOps in practice\n", "abstract": " DevOps is described as a software engineering culture and philosophy that utilises cross-functional teams to build, test and release software faster and more reliably through automation. Research shows that its adoption speeds up software delivery time, improve quality, security, and collaboration in software development. One controversial issue has been whether DevOps is an organisation-wide culture or a job description. As DevOps is an emerging concept, its definitions and best practices are still hazy, making its implementation in practice less informed and somewhat risky. The rising trend of DevOps adoption among software development practitioners therefore heightens the need for in-depth investigation into its implementation.This paper seeks to contribute to the above by critically examining DevOps implementation in practice through an exploratory case study, based on interviews with 11 industry\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Spotify tailoring for B2B product development\n", "abstract": " Agile software development has become increasingly common in the context of large-scale organisations. Typically, software organisations tailor agile methods to fit their needs and ultimately maximise success. The size of the organisation, business goals, and operative models are some examples of factors for which agile methods are tailored. Spotify model is introduced to facilitate the development of a very large-scale project with a Business-to-Consumer (B2C) model, but mission-critical large-scale projects with Business-to-Business (B2B) model are not addressed by the model. Hence, a question that imposes itself is: What are practitioner perceptions of agile tailoring when using the Spotify model? In this paper, we conduct a longitudinal embedded case study to investigate practitioner perceptions of agile method tailoring on a large-scale mission-critical project in B2B environment. The case study lasted over\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Agile software development practices in Egypt SMEs: a grounded theory investigation\n", "abstract": " Agile information system development methods have been adopted by most software development organizations due to their proven benefits in terms of flexibility, reliability, and responsiveness. However, companies face significant challenges in adopting these approaches. Specifically, this research investigates challenges faced by software development companies in Egypt while transitioning to Agile. As little previous research is available targeting their concerns, we have conducted a grounded theory investigation. Key problem areas were found including lack of cadence in sprints planning, inadequate use of effort estimation and product quality issues. The developed grounded theory reflects on the key problem areas found with SMEs adopting agile practices and can be used by software development practitioners adopting agile methods in Egypt or similar developing countries as an outline for the common\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Agile methods in Ethiopia: an empirical study\n", "abstract": " This paper provides empirical evidence of agile method adoption in smaller companies in Ethiopia. Agile methods are emerging as best practice for software development in the global north. So, is there evidence that agile methods are being used in Ethiopia? A Grounded Theory approach was adopted using face-to-face interviews with 17 software professionals from 7 software companies, which were selected by using a snowball sampling technique. The interviews were semi-structured and open-ended and have been audio-recorded and transcribed. Participants in the study identified the importance of agile principles, values and practices. Agile practices are used to address issues with requirements and to encourage user participation. However, it was discovered that the companies in the study were conducting software projects for government clients that mandate substantial documentation with\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Optimizing the deployment of cloud-hosted application components for guaranteeing multitenancy isolation\n", "abstract": " The sharing of components of a cloud-hosted application and the underlying cloud resources between tenants have the potential to reduce resource consumption and running cost per tenant. However, this sharing may allow the behaviour of one component to affect the performance, resource consumption and access privileges of other components, for example, if the application fails to scale-up when the workload of one of the component increases suddenly. This problem becomes even more acute when components are associated with different or higher degrees of isolation among them. This paper presents a mathematical optimization model and a metaheuristic (based on simulated annealing) solution for providing near-optimal solutions for deploying components of a cloud-hosted application in a way that guarantees the required degree of isolation between the components. Our experiments showed that the\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Implementing the required degree of multitenancy isolation: A case study of cloud-hosted bug tracking system\n", "abstract": " Implementing the required degree of isolation between tenants is one of the significant challenges for deploying a multitenant application on the cloud. In this paper, we applied COMITRE (COmponent-based approach to Multitenancy Isolation Through request RE-routing) to empirically evaluate the degree of isolation between tenants enabled by three multitenancy patterns (i.e., shared component, tenant-isolated component, and dedicated component) for a cloud-hosted Bug tracking system using Bugzilla. The study revealed among other things that a component deployed based on dedicated component offers the highest degree of isolation (especially for database transactions where support for locking is enabled). Tenant isolation based on performance (e.g., response time) favoured shared component (compared to resource consumption (e.g., CPU and memory) which favoured dedicated component). We also\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Multiple error filtering in cyclic systems\n", "abstract": " Voting algorithms are used to arbitrate between the variant results in fault-tolerant systems. Traditional voters produce incorrect outputs in multiple error conditions. This paper introduces a class of voters, called predictor voters, which can resolve some multiple error conditions. These voters use analysis of a sequence of results in cyclic systems to select the most likely correct variant result as the voter output. Large discontinuities between successive results in cyclic systems are indicative of faults. The voting algorithms have the effect of filtering discontinuities to improve availability. Three different versions of predictor voters are described. Fault-injection simulation tests are used to investigate their safety and availability performance in triple error scenarios. Experimental results show that predictor voters give safety behaviour between majority and median voters. Predictor voters with order three and above give\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Component-oriented voter model for dependable control applications\n", "abstract": " In many industrial applications arbitration between redundant subsystems using voting algorithms is popular. Many voting strategies, implemented in hardware or software, have been proposed of which majority and median voters have been widely used in real applications. Component-oriented design and modeling is receiving increasing amounts of interest in the software engineering community. Detailed analysis of voters shows that they can also be considered as a combination of independent components, each performing a specific function. This article proposes a component-oriented model for voters. The model offers benefits such as reusability, flexibility, and extensibility to the system designer. Components and their families are introduced, categorised and simulated. The model is simulated and a library of simulated components is provided. The generality of the model not only supports the analysis of a\u00a0\u2026", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Design tools for hybrid control systems\n", "abstract": " Hybrid systems exhibit a variety of discrete and continuous behaviour. Extensions to the Development Framework, an environment for real-time control system design, are described here. These extensions allow the management of discrete events such as mode switching. The Framework provides a highly automated path from a control engineering specification to a distributed system implementation. Simulink, an extension to Matlab, is used to specify control laws, and a statecharts tool, Statemate, is used to specify and model discrete-state components. The design phase of the Development Framework supports the integration of the two sets of specification. The translation of statecharts to dataflow notations is described using an example system which was implemented using the Development Framework. General translation rules are also presented.", "num_citations": "7\n", "authors": ["2231"]}
{"title": "An error model for computer control systems\n", "abstract": " This paper presents an error model that is intended to allow the dependability of computer control systems, with fault tolerant mechanisms included, to be evaluated. The model allows error 'surfaces' to be defined for a given application, and used to define an error region that will give a measure of error coverage. The paper applies the model to an illustrative example to show how it might be used in an autopilot model.", "num_citations": "7\n", "authors": ["2231"]}
{"title": "Agile on a large scale\n", "abstract": " Agile is sometimes seen as an approach that\u2019s best suited to small project and small teams. Julian M. Bass FBCS shows how, through methods and practice, Agile can work equally well on global scale projects too.", "num_citations": "6\n", "authors": ["2231"]}
{"title": "Degrees of tenant isolation for cloud-hosted software services: a cross-case analysis\n", "abstract": " A challenge, when implementing multi-tenancy in a cloud-hosted software service, is how to ensure that the performance and resource consumption of one tenant does not adversely affect other tenants. Software designers and architects must achieve an optimal degree of tenant isolation for their chosen application requirements. The objective of this research is to reveal the trade-offs, commonalities, and differences to be considered when implementing the required degree of tenant isolation. This research uses a cross-case analysis of selected open source cloud-hosted software engineering tools to empirically evaluate varying degrees of isolation between tenants. Our research reveals five commonalities across the case studies: disk space reduction, use of locking, low cloud resource consumption, customization and use of plug-in architecture, and choice of multi-tenancy pattern. Two of these common factors compromise tenant isolation. The degree of isolation is reduced when there is no strategy to reduce disk space and customization and plug-in architecture is not adopted. In contrast, the degree of isolation improves when careful consideration is given to how to handle a high workload, locking of data and processes is used to prevent clashes between multiple tenants and selection of appropriate multi-tenancy pattern. The research also revealed five case study differences: size of generated data, cloud resource consumption, sensitivity to workload changes, the effect of the software process, client latency and bandwidth, and type of software process. The degree of isolation is impaired, in our results, by the large size of generated data, high\u00a0\u2026", "num_citations": "6\n", "authors": ["2231"]}
{"title": "Empathic consultancy: a reflective approach to ICTD.\n", "abstract": " Empathetic Consulting articulates positive characteristics of long-term ICT capacity building engagements using external advisors. Consultants need to demonstrate commitment to capacity building rather than service delivery, flexibility in adaptation of technical skills to local contexts and resilience in the face of crises. Partner organisations must harness and sustain resources to ensure capacity building takes place. Counterpart team members should be committed to learning, prioritising their own personal and professional development. A case study comprising six education institution ICT installation projects is used to identify factors influencing achievement of project objectives. Projects that do not align with strategic priorities of organisations and personal priorities of counterpart team members are not likely to succeed. New skills must be nurtured with confidence building increments over time. For example, a\u00a0\u2026", "num_citations": "6\n", "authors": ["2231"]}
{"title": "A developmental model of basic ICT skills for pre-service trainee teachers\n", "abstract": " Resource limitations present several challenges to diffusion of ICT skills in developing (non-OECD) countries. Trainee teachers join colleges of teacher education with little or no prior exposure to technologies such as mobile phones or computers. Distinctive models are a required to help understanding of basic ICT skills learning in this context. A developmental model of basic ICT skills acquisition is presented. The model links learner skill level acquisition with pre-requisite infra-structural requirements called resource milestones. The model is applied to six out of the 22 teacher education institutions in Ethiopia and schools in and around the zonal capital Debre Birhan. It is found that none of the surveyed primary schools, Grade 1 to 8, use ICT in teaching and learning. A higher education preparatory school and two teacher training institutions have high speed Internet access. In the teacher training institutions the\u00a0\u2026", "num_citations": "6\n", "authors": ["2231"]}
{"title": "An integrated framework for development of real-time distributed control software based on can-bus\n", "abstract": " Embedded systems are computer-based systems which must respond to external stimuli within time scales determined by the external environment. Such systems are required to achieve ever more demanding behavioural. performance and safety requirements. Embedded systems are found in applications such as primary flight control, gas-turbine engine control and railway traffic managementOften complex embedded systems are distributed, typically to achieve demanding performance or dependability requirements, and must operate within hard real-time constraints. Considerable effort is required to select optimal design solutions and ensure adherence to specified requirements. In embedded systems safety, reliability and response-times are considered as strict constraints on the system design. Achievement of these constraints requires meticulous analysis, typically through the use of specialist modelling and\u00a0\u2026", "num_citations": "6\n", "authors": ["2231"]}
{"title": "An open environment for the specification, design and code generation of control algorithms\n", "abstract": " Proposals for an open, yet integrated, design environment to ease the design of complex process control systems are presented. A hierarchical approach to the allocation of computing resources is typically used in process control systems. The lower end of the hierarchy is characterised by large numbers of relatively simple controllers. Overall synchronisation and coordination along with information management functions are implemented at higher levels in the hierarchy. In general, embedded systems are computer-based systems which must respond to external stimuli within time scales determined by the external environment. Thus, process control systems can be seen as representative of the more distributed end of the spectrum of embedded systems. Such embedded systems are required to achieve ever more demanding behavioural, performance and safety requirements. Considerable effort is required to\u00a0\u2026", "num_citations": "6\n", "authors": ["2231"]}
{"title": "Southern theories in ICT4D\n", "abstract": " This paper suggests that the dominance of northern research paradigms in ICT4D may be viewed as a continuation of colonial sway over the endeavors of the global South. The notion of Southern Theory - as introduced in the work of Raewyn Connell, the Comaroffs, and others - may be a route by which researchers in the global South can reclaim the intellectual territory of ICT4D, with indigenous and regional research paradigms and theories rather than those simply absorbed from the global North.", "num_citations": "5\n", "authors": ["2231"]}
{"title": "Optimal deployment of components of cloud-hosted application for guaranteeing multitenancy isolation.\n", "abstract": " One of the challenges of deploying multitenant cloud-hosted services that are designed to use (or be integrated with) several components is how to implement the required degree of isolation between the components when there is a change in the workload. Achieving the highest degree of isolation implies deploying a component exclusively for one tenant; which leads to high resource consumption and running cost per component. A low degree of isolation allows sharing of resources which could possibly reduce cost, but with known limitations of performance and security interference. This paper presents a model-based algorithm together with four variants of a metaheuristic that can be used with it, to provide near-optimal solutions for deploying components of a cloud-hosted application in a way that guarantees multitenancy isolation. When the workload changes, the model-based algorithm solves an open\u00a0\u2026", "num_citations": "5\n", "authors": ["2231"]}
{"title": "Information flows at inter-team boundaries in agile information systems development\n", "abstract": " Agile software development methods are being used on larger projects thus the study of inter-team communication are becoming an important topic of interest for researchers. This research addresses inter-team communication by exploring the tools and three different boundaries, inter-team, team and customers, and geographically separated teams. In this research, we gathered data from semi-structured face-to-face interviews which were analyzed following the grounded theory approach. Our study reveals consensus from different teams on the importance of virtual Kanban boards. Also, some team members tend to adapt to other teams\u2019 preferred communication tool. We observed challenges around interdependent user stories among the different teams and highlighted the problems that rise at the different boundaries.", "num_citations": "5\n", "authors": ["2231"]}
{"title": "Product innovation with Scrum: a longitudinal case study\n", "abstract": " This paper describes the innovation processes used in a partnership between a company that provides asset integrity and maintenance management consulting services in the energy sector and a university. The challenge faced by the company is to make their in-house expertise more readily available to a worldwide audience. A longitudinal embedded case study has been used to investigate how installable desktop software applications have been redesigned to create a new set of cloud hosted software services. The innovation team adapted an agile scrum process to include exploratory prototyping and manage the geographical distribution of the team members. A minimum viable product was developed that integrated functional elements of previous software tools into an end-to-end data collection, analysis and visualisation product called AimHi which uses a cloud-hosted web services approach. The paper\u00a0\u2026", "num_citations": "5\n", "authors": ["2231"]}
{"title": "The learner experience of student-led international group project work in software engineering\n", "abstract": " Software development has become increasingly globalized because of technological innovation, the evolution of work and business processes, as well as prevailing educational systems and national policies [1]. This paper addresses the challenges faced when creating realistic opportunities for students to participate in team working on a globally distributed software engineering project. We examine the experience of one set of students who undertook a single semester software development project, the technical objective of which was to create a product using online collaboration tools [2]. The students involved were studying at two widely-separated universities: Robert Gordon University (RGU), UK, and the International Institute for Information Technology, Bangalore (IIIT-B), India. A classroom-based action research approach has been used to evolve and reflect on the project [3]. Detailed student feedback was\u00a0\u2026", "num_citations": "5\n", "authors": ["2231"]}
{"title": "A Grounded Theory Of Open Government Data: A Case Study In The UK.\n", "abstract": " This paper explores the emergence and implementation of Open Government Data (OGD) as a part of e-government systems in public organisations. OGD has become a new approach and phenomenon among developed countries to increase the citizen\u2019s trust and confidence in government. Several studies have shown the importance of implementing open data systems by public organisations and the potentials of open government data systems for better management. Grounded theory approach is used to build a theory by using semi-structured interviews: 5 interviews in the UK as a pilot study comprising 4 interviewees from local governments and 1 interviewee from a large national organisation in London. We found that OGD could optimise the performance of government\u2019s administration by using potential opportunities that OGD presents to them despite challenges like data sharing, standardization in OGD\u00a0\u2026", "num_citations": "5\n", "authors": ["2231"]}
{"title": "Voting algorithms in multiple error scenarios for real-time control applications\n", "abstract": " Voting algorithms are used to arbitrate between the variant results in fault tolerant systems. Traditional voters produce incorrect outputs in multiple error conditions. This paper introduces a class of voters, called predictor voters, which can resolve some of the multiple error conditions. They use execution-time information of the system to select the most likely correct variant result as the voter output. Different versions of predictor voters are explained and their safety and availability performance in triple error scenarios are investigated. The experimental results show that predictor voters give safety behaviour between majority and median voters. Predictor voters with order three and above give higher availability than the median voter. Predictor voters are suitable for use in systems in which some incorrect outputs can be tolerated in order to maitain functionality over long period of time.", "num_citations": "5\n", "authors": ["2231"]}
{"title": "Development framework approach to heterogeneous system design for control systems\n", "abstract": " An integrated environment of software development tools, known as the Development Framework, which automates the design process for complex real-time embedded control systems, is introduced. The approach favoured here is to maximise the use of commercially available tools that are well understood by current industrial practitioners. Where necessary, new tools are introduced both in unifying the automated method and for supporting specialist functions. Introduced here is one such specialist example: support for the design of heterogeneous systems. This paper details the work on heterogeneity, and demonstrates how the essential properties of the Development Framework have been preserved. Thus, the Framework presents a unified methodology and an open system architecture. Finally, what should be learnt from this for building future techniques and tools for complex real-time control systems is\u00a0\u2026", "num_citations": "5\n", "authors": ["2231"]}
{"title": "Scrum for product innovation: a longitudinal embedded case study\n", "abstract": " This article describes the innovation processes used in a partnership between Add Latent Ltd., an asset integrity and maintenance management consulting services provider in the energy sector and University of Salford. The challenge faced by the company is to make their in-house expertise more readily available to a worldwide audience. A longitudinal embedded case study has been used to investigate how installable desktop software applications have been redesigned to create a new set of cloud hosted software services. The innovation team adapted an agile scrum process to include exploratory prototyping and manage the geographical distribution of the team members. A minimum viable product was developed that integrated functional elements of previous software tools into an end-to-end data collection, analysis and visualisation product called AimHi which uses a cloud-hosted web services approach. Field trials were conducted using the software at the Uniper, Isle of Grain power station in Kent, UK. Enhancements were made to the AimHi product which was adopted for use at the Uniper site. The product emerged from a Knwledge Transfer Partnership whci was evaluated on cmplettion by InnovateUK and awarded the highest possible \u201coutstanding\u201d grade. The article illustrates how the scrum software development method was tailored for a product innovation context. Extended periods of evaluation and reflection, prototyping and requirement refinement were combined with periods of incremental feature development using sprints. The AimHi product emerged from a technology transfer and innovation project that has successfully\u00a0\u2026", "num_citations": "4\n", "authors": ["2231"]}
{"title": "Evaluating the effect of multi-tenancy patterns in containerized cloud-hosted content management system\n", "abstract": " Multi-tenancy in cloud computing describes the extent to which resources can be shared while guaranteeing isolation among components (tenants) using these resources. There are three multi-tenancy patterns: shared, tenant-isolated and dedicated component patterns. These patterns have not previously been formally specified. In order to create a precise definition and verify each pattern, we formally specify each pattern using the Z language. To validate the interpretation of our formal description, We empirically evaluate each pattern using the data-tier of a cloud hosted distributed content management application, WordPress, deployed in a Docker container. Experimental results show that the dedicated pattern successfully managed larger numbers of tenants with fewer unhandled request errors. The shared and tenant isolated patterns exhibited larger number of unhandled request errors when the number of\u00a0\u2026", "num_citations": "4\n", "authors": ["2231"]}
{"title": "A performance evaluation of multi-tenant data tier design patterns in a containerized environment\n", "abstract": " Software as a Service (SaaS) has become one of de facto approach for deploying cloud base services or applications for many businesses. At the core of SaaS is Multi-tenancy; multi-tenancy gives customers (i.e. tenants) and software provider vast opportunities to leverage the power of cloud infrastructure by consolidating operational entities. The drive toward multi-tenancy in SaaS application is a result of the economical benefit derived by shared development and maintenance cost. This paper empirically evaluates the performance of multi-tenancy models in a containerized environment. Our results show that in a containerized environment, dedicated and isolated schema performed reasonably well in terms of latency compared to shared schema model. Although the shared schema model proved to more resource efficient, it performance is greatly affected by finite resources shared by many concurrent tenants.", "num_citations": "4\n", "authors": ["2231"]}
{"title": "A comparison of software development process experiences\n", "abstract": " Commercial pressures to produce faster and more dependable software prompt management initiatives to improve software practices. Technical solutions such as CASE tools, 4GLs, Interactive Development Environments and more recent modeling notations and tools have made some contribution. This article concentrates on the introduction of new development methodologies that are shown to have a positive on software development practices.", "num_citations": "4\n", "authors": ["2231"]}
{"title": "A prototype framework of tools for the design of real-time distributed control software\n", "abstract": " A prototype framework of software tools for the design of distributed real-time control system software is described here. The tools provide a highly transparent transformation from a specification to an implementation. The specification is in a familiar control engineering notation and can be simulated to ensure correct functional behaviour. The translation to an executable form is made via a software engineering model of the system. Two optimisations that can be performed on the software engineering model to improve the reliability and performance of the distributed system under development are described. The framework generates all the source code to execute the system under development on a network of transputers. The transputer implementation uses the Virtuoso real-time kernel. As an example the framework is used to implement a linearised continuous-time roll-yaw-pitch autopilot and airframe model\u00a0\u2026", "num_citations": "4\n", "authors": ["2231"]}
{"title": "Spotify tailoring for architectural governance\n", "abstract": " Organisations usually tailor Agile methods to fit their needs best. Spotify has developed its own Agile culture to facilitate software development for hundreds of developers across multiple cities. The Spotify model has become influential among agile proponents and hence formed the basis of methods used in other organisations. We have identified a lack of research into agile architecture using the Spotify model. To explore How can architectural governance increase the autonomy of teams when using the Spotify model?, an intervention embedded case study was conducted in a multinational FinTech organisation, using the Spotify model. New processes were introduced by developing and evaluating an approach to Agile architectural governance. This approach incorporates a structural change and a change management process. We conducted 6 semi-structured open-ended interviews and direct observations of\u00a0\u2026", "num_citations": "3\n", "authors": ["2231"]}
{"title": "Agile at scale: a summary of the 8th International Workshop on Large-Scale Agile Development\n", "abstract": " The Large-Scale Agile Development workshop explored the main research challenges in large-scale software development. We considered multisite organisations with large-scale projects that include a large number of teams adopting agile methods. Such topics include inter-team coordination, knowledge sharing, large project organisation, agile transformation, agile teamwork quality, project models that facilitate several self-organising teams, and practices for scaling agile methods. We accepted five full research papers, which are included in this volume. The accepted papers report empirical research studies using surveys, observations and case studies. Also, an interactive online discussion session was conducted to compare the two approaches, SAFe and Spotify. The workshop participants, which were around a hundred people, joined this discussion to compare the two approaches and suggest some future research questions about the hybridisation of SAFe and Spotify. This workshop summary contributes as a current snapshot of research along with some results from an interactive discussion about SAFe and Spotify.", "num_citations": "3\n", "authors": ["2231"]}
{"title": "Taxonomy of Deployment Patterns for Cloud-hosted Applications: A Case Study of Global Software Development (GSD) Tools\n", "abstract": " Cloud patterns describe deployment and use of various cloud-hosted applications. There is little research which focuses on applying these patterns to cloud-hosted Global Software Development (GSD) tools. As a result, it is difficult to know the applicable deployment patterns, supporting technologies and trade-offs to consider for specific software development processes. This paper presents a taxonomy of deployment patterns for cloud-hosted applications. The taxonomy is composed of 24 subcategories which were systematically integrated and structured into 8 high-level categories. The taxonomy is applied to a selected set of software tools: JIRA, VersionOne, Hudson, Subversion and Bugzilla. The study confirms that most deployment patterns are related and cannot be fully implemented without being combined with others. The taxonomy revealed that (i) the functionality provided by most deployment patterns can often be accessed through an API or plugin integrated with the GSD tool, and (ii) RESTful web services and messaging are the dominant strategies used by GSD tools to maintain state and exchange information asynchronously, respectively. We also provide recommendations to guide architects in selecting applicable deployment patterns for cloud deployment of GSD tools.", "num_citations": "3\n", "authors": ["2231"]}
{"title": "Qualitative Research Fieldwork: An empirical study of software development in a small company using guided interview techniques\n", "abstract": " This paper develops the use of \u2018guided interview studies\u2019 in a small empirical study of a software development company. In particular the pilot study looked for a number of human issues in communications, technology, teamwork and political factors that might significantly influence a software development process. Particular attention was given to examining the different perspectives of participants.", "num_citations": "3\n", "authors": ["2231"]}
{"title": "Mapping and scheduling for heterogeneous architectures\n", "abstract": " Extensive and computationally complex signal processing and control applications are commonly constructed from small computational blocks where the load decomposition and balance may not be easily achieved. This requires the development of mapping and scheduling strategies based on application to processor matching. In this context several application algorithms are utilised and investigated in this work within the development framework (DF) approach. The DF approach supports the specification, design and implementation of real-time control systems. It also contains several mapping and scheduling tools to improve the performance of systems as well as tools for code generation. To improve the performance of an application, a new approach, namely the priority-based genetic algorithm (PBGA), is developed and reported in this article. The approach is applied to several applications using parallel and\u00a0\u2026", "num_citations": "3\n", "authors": ["2231"]}
{"title": "Voting Software for Fault-Tolerant Aircraft Flight Control Systems\n", "abstract": " An intelligent and robust voting service is proposed. The novel voting service, is capable of forming a consensus based on performance of redundant applications in the value, time and reliability domains. The voter is distributed using a hot backup approach to ensure timely recovery in the event of voter failure. Specification diversity is advocated in order to improve upon the effectiveness of design diversity. The voter is designed to be a system building block, embedded in a framework of design tools which will allow the developer to express control concepts, such as deadlines, priorities, replication and voting.", "num_citations": "3\n", "authors": ["2231"]}
{"title": "Hierarchical multi-tenancy in business to business software services\n", "abstract": " The introduction of cloud computing has changed the provisioning and consumption of IT resources. Software-as-a-Service (SaaS) applications provide functionality using internet connectivity and enable centralised management of executable code resources. Multi-tenancy is an architectural pattern for sharing a single instance of executable software while isolating the data and business process serving each tenant. In a multi-tenant application, a tenant is a logical grouping of end-users who share common code, data and process instances. Multi-tenancy can cut across all the layers of an application software architecture. Conventionally, multi-tenancy is implemented as a flat structure. All tenants are treated in the same way by application software. However, large enterprises are hierarchically organised with defined boundaries between business and functional units. A SaaS solution, aimed at large enterprise\u00a0\u2026", "num_citations": "2\n", "authors": ["2231"]}
{"title": "A framework for achieving the required degree of multitenancy isolation for deploying components of a cloud-hosted service\n", "abstract": " Multitenancy allows multiple tenants to access a single instance of a cloud offering. While several approaches exist for implementing multitenancy, little attention has been paid to implementing the required degree of isolation since there are varying degrees of isolation that can be implemented for each tenant. This paper presents a framework for achieving the required degree of isolation between tenants accessing a cloud offering so that the required performance, resource utilisation and access privilege of one tenant does not affect other tenants when there are workload changes. The framework is composed of two main constituents: 1) component-based approach to multitenancy isolation through request re-routing (COMITRE); 2) an optimisation model for providing optimal solutions for deploying components of a cloud-hosted service. We demonstrate using a case study of: 1) a cloud-hosted bug tracking system\u00a0\u2026", "num_citations": "2\n", "authors": ["2231"]}
{"title": "Large-scale offshore agile tailoring: exploring product and service organisations\n", "abstract": " This paper uses empirical data to compare large-scale agile method tailoring in two types of global software development programme: offshore outsourced services and offshore captive development centres. This research forms part of a larger study and uses data collected from face-to-face semi-structured open-ended interviews with over 50 practitioners in 9 international companies selected using a snowball sampling technique. Analysis has been conducted using'Glaserian'grounded theory concepts, including open coding, memoing, constant comparison and theoretical saturation.", "num_citations": "2\n", "authors": ["2231"]}
{"title": "A comparative analysis of two globally distributed group projects: A perspective from CSCW/CSCL research\n", "abstract": " Globally distributed group projects are becoming an attractive and increasingly common feature in computer science education. They provide opportunities for students to engage in activities that enhance both their technical skills and wider professional competencies with concomitant benefits for graduate employability. There have been some previous attempts to investigate these projects in terms of theories of technology use and collaborative learning, and this paper continues this process by examining globally distributed group projects from the perspective of salient issues in the fields of computer-supported cooperative work (CSCW) and computer-supported collaborative learning (CSCL). After detailing CSCW models that discuss the dimensions that characterise interaction and technology use in groups, we examine aspects of group learning from the perspective of theories of CSCL. Issues of cooperation\u00a0\u2026", "num_citations": "2\n", "authors": ["2231"]}
{"title": "Software engineering: learning, employment and globalization\n", "abstract": " The paper describes an International Software Engineering Group-Project Pilot. Students were given an opportunity to explore software development in an international team. Social computing (collaboration) software tools were used to enable communication and joint working. An Agile software development method was used. The pilot was conducted as an exploratory extra-curricula activity. The student volunteers were distracted by assignments and credit-bearing assessments. Also, we noted that greater effort was required from supervisors to create a supportive management environment. Despite these shortcomings, the pilot has subsequently been integrated into the syllabus at both the participating institutions and will be further explored in a subsequent phase of the study. Our international software engineering group project pilot provides graduate employability benefits by offering first-hand experience of a\u00a0\u2026", "num_citations": "2\n", "authors": ["2231"]}
{"title": "Achieving Hard Real-time Java\n", "abstract": " Real-time systems engineers have, for some time, identified Java as an attractive programming language, but have been unable to exploit its benefits as it cannot provide the fundamental temporal predictability required. However, this is all changing, as academic and industrial experts propose extensions to the Java environment. On the basis of this study, significant agreement has been found in how some of the critical areas of Java may be addressed for real-time, such as memory management and portability. However, areas such as scheduling and interprocess communication, have been contentious, even among expert opinion. This paper considers the current status of this exciting and emerging, soon to become, real-time programming language, with a focus on process control application. In addition, it will overview a preliminary performance assessment of the alleged real-time java virtual machine (JVM\u00a0\u2026", "num_citations": "2\n", "authors": ["2231"]}
{"title": "Integration and Comparison of FDI and Fault Masking Features in Embedded Systems\n", "abstract": " This paper addresses the benefits of integrating fault masking (FM) and fault detection and identification (FDI) methods to an embedded control system. It is shown that using a \u201csmart\u201d sensor in a Triple Modular Redundancy (TMR) configuration improves the system performance. Within the proposed hybrid system, \u201csmart\u201d sensors are used as redundant modules of the TMR configuration. A novel quality measure, which indicates the confidence level of a \u201csmart\u201d sensor output is used by a purpose-built voting algorithm to produce outputs. The proposed voting algorithm is a modification of weighted average voter, which produces results based on both the sensor output and the associated quality measure. This algorithm performs better than the conventional weighted average voter within a simple TMR configuration for low error ratios (<16). The main reason for this improvement is the capability of hybrid system to\u00a0\u2026", "num_citations": "2\n", "authors": ["2231"]}
{"title": "Hybrid specification and implementation of an aircraft engine controller\n", "abstract": " Control of a gas-turbine engine requires management of continuous and discrete (state-event) behaviour. A design environment- the Development Framework, is used to define both the continuous and discrete aspects of a turbine engine controller. The approach uses purpose-built software translation tools to capture the system's specification from commercial simulation tools. A unified design model based on a data flow notation, comprising both continuous and state-event behaviour is automatically generated. Specification and design models of selected gas-turbine engine controller subsystems are presented. The complexity of the application suggests that the approach can be used for industrial scale projects.", "num_citations": "2\n", "authors": ["2231"]}