{"title": "Using IDDs for Packet Filtering\n", "abstract": " \u0427 \u0438\u0433 \u0436 \u041e \u0418 \u041e\u041c\u041c\u041e \u0437\u0438\u0436 \u0438 \u0436 \u043b \u0430\u0430\u0437 \u0436 \u0433\u0432 \u0433 \u0438 \u043d \u0438 \u0432\u0433\u0430\u0433 \u0437 \u0439\u0437 \u0438\u0433 \u0433\u0432\u0438\u0436\u0433\u0430 \u0438 \u0438\u0436 \u0433\u0419 \u0432 \u0432 \u0432 \u0433\u0439\u0438 \u0433 \u0432 \u0438\u043b\u0433\u0436 \u041a \u0432\u0438\u0436 \u0430 \u0438\u0439\u0436 \u0433 \u0438 \u0436 \u043b \u0430\u0430 \u0437 \u0438 \u0434 \u0438 \u0430\u0438 \u0436\u041a \u0421\u0432 \u0438 \u0437 \u0434 \u0434 \u0436\u0418 \u043b \u0434\u0436\u0433\u0434\u0433\u0437 \u0433\u0431\u0434\u0430 \u0438 \u0436 \u0431 \u043b\u0433\u0436 \u0433\u0436 \u0434 \u0438 \u0430 \u0437\u0437 \u0419 \u0438 \u0433\u0432\u041a \u042c \u0436\u0433\u0439 \u0438\u043b\u0433 \u0434\u0434\u0430 \u0438 \u0433\u0432\u0437 \u043b \u0431\u0433\u0432\u0437\u0438\u0436 \u0438 \u0438 \u0438 \u0433\u0438 \u0434 \u0436 \u0433\u0436\u0431 \u0432 \u0432 \u0437 \u0439\u0436 \u0438\u043d \u0432 \u0431\u0434\u0436\u0433\u043a \u041a", "num_citations": "49\n", "authors": ["704"]}
{"title": "An MTIDD based firewall\n", "abstract": " This paper explores the use of Multi-Terminal Interval Decision Diagrams (MTIDDs) as the central structure of a firewall packet filtering mechanism. This is done by first relating the packet filtering problem to predicate logic, then implementing a prototype which is used in an empirical evaluation. The main benefits of the MTIDD structure are that it provides access to Boolean algebra over filters, efficient classification time, and a compact representation. Results from the empirical evaluation shows that MTIDDs are scalable in terms of memory usage: a 50,000 rule filter requires only 3MB of memory, and efficient for packet classification: it is able to handle more rules than the schemes it was compared to without causing a degradation in performance.", "num_citations": "28\n", "authors": ["704"]}
{"title": "An interval decision diagram based firewall\n", "abstract": " This paper explores the use of Interval Decision Diagrams (IDDs) as the central structure of a firewall packet filtering mechanism. This is done by first relating the packet filtering problem to predicate logic, then implementing a prototype which is used in an empirical evaluation. The main benefits of the IDD structure are that it provides access to boolean algebra over filters, efficient classification time, and potentially a compact representation. Results from the empirical evaluation shows that IDDs are scalable in terms of memory usage: a 50,000 rule filter requires only 3MB of memory, and efficient for packet classification: it is able to handle more rules than the schemes it was compared to without causing a degradation in performance.", "num_citations": "23\n", "authors": ["704"]}
{"title": "Accelerating interpolation-based model-checking\n", "abstract": " Interpolation-based model-checking and acceleration techniques have been widely proved successful and efficient for reachability checking. Surprisingly, these two techniques have never been combined to strengthen each other. Intuitively, acceleration provides under-approximation of the reachability set by computing the exact effect of some control-flow cycles and combining them with other transitions. On the other hand, interpolation-based model-checking is refining an over-approximation of the reachable states based on spurious error-traces. The goal of this paper is to combine acceleration techniques with interpolation-based model-checking at the refinement stage. Our method, called \u201cinterpolant acceleration\u201d, helps to refine the abstraction, ruling out not only a single spurious error-trace but a possibly infinite set of error-traces obtained by any unrolling of its cycles. Interpolant acceleration\u00a0\u2026", "num_citations": "20\n", "authors": ["704"]}
{"title": "Les automates temporis\u00e9s avec mises \u00e0 jour\n", "abstract": " 5.12 Automate temporis\u00e9 B, sans misesa jour non-d\u00e9terministes, simulant A... 97 5.13 Automate temporis\u00e9 A avec misesa jour non-d\u00e9terministe x:< y....... 98 5.14 Automate temporis\u00e9 B, sans misesa jour non-d\u00e9terministes,\u2019simulant\u2019(A). 98 5.15 Automate temporis\u00e9 B\u2032, sans misesa jour non-d\u00e9terministes, simulant (A).. 98", "num_citations": "10\n", "authors": ["704"]}
{"title": "Insight: An open binary analysis framework\n", "abstract": " We present Insight, a framework for binary program analysis and two tools provided with it: CFGRecovery and iii. Insight is intended to be a full environment for analyzing, interacting and verifying executable programs. Insight is able to translate x86, x86-64 and msp430 binary code to our intermediate representation and execute it symbolically in an abstract domain where each variable (register, memory cell) is substituted by a formula representing all its possible values along the current execution path. CFGRecovery aims at automatically rebuilding the program control flow based only on the executable file. It heavily relies on SMT solvers. iii provides an interactive and a (Python) programmable interface to a coherent set of features from the Insight framework. It behaves like a debugger except that the execution traces that are examined are symbolic and cover a collection of possible concrete executions at once\u00a0\u2026", "num_citations": "5\n", "authors": ["704"]}
{"title": "Improving firewalls using bric (k) s\n", "abstract": " The Internet Firewall is a central element in the security of any organizations network-infrastructure. The firewall provides administrators with the ability to police the network traffic between the Internet and the organizations intranet. To fulfill such a rigorous task firewalls should be theoretically well founded to provide a strong platform for improving network security. Our observation is, on the contrary, that current firewalls are based on a fair design, but with little or no regard to using any form of a formalized framework 1. Therefore we have set as our goal to provide a formalized framework for key elements of the firewall and thus increasing performance and providing a foundation that overall allows improved network security. In the following sections we first give a brief introduction to Internet firewalls. We then describe two specific projects of BRICSAalborg that are currently in progress. Finally we conclude and\u00a0\u2026", "num_citations": "4\n", "authors": ["704"]}
{"title": "Binary Program Analysis: Theory and Practice\n", "abstract": " Abstract Model: All unnecessary information for the analysis have been removed. Only necessary information remains.", "num_citations": "2\n", "authors": ["704"]}
{"title": "SPaCIFY: a Formal Model-Driven Engineering for Spacecraft On-Board Software\n", "abstract": " The aim of this article is to present a model- driven approach proposed by the SPaCIFY project for spacecraft on-board software development. This ap- proach is based on a formal globally asynchronous lo- cally synchronous language called Synoptic, and on a set of transformations allowing code generation and model verification.", "num_citations": "1\n", "authors": ["704"]}