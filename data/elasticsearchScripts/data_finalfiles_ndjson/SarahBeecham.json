{"title": "Tools used in Global Software Engineering: A systematic mapping review\n", "abstract": " ContextThis systematic mapping review is set in a Global Software Engineering (GSE) context, characterized by a highly distributed environment in which project team members work separately in different countries. This geographic separation creates specific challenges associated with global communication, coordination and control.ObjectiveThe main goal of this study is to discover all the available communication and coordination tools that can support highly distributed teams, how these tools have been applied in GSE, and then to describe and classify the tools to allow both practitioners and researchers involved in GSE to make use of the available tool support in GSE.MethodWe performed a systematic mapping review through a search for studies that answered our research question, \u201cWhich software tools (commercial, free or research based) are available to support Global Software Engineering?\u201d Applying a\u00a0\u2026", "num_citations": "150\n", "authors": ["1353"]}
{"title": "Transitioning from traditional to problem-based learning in management education: the case of a frontline manager skills development programme\n", "abstract": " Education providers experiment with different pedagogical strategies that depart from traditional modes of delivery. Problem-based learning (PBL), which enhances and leverages practitioners\u2019 competencies and skill-sets, is one such strategy. Transitioning to PBL can prove challenging for course design teams. This paper provides evidence-based insights into this transition by detailing how a management development programme for 10 frontline managers transitioned from traditional to pilot PBL delivery. Drawing on the six stages identified in the transition, and empirical data on the student experience, five conclusions on managing the transition to PBL were identified: (1) critical involvement and input of stakeholders external to the course design team; (2) need to adapt PBL for institutional, discipline and cohort fit; (3) importance of preparing the student cohort to cope with the inherent tensions of PBL; (4\u00a0\u2026", "num_citations": "42\n", "authors": ["1353"]}
{"title": "A validated ontology for global software development\n", "abstract": " The global software development (GSD) paradigm has, over the last 15\u00a0fifteen years, shifted from being novel and ground breaking to being widely adopted and mainstream. This wide adoption is partly owing to the many benefits provided by GSD, such as reduced labour costs, proximity to new markets and access to a diverse and experienced skills pool. Yet taking advantage of these benefits is far from straightforward, and research literature now includes a proliferation of guidelines, reviews and models to support the GSD industry. Although this active area of study is firmly established as a research area in its own right, the boundaries between general software engineering and GSD are somewhat confused and poorly defined. In an effort to consolidate our understanding of GSD, we have developed an ontology in order to capture the most relevant terms, concepts and relationships related to the goals, barriers\u00a0\u2026", "num_citations": "36\n", "authors": ["1353"]}
{"title": "LAPPI: A light\u2010weight technique to practical process modeling and improvement target identification\n", "abstract": " Understanding the current state of the software processes and their problem points is important. Without this understanding, software process improvement (SPI) resources may be allocated to less meaningful targets. SPI work can be challenging to initiate especially in small companies where resources and knowledge of SPI are often limited. The aim of the developed technique, LAPPI (A Light\u2010weight Technique to Practical Process Modeling and Improvement Target Identification), is to provide an easy to use, lightweight tool for process modeling and improvement target identification. The technique provides a suitable method that integrates with various SPI initiatives. The method used in the development of LAPPI is a nonformal variation of constructive research. LAPPI has been incrementally developed in multiple academia\u2010industry collaboration projects and by industry actors themselves. Our evaluation of the\u00a0\u2026", "num_citations": "34\n", "authors": ["1353"]}
{"title": "Artifact-based software process improvement and management: A method proposal\n", "abstract": " When it comes to software process improvement (SPI), process engineers look for SPI methods to support process analysis, design, realization, deployment, and management. Although a number of different SPI methods and models exist, process engineers tend to view these as too generic, too large, or a poor fit for the organization in which SPI is conducted. A strategy to overcome these shortcomings is to concentrate on the artifacts, which precisely define the desired outcomes, rather than on specific methods. In this paper, we present the Artifact-based Software Process Improvement & Management (ArSPI) model that provides a unified perspective on SPI and company-wide software process management (SPM), the required key artifacts, and the life cycle models. ArSPI is shown to be of practical support to industry who called for a practical way to define the interfaces between SPI projects. This paper concludes\u00a0\u2026", "num_citations": "20\n", "authors": ["1353"]}
{"title": "Stakeholder Dissonance: Disagreements on project outcome and its impact on team motivation across three countries\n", "abstract": " When a project perceived to be a failure by one set of stakeholders is perceived as a success by another set of stakeholders we have outcome disagreement. Our objective is to discover if team motivation is affected when developers and managers disagree on a project's outcome. We also investigate if culture influences team motivation. We collected questionnaire data on 290 completed projects from software engineering practitioners based in Australia, Chile, and USA. We asked if the respondent considered their project was successful and if higher level management considered the project a success. We found that more projects were perceived successful by management than by developers. Also, successful projects are associated with higher levels of team motivation than failed projects or projects with outcome disagreement. Culture makes a difference to levels of team motivation for both failed projects, and\u00a0\u2026", "num_citations": "20\n", "authors": ["1353"]}
{"title": "A follow-up empirical evaluation of evidence based software engineering by undergraduate students\n", "abstract": " Context:  Evidence Based Software Engineering (EBSE) has recently been proposed as a methodology to help practitioners improve their technology adoption decisions given their particular circumstances. Formally, Systematic Literature Reviews (SLRs) are a part of EBSE. There has been a noticeable take up of SLRs by researchers, but little has been published on whether, and then how, the EBSE methodology has been applied in full. Objectives:  To empirically evaluate the use of EBSE by undergraduate students. To consider how insights into the students\u2019 performance with EBSE can be applied to software practitioners\u2019 expected performance with EBSE. To gain insights into the use of Supplementary EBSE Guidelines and associated Assessment Schemes. Method:  37 final-year undergraduate students completed a coursework assessment that required them to use EBSE to evaluate one or more of four Requirements Management Tools (RMTs): Telelogic DOORs\u00ae, Borland\u2019s Caliber\u00ae Analyst, Compuware Optimal Trace TM , and GODA ARTS. Students were provided with a range of EBSE resources, including a set of Supplementary EBSE Guidelines, to assist them with their EBSE evaluation. An Assessment Scheme was development to assess the degree to which students followed the Supplementary Guidelines. A feedback questionnaire, completed by 12 of the 37 students, complemented the Assessment Scheme. Results:  78% of students chose to evaluate a RMT that is currently a market leader. 62% of students subsequently recommended the adoption of their chosen RTM. Some students made a recommendation because the\u00a0\u2026", "num_citations": "18\n", "authors": ["1353"]}
{"title": "An empirical study of user preference and performance with UML diagrams\n", "abstract": " Elicitation and validation of user requirements depend, to a large extent, on the effectiveness of the tools and techniques used as a vehicle for discussion between developers and users during the requirements process. This effectiveness may, in turn, be influenced by user preference for a particular approach or requirements technique. This paper describes a study that was carried out to investigate the relationship between user preference for sequence or collaboration diagrams in UML, with their accuracy in understanding information contained in the diagrams. Results showed that user preference for one of the two diagram types before carrying out the task was not reflected in improved performance with that type of diagram compared with the other. However, after carrying out the task, user statements about which type of diagram they preferred working with were matched by improved performance with that type\u00a0\u2026", "num_citations": "18\n", "authors": ["1353"]}
{"title": "Using agents to manage socio-technical congruence in a global software engineering project\n", "abstract": " In Global Software Engineering (GSE) there are a number of communication and coordination challenges which are brought about by the factor of distance. Measuring Socio-Technical Congruence (STC) is, however, presented as a suitable technique for helping to resolve those issues. This leads us to believe that applying STC measurements to GSE might be beneficial, improving communication and coordination. However, after studying existing tools that use STC measurements, we detected some gaps, both in the way they measure STC and in the features offered by the tools for the GSE environment. That is why we have designed an Agent Architecture for coordination and communication that aims to fill the gaps found in the current tools and includes features adapted to GSE characteristics. This is achieved by taking advantage of the special features that agents offer. Moreover, this proposal has been\u00a0\u2026", "num_citations": "17\n", "authors": ["1353"]}
{"title": "Global software development: practices for cultural differences\n", "abstract": " Drivers for globalization are significant where today\u2019s organizations look for cheaper and faster ways to develop software as well as ways to satisfy quality and investment requirements imposed by customers, shareholders, and governments. Given these needs, Global Software Development (GSD) has become a \u201cnormal\u201d way of doing business. Working in GSD often require teams of different cultures to work together. A poor understanding of cultural differences can create barriers to trust or missed opportunities. The literature on culture in GSD is either outdated or disparate, requiring practitioners to read many papers to get an overview of how to manage multi-cultural teams. In this study, we aim to highlight how to increase cultural awareness within teams, avoid potential conflict and harness differences for improved team spirit. To answer our research question, \u201cHow should cultural differences be\u00a0\u2026", "num_citations": "12\n", "authors": ["1353"]}
{"title": "Applying software process modeling to improve customer support processes\n", "abstract": " The quality of an organization's support services can be key to maintaining and extending its customer base and to its future survival. As such, support services need to be considered in software process improvement initiatives and not left as an afterthought or stand\u2010alone effort. However, to identify areas in need of improvement requires a good understanding of the current process. To meet this need, we have developed a process modeling technique called LAPPI that documents current \u2018as\u2010is\u2019 processes. This study explores whether the LAPPI can identify opportunities for improvement in the customer service process. LAPPI is applied, step by step, in a small\u2010to\u2010medium\u2010sized enterprise. Results are validated through an analysis of customer satisfaction questionnaires administered before and after our LAPPI intervention. Applying the LAPPI highlighted several problems with the customer support service, which\u00a0\u2026", "num_citations": "12\n", "authors": ["1353"]}
{"title": "TWINS-This Workflow Is Not Scrum: Agile Process Adaptation for Open Source Software Projects\n", "abstract": " It is becoming commonplace for companies to contribute to open source software (OSS) projects. At the same time, many software organizations are applying Scrum software development practices, for productivity and quality gains. Scrum calls for self-organizing teams, in which the development team has total control over its development process. However, OSS projects typically have their own processes and standards, which might not mesh well with a company's internal processes, such as Scrum. This paper presents an experience report from Sony Interactive Entertainment (SIE), where the \"toolchain CPU compiler\" team directly participates in the \"LLVM\" OSS project. The team ran into a number of difficulties when using Scrum to manage their development. In particular, the team often failed to complete Scrum sprints where tasks required interaction with the open source community. We look at how the team\u00a0\u2026", "num_citations": "6\n", "authors": ["1353"]}
{"title": "An assessment of published evaluations of requirements management tools\n", "abstract": " Context: The traditional literature review is a low cost, relatively quick but potentially ineffective method for evaluating tools. Practitioners appear to place a greater emphasis on the practical constraints of an evaluation (e.g. that it is low cost and quick) and the efficacy of the technology to the company, rather than on generic scientific results. By contrast, academia appears to place greater emphasis on theory confirmation, rigour and validity, and their literature reviews focus on literature published in peer-reviewed journals and conferences, and tend not to consider the trade and \u2018grey\u2019 literature. Objectives: To assess the quality and quantity of published evaluations of requirements management tools (RMTs) reported in the academic, \u2018grey\u2019 and trade literatures. Method: Three independent literature reviews were conducted to identify published evaluations of RMTs. The three reviews were conducted by three different types of reviewers: a practitioner in a company, an experienced researcher, and 19 final-year undergraduate students. The researcher and the students followed a version of Evidence Based Software Engineering to undertake their literature reviews. The practitioner undertook an ad hoc literature review. Publications were then screened to select higherquality evaluations, which were then analysed to identify the RMTs evaluated. Results: The three literature reviews found a total of 28 evaluations referring to 14 RMTs, of which 6 evaluations were duplicates, giving 22 unique evaluations. Evaluations were identified between approximately the year 2000 and 2007, with an average of about 3 evaluations published per year\u00a0\u2026", "num_citations": "6\n", "authors": ["1353"]}
{"title": "Supplementary Guidelines, Assessment Scheme and evidence-based evaluations of the use of Evidence Based Software Engineering\n", "abstract": " For the last four years of the Empirical Evaluation in Software Engineering final year module on the BSc (Hons) Computer Science degree programme at the University of Hertfordshire, we have been teaching and assessing students\u2019 use of the Evidence Based Software Engineering (EBSE) methodology. To aid these students in their use of the EBSE methodology, we previously developed [6] and here refine a set of supplementary guidelines for the EBSE methodology. These supplementary guidelines are intended as a kind EBSE Lite, but based on Kitchenham\u2019s original guidelines on systematic reviews [2] and Dyb\u00e5 et al.\u2019s guidelines for practitioners [1]. We have also developed an assessment scheme. The assessment scheme could be used by a lecturer as part of a formal educational assessment; or by researchers, to investigate the use of the EBSE methodology;", "num_citations": "6\n", "authors": ["1353"]}
{"title": "Characterising users through an analysis of on-line technical support forums\n", "abstract": " Users of software systems need support. When users choose to go directly to online forums rather than report issues to the source of the problem, the development organization loses out in terms of gathering information on where their systems could be improved, and can lose customer loyalty and goodwill. This in turn will have a negative effect on future sales and system enhancements.                 The objective of this study is to examine online forums in order to characterize technical support (TS) users, and create a framework that allows commercial organizations (and other interested parties) to identify types of users and how best to address their needs.                 One hundred and sixteen threads (3,064 messages) from eight online open source forums were analysed using a grounded theory approach. Also the literature on human factors, and personalisation was examined to elicit information on how\u00a0\u2026", "num_citations": "4\n", "authors": ["1353"]}
{"title": "A requirements-based software process maturity model\n", "abstract": " The requirements phase of software development is an on-going problem for the software engineering community. The many disparate recommendations and best practices found in the literature make it difficult for software organisations to recognise which practices apply to their individual needs. The aim of this thesis is to pull together key solutions into a framework that allows practitioners to assess where their requirements process needs strengthening and to provide a means in which improvements can be achieved. In this thesis I show how I design, develop and validate a model of requirements engineering processes. This requirements capability maturity model (R-CMM) adheres to the characteristics of the Software Engineering Institute's Software Capability Maturity Model (SW-CMM) and is designed to take practitioners from an immature process capability through to an advanced capability. I contribute to the body of knowledge in both software process improvement and requirements engineering (RE) by providing rigorous detail of how a process maturity framework is developed to support RE practices. The model is generic and should apply to many software development organisations. The R-CMM guides users towards a view of RE that is based on goals and is problem driven. The SW-CMM framework is transformed into a simplified model that relates goals and problems to individual RE practises.", "num_citations": "4\n", "authors": ["1353"]}
{"title": "Convergent parallel design mixed methods case study in problem-based learning\n", "abstract": " This convergent parallel design mixed methods case study was conducted at the Kemmy Business School, University of Limerick in a Problem-based Learning (PBL) Certificate in Management (CIM) programme consisting of ten managers. This empirical research aimed to investigate and evaluate the development of ten management skills and four PBL roles in a tutorial process using a multi-phase convergent parallel design. This paper argues that mixed methods research is an accepted addition to conventional qualitative and quantitative research. It considers pragmatism a desirable philosophical companion for mixed methods and provides a framework for designing and conducting mixed methods research. Finally, it outlines how this mixed methods design contributes to high quality research and aids the answering of research questions. This paper is a work in progress; the researcher is currently working on mixed methods data analysis, interpretation and validation.", "num_citations": "3\n", "authors": ["1353"]}
{"title": "Knowledge engineering in global software development environments\n", "abstract": " Knowledge engineering in global software development environments | Expert Systems: The Journal of Knowledge Engineering ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Expert Systems: The Journal of Knowledge Engineering Periodical Home Latest Issue Archive Authors Affiliations Award Winners More HomeBrowse by TitlePeriodicalsExpert Systems: The Journal of Knowledge EngineeringVol. , No. Knowledge engineering in global software development environments article Knowledge engineering in global software development environments Share on Authors: Ivan Mistr\u00edk Software Systems Scientist, Germany Software Systems Scientist, Germany View Profile , Sarah Beecham Lero - The \u2026", "num_citations": "3\n", "authors": ["1353"]}
{"title": "On the use of coloured petri nets in problem oriented software engineering: the package router example\n", "abstract": " {In this paper, we present an approach to specification ofIT systems that combines the use of Coloured Petri Nets (CPN) andthe Problem Oriented Software Engineering (POSE) framework'an extension and generalisation of Jackson's Problem Frames to the solution of software engineering problems. Through the case study of a package routing system, we demonstrate how a CPN model can be used to make appropriate POSE descriptions and support a POSE argument for the adequacy of a problem's software solution. The suitability of CPN as a description language for POSE is discussed and demonstrated in the study. We found that the ability to execute CPN models offers potential for showing adequacy of solutions, a key aspect of software engineering. Topics. System design using nets; relationship between net theory and other approaches; experience with using nets; higher-level net models (CPN); application of nets to real-time and embedded systems; requirements engineering; Problem Oriented Software Engineering.},", "num_citations": "2\n", "authors": ["1353"]}