{"title": "Requirements elicitation: A survey of techniques, approaches, and tools\n", "abstract": " Requirements elicitation is the process of seeking, uncovering, acquiring, and elaborating requirements for computer based systems. It is generally understood that requirements are elicited rather than just captured or collected. This implies there are discovery, emergence, and development elements in the elicitation process. Requirements elicitation is a complex process involving many activities with a variety of available techniques, approaches, and tools for performing them. The relative strengths and weaknesses of these determine when each is appropriate depending on the context and situation. The objectives of this chapter are to present a comprehensive survey of important aspects of the techniques, approaches, and tools for requirements elicitation, and examine the current issues, trends, and challenges faced by researchers and practitioners in this field.", "num_citations": "648\n", "authors": ["1461"]}
{"title": "A maturity model for the implementation of software process improvement: an empirical study\n", "abstract": " Different advances have been made in the development of software process improvement (SPI) standards and models, e.g. capability maturity model (CMM), more recently CMMI, and ISO's SPICE. However, these advances have not been matched by equal advances in the adoption of these standards and models in software development which has resulted in limited success for many SPI efforts. The current problem with SPI is not a lack of standard or model, but rather a lack of an effective strategy to successfully implement these standards or models. The importance of SPI implementation demands that it be recognised as a complex process in its own right and that organizations should determine their SPI implementation maturity through an organized set of activities. In the literature, much attention has been paid to \u201cwhat activities to implement\u201d instead of \u201chow to implement\u201d these activities. We believe that\u00a0\u2026", "num_citations": "406\n", "authors": ["1461"]}
{"title": "Critical success factors for software process improvement implementation: an empirical study\n", "abstract": " In this article, we present findings from our recent empirical study of the critical success factors (CSFs) for software process improvement (SPI) implementation with 34 SPI practitioners. The objective of this study is to provide SPI practitioners with sufficient knowledge about the nature of issues that play a positive role in the implementation of SPI programmes in order to assist them in effectively planning SPI implementation strategies. Through our empirical study we identified seven factors (higher management support, training, awareness, allocation of resources, staff involvement, experienced staff and defined SPI implementation methodology) that are generally considered critical for successfully implementing SPI. We also report on a literature survey of CSFs that impact SPI and identify six factors (senior management commitment, staff involvement, staff time and resources, training and mentoring, creating process\u00a0\u2026", "num_citations": "319\n", "authors": ["1461"]}
{"title": "The impact of stakeholders' geographical distribution on managing requirements in a multi-site organization\n", "abstract": " The increasing globalization of software industry demands an investigation of requirements engineering (RE) in multisite software development organizations. Requirements engineering is a task difficult enough when done locally-but it is even more difficult when cross-functional stakeholder groups specify requirements across cultural, language and time zone boundaries. This paper reports on a field study that investigated RE challenges introduced by stakeholders' geographical distribution in a multi-site organization. The goal was to examine RE practice in global software development, to formulate recommendations for improvement as well as to provide directions for future research on methods and tools. Based on the empirical evidence, we have constructed a model of how remote communication and knowledge management, cultural diversity and time differences negatively impact on requirements gathering\u00a0\u2026", "num_citations": "276\n", "authors": ["1461"]}
{"title": "A systematic review on the relationship between user involvement and system success\n", "abstract": " ContextFor more than four decades it has been intuitively accepted that user involvement (UI) during system development lifecycle leads to system success. However when the researchers have evaluated the user involvement and system success (UI-SS) relationship empirically, the results were not always positive.ObjectiveOur objective was to explore the UI-SS relationship by synthesizing the results of all the studies that have empirically investigated this complex phenomenon.MethodWe performed a Systematic Literature Review (SLR) following the steps provided in the guidelines of Evidence Based Software Engineering. From the resulting studies we extracted data to answer our 9 research questions related to the UI-SS relationship, identification of users, perspectives of UI, benefits, problems and challenges of UI, degree and level of UI, relevance of stages of software development lifecycle (SDLC) and the\u00a0\u2026", "num_citations": "272\n", "authors": ["1461"]}
{"title": "Analysis of requirements volatility during software development life cycle\n", "abstract": " Investigating the factors that drive requirements change is an important prerequisite for understanding the nature of requirements volatility. This increased understanding will improve the process of requirements change management. We mainly focus on change analysis to identify and characterize the causes of requirements volatility. We apply a causal analysis method on change request data to develop a taxonomy of change. This taxonomy allows us to identify and trace the problems, reasons and sources of changes. Adopting an industrial case study approach, our findings reveal that the main causes of requirements volatility were changes in customer needs (or market demands), developers' increased understanding of the products, and changes in the organization policy. During the development process, we also examined the extent of requirements volatility and discovered that the rate of volatility was high at\u00a0\u2026", "num_citations": "239\n", "authors": ["1461"]}
{"title": "Reasoning about inconsistencies in natural language requirements\n", "abstract": " The use of logic in identifying and analyzing inconsistency in requirements from multiple stakeholders has been found to be effective in a number of studies. Nonmonotonic logic is a theoretically well-founded formalism that is especially suited for supporting the evolution of requirements. However, direct use of logic for expressing requirements and discussing them with stakeholders poses serious usability problems, since in most cases stakeholders cannot be expected to be fluent with formal logic. In this article, we explore the integration of natural language parsing techniques with default reasoning to overcome these difficulties. We also propose a method for automatically discovering inconsistencies in the requirements from multiple stakeholders, using both theorem-proving and model-checking techniques, and show how to deal with them in a formal manner. These techniques were implemented and tested in a\u00a0\u2026", "num_citations": "235\n", "authors": ["1461"]}
{"title": "Strategy for adopting information technology for SMEs: Experience in adopting email within an Indonesian furniture company\n", "abstract": " In order to adopt IT, SMEs need to consider drivers and barriers that can influence the IT adoption success. This paper proposes a guideline to assists SMEs in adopting IT. The guidelines are formulated based on existing literature and authors\u2019 experience in assisting Indonesian SMEs. An example of adopting email have been used to illustrate the process.", "num_citations": "196\n", "authors": ["1461"]}
{"title": "Mobile learning for science and mathematics school education: A systematic review of empirical evidence\n", "abstract": " The ubiquity, flexibility, ease of access and diverse capabilities of mobile technologies make them valuable and a necessity in current times. However, they are under-utilized assets in mathematics and science school education. This article analyses the high quality empirical evidence on mobile learning in secondary school science and mathematics education. Our study employed a Systematic Literature Review (SLR) using well-accepted and robust guidelines. The SLR resulted in the detailed analysis of 49 studies (60 papers) published during 2003\u20132016. Content and thematic analyses were used to ascertain pedagogical approaches, methodological designs, foci, and intended and achieved outcomes of the studies. The apps and technologies used in these studies were further classified for domain, type and context of use. The review has highlighted gaps in existing literature on the topic and has provided\u00a0\u2026", "num_citations": "185\n", "authors": ["1461"]}
{"title": "A framework for assisting the design of effective software process improvement implementation strategies\n", "abstract": " A number of advances have been made in the development of software process improvement (SPI) standards and models, e.g. Capability Maturity Model (CMM), more recently CMMI, and ISO\u2019s SPICE. However, these advances have not been matched by equal advances in the adoption of these standards and models in software development which hasresulted in limited success for many SPI efforts. The current problem with SPI is not a lack of standards or models, but rather a lack of an effective strategy to successfully implement these standards or models.In this paper we have focused on SPI implementation issues and designed three individual components in order to assist SPI practitioners in the design of effective SPI implementation initiatives. We have pulled together individual components under one SPI implementation framework (SPI-IF) using a bottom-up approach already familiar to many practitioners\u00a0\u2026", "num_citations": "160\n", "authors": ["1461"]}
{"title": "A study of the impact of requirements volatility on software project performance\n", "abstract": " Software development is considered to be a dynamic process where demands for changes seem to be inevitable. Modifications to software are prompted by all kinds of changes including changes to the requirements. This type of changes gives rise to an intrinsic volatility, which has several impacts on the software development lifecycle. This paper describes our findings of an extensive survey based empirical study of requirement volatility (RV) and its impact on software project performance. In particular, findings reveal that requirement volatility has a significant impact on schedule overrun and cost overrun in software projects. Our investigation also examined factors that contribute to the extent of requirement volatility and found that variables such as frequent communications between users and developers and usage of a definable methodology in requirements analysis and modeling have impact on the stability of\u00a0\u2026", "num_citations": "158\n", "authors": ["1461"]}
{"title": "An investigation into the notion of non-functional requirements\n", "abstract": " Although Non-Functional Requirements (NFRs) are recognized as very important contributors to the success of software projects, studies to date indicate that there is still no general consensus in the software engineering community regarding the notion of NFRs. This paper presents the result of an extensive and systematic analysis of the extant literature over three NFRs dimensions:(1) definition and terminology;(2) types; and (3) relevant NFRs in various types of systems and application domains. Two different perspectives to consider NFRs are described. A comprehensive catalogue of NFRs types as well as the top five NFRs that are frequently considered are presented. This paper also offers a novel classification of NFRs based on types of systems and application domains. This classification could assist software developers in identifying which NFRs are important in a particular application domain and for\u00a0\u2026", "num_citations": "154\n", "authors": ["1461"]}
{"title": "On the interplay between consistency, completeness, and correctness in requirements evolution\n", "abstract": " The initial expression of requirements for a computer-based system is often informal and possibly vague. Requirements engineers need to examine this often incomplete and inconsistent brief expression of needs. Based on the available knowledge and expertise, assumptions are made and conclusions are deduced to transform this \u2018rough sketch\u2019 into more complete, consistent, and hence correct requirements. This paper addresses the question of how to characterize these properties in an evolutionary framework, and what relationships link these properties to a customer's view of correctness. Moreover, we describe in rigorous terms the different kinds of validation checks that must be performed on different parts of a requirements specification in order to ensure that errors (i.e. cases of inconsistency and incompleteness) are detected and marked as such, leading to better quality requirements.", "num_citations": "140\n", "authors": ["1461"]}
{"title": "Teaching requirements engineering through role playing: Lessons learnt\n", "abstract": " Requirements engineering (RE) has attracted a great deal of attention from researchers and practitioners in recent years. This increasing interest demands academia to provide software engineering students with a solid foundation in the subject matter. RE is a multi disciplinary and communication rich activity in software development. The RE tools, methods and techniques to date have drawn upon a variety of disciplines, and the requirements engineers are increasingly expected to be well versed with these disciplines. In RE education, it is thus imperative to cover a wide range of topics and teach a variety of skills that one needs to know and acquire to be able to perform effective requirements engineering. We argue that in teaching RE, we must cover three fundamental topics: the traditional analysis and modelling skills, interviewing and groupware skills for requirements elicitation, and writing skills for specifying\u00a0\u2026", "num_citations": "138\n", "authors": ["1461"]}
{"title": "The Three Cs of requirements: consistency, completeness, and correctness\n", "abstract": " The initial expression of requirements for a computer-based system is often informal and possibly vague. Requirements engineers need to examine this often incomplete and inconsistent brief expression of needs. Based on the available knowledge and expertise, assumptions are made and conclusions are deduced to transform this \u201crough sketch\u201d into more Complete, Consistent, and hence Correct (the three Cs) requirements. This paper addresses the question of how to characterize these properties in an evolutionary framework, and what relationships link these properties to a customer\u2019s view of correctness. Moreover, we describe in rigorous terms the different kinds of validation checks that must be performed on different parts of a requirements specification in order to ensure that errors (ie, cases of inconsistency and incompleteness) are detected and marked as such, leading to better quality requirements.", "num_citations": "126\n", "authors": ["1461"]}
{"title": "A logical framework for modeling and reasoning about the evolution of requirements\n", "abstract": " We present a logical framework for modeling and reasoning about the evolution of requirements. We demonstrate how a sufficiently rich meta level logic can formally capture intuitive aspects of managing changes to requirements models, while maintaining completeness and consistency. We consider a theory as the deductive closure of a given set of axioms and conclude that software engineering is concerned, in essence, with, building and managing large theories. This theory construction commences with the development of the requirements model which we view as a theory of some nonmonotonic logic. Requirements evolution then involves the mapping of one such theory to another. Exploiting the deductive power of the theory of belief revision and nonmonotonic reasoning we develop a formal description of this mapping, as well as the requirements engineering process itself. This work thus offers a rigorous\u00a0\u2026", "num_citations": "126\n", "authors": ["1461"]}
{"title": "Using card sorting technique to classify requirements change\n", "abstract": " Requirements volatility is considered to be a major source of risk to the management of large and complex software projects. The ability to characterise the nature and origins of requirements change during software development is important and can lead organisations towards more effective management of changing requirements. This work focuses on a study to establish how practitioners classify requirements change requests. We used the card sorting method to identify categories of change requests that software developers use in practice. Card sorting is a knowledge elicitation method that is commonly used for capturing information about different ways of representing domain knowledge. This study has allowed us to get valuable insights into the way practitioners classify change requests and to understand their perspectives on classification. This classification is a valuable source of information in prioritizing\u00a0\u2026", "num_citations": "112\n", "authors": ["1461"]}
{"title": "User involvement in software development and system success: a systematic literature review\n", "abstract": " Context: In the last four decades involving users in the software development process is claimed to have a positive impact on the success of that software. However, previous reviews on this topic have produced conflicting results. Objectives: Our aim is to present a review on user involvement in software development process and investigate its relationship to software system success. Methods: For our exploration, we performed a Systematic Literature Review using the guidelines provided in the Evidence Based Software Engineering literature. Results: 87 relevant empirical studies were selected and reviewed that investigate various perspectives and concepts of user involvement in software development process during the period of 1980--2012. Among 87 studies reviewed, 59 report that user involvement positively contributes to system success, 7 suggest a negative contribution and 21 are uncertain\u00a0\u2026", "num_citations": "103\n", "authors": ["1461"]}
{"title": "Good requirements practices are neither necessary nor sufficient\n", "abstract": " The title of this essay was selected to create controversy among the readers and perhaps cause some of you to become defensive. However, we will try to go about demonstrating why we sincerely believe that good requirements practices are indeed neither necessary nor sufficient, even though we are devoted to the field of requirements as active researchers and practitioners. In fact, after you read this article, we trust that you too will say,\u2018\u2018Well, of course, I agree with you.\u2019\u2019To argue about the necessity or sufficiency of good requirements practices, we must first agree to (1) what is a requirements practice,(2) what is a good requirements practice,(3) what is the purpose of a requirements practice, and (4) what is it necessary and sufficient for? Only then can we argue why \u2018\u2018good\u2019\u2019requirements practices are neither necessary nor sufficient to achieve the intended purpose for requirements. There is little uniformity in\u00a0\u2026", "num_citations": "74\n", "authors": ["1461"]}
{"title": "Does global software development need a different requirements engineering process\n", "abstract": " Global software development exhibits certain features that make it fundamentally different from traditional co-located software development. These characteristics have an impact on the requirements engineering process. The traditional requirements engineering processes do not cater for the peculiarities of developing software over distance and across different time zones with different cultural boundaries. This paper advocates the development of a different RE process for global software development outlining some preliminary suggestions on what such process model would include.", "num_citations": "69\n", "authors": ["1461"]}
{"title": "A framework for reasoning about requirements evolution\n", "abstract": " We present a logical framework for modelling and reasoning about requirements evolution in the construction of information systems. Our framework represents a requirements model as a theory of some nonmonotonic logic, while requirements evolution is modelled as a mapping between such theories, based on the AGM logic of belief change [1]. We demonstrate our ideas by using the THEORIST system for nonmonotonic reasoning. Moreover we examine the Telos system for requirements modelling in terms of our framework, and we identify some obvious shortcomings and propose possible solutions. We argue that our framework provides a powerful tool both for analysing and comparing existing systems and for developing automated systems to support requirements evolution.", "num_citations": "66\n", "authors": ["1461"]}
{"title": "User satisfaction and system success: an empirical exploration of user involvement in software development\n", "abstract": " For over four decades user involvement has been considered intuitively to lead to user satisfaction, which plays a pivotal role in successful outcome of a software project. The objective of this paper is to explore the notion of user satisfaction within the context of the user involvement and system success relationship. We have conducted a longitudinal case study of a software development project and collected qualitative data by means of interviews, observations and document analysis over a period of 3\u00a0years. The analysis of our case study data revealed that user satisfaction significantly contributes to the system success even when schedule and budget goals are not met. The case study data analysis also presented additional factors that contribute to the evolution of user satisfaction throughout the project. Users\u2019 satisfaction with their involvement and the resulting system are mutually constituted while the\u00a0\u2026", "num_citations": "54\n", "authors": ["1461"]}
{"title": "Constructing a catalogue of conflicts among non-functional requirements\n", "abstract": " Non-Functional Requirements (NFRs) are recognized as a critical factor to the success of software projects because they address the essential issue of software quality. NFRs tend to interfere, conflict, and contradict with one another and this conflict is widely acknowledged as one of the key characteristics of NFRs. Several models of NFRs conflicts have been proposed and the interacting nature of NFRs has been characterized as either positive or negative inter-relationships among NFRs. Positive relationship represents a pair of NFRs that are supporting each other while negative relationship represents those NFRs that are conflicting with one another. Furthermore, as NFRs are also relative, the interpretation of NFRs may vary depending on many factors such as the context of the system being developed and the extent of stakeholders\u2019 involvement. The multiple interpretations of NFRs may lead to positive\u00a0\u2026", "num_citations": "51\n", "authors": ["1461"]}
{"title": "Using default reasoning to discover inconsistencies in natural language requirements\n", "abstract": " The use of logic in identifying and analysing inconsistency in requirements from multiple stakeholders has been found to be effective in a number of studies. Default reasoning is a theoretically well founded formalism that is especially suited for supporting the evolution of requirements. However, direct use of logic in eliciting requirements and in discussing them with stakeholders poses serious useability problems. In this paper we explore the integration of natural language parsing techniques with default reasoning to overcome these difficulties. We also propose a method for automatically discovering scenarios that expose inconsistencies in requirements, and show how to deal with them in a formal manner. These techniques were implemented and tested in a prototype tool called CARL.", "num_citations": "51\n", "authors": ["1461"]}
{"title": "Measuring the expressiveness of a constrained natural language: An empirical study\n", "abstract": " It has been suggested that constraining a natural language (NL) reduces the degree of ambiguity of requirement specifications written in that language. There is also a tendency to assume that an inescapable side effect of constraining a natural language is a subsequent reduction in its expressiveness. The primary objective of this paper is to describe a technique that we have developed for empirically measuring the expressiveness of a constrained natural language (CNL) when used to specify the requirements in a particular application domain. Our simple yet practical and repeatable technique elucidates the individual contribution that each lexical entity of the CNL can make on the overall expressiveness of the CNL This technique is particularly useful for designing new CNLs, as well as situations where tailoring or streamlining existing CNLs for particular application domains is needed.", "num_citations": "46\n", "authors": ["1461"]}
{"title": "A situational method engineering approach to requirements elicitation workshops in the software development process\n", "abstract": " The elicitation of requirements for software systems is one of the most critical and complex activities within the development lifecycle. Although the subject has received some degree of attention in the research literature, there remains a need for situational methods and processes that can be easily utilized by the majority of practitioners in typical projects. In this paper we present a flexible yet systematic approach to the early stages of requirements elicitation in software development, based on collaborative workshops and the construction of a lightweight situational method, within a general process framework. The research provides practitioners with an approach to requirements elicitation that can be readily applied to real\u2010world projects in order to improve both the process and the results. The work also offers researchers an example of how lightweight situational method engineering can be applied to very\u00a0\u2026", "num_citations": "43\n", "authors": ["1461"]}
{"title": "Sizing use cases: How to create a standard metrical approach\n", "abstract": " Use-case modelling provides a means of specifying external features of a system during requirements elicitation. In principle, use cases can be used to size the system about to be built but, for that, a standard format for their documentation is required. Furthermore, gathering use-case metrics requires a software development process that produces complete use-case descriptions in a repeatable way. Here, we set out the requirements for such a standardization so that use cases can be metricated. Once accomplished, it is possible to evaluate the important research questions of whether use-case attributes such as size and complexity can be controlled and whether use-case metrics are sufficiently rigorous for estimating effort. Finally, we note that this added rigour applied to use cases should improve the consistency and quality of communication between client and developer, helping to ensure that the right\u00a0\u2026", "num_citations": "43\n", "authors": ["1461"]}
{"title": "Systematic reviews in requirements engineering: A tertiary study\n", "abstract": " There has been an increasing interest in conducting Systematic Literature Reviews (SLR) among Requirements Engineering (RE) researchers in recent years. However, so far there have been no tertiary studies conducted to provide a comprehensive overview of these published SLR in RE. In this paper we present a tertiary study of SLR that focus solely on RE related topics by following the guidelines of Evidence Based Software Engineering. We have conducted both automated search of major online sources and manual search of the RE and SLR related conferences and journals. Our tertiary study has identified 53 distinct systematic reviews published from 2006 to 2014 and reported in 64 publications. We have assessed the resulting SLR for their quality, and coverage of specific RE related topics thus identifying some gaps. We have observed that the quality of SLR in RE has been decreasing over the recent\u00a0\u2026", "num_citations": "35\n", "authors": ["1461"]}
{"title": "Supporting traceability through affinity mining\n", "abstract": " Traceability among requirements artifacts (and beyond, in certain cases all the way to actual implementation) has long been identified as a critical challenge in industrial practice. Manually establishing and maintaining such traces is a high-skill, labour-intensive job. It is often the case that the ideal person for the job also has other, highly critical tasks to take care of, so offering semi-automated support for the management of traces is an effective way of improving the efficiency of the whole development process. In this paper, we present a technique to exploit the information contained in previously defined traces, in order to facilitate the creation and ongoing maintenance of traces, as the requirements evolve. A case study on a reference dataset is employed to measure the effectiveness of the technique, compared to other proposals from the literature.", "num_citations": "35\n", "authors": ["1461"]}
{"title": "The impacts of non-functional requirements in web system projects\n", "abstract": " In web system development, the Non-Functional Requirements (NFRs) are typically considered only briefly during the requirements elicitation stage and not rigorously articulated by either web developers or the client. This paper reports on an investigation into this issue involving interviews with web developers who were engaged in commercial web development projects. The results from this qualitative research highlight that web developers commonly do not pay sufficient attention to NFRs. This arises due to uncertainty, lack of time, lack of knowledge in the importance of NFRs and partly because NFRs are not readily available and documented from previous similar projects. Web developers also do not elicit NFR at the same time and at the same level of details as Functional Requirements (FRs). This study highlights that exploring the domain at an early stage of development will help developers to better\u00a0\u2026", "num_citations": "35\n", "authors": ["1461"]}
{"title": "A model for the implementation of software process improvement: A pilot study\n", "abstract": " Little attention has been paid in the literature on \"how to implement\" software process improvement (SPI) which has resulted in limited success for many SPI efforts. In this paper we report on our empirical study which explored the experiences and perceptions of practitioners about SPI implementation. We visited 11 companies and conducted 14 in-depth interviews. Using the different experiences and opinions of practitioners regarding SPI implementation, we have developed a model for the implementation of SPI programmes. This model has six phases - awareness, learning, pilot implementation, SPI implementation action plan, implementation across the organization and maintenance - and provides advice to practitioners in effectively implementing SPI programmes.", "num_citations": "34\n", "authors": ["1461"]}
{"title": "Impact of requirements volatility on the software development lifecycle\n", "abstract": " Impact of requirements volatility on the software development lifecycle \u2014 Macquarie University Skip to main navigation Skip to search Skip to main content Macquarie University Logo Help & FAQ Home Profiles Research Units Projects Research Outputs Prizes Activities Press / Media Impacts Search by expertise, name or affiliation Impact of requirements volatility on the software development lifecycle Didar Zowghi, Raymomd Offen, Nurmuliani Nurmuliani Department of Computing Research output: Chapter in Book/Report/Conference proceeding \u203a Conference proceeding contribution \u203a peer-review Overview Original language English Title of host publication Proceedings og Conference on Software Subtitle of host publication Theory and Practice Editors Yulin Feng, David Notkin, Marie-Claude Gaudel Place of Publication Beijing, China Publisher Publishing House of Electronics Industry Pages 19-27 Number of \u2026", "num_citations": "34\n", "authors": ["1461"]}
{"title": "An ontological framework to manage the relative conflicts between security and usability requirements\n", "abstract": " Non Functional Requirements (NFRs) are relative, so are the conflicts among them. In our previously developed catalogue of NFRs conflicts it can be observed that a number of specific pairs of NFRs are claimed to be in conflicts in some cases but they are also claimed not to be in conflict in the other cases. These relative conflicts occur because the positive or negative relationships among NFRs are not always clear and obvious. These relationships might change depending on the meaning of NFRs within the system being developed. This paper focuses on the application of ontology in managing the relative conflicts among NFRs, particularly the relative conflicts between security and usability requirements. The aim is to develop a framework to identify, characterize, and define corresponding resolution strategies for the security-usability conflicts. This paper thus describes the sureCM framework to manage these\u00a0\u2026", "num_citations": "33\n", "authors": ["1461"]}
{"title": "Utilizing topsis: A multi criteria decision analysis technique for non-functional requirements conflicts\n", "abstract": " Experience shows that many software systems suffer from inherent conflict among Non-Functional Requirements (NFRs). It also confirms that resolution strategies for handling NFRs conflicts often result in changing overall design guidelines, not by simply changing one module. Therefore, in software system development, software developers need to analyse the NFRs and conflicts among them in order to make decisions about alternative design solutions. This paper presents the use of Multi Criteria Decision Analysis (MCDA) approach for NFRs conflict decision analysis. TOPSIS (Technique for Order of Preference by Similarity to Ideal Solution), as one of the essential MCDA techniques has been adopted to resolve such conflict. We show how the systematic application of TOPSIS can assist software developers select the most preferable design solutions with respect to the conflicting NFRs. The quantitative\u00a0\u2026", "num_citations": "32\n", "authors": ["1461"]}
{"title": "Requirements change: What's the alternative?\n", "abstract": " Numerous studies have shown that a software projectpsilas cost, schedule and defect density escalate as the rate of requirements change increases. Yet none of these studies have explored the effects of not making requirements changes in response to changes in user needs. This paper explains why a project incurs just as much, if not more, risk when requirements changes are suppressed.", "num_citations": "32\n", "authors": ["1461"]}
{"title": "What makes service oriented requirements engineering challenging? A qualitative study\n", "abstract": " The focus of Service Oriented Software Development (SOSD) is to develop software by integrating reusable services to lower the required cost, time and effort of development and increase reusability, agility, quality and customer satisfaction. It has been recognised in the literature that SOSD faces various challenges especially in requirements engineering (RE). The objective of this study is to investigate these challenges of Service Oriented RE (SORE) from practitioners' perspectives in order to gain a deeper understanding of the related issues and to reveal potential gaps between research and practice in SORE. They present a qualitative study of the challenges and issues in SORE. The data were collected by conducting interviews with practitioners working in IT companies in Sydney, who have had substantial experience with service oriented software projects. The authors findings reveal that most of the\u00a0\u2026", "num_citations": "30\n", "authors": ["1461"]}
{"title": "Users' involvement in requirements engineering and system success\n", "abstract": " Involving users in software development in general, and in Requirements Engineering (RE) in particular, has been considered for over three decades. It is axiomatically believed to contribute significantly to a successful system. However, not much attention has been paid to ascertain in which phases of software development life cycle involvement or participation of users is most beneficial. In this paper we present an investigation into the concept of users' involvement during RE activities and explore its relationship with system success. We have conducted a systematic literature review (SLR) using guidelines of Evidence Based Software Engineering. Our SLR identified 87 empirical studies from the period of 1980 to 2012. Only 13 studies focused specifically on investigating users' involvement in RE and 9 of these confirmed benefits of involving users in requirements analysis and 4 remain inconclusive. Effective\u00a0\u2026", "num_citations": "30\n", "authors": ["1461"]}
{"title": "Managing conflicts among non-functional requirements\n", "abstract": " Abstract\u00e2 Non-functional requirements (NFRs) tend to interfere, conflict, and contradict with one other. Unlike functional requirements, this inevitable conflict arises as a result of inherent contradiction among various types of NFRs. A number of techniques to deal with this conflict have been developed. Majority of them focus on categorizing, documenting, or listing the potential conflicts among NFRs. Several models that represent the positive or negative relationships among NFRs have also been published in literature. However, the interpretation of NFRs may vary depending on numerous factors, such as the context of the system being developed and stakeholder involvement. Consequently, the relationships among them are not always obvious. This paper investigates the gaps in the existing research literature about the conflicts among NFRs and proposes a framework to manage this type of conflict.", "num_citations": "30\n", "authors": ["1461"]}
{"title": "On the role of ambiguity in RE\n", "abstract": " [Context and motivation] Ambiguity has long been pictured as one of the worst enemies of the specifier, especially with reference to ambiguity in natural language (NL) requirements specifications. [Question/problem] In this paper, we investigate the nature of ambiguity, and [Principal ideas/result] advocate that the simplistic view of ambiguity as merely a \u201cdefect\u201d that has to be avoided at all costs does not do justice to the complexity of this phenomenon. We also provide a finer classification of several types of ambiguities, distinguishing their different causes and effects in the development process. [Contribution] This better understanding can help in the analysis of practical experiences and in the design of more effective methods to detect, mark and handle ambiguity.", "num_citations": "28\n", "authors": ["1461"]}
{"title": "An exploration of IoT platform development\n", "abstract": " IoT (Internet of Things) platforms are key enablers for smart city initiatives, targeting the improvement of citizens\u2019 quality of life and economic growth. As IoT platforms are dynamic, proactive, and heterogeneous socio-technical artefacts, systematic approaches are required for their development. Limited surveys have exclusively explored how IoT platforms are developed and maintained from the perspective of information system development process lifecycle. In this paper, we present a detailed analysis of 63 approaches. This is accomplished by proposing an evaluation framework as a cornerstone to highlight the characteristics, strengths, and weaknesses of these approaches. The survey results not only provide insights of empirical findings, recommendations, and mechanisms for the development of quality aware IoT platforms, but also identify important issues and gaps that need to be addressed.", "num_citations": "27\n", "authors": ["1461"]}
{"title": "Project management capability levels: An empirical study\n", "abstract": " This paper outlines existing maturity models of project management and their underlying constructs. Organizations involved in software development in Sydney, Australia were interviewed about their project management practices and their responses analysed to determine whether different project managers used different levels of project management practices and whether the practices were in accordance with a process based maturity model. This did not seem to be the case, yet the data suggested that, as a possible alternative, a systems theory based approach might be more tenable. The overall conclusion, that a system theory based maturity model appears to be better correlated with organizational size and software development maturity than a process based maturity model, is briefly discussed and additional research is suggested that could investigate this novel conclusion further.", "num_citations": "27\n", "authors": ["1461"]}
{"title": "Empirical study of communication structures and barriers in geographically distributed teams\n", "abstract": " Conway's law asserts that communication structures of organisations constrain the design of the products they develop. This law is more explicitly observable in geographically distributed contexts because distributed teams are required to share information across different time zones and barriers. The diverse business processes and functions adopted by individual teams in geographically distributed settings create challenges for effective communication. Since the publication of Conway's law, a significant body of research has emerged in its relation to the communication structures. When it comes to software projects, the explicit observation about Conway's law has produced mixed results. The research reported in this study explores the communication structures and corresponding challenges faced by teams within a large geographically distributed software development organisation. The data was collected from\u00a0\u2026", "num_citations": "26\n", "authors": ["1461"]}
{"title": "A model for the implementation of software process improvement: An empirical study\n", "abstract": " Advances have been made in the development of software process improvement (SPI) standards and models, i.e. Capability Maturity Model (CMM), more recently CMMI, and ISO\u2019s SPICE. However, these advances have not been matched by equal advances in the adoption of these standards and models in software development which has resulted in limited success for many SPI efforts. The current problem with SPI is not a lack of a standard or model, but rather a lack of an effective strategy to successfully implement these standards or models. In the literature, much attention has been paid to \u201cwhat activities to implement\u201d rather than \u201chow to implement\u201d these activities. We believe that identification of only \u201cwhat activities to implement\u201d is not sufficient and that knowledge of \u201chow to implement\u201d is also required for successful implementation of SPI programmes.               The aim of this research paper is to\u00a0\u2026", "num_citations": "26\n", "authors": ["1461"]}
{"title": "Data completeness in healthcare: a literature survey\n", "abstract": " As the adoption of eHealth has made it easier to access and aggregate healthcare data, there has been growing application for clinical decisions, health services planning, and public health monitoring with daily collected data in clinical care. Reliable data quality is a precursor of the aforementioned tasks. There is a body of research on data quality in healthcare, however, a clear picture of data completeness in this field is missing. This research aims to identify and classify current research themes related to data completeness in healthcare. In addition, the paper presents problems with data completeness in the reviewed literature and identifies methods that have been adopted to address those problems. This study has reviewed 24 papers (January 2011\u2013April 2016) published in information and computing sciences, biomedical engineering, and medicine and health sciences journals. The paper uncovers three main research themes, including design and development, evaluation, and determinants. In conclusion, this paper improves our understanding of the current state of the art of data completeness in healthcare records and indicates future research directions.", "num_citations": "25\n", "authors": ["1461"]}
{"title": "Problems and challenges of user involvement in software development: an empirical study\n", "abstract": " Context: The benefits of involving users in software development projects have been studied extensively in the last four decades and have been reported to contribute to user satisfaction thus leading to system success. However, the relationship between user involvement and system success, being a multi-faceted and complex concept, has introduced many problems and challenges for the practitioners. Objective: In this paper we present our findings from a case study to give a deeper understanding of the challenges and problems of user involvement during software development. Method: The data in the case study was collected from interviews, observations and project documents. Results: We present our results in four main categories related to users, communicative aspects, managerial considerations, and project issues. It was observed that system success is achievable even when there are problems and\u00a0\u2026", "num_citations": "25\n", "authors": ["1461"]}
{"title": "Erratum to \u201cOn the interplay between consistency, completeness, and correctness in requirements evolution\u201d\n", "abstract": " The initial expression of requirements for a computer-based system is often informal and possibly vague. Requirements engineers need to examine this often incomplete and inconsistent brief expression of needs. Based on the available knowledge and expertise, assumptions are made and conclusions are deduced to transform this \u2018rough sketch\u2019 into more complete, consistent, and hence correct requirements. This paper addresses the question of how to characterize these properties in an evolutionary framework, and what relationships link these properties to a customer's view of correctness. Moreover, we describe in rigorous terms the different kinds of validation checks that must be performed on different parts of a requirements specification in order to ensure that errors (i.e. cases of inconsistency and incompleteness) are detected and marked as such, leading to better quality requirements.", "num_citations": "25\n", "authors": ["1461"]}
{"title": "Towards a Catalogue of Conflicts Among Non-functional Requirements.\n", "abstract": " Two of the most significant characteristics of non-functional requirements (NFRs) are \u201cinteracting\u201d and \u201crelative\u201d. Interacting means NFRs tend to interfere, conflict, and contradict with one other while relative means the interpretation of NFRs may vary depending on many factors, such as the context of the system being developed and the extent of stakeholder involvement. For the purpose of understanding the interacting characteristic of NFRs, several potential conflict models have been presented in the literature. These models represent the positive or negative inter-relationships among various types of NFRs. However, none of them deal with the relative characteristic of NFRs. In fact, multiple interpretations of NFRs in the system being developed may lead to positive or negative inter-relationships that are not always obvious. As a result, the existing potential conflict models remain in disagreement with one other. This paper presents the result of an extensive and systematic investigation of the extant literature over the notion of NFRs and conflicts among them. A catalogue of NFRs conflicts with respect to the NFRs relative characteristic is presented. The relativity of conflicts is characterized by three categories: absolute conflict; relative conflict; and never conflict. This catalogue could assist software developers in identifying the conflicts among NFRs, performing further conflict analysis, and identifying the potential strategies to resolve those conflicts.", "num_citations": "24\n", "authors": ["1461"]}
{"title": "Critical Barriers for software process improvement implementation: An empirical study\n", "abstract": " In this paper we present findings from our recent empirical study of software process improvement(SPI) implementation critical barriers(CBs) in twenty-six Australian software companies. The objective of this study is to summarise the issues that playa negative role in the implementation of SPI programmes and to identify the key barriers. Through our empirical study we identified 5 barriers (organizational politics, lack of support, lack of formal methodology, lack of awareness and lack of resources) that are generally considered critical in undermining the SPI implementation process. We also report on a literature survey that identified 6 barriers (lack of resources, inexperienced staffi'lack of knowledge, time pressure, organizational politics, SPI gets in the way of real work and staffturnover). We compared our empirical study results with the literature and confirmed the barriers identified by literature and also identified two new CBslack of SPI awareness and lack of formal methodologywhich were not identified in the literature. Finally, we analysed CBs identified by different groups of practitioners and found the level of agreement across all practitioners about CBs that undermine SPI implementation. Our results also provide advice to SPI managers and practitioner on what critical barriers to address when developing SPI implementation strategies.", "num_citations": "23\n", "authors": ["1461"]}
{"title": "Disorder and the Disinformation Society: The Social Dynamics of Information, Networks and Software\n", "abstract": " This book is the first general social analysis that seriously considers the daily experience of information disruption and software failure within contemporary Western society. Through an investigation of informationalism, defined as a contemporary form of capitalism, it describes the social processes producing informational disorder. While most social theory sees disorder as secondary, pathological or uninteresting, this book takes disordering processes as central to social life. The book engages with theories of information society which privilege information order, offering a strong counterpoint centred on\" disinformation.\" Disorder and the Disinformation Society offers a practical agenda, arguing that difficulties in producing software are both inherent to the process of developing software and in the social dynamics of informationalism. It outlines the dynamics of software failure as they impinge on of information workers\u00a0\u2026", "num_citations": "22\n", "authors": ["1461"]}
{"title": "Conflict characterization and analysis of non functional requirements: An experimental approach\n", "abstract": " Prior studies reveal that conflicts among Non Functional Requirements (NFRs) are not always absolute. They can also be relative depending on the context of the system being developed. Given that existing techniques to manage the NFRs conflicts are mainly focused on cataloguing the interrelationships among various types of NFRs, hence a technique to manage the NFRs conflicts with respect to NFRs relative characteristic is needed. This paper presents a novel framework to manage the conflicts among NFRs with respect to NFRs relative characteristic. By applying an experimental approach, the quantitative evidence of NFRs conflicts will be obtained and modeled. NFRs metrics and measures will be used in the experiments as parameters to generate the quantitative evidence. This evidence can then allow developers to identify and reason about the NFRs conflicts. We also provide an example of how this\u00a0\u2026", "num_citations": "22\n", "authors": ["1461"]}
{"title": "Teaching requirements elicitation interviews: an empirical study of learning from mistakes\n", "abstract": " Interviews are the most widely used elicitation technique in requirements engineering (RE). However, conducting a requirements elicitation interview is challenging. The mistakes made in design or conduct of the interviews can create problems in the later stages of requirements analysis. Empirical evidence about effective pedagogical approaches for training novices on conducting requirements elicitation interviews is scarce. In this paper, we present a novel pedagogical approach for training student analysts in the art of elicitation interviews. Our study is conducted in two parts: first, we perform an observational study of interviews performed by novices, and we present a classification of the most common mistakes made; second, we utilize this list of mistakes and monitor the students\u2019 progress in three set of interviews to discover the individual areas for improvement. We conducted an empirical study\u00a0\u2026", "num_citations": "19\n", "authors": ["1461"]}
{"title": "The role of conducting stakeholder meetings in requirements engineering training\n", "abstract": " One of the important challenges of Requirements Engineering education and training is how to prepare students for requirements elicitation activities with limited time and resources typically available in large undergraduate classes at tertiary institutions. In the last five years, we have been experimenting with variety of teaching and learning techniques to address this challenge. In this paper we describe our most recent effort in addressing this issue by redesigning our RE subject through a new format for elicitation and specification activities. Our findings suggest that the combination of role playing techniques and applying a systematic process for these activities are effective in achieving the expected learning outcomes.", "num_citations": "19\n", "authors": ["1461"]}
{"title": "Implementing software process improvement initiatives: An empirical study\n", "abstract": " In this paper we present findings from our empirical study of software process improvement (SPI) implementation. We aim to provide SPI practitioners with insight into designing appropriate SPI implementation initiatives in order to achieve better results. Thirty-four interviews were conducted with Australian practitioners. Three SPI implementation issues were investigated: reasons for embarking on SPI initiatives, SPI benefits to the management, and factors that play a positive role in SPI implementation.               We have found that most common reasons for embarking on SPI initiatives are to: improve the quality of software developed, reduce software development cost, and increase productivity. Our results show that 71% of the practitioners said that SPI initiatives provided clear benefits to the management. We have also found that most frequently cited SPI implementation factors are: SPI awareness, defined\u00a0\u2026", "num_citations": "19\n", "authors": ["1461"]}
{"title": "Learning from mistakes: An empirical study of elicitation interviews performed by novices\n", "abstract": " [Context] Interviews are the most widely used elicitation technique in requirements engineering. However, conducting effective requirements elicitation interviews is challenging, due to the combination of technical and soft skills that requirements analysts often acquire after a long period of professional practice. Empirical evidence about training the novices on conducting effective requirements elicitation interviews is scarce. [Objectives] We present a list of most common mistakes that novices make in requirements elicitation interviews. The objective is to assist the educators in teaching interviewing skills to student analysts. [Research Method] We conducted an empirical study involving role-playing and authentic assessment with 110 students, teamed up in 28 groups, to conduct interviews with a customer. One researcher made observation notes during the interview while two researchers reviewed the recordings\u00a0\u2026", "num_citations": "18\n", "authors": ["1461"]}
{"title": "Using goals to model strategy map for business IT alignment\n", "abstract": " Strategy Map (SM) is one of the widely used methods to create business aligned IT strategy map providing valuable insights to business executives. However, problem with strategy map method is that it is not easy to use which can lend itself to various interpretations. This is because linkages between the strategic objectives in the four strategy map perspectives are not explicit which makes SM ambiguous. Goal modelling approaches from Requirements Engineering (RE) have proven rigorous in elicitation and representation of information system requirements. In an attempt to make explicit the causal relationships of SM linkages meaningful this research proposes the use of goal modelling approach i*.", "num_citations": "18\n", "authors": ["1461"]}
{"title": "Teaching requirements engineering to the Bah\u00e1\u00ed students in Iran who are denied of higher education\n", "abstract": " The increasing interest in Requirements Engineering (RE) in recent years has motivated many academics to provide students with a broad knowledge of the fundamental principles of RE. In RE Education and Training (REET), it is imperative to cover a wide range of topics and teach a variety of skills. Major challenges of REET have already been well recognised and documented in the literature. Moreover, wide spread use of web-based education has caused an explosion of published literature related to distance education. When students are not collocated with the instructor and they themselves are geographically dispersed clearly exacerbates some of the well-known challenges of REET. In this paper I share the experiences gained in teaching an online postgraduate RE subject for the first time to students located in Iran. These students have been denied of basic human rights, specifically access to University\u00a0\u2026", "num_citations": "17\n", "authors": ["1461"]}
{"title": "Software development as a design or a production project: An empirical study of project monitoring and control\n", "abstract": " Purpose \u2013 The paper seeks to investigate whether project managers regard software development projects as design problems or production problems.Design/methodology/approach \u2013 Project management literature was examined to determine what evidence there should be to indicate whether a software development project was regarded as a problem to be solved or a product to be produced. Data were then collected through structured interview of project managers currently engaged in managing software development projects. The data were analysed to determine how project managers regarded their projects and whether this matched a theoretical expectation.Findings \u2013 The empirical data indicated that most project managers regard their projects as production problems, where it is assumed that the underlying problem is largely understood, the project encapsulated in a planned schedule of activities and\u00a0\u2026", "num_citations": "16\n", "authors": ["1461"]}
{"title": "User involvement in software development: The good, the bad, and the ugly\n", "abstract": " Merely involving the users in software development won't guarantee system success. User involvement is a complex, multifaceted phenomenon with a good side, a bad side, and an ugly side. A better, deeper understanding of those sides can help project managers develop responsive strategies for increasing user involvement's effectiveness.", "num_citations": "15\n", "authors": ["1461"]}
{"title": "Requirements elicitation for complex systems: Theory and practice\n", "abstract": " This chapter examines requirements elicitation for complex systems from a theoretical and practical perspective. System stakeholders, requirements sources, and the quality of requirements are presented with respect to the process, including an investigation into the roles of requirements engineers during elicitation. The main focus of the chapter is a review of existing requirements elicitation techniques and a survey of current trends and challenges. It is concluded with some views on the future direction of requirements elicitation in terms of research, practice and education. It is the intention of the authors that readers of this chapter will be sufficiently informed on the concepts, techniques, trends, and challenges of requirements elicitation to then apply this knowledge to system development projects in both industrial and academic environments.", "num_citations": "15\n", "authors": ["1461"]}
{"title": "Data quality and the Internet of Things\n", "abstract": " The Internet of Things (IoT) is driving technological change and the development of new products and services that rely heavily on the quality of the data collected by IoT devices. There is a large body of research on data quality management and improvement in IoT, however, to date a systematic review of data quality measurement in IoT is not available. This paper presents a systematic literature review (SLR) about data quality in IoT from the emergence of the term IoT in 1999 to 2018. We reviewed and analyzed 45 empirical studies to identify research themes on data quality in IoT. Based on this analysis we have established the links between data quality dimensions, manifestations of data quality problems, and methods utilized to measure data quality. The findings of this SLR suggest new research areas for further investigation and identify implications for practitioners in defining and measuring data quality in IoT.", "num_citations": "14\n", "authors": ["1461"]}
{"title": "How to combine requirements engineering and interaction design?\n", "abstract": " In this panel, we propose to figure out how requirements engineering and interaction design can be usefully combined. In particular, some people argue that scenarios/ use cases should be concrete, as in story-telling. Others argue for use of \"essential\" use cases as a methodological approach to interaction and user-interface design. Somewhat in the middle, it is argued that use cases should help acquiring the requirements in the first place. What should the practitioner believe and, in particular, do, in order to develop useful and usable software and systems? Software development and interaction design require different skills and different methods and are typically done by different people. Still, scenario-based design is proposed for several activities relevant for both tasks, such as requirements elicitation, software design, and interaction design. Symbolic modeling in this spirit is actually common to various fields\u00a0\u2026", "num_citations": "14\n", "authors": ["1461"]}
{"title": "Towards a collaborative and combinational approach to requirements elicitation within a systems engineering framework\n", "abstract": " Despite its critical importance to the process of systems development, requirements elicitation continues to be a major problem in both research and practice. This complex activity involving many different facets and issues is often performed badly and subsequently blamed for project failure and poor quality systems. In this paper, we present a collaborative and combinational approach to requirements elicitation within a systems engineering framework, proposing the application of current research from other disciplines in areas related to requirements elicitation, such as software engineering and the social sciences, to a general systems engineering context. The work provides both researchers and practitioners with an approach to requirements elicitation for systems engineering that can be applied to real world projects to improve both the process and results, thereby increasing the overall chance of successful\u00a0\u2026", "num_citations": "14\n", "authors": ["1461"]}
{"title": "ELICA: an automated tool for dynamic extraction of requirements relevant information\n", "abstract": " Requirements elicitation requires extensive knowledge and deep understanding of the problem domain where the final system will be situated. However, in many software development projects, analysts are required to elicit the requirements from an unfamiliar domain, which often causes communication barriers between analysts and stakeholders. In this paper, we propose a requirements ELICitation Aid tool (ELICA) to help analysts better understand the target application domain by dynamic extraction and labeling of requirements-relevant knowledge. To extract the relevant terms, we leverage the flexibility and power of Weighted Finite State Transducers (WFSTs) in dynamic modeling of natural language processing tasks. In addition to the information conveyed through text, ELICA captures and processes non-linguistic information about the intention of speakers such as their confidence level, analytical tone, and\u00a0\u2026", "num_citations": "13\n", "authors": ["1461"]}
{"title": "Service oriented requirements engineering: practitioner\u2019s perspective\n", "abstract": " Over a decade ago Service Oriented Architecture (SOA) was introduced to provide better alignment between business requirements and IT solutions. During this period a great deal of research interest has emerged from academia and industry alike, to promote this new style of software development. The promise was that SOA based development will improve reusability, agility, platform independence and dynamic discovery, reconfiguration and change management. In spite of all the promises and enhancement in tools and technologies, the service oriented software development continues to face various challenges especially in Requirements Engineering. In this paper we present a qualitative study of Service Oriented Requirements Engineering. Data was collected by conducting interviews with practitioners from IT companies in Sydney, who are experienced in working on SOA based projects. The\u00a0\u2026", "num_citations": "13\n", "authors": ["1461"]}
{"title": "Mining requirements links\n", "abstract": " [Context & motivation] Obtaining traceability among requirements and between requirements and other artifacts is an extremely important activity in practice, an interesting area for theoretical study, and a major hurdle in common industrial experience. Substantial effort is spent on establishing and updating such links in any large project \u2013 even more so when requirements refer to a product family. [Question/problem] While most research is concerned with ways to reduce the effort needed to establish and maintain traceability links, a different question can also be asked: how is it possible to harness the vast amount of implicit (and tacit) knowledge embedded in already-established links? Is there something to be learned about a specific problem or domain, or about the humans who establish traces, by studying such traces?                                [Principal ideas/results] In this paper, we present preliminary\u00a0\u2026", "num_citations": "13\n", "authors": ["1461"]}
{"title": "Optimal-constraint lexicons for requirements specifications\n", "abstract": " Constrained Natural Languages (CNLs) are becoming an increasingly popular way of writing technical documents such as requirements specifications. This is because CNLs aim to reduce the ambiguity inherent within natural languages, whilst maintaining their readability and expressiveness.             The design of existing CNLs appears to be unfocused towards achieving specific quality outcomes, in that the majority of lexical selections have been based upon lexicographer preferences rather than an optimum trade-off between quality factors such as ambiguity, readability, expressiveness, and lexical magnitude.             In this paper we introduce the concept of \u2019replaceability\u2019 as a way of identifying the lexical redundancy inherent within a sample of requirements. Our novel and practical approach uses Natural Language Processing (NLP) techniques to enable us to make dynamic trade-offs between quality\u00a0\u2026", "num_citations": "13\n", "authors": ["1461"]}
{"title": "Recover from information system failure: An Indonesian case study\n", "abstract": " Small and Medium Enterprises (SMEs) sometimes acquire information systems that fail to meet their original aims and objectives. In these circumstances, the project sponsors are forced to decide whether they should abandon the system they have paid for or improvise by finding a way around the problem. This paper presents a case study with two Indonesian SMEs who had to deal with information systems failure within their organizations. Although within the information systems literature reports of these types of failure can be found but little is known about the aftermath of failure within SMEs. This case study presents the actions taken by two Indonesian SMEs who had to face with the failure of their web catalogue systems. The notion of IS failure used in this paper is a combination of \"expectation failure\" and \"termination failure\".", "num_citations": "13\n", "authors": ["1461"]}
{"title": "Why is RE for web-based software development easier?\n", "abstract": " In this paper we identify the fundamental differences between webbased and conventional software engineering. We express our views about why we think requirements engineering for web-based application development should be easier than requirements engineering for conventional software development. We will examine the consequences of holding such a position and propose a more effective process model for web-based application development. Given that we hold such view, we believe that we can do a better job of requirements engineering than is currently being practiced in web-based application development. We conclude by showing why we believe this is a promising area for investing research efforts.", "num_citations": "13\n", "authors": ["1461"]}
{"title": "Characterising Requirements Volatility: An Empirical Case Study.\n", "abstract": " Requirements volatility is inevitable and is still perceived as a problem in software development projects, particularly in situations where competitive strategies and technologies are evolving rapidly. Investigating the characteristics of requirements volatility and its consequences is important as it can lead to the development of more effective strategies for managing requirements volatility.This paper describes the results of an industrial case study investigation into requirements volatility during the life cycle of a software development project. The characteristics of requirements volatility are identified using a simple mechanism that can be applied when analysing requirements change requests. In our previous work we developed a classification of requirements change and identified three main elements: Change Types, Reason Category, and Sources of Change. The results presented in this paper broaden that work in threefold: 1) to characterise the nature of requirements volatility, 2) to demonstrate that the classification enables us to characterise the nature of requirements volatility, in this case on a different software project, and 3) to visualise the extent of requirements volatility throughout the software development life cycle. This paper discusses the implications of the classification to better understand the requirements volatility problem.", "num_citations": "12\n", "authors": ["1461"]}
{"title": "Impacts of web systems on their domain\n", "abstract": " In web systems development, the business environment and processes not only drive the identification of system needs, but this environment and processes are also in turn fundamentally changed by the introduction or evolution of the system. This means that a web system during development will be highly volatile with a complex set of inter-dependencies with the various domain characteristics. We report on a detailed analysis of the literature related to these dependencies, and in particular the impacts that a Web system has on its environment. We also present a framework that encapsulates the dimensions of impact on both the internal and external business environment. From this analysis we show how different facets of the domain of a system are impacted in different ways. As the scale and immediacy of these impacts increase we need to become more predictive of these impacts in taking them into account during the development. Our analysis will provide organisations with the basis for moving towards this increased level of predictiveness. This analysis will also provide the organisations with a framework for developing strategies for joint development of system and business processes.", "num_citations": "12\n", "authors": ["1461"]}
{"title": "Users' voice and service selection: An empirical study\n", "abstract": " Service Oriented software development saves time by reusing existing services and integrates them to create a new system. But selecting a service that satisfies the requirements of all concerned stakeholders is a challenging task. The situation has been exacerbated within the past few years with huge number of services available that offer similar functionalities where the analysts require additional information for making better decision for service selection. User feedback analysis has recently gained a lot of attention for its potential benefits in various areas of requirements engineering. The aim of this research is to evaluate the impact of feedback provided by the end users of the services, on the decision making process for the service selection. In this paper we present an empirical study that utilizes user feedback analysis for selection of a service among 92 available services with similar functionalities. The results\u00a0\u2026", "num_citations": "11\n", "authors": ["1461"]}
{"title": "Requirements, Politics, or Individualism: What Drives the Success of COVID-19 Contact-Tracing Apps?\n", "abstract": " The year 2020 brought us the global pandemic of COVID-19, which is not just a health crisis but a disruption to the fabric of society around the world. With no vaccine yet approved, other measures have been taken all over the world related to lockdowns, social distancing, and contact tracing to quarantine the infected individuals and suppress community transmission. The numerous challenges presented by this novel coronavirus, such as the incubation period, various symptoms, and asymptomatic superspreaders, have exacerbated the challenges of manual contact tracing.", "num_citations": "10\n", "authors": ["1461"]}
{"title": "Learning requirements elicitation interviews with role-playing, self-assessment and peer-review\n", "abstract": " Interviews are largely used in the practice of requirements elicitation. Nevertheless, performing an effective interview often depends on soft-skills, and on knowledge acquired through experience. When it comes to requirements engineering education and training (REET), limited resources and few well-founded pedagogical approaches are available to allow students to acquire and improve their skills as interviewers. This paper presents a novel pedagogical approach that combines role-playing, peer-review and self-assessment to enable students to reflect on their mistakes, and improve their interview skills. We evaluate the approach through a controlled quasi-experiment. The study shows that the approach significantly reduces the amount of mistakes made by the students. Feedback from the participants confirms the usefulness and easiness of the proposed training. This work contributes to the body of\u00a0\u2026", "num_citations": "10\n", "authors": ["1461"]}
{"title": "How much authenticity can be achieved in software engineering project based courses?\n", "abstract": " Software engineering (SE) students not only need sufficient technical knowledge and problem solving ability but also social and interpersonal skills in order to be industry ready. To prepare the students for the 'real world' the SE educators frequently use 'Authentic Assessment' and 'Project Based Learning (PBL)' approaches in their curricula. However, the level of 'authenticity' should vary within PBL courses offered in different years of a degree program. In this paper, we present and discuss the results of the data collected and analyzed from the first SE course offered to the students. The aim of our research is to explore how much authenticity can be achieved in the first SE course. Our study was conducted at the University of Calgary with 64 software development project teams, totaling 229 undergraduate students. The data is collected from three semesters (2016-2018) in order to assess and monitor students\u00a0\u2026", "num_citations": "10\n", "authors": ["1461"]}
{"title": "Achieving data completeness in electronic medical records: a conceptual model and hypotheses development\n", "abstract": " This paper aims at proposing a conceptual model of achieving data completeness in electronic medical records (EMR). For this to happen, firstly, we draw on the model of factors influencing data quality management to construct our conceptual model. Secondly, we develop hypotheses of relationships between influencing factors for data completeness and mediators for achieving data completeness in EMR based on the literature. Our conceptual model extends the prior model for factors influencing data quality management by adding a new factor and exploring the relationships between the influencing factors within the context of data completeness in EMR. The proposed conceptual model and the presented hypotheses once empirically validated will be the basis for the development of tools and techniques for achieving data completeness in EMR.", "num_citations": "10\n", "authors": ["1461"]}
{"title": "Organisational readiness and software process improvement\n", "abstract": " The Capability Maturity Model Integration (CMMI) is a structured representation of software development processes that can support an organi-sation\u2019s software process improvement (SPI) strategies. However, CMMI and SPI initiatives generally exhibit low levels of adoption and limited success. One of the major reasons for these shortcomings is that many organisations undertake SPI initiatives without knowing whether or not they are ready to undertake them. Our previous research has enabled us to develop a software process improvement readiness model/framework to address this problem.               This paper reports on the implementation of the SPI readiness model in three large-scale case studies. We have found that organisations with higher CMMI levels are more ready for SPI initiatives than organisations with low CMMI levels. We suggest that organisations at higher CMMI levels have developed\u00a0\u2026", "num_citations": "9\n", "authors": ["1461"]}
{"title": "An empirical study of the antecedents of data completeness in electronic medical records\n", "abstract": " There is a body of research that highlights the role of data management to improve the quality of data, which in return improves organizational performance. The literature in data management has indicated the five theoretical constructs used to understand the factors influencing data quality, including top management support, capability on the regulation and process management, business-IT alignment, staff participation, and integration of information systems. However, it is unclear how these theoretical constructs can be utilized to understand the antecedents of data completeness as a dimension of data quality. Following that stream of research, the current paper examines the factors influencing data completeness in electronic medical records (EMR). The scope of this study is by only surveying medical professionals at healthcare settings in northern Nevada. The empirical results reveal that resources should be\u00a0\u2026", "num_citations": "8\n", "authors": ["1461"]}
{"title": "Feature based sentiment analysis for evaluating the mobile pedagogical affordances of apps\n", "abstract": " The launch of millions of apps has made it challenging for teachers to select the most suitable educational app to support students\u2019 learning. Several evaluation frameworks have been proposed in the research literature to assist teachers in selecting the right apps for their needs. This paper presents preliminary results of an innovative technique for evaluating educational mobile apps by analysing the feedback of past app users through the lens of a mobile pedagogical perspective. We have utilized a sentiment analysis tool to assess the opinions of the app users through the lens of the criteria offered by a rigorous mobile learning pedagogical framework highlighting the learners\u2019 experience of Personalization, Authenticity and Collaboration (iPAC). The investigation has provided initial confirmation of the powerful utility of the feature based sentiment analysis technique for evaluating the mobile pedagogical\u00a0\u2026", "num_citations": "8\n", "authors": ["1461"]}
{"title": "An approach for comparison of architecture level change impact analysis methods and their relevance in web systems evolution\n", "abstract": " Change impact analysis (CIA) methods have been developed to identify the consequences of making changes to system artifacts and to support decision making with regards to that change. There is a growing body of research on CIA methods that specifically addresses changes and their impacts at a system architecture level. Most of the methods have been developed and validated on software system domain. However, there is little research consensus on: (i) the features that architectural CIA methods should comprehensively address; and (ii) which existing methods are comparatively suitable in a particular system domain such as Web systems. This paper presents a comparison approache that offer guidance on the selection of the most appropriate method for CIA activity and suitability of these methods in the context of Web systems.", "num_citations": "8\n", "authors": ["1461"]}
{"title": "A requirements engineering process model based on defaults and revisions\n", "abstract": " In this paper requirements modelling is considered as the construction of logical theories of some nonmonotonic logic. Requirements evolution then involves the mapping of one such theory to another. Applying the deductive power of the theory of belief revision and default reasoning, both originally developed in artificial intelligence, this paper defines a formal framework for the management of changing requirements. This framework provides a simple yet complete model for requirement engineering process itself.", "num_citations": "8\n", "authors": ["1461"]}
{"title": "Ambiguity in requirements engineering: towards a unifying framework\n", "abstract": " A long stream of research in RE has been devoted to analyzing the occurrences and consequences of ambiguity in requirements documents. Ambiguity often occurs in documents, most often in natural language (NL) ones, but occasionally also in formal specifications, be it because of abstraction, or of imprecise designation of which real-world entities are denotated by certain expressions. In many of those studies, ambiguity has been considered a defect to be avoided. In this paper, we investigate the nature of ambiguity, and advocate that the simplistic view of ambiguity as merely a defect in the document does not do justice to the complexity of this phenomenon. We offer a more extensive analysis, based on the multiple linguistic sources of ambiguity, and present a list of real-world cases, both in written matter and in oral interviews, that we analyze based on our framework. We hope that a better\u00a0\u2026", "num_citations": "7\n", "authors": ["1461"]}
{"title": "Information technology adoption process within Indonesian SMEs: An empirical study\n", "abstract": " IT adoption within SMEs has been covered extensively within literature, most of which have considered IT adoption from narrow perspective such as drivers and barriers of IT adoption. IT adoption is better defined as a process which involves organisation and its components, stakeholders external to the organisation, and interactions within organisation and between organisation and its stakeholders. This paper uses multi perspective in IT adoption to build model of IT adoption. A field study involving 35 Indonesian SMEs was conducted in the form of semi structured interviews. The result from this field study were analysed and used to refine the proposed model. \u00a9 2005.", "num_citations": "7\n", "authors": ["1461"]}
{"title": "Power and politics of user involvement in software development\n", "abstract": " [CONTEXT] Involving users in software development is a complex and multi-faceted concept. Empirical research that studies power and politics of user involvement in software development is scarce.[OBJECTIVE] In this paper, we present the results from a case study of a software development project, where organizational politics was explored in context of user involvement in software development.[METHOD] We collected data through 30 interviews with 20 participants, attending workshops, observing project meetings, and analysing projects documents. The qualitative data was rigorously and iteratively analyzed.[RESULTS] The results indicate that the politics was a significant factor used to exert power and influence in decision-making processes. Communication channels were exploited for political purposes. These contributed to the users' dissatisfaction with their involvement thus impacting on the project\u00a0\u2026", "num_citations": "6\n", "authors": ["1461"]}
{"title": "Software and the social production of disorder\n", "abstract": " Software development is inherently an ordering process. When implemented in a workplace it orders the ways that people go about their work, the work they do, and the ways they interact and communicate with each other. This new mode of ordering may conflict with existing orders, existing distributions of power and knowledge, and arrangements of groups, and between groups. Ordering is almost always the subject of dispute, so software development can easily become enmeshed in the politicking between competing groups with deleterious effects. Removing all these conflicts may not be possible, as they can be an essential part of the ways relevant groups interact. Better communication, for example, may actually increase conflict, and not produce harmony. Rather than thinking of order and disorder as mutually exclusive polarities, it is more effective and realistic to think of them as constituting an `order/disorder\u00a0\u2026", "num_citations": "6\n", "authors": ["1461"]}
{"title": "Requirements engineering education and training: Key challenges and practical solutions\n", "abstract": " Academics and practitioners alike have long recognized the key challenges of requirements engineering education and training. This panel attempts to discuss these key challenges in details and provide an opportunity for a meaningful dialogue between academics and practitioners for identifying effective pedagogical paradigms, practical techniques and tools for teaching and learning requirements engineering principles.", "num_citations": "6\n", "authors": ["1461"]}
{"title": "What do experts think about elicitation?-A state of practice survey\n", "abstract": " OPUS at UTS: What do experts think about elicitation? - A state of practice survey - Open Publications of UTS Scholars Skip navigation OPUS at UTS | Open Publications of UTS Scholars Statistics Help About OPUS How to Deposit Managing Copyright Notice Browse UTS Organisational Groups Browse Items by: Issue Date Author Title Type ARC/NHRMC Funded Search OPUS 1.OPUS at UTS 2.Divisions & Centres 3.Office of DVC (Research) 4.General Collection What do experts think about elicitation? - A state of practice survey Coulin, CR Zowghi, D ORCID badge Permalink Export RIS format Publisher: Deakin University Publication Type: Conference Proceeding Citation: Proceedings the 10th Australian workshop on requirements engineering, 2005, pp. 1 - 10 Issue Date: 2005-01 Closed Access Filename Description Size Thumbnail 2005003306.pdf 1.07 MB Adobe PDF View/Open Copyright Clearance Process \u2026", "num_citations": "6\n", "authors": ["1461"]}
{"title": "Inquiry\u2010based mobile learning in secondary school science education: A systematic review\n", "abstract": " Recent years have seen a growing call for inquiry\u2010based learning in science education, and mobile technologies are perceived as increasingly valuable tools to support this approach. However, there is a lack of understanding of mobile technology\u2010supported inquiry\u2010based learning (mIBL) in secondary science education. More evidence\u2010based, nuanced insights are needed into how using mobile technologies might facilitate students' engagement with various levels of inquiry and enhance their science learning. We, therefore, conducted a robust systematic literature review (SLR) of the research articles on mIBL in secondary school science education that have been published from 2000 to 2019. We reviewed and analysed 31 empirical studies (34 articles) to explore the types of mIBL, and the benefits and constraints of mIBL in secondary school science education. The findings of this SLR suggest new research\u00a0\u2026", "num_citations": "5\n", "authors": ["1461"]}
{"title": "SaPeer and ReverseSaPeer: teaching requirements elicitation interviews with role-playing and role reversal\n", "abstract": " Among the variety of the available requirements elicitation techniques, interviews are the most commonly used. Performing effective interviews is challenging, especially for students and novice analysts, since interviews\u2019 success depends largely on soft skills and experience. Despite their diffusion and their challenging nature, when it comes to requirements engineering education and training (REET), limited resources and few well-founded pedagogical approaches are available to allow students to acquire and improve their skills as interviewers. To overcome this limitation, this paper presents two pedagogical approaches, namely SaPeer and ReverseSaPeer. SaPeer uses role-playing, peer review and self-assessment to enable students to experience first-hand the difficulties related to the interviewing process, reflect on their mistakes, and improve their interview skills by practice and analysis\u00a0\u2026", "num_citations": "5\n", "authors": ["1461"]}
{"title": "IoT smart city architectures: An analytical evaluation\n", "abstract": " while several IoT architectures have been proposed for enabling smart city visions, not much work has been done to assess and compare these architectures. By applying our proposed evaluation framework that incorporates a variety of 33 criteria, this paper presents a comparative analysis of nine existing well-known IoT architectures. The results of the analysis highlight the strengths and weaknesses of these architectures and give insight to city leaders, architects, and developers aiming at selecting the most appropriate architecture or their combination that may fit their own specific smart city development scenario.", "num_citations": "5\n", "authors": ["1461"]}
{"title": "Three integration approaches for map and B-SCP requirements engineering techniques\n", "abstract": " Integration of requirements engineering techniques has been common and proven beneficial. Map is a strategy-driven modelling technique that elicits requirements in terms of intentions and strategies. B-SCP is an approach to address alignment between requirements and business strategy. To address the problem of strategic requirements evolution in B-SCP, we have previously proposed the possibility of integrating Map with B-SCP. In this paper, we present three integration approaches for Map and B-SCP and evaluate their usefulness for two case studies: Seven Eleven Japan (SEJ) and CommSec Australia. SEJ presents an enterprise problem domain, while CommSec Australia presents a simple application domain. We find that each integration approach has advantages and disadvantages. We also conclude that the usefulness of each integration approach varies depending on the complexity of application\u00a0\u2026", "num_citations": "5\n", "authors": ["1461"]}
{"title": "Analysis of Requirements Volatility during Software Development Lifecycle\", in the proceeding of Australian Software Engineering Conference\n", "abstract": " \u201c\u00a9 2004 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works.\u201d", "num_citations": "5\n", "authors": ["1461"]}
{"title": "RE challenges in multi-site software development organisations\n", "abstract": " The increasing globalisation of the software industry demands an investigation of requirements engineering (RE) in multi-site software development organisations. Requirements engineering is a task difficult enough when done locally-but it is even more difficult when cross-functional stakeholder groups specify requirements across cultural, language and time zone boundaries. This paper reports on a field study that investigated RE challenges introduced by the stakeholders' geographical distribution in a multi-site organisation. The goal was to examine RE practices in global software development, and to formulate recommendations for improvement as well as to provide directions for future research on methods and tools. Based on the empirical evidence, we have constructed a model of how remote communication and knowledge management, cultural diversity and time differences negatively impact requirements\u00a0\u2026", "num_citations": "5\n", "authors": ["1461"]}
{"title": "An analysis of e-business systems impacts on the business domain\n", "abstract": " In e-business systems, the business environment and processes not only drive the identification of system needs, but also are in turn fundamentally changed by the introduction or evolution of a system. This means that an e-business system that is under development will be highly volatile with a complex set of impacts on the various domain characteristics (and conversely, the changes in the domain impact on the nature of the desired system). We report on a detailed analysis of the literature related to these impacts. From this analysis we show how different facets of the domain of a system are impacted in different ways. As the scale and immediacy of these impacts increase we need to become more predictive of these impacts in taking them into account during the development. Our analysis will provide organisations with the basis for moving towards this increased level of predictiveness.", "num_citations": "5\n", "authors": ["1461"]}
{"title": "Inspectors academy: pedagogical design for requirements inspection training\n", "abstract": " The core aim of requirements inspection is to ensure the high quality of already elicited requirements in the Software Requirements Specification. Teaching requirements inspection to novices is challenging, as inspecting requirements needs several skills as well as knowledge of the product and process that is hard to achieve in a classroom environment. Published studies about pedagogical design specifically for teaching requirements inspection are scarce. Our objective is to present the design and evaluation of a postgraduate course for requirements inspection training. We conducted an empirical study with 138 postgraduate students, teamed up in 34 groups to conduct requirements inspection. We performed qualitative analysis on the data collected from students\u2019 reflection reports to assess the effects of the pedagogical design in terms of benefits and challenges. We also quantitatively analyze the correlation\u00a0\u2026", "num_citations": "4\n", "authors": ["1461"]}
{"title": "Theoretical support for enhancing data quality: Application in electronic medical records\n", "abstract": " \u00a9 2018 Association for Information Systems. All rights reserved. This paper aims at reviewing the existing theoretical support to enhance data quality and utilizing the findings of the review in the context of electronic medical records (EMRs). For this to happen, we first conducted a survey of publications that have a focus on an empirical investigation of factors influencing data quality in the conceptual models. By using a well-established taxonomy development method from the discipline of information systems, we then proposed 3 dimensions for studying factors influencing data quality and constructing the conceptual model for enhancing data quality: breadth, depth, and interaction, within 9 characteristics under different dimensions. Last, we compared related studies using the proposed dimensions and utilized the findings of the review in enhancing EMRs quality to disclose the limitations and possibilities of new areas for further study.", "num_citations": "4\n", "authors": ["1461"]}
{"title": "MUSTER: A Situational Tool for Requirements Elicitation\n", "abstract": " In this chapter they present a collaborative and situational tool called MUSTER, that has been specifically designed and developed for requirements elicitation workshops, and which utilizes, extends, and demonstrates a successful application of intelligent technologies for Computer Aided Software Engineering and Computer Aided Method Engineering. The primary objective of this tool is to improve the effectiveness and efficiency of the requirements elicitation process for software systems development, whilst addressing some of the common issues often encountered in practice through the integration of intelligent technologies. The tool also offers an example of how a group support system, coupled with artificial intelligence, can be applied to very practical activities and situations within the software development process.", "num_citations": "4\n", "authors": ["1461"]}
{"title": "Problem frames and business strategy modelling\n", "abstract": " Requirements engineering describes how an IT implementation will support business functions. Most IT systems are operational in nature and typical requirements engineering techniques and methods are usually adequate in capturing and documenting the requirements for such systems. Jackson's problem frames is a technique that is suitable for straightforward IT systems descriptions. However, when an organization deploys an IT system that must deliver upon its competitive business strategy, then an appropriate technique or method needs to be used to capture that business strategy in order to connect it to business-critical IT requirements. Here we provide an overview of the use and adaptation of problem frames to connect requirements to business strategy. We found that a simplification of the problem frames notation was necessary and that to be really effective, we had to integrate problem fames with goal\u00a0\u2026", "num_citations": "4\n", "authors": ["1461"]}
{"title": "The role of conducting stakeholder meeting in requirements engineering techniques\n", "abstract": " One of the important challenges of Requirements Engineering education and training is how to prepare students for requirements elicitation activities with limited time and resources typically available in large undergraduate classes at tertiary institutions. In the last five years, we have been experimenting with variety of teaching and learning techniques to address this challenge. In this paper we describe our most recent effort in addressing this issue by redesigning our RE subject through a new format for elicitation and specification activities. Our findings suggest that the combination of role playing techniques and applying a systematic process for these activities are effective in achieving the expected learning outcomes.", "num_citations": "4\n", "authors": ["1461"]}
{"title": "A survey of issue resolution on the incremental refinement of the system scope in web system development\n", "abstract": " Increasingly, IT systems and Web systems in particular, fall into the class of applications where the scope of the application to be developed cannot be clearly articulated a priori. This is for a range of reasons, but is at least in part due to the complex inter-dependencies which exist between different aspects of the problem domain. While Whereas the core system requirements might be clear, the domain inter-dependencies lead to ancillary requirements which are only identified as the emerging system and its relationship to the domain are understood. A key mechanism in supporting the development of this understanding is the exploration of application pilots or prototypes, and the subsequent identification of solution or problem domain issues. The resolution of these issues will often play a crucial role in supporting the development of domain understanding and hence project scope. In this paper we explore this\u00a0\u2026", "num_citations": "4\n", "authors": ["1461"]}
{"title": "\" Affects\" of User Involvement in Software Development\n", "abstract": " For more than four decades, it has been widely accepted that user involvement (UI) during software system development is essential and that it contributes to system success. However, when the relationship between user involvement and system success (UI-SS) was empirically evaluated by many researchers, the results reported were not always positive [1]. Barki and Hartwick [2] defined user involvement as a \"Sub-jective psychological state reflecting the importance and personal relevance of a system to the user\", and user participation \"a set of behaviors or activities performed by users in the system de-velopment process\". So UI is related to the attitude and affects that users exhibit during software development. The UI-SS relationship has been studied from various per-spectives in software development, that is, psychological, mana-gerial, political, cultural, or methodological. Viewed from any perspective, the\u00a0\u2026", "num_citations": "3\n", "authors": ["1461"]}
{"title": "Towards understanding requirement evolution in a software product line an industrial case study\n", "abstract": " In most software development practices, software requirements and architecture are addressed simultaneously. The architecture may grow based on a core specification of requirements, and the requirements may also be elicited incrementally as the architecture gets more and more concrete. In this paper, we present a case study on the development history of Wingsoft Examination System Product Line (WES-PL), an active, industrial software product line with a history of more than eight years. We focus on 10 member products, 51 major versions that have been delivered to customer or archived in the repository between December 2003 and May 2012, by tracing both requirement and architectural changes. We identify a requirement change classification from the viewpoint of architectural impact. We claim that software requirements are negotiated and may be guided by existing software architecture design\u00a0\u2026", "num_citations": "3\n", "authors": ["1461"]}
{"title": "A process model of change impact analysis for web systems using design knowledge\n", "abstract": " Change impact analysis (CIA) approaches have been developed to identify the consequences of making changes to system artefacts and to support decision making with regards to those changes. There is a growing body of research on CIA approaches that specifically addresses changes and their impacts on architecture design. However, there is little research focus on approaches that particularly support the identification of impacts on architecture design resulting from business process changes ie early identification of change impacts in Web systems. In this paper we propose a process model of CIA (PMCIA) that employs design knowledge to support early identification of change impacts. This process model is described in three steps including analysing changes, tracing potential change impacts and implementing changes on architecture design. We also illustrate the process model through an exemplar case study.", "num_citations": "3\n", "authors": ["1461"]}
{"title": "Software versus IT service: A comparative study from requirements engineering perspective\n", "abstract": " Services are ubiquitous and are a critical element of the modern world economies. They play an increasingly important role in most industry sectors including Information Technology (IT). The essential differences between a software product and an IT Service are unclear. IT services are seldom offered in isolation and are often packaged and provided with software products. More so than before, IT service providers need to conduct a rigorous and systematic elicitation, and analysis of the needs and requirements of the intended users so that the resulting IT services are closely aligned with the enterprise business needs. This paper presents a comparative study of software and IT services from the Requirements Engineering (RE) perspective, both from process and product viewpoints. The overall aim of this compare and contrast is to investigate key similarities and differences between software and IT services in\u00a0\u2026", "num_citations": "3\n", "authors": ["1461"]}
{"title": "Towards a Classification of Requirements Relationships.\n", "abstract": " Requirements are related to and affect each other in many different ways. Developing a comprehensive knowledge of these relationships is an important part of understanding requirements. This paper proposes a classification of requirements relationships from several perspectives such as Feature Oriented, Aspect Oriented and Goal Oriented Approaches. We compare and contrast these relationship classifications and provide examples of each to increase our understanding of this complex phenomenon. This paper aims at integrating requirements relationship classifications from major bodies of work in requirements engineering and to improve awareness on the role they play in software testing practices.", "num_citations": "3\n", "authors": ["1461"]}
{"title": "A Lightweight Workshop-centric situational approach for the early stages of requirements elicition in software development\n", "abstract": " The elicitation of requirements for software systems is one of the most critical and complex activities within the development lifecycle. Although the subject has received some degree of attention in the research literature, there remains a need for situational methods and processes that can be easily utilized by the majority of practitioners in typical projects. In this paper we present a flexible, yet systematic approach to the early stages of requirements elicitation based on collaborative workshops, and the construction of a lightweight situational method within a general process framework. The research provides practitioners with an approach to requirements elicitation that can be readily applied to real-world projects in order to improve both the process and results. It also offers researchers an example of how lightweight situational method engineering can be applied to very practical activities and situations.", "num_citations": "3\n", "authors": ["1461"]}
{"title": "Analysing User Reviews of Inquiry-Based Learning Apps in Science Education\n", "abstract": " The science education community is increasingly valuing the use of mobile apps in inquiry-based learning (IBL) to improve learner\u2019 attitudes and their understanding of science concepts. Although there exists a body of research on mobile apps used for IBL in science education, limited attention has been paid to linking apps' features with their pedagogical affordances. Our study addresses this research gap by evaluating science mobile learning apps with respect to IBL pedagogy. Nine functional features of apps that support educational aspects of inquiry-based pedagogy are identified from user reviews, including: fingertip interaction, graphics visualisation, informative materials, location-based services, offline access, search by question, timeline scrolling, user tutorials, and zoom control. The information contained in the version history of the apps is analysed and four educational aspects of IBL supported by the\u00a0\u2026", "num_citations": "2\n", "authors": ["1461"]}
{"title": "SaPeer Approach for Training Students in Requirements Elicitation Interviews---Educational Material\n", "abstract": " SaPeer Approach for Training Students in Requirements Elicitation Interviews---Educational Material - DRO Home Library DRO home Submit research Contact DRO DRO SaPeer Approach for Training Students in Requirements Elicitation Interviews---Educational Material Ferrari, A, Spoletini, P, Bano, Muneera and Zowghi, D 2019, SaPeer Approach for Training Students in Requirements Elicitation Interviews---Educational Material, Zenodo, [Jeju Island, South Korea], doi: 10.5281/zenodo.2625706. Title SaPeer Approach for Training Students in Requirements Elicitation Interviews---Educational Material Creator(s) Ferrari, A Spoletini, P Bano, Muneera ORCID iD for Bano, Muneera orcid.org/0000-0002-1447-9521 Zowghi, D Year presented 2019 Event name International Requirements Engineering. Conference (2019 : 27th : Jeju Island, South Korea) Event location Jeju Island, South Korea Event start date 23 Sep \u2026", "num_citations": "2\n", "authors": ["1461"]}
{"title": "Dynamic visual analytics for elicitation meetings with elica\n", "abstract": " Requirements elicitation can be very challenging in projects that require deep domain knowledge about the system at hand. As analysts have the full control over the elicitation process, their lack of knowledge about the system under study inhibits them from asking related questions and reduces the accuracy of requirements provided by stakeholders. We present ELIC, a generic interactive visual analytics tool to assist analysts during requirements elicitation process. ELICA uses a novel information extraction algorithm based on a combination of Weighted Finite State Transducers (WFSTs) (generative model) and SVMs (discriminative model). ELICA presents the extracted relevant information in an interactive GUI (including zooming, panning, and pinching) that allows analysts to explore which parts of the ongoing conversation (or specification document) match with the extracted information. In this demonstration, we\u00a0\u2026", "num_citations": "2\n", "authors": ["1461"]}
{"title": "Ready-set-transfer! Technology transfer in the requirements engineering domain (panel)\n", "abstract": " Though the primary goal of requirements engineering research is to propose, develop, and validate effective solutions for important practical problems, practice has shown that successful projects take from 20-25 years to reach full industry adoption, while many projects fade and never advance beyond the initial research phase. In this interactive panel, teams of researchers, representing different requirements engineering research areas, bring ideas for technology transfer to a panel of industrial and government practitioners. The teams make interactive presentations and receive feedback from panelists. Beneath the game-show genre of the panel is the serious goal to foster conversation between practitioners and researchers to improve the effectiveness of technology transfer in the requirements engineering community.", "num_citations": "2\n", "authors": ["1461"]}
{"title": "Alignment between business requirements and services: the state of the practice\n", "abstract": " For over a decade, much research interest has been dedicated to promote service oriented software and system development by both academia and industry. The main aim of the service oriented development paradigm is to provide better alignment between business requirements and IT solutions. The vision behind the promotion of service oriented paradigm was to give solutions that will improve reusability, agility, platform independence and dynamic discovery, reconfiguration and change management. In spite of all the improvements in tools and technologies, the service oriented software development continues to face challenges especially in Requirements Engineering. In Service Oriented Requirements Engineering the alignment between the available services and the business requirements presents a significant challenge for requirements analysts. The service descriptions are not usually at the same level of granularity to that of business requirements. In such situations, the decision for service selection requires trade-off analysis between functional/non functional aspects and the cost of the system. In this paper we present the results of our exploratory qualitative study involving industrial interviews aimed at investigating and understanding the challenges of alignment in industrial settings. We conducted 14 interviews with practitioners in Sydney based software companies. According to the practitioners, technical solutions to this problem already exists both for alignment in component based and service oriented software development. But acceptable level of alignment between services and business requirements is often highly contextual\u00a0\u2026", "num_citations": "2\n", "authors": ["1461"]}
{"title": "Supporting integrated dependency model for change impact analysis in web systems\n", "abstract": " Change Impact Analysis (CIA) is typically used to identify the consequences of making a software change by utilizing the dependency and traceability information with regard to that change. Previous research highlights that CIA techniques are developed by both an understanding of interdependencies (between system components) as well as interaction of architectural modules. Given that Web systems (WS) are usually developed as a multi-tier and components based system, it is postulated that their multi-tier interaction and components interdependencies require different CIA methods. In this paper we propose extending current CIA techniques with the concept of an integrated dependency model to accommodate multi-tier and interoperability dependencies in WS. \u00a9 2008. Zafar Mehboob, Didar Zowghi and David Lowe.", "num_citations": "2\n", "authors": ["1461"]}
{"title": "A domain framework for representation of Web system impacts\n", "abstract": " In web systems development, the business environment, processes and the related Web systems are interdependent. The business domain not only drives the identification of system needs, but the business is fundamentally changed by the introduction or evolution of the system. This results in Web systems that are highly volatile with complex inter-dependencies with the business domain. In this paper we describe a framework which allows us to describe and structure these interdependencies, particularly focusing on the concept of mutual constitution. The result is a consistent terminology and a basis for more effective reasoning about the business consequences of introducing and changing Web systems.", "num_citations": "2\n", "authors": ["1461"]}
{"title": "GONDOLA: An interactive computer game-based teaching and learning environment for Requirements Engineering\n", "abstract": " As the field of Requirements Engineering continues to evolve, so too does the need to develop specialized educational programs that will provide student and novice requirements engineers with the required expertise and experience necessary to execute the tasks successfully. We follow on from previous work performed on role-playing for Requirements Engineering education with the development of Gondola: an interactive computer game-based teaching and learning environment for Requirements Engineering. In this paper we investigate how computer game-based systems are suitable as novel and innovative solutions to Requirements Engineering education. The focus however is on the presentation of the framework and guidelines we have developed for this environment, in addition to some of the key architectural components of the supporting tool. It is expected that the implementation of this environment will help improve Requirements Engineering education, and ultimately lead to better quality results in teaching, learning, and practice.", "num_citations": "2\n", "authors": ["1461"]}
{"title": "Applying Distributed Cognition Theory to Agile Requirements Engineering\n", "abstract": " \u00a9 2020, Springer Nature Switzerland AG. [Context & Motivation] Agile Requirements Engineering (ARE) is a collaborative, team-based process based on frequent elicitation, elaboration, estimation and prioritization of the user requirements, typically represented as user stories. While it is claimed that this Agile approach and the associated RE activities are effective, there is sparse empirical evidence and limited theoretical foundation to explain this efficacy. [Question/problem] We aim to understand and explain aspects of the ARE process by focusing on a cognitive perspective. We appropriate ideas and techniques from Distributed Cognition (DC) theory to analyze the cognitive roles of people, artefacts and the physical work environment in a successful collaborative ARE activity, namely requirement prioritization. [Principal idea/results] This paper presents a field study of two early requirements related meetings in an Agile product development project. Observation data, field notes and transcripts were collected and qualitatively analyzed. We have used DiCoT, a framework for systematically applying DC as a methodological contribution, to analyze the ARE process and explain its efficacy from a cognitive perspective. The analysis identified three main areas of cognitive effort in the ARE process as well as the significant information flows and artefacts. Analysis of these have identified that the use of physical user story cards, specific facilitator skills, and development of shared understanding of the user stories, were all key to the effectiveness of the ARE activity observed. [Contribution] The deeper understanding of cognition involved in ARE provides\u00a0\u2026", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Semi-automated extraction of new requirements from online reviews for software product evolution\n", "abstract": " In order to improve and increase their utility, software products must evolve continually and incrementally to meet the new requirements of current and future users. Online reviews from users of the software provide a rich and readily available resource for discovering candidate new features for future software releases. However, it is challenging to manually analyze a large volume of potentially unstructured and noisy data to extract useful information to support software release planning decisions. This paper investigates machine learning techniques to automatically identify text that represents users' ideas for new features from their online reviews. A binary classification approach to categorize extracted text as either a feature or non-feature was evaluated experimentally. Three machine learning algorithms were evaluated in the experiments: Na\u00efve Bayes (with multinomial and Bernoulli variants), Support Vector\u00a0\u2026", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Crowd vigilante\n", "abstract": " Crowdsourcing is a complex and sociotechnical problem solving approach for collaboration of geographically distributed volunteer crowd to contribute to the achievement of a common task. One of the major issues faced by crowdsourced projects is the trustworthiness of the crowd. This paper presents a vision to develop a framework with supporting methods and tools for early detection of the malicious acts of sabotage in crowdsourced projects by utilizing and scaling digital forensic techniques. The idea is to utilize the crowd to build the digital evidence of sabotage with systematic collection and analysis of data from the same crowdsourced project where the threat is situated. The proposed framework aims to improve the security of the crowdsourced projects and their outcomes by building confidence about the trustworthiness of the workers.", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Respecify: A requirements authoring tool harnessing CNL\n", "abstract": " This paper presents a novel framework for writing requirements specifications supported by a tool called Respecify which assists requirements engineers in identifying issues with ambiguity defects. The tool guides the requirements engineer to use a constrained natural language (CNL) which is structured to allow a requirements specification to be interpreted by the tool and rendered as several different diagrams which can expose a variety of defect types. The effectiveness of Respecify has been evaluated by conducting preliminary experiments in an industrial setting and the results have been promising.", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Industrial perspectives on architecture level change impact analysis in Web systems evolution\n", "abstract": " Change impact analysis (CIA) approaches are mostly developed based on the understanding of both system development process and system architecture. It is thus reasonable to assume that if the development process or system architecture is fundamentally different, then CIA approaches must address these differences accordingly. This is particularly relevant in the context of Web systems, given that these systems often have a specific set of characteristics related to differences both in the architecture and the process through which they are developed. To investigate this issue we have interviewed web designers/architects and reported the industrial perspectives on using current architecture CIA approaches. The interview findings reveal a set of elicited needs that an architecture CIA approach should address to be suitably adopted during Web systems evolution. Additionally, systematic classification of these\u00a0\u2026", "num_citations": "1\n", "authors": ["1461"]}
{"title": "A method for analysing web systems model alignment\n", "abstract": " The introduction or modification of IT systems will often lead to the need for consequential changes to the associated business processes. This is particularly true for Web systems, where the system can be much more deeply intertwined with the business processes. The failure to identify these potential impacts early on can lead to major delays or cost increases in the development process, and subsequent redevelopment as the IT system and business processes are appropriately modified to bring them into alignment. We believe that early modelling of the existing business processes, and their relationship to the IT systems, as well as the potential changes to these processes will allow the identification of misalignments in the model which are a reflection of likely misalignments which would exist in the actual processes if the changes were to be implemented. This then will allow rectification of the misalignment much earlier than is currently the case. It is worth noting that his does not necessarily require new modelling notations, but rather the use of existing notations in new ways combined with appropriate analysis tools. This research aims to demonstrate that this identification of misalignments can be achieved using existing modelling notations by applying algorithmic analysis to the information about the business process captured in the model. This can be achieved by integrating this analysis with modelling tools, and hence supporting the identification of likely flaws in a proposed changed business process before that process is actually implemented. This paper presents a proof of concept that demonstrates an approach to analysing the\u00a0\u2026", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Ten years of Australian workshop on requirements engineering\n", "abstract": " The Tenth year anniversary of the Australian workshop on requirements engineering took place in Melbourne, Australia on 22 November 2005. This annual meeting of Australian RE researchers and practitioners was inaugurated in 1996 as a result of increasing interest in RE around the world in general, and in Australia in particular. Its emergence signaled the need for a forum to express and exchange ideas, viewpoints and to facilitate the growth of the RE community in Australia. It has been gratifying to observe the consolidation and growth of RE research community facilitated by this workshop over the last 10 years. The workshop has provided an opportunity for both established researchers as well as research students to become informed of new research projects as well as the progress of existing projects on annual basis. Furthermore, every year AWRE has attracted submissions and presentations of many\u00a0\u2026", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Agent-Based Support for Requirements Elicitation\n", "abstract": " The elicitation of requirements is a difficult and expensive process but critical to the overall success of any system development. So far relatively little work has been devoted to providing intelligent tool support for this complex and labor-intensive activity. The quality of requirements from the elicitation process currently depends greatly on the experience and expertise of the participating requirements engineers, and the commitment and cooperation of the system stakeholders. In this paper we describe an agent-based approach to intelligent tool support for requirements elicitation. Given the multiple roles a requirements engineer must perform during elicitation, we suggest a multi-agent system may be developed as an intelligent assistant for this process. It is proposed that some of the tasks performed by requirements engineers during the elicitation process may be supported and in some cases automated by individual agents or several agents working cooperatively. It is expected that the use of intelligent agents would produce better requirements in terms of their completeness, correctness, consistency and clarity. This would be achieved partly by improving the elicitation process through greater efficiency with respect to time and cost, and increased effectiveness by way of rigorous and structured execution.", "num_citations": "1\n", "authors": ["1461"]}
{"title": "Understanding business impacts of web system prototypes\n", "abstract": " Commercial Web developers typically make extensive use of prototypes early in the development life cycle. Rather than supporting requirements validation or elicitation, one of the key objectives of this utilisation of prototypes is to support clients in understanding how the system under development may impact upon their business processes or even business models. Despite this there has been little research into understanding the extent and nature of clients interpretation of early prototypes and how they inform them about potential business impacts. In this paper we report on a pilot study aimed at identifying the key issues in this prototype exploration process, and in particular what aspects of the relationship between prototypes and business models should be considered further. Key outcomes include a number of unexpected indicators, such as pointers towards potential impacts that are not adequately addressed by current prototype exploration, and differences in the capabilities of clients versus developers in understanding system impacts. We also describe key open issues that need further investigation if we are to adequately understand this aspect of the Web development process.", "num_citations": "1\n", "authors": ["1461"]}