{"title": "Software Integration Model for Global Software Development\n", "abstract": " CONTEXT - Global Software Development (GSD) is an emerging trend to perform software development activities across national boundaries. Despite of the benefits gained from GSD, there are certain challenges associated with it. Among these challenges one of the critical challenge, which has got very little attention amongst the software engineering research community and industrial practitioners, is the integration of software products and components developed by distributed teams located at different locations. OBJECTIVE - The objective of this project is to develop a Software Integration Model (SIM) that will assist vendors to appropriately address the challenges and factors associated with software/product integration in all three stages i.e. before, during and after the integration process in GSD for different sized projects and various products types. METHODOLOGY - During first phase of the project we will\u00a0\u2026", "num_citations": "17\n", "authors": ["1560"]}
{"title": "Intercultural Challenges in offshore Software Development Outsourcing Relationships: A  Systematic Literature Review Protocol with Preliminary Results\n", "abstract": " Offshore software development outsourcing (OSDO) is an emerging business approach adopted by many software development organizations in developed countries. Developing software at offshore locations has many benefits including access to large labor pool, low development cost and round-the-clock development. However, inspite of these benefits OSDO presents a variety of challenges to the software development organizations including temporal, geographical and intercultural differences. Intercultural differences cause many problems to vendors in OSDO relationships. This research seeks to identify the potential intercultural challenges faced by vendors in OSDO relationships by reviewing the literature in a systematic way. We have developed a systematic literature review (SLR) protocol, and are in the process of implementing the protocol. SLR is based on a structured protocol, and is therefore, different\u00a0\u2026", "num_citations": "14\n", "authors": ["1560"]}
{"title": "Software Integration Challenges in Global Software Development Environment: A Systematic Literature Review Protocol\n", "abstract": " CONTEXT\u2013Global Software Development (GSD) is an emerging trend to perform software development activities across national boundaries. Despite of the benefits gained from GSD, there are certain challenges associated with it. Amongst these challenges one of the critical challenge, which has comparatively little attention in software engineering research community, is the integration of products and components developed by different teams at different locations. OBJECTIVE\u2013The objective of this paper is to design SLR protocol to identify the challenges associated with software/product integration based on project size and product type in GSD environment from vendor\u2019s perspective and to identify the factors to be addressed before, during and after the integration process by the vendor organisations.METHODOLOGY\u2013We will conduct a Systematic Literature Review (SLR) to identify the challenges and factors mentioned above. SLR is different from ordinary review because it is comparatively unbiased and is based on a predefined protocol.", "num_citations": "14\n", "authors": ["1560"]}
{"title": "An empirical investigation of the software integration success factors in GSD environment\n", "abstract": " Global software development (GSD) is in a booming stage from the last decade with the advances in information and communication technologies (ICTs). Despite of the benefits gained from GSD, the developer organizations still face a lot of difficulties in integrating the software components, developed by various GSD teams, into a final product. In our previous study we identified a list of nine critical success factors (CSFs) in the software integration process for GSD vendors, using systematic literature review (SLR) method. In order to validate findings of the SLR, we conducted an empirical study using a questionnaire survey in GSD industry. The findings of our industrial survey are mostly coherent with the SLR findings. However, there is a difference in ranks of the various CSFs across the two data sets (SLR and Industrial Survey).", "num_citations": "13\n", "authors": ["1560"]}
{"title": "Systematic mapping study on security approaches in secure software engineering\n", "abstract": " In the modern digital era, software systems are extensively adapted and have become an integral component of human society. Such wide use of software systems consists of large and more critical data that inevitably needs to be secured. It is imperative to make sure that these software systems not only satisfy the users' needs or functional requirements, but it is equally important to make sure the security of these software systems. However, recent research shows that many software development methods do not explicitly include software security measures during software development as they move from demand engineering to their final losses. Integrating software security at each stage of the software development life cycle (SDLC) has become an urgent need. Tackling software security, various methods, techniques, and models have been suggested and developed, however, only a few of them provide strong\u00a0\u2026", "num_citations": "5\n", "authors": ["1560"]}
{"title": "A Review on Multicriteria Decision Support System and Industrial Internet of Things for Source Code Transformation\n", "abstract": " The large scale increase of communication and number of devices in the Industrial Internet of Things (IIoT) has rapidly enabled practitioners to make decisions based on multicriteria. Multicriteria decision support systems (MCDSSs) play an important role in decision-making for a particular situation based on several criteria. Making of decision based on multicriteria is the main issues for research community and practitioners of the IIoT. Several decision support systems (DSSs) are offered for making decisions which have the potentiality to support the activities of the decision-making process. The suggested study shows a review on the existing decision support systems for the IIoT for source code transformation which will enable research community and practitioners of the industry to use the existing methods, tools, approaches, and techniques and to provide novel solutions for the smooth industry of Internet of Things.", "num_citations": "4\n", "authors": ["1560"]}
{"title": "Practices for software integration success factors in GSD environment\n", "abstract": " The use and size of software are both growing, due to the advances in ICTs, resulting in increased software complexity. The software vendors overcome this complexity by decomposing the product into different components and then these components are developed in-house, outsourced or purchased as off the shelf (OTS) components. The next step is to integrate these components into a final product. In our previous work we identified, through systematic literature review (SLR), a list of nine critical success factors (CSFs) for global software development (GSD) vendors in the software integration process. In order to implement the identified CSFs by GSD vendors, we conducted another SLR study and identified a total of 116 practices/solutions. These practices will assist GSD vendors in the implementation of the identified CSFs in order to overcome the complexity of the integration process in GSD projects.", "num_citations": "3\n", "authors": ["1560"]}
{"title": "Software Integration Challenges for GSD Vendors: An Exploratory Study Using a Systematic Literature Review.\n", "abstract": " The trend of software development has changed from local to global software development (GSD) due to advances in information and communication technologies (ICTs). Despite of the benefits gained from GSD, vendors also face challenges during the integration of components developed by global teams in isolation. The objective of the current study is to find out the list of critical challenges/barriers (CBs) that obstruct the integration process at any stage. To achieve the objective we conducted a systematic literature review (SLR) and extracted the data from 88 papers found in six digital libraries. A total of 16 barriers were found among which 10 barriers are ranked as CBs. Some of the top ranked barriers are \u201cLack of Communication\u201d,\u201cLack of Proper Documentation\u201d,\u201cLack of Compatibility\u201d and \u201cArchitecture Mismatch\u201d.", "num_citations": "2\n", "authors": ["1560"]}
{"title": "Software integration practices for GSD vendors-A systematic literature review protocol\n", "abstract": " The software development trend has changed from local to global software development (GSD) with the advances in information and communication technologies. This trend has brought some challenges along with the benefits gained from it. One of the technical challenge that GSD vendors faces is the integration of components developed by GSD teams. In our previous two studies we have identified the challenges, which GSD vendors needs to address and success factors that play positive role at any stage of integration. The objective of the current paper is to design systematic literature review (SLR) protocol for the identification of the practices and solutions needed to address the integration challenges and to implement the integration success factors. The identification of these practices will complete the second phase of our proposed software integration model (SIM). The SIM model will assist GSD vendors in effective integration of their software products.", "num_citations": "2\n", "authors": ["1560"]}
{"title": "The State of the Art on Secure Software Engineering: A Systematic Mapping Study\n", "abstract": " Secure Software Development (SSD) is becoming a major challenge, due to the increasing complexity, openness and extensibility of Information and Communication Technologies (ICTs). These make the overall security requirements analysis very difficult. Many techniques have been theoretically developed, however, there is a lack of empirical evidence of its application in building secure software system. A Systematic Mapping Study (SMS) has been conducted in this paper to examine the existence of software security frameworks, models and methods. In total, we selected 116 primary studies. After examining the selected studies, we identified 37 Secure Software Engineering (SSE) paradigms/frameworks/models. The results show that the most frequently used SSE frameworks/models are\" Microsoft Software Development Life Cycle (MS-SDL)\",\" Misuse case modeling\",\" Abuse case modeling\",\" Knowledge\u00a0\u2026", "num_citations": "1\n", "authors": ["1560"]}