{"title": "Support for Statistic Process Control of Software Process\n", "abstract": " The Statistical Process Control (SPC) has been adopted by software development organizations to improve process management and assessment. Without appropriate support tools and a process model to guide the organizations during to SPC, such practice is costly, considering the need to collect and analyze information from several process enactments. To aid in the SPC implementation, this paper proposes a standard process model and an approach for quantitative analysis of projects that was integrated to a Process-centered Software Engineering Environment.", "num_citations": "3\n", "authors": ["404"]}
{"title": "\u00c9 Poss\u00edvel Balancear Qualidade e Time-to-Deliver em Ambientes de Desenvolvimento de Software para Inova\u00e7\u00e3o?\n", "abstract": " The costs in quality are necessary for the permanence of an organization in the market. However, it conflicts with the software development for innovation context, which aim at lowering uncertainties regarding the problem domain, the envisioned solution and the business model. Balancing quality and required time-to-deliver is a challenge to software startups. They can benefit from quality improvements in source code and knowledge registering in the first stages of software development. These are still open research topics that academia can address.Resumo. Investir em qualidade \u00e9 condi\u00e7\u00e3o necess\u00e1ria para a longevidade de uma organiza\u00e7\u00e3o. Por\u00e9m, no contexto de desenvolvimento de software para inova\u00e7\u00e3o, o tempo e custo investido com pr\u00e1ticas de qualidade podem conflitar com a necessidade de diminuir o mais r\u00e1pido poss\u00edvel as incertezas acerca do problema, da solu\u00e7\u00e3o vislumbrada e do modelo de neg\u00f3cio. Balancear qualidade e demanda de curto time-to-deliver \u00e9 um desafio para startups, que podem tirar proveito de melhorias de qualidade relacionadas com c\u00f3digo fonte e registro de conhecimento ainda em est\u00e1gios iniciais do desenvolvimento. T\u00f3picos ainda em aberto para investiga\u00e7\u00e3o pela academia.", "num_citations": "1\n", "authors": ["404"]}
{"title": "Who is Right? Evaluating Empirical Contradictions in the Readability and Comprehensibility of Source Code\n", "abstract": " Context: Several code guidelines aim at providing a common perspective on the readability and comprehensibility of source code. However, in many cases, they are contradictory on how to improve these quality characteristics. Objective: To analyze the influence of three contradictory source code attributes\u2013indentation spacing, identifier length and code size\u2013on the source code readability and comprehensibility, interpreting whether programming experience and domain knowledge can support explaining these contradictions. Method: To perform an empirical study with software developers collecting quantitative (Likert scale) and qualitative data to assess the readability and comprehensibility of developers regarding Python snippets. To observe eventual perceptions contradictions and whether their levels of experience and knowledge have something to do with such contrary results. Results: Regardless their programming experience, 4-spaces indentation dominated the readability preference of participants. While the readability and comprehensibility preferences towards long and completeword identifiers were mostly true for both novice/experts, developers with more experience and low domain knowledge level seemed to be more affected by the length of identifiers. Furthermore, while all participants showed more positive comprehensibility perceptions for Pythin snippets with more lines of code, their readability perceptions regardnig code size were contradictory since the less experienced participants preferred more lines of code and the more experienced ones prefer fewer lines. Conclusion: The results presented in the technical literature\u00a0\u2026", "num_citations": "1\n", "authors": ["404"]}