{"title": "Agent oriented analysis using MESSAGE/UML\n", "abstract": " This paper presents the MESSAGE/UML agent oriented software engineering methodology and illustrates it on an analysis case study. The methodology covers MAS analysis and design and is intended for use in mainstream software engineering departments. MESSAGE integrates into a coherent AOSE methodology some basic agent related concepts such as Organization, role, goal and task, that have so far been studied in isolation. The MESSAGE notation extends the UML with agent knowledge level concepts, and diagrams with notations for viewing them. The proposed diagrams extend UML class and activity diagrams.", "num_citations": "480\n", "authors": ["580"]}
{"title": "Agent oriented software engineering with INGENIAS\n", "abstract": " INGENIAS is both a methodology and a set of tools for development of multi-agent systems (MAS). As a methodology, it tries to integrate results from other proposals and considers the MAS from five complementary viewpoints: organization, agent, tasks/goals, interactions, and environment. It is supported by a set of tools for modelling (graphical editor), documentation and code generation (for different agent platforms). INGENIAS is the result of the experience developing MAS in different areas, such as workflow management systems, recommender systems, Robocode teams, and PC assistants.", "num_citations": "429\n", "authors": ["580"]}
{"title": "A survey of programming languages and platforms for multi-agent systems\n", "abstract": " Research in Multi-Agent Systems (MAS) has recently led to the development of practical programming languages and tools that are appropriate for the implementation of such systems. Putting together this new programming paradigm is fast becoming one of the most important topics of research in multi-agent systems, in particular because this is an essential requirement for an eventual technology transfer.", "num_citations": "399\n", "authors": ["580"]}
{"title": "The INGENIAS methodology and tools\n", "abstract": " INGENIAS provides a notation for modeling multi-agent systems (MAS) and a well-defined collection of activities to guide the development process of an MAS in the tasks of analysis, design, verification, and code generation, supported by an integrated set of tools\u2014the INGENIAS Development Kit (IDK). These tools, as well as the INGENIAS notation, are based on five meta-models that define the different views and concepts from which a multi-agent system can be described. Using meta-models has the advantage of flexibility for evolving the methodology and adopting changes to the notation. In fact, one of the purposes in the conception of this methodology is to integrate progressive advances in agent technology, towards a standard for agent-based systems modeling that could facilitate the adoption of the agent approach by the software industry. The chapter presents a summary of the INGENIAS notation\u00a0\u2026", "num_citations": "328\n", "authors": ["580"]}
{"title": "A multi-agent system architecture for smart grid management and forecasting of energy demand in virtual power plants\n", "abstract": " Recent technological advances in the power generation and information technologies areas are helping to change the modern electricity supply system in order to comply with higher energy efficiency and sustainability standards. Smart grids are an emerging trend that introduce intelligence in the power grid to optimize resource usage. In order for this intelligence to be effective, it is necessary to retrieve enough information about the grid operation together with other context data such as environmental variables, and intelligently modify the behavior of the network elements accordingly. This article presents a multi-agent system model for virtual power plants, a new power plant concept in which generation no longer occurs in big installations, but is the result of the cooperation of smaller and more intelligent elements. The proposed model is not only focused on the management of the different elements, but includes a\u00a0\u2026", "num_citations": "215\n", "authors": ["580"]}
{"title": "FAML: a generic metamodel for MAS development\n", "abstract": " In some areas of software engineering research, there are several metamodels claiming to capture the main issues. Though it is profitable to have variety at the beginning of a research field, after some time, the diversity of metamodels becomes an obstacle, for instance to the sharing of results between research groups. To reach consensus and unification of existing metamodels, metamodel-driven software language engineering can be applied. This paper illustrates an application of software language engineering in the agent-oriented software engineering research domain. Here, we introduce a relatively generic agent-oriented metamodel whose suitability for supporting modeling language development is demonstrated by evaluating it with respect to several existing methodology-specific metamodels. First, the metamodel is constructed by a combination of bottom-up and top-down analysis and best practice. The\u00a0\u2026", "num_citations": "203\n", "authors": ["580"]}
{"title": "Development of intelligent multisensor surveillance systems with agents\n", "abstract": " Intelligent multisensor surveillance systems consist of several types of sensors, which are installed on fixed and mobile devices. These components provide a huge quantity of information that has to be contrasted, correlated and integrated in order to recognize and react on special situations. These systems work in highly dynamic environments, with severe security and robustness requirements. All these characteristics imply the need for distributed solutions. In these solutions, scattered components can decide and act with some degree of autonomy (for instance, if they become isolated), or cooperate and coordinate for a complete tracking of special situations. In order to cope with these requirements and to better structure the solution, we have decided to design surveillance system control as a multiagent system. This is done by applying an agent-orientated methodology, which is assessed with concrete scenarios.", "num_citations": "136\n", "authors": ["580"]}
{"title": "Model driven development of multi-agent systems\n", "abstract": " From a software engineering point of view, the agent paradigm has shown its potential for modelling in different domains. However, moving from agent models to implementation is not fully addressed by most agent-oriented methodologies in a systematic way. In most cases, they focus on the agent concept at the analysis level or look for visual or formal representations of elements present in an already implemented agent framework. Here we show that model driven development with agent-based models can facilitate the implementation of methods and tools for the development of multi-agent systems. This is illustrated with the INGENIAS methodology and its tools, the INGENIAS Development Kit (IDK), which are founded on the definition of the INGENIAS meta-models for multi-agent systems, and implement most of the facilities that a model driven development approach requires.", "num_citations": "127\n", "authors": ["580"]}
{"title": "A study of the relationship between weather variables and electric power demand inside a smart grid/smart world framework\n", "abstract": " One of the main challenges of today\u2019s society is the need to fulfill at the same time the two sides of the dichotomy between the growing energy demand and the need to look after the environment. Smart Grids are one of the answers: intelligent energy grids which retrieve data about the environment through extensive sensor networks and react accordingly to optimize resource consumption. In order to do this, the Smart Grids need to understand the existing relationship between energy demand and a set of relevant climatic variables. All smart \u201csystems\u201d(buildings, cities, homes, consumers, etc.) have the potential to employ their intelligence for self-adaptation to climate conditions. After introducing the Smart World, a global framework for the collaboration of these smart systems, this paper presents the relationship found at experimental level between a range of relevant weather variables and electric power demand patterns, presenting a case study using an agent-based system, and emphasizing the need to consider this relationship in certain Smart World (and specifically Smart Grid and microgrid) applications. View Full-Text", "num_citations": "122\n", "authors": ["580"]}
{"title": "Mobile tourist guide services with software agents\n", "abstract": " Applications for mobile devices have some restrictions because of the limited capabilities and heterogeneity of these devices. However, their communication capabilities allow the distribution of the application control and access to information in a network. If we also consider the changing environment when a user moves from one location to another, we should have software that is context-aware and able to adapt to new situations. Agent technology can support these requirements because of its distributed nature and the ability to combine flexible component architectures, some of them with planning and learning capabilities, which are appropriate for adapting to changing environments. In this paper we show one such application, a mobile tourist guide service, which has been built as a multi-agent system, where some agents are deliberative and combine the Beliefs-Desires-Intentions approach with\u00a0\u2026", "num_citations": "115\n", "authors": ["580"]}
{"title": "INGENIAS development kit: a visual multi-agent system development environment\n", "abstract": " The INGENIAS Development Kit, IDK from now on, is the development support tool for the INGENIAS methodology [2]. It is distributed as GPL software and developed in Java. The distribution can be downloaded from http://ingenias. sourceforge. net while updated versions are always available in the subversion repositores hosted within the INGENIAS sourceforge project. This tool was created in 2002 as part of a thesis on the modelling of Multi-Agent Systems [1]. The project is rather active and has originated around 5800 downloads since its creation. Compared to other development environments, it contributes with some original functionalities, like roundtrip features (generating code and managing the changes made to it), debugging facilities (breakpoints at the task level) and openness (possibility of integrating new functionality by means of plugins).", "num_citations": "84\n", "authors": ["580"]}
{"title": "Understanding the human context in requirements elicitation\n", "abstract": " The human context within which a software system will operate is fundamental for its requirements. It may not appear to be very much related to the system, but it is very relevant in achieving its successful adoption. However, requirements engineers have usually a background in Software Engineering and are not trained to elicit this kind of information. This situation raises the need for analytical tools to deal with these features. These tools should enable collaborative work between requirements engineers, who use them in development, social practitioners, who provide the knowledge and processes underlying these tools, and the customers, who know the domain and intended application of the projects. The framework presented in this paper is based on the socio-psychological Activity Theory and its analysis of human contexts. It includes a repository of social properties and a process to perform this\u00a0\u2026", "num_citations": "83\n", "authors": ["580"]}
{"title": "MESSAGE: Methodology for engineering systems of software agents\n", "abstract": " Agent technology is gaining more and more importance in the domain of telecommunication applications (eg EURESCOM P712, P815, P704, P810, P845; ACTS projects KIMSAC, AMASE, ABROSE, CLIMATE). The concepts and technology have been brought to a stage where they are useable in real applications, and there is a growing understanding of how to apply them to practical problems. To exploit this investment, the knowledge of where and how to employ agent-oriented ideas must become part of the repertoire of skills of the EURESCOM partners\u2019 software engineering teams.Software engineering (SE) methodologies have proved to be successful in increasing speed to market of software development projects, lowering the development cost and providing better quality. It is possible for small teams to apply SE principles informally, but for large projects a well-defined methodology is essential. Message is\u00a0\u2026", "num_citations": "73\n", "authors": ["580"]}
{"title": "Model driven development and simulations with the INGENIAS agent framework\n", "abstract": " The development of MAS can be facilitated with the introduction of simulations into the development process. The integration of simulations has been addressed by some agent oriented methodologies, generally defining mappings from the original Multi-Agent specification to concrete simulators like Repast or Sesame. This paper contributes with a deeper integration where the methodology becomes a generator of ad hoc simulators for the MAS under development. This is possible with the aid of Model Driven Engineering principles which derives executable Multi-Agent Systems automatically from a Multi-Agent System specification.", "num_citations": "56\n", "authors": ["580"]}
{"title": "Autonomous mission management\n", "abstract": " The present invention provides a distributed agent-based computer infrastructure configured to manage a mission of an unmanned vehicle that includes generating a mission plan and executing the mission plan. The computer infrastructure comprises an operator interface component, an autonomous mission management component and a vehicle systems interface component. The autonomous mission management component comprises agents configured for receiving information from an operator, for generating a mission plan from the received information including a path to be traveled, and for monitoring execution of the mission plan.", "num_citations": "55\n", "authors": ["580"]}
{"title": "A survey on agent-oriented oriented software engineering research\n", "abstract": " This chapter presents a selection of current research works on agent technology which are focused on the development of MAS. The purpose of this chapter is to guide developers through existing theories, methods, and software that can be applied in each stage of a development. However, this guide is not exhaustive due the amount of agent-related research works. Thus authors have added references to consult other information sources and complement the information given here. Readers are encouraged to consult these external references in order to obtain a more accurate view of the field.", "num_citations": "51\n", "authors": ["580"]}
{"title": "Reviewing microgrids from a multi-agent systems perspective\n", "abstract": " The construction of Smart Grids leads to the main question of what kind of intelligence such grids require and how to build it. Some authors choose an agent based solution to realize this intelligence. However, there may be some misunderstandings in the way this technology is being applied. This paper exposes some considerations of this subject, focusing on the Microgrid level, and shows a practical example through INGENIAS methodology, which is a methodology for the development of Agent Oriented systems that applies Model Driven Development techniques to produce fully functional Multi-Agent Systems. View Full-Text", "num_citations": "49\n", "authors": ["580"]}
{"title": "Testing and debugging of MAS interactions with INGENIAS\n", "abstract": " Testing and debugging activities are getting more relevance in multi-agent systems (MAS) as agents become part of real applications. Both activities are related, since failures to be debugged are frequently detected during the execution of tests. The support for these activities is not yet as complete as other activities of MAS development. However, agent oriented software engineering methodologies are incorporating new testing and debugging features. In this direction, the paper introduces advances made in the INGENIAS agent development framework towards a complete coverage of testing and debugging activities. The advances are compared with respect to a categorisation of related works in the agent literature. This categorisation will be useful for evaluating and planning issues for improvement in the context of INGENIAS.", "num_citations": "49\n", "authors": ["580"]}
{"title": "Modelling and simulation of social systems with INGENIAS\n", "abstract": " Most agent-based simulation toolkits are based on the Java programming language. This makes their use difficult for social scientists, who are usually not skilled in computer programming. However, agent modelling concepts are not unlike those which could be used for the modelling of social systems. This assumption is considered in proposing the use of a graphical agent-oriented language for the specification of social simulation models, and for transforming (automatically) these models to code for an agent-based simulation toolkit. In this manner, a social scientist could prepare social models in a more convenient way, and execute simulations on existing simulation toolkits, getting results back in terms of the model. This framework is built with a set of agent development tools, specifically, the INGENIAS Development Kit (IDK), which provides a customisable model editor and modules for automatic code generation.", "num_citations": "46\n", "authors": ["580"]}
{"title": "Methodologies for Developing Multi-Agent Systems.\n", "abstract": " As agent technology has matured with the deployment of a variety of applications, particularly in open and dynamic environments such as the web, several methodologies and tools have been proposed to support software engineers during the development process of such systems. This article takes an overall look at representative agent-oriented methodologies by considering how they support specific agent-related concepts. This serves to identify areas in which this technology has shown its potential to solve new problems, eg, the ability to manage complexity with an organizational perspective, goal-driven modelling as a way to build robust behaviors for adaptive systems, or the definition of notation and mechanisms to implement high-level interactions and protocols between agents. In order to be fully applicable, the challenge today is the maturity of supporting tools, and new methods for validation and\u00a0\u2026", "num_citations": "44\n", "authors": ["580"]}
{"title": "Requirements elicitation and analysis of multiagent systems using activity theory\n", "abstract": " Requirements elicitation and analysis is intended to gain knowledge about customers' needs and the environment of a software system. Requirements not only commonly deal with business processes and their data but also with the motivation behind these activities, the social structures that forge them, and previous design decisions. Recent studies show that the intentional and social concepts of agent-oriented software engineering (AOSE) could be used for the analysis of these aspects. Nevertheless, even having specialized modeling primitives for these requirements is not sufficient for their elicitation. Specialized analysis techniques are also required, but this is commonly overlooked by agent-oriented methodologies. This paper aims to provide the needed modeling primitives and support by means of the theoretical and methodological foundation of a social sciences framework, the activity theory, and its\u00a0\u2026", "num_citations": "43\n", "authors": ["580"]}
{"title": "Intelligent data analysis applied to debug complex software systems\n", "abstract": " The emergent behavior of complex systems, which arises from the interaction of multiple entities, can be difficult to validate, especially when the number of entities or their relationships grows. This validation requires understanding of what happens inside the system. In the case of multi-agent systems, which are complex systems as well, this understanding requires analyzing and interpreting execution traces containing agent specific information, deducing how the entities relate to each other, guessing which acquaintances are being built, and how the total amount of data can be interpreted. The paper introduces some techniques which have been applied in developments made with an agent oriented methodology, INGENIAS, which provides a framework for modeling complex agent oriented systems. These techniques can be regarded as intelligent data analysis techniques, all of which are oriented towards\u00a0\u2026", "num_citations": "42\n", "authors": ["580"]}
{"title": "Model transformation by-example: An algorithm for generating many-to-many transformation rules in several model transformation languages\n", "abstract": " Practitioners of model-driven engineering usually find that producing model transformations still requires much effort. The Model Transformation By-Example (MTBE) approach softens this problem by means of the automated creation of model transformations from pairs of source and target model examples. However, the current techniques and tools for MTBE are limited in the sense that they can only produce transformations rules that are limited to just one element in some of the patterns. In addition, some transformation languages cannot directly represent many-to-many transformation rules. To overcome both limitations, this paper presents a MTBE algorithm, that can generate many-to-many rules in several transformation languages even if the transformation language cannot directly represent these kinds of rules. In particular, the implementation of this algorithm with the ATL language is available for\u00a0\u2026", "num_citations": "40\n", "authors": ["580"]}
{"title": "Visual modeling for complex agent-based simulation systems\n", "abstract": " Currently there is a diversity of tools for agent-based simulation, which can be applied to the understanding of social phenomena. Describing this kind of phenomena with a visual language can facilitate the use of these tools by users who are not necessarily experts in computer programming, but in social sciences. With this purpose, we propose to define such visual language, which is based on well established concepts of agent-oriented software engineering, and more concretely on the INGENIAS methodology. The proposed language is independent of any particular simulation platform and, by using INGENIAS code generation support, it is possible to generate implementations for the desired target platforms. Also, we consider that modeling should be application domain oriented and that a generic language itself does not suffice. Thus, we discuss at the end how specific domain simulation environments\u00a0\u2026", "num_citations": "38\n", "authors": ["580"]}
{"title": "Understanding agent-oriented software engineering methodologies\n", "abstract": " For many years, the progress in agent-oriented development has focused on tools and methods for particular development phases. This has not been enough for the industry to accept agent technology as we expected. Our hypothesis is that the Agent-Oriented Software Engineering (AOSE) community has not recognized the kind of development methods that industry actually demands. We propose to analyze this hypothesis starting with a more precise definition of what an AOSE methodology should be. This definition is the first step for a review of the current progress of an illustrative selection of methodologies, looking for missing elements and future lines of improvement. The result is an account of how well the AOSE community is meeting the software lifecycle needs. It can be advanced that AOSE methodologies are far from providing all the answers industry requires and that effort has grounded mainly in\u00a0\u2026", "num_citations": "34\n", "authors": ["580"]}
{"title": "Activity theory for the analysis and design of multi-agent systems\n", "abstract": " Modeling a Multi-Agent System (MAS) involves a large number of entities and relationships. This implies the need for defining an organization, in order to structure and manage the complexity of the whole system. In this work we propose the use of human organization metaphors and their application to the verification of MAS specification. In concrete, we apply Activity Theory, which has its roots in Sociology, to study agent systems and obtain relationship patterns that can be applied to the analysis of MAS. These patterns guide analysis and design refinements, and help to detect inconsistencies. This technique has been implemented and integrated in the INGENIAS IDE platform, and proved with some case studies, in particular, for agent-based web applications.", "num_citations": "34\n", "authors": ["580"]}
{"title": "Meta-models for building multi-agent systems\n", "abstract": " This paper reports the experience of using meta-models for improving analysis and design activities in multi-agent system engineering. Four meta-models describing different views of the MAS such as organization view, agent, goals/tasks, and interactions are presented. Meta-models are described in UML MOF which make them compatible with current software engineering formalisms. Engineers may instantiate the meta-models to produce the entities that may appear in concrete MAS. These meta-models have been derived from several experimentations in MAS, which are briefly described in the paper. Engineering experience in using the meta-models for building MAS applications is also reported in the conclusions.", "num_citations": "34\n", "authors": ["580"]}
{"title": "The MESSAGE methodology for agent-oriented analysis and design\n", "abstract": " This chapter presents the MESSAGE agent-oriented software engineering methodology and illustrates it in an analysis and design case study. The methodology covers MAS analysis and design and is intended for use in mainstream software engineering departments. MESSAGE integrates into a coherent AOSE methodology basic agent-related concepts (such as organisation, role, goal, interaction, and task) that have so far been studied largely in isolation. The MESSAGE notation extends the UML with agent knowledge-level concepts and diagrams with notations for viewing them. The proposed diagrams extend UML class and activity diagrams. TheMESSAGE analysis and design process is based on the Rational Unified Process (RUP). The methodology distinguishes high-level from detailed design. An organisation-driven approach is presented for detailed design, where the global architecture of the MAS is\u00a0\u2026", "num_citations": "33\n", "authors": ["580"]}
{"title": "Intelligent data analysis for the verification of multi-agent systems interactions\n", "abstract": " Testing interactions in multi-agent systems is a complex task because of several reasons. Agents are distributed and can move through different nodes in a network, so their interactions can occur concurrently and from many different sites. Also, agents are autonomous entities with a variety of possible behaviours, which can evolve during their lives by adapting to changes in the environment and new interaction patterns. Furthermore, the number of agents can vary during system execution, from a few dozens to thousands or more. Therefore, the number of interactions can be huge and it is difficult to follow up their occurrence and relationships. In order to solve these issues we propose the use of a set of data mining tools, the ACLAnalyser, which processes the results of the execution of large scale multi-agent systems in a monitored environment. This has been integrated with an agent development toolset\u00a0\u2026", "num_citations": "32\n", "authors": ["580"]}
{"title": "The MESSAGE methodology\n", "abstract": " This chapter presents MESSAGE, an innovative agent oriented software engineering methodology, and it illustrates this methodology on an analysis and design case study. The methodology covers all phases of the software lifecycle, but focuses on MAS analysis and high-level design. It is intended for use in mainstream software engineering departments. MESSAGE integrates into a coherent AOSE methodology some basic agent related concepts such as organization, role, goal and task, that have so far been studied in isolation. The MESSAGE notation extends the UML with agent knowledge level concepts, and provides graphical notations for viewing them. The proposed diagrams extend UML class and activity diagrams.", "num_citations": "31\n", "authors": ["580"]}
{"title": "Programming multi-agent systems\n", "abstract": " PROMAS (Programming Multi-Agent Systems) is an AgentLink technical forum that aims to bring together the researchers and practitioners from both academia and industry to discuss the problems related to the development of multi-agent systems and to evaluate the existing proposals and results. The specific focus of this technical forum is on agent-oriented programming languages and tools that can effectively and efficiently support the implementation of multi-agent systems. This paper provides an overview of the main contributions and conclusions derived from the first two editions of PROMAS technical forum.", "num_citations": "30\n", "authors": ["580"]}
{"title": "A framework for the definition of metamodels for computer-aided software engineering tools\n", "abstract": " Computer-Aided Software Engineering (CASE) tools support modeling-related activities in development projects. Given the variety of tools and functionalities, it is quite common to work with several tools in the same project. However, data cannot usually be exchanged between these tools without loss of information. Recent approaches address this model interchange problem using metamodels to characterize the involved information and transformations to export/import it. Nevertheless, most of these solutions focus on the abstract syntax of models. They fail to consider aspects such as the presentation of models or tool-specific information, which are either disregarded or represented in ad-hoc ways that make difficult their processing. In order to overcome these limitations, this paper introduces a framework to define metamodels of CASE tools and a process to carry out the model interchange using them. The\u00a0\u2026", "num_citations": "29\n", "authors": ["580"]}
{"title": "Model integration in agent-oriented development\n", "abstract": " Each current agent-oriented methodology focuses on some aspects of multi-agent systems and may leave others aside. For this reason, a developer may find it useful to apply different specialised methods and tools for each aspect of the system under development. Nevertheless, the integration of different elements into a specification is not trivial. This paper proposes addressing this issue by using mappings between different modelling languages and an intermediate language. The use of this intermediate language called Unified Modelling Language for Activity Theory (UML-AT), reduces the number of required mappings. Being rooted in the Activity Theory (AT) framework, which comes from social sciences, UML-AT supports most of the key agent-related concepts found in literature. The application of this integration approach is illustrated with a case study about the implementation of Foundation for Intelligent\u00a0\u2026", "num_citations": "28\n", "authors": ["580"]}
{"title": "Metodolog\u00edas para el desarrollo de sistemas multi-agente\n", "abstract": " Apoy\u00e1ndose en los resultados de la investigaci\u00f3n en agentes y Sistemas Multi-Agente, surge una l\u00ednea de trabajo cuyo prop\u00f3sito es consolidar la experiencia adquirida en forma de metodolog\u00edas. Estas metodolog\u00edas proporcionan medios para construir Sistemas Multi-Agente de forma disciplinada y repetible. En este trabajo se presenta un resumen de lo que proponen las metodolog\u00edas actuales. Ante la imposibilidad de revisar todas y cada una de las existentes, se ha optado por seleccionar un conjunto significativo cercano a las pr\u00e1cticas de ingenier\u00eda del software. La selecci\u00f3n atiende a la presencia de un proceso de desarrollo, el combinar diferentes vistas para describir el sistema, e incorporar elementos asociados al \u00e1rea de los agentes. Como resultado, se tienen siete metodolog\u00edas relevantes. A lo largo del art\u00edculo, se estudian las aportaciones de estas metodolog\u00edas cara a un desarrollo.", "num_citations": "28\n", "authors": ["580"]}
{"title": "Meta-modelling in agent oriented software engineering\n", "abstract": " The MESSAGE methodology has shown that the application of meta-models in the development of Multi-Agent Systems (MAS) facilitates the integration of current software engineering processes and the use of agent technology concepts in analysis and design activities. This paper presents an extension to the MESSAGE meta-models and how to conduct the modelling (i.e., instantiation of the meta-models into a specific MAS) following the Unified Software Development Process, especially considering the importance of an incremental development and the role of the different meta-model entities in this process. This process is illustrated by an example.", "num_citations": "28\n", "authors": ["580"]}
{"title": "A multi-agent based implementation of a Delphi process\n", "abstract": " The Delphi protocol is applied when a community of experts is required to reach a consensus and to deliver an answer. In these cases, consensus stands for reaching an agreement among the experts about what the answer should be. This consensus reaching problem has been already considered in the literature, though its automatisation remains as a challenge. Intuitively, the experts should dialogue, interchange ideas, and change their mind as the discussion progresses. This paper presents the first complete-implementation of the Delphi process. This implementation is achieved with a Multi-agent System (MAS), in which the experts are implemented with agents. The presented case study solves the document relevance evaluation problem where a community of experts decide whether a document is relevant or not. In conclusion, this paper makes an important contribution to people using Delphi processes, because the presented system is the first complete-computerised Delphi process. With respect to multi-agent systems, it has the potential to solve coordination in an original way.", "num_citations": "26\n", "authors": ["580"]}
{"title": "Implementing multi-agent systems organizations with INGENIAS\n", "abstract": " In a multi-agent system, the organization determines the architecture of the whole system, and the way and policies for agent collaboration and interactions. Although this is a key element in the development process of this kind of systems, existing efforts in modeling organizations have not yet been integrated into common bodies of knowledge, neither into existing standards. This paper provides a study of general requirements for organization modeling during the analysis phase, and describes how this can be applied in the design and implementation of multi-agent systems. This is illustrated with a real example that has been developed with the INGENIAS methodology and tools, and implemented on the JADE agent platform.", "num_citations": "26\n", "authors": ["580"]}
{"title": "Guideline for the definition of EMF metamodels using an Entity-Relationship approach\n", "abstract": " Metamodels are a formalism for defining the abstract syntax of modeling languages. However, designing a suitable metamodel from the features intended for the language is not a trivial task. This paper presents a guideline for defining such metamodels using an Entity-Relationship approach in the Eclipse Modeling Framework. This guideline proposes to begin by determining the structural features of the language, such as types of relationships and elements with attributes. Subsequently, it offers alternative representations for these features aimed at satisfying different requirements, such as changeability or optimized model processing. Two case studies illustrate the use of the guideline and its trade-offs.", "num_citations": "25\n", "authors": ["580"]}
{"title": "Ingenias-scrum development process for multi-agent development\n", "abstract": " One of the key issues in development of Multi-agent System is following the more suitable development process for a particular problem. This means that development process models must be defined. Definition leads to better process understanding, facilitates process measurement and improvement, and constitutes the basis for automating the process itself. The main goal of this paper is the definition of a process for agent-based development. This definition is based on the Software Process Engineering Metamodel(SPEM) and applied in the definition of the software engineering process of INGENIAS MAS methodology following a SCRUM approach.", "num_citations": "23\n", "authors": ["580"]}
{"title": "Model transformations for improving multi-agent system development in INGENIAS\n", "abstract": " Agent-Oriented Software Engineering is currently deeply influenced by the techniques and concepts of Model-Driven Development. In this context, the use of automated transformations to support software processes is not explored enough. Models are supposed to be created following the activities of a process, which standard transformations could partially perform. The reduced use of transformations for this purpose is largely due to the high effort required for their development. To overcome this limitation, this paper presents an algorithm to generate model transformations by-example. It overcomes two common limitations of these approaches: the generation of many-to-many transformation between arbitrary graphs of elements; dealing with transformation languages that do not directly support graphs of elements in their source or target models. The algorithm has been implemented for the ATLAS\u00a0\u2026", "num_citations": "19\n", "authors": ["580"]}
{"title": "A tool for generating model transformations by-example in multi-agent systems\n", "abstract": " Many Multi-Agent Systems (MAS) methodologies incorporate a model-driven approach. Model Driven Engineering is based on three main ideas: models are the \u201cfirst-class citizens\u201d, meta-models define modelling languages that are used to specify models and models are transformed during the development. However, model transformation is still a challenging issue in MAS. At first, MAS designers are not necessarily familiar with existing model transformation languages or tools. Secondly, existing tools for creating model transformations do not satisfy the necessities of agent-oriented software engineering, since they focused on coding with little support for developers. This paper proposes a tool for the creation of model transformations that is based on the generation of model transformations by-example. This tool overcomes the limitations of other similar tools in the sense that it can generate many-to-many\u00a0\u2026", "num_citations": "19\n", "authors": ["580"]}
{"title": "An evaluation framework for MAS modeling languages based on metamodel metrics\n", "abstract": " The fast pace of evolution in Agent-oriented Software Engineering leads to a great variety of continuously changing Multi-Agent System (MAS) Modeling Languages (MLs). In this situation, there is a rising need of evaluation for MAS MLs, as the plenty of works on this subject reflects. This paper follows this line of research presenting an evaluation framework to measure quantitatively MAS MLs. The framework includes metrics about availability, specificity, and expressiveness of the MLs. Otherwise than existing frameworks, this work considers metamodels to define its measures and focuses on the quantitative measurement instead of qualitative evaluations. With these metrics and the data gathered from existing MLs, the goal is to quantify the appropriateness of a given MAS ML for a particular problem domain. In addition, these metrics can quantitatively track the improvements of MAS MLs on these features\u00a0\u2026", "num_citations": "19\n", "authors": ["580"]}
{"title": "A sociological framework for multi-agent systems validation and verification\n", "abstract": " Social and intentional behaviours appear as two main components of the agent paradigm. Methods of conventional software engineering do not seem to be appropriate to gain a full knowledge of these behavioural aspects, as they are not traditional software components. Their study involves new concepts and techniques, belonging to social sciences, to be integrated into software development. In this paper we show how to use the Activity Theory as a support for current Multi-Agent System methodologies. The application of the same social concepts at every stage of the development cycle allows requirements traceability, and provides methods to describe social properties and decide whether the specification satisfies them or not. The use of the approach is shown with a case study.", "num_citations": "19\n", "authors": ["580"]}
{"title": "Social Analysis of Multi-Agent Systems with Activity Theory\n", "abstract": " The development of software systems is a complex task that requires support techniques to guide the process and solve inconsistencies in its products. In the agent paradigm, the use of social and intentional abstractions facilitates the application of these techniques in theories for the analysis of human societies, such as the Activity Theory. The Activity Theory proposes patterns that appear in human groups to explain their behaviour, and the study of their internal contradictions to understand its evolution. These patterns can be translated to the agent paradigm to reason about the behaviour of multi-agent systems. To ease the use of such techniques, a partially automatized process is proposed. The aim is to create an assistant that helps developers in the specification of their multi-agent systems. The use of this tool is evaluated through case studies specified with the INGENIAS notation.", "num_citations": "18\n", "authors": ["580"]}
{"title": "The PSI3 agent recommender system\n", "abstract": " This paper presents a multi-agent system (MAS) that implements a recommender system, essentially using collaborative filtering techniques. The design of the MAS is flexible to support the implementation of different filtering strategies and to control the global behavior of the system and its users. It has been applied in the PSI3 project to implement a personalized information dissemination service. Personalization requires some feedback from users in order to obtain some rating of their satisfaction with the information they receive. But, in order to make this effective, it has to be done with minimum disturbance to them. One way to achieve such purpose is by associating a personal agent for each user (to build and manage the user\u2019s profile) and a community agent for each group of users (to manage the dissemination and evaluation of information in the group, improve system performance, and prevent\u00a0\u2026", "num_citations": "18\n", "authors": ["580"]}
{"title": "Agent-oriented Software Engineering IX\n", "abstract": " Agent-Oriented Software Engineering IX - NASA/ADS Now on home page ads icon ads Enable full ADS view NASA/ADS Agent-Oriented Software Engineering IX Luck, Michael ; Gomez-Sanz, Jorge J. Abstract Publication: Lecture Notes in Computer Science Pub Date: 2009 DOI: 10.1007/978-3-642-01338-6 Bibcode: 2009LNCS......L Keywords: Computer Science; Software Engineering; Artificial Intelligence (incl. Robotics); Logics and Meanings of Programs; Programming Techniques; Computer Communication Networks; Programming Languages; Compilers; Interpreters full text sources Publisher | \u00a9 The SAO/NASA Astrophysics Data System adshelp[at]cfa.harvard.edu The ADS is operated by the Smithsonian Astrophysical Observatory under NASA Cooperative Agreement NNX16AC86A NASA logo Smithsonian logo Resources About ADS ADS Help What's New Careers@ADS Social @adsabs ADS Blog Project \u2026", "num_citations": "17\n", "authors": ["580"]}
{"title": "Integration of web services in an agent-oriented methodology\n", "abstract": " This paper introduces a view of web services following the Web Services Architecture. This architecture considers web services as abstractions implemented with special programs called agents. The paper discusses the nature of these agents from the agent research perspective. Aiming at reusing the experience of agent research, the paper proposes an integration of concepts from Web Service Architecture within an existing agent oriented software engineering methodology, the INGENIAS methodology.", "num_citations": "17\n", "authors": ["580"]}
{"title": "Integrating agent-oriented methodologies with UML-AT\n", "abstract": " There are many methodological approaches for Agent-Oriented Software Engineering, each one focusing on some features of multi-agent systems, but leaving others underdefined. For this reason, it would be interesting to have the possibility of applying different methods, according to their suitability to each particular problem domain and system view. Here, a key issue is how to integrate the information resulting from different methods in a common specification. We propose the use of an intermediate language called UML-AT, which would enable bidirectional transformations between models in different languages. These transformations allow representing views of those models in the language of choice at every moment. UML-AT is a UML profile based on the Activity Theory (AT) framework, which includes the concepts to describe societies of actors that are both autonomous and intentional. The translation with\u00a0\u2026", "num_citations": "17\n", "authors": ["580"]}
{"title": "Managing contradictions in multi-agent systems\n", "abstract": " The specification of a Multi-Agent System (MAS) involves the identification of a large number of entities and their relationships. This is a non-trivial task that requires managing different views of the system. Many problems concerning this issue originate in the presence of contradictory goals and tasks, inconsistencies, and unexpected behaviours. Such troublesome configurations should be detected and prevented during the development process in order to study alternative ways to cope with them. In this paper, we present methods and tools that support the management of contradictions during the analysis and design of MAS. Contradiction management in MAS has to consider both individual (i.e. agent) and social (i.e. organization) aspects, and their dynamics. Such issues have already been considered in social sciences, and more concretely in the Activity Theory, a social framework for the study of interactions in\u00a0\u2026", "num_citations": "16\n", "authors": ["580"]}
{"title": "Estimating costs for agent oriented software\n", "abstract": " Despite the progress in agent oriented software engineering, there is still a long way before achieving maturity. Among others, there is a lack of shared experience in evaluating the cost when developing software using the agent paradigm. This paper provides some results on this issue. It collects data from real agent based projects and gives hints for the application of existing software cost estimation models and what would be appropriate metrics for an agent based software development.", "num_citations": "16\n", "authors": ["580"]}
{"title": "PHAT: physical human activity tester\n", "abstract": " This paper introduces PHAT, a 3D environment for facilitating the development of AAL services by providing a virtual living lab. PHAT\u2019s purpose is reduce development costs of these services. It is based on an existing 3D game engine, jMonkeyEngine, to provide realistic representations of scenarios including visual details and physics laws to make the simulations more credible. The 3D engine is combined with MASON, a Multi-Agent System Based Simulation tool. MASON is used to create repeatable experiments and facilitate the testing in controlled situations. The paper shows a proof of concept of the MASON-jMonkeyEngine where some unexpected behaviours are modelled thanks to the properties of the 3D engine.", "num_citations": "14\n", "authors": ["580"]}
{"title": "Defining coordination in multi-agent systems within an agent oriented software engineering methodology\n", "abstract": " Though interactions could be considered a key entity in the design and implementation of coordination in a multi-agent system (MAS), interactions alone do not suffice to capture the coordination view of a MAS. They are related with the evolution of agent mental states, through the execution of tasks, and determined by the context of the organization to which agents belong. Therefore, a complete specification of interactions should be more that a mere definition of a set of ordered messages. In this paper we present a semiformal description of interactions as first-class entities, and the contribution of other components of a MAS to this definition. Also, we present its computational realization, as a tool to animate and monitor the execution of specifications.", "num_citations": "14\n", "authors": ["580"]}
{"title": "A complete-computerised delphi process with a multi-agent system\n", "abstract": " Looking for alternative ways of coordinating agents, this paper explores the adaptation of the Delphi protocol to agent systems. The Delphi protocol can be applied when a community of experts is required to deliver a consensual answer. In these cases, consensus stands for reaching an agreement among the experts about what the answer should be. This consensus reaching problem has been already considered in the literature, though its automatisation remains as a challenge. Intuitively, the experts should dialogue, interchange ideas, and change their mind as the discussion progresses. This paper presents a computerisation of discussion among expert agents and shows how they can be drawn towards a conclusion discussion by means of the Delphi process. The proof of concept is made with a document relevance evaluation problem where a community of experts decide whether a document is\u00a0\u2026", "num_citations": "13\n", "authors": ["580"]}
{"title": "Intelligent interface agents behavior modeling\n", "abstract": " This paper presents a software architecture for modeling Interface Agents that is based on the BDI (Believes, Desires, Intentions) approach. This architecture is supported with a methodology that guides the designer to build a complex interface agent. This work has been applied to a fully operative implementation in the EURESCOM P815 project framework.", "num_citations": "13\n", "authors": ["580"]}
{"title": "An Ontological and Agent-Oriented Modeling Approach for the Specification of Intelligent Ambient Assisted Living Systems for Parkinson Patients\n", "abstract": " The goal of this work is to introduce requirements analysis for Ambient Assisted Living (AAL) applications for patients with Parkinson Disease (PD). The work is part of SociAAL project, which aims to reduce costs in the development of AAL applications for PD patients. A first step is the understanding of the needs of the PD patient and the differences with other possible AAL users. This paper uses a hybrid approach in which an ontology and agent-oriented models are used to formalize initial application requirements. This hybrid approach is being essayed with transcriptions of interviews made along the SociAAL project.", "num_citations": "12\n", "authors": ["580"]}
{"title": "Agent based simulation for creating ambient assisted living solutions\n", "abstract": " This demo shows how the development of Ambient Assisted Living systems can be enhanced with the assistance of agent technology. Concretely, this demo introduces advances in the PHAT framework to create what we call Virtual Living Labs. This Virtual Living Lab reproduces realistic conditions of an application working inside embedded hardware that can run Android OS. The concrete situations to reproduce are captured using SociAALML, a modeling language that is being tested in the context of Parkinson\u2019s patients. This information is later on processed to create scenarios in the Virtual Living Lab.", "num_citations": "11\n", "authors": ["580"]}
{"title": "The SiCoSSyS approach to SoS engineering\n", "abstract": " This paper presents a methodology and tools for SoS engineering. The approach is based on the experience acquired in several developments made in the context of the SiCoSSyS project. It considers that the nature of SoS requires (1) the participation of a diversity of people with different backgrounds and profiles, and (2) to cope with the heterogeneity of systems. These goals can be achieved by model-driven engineering methods and tools. In our work we have applied as well an agent-based modeling approach for the definition of domain-specific languages that constitute the main tool for specification, simulation and deployment of solutions.", "num_citations": "11\n", "authors": ["580"]}
{"title": "INGENIAS development assisted with model transformation By-Example: A practical case\n", "abstract": " INGENIAS is a methodology for the development of multi-agent systems. INGENIAS support tools has recently incorporated a plug-in called the MTGenerator, which has been developed to facilitate the creation of model transformations by-example from INGENIAS models. The MTGenerator tool overcomes some of the limitations of similar tools about the creation of many-to-many transformation rules. This paper introduces the practical application of the tool to a complete development case study made with INGENIAS, showing the role and benefits of such tools.", "num_citations": "11\n", "authors": ["580"]}
{"title": "Requirements elicitation for agent-based applications\n", "abstract": " Requirements Elicitation for a software system is a key stage in a successful development. At the same time, it is one of the most challenging, because requirements have to consider the mutual influences between the envisioned system and the human context where it will work. These influences cover aspects such as organization, motivation, evolution, and cognition, taking place in a specific setting. The agent paradigm facilitates the analysis of these features because of its intentional and social nature. Nevertheless, determining the information that should be obtained and the way it should be modelled is not a trivial task. Developers are experts in software systems but they are not always familiarized with the concrete domain of those systems. The Requirements Elicitation Guide, a technique based on the Activity Theory from Social Sciences, can be applied to support developers in these issues. This\u00a0\u2026", "num_citations": "11\n", "authors": ["580"]}
{"title": "Building prototypes through 3D simulations\n", "abstract": " The demo introduces a fast prototyping method based on 3D simulations and the kit AIDE. The system is part of a development philosophy called Virtual Living Lab, where part of the experimentation is made against simulated 3D worlds which show a behavior close to the real one. The demo will illustrate the capabilities of this development philosophy applied to two basic functions working into two different environments: a house and a large installation, such as a faculty building or a mall center.", "num_citations": "10\n", "authors": ["580"]}
{"title": "Verification and validation techniques for multi-agent systems\n", "abstract": " Software Engineering aims at producing software systems built correctly and whose functionality matches initial requirements. These features have motivated research in verification and validation methods. Agent Oriented Software Engineering pursues producing Multi-Agent Systems with similar quality measures as those systems of conventional software engineering. However, there are important conceptual differences among conventional and multi-agent systems that are motivating new methods of verifying and validating this new kind of systems. This paper gives an overview of them and presents some of these methods briefly.", "num_citations": "10\n", "authors": ["580"]}
{"title": "Towards requirements elicitation in multi-agent systems\n", "abstract": " Requirements elicitation entails a deep comprehension of users\u2019 environment and needs. Current requirement engineering methods are usually too much oriented to software developers and their artifacts. So they need to be complemented with other methods in order to promote dialogue with end-users, which are not necessarily familiarized with software engineering concepts. In this sense, we propose the use of techniques from Sociology and Psychology related with Activity Theory to provide this additional support in agent methodologies. One of the elements of Activity Theory, the Activity Checklist, serves for this purpose. The Activity Checklist defines several dimensions to consider about the intended system and its environment: temporal, social, and spatial. These dimensions are related with questions that grasp relevant information about them. The questions in the checklist are based in the experience obtained from the study of human behaviors and activities. Our aim with the Activity Checklist is embedding it in agent-oriented software processes, supported by Activity Theory, as an assistant tool for making decisions about system requirements. This approach is showed through several examples of its translation and use in the development of multi-agent systems.", "num_citations": "10\n", "authors": ["580"]}
{"title": "Analysis of web objects distribution\n", "abstract": " Understanding how the web objects of a website are demanded is relevant for the design and implementation of techniques that assure a good quality of service. Several authors have studied generic profiles for web access, concluding that they resemble a Zipf distribution, but further evidences were missing. This paper contributes with additional empirical evidences that confirm that a Zipf distribution is present in different domains and that its form has changed from past studies. More specifically, the \u03b1 parameter has become higher than one, as a consequence that the popularity factor has become more critical than before. This analysis also considers the impact of web technologies on the characterization of web traffic.", "num_citations": "9\n", "authors": ["580"]}
{"title": "Self-management capability requirements with SelfMML & INGENIAS to attain self-organising behaviours\n", "abstract": " Self-organisation can be studied from the perspective of self-management. A system assumed to have self-management capabilities can behave in the same way a self-organising system. Self-management aspects that leads to self-organising behaviours in this paper are self-protection and self-configuration aspects. This connection is studied in this paper with the aid of a Self-Management Modelling Language (SelfMML) as a language for the assistance of capturing self-management capabilities; and the INGENIAS methodology, for realising those capabilities using software agents.", "num_citations": "9\n", "authors": ["580"]}
{"title": "The Ingenias Project: Methods and Tool For Developing Multiagent Systems\n", "abstract": " Agent-oriented methodologies are paving the way towards the adoption of agent technology in software industry. However, there are still several issues to address: testing mechanisms, specialized verification methods, a formally defined agent oriented development process, illustrative case studies, or better development tools. This should be considered in a changing context because of innovations in related areas, which are integrated in the agent paradigm. In this paper, we show a coordinated approach to address these needs in the context of a research project, INGENIAS. The purpose of this project is to contribute to the agent-oriented software engineering field by providing, on the basis of a well specified software development process, an open multi-agent systems (MAS) development framework that integrates methods, techniques and tools. The paper will show problems we face in the projects and the\u00a0\u2026", "num_citations": "8\n", "authors": ["580"]}
{"title": "Managing conflicts between individuals and societies in multi-agent systems\n", "abstract": " The development of multi-agent systems (MAS) implies considering both the social and individual levels of these systems. However, the elements in these levels are not necessarily consistent. Conflicts can arise between the goals of the community and those of individual agents. These contradictions are potentially very complex, given the inherent intentional nature of agents and the interactive features of their societies. Developers can face these problems about contradictions with traditional software engineering verification techniques. Nevertheless, these techniques always depend on the understanding of developers about what properties to check. Abstractions of the agent paradigm offer a new possibility for verification: the use of expert knowledge from social sciences to detect and solve this kind of problems. Social sciences and MAS research share a similar view about their objects of study: societies\u00a0\u2026", "num_citations": "8\n", "authors": ["580"]}
{"title": "MESSAGE: Methodology for Engineering Systems of Software Agents\n", "abstract": " On the one hand it presents a number of recommendations a CASE tool should comply with in order to fully support the MESSAGE methodology. These recommendations address both the metamodelling and the modelling levels.On the other hand it describes the work carried out within PIR5. 3 to customize an existing commercial CASE tool called MetaEdit+ in order to make it support the MESSAGE methodology as much as possible according to the above recommendations considering the limited amount of time and resources available in this task.", "num_citations": "8\n", "authors": ["580"]}
{"title": "A framework for developing multi-agent systems in ambient intelligence scenarios\n", "abstract": " Research in Ambient Intelligence usually cites Multi-Agent Systems as control solution. This demo introduces a development kit that combines Android, JADE-LEAP, and game engines to create a simulation environment where different systems can be developed. The demoed software will enable agent researchers to look for ways of controlling the elements of an Android based Ambient Intelligence system and deploying the solution to real devices. The demoed scenario assumes an Android based remote control, an Android Smart TV, and an Android Wearable. The user in the Ambient is a Parkinson\u2019s Patient whose tremors make hard to handle the remote. Through the detection of the condition of the patient, the devices can be rearranged in the best interest of the patient.", "num_citations": "7\n", "authors": ["580"]}
{"title": "Requirements for an intelligent ambient assisted living application for parkinson patients\n", "abstract": " Ambient Assisted Living is attracting the attention of researchers not only for dealing with aging, but also to improve the quality of living of people with other circumstances, like those of Parkinson patients. An Ambient Assisted Living system for a Parkinson patient has to consider the particularities of this disease. It mainly involves the alteration of the motor capabilities. There are few studies dealing with the problems of Parkinson Disease and how AAL can alleviate them. Some of these problems are centered in the patient and the disease itself, but others are derived by the patient\u2019s social context, i.e., the place the patient occupies in the society and how the patient relates to other people. The contribution of this paper consists in an enumeration of issues to consider when creating an AAL application for them and it is part of a research project called SociAAL.", "num_citations": "7\n", "authors": ["580"]}
{"title": "Enabling rapid prototyping using decoupling of code skeletons and code generation process\n", "abstract": " This paper proposes enhancing rapid application development by improving specifications to code mapping. This technique has been codified in a meta-CASE tool in order to be applied in a wider set of domains. The tool can be configured to integrate sources of a small application and make it evolve until obtaining the actual system prototype. The prototype is generated by reusing libraries and frameworks from the particular application domain. This is illustrated with an example of how to develop a web application with servlets and simulation of workflows using a distributed agent system.", "num_citations": "7\n", "authors": ["580"]}
{"title": "A Cloud Based Simulation Service for 3D Crowd Simulations\n", "abstract": " Crowd simulation can play a crucial role when it comes to the design of Smart Environments. Crowd simulation can give insights on the flow of pedestrian in particular facilities and explore the interplay between ambient intelligence deployments and users. Most researchers develop crowd simulations using commercial game engines built with the editors they usually provide. This prevents a deeper experimentation with the problems of crowd simulation and enforces to stick to the development paradigm of the tool. As a consequence, it couples the scientific experimentation that produces the crowd model with the actual construction of the simulation tool. Besides, a crowd simulation may require more resources than those available to the scientist. A solution would be to conceive crowd simulation as a service that, on the one hand, it allowed scientists to experiment with the latest advances without the burden of\u00a0\u2026", "num_citations": "6\n", "authors": ["580"]}
{"title": "Testing Ambient Assisted Living Solutions with Simulations\n", "abstract": " The paper introduces a testing solution for evaluating Ambient Assisted Living systems by means of 3D simulations generated with a game engine, complex event processing, and classifiers. The solution aims to ensure that: (1) some key features of the problem appear in the simulation, and (2) the assistive solution interacts with the persons in the right way. A specific testing solution is needed because of the evolving nature of the simulation (each iteration of the requirements specification involves changes in the activities within the simulation) and the assistive solution (it operates in real time and evaluating its performance may require manually inspecting hours of simulation). The approach is illustrated with a proof-of-concept experiment.", "num_citations": "6\n", "authors": ["580"]}
{"title": "Virtual Development of a Presence Sensor Network Using 3D Simulations\n", "abstract": " Testing the control and deployment of large networks of sensors and actuators is a complex and expensive task. This paper presents a 3D simulation tool that facilitates testing and measuring this kind of systems in a virtual environment, which alleviates the costs of doing these tasks in a physical setting. This is illustrated with an example of how a presence detection system can be designed to monitor the behavior of a crowd under different stimulus. The simulation does not only involve the devices, but provide input data so that they can be decoupled and analyzed separately. This decoupling allows to experiment with different deployments of sensors while the simulation is still working and evaluate their performance in real time. Such feature can be of assistance for decision making when designing a large installation or improving one. The paper contributes with a proof of concept where a large installation\u00a0\u2026", "num_citations": "6\n", "authors": ["580"]}
{"title": "Requirement engineering activities in smart environments for large facilities\n", "abstract": " Developing a large, but smart environment is a complex task that requires the collaboration of experts of different disciplines. How to successfully attain such collaboration is not a trivial matter. The paper illustrates the problem with a case study where the manager of the facility intends to influence pedestrians so that they choose a task that requires certain effort, e.g. using staircases, instead of the current one that requires less effort, e.g. using the elevator. Defining requirements for such scenarios requires a strong multidisciplinary collaboration which is not currently well supported. This paper contributes with an approach to provide non-technician experts with tools so that they can provide feedback on the requirements and verify them in a systematic way.", "num_citations": "6\n", "authors": ["580"]}
{"title": "Modelling and Simulation of Alzheimer's Disease Scenarios\n", "abstract": " Dealing with Alzheimer's Disease is an open problem within the ageing population context. While clinical solutions arrive, actions for improving the quality of the daily living of these patients are needed. Which solutions these can be is something experts can discuss and engineers can develop. To facilitate such discussion, and enabling a low cost experimentation of the alternatives, the paper proposes computer simulations reproducing the daily activities and the interplay of users and assisting solutions. This paper contributes with examples of such simulations and discusses how real solutions can be built upon them in the case of Alzheimer's. The work has been developed with the PHAT/SociAALML framework and the code is available online for interested researchers.", "num_citations": "6\n", "authors": ["580"]}
{"title": "Ten years of the ingenias methodology\n", "abstract": " This chapter introduces a review of most of the work done in the INGENIAS methodology along 10 years. Few methodologies have been capable of evolving while keeping their initial premises. The key for INGENIAS survival has been an extreme adoption of Model Driven Development practises since its inception. The needs of its end users, the developers, have been gradually incorporated using those techniques. INGENIAS proposes a modelling language for Multi-agent Systems, recommendations for using it, tool support, and integration with some Software Engineering (SE) development processes. INGENIAS has its own support tools, which concern code generation, documentation, visual edition of the specification, simulation, testing, and installation. This chapter explains how INGENIAS was able to grow while keeping an updated tool support, introduces some important advances, and enumerates\u00a0\u2026", "num_citations": "6\n", "authors": ["580"]}
{"title": "Evaluation of multi-agent system communication in ingenias\n", "abstract": " This paper proposes a corpus of metrics to evaluate the balance of communications in these systems. The hypothesis of this paper is that these metrics are strongly related with the quality of service of the MASs. In addition, some classification rules are provided to classify agents according to the metrics; thus, an origin of the low quality of service of MASs is detected. The detection of this origin is the first step for debugging and improving the communication in MASs. The experimentation of this work uses the INGENIAS Development Kit, because it supports the development of fully functional Multi-agent Systems (MASs) from specification models. As a proof of concept, this work measures two variants of a MAS for managing a crisis situation in a city and shows the relationship between the proposed metrics and the quality of service.", "num_citations": "6\n", "authors": ["580"]}
{"title": "Reaching consensus in a multi-agent system\n", "abstract": " The Delphi process is useful for reaching consensus among a set of experts in a concrete topic. Its application to Multi-Agent Systems may facilitate the integration of different services. Multiple implementations of the same service will potentially provide different results on the same client request. With a Delphi survey process, these different service implementations could appear as a single one of a higher quality than isolated versions. To illustrate its applicability, the paper introduces an implementation of this Delphi survey process as Multi-Agent Systems following the INGENIAS methodology. The problem to be addressed in the paper consists in a community of expert agents providing document relevance evaluation services.", "num_citations": "6\n", "authors": ["580"]}
{"title": "Workflow Modelling with INGENIAS methodology\n", "abstract": " The use of agents in workflows has been studied in several research papers. Contributions of agents to workflows include scalability, performance, distribution and interoperability. This paper shows the first steps towards an integrated approach for business workflows modelling using an agent oriented methodology called INGENIAS. It includes a modelling case for the telecommunications industry.", "num_citations": "6\n", "authors": ["580"]}
{"title": "Personalized information dissemination using agents organizations\n", "abstract": " The multi-agent system described in this paper implements a collaborative filtering process that applies personalization techniques to measure the appropriateness of a document for a community of users. Collaborations among agents and users are defined in a workflow that describes the broadcasting of documents, which flow through a series of filters at different levels (community agents, personal agents, and users). With this system we demonstrate that a workflow definition (roles, tasks, and their relationships) is a key component for the specification of the multi-agent system organization, improves the design of agents interactions and coordination, and supports the identification of agents' goals and tasks. Furthermore, we discuss social rules that can be used to control the global behavior of the community of agents.", "num_citations": "6\n", "authors": ["580"]}
{"title": "User Behavior in Mass Media Websites\n", "abstract": " Mass media websites can be worthy to understand user trends in web services. RTVE, the National Broadcaster in Spain is a sample of such kind of service. The analysis of trends points to a shorter user interaction over the last three years, and a more straight access to content. Besides the number of pages consumed in a visit is becoming smaller as well. This article reviews these trends with data obtained from public sources, and analyze the distribution of web pages in the client layer and the corresponding distribution observed in the server layer. These two distributions can be characterized by Zipf-like distributions and \u03b1, the degree of disparity in the popularity distribution, is calculated for both. In all cases \u03b1 is higher to one implying a huge concentration of popularity on a few objects.", "num_citations": "5\n", "authors": ["580"]}
{"title": "Impact of traffic distribution on web cache performance\n", "abstract": " Caches are a critical element of web-based information systems. Understanding the expected behaviour of cache policies is especially important for achieving good quality of service. Existing works have suggested that the behaviour of the web demand can be modelled as a Zipf distribution with \u03b1 \u2264 1. New evidence, which is presented in this paper, shows that today websites are following Zipf distributions with \u03b1 > 1. This article analyses real logs obtained from the client layer of high traffic websites. The main result of this article is that under these conditions, the cache hit ratio can be extremely high with a very small cache size. This means that a very expensive and high resource demanding cache is not needed for effective implementation: a cache size equal to 0.6% of the working set is enough to reach more than 80% of hit ratio, once the right replacement policy has been chosen.", "num_citations": "5\n", "authors": ["580"]}
{"title": "Modelling culture through social activities\n", "abstract": " Computer simulation can be a complementary tool to study culture. A main issue in its application is finding the suitable computational primitives to translate the abstractions of social studies in a given context. Looking to overcome this problem, our research has developed a modelling framework based on the Activity Theory. This theory regards culture as a set of artefacts (mental and physical) that groups of people build and communicate in social activities, which are networks of interconnected individual activities. The framework provides a modelling language and its execution model, patterns (i.e. social properties), and processes to specify systems and check their properties. These elements reduce the uncertainty about modelling by crystallizing the experience of multiple projects. A case study about the influence of culture in couple relationships illustrates the approach. It shows how to model the\u00a0\u2026", "num_citations": "5\n", "authors": ["580"]}
{"title": "User-oriented analysis of interactions in online social networks\n", "abstract": " Online-behavior analysis must integrate people and systems. Activity theory provides a way to describe patterns of social interactions as properties with descriptions for automated processing. interests through recommendations, links, or documents; and build lists of people with whom they are connected. These mechanisms are not mere replicas of their real-life counterparts; instead, the scale and ability to make information visible to all OSN members let people draw conclusions and make contacts that they otherwise couldn\u2019t. 1 For example, people find friends that they lost contact with long ago and discover new interests through others having similar profiles; researchers observe societal trends and get immediate feedback from their communities; and software engineers gain access to large test populations for their innovations. The information available from OSNs is heterogeneous and used for different kinds of analysis. Engineers study the logs of support systems\u2014for example, the applications and webpages that members use to interact with the OSN, the server systems, and monitoring tools\u2014to improve their design, find bugs, and provide digests with higher-level information to other stakeholders. OSN managers study these digests for many reasons: to discern trends in communities, user preferences or conflicts, and desired system features, among others. Social researchers are interested in members\u2019 motivation, organization, rules, and economic aspects. These studies tend to follow one of two main approaches. One approach addresses the need to analyze large amounts of data such as link graphs, usage time, or preferred features. 2\u00a0\u2026", "num_citations": "5\n", "authors": ["580"]}
{"title": "INGENIAS development process assisted with chains of transformations\n", "abstract": " This paper presents a chain of model transformations to guide and support the application of the INGENIAS development process. The MTGenerator tool generates these transformations with a Model Transformation By-Example approach, that is, automatically from pairs of model prototypes. The MTGenerator has the advantage over similar approaches and tools of being able to generate many-to-many transformation rules between non-connected graphs of elements. The work in this paper sets the foundation for future research on software processes aided by integrated standard transformations. Two case studies illustrate the generation of transformations with the MTGenerator and its use in the process. They also show the applicability of the approach to different application domains.", "num_citations": "5\n", "authors": ["580"]}
{"title": "Complex systems and agent-oriented software engineering\n", "abstract": " Although there is a huge amount of work and valuable proposals about agent oriented software engineering, it seems that the paradigm has not been yet widely adopted by software industry. Some claim that there is a need for a killer application showing clearly the benefits of multi-agent systems with respect to other techniques. Others may consider the approach as too academic to be applied in real projects. However, in our opinion, the answer may be found in the simple explanation of lessons learned while developing applications with agent-orientation, and confronting these with object and component oriented solutions, especially when faced to the development of complex systems. This paper discusses contributions of multi-agent systems from a software engineering perspective, as a way to put in value some of the properties of the agent paradigm in the development of complex software systems.", "num_citations": "5\n", "authors": ["580"]}
{"title": "Representaci\u00f3n de las relaciones en los metamodelos con el lenguaje Ecore\n", "abstract": " La definici\u00f3n de metamodelos constituye una parte esencial en los diversos enfoques de desarrollo de software dirigido por modelos. En los \u00faltimos a\u00f1os se han definido un buen n\u00famero de metamodelos. Sin embargo, es necesario todav\u00eda seguir investigando sobre las t\u00e9cnicas para definir metamodelos. Las relaciones en los metamodelos pueden tener diversas caracter\u00edsticas; entre otras, ser binarias o n-arias, tener atributos o no, tener atributos en los extremos o no. Adem\u00e1s existen diversos lenguajes de metamodelado, como por ejemplo MOF, GOPRR y Ecore. Por estos dos motivos, la representaci\u00f3n de una relaci\u00f3n en el metamodelo no es obvia. Adem\u00e1s se convierte en un punto crucial en la definici\u00f3n de un metamodelo, dado que influir\u00e1 considerablemente en el desarrollo del metamodelo. Este art\u00edculo se centra en c\u00f3mo definir las relaciones en el metamodelo. En este trabajo primero se analiza las posibles caracter\u00edsticas estructurales propias de las relaciones. M\u00e1s adelante se hace un estudio sobre las distintas maneras de representar las relaciones en un metamodelo en Ecore. Con esta contribuci\u00f3n se pretende facilitar la definici\u00f3n de metamodelos en futuros desarrollos del software dirigidos por modelos.", "num_citations": "5\n", "authors": ["580"]}
{"title": "Agent Oriented Software Engineering with MESSAGE.\n", "abstract": " ConclusionsThe definition of an agent oriented software engineering methodology is not an easy task. Despite the first impression that existing MAS methodologies can provide, following a methodology is not as simple as a six or seven steps process. The MESSAGE approach starts by identifying first the elements required to build a MAS, organizing them in five views, and expressing them in five meta-models. These metamodels can be applied by integration in a well-proven software development process model, which in the case of MESSAGE is the Unified Software Development Process, but others could be also considered. Finally, a methodology should not be tied with a concrete implementation model, although, to be realistic, it should demonstrate its application in the definition of implementations over different MAS platforms.", "num_citations": "5\n", "authors": ["580"]}
{"title": "A testbed for agent oriented smart grid implementation\n", "abstract": " The aim of this paper is to present a platform for helping agent researchers to become familiar with Smart Grids. Agent technology has been recognised as one of the enablers for Smart Grids. A Smart Grid intends to make an advanced use of available metering and generation capabilities in order to use more efficiently the electricity. Contributions of agent resea1rchers to this domain are still reduced and this may be because of the highly specialised knowledge that is required to run current Smart Grid simulators and the cost of commercial ones. This paper aims to share the experience acquired during a project where distributed control approaches were devised using open source solutions. An important result is a simulator for Smart Grids that facilitates the research of how agents can operate such grids. This paper introduces an example case study and discusses how agents can be applied in these\u00a0\u2026", "num_citations": "4\n", "authors": ["580"]}
{"title": "Achieving Parkinson\u2019s disease patient autonomy through regulative norms\n", "abstract": " In an Ambient Intelligence system for humans, devices in the environment perform actions to improve the quality of the daily living of a person. Research in normative systems could be applied to regulate the operation of this kind of systems. Nevertheless, determining the right norms is not trivial. This contribution discusses the case of a Parkinson\u2019s Disease patient. In particular, the paper studies a TV watching scenario where the right moment to assist the patient is the subject of discussion. Results are obtained from the SociAAL project, whose aim is the integration of social sciences concerns into the development of this kind of systems and the reduction of their production cost.", "num_citations": "4\n", "authors": ["580"]}
{"title": "MASSA: Multi-agent system to support functional annotation\n", "abstract": " Functional annotation aims to predict the biological function of DNA sequences. This complex and time-consuming task has to process huge amounts of data and get high quality results. In order to guarantee the quality of the outcome, the annotation should be carried out by human experts, but the great volume of biological data produced lately demands a high degree of automation. The features of this problem (i.e., knowledge-based, distributed resources, and an evolving environment) make it suitable for an agent approach. This paper presents MASSA, a Multi-Agent System to support functional annotation. MASSA combines the potentialities of the agent approach with a Rule-Based Expert System to reproduce the annotation steps, including the human reasoning, at the inference stage. The expert system integrates knowledge on Biology and tools. A case study on the annotation of sequences of four\u00a0\u2026", "num_citations": "4\n", "authors": ["580"]}
{"title": "Using microblogging tools for tracking daily activities of students in university courses\n", "abstract": " Higher education is increasingly concerned with providing an educational experience centred on the student. This implies devoting more effort to monitor, analyze and answer student needs, which largely increases the teacher workload. The use of technical tools is becoming common to help teachers in this context. This paper explores the application of micro-blogging in this context. Micro-blogging tools allow users the passive broadcasting of short texts. In our work, students use these tools to summarize their key impressions about classes. This forces them to reflect on their learning and provide teachers feedback about the real acquisition of contents by students. A suitable use of these tools requires a careful set up of systems to avoid they become useless because of noise in the annotations. User control and tagging becomes central for this purpose. The paper presents this approach and summarizes some\u00a0\u2026", "num_citations": "4\n", "authors": ["580"]}
{"title": "Quick Prototyping and Simulation with the INGENIAS Agent Framework.\n", "abstract": " A major nightmare of software developers is having clients claiming the delivered software is not what they expected. Developers make an extensive use of prototypes to prevent such situations to occur. However, the role of simulations have not been studied enough. If an agent based simulation is intended, not all existing agent oriented methodologies are capable of it. It requires code generation capabilities, round-trip features, and components with predefined behaviors. This work introduces the ability of the INGENIAS Agent Framework to simulate MAS specifications and how this can be useful for for agile development of agent-based applications.", "num_citations": "4\n", "authors": ["580"]}
{"title": "Framework for defining model language metamodels for CASE tools\n", "abstract": " This paper presents a framework for defining metamodels. The main goal of this framework is to achieve the model interchange among CASE tools. This framework adds the CASE tools issues to the definitions of the model languages. The presented framework contains four internal metamodels. Firstly, a metamodel specifies the abstract syntax of the model language. Secondly, another metamodel specifies the particular elements for the connection-based languages. Thirdly, a metamodel specifies the spatial information. At last, a metamodel defines the necessary elements for the CASE tools. Each internal metamodel can be changed without having effect on the others. These four internal metamodels can be combined in several ways (denoted as configurations). Each configuration has its particular scope. The presented framework has been already used for defining the INGENIAS language and modernising the\u00a0\u2026", "num_citations": "4\n", "authors": ["580"]}
{"title": "Using semantic causality graphs to validate MAS models\n", "abstract": " Multi-agent systems methodologies define tasks and tools covering all the development cycle. Modelling and implementation activities are well supported and experimented. However, there has been few effort invested in debugging and validation techniques for MAS compared to modelling and implementation stages. This paper addresses the lack of tools to debug and validate a MAS. We propose a visual tool to debug and validate some multi-agent system specification, capturing causality among messages sent by agents and showing semantic information related to interaction protocols used by agents.", "num_citations": "4\n", "authors": ["580"]}
{"title": "Activity theory applied to requirements elicitation of multi-agent systems\n", "abstract": " Most of current Multi-Agent System (MAS) methodologies do not provide specific techniques for requirements elicitation. They usually rely on the same approach used in analysis and design. However, requirements elicitation demands a deep understanding of users\u2019 environment and their needs, which are not software artefacts. We believe that those techniques, oriented to software developers and their artefacts, have to be complemented with other techniques more oriented to common users and their own abstractions. In this paper, we propose using principles from Activity Theory (AT) to provide this additional support. AT provides us the theoretical framework for analyzing the social and cultural issues in the requirements of MAS. However, the use of AT is too abstract. To overcome this abstraction, we use a tool developed by Kaptelinin and others (1999) that makes concrete the conceptual system of the AT for the task of requirements elicitation: the Activity Checklist. The checklist allows us to consider several dimensions about the intended system and its surroundings: temporal, social, and spatial. It includes questions, which are based on the experience obtained in the study of human behaviours and activities, to elucidate the relevant information related to these dimensions. The modified Activity Checklist used here is embedded in a MAS software process supported by AT, as an assistant tool for making decisions about system requirements. This paper illustrates the approach through several examples of the development and use of the new Activity Checklist for MAS.", "num_citations": "4\n", "authors": ["580"]}
{"title": "Checking social properties of multi-agent systems with activity theory\n", "abstract": " Many approaches of the agent paradigm emphasize the social and intentional features of their systems, what are called social properties. The study of these aspects demands their own new techniques. Traditional Software Engineering approaches cannot manage with all the information about these components, which are as related with software development as with social disciplines. Following previous work, this paper presents a framework based in the Activity Theory to specify and verify social properties in a development process for multi-agent systems. Using this framework developers acquire tools for requirements elicitation and traceability, to detect inconsistencies in their specifications, and to get new insights into their systems. The way of working with these tools is shown with a case study.", "num_citations": "4\n", "authors": ["580"]}
{"title": "Domain independent regulative norms for evaluating performance of assistive solutions\n", "abstract": " When considering touch devices, hand dexterity becomes an issue for the elderly population. Solutions to this issue ought to be on the supportive side while not diminishing the autonomy of the users. According to self-determination theory, this implies being autonomy supportive. This idea inspires two concepts introduced in this paper, the undesirable interruption and tolerated failure. Both can be computationally represented using a normative system approach. This representation permits to quantify the performance of a system in terms of norm violations and punishments. The normative system approach applicability is essayed in a case study with a touch operated remote control for a smart TV. The case study is realized through a simulation framework that allows to describe the expected user behaviours as well as emulating the assisting solution, the remote control in this case.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Conceptual map for social coordination\n", "abstract": " The engineering of applications for complex and dynamic domains with autonomous participants is an increasingly difficult process. Requirements and functionalities are not fixed a priori, components are not designed nor controlled by a common entity, and unplanned or underspecified changes may occur during runtime. There is a need for representing the regulating structures explicitly and independently from the acting components (or agents). Organization computational models, based on Organization Theory, have been advocated to specify such systems. Comprehensive analysis of several agent systems has shown that different design approaches are appropriate for different domain characteristics. In this chapter we present ongoing work on the integration of multi-agent organization frameworks, which will allow for seamless integration in open environments.", "num_citations": "3\n", "authors": ["580"]}
{"title": "BoloTweet: A Micro-Blogging System for Education\n", "abstract": " Micro-blogging has become a popular activity nowadays thanks to Twitter. However, micro-blogging is more than a commercial product. There exist free software implementations of the same principles. This work introduces Bolotweet, which is built on top of one of these free software platforms. It is oriented towards enabling an effective teacher-student interaction. The tool offers services for the teacher in order to quick evaluate student progress and assess the lessons\u2019 apprehended concepts. Students gain a way of sharing conclusions about what has been learnt, and review concepts presented along the lesson. This paper introduces improvements made to this tool and some experience on its use with real students as well as new experimental data.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Reagent: Reverse engineering of multi-agent systems\n", "abstract": " Agent-based technology is being used in an increasing variety of applications and domains. Despite the substantial research effort on methodologies for analyzing, designing and implementing multi-agent systems (MAS), maintenance and evolution of MAS software is nowadays challenging. This paper presents REAGENT, a reverse engineering technique for retrieving MAS design models from the source code of Jade based MAS implementations. REAGENT support tools have been experimentally evaluated by means of a case study with 19 benchmark programs from textbook. REAGENT has proved to be able to collect accurate and complete agent models in a linear time regarding the size of agent models, which facilitates its applicability to large, complex, industrial MAS.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Ambient intelligence with ingenias\n", "abstract": " This paper introduces advances made in the INGENIAS methodology to deal with Ambient Intelligence (AmI). The work considers the particular features of AmI systems and how an agent-oriented methodology can help to address their development. Being INGENIAS a model-driven methodology, a first step has been to compare the concepts used in INGENIAS and those required by AmI developments. This analysis identifies required changes to be applied in the INGENIAS metamodel. A case study on a tracking system to locate people illustrates this discussion.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Agent-Oriented Software Engineering IX: 9th International Workshop, AOSE 2008, Estoril, Portugal, May 12-13, 2008, Revised Selected Papers\n", "abstract": " Software architectures that contain many dynamically interacting components, each with its own thread of control, engaging in complex coordination protocols, are difficult to correctly and efficiently engineer. Agent-oriented modelling techniques are important for the design and development of such applications. This book provides a diverse and interesting overview of the work that is currently being undertaken by a growing number of researchers in the area of Agent-Oriented Software Engineering. The papers represent a state-of-the-art report of current research in this field, which is of critical importance in facilitating industry take-up of powerful agent technologies. This volume constitutes the thoroughly refereed post-conference proceedings of the 9th International Workshop on Agent-Oriented Software Engineering, AOSE 2008, held in Estoril, Portugal, in May 2008 as part of AAMAS 2008. The 20 revised full papers were carefully selected from 50 initial submissions during two rounds of reviewing and improvement. The papers have been organized into four sections on: multi-agent organizations, method engineering and software development processes, testing and debugging, as well as tools and case studies.", "num_citations": "3\n", "authors": ["580"]}
{"title": "The construction of multi-agent systems as an engineering discipline\n", "abstract": " The construction of multi-agent systems is starting to become a main issue in agent research. Using the Computer Science point of view, the development of agent systems has been considered mainly a problem of elaborating theories, constructing programming languages implementing them, or formally defining agent architectures. This effort has allowed important advances, including a growing independence of Artificial Intelligence. The results have the potential to become a new paradigm, the agent paradigm. However, the acceptance of this paradigm requires its application in real industrial developments. This paper uses this need of addressing real developments to justify the use of software engineering as driving force in agent research. The paper argues that only by means of software engineering, a complex development can be completed successfully.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Agent based Modeling of Social Systems.\n", "abstract": " Most agent based simulation toolkits are based on the Java programming language and this makes their use difficult for social scientists, who are not usually skilled in computer programming. However, agent modeling concepts are not far from those which could be used for social modeling. This assumption is considered to propose the use of an agent-oriented language for the specification of social simulation models, and transforming (automatically) these models to code for some agent-based simulation toolkit. This is made with the INGENIAS Development Kit (IDK), a set of tools that provides a customizable model editor and modules for automatic code generation.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Modeling of social systems with Ingenias\n", "abstract": " Most agent based simulation toolkits are based on the Java programming language and this makes their use difficult for social scientists, who are not usually skilled in computer programming. However, agent modeling concepts are not far from those which could be used for social modeling. This assumption is considered to propose the use of an agentoriented language for the specification of social simulation models, and transforming (automatically) these models to code for some agent-based simulation toolkit. This is made with the INGENIAS Development Kit (IDK), a set of tools that provides a customizable model editor and modules for automatic code generation.", "num_citations": "3\n", "authors": ["580"]}
{"title": "Robust Decentralised Agent Based Approach for Microgrid Energy Management\n", "abstract": " This paper introduces a decentralized agent based implementation of an off-line optimization technique applied to the configuration of electrical microgrids with distributed generation. This implementation conforms the\u201d Agent Based Energy Management System\u201d(ABEMS). Software agent principles are used to decentralize the microgrid control without having an implicit or explicit control hierarchy. Unlike most approaches, they work as peers. Orders to be sent to the energy micro-generation units are produced off-line by an evolutionary computation method. The orders are encoded into the agents once the micro-grid is started and agents decide when to apply them. The paper includes experiments that show the resulting behavior in several scenarios executed in real time. Results indicate the technique is stable enough and outperforms more simple approaches, a necessary initial step prior to a more comprehensive comparison with other solutions.", "num_citations": "2\n", "authors": ["580"]}
{"title": "Interpreting Information in Smart Environments with Social Patterns\n", "abstract": " Smart Environments (SEs) work in close interaction with their users. To perform properly, these systems need to process their information (both from sensing and to act) considering its meaning for people. For instance, when they manage workflows that represent users\u2019 activities or consider the tradeoffs between alternative actions. Introducing social knowledge about the human context helps SEs to better interpret information, and thus people\u2019 needs and actions. However, working with this knowledge faces several difficulties. Its level of abstraction is different from that directly related to system components. Moreover, it belongs to a background that is not frequent among engineers. In order to address these issues, this paper proposes the use of Social Context-Aware Assistants (SCAAs). These Multi-Agent Systems (MASs) manage explicitly social information using specifications conform to a domain-specific\u00a0\u2026", "num_citations": "2\n", "authors": ["580"]}
{"title": "Participatory Design with On-line Focus Groups and Normative Systems\n", "abstract": " Participatory design is a generally accepted practice for the construction of Ambient Assisted Living (AAL) systems. The involvement of experts and users in the conception and design of assistive solutions can lead to better systems. A common technique to involve users is called focus-group, which is mainly a moderated group meeting. Despite its benefits, it cannot be neglected the implicit cost of preparing and performing such meetings, and ensuring, later on, that the resulting assistive solution meets the requirements. A disruptive way to change this situation is the application of ICT technologies. This work contributes with a proposal for partial automation of focus-group techniques that support on-line evaluation of assistive solutions during the conception stage. Also, the paper addresses the formalization of the evaluation feedback through the use of normative systems.", "num_citations": "2\n", "authors": ["580"]}
{"title": "A Computational Approach to Improve the Gathering of Ambient Assisted Living Requirements\n", "abstract": " Recent publications focus on the importance of designing an Ambient Intelligence that can be sensitive to human values and responsible for its societal impact. Obtaining and properly modeling these requirements can be a challenging task. Co-creation and social sciences methods are frequently applied in order to discover what end-users need using methods such as field/case studies where interviews or focus group sessions are conducted. However, those methods can be limited. This paper introduces two complementary approaches, one using traditional semi-structured and in-depth interviews, and another one based on 3D simulation modeling. The context is a research project where interviews were conducted to caregivers of people with Alzheimer disease. When designing the solution, it is important to account what kind of technology the end-users are expecting and what scenarios need to be accounted. So, the paper first summarizes what technology this collective is seeking or willing to accept. Then it proceeds with a brief summary of one of the interviews. Following, it shows the process of transferring this information to actual 3D simulations and discusses the benefits of doing so in the context of Ambient Assisted Living.", "num_citations": "2\n", "authors": ["580"]}
{"title": "A greedy algorithm for reproducing crowds\n", "abstract": " The gathering of crowd traffic data either from videos or from visual observation has different uses. In the social simulation context, one of them is validating crowd behavior models and match the resulting traffic in control points with the real ones. When such models have been already validated, the immediate use can be aiding managers of facilities to infer, from real time data, what crowd behavior they should expect in their facilities. However, the transformation of those measurements into actual behavior patterns has not been satisfactorily addressed in the literature. In particular, most papers take into account a single measurement point. This paper contributes with an algorithm that produces possible populations that reproduces real traffic data obtained from multiple measurement locations. The algorithm has been validated against data obtained in a real field experiment.", "num_citations": "2\n", "authors": ["580"]}
{"title": "A multiple data stream management framework for ambient assisted living emulation\n", "abstract": " The development of Ambient Assisted Living systems would be facilitated if there was a development environment that allowed to simulate in a computer the physical environment, its inhabitants, as well as the Ambient Assisted Living system. This requires, on the one hand, an infrastructure for simulating the physical environment and, on the other hand, an infrastructure for emulating the Ambient Assisted Living devices. Both can be interconnected through data streams that allow emulated devices to behave as if they were connected to the real world, since they get similar sensor input. This paper introduces advances on a simulation framework for ambient intelligence so that it becomes capable of producing such data streams.", "num_citations": "2\n", "authors": ["580"]}
{"title": "Revisiting the Delphi method for agents\n", "abstract": " Research on agent interaction has attracted the attention of agent researchers for a long time. This paper revisits an old work to find uses of an argumentation protocol which borrows from social sciences to raise agreements among several agents. In this protocol, several agents discuss and provide a conclusion after some rounds of mutual information exchange. The work is reusing INGENIAS methodology to model and deploy the examples and illustrate benefits of this protocol proposal. It also analyses the requirements of this protocol for its application.", "num_citations": "2\n", "authors": ["580"]}
{"title": "Development of Sensor Based Applications for the Android Platform: an Approach Based on Realistic Simulation\n", "abstract": " Smart phones are equipped with a wide range of sensors (such as GPS, light, accelerometer, gyroscope, etc.) and allow users to be connected everywhere. These characteristics offer a rich information source for creating context-aware applications. However, testing these applications in the lab, before their deployment, could become a hard task or impossible because of sensors correlation, too wide testing area or an excessive number of people involved. This work aims to solve these problems carrying out the testing in a simulator, simulating the world in which the application user is immersed into. Tester controls her avatar and the avatar has a simulated smart phone that is connected with the user\u2019s smart phone. Applications under test are installed on the real smart phone and are compiled with a library that replaces standard services of the sensors by others that offer data sensor from the simulator (depending on the simulated smart phone context) instead of real world.", "num_citations": "2\n", "authors": ["580"]}
{"title": "Agent-Oriented Software Engineering X: 10th International Workshop, AOSE 2009, Budapest, Hungary, May 11-12, 2009, Revised Selected Papers\n", "abstract": " This volume constitutes the thoroughly refereed post-conference proceedings of the 10th International Workshop on Agent-Oriented Software Engineering, AOSE 2009, held in Budapest, Hungary, in May 2009 as part of AAMAS 2009, the 8th International Conference on Autonomous Agents and Multiagent Systems. The 10 revised full papers presented were carefully selected from numerous initial submissions during two rounds of reviewing and improvement. The papers have been organized into three sections on multi-agent organizations, concrete development techniques, and-one step higher-going beyond the concrete technique and proposing a development method for designing concrete types of systems. This state-of-the-art survey is rounded off by five additional lectures addressing key areas in development: agent-oriented modelling languages, implementation of MAS, testing of MAS, software processes, and formal methods for the development of MAS. They permit analysis of the current state in the generation of specifications of MAS, the way these specifications can be implemented, how they can be validated, and what steps are necessary to do so.", "num_citations": "2\n", "authors": ["580"]}
{"title": "Contribution to AL3 PROMAS TFG: INGENIAS methodology and tools\n", "abstract": " Design o Generate prototypes perhaps with rapid application development tool such as ZEUS o Agent Tool. o Refinements in workflows o Interaction models that show how tasks are executed. o Models of tasks and goals that reflect dependencies and needs identified in workflows and how system goals are achieved o Agent models to show required mental state patterns o Generate new models o Social relationships that perfect organization behaviour.", "num_citations": "2\n", "authors": ["580"]}
{"title": "Framework-supported mechanism of testing algorithms for assessing memory and detecting disorientation from IoT sensors\n", "abstract": " Assessing memory in daily life can be useful for both early detection and tracking the symptoms of neurodegenerative disease such as Alzheimer's disease. One of these symptoms is disorientation, which can cause domestic accidents. With the avenue of Internet of Things (IoT), houses can collect big data in real-time for being processed and acquiring knowledge between both edge computing (local processing for avoiding communication overload) and the cloud computing conforming the fog computing. What sensors are needed and how to collect the information is something that requires actually preparing prototypes of this setup in a lab. As an alternative, this work proposes a cheaper method which is based on the use of realistic 3D simulations of the scenarios to consider. Using these scenarios, different algorithms for assessing memory can be compared and evaluate how well they detect disorientation of a\u00a0\u2026", "num_citations": "1\n", "authors": ["580"]}
{"title": "Modelling agent oriented solutions for the smart grid\n", "abstract": " This paper contributes with a decentralised agent design for a microgrid that uses agent technology for avoiding dumping the excess of energy to a main powerline. The agent design is made with INGENIAS. The agents connect with a microgrid simulator, the SGSimulator and issue commands to control different distributed renewable energy sources. The paper illustrates the benefits of coordination of agents in such scenario through a simple token based protocol.", "num_citations": "1\n", "authors": ["580"]}
{"title": "Detecting plagiarism in micro-blogging social networks\n", "abstract": " Fighting plagiarism can be an exhausting task. In the context of social networks, it is common that some users regularly copy the content prepared by others and exhibit them as own. In the higher education context, it is not different and it may be even more critical. In a write-to-learn approach, if students copying text of others get similar rewards as those doing the effort, it could be a cause of dis-encouragement for those working students. Despite the interest in anti-plagiarism tools, there are no anti-plagiarism libraries that allow a self-hosted solution. Existing APIs are commercial ones, and are not tailored for specific languages. The paper introduces a plagiarism detection tool developed using free resources and that has been integrated into Bolotweet, a social network for teaching support which allows to score student micro-annotations. The tool is prepared to compare micro-annotations and tell the similarity\u00a0\u2026", "num_citations": "1\n", "authors": ["580"]}
{"title": "Towards the Simulation of Large Environments.\n", "abstract": " The development of a smart environment working into large facilities is not a trivial matter. What kind of intelligence is needed and how this intelligence will interact with individuals is a critical issue that cannot be solved just by thinking about the problem. A combination of social and computer science methods is necessary to learn and model the interplay between the environment and the environment inhabitants. This paper contributes with an ongoing case study that exemplifies this kind of combination. The case study considers two faculty buildings and a behavior to be modified. The goal is to design a set of devices that sends signals to passing-by pedestrians in order to make them use more the staircases. Banners, videos, and directed intervention are used. The effect of each one is measured and such measurements are reproduced into computer simulations. This information is necessary in order to determine the duration, the intensity of the stimulus, and the response of the individuals. Opposite to most works, the measurements do not provide full information of what is going on in the large facility. As a consequence, algorithms and software to fill in the gaps consistently are needed. The paper describes the current state of the simulations and the difficulties in modeling with precision the results in a case study.", "num_citations": "1\n", "authors": ["580"]}
{"title": "INGENIAS\n", "abstract": " This chapter presents the INGENIAS framework for Social Coordination. INGENIAS is an agent-oriented methodology that comprehends a modeling language, a development process, and a set of tools. The modeling language captures the MAS specification as well as the requirements of the system to be developed. The development process is an iterative process producing the necessary artifacts based on the elements captured by the modeling language. The tools conform the INGENIAS Development Kit. It includes, among others, a specification editor and a code generator. Key features of INGENIAS are the extensive use of visual diagrams for modeling, grounding on the BDI concepts of agents, and translation to a JADE based architecture called the INGENIAS Agent Framework.", "num_citations": "1\n", "authors": ["580"]}
{"title": "Social identity management in social networks\n", "abstract": " There is a lot of hype about social networks and related software within the concept Web 2.0 in the business and technical worlds. Given the fact that information is being widely spread in an exponential way with rooted dependencies among networks of social networks, we could find our digital identity exposed in ways that we could consider as inappropriate. Further than censorship, there is an arising need of knowing what is happening with the information we are delivering somewhere in the net, managing the distribution and the quality of detailed information. This paper discusses on which ways social identity management could be approached and further analyzed.", "num_citations": "1\n", "authors": ["580"]}
{"title": "Agent-Oriented Software Engineering X\n", "abstract": " Since the mid-1980s, software agents and multi-agent systems have grown into a very active area of research and also commercial development activity. One of the limiting factors in industry take-up of agent technology, however, is the lack of adequate software engineering support and knowledge in this area. The Agent-Oriented Software Engineering (AOSE) workshop is focused on this problem and provides a forum for those who study the synergies between software engineering and agent research.The concept of an agent as an autonomous system, capable of interacting with other agents in order to satisfy its design objectives, is a natural one for software designers. Just as we can understand many systems as being composed of essentially passive objects, which have state, and upon which we can perform operations, so we can understand many others as being made up of interacting, autonomous or semi\u00a0\u2026", "num_citations": "1\n", "authors": ["580"]}
{"title": "Model driven development of multi-agent systems with repositories of social patterns\n", "abstract": " Design patterns are templates of general solutions to commonly-occurring problems in the analysis and design of software systems. In mature development processes, engineers use and combine these patterns to work out those parts of their systems that correspond to well-identified issues in their domains. The design of new structures is just concerned with those aspects that are specific for their projects and with the glue between different components. Model driven development approaches can benefit of design patterns to improve the building of models and their transformations; at the same time, design patterns can take advantage in this kind of approaches of a better integration in the overall development process. In the case of Agent-Oriented Software Engineering, design solutions for agents and multi-agent systems have been also described in the literature. However, their application and\u00a0\u2026", "num_citations": "1\n", "authors": ["580"]}
{"title": "Agent behavior representation in ingenias\n", "abstract": " Nowadays, we have different agent oriented methodologies that enable developers to produce agent oriented designs. One of the recurrent problems of these methodologies is how to describe the behaviour of agents within a system. A developer needs primitives to express autonomy, proactivity, and social concerns of his agents, but there are problems in understanding what does these elements mean, beyond any natural language explanation. There is a clear need of semantic models understandable by average engineers. These models could help in foreseeing the impact of autonomy with respect system goals, or determining if, in an agent specification, a task will ever be scheduled for execution. This paper presents a proposal of semantic model for the visual modelling language used in INGENIAS, a project started in 2002 and considered the inheritor of MESSAGE/UML.", "num_citations": "1\n", "authors": ["580"]}
{"title": "Agent oriented software engineering with web applications\n", "abstract": " This paper proposes an agent oriented approach to design web applications. Contrary to other research work, this paper considers agents only at the conceptual level because they are convenient abstractions. In the implementation, agents are substituted by more adequate computational entities like Enterprise Java Beans or servlets. The translation from the conceptual level to the implementation is based on the relevance of interactions in both web-applications and Multi-Agent Systems. Throughout the paper, we show the current situation in Multi-Agent systems and what elements are required in a Multi-Agent System implementation.", "num_citations": "1\n", "authors": ["580"]}