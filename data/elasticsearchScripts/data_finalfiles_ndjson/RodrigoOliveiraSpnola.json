{"title": "Exploring the costs of technical debt management \u2013 a case study\n", "abstract": " Technical debt is a metaphor for delayed software maintenance tasks. Incurring technical debt may bring short-term benefits to a project, but such benefits are often achieved at the cost of extra work in future, analogous to paying interest on the debt. Currently technical debt is managed implicitly, if at all. However, on large systems, it is too easy to lose track of delayed tasks or to misunderstand their impact. Therefore, we have proposed a new approach to managing technical debt, which we believe to be helpful for software managers to make informed decisions. In this study we explored the costs of the new approach by tracking the technical debt management activities in an on-going software project. The results from the study provided insights into the impact of technical debt management on software projects. In particular, we found that there is a significant start-up cost when beginning to track and monitor\u00a0\u2026", "num_citations": "104\n", "authors": ["1154"]}
{"title": "Decision Criteria for the Payment of Technical Debt in Software Projects: A Systematic Mapping Study.\n", "abstract": " 1Graduate Program in Systems and Computer, Salvador University, Salvador, Bahia, Brazil 2Federal Institute of Bahia-IFBA, Jequi\u00e9, Bahia, Brazil 3Federal Institute of Sergipe, Lagarto, Sergipe, Brazil 4Federal University of Bahia, Salvador, Bahia, Brazil 5Fraunhofer Project Center for Software and Systems Engineering at Federal University of Bahia, Salvador, Bahia, Brazil", "num_citations": "25\n", "authors": ["1154"]}
{"title": "Introdu\u00e7\u00e3o \u00e0 engenharia de requisitos\n", "abstract": " Uma das raz\u00f5es para esta afirma\u00e7\u00e3o \u00e9 que n\u00e3o existe uma \u00fanica solu\u00e7\u00e3o para cada cen\u00e1rio de desenvolvimento. Al\u00e9m disso, lidamos o tempo todo com pessoas, o que torna o sucesso do projeto bastante relacionado \u00e0 compet\u00eancia da equipe e \u00e0 forma como trabalham, e, para dificultar ainda mais, muitas vezes n\u00e3o fazemos uso de um processo bem definido para apoiar as atividades do projeto. Entende-se por processo, neste contexto, como sendo um conjunto de atividades bem definidas com os respectivos respons\u00e1veis por execu\u00e7\u00e3o, ferramentas de apoio e artefatos produzidos. Ou seja, define-se como a equipe dever\u00e1 trabalhar para alcan\u00e7ar o objetivo: desenvolver software com qualidade dentro de prazos, custos e requisitos definidos. A boa not\u00edcia \u00e9 que muitas empresas est\u00e3o se movimentando no sentido de definirem detalhadamente seus processos para apoiarem suas atividades de\u00a0\u2026", "num_citations": "16\n", "authors": ["1154"]}
{"title": "UbiCheck an approach to support requirements definition in the ubicomp domain\n", "abstract": " Ubiquitous computing brings a set of characteristics that are not commonly found in conventional software projects. One of the consequences is an increase in the software development complexity. Additionally, traditional software engineering techniques are not usually adequate to support the development of this system category as they do not cover specific characteristics of this domain. Therefore, this work presents UbiCheck-an approach to support requirements definition in the ubicomp domain, including the results of an initial observational study that indicated such approach can be feasible.", "num_citations": "15\n", "authors": ["1154"]}
{"title": "Hearing the voice of software practitioners on causes, effects, and practices to deal with documentation debt\n", "abstract": " [Context and Motivation] It is common for teams to take shortcuts during software development that, in the future, will lead to maintainability issues and affect productivity and development cost. Different types of technical debt may affect software projects, including those associated with software documentation. Although there are many studies on technical debt, few focus on documentation debt in an industrial environment.[Question/Problem] We aimed to identify how software practitioners perceive the occurrence of documentation debt in their projects. We present a combined analysis of the results from two complementary studies: a survey (InsighTD) and an interview-based case study.[Principal Ideas/Results] We provide a list of causes and effects of documentation debt, along with practices that can be used to deal with it during software development projects.[Contribution] We find that documentation debt is strongly related to requirements issues. Moreover, we propose a theoretical framework, which provides a comprehensive depiction of the documentation debt phenomenon.", "num_citations": "12\n", "authors": ["1154"]}
{"title": "Managing technical debt\n", "abstract": " \u2022 The total amount of debt one has\u2022 The level of interest on that debt\u2022 When the interest will have to be paid\u2022 Managing TD is similar, except\u2022 It\u2019s hard to put a value on either the principal or the interest\u2022 We don\u2019t know if or when the interest will come due\u2022 However, decisions still have to be made, about\u2022 When to pay off debt", "num_citations": "6\n", "authors": ["1154"]}
{"title": "A Mapping study on living labs: characteristics, smart cities initiatives, challenges and software architecture aspects\n", "abstract": " A Living lab (LL) allows the development of systems in a user-driven fashion in realistic environments. Despite the idea behind LL is promising, its development is still an open problem. This occurs in part because the concept of LL is still in development, does not have clear boundaries, and the discussion around the theme transcends many disciplines. We have faced some of these uncertainties when a customer asked us to develop a LL environment for Smart Cities. This scenario motivated us to perform a mapping study with the purpose of characterizing LLs, their challenges, domains where they can be applied, and software architecture aspects related to the theme. As result, 51 primary studies were identified and six aspects of them were analyzed: LL characteristics, application domains, LLs smart cities initiatives, challenges, and current evidence on software architecture for LL. The results are beneficial for\u00a0\u2026", "num_citations": "4\n", "authors": ["1154"]}
{"title": "From project-oriented to service-oriented software development: an industrial experience guided by a service reference model\n", "abstract": " In organizations with software systems in production, new and often unexpected requirements for development come up due to strategic, tactical, and operational customer needs. In this context, it is a strategic advantage for software suppliers to be able to provide software services that meet these demands faster and with less overhead than negotiating traditional value-neutral project-oriented software deliveries. This article reports on the industrial experience of restructuring the supplier-side software development process into a value-based service-oriented format, guided by a service reference model. A service level agreement (SLA) was established between supplier and customer reflecting the business needs and values. The report describes the contractual aspects and internal managerial controls employed to facilitate the compliance of the provided services with the SLA, including the integrated use of a\u00a0\u2026", "num_citations": "4\n", "authors": ["1154"]}
{"title": "Apoio \u00e0 Especifica\u00e7\u00e3o e Verifica\u00e7\u00e3o de Requisitos Funcionais de Ubiquidade em Projetos de Software\n", "abstract": " A engenharia de software ap\u00f3ia o uso de abordagens sistem\u00e1ticas, econ\u00f4micas e quantific\u00e1veis para o desenvolvimento, opera\u00e7\u00e3o e manuten\u00e7\u00e3o de software de qualidade. Para isso, define um conjunto de metodologias de apoio \u00e0 constru\u00e7\u00e3o de software.", "num_citations": "4\n", "authors": ["1154"]}
{"title": "Um Survey sobre a Pertin\u00eancia e Relev\u00e2ncia de Crit\u00e9rios de Decis\u00e3o para Apoiar o Gerenciamento de Itens de D\u00edvida T\u00e9cnica\n", "abstract": " O termo d\u00edvida t\u00e9cnica (DT) \u00e9 utilizado para descrever os custos de longo prazo decorrentes de atalhos tomados no desenvolvimento e evolu\u00e7\u00e3o do software. As estrat\u00e9gias de gerenciamento da DT identificam itens da d\u00edvida e avaliam quando e se eles devem ser pagos. Utilizar crit\u00e9rios de decis\u00e3o pode apoiar a escolha do momento mais adequado para pagamento desses itens. No entanto, pouco ainda se sabe sobre a aplicabilidade dos crit\u00e9rios que t\u00eam sido propostos na literatura t\u00e9cnica. Nesse contexto, este trabalho apresenta os resultados de um survey que foi executado com o objetivo de caracterizar crit\u00e9rios de decis\u00e3o identificados na literatura t\u00e9cnica com respeito \u00e0 sua pertin\u00eancia e relev\u00e2ncia no apoio \u00e0 gest\u00e3o da DT. Ao total, 33 respostas foram obtidas e permitiram identificar o conjunto de crit\u00e9rios pertinentes, al\u00e9m de orden\u00e1-los pelos seus respectivos n\u00edveis de relev\u00e2ncia.", "num_citations": "3\n", "authors": ["1154"]}
{"title": "Usability technical debt in software projects: A multi-case study\n", "abstract": " Background: Over the years, several studies were conducted aiming at understanding the Technical Debt (TD) phenomenon and its implications on software development. Most of these studies focus on source code related TD types. The absence of empirical studies on usability debt motivated our research. Aims: The goal of this paper is to provide an initial usability debt characterization in software projects regarding its occurrence, type, and resolution effort. Method: We conducted a multi-case study, analyzing TD items of five software projects from four different companies. Results: We identified and classified 145 TD items in the projects. The analysis of these items allowed us to observe that the frequency of usability TD items ranged from 10.4% to 20.8% in the projects. The usability debt items cover a range of usability issues, violating eight out of the ten Nielsen usability heuristics. Regarding effort for paying the\u00a0\u2026", "num_citations": "2\n", "authors": ["1154"]}
{"title": "Identifying technical debt through code comment analysis\n", "abstract": " Context: The identification of technical debt (TD) is an important step to effectively manage TD items and make TD manageable and explicit to keep the amount of TD under control. TD identification is the first TD management activity, and it is essential to know what types of TD exist, where they are, and what their impact on the project is. In this context, researchers have developed automated approaches to identify TD items using indicators derived from source code metrics. However, those indicators do not always point to TD that developer teams consider real problems and cannot identify many types of relevant TD. This work starts from the premise that one must employ several TD identification strategies to identify debts automatically. Objective: Our strategy is to consider code comments as an information source for TD. Code comments are readily available and store a richness of semantic information written in natural language. Our goal is to propose an approach to support and automate the identification of different TD types through code comment analysis. Method: First, we proposed a model and a contextualized vocabulary for identifying TD. Next, we develop a tool named eXcomment. The tool extracts and filters comments from source code using the vocabulary aiming to filter comments having a TD context. We then experimentally explore, evaluate and evolve the approach using a family of experiments named FindTD. Work performed: We evolve the approach over four studies. First, we performed an exploratory study (FindTD I) to characterize the feasibility of the proposed model. Next, we performed a controlled experiment (FindTD II\u00a0\u2026", "num_citations": "2\n", "authors": ["1154"]}
{"title": "Um sistema de aux\u00edlio \u00e0 gest\u00e3o de conhecimento na rede LABCOM-NE\n", "abstract": " Nos anos recentes a Gest\u00e3o de Conhecimento surgiu como um dos fatores cr\u00edticos para o sucesso de organiza\u00e7\u00f5es modernas. Na \u00e1rea de cient\u00edfico-tecnol\u00f3gica, a gest\u00e3o de conhecimento \u00e9 especialmente cr\u00edtica. Este trabalho reporta os esfor\u00e7os iniciais para a cria\u00e7\u00e3o de um sistema de aux\u00edlio a gest\u00e3o de conhecimento no \u00e2mbito da Rede de Pesquisa em Qualidade de Combust\u00edveis do Nordeste (LABCOM-NE), uma iniciativa de universidades nordestinas suportadas pela Financiadora de Estudos e Projetos (Finep) do Minist\u00e9rio da Ci\u00eancia e Tecnologia. Nele \u00e9 discutido conceitos b\u00e1sicos de gest\u00e3o de conhecimento e apresentado a estrutura inicial j\u00e1 implementada do Sistema de Gest\u00e3o de Conhecimento LABCOM-NE.", "num_citations": "1\n", "authors": ["1154"]}