{"title": "CAT: a context-aware trust model for open and dynamic systems\n", "abstract": " The requirements for spontaneous interactions in open and dynamic systems create security issues and necessitate the incorporation of trust management into each software entity to make decisions. Trust encompasses various quality attributes (eg, security, competence, honesty) and helps in making appropriate decisions. In this paper, we present CAT, an interaction-based Context-Aware Trust model for open and dynamic systems by considering services as contexts. We identify a number of trust properties including context and risk awareness and address those in the proposed model. A context-similarity parameter is proposed to make decisions in similar situations. A time-based ageing parameter is introduced to change trust values over time without any further interaction. We present direct and indirect recommendations and apply path-based ageing on indirect recommendations. A mechanism to calculate the\u00a0\u2026", "num_citations": "79\n", "authors": ["245"]}
{"title": "Umltrust: towards developing trust-aware software\n", "abstract": " As users in software systems depend on each other for achieving goals, performing tasks, and utilizing resources, the trust relationships in the systems need to be considered to identify the opportunities and vulnerabilities these relationships bring. However, the problem with specifying a trust relationship is that there is no precise and a priori criteria to be satisfied. The main objective of this work is towards incorporating trust from the very beginning of a software development process. A framework is presented for specifying trust scenarios using an extension of Unified Modeling Language (UML) called UMLtrust (UML for trust scenarios). A trust scenario combines interested parties based on a context and thus helps in building a trust relationship. Suitable trust rules can be generated from the trust scenarios to monitor the trustworthiness of specific trust relationships. In this way, we can avoid conflicting, ambiguous\u00a0\u2026", "num_citations": "22\n", "authors": ["245"]}
{"title": "Collaboration through computation: incorporating trust model into service-based software systems\n", "abstract": " The open and dynamic nature of service-based software systems necessitates spontaneous and trustworthy interactions between collaborating entities. Service providers are exposed to users spanned across multiple organizational domains, so can be exploited by potentially untrustworthy service requestors. Given that, service providers need to trust requestors before granting them with services. Trust encompasses a number of quality attributes (e.g., security, competence, honesty) and helps in dynamic decision making. In this paper, we present a trust-based service collaboration approach, facilitated by the analysis of service-based interactions between service providers and requestors, and recommendations between service providers. Service providers exchange recommendations to convey their trust on requestors. This collaboration is quantified using our proposed trust model, called CAT, a Context\u00a0\u2026", "num_citations": "14\n", "authors": ["245"]}
{"title": "Towards model-based automatic testing of attack scenarios\n", "abstract": " Model-based testing techniques play a vital role in producing quality software. However, compared to the testing of functional requirements, these techniques are not prevalent that much in testing software security. This paper presents a model-based approach to automatic testing of attack scenarios. An attack testing framework is proposed to model attack scenarios and test the system with respect to the modeled attack scenarios. The techniques adopted in the framework are applicable in general to the systems, where the potential attack scenarios can be modeled in a formalism based on extended abstract state machines. The attack events, i.e., attack test vectors chosen from the attacks happening in real-world are converted to the test driver specific events ready to be tested against the attack signatures. The proposed framework is implemented and evaluated using the most common attack scenarios\u00a0\u2026", "num_citations": "13\n", "authors": ["245"]}
{"title": "Determinants of tobacco use in a selected urban area of Bangladesh\n", "abstract": " Tobacco consumption is harmful to health, and is one of the main causes of death in worldwide. It is evident that the prevalence of tobacco consumption is raising in most of low and middle income countries. Considering this, a cross sectional study was conducted in a selected urban area of southern Bangladesh with a view to assessing the prevalence of tobacco consumption and factors affecting the use of tobacco use. Multistage cluster sampling technique was adopted to select the urban ward and the respondents were selected systematically. A total of 399 respondents were interviewed face to face using a semi-structured interview schedule. Analysis shows that 30% of the population of aged 18 years above were currently using tobacco of any form. The mean age of starting tobacco use was 18.8 years. The most frequent form of tobacco use was smoking cigarette followed by Zarda with betal quid. Multivariate analysis revealed that illiterate respondents were 3.3 times more tobacco users than their educated counterparts. It was also higher among the Muslims (OR= 4.979; 95% CI= 1.255-19.754). Tobacco use was also high among the labourer (OR= 8.541; 95% CI= 2.422-30.120) and businessmen (OR= 7.727, 95% CI= 2.501-23.875). However, no statistically significant association was found between current tobacco use and age, sex, housing condition and knowledge on tobacco use (p> 0.05). The finding of this study suggests that as tobacco use is more prevalent among the poor and illiterate segment of the population, strong implementation of anti-tobacco legislation is warranted.", "num_citations": "7\n", "authors": ["245"]}
{"title": "New parameters for Bangla to English statistical machine translation\n", "abstract": " This paper focuses on the issues of designing a machine translation engine for statistical Bangla to English translation. The grammatical structure of a Bangla sentence is a complex one which is different from its English counterpart. Here we consider only simple Bangla sentences. A simple Bangla sentence may contain a subject, an object and a verb. Translation scheme may face difficulty only in the variations of the verbs. Enumerating all these variations in statistical machine translation (SMT) engine for Bangla to English translation requires the help of some generalized parameters. With an addition to the IBM parameters here we propose some new parameters to meet the current needs.", "num_citations": "6\n", "authors": ["245"]}
{"title": "How do developers discuss and support new programming languages in technical Q&A site? An empirical study of Go, Swift, and Rust in Stack Overflow\n", "abstract": " Context:New programming languages (e.g., Swift, Go, Rust, etc.) are being introduced to provide a better opportunity for the developers to make software development robust and easy. At the early stage, a programming language is likely to have resource constraints that encourage the developers to seek help frequently from experienced peers active in Question\u2013Answering (QA) sites such as Stack Overflow (SO).Objective:In this study, we have formally studied the discussions on three popular new languages introduced after the inception of SO (2008) and match those with the relevant activities in GitHub whenever appropriate. For that purpose, we have mined 4,17,82,536 questions and answers from SO and 7,846 issue information along with 6,60,965 repository information from Github. Initially, the development of new languages is relatively slow compared to mature languages (e.g., C, C++, Java). The expected\u00a0\u2026", "num_citations": "5\n", "authors": ["245"]}
{"title": "Development and automatic monitoring of trust-aware service-based software\n", "abstract": " Service-based software can be exploited by potentially untrustworthy service requestors while providing services. Given that, it is important to identify, analyze the trust relationships between service providers and requestors, and incorporate them into the service-based software. Treating trust as a nonfunctional requirement (NFR) during software development and monitoring allows clarifying these relationships and measuring the trustworthiness of service requestors. This analysis is facilitated by incorporating trust scenarios and trust models into the software. A trust scenario describes a trust relationship between interested parties based on a specific context. A trust model provides trust equations to measure the trustworthiness of service requestors based on the analysis of service-based interactions. Although much research has been devoted to monitor service quality, to date, no approach has been proposed to develop and automatically monitor service providing software from trust perspectives.In this thesis, we propose a trust-aware service-based software development framework which utilizes our proposed Unified Modeling Language (UML) extension called UMLtrust (UML for trust scenarios) to specify the trust scenarios of a service provider and incorporates our developed trust model called CAT (Context-Aware Trust) into", "num_citations": "4\n", "authors": ["245"]}
{"title": "A parametric approach to Bangla to English Statistical Machine Translation for complex Bangla sentences-Step 1\n", "abstract": " A Bangla to English Statistical Machine Translation (SMT) Engine design for complex Bangla sentences requires considering different types of Bangla sentences and making decision based on them. There cannot be a unique solution for all types of Bangla sentences, but the different steps taken while solving the different Complex Bangla sentences can be combined later which can solve this mammoth task. In this paper we have used some complex Bangla sentence types and tried to solve them by creating some new parameters in addition to the IBM models and previously generated parameters. The types discussed here include Bangla sentences having doubly occurred words, sentences having implicit words and sentences having multiple subjects. The parameters discussed here are fully compatible with the previously generated methods and parameters.", "num_citations": "4\n", "authors": ["245"]}
{"title": "A benchmark study of machine learning models for online fake news detection\n", "abstract": " The proliferation of fake news and its propagation on social media has become a major concern due to its ability to create devastating impacts. Different machine learning approaches have been suggested to detect fake news. However, most of those focused on a specific type of news (such as political) which leads us to the question of dataset-bias of the models used. In this research, we conducted a benchmark study to assess the performance of different applicable machine learning approaches on three different datasets where we accumulated the largest and most diversified one. We explored a number of advanced pre-trained language models for fake news detection along with the traditional and deep learning ones and compared their performances from different aspects for the first time to the best of our knowledge. We find that BERT and similar pre-trained models perform the best for fake news detection\u00a0\u2026", "num_citations": "3\n", "authors": ["245"]}
{"title": "ACIR: An aspect-connector for intrusion response\n", "abstract": " The modularization concept behind component-based software (CBS) cannot be applied effectively for cross-cutting concerns such as security. Aspect-oriented programming (AOP) helps in better modularization by identifying cross-cutting concerns and providing a suitable way to separate those concerns. In this paper, we provide an aspect-connector based intrusion response (detection and prevention) architecture for CBS by bringing the concepts of aspects into components. The aspect-connector is named as ACIR (aspect connector for intrusion response). Component interfaces act as join points, and aspects containing pointcuts and advices are defined in ACIR configuration file. Advices applicable to particular pointcuts are two types. Signature advices are used to detect intrusions, and action advices are executed to prevent intrusions. A prototype of this architecture is implemented and evaluated using some\u00a0\u2026", "num_citations": "3\n", "authors": ["245"]}
{"title": "A Trust Monitoring Architecture for Service-Based Software\n", "abstract": " Service-based software can be misused by potentially untrustworthy service requestors while providing services. A service-based system is usually dynamic due to mutual collaboration among stakeholders to achieve goals, perform tasks and manage resources. However, it lacks the presence of a central authority to monitor the trustworthiness of service users. In this chapter, we propose a trust monitoring architecture, called TrAM (Trust Architecture for Monitoring) to monitor the trustworthiness of service users at run-time, facilitating the analysis of interactions from trust perspectives. Monitoring allows the enforcement of corrective actions that may protect the software by mitigating major unwanted incidents. The performance of the architecture has been evaluated by monitoring a prototype file-sharing grid.", "num_citations": "2\n", "authors": ["245"]}