{"title": "Automated Planning: theory and practice\n", "abstract": " Automated planning technology now plays a significant role in a variety of demanding applications, ranging from controlling space vehicles and robots to playing the game of bridge. These real-world applications create new opportunities for synergy between theory and practice: observing what works well in practice leads to better theories of planning, and better theories lead to better performance of practical applications. Automated Planning mirrors this dialogue by offering a comprehensive, up-to-date resource on both the theory and practice of automated planning. The book goes well beyond classical planning, to include temporal planning, resource scheduling, planning under uncertainty, and modern techniques for plan generation, such as task decomposition, propositional satisfiability, constraint satisfaction, and model checking. The authors combine over 30 years experience in planning research and development to offer an invaluable text to researchers, professionals, and graduate students. Provides a thorough understanding of AI planning theory and practice, and how they relate to each other Covers all the contemporary topics of planning, as well as important practical applications of planning, such as model checking and game playing Presents case studies and applications in planning engineering, space, robotics, CAD/CAM, process control, emergency operations, and games Provides lecture notes, examples of programming assignments, pointers to downloadable planning systems and related information online", "num_citations": "3563\n", "authors": ["1587"]}
{"title": "Service-oriented computing: State of the art and research challenges\n", "abstract": " Service-oriented computing promotes the idea of assembling application components into a network of services that can be loosely coupled to create flexible, dynamic business processes and agile applications that span organizations and computing platforms. An SOC research road map provides a context for exploring ongoing research activities.", "num_citations": "1946\n", "authors": ["1587"]}
{"title": "Service-oriented computing: a research roadmap\n", "abstract": " Service-Oriented Computing (SOC) is a new computing paradigm that utilizes services as the basic constructs to support the development of rapid, low-cost and easy composition of distributed applications even in heterogeneous environments. The promise of Service-Oriented Computing is a world of cooperating services where application components are assembled with little effort into a network of services that can be loosely coupled to create flexible dynamic business processes and agile applications that may span organizations and computing platforms. The subject of Service-Oriented Computing is vast and enormously complex, spanning many concepts and technologies that find their origins in diverse disciplines that are woven together in an intricate manner. In addition, there is a need to merge technology with an understanding of business processes and organizational structures, a combination of\u00a0\u2026", "num_citations": "1181\n", "authors": ["1587"]}
{"title": "Automated composition of semantic web services into executable processes\n", "abstract": " Different planning techniques have been applied to the problem of automated composition of web services. However, in realistic cases, this planning problem is far from trivial: the planner needs to deal with the nondeterministic behavior of web services, the partial observability of their internal status, and with complex goals expressing temporal conditions and preference requirements. We propose a planning technique for the automated composition of web services described in OWL-S process models, which can deal effectively with nondeterminism, partial observability, and complex goals. The technique allows for the synthesis of plans that encode compositions of web services with the usual programming constructs, like conditionals and iterations. The generated plans can thus be translated into executable processes, e.g., BPEL4WS programs. We implement our solution in a planner and do some\u00a0\u2026", "num_citations": "514\n", "authors": ["1587"]}
{"title": "Run-time monitoring of instances and classes of web service compositions\n", "abstract": " The run-time monitoring of Web service compositions has been widely acknowledged as a significant and challenging problem. In this paper, we propose a novel solution to the problem of monitoring Web services implemented in BPEL. We devise an architecture that clearly separates the business logic of a Web service from its monitoring functionality. The architecture supports both \"instance monitors\" that deal with the execution of a single instance of BPEL process, as well as \"class monitors\" that report aggregated information about all the instances of a BPEL process. We also define a language for the specification of instance and class monitors. The language allows for specifying boolean, statistic, and time-related properties. Finally, we devise a technique for the automatic translation of all these kinds of monitors to Java programs", "num_citations": "363\n", "authors": ["1587"]}
{"title": "Automated Planning and Acting\n", "abstract": " Autonomous AI systems need complex computational techniques for planning and performing actions. Planning and acting require significant deliberation because an intelligent system must coordinate and integrate these activities in order to act effectively in the real world. This book presents a comprehensive paradigm of planning and acting using the most recent and advanced automated-planning techniques. It explains the computational deliberation capabilities that allow an actor, whether physical or virtual, to reason about its actions, choose them, organize them purposefully, and act deliberately to achieve an objective. Useful for students, practitioners, and researchers, this book covers state-of-the-art planning techniques, acting techniques, and their integration which will allow readers to design intelligent systems that are able to act effectively in the real world.", "num_citations": "321\n", "authors": ["1587"]}
{"title": "Planning as model checking\n", "abstract": " The goal of this paper is to provide an introduction, with various elements of novelty, to the Planning as Model Checking paradigm.", "num_citations": "304\n", "authors": ["1587"]}
{"title": "Planning and monitoring web service composition\n", "abstract": " The ability to automatically compose web services, and to monitor their execution, is an essential step to substantially decrease time and costs in the development, integration, and maintenance of complex services. In this paper, we exploit techniques based on the \u201cPlanning as Model Checking\u201d approach to automatically compose web services and synthesize monitoring components. By relying on such a flexible technology, we are able to deal with the difficulties stemming from the unpredictability of external partner services, the opaqueness of their internal status, and the presence of complex behavioral requirements. We test our approach on a simple, yet realistic example; the results provide a witness to the potentiality of this approach.", "num_citations": "298\n", "authors": ["1587"]}
{"title": "Automated composition of web services by planning at the knowledge level\n", "abstract": " In this paper, we address the problem of the automated composition of web services by planning on their \u201cknowledge level\u201d models. We start from descriptions of web services in standard process modeling and execution languages, like BPEL4WS, and automatically translate them into a planning domain that models the interactions among services at the knowledge level. This allows us to avoid the explosion of the search space due to the usually large and possibly infinite ranges of data values that are exchanged among services, and thus to scale up the applicability of state-of-the-art techniques for the automated composition of web services. We present the theoretical framework, implement it, and provide an experimental evaluation that shows the practical advantage of our approach wrt techniques that are not based on a knowledgelevel representation.", "num_citations": "286\n", "authors": ["1587"]}
{"title": "Automated synthesis of composite bpel4ws web services\n", "abstract": " In this paper we propose a technique for the automated synthesis of new composite Web services. Given a set of abstract BPEL4WS descriptions of component services, and a composition requirement, we automatically generate an executable BPEL4WS process that, once deployed, is able to interact with the components to satisfy the requirement. We implement the proposed approach exploiting efficient synthesis techniques, and experiment with some case studies taken from real world applications and with a parameterized domain. We show that the technique can scale up to cases in, which the manual development of BPEL4WS composite services is not trivial and is time consuming.", "num_citations": "233\n", "authors": ["1587"]}
{"title": "Automated Composition of Web Services by Planning in Asynchronous Domains.\n", "abstract": " We propose a novel planning framework for the automated composition of web services. We consider services that are specified and implemented in industrial standard languages for business processes modeling and execution, like BPEL4WS. These languages describe web services whose behavior is intrinsically asynchronous. For this reason, the key aspect of our framework is the modeling of asynchronous planning problems. In the paper we describe the framework and propose a planning approach that is based on state of the art techniques for planning under uncertainty. Our experiments show that this approach can scale up to significant cases, ie, to cases in which the manual development of BPEL4WS composed services is not trivial and is time consuming.", "num_citations": "226\n", "authors": ["1587"]}
{"title": "Enabling distributed knowledge management: Managerial and technological implications\n", "abstract": " In this paper we show that the typical architecture of current KM systems re.ects an objectivistic epistemology and a traditional managerial control paradigm. We argue that such an objectivistic epistemology is inconsistent with many theories on the nature of knowledge, in which subjectivity and sociality are taken as essential features of knowledge creation and sharing. We show that adopting such a new epistemological view has dramatic consequences at an architectural, managerial and technological level.", "num_citations": "222\n", "authors": ["1587"]}
{"title": "Web service composition as planning\n", "abstract": " We show how the service composition problem can be viewed as a planning problem in which state descriptions are ambiguous and operator definitions are incomplete. We then discuss the problem of interpreting documents (which describe the world state), and introduce a semantic type matching algorithm. The matching algorithm together with an interleaved search and execution algorithm allow for basic automated service composition.", "num_citations": "212\n", "authors": ["1587"]}