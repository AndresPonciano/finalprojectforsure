{"title": "Knowledge based quality-driven architecture design and evaluation\n", "abstract": " Modelling and evaluating quality properties of software is of high importance, especially when our every day life depends on the quality of services produced by systems and devices embedded into our surroundings. This paper contributes to the body of research in quality and model driven software engineering. It does so by introducing; (1) a quality aware software architecting approach and (2) a supporting tool chain. The novel approach with supporting tools enables the systematic development of high quality software by merging benefits of knowledge modelling and management, and model driven architecture design enhanced with domain-specific quality attributes. The whole design flow of software engineering is semi-automatic; specifying quality requirements, transforming quality requirements to architecture design, representing quality properties in architectural models, predicting quality fulfilment from\u00a0\u2026", "num_citations": "55\n", "authors": ["764"]}
{"title": "Entrepreneurial growth ambitions: The case of Finnish technology startups\n", "abstract": " When Nokia\u2019s dominance of the mobile phone market came crashing down, it was a disaster for the Finnish economy and left a huge gap to fill, especially for the employment of engineers (Lane, 2016). Since then, Finnish decision makers have been expecting new ventures\u2013particularly technology startups\u2013to fill the gap and lift the Finnish economy out from the recession. But this idea has a hidden assumption that might not hold: do all startups have growth ambitions? Do they want to be global players like Nokia? And most importantly, do they build their growth by employing thousands of employees as Nokia did?Finland is a contradictory context for technologybased growth entrepreneurship. Although the country is known for its high-tech contributions and has frequently ranked in the top category in innovativeness and competitiveness (eg, Schwab & Sala-i-Martin, 2014), the Finnish society has traditionally been rather discouraging to high personal ambitions, as seen for ex-", "num_citations": "45\n", "authors": ["764"]}
{"title": "Integrability and extensibility evaluation from software architectural models\u2013A case study\n", "abstract": " Software systems are composed of components acquired from different sources, eg subcontractors, component providers, and open source software providers. Therefore, integrability is one of the most important qualities in software development. Extensibility is especially important in open source software systems because they evolve according to the needs of the user community and often into a direction not originally foreseen. Integrability evaluation refers to testing if separately developed components work correctly together. Extensibility evaluation focuses on how new features, originated from customers\u2019 demands or new emerging technologies, could easily be developed and exploited in systems without losing existing capabilities. The impact of changes to the system also has to be estimated. This can be done by a method called IEE, which enables extensibility and integrability evaluation from software architectural models. The contribution of this paper is to introduce the IEE method and illustrate how it is to be used with a real world case study. In the case study, we applied the IEE in evaluating the architecture of an existing open source tool. Evaluation revealed a need to introduce two new extension points to the architecture and also that an integration framework is needed to integrate the tool under evaluation with other supporting tools.", "num_citations": "31\n", "authors": ["764"]}
{"title": "Managerial perspective on open source collaboration and networked innovation\n", "abstract": " This study explores the managerial perspectives towards open source software and networked innovation. We analysed six software companies who use open source software as a significant part of their product or service offering. The study found notable differences in managerial attitudes, expected benefits and key challenges related to open source software and its role in innovative activities. While all companies were using same pieces of software with open source communities, there were different levels of engagement in the development of the software and information flows between companies and communities. A deeper level of involvement enables the exchange of more than just the code: like ideas, influences, opinions and even innovations or parts of them. The differences in managerial views on open source and networked innovation may be explained by industry domains, value chain position and leadership style.", "num_citations": "23\n", "authors": ["764"]}
{"title": "Open source based tools for sharing and reuse of software architectural knowledge\n", "abstract": " Sharing and reuse of software architectural knowledge (SHARK) has become an emerging topic of discussion and research in the field of software architecture development. SHARK is efficient with tool support, particularly so when that support is appropriate. However, there seems to be little guidance for selecting a suitable SHARK tool for use in an organization. The contribution of this paper is twofold. First, we present an evaluation framework that can be used for presenting an overview of SHARK tool features or comparing their differences. Secondly, we use the presented framework to evaluate three publicly available SHARK tools. The evaluated tools are the following: WebOfPatterns, Stylebase for Eclipse and PAKME.", "num_citations": "21\n", "authors": ["764"]}
{"title": "Contributing to eclipse: A case study\n", "abstract": " Contributing to eclipse: A case study \u2014 VTT's Research Information Portal Skip to main navigation Skip to search Skip to main content VTT's Research Information Portal Logo Home Profiles Research output Projects Datasets Research Units Research Infrastructures Activities Prizes Press / Media Impacts Search by expertise, name or affiliation Contributing to eclipse: A case study Katja Henttonen, Mari Matinlassi Research output: Chapter in Book/Report/Conference proceeding \u203a Conference article in proceedings \u203a Scientific \u203a peer-review Overview Original language English Title of host publication Proceedings of the 2007 Conference on Software Engineering, SE2007 Number of pages 12 Publication status Published - 2007 MoE publication type A4 Article in a conference publication Event 2007 Conference on Software Engineering, SE2007 - Hamburg, Germany Duration: 29 Mar 2007 \u2192 30 Mar 2007 Conference \u2026", "num_citations": "9\n", "authors": ["764"]}
{"title": "A tool chain for quality-driven software architecting\n", "abstract": " The quality-driven architecture design and quality analysis (QADA) methodology uses quality requirements as a driving force when selecting software structures. In QADA, the family architecture contains qualitative quality requirements as architectural style(s) and patterns and the quantitative quality requirements as the properties of individual architectural elements. Our tool chain covers all the phases of QADA and contributes to software family engineering by providing methods to select an appropriate approach for family architecture (Stylebase), to capture and map requirements to the architecture (Protege, QPE, TOPCASED), to evaluate the maturity and quality of the architecture (Stylebase, RAP), a technique to represent variation points in the family architecture (QPE, TOPCASED), and a testing approach that can test final software components, ensure the achieved quality level, and produce feedback for the\u00a0\u2026", "num_citations": "8\n", "authors": ["764"]}
{"title": "Stylebase for Eclipse\n", "abstract": " Open source software has gained a lot of well-deserved attention during the last few years. Eclipse is one of the most successful open source communities providing an open development environment and an application lifecycle platform. Eclipse is a vendorneutral platform for integrating tools and services. My thesis work is a case study on contributing to Eclipse. The contribution is a software architecture tool called\u2014Stylebase for Eclipse \u201cwhich is implemented as an extension aka plug-in to Eclipse.Quality-driven architecture design is an approach to software architecture design which emphasizes the importance of qualities. Qualities are non-functional characteristics of a software system such as security or maintainability. Stylebase is a knowledge base of software patterns and architectural styles. It stores information that helps a software architect in selecting patterns that best support the desired quality goals. Stylebase for Eclipse is a tool for browsing and maintaining the stylebase. The purpose of the tool is to improve the quality of design and increase information sharing and re-use of architectural models in development teams.", "num_citations": "7\n", "authors": ["764"]}
{"title": "Stylebase for Eclipse: An open source tool to support the modeling of quality-driven software architecture\n", "abstract": " Open source software has gained a lot of well-deserved attention during the last few years. Eclipse is one of the most successful open source communities providing an open development environment and an application lifecycle platform. Eclipse is a vendor-neutral platform for integrating tools and services. My thesis work is a case study on contributing to Eclipse. The contribution is a software architecture tool called\" Stylebase for Eclipse\" which is implemented as an extension aka plug-in to Eclipse. Quality-driven architecture design is an approach to software architecture design which emphasizes the importance of qualities. Qualities are non-functional characteristics of a software system such as security or maintainability. Stylebase is a knowledge base of software patterns and architectural styles. It stores information that helps a software architect in selecting patterns that best support the desired quality goals. Stylebase for Eclipse is a tool for browsing and maintaining the stylebase. The purpose of the tool is to improve the quality of design and increase information sharing and re-use of architectural models in development teams. In the case study, the plug-in is first developed and, after that, a new open source community is formed around the plug-in project. In order to comply with the open source development model, modularity is treated as the most important non-functional requirement. In community building phase, efforts are concentrated on marketing the new open source project and creating a good technical infrastructure for it. The most interesting experiences gained during the study are related to various aspects of open source\u00a0\u2026", "num_citations": "5\n", "authors": ["764"]}
{"title": "Libre Software as an Innovation Enabler in India Experiences of a Bangalorian Software SME\n", "abstract": " Free/Libre and open source software (FLOSS) has been advocated for its presumed capacity to support native software industries in developing countries. It is said to create new spaces for exploration and to lower entry barriers to mature software markets, for example. However, little empirical research has been conducted concerning FLOSS business in a developing country setting and, thus, there is not much evidence to support or refute these claims. This paper presents a business case study conducted in India, a country branded as a \u2019software powerhouse\u2019 of the developing world. The findings show how FLOSS has opened up significant opportunities for the case company, especially in terms of improving its innovative capability and upgrading in the software value chain. On the other hand, they also highlight some challenges to FLOSS involvement that rise specifically from the Indian context.", "num_citations": "3\n", "authors": ["764"]}
{"title": "Lifecycle management in government-driven open source projects\u2013practical framework\n", "abstract": " In many parts of the world, public sector organizations are increasingly interested in collaborating across organizational (and even national) boundaries to develop software solutions under an open licence. However, without sound lifecycle management practices, the full benefits of open collaboration are not achieved and projects fail to achieve sustained success. This paper introduces a lifecycle management model and framework for government-driven open-source projects and reports about its use in a real-life case study. Our focus is on lifecycle management activities which take place between deployment and end-of-life. The framework was developed iteratively through a series of focus group discussions with representatives of public sector organizations. After the framework had been taken into use in our real-life case project, individual qualitative interviews were conducted to collect experiences on its benefits and weaknesses. According to the initial evidence, the deployment of the framework seems to have brought concrete benefits to the project, eg by contributing positively to community growth, software quality and inter-organizational learning.", "num_citations": "2\n", "authors": ["764"]}
{"title": "Entrepreneurial innovators' growth ambitions-Case of Finnish technology start-ups\n", "abstract": " This paper aims to increase understanding on the start-up innovation process from the perspective of entrepreneurial growth ambitions. Our study in the context of Finnish start-up ecosystem provides findings on how start-ups differ in terms of the ambition level, and provides suggestions on what this means from the perspective of supporting the start-up innovation process. Based on the findings we suggest that growth-ambitions should be seen as a more complex socially constructed concept that just an easily observable value defining the level of ambition. Growth-ambitions are influenced at least by the type of the market where start-up is focusing on, the scalability of the business model, personal characteristics of entrepreneurs, entrepreneurial and international experience of the founders and their perceptions of the barriers and constraints of the field, and finally the social context to which they are embedded in\u00a0\u2026", "num_citations": "2\n", "authors": ["764"]}
{"title": "Open source as an innovation enabler: case study of an Indian SME\n", "abstract": " Free and open source software (FOSS) has been advocated for its presumed capacity to support native software industries in developing countries. It is said to create new spaces for endogenous innovation and to lower entry barriers to mature software markets, for example. However, little empirical research has been conducted concerning FOSS business in a developing country setting and, thus, there is not much evidence to support or refute these claims. This dissertation presents a business case study which was conducted in India, a country where the software industry has increased rapidly in volumes, while its innovative capability has remained relatively low. The goal of this dissertation is to accumulate an understanding on how small and medium sized software companies (SMEs) in India can benefit from FOSS. The focus is on its impacts on their innovativeness and the consequent ability to value chain upgrade.The study is guided by Chesbrough's (2003) theory on Open Innovation. The literature review takes a critical look at Western business research on FOSS-based innovation and assesses its applicability to the Indian context. The empirical part consists of an organizational case study of an Indian software SME, which bases most of its product and service offerings on FOSS. The data collection involved interviewing directors and developers in the case company, studying relevant documentation and monitoring the interaction of employees with FOSS communities on the Internet. The data analysis relies on two qualitative methods: the Value Network Analysis (Allee 2003) helped to model how Open Innovation works in the case\u00a0\u2026", "num_citations": "2\n", "authors": ["764"]}