{"title": "Requirements engineering: processes and techniques\n", "abstract": " Requirements Engineering: Processes and Techniques - Lancaster EPrints LOADING Skip to main content Lancaster University homepage Home Browse By Year By Subject By Department Search Help Requirements Engineering: Processes and Techniques Kotonya, Gerald and Sommerville, Ian (1998) Requirements Engineering: Processes and Techniques. John Wiley & Sons, Inc., Chichester. ISBN 0471972088 Full text not available from this repository. Item Type: Book/Report/Proceedings Uncontrolled Keywords: /dk/atira/pure/researchoutput/libraryofcongress/qa75 Subjects: Departments: Faculty of Science and Technology > School of Computing & Communications ID Code: 57159 Deposited By: ep_importer_pure Deposited On: 01 Oct 2012 14:02 Refereed?: No Published?: Published Last Modified: 16 Apr 2020 23:19 URI: https://eprints.lancs.ac.uk/id/eprint/57159 Lancaster University Library homepage \u2026", "num_citations": "3270\n", "authors": ["641"]}
{"title": "A strategy for managing risk in component-based software development\n", "abstract": " The reality of component-based development is often very different from the commonly held notion that it is a low risk development strategy, which provides a simple and rapid mechanism for increasing the functionality and capability of a system. In reality component-based development carries significant risk throughout the system life cycle. These risks are related to the nature of COTS software, the development process, component technologies and vendor support. This paper describes an approach to developing component-based systems that incorporates risk management in the development process.", "num_citations": "60\n", "authors": ["641"]}
{"title": "An integrated, probabilistic framework for requirement change impact analysis\n", "abstract": " Impact analysis is an essential part of change management. Without adequate analysis it is not possible to confidently determine the extent, complexity and cost of proposed changes to a software system. This diminishes the ability of a developer or maintainer to make informed decisions regarding the inclusion or rejection of proposed changes. The lack of coherent impact analysis can also hinder the process of ensuring that all system components affected by a change are updated. The abstract nature of requirement level entities has meant that current impact analysis techniques have focused largely on design and code level artifacts. This paper proposes a novel approach which integrates traditional impact analysis with experience based techniques to extend current approaches to support requirement level impact analysis. Central to this approach is the use of probability to assist in the combination and presentation of predicted impact propagation paths. An Auto Teller Machine (ATM) example is used to illustrate the approach.", "num_citations": "59\n", "authors": ["641"]}
{"title": "A domain-independent ontology for non-functional requirements\n", "abstract": " Despite considerable research on ontologies for representing requirements models (and metamodels), little progress has been made in using ontologies to represent non-functional requirements. Non-functional requirements define the overall qualities of the resulting system. Because they are restrictions on system services, non-functional requirements are often of critical importance, and functional requirements may need to be sacrificed to meet them. However, because of their diverse nature, non-functional requirements are often expressed in non-standard domain-specific ways. This paper describes a nonfunctional requirements ontology that can be used to structure and express constraints as part of quality of service specification. The approach is illustrated using a small case-study.", "num_citations": "51\n", "authors": ["641"]}
{"title": "Developing IoT applications: challenges and frameworks\n", "abstract": " Internet of things (IoT) is creating new opportunities for developing innovative applications by leveraging on existing and new technologies. In recent years, a variety of consumer and industrial IoT applications have been developed and deployed. Despite much progress, developing IoT applications is still a complex, time-consuming and challenging activity. This is because IoT systems involve a wide range of hardware and software components, depending on a variety of communication and distributed system technologies. Many IoT application frameworks of varying approaches have been developed to manage the complexities of developing IoT applications. However, there remains a paucity of surveys on these IoT application development frameworks. This study presents a comprehensive review and a comparative analysis of existing IoT application development frameworks and toolkits, illustrating their\u00a0\u2026", "num_citations": "49\n", "authors": ["641"]}
{"title": "IoT architectural framework: connection and integration framework for IoT systems\n", "abstract": " The proliferation of the Internet of Things (IoT) has since seen a growing interest in architectural design and adaptive frameworks to promote the connection between heterogeneous IoT devices and IoT systems. The most widely favoured software architecture in IoT is the Service Oriented Architecture (SOA), which aims to provide a loosely coupled systems to leverage the use and reuse of IoT services at the middle-ware layer, to minimise system integration problems. However, despite the flexibility offered by SOA, the challenges of integrating, scaling and ensuring resilience in IoT systems persist. One of the key causes of poor integration in IoT systems is the lack of an intelligent, connection-aware framework to support interaction in IoT systems. This paper reviews existing architectural frameworks for integrating IoT devices and identifies the key areas that require further research improvements. The paper concludes by proposing a possible solution based on microservice. The proposed IoT integration framework benefits from an intelligent API layer that employs an external service assembler, service auditor, service monitor and service router component to coordinate service publishing, subscription, decoupling and service combination within the architecture.", "num_citations": "49\n", "authors": ["641"]}
{"title": "Practical experience with viewpoint-oriented requirements specification\n", "abstract": " The notion of viewpoints as a means of eliciting and formulating requirements is now well known. However, there is little practical evidence that viewpoint-based requirements methods scale up to address real problems. This paper presents a detailed case study based on a medium-sized system, and illustrates how a viewpoint-based requirements method can be used to structure and specify system requirements. The case study is intended to serve two purposes: first, to demonstrate the scalability of viewpoint-based requirements methods; and second, to act as a shared example for other researchers in the field to test their techniques and methods. The case study is based on an electronic document delivery and interchange system (EDDIS). The requirements are presented as they appeared in the original user requirements document. The paper concludes by outlining the lessons learnt in applying VORD to\u00a0\u2026", "num_citations": "42\n", "authors": ["641"]}
{"title": "Viewpoints for specifying component-based systems\n", "abstract": " There is a conceptual gap between the way we currently articulate requirements and the reuse-driven paradigm embodied in component-based system development. The principal challenge in requirements engineering for component-based systems is to develop models and methods that allow us make the best use of the available component technology by balancing aspects of requirements and business concerns, with the architectural assumptions and capabilities embodied in blackbox software components. This paper proposes a method for requirements engineering based on the notion of viewpoints that provides an explicit framework for expressing component-based system requirements from initial formulation through to detailed specification.", "num_citations": "30\n", "authors": ["641"]}
{"title": "Analysing the impact of change in COTS-based systems\n", "abstract": " Commercial off-the-shelf (COTS) software components promise benefits in terms of greater productivity, reduced time to market and reliability. However, their blackbox nature poses significant challenges assessing and managing the impact of change. We propose an approach to help developers to understand the impact of change. It relies on the use of a COTS component-oriented development process and an architecture description language (ADL) for documenting component system architectures; both elements contributing to create a combined approach to impact analysis in COTS-based system.", "num_citations": "25\n", "authors": ["641"]}
{"title": "Requirement level change management and impact analysis\n", "abstract": " Requirement Level Change Management and Impact Analysis - Lancaster EPrints LOADING Skip to main content Lancaster University homepage Home Browse By Year By Subject By Department Search Help Requirement Level Change Management and Impact Analysis Lock, S. and Kotonya, G. (1998) Requirement Level Change Management and Impact Analysis. Working Paper. UNSPECIFIED. (Unpublished) Full text not available from this repository. Item Type: Monograph (Working Paper) Uncontrolled Keywords: /dk/atira/pure/researchoutput/libraryofcongress/qa75 Subjects: Departments: Faculty of Science and Technology > School of Computing & Communications ID Code: 11646 Deposited By: ep_importer_comp Deposited On: 07 Jul 2011 15:45 Refereed?: No Published?: Unpublished Last Modified: 31 Mar 2020 23:43 URI: https://eprints.lancs.ac.uk/id/eprint/11646 Lancaster University Library \u2026", "num_citations": "22\n", "authors": ["641"]}
{"title": "A microservices architecture for reactive and proactive fault tolerance in iot systems\n", "abstract": " Providing fault-tolerance (FT) support to Internet of Things (IoT) systems is an open challenge, with many implementations providing static, tightly coupled FT support that does not adapt and evolve like IoT systems do. This paper proposes a pluggable framework based on a microservices architecture that implements FT support as two complementary microservices: one that uses complex event processing for realtime FT detection, and another that uses online machine learning to detect fault patterns and pre-emptively mitigate faults before they are activated. We provide an early evaluation of how our framework can handle a real-world scenario.", "num_citations": "21\n", "authors": ["641"]}
{"title": "Digitally annexing desk space for software development: NIER track\n", "abstract": " Software engineering is a team activity yet the programmer's key tool, the IDE, is still largely that of a soloist. This paper describes the vision, implementation and initial evaluation of CoffeeTable - a fully featured research prototype resulting from our reflections on the software design process. CoffeeTable exchanges the traditional IDE for one built around a shared interactive desk. The proposed solution encourages smooth transitions between agile and traditional modes of working whilst helping to create a shared vision and common reference frame - key to sustaining a good design. This paper also presents early results from the evaluation of CoffeeTable and offers some insights from the lessons learned. In particular, it highlights the role of developer tools and the software constructions that are shaped by them.", "num_citations": "21\n", "authors": ["641"]}
{"title": "Opportunistic reuse: Lessons from scrapheap software development\n", "abstract": " Many organizations use opportunistic reuse as a low-cost mechanism to improve the efficiency of development. Scrapheap reuse is a particular form of opportunistic development that we explore in this paper with the aid of an experimental study.", "num_citations": "18\n", "authors": ["641"]}
{"title": "Software design studio: a practical example\n", "abstract": " We have been generally successful for transferring software engineering knowledge to industry through various forms of education. However, many challenges in software engineering training remain. A key amongst these is how best to energise software engineering education with real-world software engineering practices. This paper describes our experience of delivering a radically different approach based on the notion of a Software Design Studio. The Software Design Studio is both a lab for students engaged in conceiving, designing and developing software products as well as an approach for teaching software engineering in the lab which emphasizes practical hands-on work and experimentation. The feedback on the Software Design Studio -- from both staff and students -- has been outstanding. Although the programme is designed as a small, elite programme there is interest to see if the teaching\u00a0\u2026", "num_citations": "17\n", "authors": ["641"]}
{"title": "Risk management in component-based development: A separation of concerns perspective\n", "abstract": " In this position paper we examine the various risks in component-based development. We divide the risks into six main categories and argue that they not only overlap but also cut across the various application development stages. We propose a risk management mechanism based on identifying risk management techniques for each individual risk category and then integrating the various individual techniques into a global strategy.", "num_citations": "17\n", "authors": ["641"]}
{"title": "Managing change in COTS-based systems\n", "abstract": " Traditional software engineering change management approaches are inadequate for addressing the unique challenges presented by the component-based systems. Current change management techniques view the system under development as a collection of mutable subcomponents, known to the developer and whose interrelationships and development histories are described in a change management system. This contrasts with a component-based view of a system comprising potentially many interconnected, immutable, black-box components. This contrast represents the fundamentally different change management tasks associated with component-based development. We propose a novel architecture-centric approach that combines a process model with a dedicated ADL to provide a framework for change impact analysis.", "num_citations": "15\n", "authors": ["641"]}
{"title": "A runtime quality architecture for service-oriented systems\n", "abstract": " System quality aspects such as dependability, adaptability to a changing runtime environment, and concerns such as cost and provider reputation, are increasingly important in a competitive software service market. Service-oriented system quality is not just a function of the quality of a provided service, but the interdependencies between services, the resource constraints of the runtime environment and network outages. This makes it difficult to anticipate how these factors might influence system behaviour, making it difficult to specify the right system environment in advance. Current quality management schemes for service-oriented systems are inadequate for ensuring runtime system quality as they focus on static service properties, rather than emergent properties. They also offer the consumer only limited control over the quality of service. This paper describes a novel consumer-centred runtime\u00a0\u2026", "num_citations": "14\n", "authors": ["641"]}
{"title": "A Service-Oriented Approach for specifying component-based systems\n", "abstract": " The principal challenge in requirements engineering for component-based software systems is to develop models that allow us to make the best use of the available component technology by balancing aspects of requirements, business concerns, and architectural considerations with capabilities embodied in software components. Unfortunately, the critical steps of requirements elicitation and modelling are often ignored in requirements methods for component-based systems. Requirements elicitation not only allows the developer to establish the actors and stakeholders associated with the system, it also provides a means for identifying and structuring their needs. Requirement modelling in component-based development, is an important vehicle for contextualizing, scoping and mapping user requirements to possible blackbox component solutions. This paper proposes an approach to requirements definition that\u00a0\u2026", "num_citations": "14\n", "authors": ["641"]}
{"title": "A Method for Formulating and Architecting Component-and Service-Oriented Systems\n", "abstract": " This chapter describes a negotiation-driven method that can be used to formulate and design component and service-oriented systems. Component and service-oriented development are increasingly being promoted in literature as rapid low-cost strategies for implementing adaptable and extensible software systems. In reality, these development strategies carry significant risk throughout the system life cycle. The risks are related to the difficulty in mapping requirements to component and service-based architectures, the black-box software used to compose the systems, and the difficulty in managing and evolving the resulting systems. These problems underscore the need for software engineering methods that can balance aspects of requirements with business concerns and the architectural assumptions and capabilities embodied in software components and services.", "num_citations": "13\n", "authors": ["641"]}
{"title": "COMPOSE: a method for formulating and architecting service-based systems\n", "abstract": " COMPOSE: A Method for Formulating and Architecting Service-based Systems - Lancaster EPrints LOADING Skip to main content Lancaster University homepage Home Browse By Year By Subject By Department Search Help COMPOSE: A Method for Formulating and Architecting Service-based Systems Kotonya, G. and Hutchinson, J. and Bloin, B. (2005) COMPOSE: A Method for Formulating and Architecting Service-based Systems. UNSPECIFIED. (Unpublished) Full text not available from this repository. Item Type: Other Uncontrolled Keywords: /dk/atira/pure/researchoutput/libraryofcongress/qa75 Subjects: Departments: Faculty of Science and Technology > School of Computing & Communications Faculty of Arts & Social Sciences > Linguistics & English Language ID Code: 12569 Deposited By: ep_importer_comp Deposited On: 07 Jul 2011 14:52 Refereed?: No Published?: Unpublished Last Modified: 21 May \u2026", "num_citations": "12\n", "authors": ["641"]}
{"title": "A self-managing brokerage model for quality assurance in service-oriented systems\n", "abstract": " Service-oriented system quality is not just a function of the quality of a provided service, but the interdependencies between services, the resource constraints of the runtime environment and network outages. This makes it difficult to anticipate how the consequences of these factors might influence system behaviour, which in turn makes it difficult to specify the right system environment in advance. Current quality management schemes for service-oriented systems are inadequate for assuring system quality as they rely largely on static service properties to predict system quality. Secondly, they offer the consumer only limited control over the quality of service. This paper describes a self-managing, consumer-centred approach based on a brokerage architecture that allows different monitoring, negotiation, forecasting and provider reputation schemes to be integrated into a runtime quality assurance framework for\u00a0\u2026", "num_citations": "11\n", "authors": ["641"]}
{"title": "Tool support for requirement level change management and impact analysis\n", "abstract": " Change management is an important yet often problematic stage of the software development lifecycle. Even with substantial knowledge of a system, managing it\u2019s change and evolution is by no means straightforward. This is particularly true for requirement level entities which are by necessity expressed in an abstract manner. For this reason, most current research has concentrated on later design and implementation level artifacts where more concrete information is plentiful. This paper considers an approach and support tool for performing change management at the requirement level and focuses particularly on the identification and visualisation of change impact.", "num_citations": "11\n", "authors": ["641"]}
{"title": "Providing fault tolerance via complex event processing and machine learning for iot systems\n", "abstract": " Fault-tolerance (FT) support is a key challenge for ensuring dependable Internet of Things (IoT) systems. Many existing FT-support mechanisms in IoT are static, tightly coupled, inflexible implementations that struggle to adapt in dynamic IoT environments. This paper proposes Complex Patterns of Failure (CPoF), an approach to providing reactive and proactive FT using Complex Event Processing (CEP) and Machine Learning (ML). Error-detection strategies are defined as nondeterministic finite automata (NFA) and implemented via CEP systems. Reactive-FT support is monitored and learned from to train ML models that proactively handle imminent future occurrences of known errors. We evaluated CPoF on an indoor agriculture system with experiments that used time and error correlations to preempt battery-depletion failures. We trained predictive models to learn from reactive-FT support and provide preemptive\u00a0\u2026", "num_citations": "10\n", "authors": ["641"]}
{"title": "A resource-aware framework for resource-constrained service-oriented systems\n", "abstract": " As embedded systems become increasingly complex, not only are dependability and timeliness critical quality indicators, but also their ability to dynamically adapt to changes in their runtime environment. Service-oriented Architecture (SOA) offers a potential solution to this challenge by allowing services to be dynamically bound at runtime. However, resource contention between services and resource saturation can result in significant Quality of Service (QoS) degradation. To address these issues, this paper proposes a runtime, resource-aware architecture that combines resource monitoring with dynamic workflow orchestration to mediate resource contention within the orchestration environment. The architecture was evaluated on a medium-size service-oriented case study, deployed on a resource-constrained device.", "num_citations": "10\n", "authors": ["641"]}
{"title": "Architectural analysis approaches: A component-based system development perspective\n", "abstract": " Component-based system development (CBD) relies on the integration of existing software components to compose systems. These are often black-box components whose functionality and configuration may not match the \u201cideal\u201d system context. Systematic architectural analysis can ensure that risks resulting from architectural adaptations and trade-offs do not adversely affect critical system qualities (e.g. cost, dependability and system resource constraints). The analysis is likely to reveal not only how well an architecture satisfies a particular system context, but also how change might affect critical system attributes. However, current architectural analysis techniques differ widely in their analytical capabilities and support for reuse-driven development making it difficult for developers to assess their effectiveness in CBD. This paper proposes an evaluation framework based on the design challenges in CBD\u00a0\u2026", "num_citations": "10\n", "authors": ["641"]}
{"title": "A differentiation-aware fault-tolerant framework for web services\n", "abstract": " Late binding to services in business-to-business operations pose a serious problem for dependable system operation and trust. If third party services are to be trusted they need to be dependable. One way to address the problem is by adding fault tolerance (FT) support to service-oriented systems. However, FT techniques are yet to be adopted in a systematic way within service oriented computing. Current FT frameworks for service-oriented computing are largely protocol-specific, have poor service quality differentiation and poor support for the FT process model. This paper describes a service differentiation-aware, FT framework based on the FT process model that can be used to support service-oriented computing.", "num_citations": "9\n", "authors": ["641"]}
{"title": "Understanding the Impact of Change in COTS-Based Systems.\n", "abstract": " The use of commercial off-the-shelf software components (COTS) promises significant advances in terms of greater productivity, reduced time to market and reliability. However, the blackbox nature of these components poses equally significant challenges for managing maintenance, future change to componentbased systems and in particular the impact of proposed changes. Unless these challenges are adequately addressed, the use of COTS components may result in the deployment of systems that are almost impossible to maintain safely. We propose a combined approach for helping developers to understand the impact of change which relies on a COTS component-oriented development process and the use of architecture description language (ADL) for documenting component system architectures.", "num_citations": "8\n", "authors": ["641"]}
{"title": "An architecture analysis approach for supporting black-box software development\n", "abstract": " A typical component-based system architecture comprises a set of components that have been purposefully designed and structured to ensure that they have \u201cpluggable\u201d interfaces and an acceptable match with a defined system context. However, the black-box nature of many software components means there is never a clean match between system specifications and concrete software components. Systematic architecture analysis can provide an effective, rapid and relatively low-cost mechanism for addressing risks resulting from architectural adaptation and trade-offs. However, a review of current architecture analysis approaches reveals they differ widely with respect to their ability to support black-box software development. This paper describes an analysis approach that integrates the strengths of current approaches to provide a practical architecture analysis framework for black-box component-based\u00a0\u2026", "num_citations": "7\n", "authors": ["641"]}
{"title": "Scrapheap software development: Lessons from an experiment on opportunistic Reuse\n", "abstract": " In this paper a set of 10 guidelines for opportunistic software reuse is discussed. These guidelines are based on observations of nine systems developed entirely with scraps of functionality scavenged from abandoned projects.", "num_citations": "7\n", "authors": ["641"]}
{"title": "A component\u2010based process for modelling and evolving legacy systems\n", "abstract": " The potential benefits of evolving legacy systems to component\u2010based system architectures are well documented. These include rapid, non\u2010intrusive modernization through the use of commercial off\u2010the\u2010shelf (COTS) components and significantly reduced post\u2010maintenance costs. However, the hype has not translated to a corresponding increase in the migration of legacy systems to component\u2010based architectures. There are two main reasons for this. First, many legacy systems provide adequate core functionality. For this type of system, replacement may not be the most cost\u2010effective solution. Second, there is a general lack of scalable methods and tools that support component\u2010based modelling and evolution for legacy systems. The article discusses challenges of evolving legacy systems and proposes COMPonent\u2010Oriented Software Engineering (COMPOSE), a component\u2010based approach built on an\u00a0\u2026", "num_citations": "7\n", "authors": ["641"]}
{"title": "A review of negotiation techniques in component based software engineering\n", "abstract": " Building software is an intellectually intensive activity. The processes and tools that have been developed to support custom software development to ensure that the activity is carried out successfully, do not necessarily address some of the key challenges of creating software systems out of COTS components. Primary among these challenges are component selection and integration where competing requirements present the system developer with complex problems unlike those found in custom development. A number of approaches have been proposed for tackling these problems, in many cases borrowing from other disciplines where similar problems have led to the development of sophisticated decision making strategies. We present a review of various proposed approaches in an attempt to identify the relative strengths, and shortcomings, of each before attempting to identify the issues that must be\u00a0\u2026", "num_citations": "7\n", "authors": ["641"]}
{"title": "Complex patterns of failure: Fault tolerance via complex event processing for iot systems\n", "abstract": " Fault-tolerance (FT) support is a key challenge for ensuring dependable Internet of Things (IoT) systems. Many existing FT-support mechanisms for IoT are static, tightly coupled, and inflexible, and so they struggle to provide effective support for dynamic IoT environments. This paper proposes Complex Patterns of Failure (CPoF), an approach to providing FT support for IoT systems using Complex Event Processing (CEP) that promotes modularity and reusability in FT-support design. System defects are defined using our Vulnerabilities, Faults, and Failures (VFF) framework, and error-detection strategies are defined as nondeterministic finite automata (NFA) implemented via CEP systems. We evaluated CPoF on an automated agriculture system and demonstrated its effectiveness against three types of error-detection checks: reasonableness, timing, and reversal. Using CPoF, we identified unreasonable\u00a0\u2026", "num_citations": "6\n", "authors": ["641"]}
{"title": "A runtime resource-management framework for embedded service-oriented systems\n", "abstract": " Service-Oriented Computing (SOC) has rapidly progressed in recent years, with examples appearing in numerous application areas including business processes, high-performance computing, web-based services, and embedded systems. In the embedded systems domain, ubiquitous devices, context-aware systems, and sensor networks are increasingly being used in a plethora of areas. However, because of the nature of their operating environment, service-oriented embedded systems (SOeS) pose unique challenges to quality management. SOeS have to contend not only with the quality of services from providers, but also with the constrained system resources in their operating environment. SOeS need to efficiently utilise available system resources by dynamically adapting themselves to changes in their runtime environment. This paper discusses current SOC resource-management initiatives, setting out the\u00a0\u2026", "num_citations": "6\n", "authors": ["641"]}
{"title": "An adaptable fault-tolerance for SOA using a peer-to-peer framework\n", "abstract": " The onset of Service Oriented Architectures (SOA) in domains like trading and banking has considerably heightened the need for dependable system operation. Late binding to services in business-to-business operations pose a serious problem for dependable system operation as it delegates the decision to trust a service to an external agent. However, it is impossible to guarantee that any service is 100% fault-free due to failings in hardware, software and human error. This means that fault tolerance remains the most practical way to address the problem. Unfortunately, there is currently no standard way to achieve this in SOA. This paper describes a novel adaptable fault tolerance framework that overlays a peer network formed by JXTA technology protocols to address this problem. We have adopted a layered approach by incrementally adding protocols and supporting the code infrastructure. The framework is\u00a0\u2026", "num_citations": "6\n", "authors": ["641"]}
{"title": "A COTS-Based Approach for Evolving Legacy Systems\n", "abstract": " The potential benefits of evolving legacy systems to COTS-based component architectures are well documented. These include rapid, non-intrusive modernization through the use of COTS software components, and significantly reduced post maintenance costs. However, the hype has not translated to a corresponding increase in the migration of legacy systems to COTS-based architectures. There are two main reasons for this. First, many legacy systems provide adequate core functionality. For this type of legacy system, replacement may not be the most cost-effective solution. Secondly, there is a general lack of scalable methods and tools that support COTS-based evolution of legacy systems. This paper describes our experience in using a component-based method to evolve a legacy system", "num_citations": "6\n", "authors": ["641"]}
{"title": "Teaching reuse-driven software engineering through innovative role playing\n", "abstract": " Reuse-Driven Software Engineering (RDSE) represents a development paradigm that promises to shorten development cycles and cut the costs associated with custom development by assembling systems from pre-existing software components and services. However, like most approaches that hold the promise of improving software engineering, the success of RDSE is dependent on skilled staff. This means that software engineering education remains the most effective vehicle to the community for reuse-driven technology transfer available. However, the teaching of RDSE poses many challenges to software engineering educators. These difficulties include how to make the benefits of RDSE visible to students and how to establish an acceptable balance between engineering principle and the software practice embodied RDSE. This paper describes a novel approach to teaching RDSE at Lancaster University, UK.", "num_citations": "5\n", "authors": ["641"]}
{"title": "Managing resource contention in embedded service-oriented systems with dynamic orchestration\n", "abstract": " As embedded systems become increasingly complex, not only are dependability and timeliness indicators of success, but also the ability to dynamically adapt to changes in the runtime environment. Typically, they operate in resource-constrained environments and often find application in isolated locations, making them expensive to manage with small resource changes in their operating environment having a significant impact on system quality. The service-oriented model of deployment offers a possible solution to these challenges; however, resource contention between services and resource saturation can result in significant Quality of Service (QoS) degradation. This emergent QoS is difficult to anticipate before deployment as changes in QoS are often dynamic. This paper presents EQoSystem, a runtime, resource-aware framework that combines monitoring with dynamic workflow orchestration to\u00a0\u2026", "num_citations": "4\n", "authors": ["641"]}
{"title": "A runtime resource-aware architecture for service-oriented embedded systems\n", "abstract": " Embedded systems typically operate in resource-constrained environments and often find themselves in difficult to access locations, making system maintenance expensive and the management of quality difficult to achieve. The service-oriented model of deployment offers a potential solution to these challenges as it allows for software systems to be dynamically composed and reconfigured using services discoverable at runtime. However, the resource contention between services on the orchestration platform can cause significant falls in Quality of Service (QoS). This emergent QoS is difficult to anticipate before deployment as changes in QoS are often dynamic and influenced by many factors. This paper presents EQoSystem, a resource-aware architecture combining resource monitoring with dynamic workflow management and service orchestration. We demonstrate the efficacy of EQoSystem using a medium\u00a0\u2026", "num_citations": "4\n", "authors": ["641"]}
{"title": "A viewpoint-oriented method for requirements definition.\n", "abstract": " British Library EThOS: A viewpoint-oriented method for requirements definition. New search | Advanced search | Search results Login / Register | About | Help | FAQ | Follow dividing line Use this URL to cite or link to this record in EThOS: https://ethos.bl.uk/OrderDetails.do?uin=uk.bl.ethos.358672 Title: A viewpoint-oriented method for requirements definition. Author: Kotonya, Gerald Odhiambo. ISNI: 0000 0001 3602 0511 Awarding Body: University of Lancaster Current Institution: Lancaster University Date of Award: 1993 Availability of Full Text: Full text unavailable from EThOS. Please contact the current institution\u2019s library for further details. Abstract: No abstract available Supervisor: Not available Sponsor: Not available Qualification Name: Thesis (Ph.D.) Qualification Level: Doctoral EThOS ID: uk.bl.ethos.358672 DOI: Not available Keywords: Systems analysis Share: Terms and Conditions | Notice and Takedown \u2026", "num_citations": "4\n", "authors": ["641"]}
{"title": "State of runtime adaptation in service-oriented systems: what, where, when, how and right\n", "abstract": " Software as a Service reflects a `service-oriented' approach to software development that is based on the notion of composing applications by discovering and invoking network-available services to accomplish some task. However, as more business organisations adopt service-oriented solutions and the demands on them grow, the problem of ensuring that the software systems can adapt fast and effectively to changing business needs, changes in their runtime environment and failures in provided services has become an increasingly important research problem. Dynamic adaptation has been proposed as a way to address the problem. However, for adaptation to be effective several other factors need to be considered. This study identifies the key factors that influence runtime adaptation in service-oriented systems (SOSs) and examines how well they are addressed in 29 adaptation approaches intended to\u00a0\u2026", "num_citations": "3\n", "authors": ["641"]}
{"title": "A self-learning approach for validation of runtime adaptation in service-oriented systems\n", "abstract": " Ensuring that service-oriented systems can adapt quickly and effectively to changes in service quality, business needs and their runtime environment is an increasingly important research problem. However, while considerable research has focused on developing runtime adaptation frameworks for service-oriented systems, there has been little work on assessing how effective the adaptations are. Effective adaptation ensures the system remains relevant in a changing environment and is an accurate reflection of user expectations. One way to address the problem is through validation. Validation allows us to assess how well a recommended adaptation addresses the concerns for which the system is reconfigured and provides us with insights into the nature of problems for which different adaptations are suited. However, the dynamic nature of runtime adaptation and the changeable contexts in which service\u00a0\u2026", "num_citations": "3\n", "authors": ["641"]}
{"title": "What, Where, When, How and Right of Runtime Adaptation in Service-Oriented Systems\n", "abstract": " Software as a Service reflects a \u201cservice-oriented\u201d approach to software development that is based on the notion of composing applications by discovering and invoking network-available services to accomplish some task. However, as more business organizations adopt service-oriented solutions and the demands on them grow, the problem of ensuring that the software systems can adapt fast and effectively to changing business needs, changes in their runtime environment and failures in provided services has become an increasingly important research problem. Dynamic adaptation has been proposed as a way to address the problem. However, for adaptation to be effective several other factors need to be considered. This paper identifies the key factors that influence runtime adaptation in service-oriented systems, and examines how well they are addressed in 29 adaptation approaches intended to\u00a0\u2026", "num_citations": "3\n", "authors": ["641"]}
{"title": "Teaching in a software design studio: Implications for modeling education\n", "abstract": " This paper reflects on Lancaster University\u2019s software design studio, an approach for teaching software engineering that favours practical experimentation over traditional lectures. The studio has been running for two years at Lancaster. In the paper, we reflect on how students have used modeling as part of the studio experience. Our findings show that, given the freedom, students make heavy use of informal modeling but almost never formally model. The paper unpicks the reasons for this and discusses implications for the way modeling is taught more generally.", "num_citations": "3\n", "authors": ["641"]}
{"title": "An architecture-centric development environment for black-box component-based systems\n", "abstract": " Component-based software system development typifies traditional engineering philosophy by promoting the construction of systems from pre-fabricated software components. Underlying this philosophy is the promise of accelerated, low cost development and reliable software systems. However, the development strategy is hampered by the lack of practical methods and tools that support the reuse-driven paradigm embodied in black-box components. Current methods and tool environments provide poor support for the challenges posed by developing systems from off-the-shelf black-box components. These include poor support for: component discovery and verification, modelling and mapping requirements to component architectures, negotiation, architectural design and composition, and managing change. This paper describes an architecture-centric approach and environment for formulating\u00a0\u2026", "num_citations": "3\n", "authors": ["641"]}
{"title": "Patterns and component-oriented system development\n", "abstract": " A primary aim of component-based software engineering (CBSE) is to benefit from the reuse of stable software components, in order to reduce production costs, improve system quality and achieve greater productivity. It is not surprising, then, that applying patterns to CBSE is an attractive goal, since patterns themselves are an expression of the desire to achieve benefits by reuse. We present an analysis of applying patterns to CBSE and show that there are significant challenges in reaping the benefits of patterns in blackbox development. However, by exploring the real motivations behind the use of patterns in software engineering, it is possible to apply certain patterns concepts and to achieve real benefit from doing so. We also show how the approach can be applied to other blackbox development approaches.", "num_citations": "3\n", "authors": ["641"]}
{"title": "A Development Strategy for Minimising Risks in Component-Based Development\n", "abstract": " A Development Strategy for Minimising Risks in Component-Based Development - Lancaster EPrints LOADING Skip to main content Lancaster University homepage Home Browse By Year By Subject By Department Search Help A Development Strategy for Minimising Risks in Component-Based Development Kotonya, G. and Rashid, A. (2001) A Development Strategy for Minimising Risks in Component-Based Development. In: 27th Euromicro Conference: Workshop on Component-Based Software Engineering, 1900-01-01. (Unpublished) Full text not available from this repository. Item Type: Contribution to Conference (Other) Journal or Publication Title: 27th Euromicro Conference: Workshop on Component-Based Software Engineering Uncontrolled Keywords: /dk/atira/pure/researchoutput/libraryofcongress/qa75 Subjects: Departments: Faculty of Science and Technology > School of Computing & Communications \u2026", "num_citations": "3\n", "authors": ["641"]}
{"title": "Consumer-centred validation for runtime adaptation in service-oriented system\n", "abstract": " Ensuring that service-oriented systems can adapt quickly and effectively to changes in service quality, business needs and their runtime environment is an increasingly important research problem. However, while considerable research has focused on developing runtime adaptation frameworks for service-oriented systems, there has been markedly less work on assessing the effectiveness of recommended adaptations. One way to address the problem is through validation. Validation not only allows us to assess how well a recommended adaptation addresses the concerns for which the system is reconfigured, it provides us with insights into the nature of problems for which different adaptations are suited. However, the dynamic nature of runtime adaptation and the changeable contexts in which service-oriented systems operate make it difficult to specify appropriate validation mechanisms in advance. This paper\u00a0\u2026", "num_citations": "2\n", "authors": ["641"]}
{"title": "Service-oriented product lines\n", "abstract": " Dynamic reconfiguration approaches in the literature have focused on specific problems of each application area (e.g., context awareness [1], autonomous software component version control, etc.), and development of reusable and dynamically reconfigurable core assets has not been fully investigated. As such, a research theme that addresses development issues for reusable and dynamically reconfigurable core assets has emerged and it is called dynamic software product lines (DSPLs) [2].", "num_citations": "2\n", "authors": ["641"]}
{"title": "Editorial Component-based software engineering\n", "abstract": " The push to improve quality, productivity and time-tomarket in software development has seen the emergence of component-based software engineering (CBSE) as an enabling technology. CBSE encompasses two concurrent processes-component engineering and application engineering. The aim of component engineering is to develop reusable components from which applications are built. It identifies, constructs, catalogues, and disseminates a set of software components in a particular application domain. Application engineering qualifies, adapts, and integrates these components for use in a new system. Although CBSE is generating a great deal of interest amongst the software engineering community, we are only now beginning to appreciate the complex engineering problems posed by the new paradigm. The five papers in this Special Issue are written by leading researchers in the field. The papers cover\u00a0\u2026", "num_citations": "2\n", "authors": ["641"]}
{"title": "BoboCEP: Distributed Complex Event Processing for Resilient Fault-Tolerance Support in IoT\n", "abstract": " Providing effective fault-tolerance (FT) support for Internet of Things (IoT) systems is hampered by the many ad hoc ways that it is implemented. We propose BoboCEP, a Complex Event Processing (CEP) system that provides resilient FT support for IoT systems, where errors are defined as nondeterministic finite automata. BoboCEP is designed to be distributed at the network edge, which facilitates resilient event processing and load balancing due to the active replication of FT support across the edge. We evaluated BoboCEP on a vertical farming use case to demonstrate long-term FT support and load balancing, and stress tested it under scenarios with high data throughput.", "num_citations": "1\n", "authors": ["641"]}
{"title": "MAAT: Mobile Apps As Things in the IoT\n", "abstract": " As the Internet of Things (IoT) proliferates, the potential for its opportunistic interaction with traditional mobile apps becomes apparent. We argue that to fully take advantage of this potential, mobile apps must become things themselves, and interact in a smart space like their hardware counterparts. We present an extension to our Atlas thing architecture on smartphones, allowing mobile apps to behave as things and provide powerful services and functionalities. To this end, we also consider the role of the mobile app developer, and introduce actionable keywords (AKWs)---a dynamically programmable description---to enable potential thing to thing interactions. The AKWs empower the mobile app to dynamically react to services provided by other things, without being known a priori by the original app developer. In this paper, we present the mobile-apps-as-things (MAAT) concept along with its AKW concept and\u00a0\u2026", "num_citations": "1\n", "authors": ["641"]}
{"title": "A method for specifying component-based systems\n", "abstract": " A Method for Specifying Component-based Systems - Lancaster EPrints LOADING Skip to main content Lancaster University homepage Home Browse By Year By Subject By Department Search Help A Method for Specifying Component-based Systems Kotonya, G. (2000) A Method for Specifying Component-based Systems. UNSPECIFIED. (Unpublished) Full text not available from this repository. Item Type: Other Uncontrolled Keywords: /dk/atira/pure/researchoutput/libraryofcongress/qa75 Subjects: Departments: Faculty of Science and Technology > School of Computing & Communications ID Code: 11878 Deposited By: ep_importer_comp Deposited On: 07 Jul 2011 15:51 Refereed?: No Published?: Unpublished Last Modified: 09 May 2020 07:06 URI: https://eprints.lancs.ac.uk/id/eprint/11878 Lancaster University Library homepage Links EPrints FAQ Privacy Policy Connect via Social Media \u00a9 2020 Lancaster \u2026", "num_citations": "1\n", "authors": ["641"]}