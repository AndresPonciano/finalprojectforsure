{"title": "The social structure of free and open source software development\n", "abstract": " Metaphors, such as the Cathedral and Bazaar, used to describe the organization of FLOSS projects typically place them in sharp contrast to proprietary development by emphasizing FLOSS\u2019s distinctive social and communications structures. But what do we really know about the communication patterns of FLOSS projects? How generalizable are the projects that have been studied? Is there consistency across FLOSS projects? Questioning the assumption of distinctiveness is important because practitioner\u2013advocates from within the FLOSS community rely on features of social structure to describe and account for some of the advantages of FLOSS production. To address this question, we examined 120 project teams from SourceForge, representing a wide range of FLOSS project types, for their communications centralization as revealed in the interactions in the bug tracking system. We found that FLOSS development teams vary widely in their communications centralization, from projects completely centered on one developer to projects that are highly decentralized and exhibit a distributed pattern of conversation between developers and active users. We suggest, therefore, that it is wrong to assume that FLOSS projects are distinguished by a particular social structure merely because they are FLOSS. Our findings suggest that FLOSS projects might have to work hard to achieve the expected development advantages which have been assumed to flow from\" going open.\" In addition, the variation in communications structure across projects means that communications centralization is useful for comparisons between FLOSS teams. We found that\u00a0\u2026", "num_citations": "755\n", "authors": ["890"]}
{"title": "Free/Libre open-source software development: What we know and what we do not know\n", "abstract": " We review the empirical research on Free/Libre and Open-Source Software (FLOSS) development and assess the state of the literature. We develop a framework for organizing the literature based on the input-mediator-output-input (IMOI) model from the small groups literature. We present a quantitative summary of articles selected for the review and then discuss findings of this literature categorized into issues pertaining to inputs (e.g., member characteristics, technology use, and project characteristics), processes (software development practices, social processes, and firm involvement practices), emergent states (e.g., social states and task-related states), and outputs (e.g. team performance, FLOSS implementation, and project evolution). Based on this review, we suggest topics for future research, as well as identify methodological and theoretical issues for future inquiry in this area, including issues relating to\u00a0\u2026", "num_citations": "563\n", "authors": ["890"]}
{"title": "Defining open source software project success\n", "abstract": " Information systems success is one of the most widely used dependent variables in information systems research. In this paper, we identify a range of measures that can be used to assess the success of open source software (OSS) projects. We identify measures based on a review of the literature, a consideration of the OSS development process and an analysis of the opinions of OSS developers. For each measure, we provide examples of how they might be used in a study of OSS development.", "num_citations": "457\n", "authors": ["890"]}
{"title": "Information systems success in free and open source software development: Theory and measures\n", "abstract": " Information systems success is one of the most widely used dependent variables in information systems (IS) research, but research on free/libre and open source software (FLOSS) often fails to appropriately conceptualize this important concept. In this article, we reconsider what success means within a FLOSS context. We first review existing models of IS success and success variables used in FLOSS research and assess them for their usefulness, practicality and fit to the FLOSS context. Then, drawing on a theoretical model of group effectiveness in the FLOSS development process, as well as an on\u2010line discussion with developers, we present additional concepts that are central to an appropriate understanding of success for FLOSS. In order to examine the practicality and validity of this conceptual scheme, the second half of our article presents an empirical study that demonstrates operationalizations of the\u00a0\u2026", "num_citations": "384\n", "authors": ["890"]}
{"title": "Validity issues in the use of social network analysis with digital trace data\n", "abstract": " There is an exciting natural match between social network analysis methods and the growth of data sources produced by social interactions via information technologies, from online communities to corporate information systems. Information Systems researchers have not been slow to embrace this combination of method and data. Such systems increasingly provide \u201cdigital trace data\u201d that provide new research opportunities. Yet digital trace data are substantively different from the survey and interview data for which network analysis measures and interpretations were originally developed. This paper examines 10 validity issues associated with the combination of digital trace data and social network analysis methods, with examples from the IS literature, to provide recommendations for improving the validity of future research.", "num_citations": "358\n", "authors": ["890"]}
{"title": "Self-organization of teams for free/libre open source software development\n", "abstract": " This paper provides empirical evidence about how free/libre open source software development teams self-organize their work, specifically, how tasks are assigned to project team members. Following a case study methodology, we examined developer interaction data from three active and successful FLOSS projects using qualitative research methods, specifically inductive content analysis, to identify the task-assignment mechanisms used by the participants. We found that \u2018self-assignment\u2019 was the most common mechanism across three FLOSS projects. This mechanism is consistent with expectations for distributed and largely volunteer teams. We conclude by discussing whether these emergent practices can be usefully transferred to mainstream practice and indicating directions for future research.", "num_citations": "283\n", "authors": ["890"]}
{"title": "FLOSSmole: A collaborative repository for FLOSS research data and analyses\n", "abstract": " This article introduces and expands on previous work on a collaborative project, called FLOSSmole (formerly OSSmole), designed to gather, share, and store comparable data and analyses of free, libre, and open source software (FLOSS) development for academic research. The project draws on the ongoing collection and analysis efforts of many research groups, reducing duplication, and promoting compatibility both across sources of FLOSS data and across research groups and analyses. The article outlines current difficulties with the current typical quantitative FLOSS research process and uses these to develop requirements and presents the design of the system.", "num_citations": "270\n", "authors": ["890"]}
{"title": "The Perils and Pitfalls of Mining SourceForge.\n", "abstract": " SourceForge provides abundant accessible data from open source software development projects, making it an attractive data source for software engineering research. However it is not without theoretical peril and practical pitfalls. Here, we outline practical lessons gained from our spidering, parsing and analysis of SourceForge data. SourceForge can be practically difficult: projects are defunct, data from earlier systems has been dumped in and crucial data is hosted outside SourceForge, dirtying the retrieved data. These practical issues play directly into analysis: decisions made in screening projects can reduce the range of variables, skewing data and biasing correlations. SourceForge is theoretically perilous: because it provides easily accessible data items for each project, tempting researchers to fit their theories to these limited data. Worse, few are plausible dependent variables. Studies are thus likely to test\u00a0\u2026", "num_citations": "252\n", "authors": ["890"]}
{"title": "Core and periphery in free/libre and open source software team communications\n", "abstract": " The concept of the core group of developers is important and often discussed in empirical studies of FLOSS projects. This paper examines the question, \"how does one empirically distinguish the core?\" Being able to identify the core members of a FLOSS development project is important because many of the processes necessary for successful projects likely involve core members differently than peripheral members, so analyses that mix the two groups will likely yield invalid results. We compare 3 analysis approaches to identify the core: the named list of developers, a Bradford\u2019s law analysis that takes as the core the most frequent contributors and a social network analysis of the interaction pattern that identifies the core in a core-and-periphery structure. We apply these measures to the interactions around bug fixing for 116 SourceForge projects. The 3 techniques identify different individuals as core members\u00a0\u2026", "num_citations": "238\n", "authors": ["890"]}
{"title": "Guest Editors' Introduction: Wireless Grids--Distributed Resource Sharing by Mobile, Nomadic, and Fixed Devices\n", "abstract": " Wireless grids, a new type of resource-sharing network, connect sensors, mobile phones, and other edge devices with each other and with wired grids. Ad hoc distributed resource sharing allows these devices to offer new resources and locations of use for grid computing. This article places wireless grids in context, explains their basic requirements, and provides an example implementation that uses a wireless grid for distributed audio recording. Finally, it introduces articles in this special issue on wireless grid architectures and applications.", "num_citations": "233\n", "authors": ["890"]}
{"title": "Hierarchy and centralization in free and open source software team communications\n", "abstract": " Free/Libre Open Source Software (FLOSS) development teams provide an interesting and convenient setting for studying distributed work. We begin by answering perhaps the most basic question: what is the social structure of these teams? We conducted social network analyses of bug-fixing interactions from three repositories: Sourceforge, GNU Savannah and Apache Bugzilla. We find that some OSS teams are highly centralized, but contrary to expectation, others are not. Projects are mostly quite hierarchical on four measures of hierarchy, consistent with past research but contrary to the naive image of these projects. Furthermore, we find that the level of centralization is negatively correlated with project size, suggesting that larger projects become more modular, or possibly that becoming more modular is a key to growth. The paper makes a further methodological contribution by identifying appropriate\u00a0\u2026", "num_citations": "228\n", "authors": ["890"]}
{"title": "Beyond the organizational \u2018container\u2019: Conceptualizing 21st century sociotechnical work\n", "abstract": " The sociotechnical systems (STS) approach provides a framework that is well suited to grappling with many issues of work in organizations. By conceiving of work systems as mutually-shaping social and technological systems, the STS approach has provided decades of researchers and practitioners with robust analytical tools to consider both the social and the technical elements of organizational contexts. However, we identify two areas where the conceptualization of sociotechnical systems must be updated to reflect the role of information infrastructures as an enabler of trans-organizational work arrangements. First, with its view of nested systems, the STS approach encapsulates work and the infrastructure used to do it within organizations (either explicitly or implicitly) \u2014 often leading to a \u201ccontainer\u201d view of organizations as the context of work and a venue for joint optimization of the social and the technical\u00a0\u2026", "num_citations": "205\n", "authors": ["890"]}
{"title": "Collaboration through open superposition: A theory of the open source way\n", "abstract": " This paper develops and illustrates the theory of collaboration through open superposition: the process of depositing motivationally independent layers of work on top of each other over time. The theory is developed in a study of community-based free and open source software (FLOSS) development, through a research arc of discovery (participant observation), replication (two archival case studies), and theorization. The theory explains two key findings: (1) the overwhelming majority of work is accomplished with only a single programmer working on any one task, and (2) tasks that appear too large for any one individual are more likely to be deferred until they are easier rather than being undertaken through structured team work. Moreover, the theory explains how working through open superposition can lead to the discovery of a work breakdown that results in complex, functionally interdependent, work being\u00a0\u2026", "num_citations": "175\n", "authors": ["890"]}
{"title": "Coordination theory: A ten-year retrospective\n", "abstract": " The role of IT in establishing the pervasiveness of aesthetics in today's business world is described by Schroeder, who argues that Web design has brought visual issues into the mainstream of strategic thinking. The Web mandates visualizing almost every aspect of corporate strategy, operations and communication. The framework begins with the design characteristics of the IT artifact as independent variables. This chapter shows how aesthetic concepts influence IT-related phenomena. Although the study of aesthetics in IT is still in its infancy, a series of methodological issues has already been raised and others will probably emerge as more studies are conducted. Designing aesthetic information systems (IS) may be viewed by some as gratuitous or even manipulative. Research on graphics in Management Information Systems (MIS) has concentrated on objective design features whereas much of the research on\u00a0\u2026", "num_citations": "151\n", "authors": ["890"]}
{"title": "Effective work practices for software engineering: free/libre open source software development\n", "abstract": " We review the literature on Free/Libre Open Source Software (FLOSS) development and on software development, distributed work and teams more generally to develop a theoretical model to explain the performance of FLOSS teams. The proposed model is based on Hackman's [34] model of effectiveness of work teams, with coordination theory [52] and collective mind [79] to extend Hackman's model by elaborating team practices relevant to effectiveness in software development. We propose a set of propositions to guide further research.", "num_citations": "134\n", "authors": ["890"]}
{"title": "Social dynamics of free and open source team communications\n", "abstract": " This paper furthers inquiry into the social structure of free and open source software (FLOSS) teams by undertaking social network analysis across time. Contrary to expectations, we confirmed earlier findings of a wide distribution of centralizations even when examining the networks over time. The paper also provides empirical evidence that while change at the center of FLOSS projects is relatively uncommon, participation across the project communities is highly skewed, with many participants appearing for only one period. Surprisingly, large project teams are not more likely to undergo change at their centers.", "num_citations": "133\n", "authors": ["890"]}
{"title": "Scientific software production: incentives and collaboration\n", "abstract": " Software plays an increasingly critical role in science, including data analysis, simulations, and managing workflows. Unlike other technologies supporting science, software can be copied and distributed at essentially no cost, potentially opening the door to unprecedented levels of sharing and collaborative innovation. Yet we do not have a clear picture of how software development for science fits into the day-to-day practice of science, or how well the methods and incentives of its production facilitate realization of this potential. We report the results of a multiple-case study of software development in three fields: high energy physics, structural biology, and microbiology. In each case, we identify a typical publication, and use qualitative methods to explore the production of the software used in the science represented by the publication. We identify several different production systems, characterized primarily by\u00a0\u2026", "num_citations": "130\n", "authors": ["890"]}
{"title": "Software in the scientific literature: Problems with seeing, finding, and using software mentioned in the biology literature\n", "abstract": " Software is increasingly crucial to scholarship, yet the visibility and usefulness of software in the scientific record are in question. Just as with data, the visibility of software in publications is related to incentives to share software in reusable ways, and so promote efficient science. In this article, we examine software in publications through content analysis of a random sample of 90 biology articles. We develop a coding scheme to identify software \u201cmentions\u201d and classify them according to their characteristics and ability to realize the functions of citations. Overall, we find diverse and problematic practices: Only between 31% and 43% of mentions involve formal citations; informal mentions are very common, even in high impact factor journals and across different kinds of software. Software is frequently inaccessible (15%\u201329% of packages in any form; between 90% and 98% of specific versions; only between 24%\u201340\u00a0\u2026", "num_citations": "127\n", "authors": ["890"]}
{"title": "Towards a portfolio of FLOSS project success measures\n", "abstract": " Project success is one of the most widely used dependent variables in information systems research. However, conventional measures of project success are difficult to apply to free/libre open source software projects. In this paper, we present an analysis of four measures of success applied to SourceForge projects: number of members of the extended development community, project activity, bug fixing time and number of downloads. We argue that these four measures provide different insights into the collaboration and control mechanisms of the projects.", "num_citations": "104\n", "authors": ["890"]}
{"title": "Assessing the health of open source communities\n", "abstract": " Before contributing to a free or open source software project, understand the developers, leaders, and active users behind it. The computing world lauds many Free/Libre and open source software offerings for both their reliability and features. Successful projects such as the Apache httpd Web server and Linux operating system kernel have made FLOSS a viable option for many commercial organizations. While FLOSS code is easy to access, understanding the communities that build and support the software can be difficult. Despite accusations from threatened proprietary vendors, few continue to believe that open source programmers are all amateur teenaged hackers working alone in their bedrooms. But neither are they all part of robust, well-known communities like those behind Apache and Linux.", "num_citations": "98\n", "authors": ["890"]}
{"title": "Coordination of free/libre open source software development\n", "abstract": " The apparent success of free/libre open source software (FLOSS) development projects such as Linux, Apache, and many others has raised the question, what lessons from FLOSS development can be transferred to mainstream software development? In this paper, we use coordination theory to analyze coordination mechanisms in FLOSS development and compare our analysis with existing literature on coordination in proprietary software development. We examined developer interaction data from three active and successful FLOSS projects and used content analysis to identify the coordination mechanisms used by the participants. We found that there were similarities between the FLOSS groups and the reported practices of the proprietary project in the coordination mechanisms used to manage task-task dependencies. However, we found clear differences in the coordination mechanisms used to manage task-actor dependencies. While published descriptions of proprietary software development involved an elaborate system to locate the developer who owned the relevant piece of code, we found that \u201cself-assignment\u201d was the most common mechanism across three FLOSS projects. This coordination mechanism is consistent with expectations for distributed and largely volunteer teams. We conclude by discussing whether these emergent practices can be usefully transferred to mainstream practice and indicating directions for future research.", "num_citations": "84\n", "authors": ["890"]}
{"title": "The role of face-to-face meetings in technology-supported self-organizing distributed teams\n", "abstract": " We examine the role of face-to-face meetings in the context of technology-supported self-organizing distributed (or virtual teams), specifically free/libre open source software (FLOSS) development teams. Based on a qualitative inductive analysis of data from interviews and observations at FLOSS conferences, we identify a variety of settings in which developers meet face-to-face, and we point out the activities performed in these settings and the benefits obtained. Contrary to conventional wisdom about distributed teams, FLOSS developers generally do not meet face-to-face until the project is well under way. An additional benefit of face-to-face meetings is time away from a regular job and speed of interaction for certain kinds of tasks.", "num_citations": "73\n", "authors": ["890"]}
{"title": "Collaboration using OSSmole: A repository of FLOSS data and analyses\n", "abstract": " This paper introduces a collaborative project OSSmole which collects, shares, and stores comparable data and analyses of free, libre and open source software (FLOSS) development for research purposes. The project is a clearinghouse for data from the ongoing collection and analysis efforts of many disparate research groups. A collaborative data repository reduces duplication and promote compatibility both across sources of FLOSS data and across research groups and analyses. The primary objective of OSSmole is to mine FLOSS source code repositories and provide the resulting data and summary analyses as open source products. However, the OSSmole data model additionally supports donated raw and summary data from a variety of open source researchers and other software repositories. The paper first outlines current difficulties with the typical quantitative FLOSS research process and uses these to\u00a0\u2026", "num_citations": "62\n", "authors": ["890"]}
{"title": "Incentives and integration in scientific software production\n", "abstract": " Science policy makers are looking for approaches to increase the extent of collaboration in the production of scientific software, looking to open collaborations in open source software for inspiration. We examine the software ecosystem surrounding BLAST, a key bioinformatics tool, identifying outside improvements and interviewing their authors. We find that academic credit is a powerful motivator for the production and revealing of improvements. Yet surprisingly, we also find that improvements motivated by academic credit are less likely to be integrated than those with other motivations, including financial gain. We argue that this is because integration makes it harder to see who has contributed what and thereby undermines the ability of reputation to function as a reward for collaboration. We consider how open source avoids these issues and conclude with policy approaches to promoting wider collaboration by\u00a0\u2026", "num_citations": "61\n", "authors": ["890"]}
{"title": "Coordination without discussion? Socio-technical congruence and Stigmergy in Free and Open Source Software projects\n", "abstract": " The idea of congruence between the structure of technical and work dependencies has been demonstrated in commercial software development but has not been explored in detail in free and open source software (FLOSS) development. Previous work identified 103 task episodes, selected from two FLOSS projects, and found that 83 were performed by single actors. We analyze the 20 tasks with multiple actors and find that 14 were performed in the absense of any discursive communication between developers. The qualitative analysis of this evidence shows the paradox that, even if the developers do not seem to communicate explicitly, the software is nonetheless built as result of a collective effort, apparently without central coordination. In answer to this puzzle, this paper turns to the concept of stygmergic coordination as possible explanation. Stigmergy explains how actors can affect the behavior of other members of the community through the traces that their activities leave in shared artifacts. Such collaboration has implications for the socio-technical congruence analysis and the design of collaborative systems.", "num_citations": "56\n", "authors": ["890"]}
{"title": "Stigmergic coordination in FLOSS development teams: Integrating explicit and implicit mechanisms\n", "abstract": " The vast majority of literature on coordination in team-based projects has drawn on a conceptual separation between explicit (e.g. plans, feedback) and implicit coordination mechanisms (e.g. mental maps, shared knowledge). This analytic distinction presents some limitations in explaining how coordination is reached in organizations characterized by distributed teams, scarce face to face meetings and fuzzy and changing lines of authority, as in free/libre open source software (FLOSS) development.Analyzing empirical illustrations from two FLOSS projects, we highlight the existence of a peculiar model, stigmergic coordination, which includes aspects of both implicit and explicit mechanisms. The work product itself (implicit) and the characteristics under which it is shared (explicit) play an under-appreciated role in helping software developers manage dependencies as they arise. We develop this argument beyond\u00a0\u2026", "num_citations": "55\n", "authors": ["890"]}
{"title": "Effective work practices for FLOSS development: A model and propositions\n", "abstract": " We review the literature on Free/Libre Open Source Software (FLOSS) development and on software development, distributed work and teams more generally to develop a theoretical model to explain the performance of FLOSS teams. The proposed model is based on Hackman's model of effectiveness of work teams, with coordination theory and collective mind to extend Hackman's model by elaborating team practices relevant to effectiveness in software development. We propose a set of propositions to guide further research.", "num_citations": "54\n", "authors": ["890"]}
{"title": "Summary of the first workshop on sustainable software for science: Practice and experiences (WSSSPE1)\n", "abstract": " Challenges related to development, deployment, and maintenance of reusable software for science are becoming a growing concern. Many scientists' research increasingly depends on the quality and availability of software upon which their works are built. To highlight some of these issues and share experiences, the First Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE1) was held in November 2013 in conjunction with the SC13 Conference. The workshop featured keynote presentations and a large number (54) of solicited extended abstracts that were grouped into three themes and presented via panels. A set of collaborative notes of the presentations and discussion was taken during the workshop. Unique perspectives were captured about issues such as comprehensive documentation, development and deployment practices, software licenses and career paths for developers. Attribution systems that account for evidence of software contribution and impact were also discussed. These include mechanisms such as Digital Object Identifiers, publication of \"software papers\", and the use of online systems, for example source code repositories like GitHub. This paper summarizes the issues and shared experiences that were discussed, including cross-cutting issues and use cases. It joins a nascent literature seeking to understand what drives software work in science, and how it is impacted by the reward systems of science. These incentives can determine the extent to which developers are motivated to build software for the long-term, for the use of others, and whether to work collaboratively or separately. It\u00a0\u2026", "num_citations": "53\n", "authors": ["890"]}
{"title": "Understanding the scientific software ecosystem and its impact: Current and future measures\n", "abstract": " Software is increasingly important to the scientific enterprise, and science-funding agencies are increasingly funding software work. Accordingly, many different participants need insight into how to understand the relationship between software, its development, its use, and its scientific impact. In this article, we draw on interviews and participant observation to describe the information needs of domain scientists, software component producers, infrastructure providers, and ecosystem stewards, including science funders. We provide a framework by which to categorize different types of measures and their relationships as they reach around from funding, development, scientific use, and through to scientific impact. We use this framework to organize a presentation of existing measures and techniques, and to identify areas in which techniques are either not widespread, or are entirely missing. We conclude with\u00a0\u2026", "num_citations": "48\n", "authors": ["890"]}
{"title": "Social dynamics of FLOSS team communication across channels\n", "abstract": " This paper extends prior investigation into the social dynamics of free and open source (FLOSS) teams by examining the methodological questions arising from research using social network analysis on open source projects. We evaluate the validity of data sampling by examining dynamics of communication centralization, which vary across multiple communication channels. We also introduce a method for intensity-based smoothing in dynamic social network analysis.", "num_citations": "38\n", "authors": ["890"]}
{"title": "Towards a sharing protocol for wireless grids\n", "abstract": " Wireless Grids are resource-sharing networks formed by low-powered mobile and nomadic devices. Ad-hoc resource sharing transactions are complex and require the relevant devices to agree on protocols for sharing without the presence of persistent servers. The authors are developing a Sharing Protocol as a meta protocol for adhoc resource sharing to facilitate these agreements. The protocol will allow devices to negotiate and agree on the mechanisms, methods, standards and protocols that will be used for the elements of resource sharing. These elements include, at least, Resource Description, Trust Establishment, Transaction Negotiation and the coordination systems to be used in making use of the resources. Each aspect of the resource sharing interaction would be handed off to a capable, available and agreed method or protocol. This paper discusses the requirements of an ad-hoc resource sharing transaction and outlines how the draft Sharing Protocol could intemperate with a range of other protocols to meet these requirements.", "num_citations": "34\n", "authors": ["890"]}
{"title": "Coordinating user and device behavior in wireless grids\n", "abstract": " The evolution of computing is characterized by decentralization and decreasing institutional control over resources. Wireless Grids, that is, fixed and mobile ad-hoc resource sharing networks, are challenging environments in which users strategic behaviors are crucial to system performance. We review the mechanisms employed to regulate strategic behavior online-technical, social, legal and economic-and discuss trends in their operation and application in distributed wireless grid computing.", "num_citations": "30\n", "authors": ["890"]}
{"title": "Alone Together: A socio-technical theory of motivation, coordination and collaboration technologies in organizing for free and open source software development\n", "abstract": " This dissertation presents evidence that the production of Free and Open Source Software (FLOSS) is far more alone than together; it is far more often individual work done\" in company\" than it is teamwork. When tasks appear too large for an individual they are more likely to be deferred until they are easier rather than be undertaken through teamwork. This way of organizing is successful because it fits with the motivations of the participants, the nature of software development as a task, and the key technologies of FLOSS collaboration. The empirical findings are important because they ground and motivate a theory that enables a systematic approach to understanding the implications of FLOSS development as a model for adaptation and the future of work. The dissertation presents a process of discovery (participant observation), replication (a systematic study of project archives), and generalization to theory (a\u00a0\u2026", "num_citations": "29\n", "authors": ["890"]}
{"title": "Heartbeat: Measuring Active User Base and Potential User Interest in FLOSS Projects\n", "abstract": " This paper presents a novel method and algorithm to measure the size of an open source project\u2019s user base and the level of potential user interest that it generates. Previously unavailable download data at a daily resolution confirms hypothesized patterns related to release cycles. In short, regular users rapidly download the software after a new release giving a way to measure the active user base. In contrast, potential new users download the application independently of the release cycle, and the daily download figures tend to plateau at this rate when a release has not been made for some time. An algorithm for estimating these measures from download time series is demonstrated and the measures are examined over time in two open source projects.", "num_citations": "27\n", "authors": ["890"]}
{"title": "Digital manufacturing\u2013Napster fabbing: Internet delivery of physical products\n", "abstract": " Looks at \u201cfabbing\u201d \u2013 digital fabricating of physical products and its future in the business world via the Internet. Concludes that this is a process that is here to stay and therefore technology needs to become more sophisticated to accommodate it. The research register for this journal is available at http://www.mcbup.com/research_registers. The current issue and full text archive of this journal is available at http://www.emerald\u2010library.com/ft.", "num_citations": "27\n", "authors": ["890"]}
{"title": "Emergent decision-making practices in technology-supported self-organizing distributed teams\n", "abstract": " We seek to identify work practices that make technology-supported, self-organizing, distributed (or virtual) teams (TSSODT for short) effective in producing outputs satisfactory to their sponsors, meeting the needs of their members, and continuing to function. A particularly important practice for team effectiveness is decision making: are the right decisions made at the right time to get the work done in a way that satisfies team sponsors, keeps contributors happy and engaged, and enables continued team success? In this research-in-progress paper, we report on an inductive qualitative analysis of 120 decision episodes taken by two Free/Libre Open Source Software development teams. Our analysis revealed differences in decision-making practices that seem to be related to differences in overall team effectiveness.", "num_citations": "25\n", "authors": ["890"]}
{"title": "Emergent decision-making practices in free/libre open source software (FLOSS) development teams\n", "abstract": " We seek to identify work practices that make Free/Libre Open Source Software (FLOSS) development teams effective. Particularly important to team effectiveness is decision making. In this paper, we report on an inductive qualitative analysis of 360 decision episodes of six FLOSS development teams. Our analysis revealed diversity in decision-making practices that seem to be related to differences in overall team characteristics and effectiveness.", "num_citations": "23\n", "authors": ["890"]}
{"title": "Face-to-face interactions in self-organizing distributed teams\n", "abstract": " We explore the role of face-to-face meetings in the life of distributed teams using data from Free/Libre Open Source Software (FLOSS) development teams. Such distributed teams are part of many organizations\u2019 new vision of management in the 21st century. Practitioner research has suggested the need for face-to-face meetings when a team is formed, but few studies have considered the role of face-to-face meetings during a team\u2019s life. Based on a qualitative inductive analysis of data from interviews and observations at FLOSS conferences, we identify a variety of settings in which FLOSS developers meet face-to-face, activities performed in these settings and benefits obtained.", "num_citations": "23\n", "authors": ["890"]}
{"title": "Report on the second workshop on sustainable software for science: Practice and experiences (WSSSPE2)\n", "abstract": " This technical report records and discusses the Second Workshop on Sustainable Software for Science: Practice and Experiences (WSSSPE2). The report includes a description of the alternative, experimental submission and review process, two workshop keynote presentations, a series of lightning talks, a discussion on sustainability, and five discussions from the topic areas of exploring sustainability; software development experiences; credit & incentives; reproducibility & reuse & sharing; and code testing & code review. For each topic, the report includes a list of tangible actions that were proposed and that would lead to potential change. The workshop recognized that reliance on scientific software is pervasive in all areas of world-leading research today. The workshop participants then proceeded to explore different perspectives on the concept of sustainability. Key enablers and barriers of sustainable scientific software were identified from their experiences. In addition, recommendations with new requirements such as software credit files and software prize frameworks were outlined for improving practices in sustainable software engineering. There was also broad consensus that formal training in software development or engineering was rare among the practitioners. Significant strides need to be made in building a sense of community via training in software and technical practices, on increasing their size and scope, and on better integrating them directly into graduate education programs. Finally, journals can define and publish policies to improve reproducibility, whereas reviewers can insist that authors provide sufficient information and\u00a0\u2026", "num_citations": "20\n", "authors": ["890"]}
{"title": "System and method for distributed audio recording and collaborative mixing\n", "abstract": " Two or more wireless devices can be independently controlled by their respective users, a mixer component, or a leader wireless device to perform audio recording, convert the recorded audio into a standard or proprietary audio stream format, and transmit the audio stream to a server. The real-time clocks of two or more participating wireless devices can be synchronized. A wireless device can insert timestamps into the audio stream to facilitate the mixing operation. Mixing of the two or more audio streams recorded by wireless devices can be performed by a mixer component either in real time (contemporaneously with the recording) or asynchronously with respect to the recording. The mixing can be performed in a fully automated mode, and/or in an operator-assisted mode.", "num_citations": "18\n", "authors": ["890"]}
{"title": "Analyzing leadership dynamics in distributed group communication\n", "abstract": " We apply social network analysis (SNA) to examine the dynamics of leadership in distributed groups, specifically Free/Libre Open Source Software development projects, and its relation to group performance. Based on prior work on leadership in distributed groups, we identify leaders with those who make the highest level of contribution to the group and assess the degree of leadership by measuring centralization of communications. We compare the dynamics of leadership in two FLOSS projects, one more and one less effective. We find that in both projects, centralization was higher in developer-oriented communications venues than in user-oriented venues, suggesting higher degrees of leadership in developer venues. However, we do not find a consistent relation between centralization and effectiveness. We suggest that SNA can instead be useful for identifying interesting periods in the history of the project, e\u00a0\u2026", "num_citations": "18\n", "authors": ["890"]}
{"title": "Paying attention to each other in visible work communities: Modeling bursty systems of multiple activity streams\n", "abstract": " Online work projects, from open source to wikipedia, have emerged as an important phenomenon. These communities offer exciting opportunities to investigate social processes because they leave traces of their activity over time. We argue that the rapid visibility of others' work afforded by the information systems used by these projects reaches out and attracts the attention of others who are peripherally aware of the group's online space, prompting them to begin or intensify their participation, binding separate individual streams of activity into a social entity. Previous work has suggested that for certain types of bursty social behavior (e.g. email), the frequency of the behavior is not homogeneously distributed but rather can be divided into two generative mechanisms: active sessions and passive background participation. We extend this work for the case of multiple conditionally independent streams of behavior\u00a0\u2026", "num_citations": "12\n", "authors": ["890"]}
{"title": "eResearch workflows for studying free and open source software development\n", "abstract": " This paper introduces eResearch workflow tools as a model for the research community studying free and open source software and its development. The paper first introduces eResearch as increasingly practiced in fields such as astrophysics and biology, then contrasts the practice of research on free and open source software. After outlining suitable research data sets the paper introduces a class of tools known as scientific workflow frameworks, focusing on one\u2014Taverna\u2014and introducing its features. To further explain the tool a complete workflow used for original research on FLOSS is described. Finally the paper considers the trade-offs inherent in these tools.", "num_citations": "11\n", "authors": ["890"]}
{"title": "Coordination theory and its application in HCI\n", "abstract": " Since the initial publication in 1994, Coordination Theory (Malone and Crowston, 1994)\u00a0has been referenced in nearly 300 journal articles, book chapters, conference papers and theses.\u00a0This chapter will analyze the contribution of this body of research to determine how\u00a0Coordination Theory has been used for user task analysis and modelling for HCI. Issues that will\u00a0be addressed include: 1) how the theory has been applied; 2) factors that led to the success of the\u00a0theory; and 3) identification of areas needing further research.", "num_citations": "11\n", "authors": ["890"]}
{"title": "Strategies for success in virtual collaboration: structures and norms for meetings, workflow, and technological platforms\n", "abstract": " Science is moving increasingly to team collaboration at distance (Olson et al. Scientific collaboration on the internet. 2008; Olson and Olson. Synt Lect Hum Center Inform 6:1\u2013151, 2013), or \u201cvirtual collaboration\u201d (Jarvenpaa et al. J Manag Inform Syst 14:29\u201364, 1998). Organization science has studied virtual collaboration and can provide a variety of useful insights. In this chapter, we draw on findings from this research to help scientists increase the likelihood of leading successful, effective virtual collaboration. In particular, we emphasize how discussion (in the form of conference calls and emails) is, on the one hand, a critical, valuable, and unavoidable mechanism for coordinating virtual collaborations. However, discussion is often the primary mode of coordination, and this can be problematic. Virtual collaborations absolutely need to mitigate these negative consequences of discussion-based coordination in order\u00a0\u2026", "num_citations": "10\n", "authors": ["890"]}
{"title": "Modularity and organizational dynamics in open source software (oss) production\n", "abstract": " Modularity has been seen as key to the success of OSS projects. However empirical studies on modularity of OSS systems have resulted in confusing results. To account for underlying mechanisms of those confusing results, we systematically examine widely studied OSS projects. Based on our systematic review on technical and organizational structures, we suggest that organizational circumstances of OSS production are at least in a continuum of tightly-coupled and loosely-coupled organizational circumstances of production in which both geographically distributed volunteers and paid developers with organizational ties work together (albeit separately over time). Furthermore, organizational circumstances of OSS production appear to be dynamic, as firms move in and out of OSS production communities over time. In essence we argue that the reason for the confusing empirical results was a persistent assumption that organizational circumstances of OSS production are static or unitary; rather what matters is the organizational circumstances of production in any episode of contribution. This research agenda paper proposes future inquiries to develop a comprehensive picture of ecological shift in different levels of system modularity and organizational circumstances of OSS production over time and through episodes.", "num_citations": "9\n", "authors": ["890"]}
{"title": "GROUP MAINTENANCE IN TECHNOLOGY-SUPPORTED DISTRIBUTED TEAMS.\n", "abstract": " The article focuses on group maintenance behavior in technology-supported distributed teams. The purpose of the article is to determine whether groups that show higher levels of group maintenance behavior are more successful in business. The research is examined in the context of Free/Libre Open Source Software (FLOSS) development virtual teams. Additional topics include an explanation of face theory, organizational citizenship behavior, and variations of success across the concepts of inputs, process, and outputs.", "num_citations": "9\n", "authors": ["890"]}
{"title": "Sharing, re-use and circulation of resources in cooperative scientific work\n", "abstract": " This one-day workshop aims to stimulate research on the sharing and reuse of scientific resources in cooperative scientific work. As science trends toward increasing geographic and temporal scales, larger collaborations, and greater interdisciplinarity, scientific resources increasingly need to be more mobile and integrated with computer supported information and communication environments. Sharing, reuse and circulation of resources become a central challenge and critical component of cooperative scientific work. We interpret sharing broadly to include circulating scientific materials in any way that makes them available to other scientists. We include a variety of resources such as data, software, materials and specimens, workflows, technical know-how, clinical and laboratory protocols, and algorithms. We explore a range of sharing and reuse practices past and present, what motivates and limits them, how\u00a0\u2026", "num_citations": "8\n", "authors": ["890"]}
{"title": "Stigmergy and Implicit Coordination in Software Development\n", "abstract": " How do distributed, loosely connected software developers coordinate? That is, how do they understand and manage the dependencies between their work and the work of others? We contribute to this important and frequently studied area by developing a theoretical perspective that brings together insights from implicit and stigmergic perspectives on coordination. We illustrate our theoretical contribution with analysis of \u201clore\u201d on best practices for open, distributed software collaboration.", "num_citations": "8\n", "authors": ["890"]}
{"title": "Decision making paths in self-organizing technology-mediated distributed teams\n", "abstract": " This paper investigates decision making in self-organizing technology-mediated distributed teams. This context provides an opportunity to examine how the use of technological support to span temporal and organizational discontinuities affects decision-making processes. 258 software-modification decision episodes were collected from the public emailing lists of six Free/Libre Open Source Software (FLOSS) projects over a span of five years. Six decision-making paths were identified as 1) short-cut decision-making path; 2) implicit-development decision-making path; 3) implicit-evaluation decision-making path; 4) normative decision-making path; 5) dynamic decision-making path; and 6) interrupted/delayed decision-making path. We suggest that the nature of the tasks and the affordances of the technology used reduce the need for explicit coordination, resulting in a broader range of possible decision processes than are observed in face-to-face groups.", "num_citations": "8\n", "authors": ["890"]}
{"title": "Why can\u2019t I manage academic papers like MP3s? The evolution and intent of metadata standards\n", "abstract": " This paper considers the deceptively simple question: Why can\u2019t downloaded academic papers be\u00a0managed in the simple and effective manner in which digital music files are managed? We make the\u00a0case that the answer is different treatments of metadata. Two key differences are identified: Firstly,\u00a0digital music metadata is standardized and moves with the content file, while academic metadata is\u00a0not and does not. Secondly digital music metadata lookup services are collaborative and automate\u00a0the movement from a digital file to the appropriate metadata, while academic metadata services\u00a0do not.  To understand why these differences exist we examine the divergent evolution of metadata standards\u00a0for digital music and academic papers. It is observed that the processes differ in interesting ways\u00a0according to their intent. Specifically music metadata was developed primarily for personal file\u00a0management, while the focus of academic metadata has been on information retrieval.\u00a0  We argue that lessons from MP3 metadata can assist individual academics facing their growing\u00a0personal document management challenges. Our focus therefore is not on metadata for the academic publishing industry or institutional resource sharing, it is limited to the personal libraries\u00a0growing on our hard-drives. This bottom-up approach to document management combined with\u00a0p2p distribution radically altered the music landscape. Might such an approach have a similar\u00a0impact on academic publishing? This paper outlines plans for improving the personal management\u00a0of academic papers\u2014doing academic metadata and file management the MP3 way\u2014and considers\u00a0the\u00a0\u2026", "num_citations": "8\n", "authors": ["890"]}
{"title": "Collaboration through superposition: How the IT artifact as an object of collaboration affords technical interdependence without organizational interdependence\n", "abstract": " This paper develops a theory of collaboration through superposition: the process of depositing separate layers on top of each other over time. The theory is developed in a study of development of community-based Free and Open Source Software (FLOSS), through a research arc of discovery (participant observation), replication (two archival case studies) and formalization (a model of developer choices). The theory explains two key findings: 1) the overwhelming majority of work is accomplished with only a single programmer working on a task and 2) when tasks appear too large for an individual they are more likely to be deferred until they are easier, rather than being undertaken through structured teamwork. It is theorized that this way of organizing is key to successful open collaboration where the IT artifact is the object of collaboration, because it allows the co-production of technically interdependent artifacts\u00a0\u2026", "num_citations": "7\n", "authors": ["890"]}
{"title": "Work features to support stigmergic coordination in distributed teams\n", "abstract": " When work products are shared via a computer system, members of distributed teams can see the work products produced by remote colleagues as easily as those from local colleagues.", "num_citations": "6\n", "authors": ["890"]}
{"title": "Collaboration through superposition: How the IT artifact as an object of collaboration affords technical interdependence without organizational interdependence\n", "abstract": " This paper develops a theory of collaboration through superposition: the process of depositing\u00a0separate layers on top of each other over time. The theory is developed in a study of development\u00a0of community-based Free and Open Source Software (FLOSS), through a research arc of\u00a0discovery (participant observation), replication (two archival case studies) and formalization (a\u00a0model of developer choices). The theory explains two key findings: 1) the overwhelming\u00a0majority of work is accomplished with only a single programmer working on a task and 2) when\u00a0tasks appear too large for an individual they are more likely to be deferred until they are easier,\u00a0rather than being undertaken through structured teamwork. It is theorized that this way of\u00a0organizing is key to successful open collaboration where the IT artifact is the object of\u00a0collaboration, because it allows the co-production of technically interdependent artifacts through\u00a0motivationally interdependent work. The affordances of software as an object of collaboration\u00a0are used as a framework to analyze efforts to learn from FLOSS in other domains of work and in\u00a0the IS function of for-profit organizations.", "num_citations": "6\n", "authors": ["890"]}
{"title": "FLOSS Project Effectiveness Measures1\n", "abstract": " In this chapter, we develop and illustrate measures of the effectiveness of FLOSS projects. FLOSS is a broad term used to embrace software that is developed and released under either a \u201cfree software\u201d or an \u201copen source\u201d license. While the free software and the open source movements are distinct, both kinds of licenses allow users to obtain and distribute the software\u2019s original source without charge (software is \u201cfree as in beer\u201d) and to inspect, modify, and redistribute modifications to the source code. While the open source movement views these freedoms pragmatically (as a development methodology), the free software movement emphasizes the meaning of \u201cfree as in speech,\u201d which is captured by the French/Spanish libre, and one of their methods of supporting those freedoms is \u201ccopyleft,\u201d famously embodied in the General Public License, meaning that derivative works must be made available under the same license terms as the original. This chapter focuses on development practices in distributed work, which are largely shared across the movements. For example, many (though by no means all) FLOSS developers contribute to projects as volunteers without working for a common organization or being paid. We therefore use the acronym FLOSS to refer collectively to free/libre and open source software.", "num_citations": "5\n", "authors": ["890"]}
{"title": "Learning from E litist J erks: Creating high\u2010quality knowledge resources from ongoing conversations\n", "abstract": " Online\u2010community management is commonly presented as the facilitation of conversation and contributions, especially converting readers to contributors. However, the goal of many discussion communities is to produce a high\u2010quality knowledge resource, whether to improve external task performance or to increase reputation and site traffic. What do moderation practices look like when the community is focused on the creation of a useable knowledge resource rather than facilitating an inclusive conversation? Under what conditions is this style of moderation likely to be successful? We present a case study from online gaming\u2014Elitist Jerks\u2014in which aggressive moderation is used to transform a conversational medium into a high\u2010quality knowledge resource, using the strategy of open censorship. We present a content analysis of moderator comments regarding censored messages. Our analysis revealed\u00a0\u2026", "num_citations": "5\n", "authors": ["890"]}
{"title": "Asynchronous decision-making in distributed teams\n", "abstract": " Extensive use of CSCW applications can influence group decision-making practices. Unlike previous research focused on the influence of synchronous ICTs, our study examines how group decisions are made in asynchronous communication channels. Our inductive qualitative analysis of 360 decision episodes of six FLOSS projects revealed diversity in decision-making practices, which appears to be related to differences in project effectiveness and task type. We also find that standardization of procedures through CSCW tools transforms the nature of some software development work from non-routine to standard procedure.", "num_citations": "5\n", "authors": ["890"]}
{"title": "Coordinating User and Device Behaviour in Wireless Grids\n", "abstract": " This article discusses the implications of this change for system and service design for distributed network applications including wireless grid applications. We identify some of the academic literatures that are likely to be increasingly relevant for adapting to these new challenges. In Section 2 of this article, we provide a stylized overview of the evolution of computing networks to wireless grids, to explain why the need to design for strategic behavior is becoming increasingly critical. We then briefly summarize the critical characteristics of wireless grids, as identified by our preliminary research on this issue Gaynor et al.(2003), McKnight & Howison (2003), McKnight et al.(forthcoming). Section 3 reviews the four principal mechanisms---technical, social, legal and economic---that are relevant for coordinating behavior in wireless grids and other distributed computing networks. Section 4 argues that these mechanisms evolve through the life-cycle of a technology and describes current trends in this evolution. The paper concludes by sketching our future work on considering the implications of our analysis for the design of wireless grids", "num_citations": "5\n", "authors": ["890"]}
{"title": "Softcite dataset: A dataset of software mentions in biomedical and economic research publications\n", "abstract": " Software contributions to academic research are relatively invisible, especially to the formalized scholarly reputation system based on bibliometrics. In this article, we introduce a gold\u2010standard dataset of software mentions from the manual annotation of 4,971 academic PDFs in biomedicine and economics. The dataset is intended to be used for automatic extraction of software mentions from PDF format research publications by supervised learning at scale. We provide a description of the dataset and an extended discussion of its creation process, including improved text conversion of academic PDFs. Finally, we reflect on our challenges and lessons learned during the dataset creation, in hope of encouraging more discussion about creating datasets for machine learning use.", "num_citations": "4\n", "authors": ["890"]}
{"title": "Sustaining scientific infrastructures: transitioning from grants to peer production (work-in-progress)\n", "abstract": " Science now relies on mid-level infrastructure, including shared instruments, cell lines, supercomputing resources, data sets, and software components. These are beyond the facilities and services traditionally provided by individual universities; funding agencies such as the NSF often support their initial creation but their long-term sustainability is a challenge and commercialization is only rarely an option. A promising model, though, is broad-based community support through peer production, often inspired by the organization of open source software projects. Such transitions, though, are not automatic or easy, just as commercialization is not. In this research I am studying successful and unsuccessful attempts to transition, building theory and practical guidance for scientists and funding agencies. In this work-in-progress paper, I present the motivation and background for the study and provide motivation through preliminary description of my first case study.", "num_citations": "4\n", "authors": ["890"]}
{"title": "No science software is an island: Collaborative software development needs in geosciences\n", "abstract": " Professional software practices increasingly involve software sharing and collaborative development of software. As science becomes an increasingly collaborative enterprise, is there any increasing need for collaborative software practices? We collected data from geoscientists in early career stages with diverse research areas. Although they had varying software development skills, they consistently emphasized the need for improved software sharing and reuse. Moreover they wish to learn more about modern software sharing, open source communities, and collaborative software development practices as they become more interested in various aspects of software stewardship. We briefly examine the current educational resources that early career scientists may have encountered and note that very few address the issues raised by our respondents. Accordingly, we argue that these aspects of work in today\u2019s science ought to be incorporated in scientific method and education curricula for scientists. We conclude with preliminary strategies for addressing this.", "num_citations": "4\n", "authors": ["890"]}
{"title": "Studying free software with free software and free methods\n", "abstract": " Free, Libre and Open source software (FLOSS1) is an intriguing subject for study. Academic studies of FLOSS have quickly expanded over the past 5 years approaching the topic from software engineering, economics, information systems, sociology, social psychology to name just a few. The pre-print repository at MIT now has over 192 papers and even that is only a small cross-section of the research of FLOSS. There are a number of review papers, such as Rossi (2004), which provide a useful introduction to the scope of academic research on FLOSS.It is to be hoped that this research is also relevant to FLOSS practitioners\u2014not just to the Ivory towers of the academy. In our research we focus on practices rather than motivations and we hope that our research will help to satisfy natural curiosity of developers as well as help the community identify the most effective practices for developing FLOSS.", "num_citations": "4\n", "authors": ["890"]}
{"title": "Collaboration through open superposition\n", "abstract": " School of Information Studies Syracuse University 343 Hinds Hall, Syracuse, NY 13244 crowston@ syr. edu", "num_citations": "4\n", "authors": ["890"]}
{"title": "Professionalization in cyberinfrastructure\n", "abstract": " In this report we address whether the cyberinfrastructure community should professionalize as it continues to encourage participation in cyberinfrastructure-related occupations, provide a career path, and continue to gain academic legitimacy. We brought members of the cyberinfrastructure community (high-performance computing, software, data, and infrastructure) together with organization scientists to discuss the professionalization of, and career paths for, emerging cyberinfrastructure roles. The cyberinfrastructure workforce is increasingly important to science, and this RCN will bring those interested in the cyberinfrastructure workforce together with scholars of technical workers and technical professions together. Among other contributions, we identified four general roles for cyberinfrastructure personnel: systems facing, software facing, researcher facing, and application facing. We discuss organization science research in professionalization and reflect on whether it makes sense to create a cyberinfrastructure profession at this stage.", "num_citations": "3\n", "authors": ["890"]}
{"title": "Leading cyberinfrastructure enterprise: Value propositions, stakeholders, and measurement\n", "abstract": " \u201cCyberinfrastructure\u201d or CI as used in this paper describes the digital infrastructure for scientific endeavor. It is at the heart of changing practices in science. The impact of CI spans energy, finance, health, humanities, information, environment, security, transportation, and other core aspects of the human condition. Many defining technologies and practices have roots in CI: the Internet, open source software, cloud computing and \u201cbig data\u201d are but a few examples. The leadership of CI enterprises\u2013the organizations that develop and support CI\u2013know the value of CI, but have trouble communicating this value to others. Further, there are operational challenges around attracting, developing and retaining the workforce essential for success; serving an increasingly diverse array of customers and users; and operating in the context of a changing social contract with key sponsors and stakeholders.", "num_citations": "3\n", "authors": ["890"]}
{"title": "eSocialScience for Free/Libre Open Source Software researchers\n", "abstract": " This abstract presents a case study of the potential application of eScience tools and practices for the social science research community studying Free/Libre Open Source Software (FLOSS) development practices. We first describe the practice of research on FLOSS to motivate the need for eScience. After outlining suitable public data sources, we describe our initial efforts to introduce eScience tools for FLOSS research, potential obstacles and how the use of such tools might affect the practice of research in this field.", "num_citations": "3\n", "authors": ["890"]}
{"title": "A ten-year retrospective\n", "abstract": " Since the initial publication in 1994, coordination theory has been referenced in nearly three hundred journal articles, book chapters, conference papers, and theses. Coordination theory provides an approach to a core problem in HCI: It analyzes group work to suggest alternative approaches involving computer support. Coordination theory suggests identifying the dependencies between the tasks the different group members are carrying out and the coordination mechanisms the group uses to coordinate its work, and then considering alternative mechanisms. This chapter will analyze the contribution of this body of research to determine how coordination theory has been used for user task analysis and modeling for HCI. Issues that will be addressed include:(1) how the theory has been applied;(2) factors that led to the success of the theory; and (3) identification of areas needing further research.", "num_citations": "3\n", "authors": ["890"]}
{"title": "An Introduction to the Literature on Online Reputation Systems for the MMAPPS project\n", "abstract": " This document provides an introduction to the research literature on online reputation systems. It has been written with a view to providing background and context for MMAPPS system design plans and is therefore focused on distributed systems. There is a companion annotated bibliography of summary and reading notes for many of the articles discussed in this document in the accompanying References.", "num_citations": "3\n", "authors": ["890"]}
{"title": "Routes to Sustainable Software: Transitioning to Peer Production\n", "abstract": " A key challenge of science policy is to achieve sustained benefit from scientific grant making. As software has become more important to the practice of science, policy makers and scientists have become more concerned about a perceived lack of sustained benefit from software produced by grant funded projects. Policy makers and scientists have sought to learn from the successes of open source software development and have encouraged scientific software projects to draw on \u201cpeer production\u201d as a route to sustainable software projects. In this paper we examine grant funded projects to build two taxonomies through qualitative analysis. The first is a taxonomy of organizational configurations: ways in which projects organize to build software. The second is a taxonomy of organizational transitions: modes of organizational change observed around the software produced by these projects. We use these\u00a0\u2026", "num_citations": "2\n", "authors": ["890"]}
{"title": "Coordination Recipes for Tightly-Coupled Software Work in Open Source Software (OSS) Communities\n", "abstract": " Software modularity has been considered to be key to the success of Open Source Software (OSS) communities. Modular (or loosely-coupled) software is held to be easier to work with for the typical participants in open source development who are loosely-organized, sporadically available, and value their autonomy. Yet sometimes tightly-coupled work is necessary, such as in restructuring efforts to renew desired architectures or in implementing new functionality which adds new dependencies across modules. In some communities corporate sponsorship may provide a parallel tightly-coupled organizational environment to accomplish tightly-coupled work, but for communities without corporate sponsorship we do not know how OSS contributors pursue and succeed in accomplishing tightly-coupled work. Accordingly this paper identities periods of tightly-coupled work in otherwise loosely-coupled communities, and\u00a0\u2026", "num_citations": "2\n", "authors": ["890"]}
{"title": "Virtual Organizations as Sociotechnical Systems: Exploring How Organization Scientists and Virtual Organization Leaders Can Collaborate\n", "abstract": " This report describes the results of a workshop held in Cleveland, Ohio in May of 2012 that brought organization scientists together with Virtual Organization (VO) leaders to address the challenges facing managers of VOs, identify key insights from research on VOs, and determine whether it is possible to build a sustainable community among organization scientists and VO leaders. Both organization scientists and VO leaders were enthusiastic about collaborating, but there were challenges.", "num_citations": "2\n", "authors": ["890"]}
{"title": "Work as coordination and coordination as work: A process perspective on FLOSS development projects\n", "abstract": " Coordination in work teams has been a topic of perennial interest in organizational studies. The starting point of much of the literature is a conceptual separation between the work itself, on the one hand, and activities undertaken to coordinate the work, on the other, labelled articulation work or coordination mechanisms. We suggest that the analytic duality between work and coordination arises in part from an information processing perspective on work that assumes an input, process and outcome model. In this perspective, it is natural to consider the process and coordination of the process as separate activities. However, in contrast, one can envision work processes as clustering around the outcome of the work. Each process contributes to the evolving work at hand but at the same time takes its clues for what to do next (ie, input) from the evolving work product. In this case, the separation of discrete coordination and work events dissolves in a process perspective, for which analyzing interactions rather than self-standing actions is preferred. Out of this conundrum arises the question: how can we understand coordination as an inseparable part of work and the outcome of work itself?The paper investigates this question in the setting of free and open source software (FLOSS) development projects. In FLOSS projects, we find little evidence of overt coordination of development activities. Rather, we argue, coordination takes place primarily through the work itself, ie, through the shared software source code. We present evidence showing how the software code posted by FLOSS developers serves as an outcome of their work and a coordination device\u00a0\u2026", "num_citations": "2\n", "authors": ["890"]}
{"title": "Socio-technical logics of correctness in the scientific software development ecosystem\n", "abstract": " Science increasingly depends on software. From configuration and control of instruments, to statistical analysis,\u00a0simulation and visualization, virtually every workflow that\u00a0generates scientific results involves software.1 In practice,\u00a0scientific collaboration in a growing number of disciplines\u00a0means drawing together different software artifacts produced\u00a0in different ways, by different people, to build an ensemble\u00a0artifact that does scientific work and, ultimately, provides\u00a0reasons to believe scientific conclusions.\u00a0In this position paper we present an understanding of the scientific software development ecosystem that is emerging from\u00a0our interviews of working scientists who develop software in\u00a0the course of their science. First we describe the types of\u00a0software and software development being undertaken. We then\u00a0focus in on three logics of correctness that have emerged from\u00a0our interviews. We demonstrate that these logics are closely\u00a0linked to the social circumstances of the software\u2019s production\u00a0and use and the type of software; these are socio-technical\u00a0logics. We conclude by examining the implications of this\u00a0understanding for shaping policies designed to maximize the\u00a0return on the substantial public investments in scientific software production.", "num_citations": "2\n", "authors": ["890"]}
{"title": "Cross-repository data linking with RDF and OWL\n", "abstract": " This paper provides an approach to the problem of integrating data from multiple research repositories for FLOSS data. It introduces semantic web technologies (RDF, OWL, OWL-DL reasoners and SPARQL) to argue that these are useful for building shared research infrastructure. The paper illustrates its point by describing parts of an ontology developed for the integration and analysis of project communications drawn from FLOSSmole, the Notre Dame archive and direct collection of data. RDF vocabularies provide a way to agree on things we agree about as well as a way to be clearer about ways in which we disagree.", "num_citations": "2\n", "authors": ["890"]}
{"title": "Replication of FLOSS research as eResearch\n", "abstract": " We are working to introduce the ideas of eResearch to a multi-disciplinary research domain: those researchers examining Free/Libre and Open Source Software (FLOSS) and its development (Howison, Wiggins, & Crowston, 2008). The first phase of this work focused on building a repository for data on FLOSS teams, FLOSSmole (Howison, Conklin, & Crowston, 2006), and collaborating with other nascent data repositories in the field. Recently we have begun a second phase, which is to introduce another established principle of eResearch, that of broader collaboration through shared workflows accessing these data repositories. To provide an example of the potential value of this principle, we are replicating seminal FLOSS papers using eResearch approaches. This paper describes research outcomes and lessons learned from translating published literature into eResearch workflows. The replication involves the reconstruction of workflow, data, and analyses of several published papers in the field of empirical FLOSS software engineering research. The effort has three purposes: to provide examples of workflows and workflow elements for FLOSS research, to determine how replicable current research is, and to provide a", "num_citations": "2\n", "authors": ["890"]}
{"title": "Taking research to FLOSS-curious engineers and managers\n", "abstract": " In 2006 the author undertook to take what I'd learnt from the research on Free, Libre and Open Source Software (FLOSS) both to 'the community' and to those interested in joining 'the community'. I prepared and presented two 3.5 hour tutorials at FLOSS conferences: LinuxAsia in Delhi and O'Reilly's Open Source Conference (OSCON) in Portland. This paper describes these experiences. The author first summarizes the tutorials, pointing out which research was used and what the interests of the participants were and where more research can bridge the gaps. The author then describe an ongoing interaction with a software engineering manager at Microsoft who attended the tutorial and is in the interesting position of taking a Microsoft work group open. Finally the author reflects on this experience for lessons about 'transferable research'.", "num_citations": "2\n", "authors": ["890"]}
{"title": "Coordinating and motivating open source contributors\n", "abstract": " \u2713\u201cIt's fairly clear that one cannot code from the ground up in bazaar style. One can test, debug and improve in bazaar style, but it would be very hard to originate a project in bazaar mode.... When you start communitybuilding, what you need to be able to present is a plausible promise.\u201d ESR, CatB", "num_citations": "2\n", "authors": ["890"]}
{"title": "Unreliable collaborators: Coordination in distributed volunteer teams\n", "abstract": " I propose to study the coordination mechanisms used by teams of distributed volunteers involved in Free, Libre and Open Source Software (FLOSS) development, which has been successful despite the dual challenges of computer mediated distributed work and volunteer management. There is an opportunity to understand how the motivations of participants affect the manner in which they organize their work and to learn from their success. I propose to conduct a case study of a FLOSS project that has collaborated in each of four modes made of volunteer/nonvolunteer and distributed/collocated axes. Drawing on archives and interviews, I will use coordination theory process mapping to describe the coordination mechanisms and sequence analysis to test for differences between the four settings. Participant observation and a literature review reveal examples of novel coordination mechanisms that seem especially associated with distributed volunteers. These are dependency minimization and \u2018post-hoc\u2019coordination, where the group acts to integrate individually chosen contributions. A possible explanation of the use of such mechanisms is that partners expect each other to be unreliable and have developed mechanisms to facilitate effective collaboration in the face of that challenge. It is hoped that these novel mechanisms will be useful to those seeking to draw on unreliable collaboration partners in an effective and scalable manner, including research and development teams, some scientific collaborations and networks of small firms collaborating without formal contract arrangements.", "num_citations": "2\n", "authors": ["890"]}
{"title": "Norms and Open Systems in Open Science\n", "abstract": " Through a review of studies of open science and open behaviors (data sharing, open access publishing, open source software development) and editorial writing that           promotes open science, we identify two themes prominent in the advocacy of open science: normative (Mertonian) scientific values and the importance of open systems. We report examples           of these themes and suggest that open science advocates understand the movement as a value-driven ethos pursuing improved science through the use of technology.           We contend that a belief in the open ethos is distinct from participation in open behaviors and that, consequently, open systems are used by two           ideologically distinct user groups. We conclude by discussing the implications of this characterization of open science, focusing on the consequences           of different user groups using the same technological systems.", "num_citations": "1\n", "authors": ["890"]}
{"title": "The Professionalization of Cyberinfrastructure Personnel?\n", "abstract": " Cyberinfrastructure (CI) personnel are critical to next-generation scientific research. Although funding agencies and universities increasingly realize this, enabling resources do not grow as fast as the need for the CI skills and capabilities. There are two main issues with respect to CI personnel: CI personnel are scarce and cyberinfrastructure is different from traditional information technology (\" IT\"). A potential answer to these issues is to professionalize the CI field. In this article, we draw on organization science to argue that a strong form of professionalization does not make sense for the CI workforce. However, we do encourage the development of standardized roles for CI personnel, and we recommend starting with three such roles: system facing, software facing, and researcher facing CI roles. A credentialing effort around these three roles could strengthen the field as well. We conclude with a discussion of\u00a0\u2026", "num_citations": "1\n", "authors": ["890"]}
{"title": "Organizing and the Cyberinfrastructure Workforce\n", "abstract": " A report from the NSF-sponsored \u201cCyberinfrastructure Workforce\u201d workshop in Alexandria, Virginia, on August 14&15, 2017. The workshop is one of six workshops that comprise the Research Coordination Network (RCN) on Management of Collaborative Centers.", "num_citations": "1\n", "authors": ["890"]}
{"title": "Impact of a Cyberinfrastructure Enterprise on the Nation's Workforce: Visualizations of a Decade of NCSA's Diaspora\n", "abstract": " Conceived in terms of diaspora, the impact of CI enterprises can be thought of in terms of workforce development, strengthening leading edge industrial knowledge, and building national capabilities. To investigate how we might think through the diaspora of CI enterprises, we conducted a pilot study of one major CI enterprise: the National Center for Supercomputing Applications (NCSA), housed at the University of Illinois at Urbana-Champaign. We compiled and analyzed data from 425 key employees who departed NCSA in the decade from 2003-2013. Often the best way to make sense of complex data involves visualization, and the purpose of this effort was to experiment with visualizations of this diaspora data in an effort to better understand the impact of NCSA\u2019s diaspora.", "num_citations": "1\n", "authors": ["890"]}
{"title": "Collaborative syllabus design for studying information work\n", "abstract": " Recognizing that current curricula address but a sliver of the wide range of careers pursued by information studies graduates, a team worked collaboratively to design a syllabus for a graduate course dedicated to exploring the societal frames and characteristics of information work. Ultimately comprising 10 modules, the syllabus centers students' awareness of an expanded occupational landscape and evaluation of policies and labor structures impacting information workers. Created over the course of a semester, the syllabus complements an earlier set of empirical studies that revealed areas in which information educators might focus future teaching efforts. This paper articulates the role for iterative and collaborative processes in curriculum development and doctoral study around information work \u2013 a research arena requiring macroscopic and future\u2010oriented thinking. We present the topical and pedagogical\u00a0\u2026", "num_citations": "1\n", "authors": ["890"]}
{"title": "Do open projects\" break the mirror\"? re-conceptualization of organizational configurations in open source software (OSS) production\n", "abstract": " The mirroring hypothesis predicts that loosely-coupled developers will develop a loosely-coupled software system. However, empirical studies have brought confusing results about the mirroring relationship in open source software (OSS) production: loosely-coupled OSS contributors have developed a tightly-coupled system, deviating from theoretical prediction, but are still successful. This study aims to provide better understanding about\" breaking the mirror\" in community-based OSS production in which there is no significant corporate participation. We propose it is not the mirroring hypothesis that is broken, but the manner in which we conceptualize and measure organizational configurations in OSS production.", "num_citations": "1\n", "authors": ["890"]}
{"title": "The sustainability of scientific software: Ecosystem context and science policy\n", "abstract": " The sustainability of scientific software is a key challenge for science policy. We approach this question by drawing on empirical studies of scientists using software and describe how components are arranged with complements and dependencies into value-\u2010providing assemblies, periodically revisited by their scientist users. Over time, software declines in scientific usefulness, driven by four factors: a moving scientific frontier and technological change, production friction, use friction and the software ecosystem context. In particular we highlight the impact of the complexity of ecosystem context, in terms of the diversity of use-\u2010contexts in which a component is used. We identify three broad strategies to address the need for work to sustain the usefulness of scientific software: suppress the drivers, reduce the amount of work needed, or attract sufficient resources able to undertake the work needed to sustain scientific usefulness. We examine three attraction systems: commercial markets, community-\u2010based peer-\u2010production and grant-\u2010making. We describe how these systems bring resources to projects, and particularly highlight how both commercial markets and peer production address the challenges of ecosystem complexity while scientific grant-\u2010making does not. We conclude by making science policy recommendations to address the challenges of sustainability, by enhancing the grant-\u2010making system and by facilitating transitions to other resource attraction systems.", "num_citations": "1\n", "authors": ["890"]}
{"title": "Network effects and valuing social network services\n", "abstract": " Models including network effects are often invoked to justify the high value of social network services like Facebook. Yet as time passes and user numbers grow, inevitably so does reach across social circles, creating\" online tension\" or, as we term it, mismatch of social display. This leads to reduced participation. Social network services respond with efforts to segment networks through efforts like separate'friend lists'. We provide a conceptual framework and a visualization to incorporate these insights into models of network effects and social network value.", "num_citations": "1\n", "authors": ["890"]}
{"title": "Managing CI centers: An agenda for organizational scholarship and cyberinfrastructure innovation\n", "abstract": " We present the following findings to a panel of CI center executives, senior organizational scholars, and CI policymakers in an NSF-sponsored \u201cManaging CI Centers\u201d workshop, and asked them to critically scrutinize and comment on these findings.", "num_citations": "1\n", "authors": ["890"]}
{"title": "Assessing the Health of a FLOSS Community\n", "abstract": " 114 Computer make decisions without seeking much input. This autocratic style isn\u2019t necessarily bad if the decisions have community support, but, taken to an extreme, it can inhibit contributions needed for further growth. Transitioning project leadership from the founders to others can be quite difficult because, even if they\u2019re no longer actually involved, the founders\u2019 word still carries inordinate weight. Not surprisingly, change at the center of FLOSS projects is uncommon (J. Howison, K. Inoue, and K. Crowston,\u201cSocial Dynamics of Free and Open Source Team Communications,\u201d Proc. 2nd Int\u2019l Conf. OpenSource Software, IFIP, 2006, http://floss. syr. edu/publications/howison_ dynamic_sna_intoss_ifip_short. pdf). It\u2019sa positive sign, therefore, if a FLOSS community has successfully managed such a transition. Regardless of who is at the core, however, it\u2019s worth asking, could the community recover if the current leadership left? Who in the wings could step forward?", "num_citations": "1\n", "authors": ["890"]}
{"title": "De ning open source software project success\n", "abstract": " Information systems success is one of the most widely used dependent variables in information systems research. In this paper, we identify a range of measures that can be used to assess the success of open source software (OSS) projects. We identify measures based on a review of the literature, a consideration of the OSS development process and an analysis of the opinions of OSS developers. For each measure, we provide examples of how they might be used in a study of OSS development.", "num_citations": "1\n", "authors": ["890"]}