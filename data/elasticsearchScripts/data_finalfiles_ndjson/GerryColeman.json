{"title": "Adept: A unified assessment method for small software companies\n", "abstract": " Software process assessments are typically the first step to commencing software process improvement. Small software companies find that many assessment methods are linked to plan-driven improvement models and can be expensive in terms of the resources required. The authors support these claims with statistics from the Irish software industry and present a lightweight assessment method called Adept. Adept unifies an existing plan-driven assessment method and an adapted, risk-based agility/discipline assessment method. Adept has a low resource overhead and does not dictate either a plan-driven or agile process improvement model, making it an attractive assessment method for small software companies", "num_citations": "113\n", "authors": ["1357"]}
{"title": "Ignoring'Best Practice': why Irish software SMEs are rejecting CMMI and ISO 9000\n", "abstract": " Software Process Improvement (SPI) \"best practice\" models such as ISO 9000 and the Capability Maturity Model Integrated (CMMI) have been developed to assist software development organisations by harnessing their experience and providing them with support so that they can produce software products on time, within budget and to a high level of quality. However there is increasing evidence that these models are not being adopted by Small and Medium sized Enterprises (SMEs) and primarily remain the remit of large organisations. This paper presents the results of a Grounded Theory study into why Irish SME software product companies are not using these SPI models. The key inhibiting factor found was the issue of cost. We discuss the findings in relation to cost of process and the factors affecting it, including bureaucracy, documentation, communication, tacit knowledge and organisational creativity and flexibility, and the associated impact on the adoption of SPI best practice models.", "num_citations": "64\n", "authors": ["1357"]}
{"title": "A quality software process for rapid application development\n", "abstract": " Software organizations can significantly improve the quality of their output if they have a defined and documented software process, together with the appropriate techniques and tools to measure its effectiveness. Without a defined process it is impossible to measure success or focus on how development capability can be enhanced. To date, a number of software process improvement frameworks have been developed and implemented. However, most of these models have been targeted at large-scale producers. Furthermore, they have applied to companies who use traditional development techniques. Smaller companies and those operating in development areas where speed of delivery is paramount have not, as yet, had process improvement paradigms available for adoption.               This study examined the software process in a small company and emerged with the recommendation of the use of the\u00a0\u2026", "num_citations": "64\n", "authors": ["1357"]}
{"title": "An empirical study of software process in practice\n", "abstract": " In adopting a software process model, many small software companies are ignoring standard process models and models for process improvement. This study uses an empirical approach to investigate what processes software companies are using on a day-to-day basis and examines why these companies are rejecting \"best practice\" approaches.", "num_citations": "58\n", "authors": ["1357"]}
{"title": "A wireless sensor network application requirements taxonomy\n", "abstract": " Traditional data networks have a relatively clear role to play in modern life. Sensor networks on the other hand are a polymorphous species destined for a world of diverse applications. We argue that it is timely to produce a systematic classification of sensor network application classes and accordingly do so. Two major application classes are described and their similarities and differences are elucidated by the taxonomy. This taxonomic work is designed to improve requirements capture for sensor network applications by facilitating solution to scenario matching. It also indicates some challenging aspects of wireless sensor networks in precision agriculture and wild fire management - our sample application domains.", "num_citations": "47\n", "authors": ["1357"]}
{"title": "Medical device software traceability\n", "abstract": " Software traceability is central to medical device software development and essential for regulatory approval. In order to comply with the regulatory requirements of the medical device industry it is essential to have clear linkages and traceability from requirements \u2013 including risks \u2013 through the different stages of the software development and maintenance life cycles. The regulatory bodies request that medical device software development organizations clearly demonstrate how they follow a software development life cycle without mandating a particular life cycle. However, due to the traceability requirements of the industry most medical device companies adopt the V-model. Within this chapter we will discuss the importance of traceability to medical device software development, the current state of practice within the industry in relation to traceability and how we feel that traceability could be improved within\u00a0\u2026", "num_citations": "40\n", "authors": ["1357"]}
{"title": "Lightweight SPI assessments: what is the real cost?\n", "abstract": " In this article, we describe the implementation of an assessment method that was developed to assess software processes within small to medium\u2010sized Irish software organisations that have little or no experience of software process improvement (SPI) programmes. We discuss the actual overheads associated with performing software process assessments based upon our experiences of performing assessments in three small to medium\u2010sized (SMEs) software development companies. Copyright \u00a9 2009 John Wiley & Sons, Ltd.", "num_citations": "18\n", "authors": ["1357"]}
{"title": "Developing a configuration management capability model for the medical device industry\n", "abstract": " Software is becoming an increasingly important aspect of medical devices and medical device regulation. Software enables highly complex systems to be built. However, complexity is the enemy of safety, therefore strict adherence to well documented processes is important within the domain of medical device software. Medical devices can only be marketed if compliance and approval from the appropriate regulatory bodies of the Food and Drug Administration (FDA) is achieved. This paper outlines the development of a Configuration Management Capability Model (CMCM). The CMCM is a Software Process Improvement (SPI) model specifically dedicated to Configuration Management (CM) for the medical device industry. This paper details how medical device regulations may be satisfied by adopting relevant practices from the Capability Maturity Model Integration (CMMI?) CM process area. It also investigates\u00a0\u2026", "num_citations": "18\n", "authors": ["1357"]}
{"title": "The development of a low-overhead assessment method for Irish software SMEs\n", "abstract": " This paper describes the development of ,Adept', a low-overhead method of software process appraisal specifically targeted at Irish software small-to-medium-si2ed enterprises (SMEs). The method explicitly focuses on organisations that have little or no experience of software process improvement (SPI) programmes. Historically, it has been difficult for software SMEs to find the resources, in both time and money, necessary to engage properly in SPI. To alleviate this, we have created a low-overhead and relatively non-invasive solution to support SMEs in establishing process improvement initiatives. The paper initially describes how Adept was developed and then illustrates how the method is currently being extended to include an on-line tool that may be used by the appraised organi2ation to perform follow-on self-assessments.", "num_citations": "13\n", "authors": ["1357"]}
{"title": "The need for a software process improvement model for the Medical Device Industry\n", "abstract": " Software is becoming an increasingly important aspect of medical devices and medical device regulation. Software enables highly complex systems to be built. However, complexity is the enemy of safety, therefore strict adherence to well documented processes is important within the domain of medical device software. Medical devices can only be marketed if compliance and approval from the appropriate regulatory bodies (e.g. the Food and Drug Administration (FDA)) is achieved. This paper outlines the development of a software process improvement (SPI) model specifically for the medical device industry. The paper details how medical device regulations may  be satisfied by adopting relevant practices from the Capability Maturity Model Integration.", "num_citations": "13\n", "authors": ["1357"]}
{"title": "Development of a process assessment model for assessing security of IT networks incorporating medical devices against ISO/IEC 15026-4\n", "abstract": " Advancements in medical device design over the last number of years have allowed medical device manufacturers to add more complex functionality particularly through the use of software. Such advancements include the ability for devices to communicate wirelessly across networks, from device to device and over the Internet. However, with such advancements comes additional risks; these are security risks, vulnerabilities and threats. In the past twelve months, concern within the medical device community has led to the US Government calling upon the FDA to take responsibility of medical device security. In support of this, this position paper details a research proposal to address medical device security issues through the development of a Process Reference Model (PRM) and a Process Assessment Model (PAM) to assess the capability of the processes used to develop medical devices intended to be incorporated onto healthcare networks and also determine the product security capability through the development of security assurance cases created following the lifecycle process. Further, in support of IEC 80001-2-2, the output from this PRM will be an assurance case with a security assurance level, which will be used to communicate the security capabilities of the product between Medical Device Manufacturers (MDMs) and Healthcare Delivery Organisations (HDOs). The intent is to build a better awareness of vulnerability types, threats and related risks to assist in reducing the likelihood of harm resulting from a security risk.", "num_citations": "7\n", "authors": ["1357"]}
{"title": "Agile Software Development.\n", "abstract": " Agile development provides an alternative to traditional sequential software development through employing customer collaboration and a whole-team approach, in which everyone has responsibility for quality, not just testers or others traditionally designed as quality-focused resources. Quality improvement and client satisfaction are sought by getting early and continuous feedback from the customer. The demands on a tester working on projects using agile methodologies are different to those faced on a traditional software project. In addition to excellent testing skills, testers must be able to communicate effectively, interact and collaborate constantly with colleagues, and respond to early and frequent customer feedback. This article describes the principles and values underpinning the agile development approach, which must be understood by all those wishing to be effective contributors on such projects. This\u00a0\u2026", "num_citations": "6\n", "authors": ["1357"]}
{"title": "Improving verification & validation in the medical device domain\n", "abstract": " The benefits of effective verification and validation activities in the medical device domain include increased usability and reliability, decreased failure rate and recalls and reduced risks to patients and users. Though there is guidance on verification and validation in multiple standards in the medical device domain, these are difficult for the manufacturer to implement, as there is no consolidated information on how they can be successfully achieved. The paper is intended to highlight three major areas for improvement in the medical device software development domain. This research is based on an analysis of available literature in the field of verification and validation in generic software development, safety-critical and medical device software domains. Additionally, we also performed a review of the standards and process improvement models available in these domains.", "num_citations": "6\n", "authors": ["1357"]}
{"title": "Framework to assist healthcare delivery organisations and medical device manufacturers establish security assurance for networked medical devices\n", "abstract": " This paper introduces an assurance framework for networked medical device development. This work is being conducted to address the ever-increasing concerns of medical device security with a specific focus on medical devices to be incorporated into IT networks. The framework utilises a Process Assessment Model and a Process Reference Model to address system development lifecycle processes, security assurance processes and a focused risk management process. There is currently no governance for the development of secure medical devices in place and so, this work sets out to resolve this problem by increasing the awareness of medical device security risks, threats and vulnerabilities among Medical Device Manufacturers, IT vendors and Healthcare Delivery Organisations.", "num_citations": "5\n", "authors": ["1357"]}
{"title": "Managing the challenges of legacy systems using extreme programming\n", "abstract": " Updating and maintaining legacy systems creates significant challenges for software developers. Modifying legacy applications can be a time\u2010consuming process, which is fraught with architectural and code minefields. In many instances, the same developers, because of their specialist knowledge, and the same processes, have been used to improve these systems over an extended period of time. Introducing new practices into such an environment presents problems, on both the human and the technological level. This article reports on the experience of implementing a scaled\u2010down version of eXtreme Programming (XP) in a small manufacturing company. How the difficulties in creating the climate for such an implementation were overcome, and the resulting benefits of the experiment, are reported here. Finally, the conclusions and lessons learned offer support and advice to others who may also be\u00a0\u2026", "num_citations": "5\n", "authors": ["1357"]}
{"title": "eXtreme Programming (XP) as a'minimum'software process: a grounded theory\n", "abstract": " Companies engaged in software production are deploying a variety of process models to support their product development activity. Whilst most are tailoring existing process models for use in their specific environments, many have begun to use eXtreme Programming (XP) to achieve their development objectives. This study illustrates how XP is being used as a \"good enough\" or \"minimum\" process by software product companies.", "num_citations": "5\n", "authors": ["1357"]}
{"title": "Using SPI to achieve delivery objectives in e\u2010commerce software development\n", "abstract": " Software process improvement (SPI) initiatives in large commercial banking organisations are often constrained by the control mechanisms implemented by the organisation to protect it from financial loss. As such, any changes to the software development process must maintain the required level of independent quality control. However, commercial pressure from customers and competition dictate that high\u2010quality software systems are delivered within shorter timeframes. In order to meet these increasing demands, whilst maintaining the desired level of quality, one option is for organisations to make more effective use of the quality assurance (QA) team during the software development process. This article reports on current research which is examining the impact on software delivery of involving testers earlier in the development life cycle. Copyright \u00a9 2008 John Wiley & Sons, Ltd.", "num_citations": "4\n", "authors": ["1357"]}
{"title": "Verification & validation in Medi SPICE\n", "abstract": " Effective verification and validation are central to medical device software development and are essential for regulatory approval. Although guidance is available in multiple standards in the medical device software domain, it is difficult for the manufacturer to implement as there is no consolidated view of this information. Likewise, the standards and guidance documents do not consider process improvement initiatives. This paper assists in relation to both these aspects and introduces the development of processes for verification and validation in the medical device domain.", "num_citations": "3\n", "authors": ["1357"]}
{"title": "Analysing the cost of lightweight SPI assessments\n", "abstract": " In this paper we describe the implementation of an assessment method that was developed to assess software processes within small to medium-sized Irish software organisations that have little or no experience of software process improvement (SPI) programmes. We discuss the actual overheads associated with performing software process assessments based upon our experiences of performing assessments in three small to medium sized (SMEs) software development companies.", "num_citations": "3\n", "authors": ["1357"]}
{"title": "Investigating software measures to improve product reliability\n", "abstract": " Inevitably, faults are introduced whilst software is being developed. If we can catch the faults before the system goes live we can improve the quality of the system and reduce the cost of maintaining the system. In this paper we have calculated software metrics from the testing and maintenance phases of the development of a software system. We are going to analyse this data and suggest some improvements that can be made to the software process to reduce the number of faults that are getting into the maintenance phase.", "num_citations": "3\n", "authors": ["1357"]}
{"title": "A security assurance framework for networked medical devices\n", "abstract": " This paper presents work for the development of a framework to assure the security of networked medical devices being incorporated. The paper focuses on one component of the framework, which addresses system development processes, and the assurance of these through the use of a Process Assessment Model with a major focus on the security risk management process. With the inclusion of a set of specific security controls and assurance processes, the purpose is to increase awareness of security vulnerabilities, risks and controls among Medical Device Manufacturers with the aim of increasing the overall security capability of medical devices.", "num_citations": "2\n", "authors": ["1357"]}
{"title": "A process assessment model for security assurance of networked medical devices\n", "abstract": " The recent introduction of networked medical devices has posed many benefits for both the healthcare industry and improved patient care. However, because of the complexity of these devices, in particular the advanced communication ability of these devices, security is becoming an increasing concern. This paper presents work to develop a framework to assure the security of medical devices being incorporated into an IT network. It begins by looking at the development processes and the assurance of these through the use of a Process Assessment Model with a major focus on the security risk management processes. With the inclusion of a set of specific security controls, both the Healthcare Delivery Organisations and the Medical Device Manufacturers work together to establish fundamental security requirements. The Medical Device Manufacturer reports the achieved security assurance level of their\u00a0\u2026", "num_citations": "2\n", "authors": ["1357"]}
{"title": "Learning project planning the agile way\n", "abstract": " Teaching and learning software project management concepts using traditional plan-driven approaches to software development can be difficult. It is often necessary to define a waterfall style plan and follow this throughout a full development project. Students rarely have an opportunity to practice management activities. However, with agile approaches to software development the expectation is that a project plan will evolve, in response to change, while development progresses. This poster presents an overview of the Extreme Programming (XP) approach to project planning and observations and feedback from a project conducted by degree students.", "num_citations": "2\n", "authors": ["1357"]}
{"title": "Developing a configuration management model for use in medical device industry\n", "abstract": " This paper outlines the development of a Configuration Management model for the MEDical device software industry (CMMED). The paper details how medical device regulations associated with Configuration Management (CM) may be satisfied by adopting less than half of the practices from the CM process area of the Capability Maturity Model Integration (CMMI). It also investigates how the CMMI CM process area may be extended with additional practices that are outside the remit of the CMMI, but are required in order to satisfy medical device regulatory guidelines.", "num_citations": "2\n", "authors": ["1357"]}
{"title": "Tailoring extreme programming for legacy systems: lessons learned\n", "abstract": " Updating and maintaining legacy systems creates significant challenges for software developers. Modifying legacy applications can be a time-consuming process which is fraught with architectural and code minefields. In many instances, the same developers, because of their specialist knowledge, and the same processes have been used to improve these systems over an extended period of time. Introducing new practices into such an environment presents problems, on both the human and the technological level. This paper reports on the experience of implementing a scaled-down version of eXtreme Programming (XP) into a small manufacturing company. How the difficulties, in creating the climate for such an implementation, were overcome, and the resulting benefits of the experiment are reported on. Finally, the conclusions and lessons learned offer support and advice to others who may also be considering such an approach", "num_citations": "2\n", "authors": ["1357"]}
{"title": "Extreme Programming: Results of an Educational Experiment\n", "abstract": " This paper reports on the results of a study, which used aspects of eXtreme Programming (XP), conducted on a group of undergraduate Software Development students at Dundalk Institute of Technology. The exercises carried out were part of Software Engineering group exercises. The students had studied programming for two to three years. Several software development tasks were carried out over a 1-month period. Student attitude to some of the 12 practices of XP and project development in general was assessed.", "num_citations": "2\n", "authors": ["1357"]}
{"title": "\u201cPractice Not Process\u201d\u2013Improving the Capability of Software Startups\n", "abstract": " For small software companies, running small software projects, the question of the need for process arises. There is growing evidence that large corporate improvement models such as CMM/SPICE are not suitable in the small and that the overhead involved with process definition is exorbitant.", "num_citations": "2\n", "authors": ["1357"]}