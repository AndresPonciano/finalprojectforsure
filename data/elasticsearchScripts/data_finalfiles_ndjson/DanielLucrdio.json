{"title": "Uma abordagem orientada a modelos para reutiliza\u00e7\u00e3o de software\n", "abstract": " A reutiliza\u00e7\u00e3o de software busca aumentar a qualidade e produtividade no desenvolvimento de software, evitando a duplica\u00e7\u00e3o do esfor\u00e7o e reaproveitando o m\u00e1ximo poss\u00edvel das experi\u00eancias de projetos passados. Apesar de simples, esta id\u00e9ia n\u00e3o \u00e9 facilmente colocada em pr\u00e1tica, principalmente de maneira sistem\u00e1tica e controlada. T\u00e9cnicas de engenharia de dom\u00ednio e linhas de produtos de software buscam facilitar esta tarefa, por\u00e9m ainda existem outros fatores que dificultam a ado\u00e7\u00e3o da pr\u00e1tica da reutiliza\u00e7\u00e3o. Entre estes, destacam-se os problemas inerentes ao desenvolvimento de software da maneira como \u00e9 conduzido atualmente, baseado em c\u00f3digo-fonte. Estes problemas t\u00eam suas origens na crescente demanda por software cada vez mais complexo e afetam negativamente a capacidade de reutilizar software. O desenvolvimento orientado a modelos surge como uma alternativa atraente neste cen\u00e1rio, elevando a import\u00e2ncia de modelos dentro do ciclo de vida do software, incorporando-os como parte integrante do produto final por meio de t\u00e9cnicas de modelagem e gera\u00e7\u00e3o de c\u00f3digo. Com isto, parte da complexidade do software fica escondida dentro dos geradores, protegendo os desenvolvedores, reduzindo a incid\u00eancia de erros, aumentando a produtividade, qualidade, interoperabilidade e manutenibilidade dos artefatos produzidos. Nesta disserta\u00e7\u00e3o defende-se a tese de que o desenvolvimento orientado a modelos pode efetivamente aumentar e/ou melhorar a reutiliza\u00e7\u00e3o de software, e que para isso ele deve ser tratado de forma consistente dentro de um processo de engenharia de dom\u00ednio. Em particular, ele\u00a0\u2026", "num_citations": "47\n", "authors": ["2187"]}
{"title": "Software engineering for the cloud: A research roadmap\n", "abstract": " Having arisen from the industry, cloud computing is receiving increasing attention from the academy. We are witnessing an increasing number of papers dedicated to experience reports and proposal of methods, processes and tools focused on cloud-related technology. Researchers are also attempting to identify and formalize the main concepts behind cloud computing, forming a basis for future investigations about how this approach can be used to promote advances in many fields of computer science. However, while the main research challenges and opportunities related to cloud computing in general are already well-known, in the software engineering area the scenario is less clear. In this paper, we present the results of a systematic literature review where we tried to understand how researchers from the software engineering field are viewing the cloud computing paradigm. We identified ten software\u00a0\u2026", "num_citations": "38\n", "authors": ["2187"]}
{"title": "Using scrum to teach software engineering: A case study\n", "abstract": " The diffusion of agile methodologies in software development makes them more mature for corporative environment. However, teaching agile methodologies on the academic environment poses many difficulties and limitations. This paper describes a case study where an innovative approach for teaching software development technologies was adopted. In this approach, the entire course was designed to fit Scrum's principles, so that the students could apply them as they were learning it. Also, the course's main project was to be developed in sprints, as proposed in Scrum. After almost two years using this approach, in this paper we describe our experience and perform a critical analysis. We observed some positive points, such as the practical nature of learning by example, and a better preparation of the students regarding agile methodologies. As negative points, we highlight the impossibility of delivering\u00a0\u2026", "num_citations": "32\n", "authors": ["2187"]}
{"title": "Ferramenta MVCASE-Est\u00e1gio Atual: Especifica\u00e7\u00e3o, Projeto e Constru\u00e7\u00e3o de Componentes\n", "abstract": " Este artigo apresenta a ferramenta CASE MVCASE, que suporta o desenvolvimento de softwares orientados a objetos, baseados em componentes. Na ferramenta, o Engenheiro de Software modela o sistema, segundo o m\u00e9todo Catalysis, e gera seu c\u00f3digo para uma plataforma distribu\u00edda, usando componentes distribu\u00eddos com a tecnologia Enterprise Java Beans (EJB). A ferramenta disponibiliza os componentes em um browser, que facilita seu reuso, atrav\u00e9s da heran\u00e7a ou instancia\u00e7\u00e3o de suas classes.", "num_citations": "16\n", "authors": ["2187"]}
{"title": "A flexible model-driven game development approach\n", "abstract": " Game developers are facing an increasing demand for new games every year. Game development tools can be of great help, but require highly specialized professionals. Also, just as any software development effort, game development has some challenges. Model-Driven Game Development (MDGD) is suggested as a means to solve some of these challenges, but with a loss in flexibility. We propose a MDGD approach that combines multiple domain-specific languages (DSLs) with design patterns to provide flexibility and allow generated code to be integrated with manual code. After experimentation, we observed that, with the approach, less experienced developers can create games faster and more easily, and the product of code generation can be customized with manually written code, providing flexibility. However, with MDGD, developers become less familiar with the code, making manual codification more\u00a0\u2026", "num_citations": "15\n", "authors": ["2187"]}
{"title": "Desenvolvimento de software utilizando o framework scrum: um estudo de caso\n", "abstract": " Este artigo apresenta a aplica\u00e7\u00e3o do Scrum no desenvolvimento de um sistema para informatizar os processos de gest\u00e3o de estoque do Restaurante Universit\u00e1rio da UFSCar, que s\u00e3o realizados manualmente, resultando na vulnerabilidade das informa\u00e7\u00f5es. O framework Scrum possibilita a flexibilidade e execu\u00e7\u00e3o evolutiva do desenvolvimento do sistema de software, diminuindo o ciclo de produ\u00e7\u00e3o e os impactos causados por altera\u00e7\u00f5es de requisitos. S\u00e3o relatadas as atividades e as adapta\u00e7\u00f5es empregadas para atender as implica\u00e7\u00f5es do ambiente de implementa\u00e7\u00e3o, bem como os desafios encontrados e os resultados obtidos, evidenciando a import\u00e2ncia do conhecimento pr\u00e1tico sobre a abordagem utilizada.", "num_citations": "14\n", "authors": ["2187"]}
{"title": "Automatically propagating changes from reference implementations to code generation templates\n", "abstract": " ContextCode generators can automatically perform some tedious and error-prone implementation tasks, increasing productivity and quality in the software development process. Most code generators are based on templates, which are fundamentally composed of text expansion statements. To build templates, the code of an existing, tested and validated implementation may serve as reference, in a process known as templatization. With the dynamics of software evolution/maintenance and the need for performing changes in the code generation templates, there is a loss of synchronism between the templates and this reference code. Additional effort is required to keep them synchronized.ObjectiveThis paper proposes automation as a way to reduce the extra effort needed to keep templates and reference code synchronized.MethodA mechanism was developed to semi-automatically detect and propagate changes\u00a0\u2026", "num_citations": "13\n", "authors": ["2187"]}
{"title": "Component retrieval using metric indexing\n", "abstract": " Efficient retrieval of software components from repositories may be of great value for development organizations, mainly if these repositories have a large number of components stored. Metric indexing structures may help in this scenario, by allowing efficient search to be performed. This paper presents the joint utilization of metric indexing and similarity measures between components, in order to give support to component search and retrieval. Results indicate that this approach is better suited for software repositories than traditional search engines.", "num_citations": "11\n", "authors": ["2187"]}
{"title": "Extens\u00e3o da ferramenta MVCASE com servi\u00e7os remotos de armazenamento e busca de artefatos de software.\n", "abstract": " A reutiliza\u00e7\u00e3o de software busca promover aumento na produtividade e redu\u00e7\u00e3o de prazo de entrega de produtos de software, atrav\u00e9s da otimiza\u00e7\u00e3o do trabalho, evitando-se a duplica\u00e7\u00e3o desnecess\u00e1ria de esfor\u00e7o. Nesse contexto, duas \u00e1reas se destacam: componentes de software e engenharia de software assistida por computador (CASE). A abordagem de desenvolvimento baseado em componentes busca oferecer maneiras para se construir software mais \u201creutiliz\u00e1vel\u201d. O uso de CASE busca reduzir o esfor\u00e7o, delegando parte do trabalho para ser realizado pelo computador, e aumentar a qualidade, auxiliando o Engenheiro de Software nas tarefas de desenvolvimento. Combinando as id\u00e9ias de componentes de software e CASE, esta disserta\u00e7\u00e3o apresenta uma extens\u00e3o da ferramenta MVCASE, uma ferramenta acad\u00eamica desenvolvida na UFSCar-Universidade Federal de S\u00e3o Carlos, com servi\u00e7os remotos de armazenamento e busca de artefatos de software, buscando melhorar a produtividade e reduzir tempo e custos no desenvolvimento de software.", "num_citations": "8\n", "authors": ["2187"]}
{"title": "MVCASE: Ferramenta CASE Orientada a Objetos\n", "abstract": " Este texto apresenta uma ferramenta CASE orientada a objetos, com suporte a m\u00faltiplas vis\u00f5es de requisitos de software e implementa\u00e7\u00e3o autom\u00e1tica. A ferramenta permite a especifica\u00e7\u00e3o de requisitos de sistema em alto n\u00edvel de abstra\u00e7\u00e3o, com gera\u00e7\u00e3o autom\u00e1tica de c\u00f3digo em Java. A ferramenta tamb\u00e9m est\u00e1 integrada com a Rational Rose, ferramenta CASE consolidada comercialmente, atrav\u00e9s da linguagem de persist\u00eancia dos objetos.", "num_citations": "5\n", "authors": ["2187"]}
{"title": "Benchmarking Machine Learning Solutions in Production\n", "abstract": " Machine learning (ML) is becoming critical to many businesses. Keeping an ML solution online and responding is therefore a necessity, and is part of the MLOps (Machine Learning operationalization) movement. One aspect for this process is monitoring not only prediction quality, but also system resources. This is important to correctly provide the necessary infrastructure, either using a fully-managed cloud platform or a local solution. This is not a difficult task, as there are many tools available. However, it requires some planning and knowledge about what to monitor. Also, many ML professionals are not experts in system operations and may not have the skills to easily setup a monitoring and benchmarking environment. In the spirit of MLOps, this paper presents an approach, based on a simple API and set of tools, to monitor ML solutions. The approach was tested with 9 different solutions. The results indicate that\u00a0\u2026", "num_citations": "4\n", "authors": ["2187"]}
{"title": "Playing with fire: Harnessing the hottest technologies for ultra-large-scale systems\n", "abstract": " Creating ultra-large-scale systems requires technological advances across the board [13]. The challenge is so grand that emerging technologies address small subproblems, such as: providing a service orchestration layer, guaranteeing quality of service (QoS), and facilitating decentralized discovery. Engineers wishing to implement a complete system must (1) understand the subproblems,(2) become experts with the latest technologies,(3) and integrate the technologies into a whole. In this paper we describe a model-based approach that reduces these engineering burdens through abstractions and code generation. Our framework took approximately 3-man months to implement, but integrates almost a dozen state-of-the-art technologies. Users of the framework do not have to solve the integration problem, and the framework with is driven by models that are technology independent.", "num_citations": "4\n", "authors": ["2187"]}
{"title": "Component-Based Software Development Environment (CBDE).\n", "abstract": " This paper presents an Component-Based Software Development Environment-CBDE that supports the construction and reuse of software components according to Catalysis. Its integrates a CASE tool, named to MVCase, and a RAD tool, named to C-CORE, to support the whole process of Component-Based Software Development (CBD). The CBD process, follows the spiral model of software development, including activities that start from communication with the customers to identify the requirements for construction and reuse of components, until the delivery and customers component assessment. This paper focuses on details related to the two phases of the CBD Construction process. The MVCase and C-CORE help the software engineer automating great part of the components construction and reuse tasks.", "num_citations": "3\n", "authors": ["2187"]}
{"title": "Implementing a classic er algebra to automatically generate complex queries for document-oriented databases\n", "abstract": " NoSQL databases are designed to fulfill performance and scalability requirements, normally by allowing data to be stored without a fixed schema. For this reason, it is not rare that new usage and performance requirements appear during a system's life cycle, demanding changes to be made in the schema, challenging the developer with extra adaptation effort to update data access code (database queries). The literature presents some solutions to reduce this effort by making queries independent from the schema, but the solutions are normally restricted to simple queries or a predefined mapping. In this paper, we present evidence showing that a classic ER algebra and a Model Management approach can be used to implement a solution that works with complex queries in any schema. The algebra defines operations that can be used by developers to specify complex queries in terms of Entities and Relationships\u00a0\u2026", "num_citations": "2\n", "authors": ["2187"]}
{"title": "Transformando Modelos da MDA com o apoio de Componentes de Software.\n", "abstract": " This article presents the use of software components to supply the Model Drivel Architecture (MDA) in the MVCASE tool. MDA represents the software specifications from its modeling to implementation. In a lower abstract level there are Object-Oriented models supported by the UML component. Using transformation components it is possible to obtain the Object-Relational DataBase models, and to get through, obtain also the codes in Structed Query Language (SQL). A example illustrates the use of these components to instantiate and transform different platforms models and finally obtain their codes in SQL.Resumo. Este artigo apresenta o uso de componentes de software para operacionalizar a Model Driven Architecture (MDA) na ferramenta MVCASE. A MDA representa as especifica\u00e7\u00f5es do software desde a sua modelagem at\u00e9 a implementa\u00e7\u00e3o. Em n\u00edvel menos abstrato, t\u00eam-se os modelos Orientados a Objetos suportados pelo componente UML. Utilizando-se de componentes de transforma\u00e7\u00e3o \u00e9 poss\u00edvel obter os modelos de Banco de Dados Objeto-Relacional e por fim, c\u00f3digos em Structured Query Language (SQL). Um exemplo de uso ilustra o uso dos componentes para instanciar e transformar modelos de plataformas diferentes e por fim, obter seus c\u00f3digos em SQL.", "num_citations": "2\n", "authors": ["2187"]}
{"title": "Aplicando a Metodologia \u00c1gil Scrum para apoio ao Gerenciamento de Requisitos\n", "abstract": " Este trabalho apresenta um estudo de caso que aplica a metodologia \u00e1gil Scrum para o gerenciamento de requisitos. S\u00e3o levantados os dados das quais a empresa estudada usa para realizar o seu pr\u00f3prio gerenciamento de requisitos. Baseando nas pr\u00e1ticas e regras do Scrum foi proposta uma implementa\u00e7\u00e3o que se adeque \u00e0 realidade da empresa, alterando a sua forma estrutural nas responsabilidades dos profissionais e tamb\u00e9m modificando o ambiente de trabalho aplicando as t\u00e9cnicas citadas neste estudo de caso, focando na qualidade, prazos,", "num_citations": "1\n", "authors": ["2187"]}
{"title": "Utiliza\u00e7\u00e3o de componentes Enterprise JavaBeans no desenvolvimento de Sistemas Web\n", "abstract": " Enterprise JavaBeans s\u00e3o componentes executados do lado do servidor que encapsulam a regra de neg\u00f3cios da aplica\u00e7\u00e3o. Tem como objetivo reduzir a complexidade da codifica\u00e7\u00e3o de aplica\u00e7\u00f5es fornecendo servi\u00e7os como controle de transa\u00e7\u00e3o, concorr\u00eancia, entre outros. No entanto, a necessidade de configura\u00e7\u00f5es adicionais acabou produzindo uma imagem negativa da tecnologia, especialmente nas vers\u00f5es mais", "num_citations": "1\n", "authors": ["2187"]}
{"title": "Evaluating the impact of MDD in software reuse\n", "abstract": " G1. To analyze software development projects with the objective of determining if software reuse is improved/increased when MDD is used with respect to the produced domain artifacts from the point of view of the researcher in the context of domain engineering projects G2. To analyze software development projects with the objective of determining the importance of MDD to software reuse with respect to the perceived benefits and difficulties of using MDD from the point of view of the software developers in the context of domain engineering projects", "num_citations": "1\n", "authors": ["2187"]}