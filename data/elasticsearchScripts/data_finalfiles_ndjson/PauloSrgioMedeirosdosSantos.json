{"title": "Visualizing and managing technical debt in agile development: An experience report\n", "abstract": " This paper reports the experience of an architecture team of a software development department with 25 agile teams in supporting technical decisions regarding technical practices. The main motivation to use technical debt metaphor was its acknowledged potential in driving software development and maintenance decisions, especially those long term maintenance tradeoffs which are usually less visible to developers and decision makers in general. We propose the use of a \"technical debt board\" with main technical debt categories to manage and visualize the high-level debt, combined with tools to measure it at low-level (software metrics and other kind of static analysis). We have found that our approach improved the teams\u2019 awareness about the technical debt, stimulated a beneficial competition between teams towards the debt payment and enhanced the communication regarding technical decisions.", "num_citations": "18\n", "authors": ["1298"]}
{"title": "A computational infrastructure for research synthesis in software engineering\n", "abstract": " Research synthesis is an essential instrument to consolidate scientific knowledge regarding the benefits and drawbacks of software technologies. However, conducting a research synthesis can be challenging given the amount of data and information to manage and aggregate. Furthermore, comparing and contrasting evidence besides keeping track of all aggregation decisions can be cumbersome whether manually performed. Therefore, in this paper, we present a computational infrastructure to support research synthesis. The tool offers a graphical and formal notation to represent Software Engineering qualitative and quantitative evidence. The infrastructure\u2019s design and navigational concerns besides the details about its internal algorithms are presented aiming at supporting the explanations on how the formal representation is used in the aggregation procedure and how uncertainty formalisms are implemented. The infrastructure usefulness is shown through its use on aggregating evidence regarding software inspection techniques.", "num_citations": "9\n", "authors": ["1298"]}
{"title": "EVIDENCE REPRESENTATION AND AGGREGATION IN SOFTWARE ENGINEERING USING THEORETICAL STRUCTURES AND BELIEF FUNCTIONS\n", "abstract": " This chapter describes what motivated this investigation and defines the main questions regarding it. The research goals are also enumerated along with the research methodology used to achieve them.", "num_citations": "4\n", "authors": ["1298"]}