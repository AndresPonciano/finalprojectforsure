{"title": "Integrating the NFR framework in a RE model\n", "abstract": " In this paper we build on our work already produced on advanced separation of concerns for requirements engineering by adding two main ideas:(i) the integration of catalogues to help identifying and specifying concerns and (ii) improve the composition rules by informally defining some new operators.", "num_citations": "98\n", "authors": ["650"]}
{"title": "Domain models are NOT aspect free\n", "abstract": " In proceedings of MoDELS/UML 2005, Steimann argues that domain models are aspect free. Steimann\u2019s hypothesis is that the notion of aspect in aspect-oriented software development (AOSD) is a meta-level concept. He concludes that aspects are technical concepts, i.e., a property of programming and not a means to reason about domain concepts in a modular fashion. In this paper we argue otherwise. We highlight that, by ignoring the body of work on Early Aspects, Steimann in fact ignores the problem domain itself. Early Aspects techniques support improved modular and compositional reasoning about the problem domain. Using concrete examples we argue that domain models do indeed have aspects which need first-class support for such reasoning. Steimann\u2019s argument is based on treating quantification and obliviousness as fundamental properties of AOSD. Using concrete application studies we\u00a0\u2026", "num_citations": "89\n", "authors": ["650"]}
{"title": "Towards a composition process for aspect-oriented requirements\n", "abstract": " In this paper we initiate a discussion of a possible process to compose crosscutting concerns with the concerns they cut across. This process should be regarded as a task of an approach to manage concerns at the requirements level. The main concepts behind this process are those of match point, conflicting aspect, dominant aspect and composition rule. A match point is where one or more crosscutting concerns are applied to a given functional concern (or model element). This information is useful to identify conflicting crosscutting concerns. To resolve conflicts we need to identify dominant crosscutting concerns, ie the concerns with higher priority. Finally, the composition rule is defined as a sequential list of simpler compositions of crosscutting concern, some operators and the model element.", "num_citations": "89\n", "authors": ["650"]}
{"title": "Hybrid assessment method for software engineering decisions\n", "abstract": " During software development, many decisions need to be made to guarantee the satisfaction of the stakeholders' requirements and goals. The full satisfaction of all of these requirements and goals may not be possible, requiring decisions over conflicting human interests as well as technological alternatives, with an impact on the quality and cost of the final solution. This work aims at assessing the suitability of multi-criteria decision making (MCDM) methods to support software engineers' decisions. To fulfil this aim, a HAM (Hybrid Assessment Method) is proposed, which gives its user the ability to perceive the influence different decisions may have on the final result. HAM is a simple and efficient method that combines one single pairwise comparison decision matrix (to determine the weights of criteria) with one classical weighted decision matrix (to prioritize the alternatives). To avoid consistency problems regarding\u00a0\u2026", "num_citations": "70\n", "authors": ["650"]}
{"title": "Combining object-oriented analysis and formal description techniques\n", "abstract": " The Rigorous Object-Oriented Analysis (ROOA) method provides a systematic development process by proposing a set of rules to be followed during the analysis phase. ROOA takes a set of informal requirements and an object model and produces a formal object-oriented analysis model that acts as a requirements specification. The resulting formal model integrates the static, dynamic and functional properties of a system in contrast to other object-oriented analysis methods which are informal and produce three separate models that are difficult to integrate and keep consistent. The model is expressed in LOTOS and provides a precise and unambiguous specification of a system's requirements. As the specification obtained is executable, prototyping can be used to check the conformance of the specification against the original requirements and to detect inconsistencies, omissions and ambiguities early in\u00a0\u2026", "num_citations": "63\n", "authors": ["650"]}
{"title": "An Aspectual Use-Case Driven Approach\n", "abstract": " Existing approaches to software development do not handle properly the crosscutting nature of some requirements, be functional or non-functional. Aspect-oriented approaches aim at handling effectively separation of crosscutting requirements. We have been investigating how to achieve separation of concerns, not only through functional and non-functional requirements, but also by providing mechanisms to identify, modularize, specify and compose crosscutting requirements. In this paper we envisage an aspectual use-case driven approach by extending the use case model to integrate non-functional requirements and identifying those use cases that are crosscutting. The examples of crosscutting concerns usually found in the literature are always non-functional. In this work we will explore the idea of crosscutting use cases and, therefore, functional concerns.", "num_citations": "53\n", "authors": ["650"]}
{"title": "Handling conflicts in aspectual requirements compositions\n", "abstract": " Composing aspectual concerns with base concerns may raise conflicting situations that need to be identified and resolved. A conflict is detected whenever two or more concerns that contribute negatively to each other and have the same importance need to be composed together. This paper discusses the use of Multiple Criteria Decision Making (MCDM) methods to support aspectual conflict management in the context of Aspect-Oriented Requirements Engineering. The final solution relies on the use of the obtained concern rankings to handle unresolved conflicts. An illustrative example is presented to discuss how MCDM methods can be used for aspectual conflict handling.", "num_citations": "52\n", "authors": ["650"]}
{"title": "Adding rigour to object-oriented analysis\n", "abstract": " The rigorous object-oriented analysis (ROOA) method integrates formal description techniques with standard object-oriented analysis methods. ROOA provides a systematic development process which, starting from a set of informal requirements, produces an executable objected oriented analysis model. The model is expressed in LOTOS and provides a precise and unambiguous formal requirements specification of the static, dynamic and functional aspects of a problem. As the specification is executable, prototyping can be used to validate the specification against the requirements. Inconsistencies, omissions and ambiguities in the requirements can be detected sufficiently early in a development so that feedback can be given to the requirements capture process.", "num_citations": "51\n", "authors": ["650"]}
{"title": "Early aspects: Aspect-oriented requirements engineering and architecture design\n", "abstract": " Software development is a discipline that is continuously evolving. New techniques, methodologies and tools continue to appear and shape the way we modularise and compose software systems. An interesting characteristic of this continuously evolving discipline is the reverse introduction of the techniques. Historically, most new development techniques are introduced at the programming level and their concepts subsequently travel up the development life cycle to be applied at the earlier stages, for example, requirements engineering, analysis and design. We have seen this evolution trend, in the 1970\u2019s, with structured techniques and, in the late 1980\u2019s and early 1990\u2019s, with object-oriented techniques. For example, object-oriented concepts were initially introduced by the programming language SIMULA-67 and are now applied throughout the software life cycle with standard notations, such as the Unified\u00a0\u2026", "num_citations": "50\n", "authors": ["650"]}
{"title": "Fuzzy query interface for a business database\n", "abstract": " Managers, in today's corporations, rely increasingly on the use of databases to obtain insights and updated information to make their decisions. This paper describes a flexible query interface based on fuzzy logic. Hence, queries in natural language with pre-defined syntactical structures are performed, and the system uses a fuzzy natural language process to provide answers. This process uses the fuzzy translation rules of the meaning representation language PRUF, proposed by Zadeh (Intern. J. Man\u2013Machine Studies 10 (1978) 395). The interface was built for a relational database of the 500 biggest non-financial Portuguese companies. The attributes considered are the economic and financial indicators. Examples of pseudo-natural language queries, such as \u201cis company X very profitable?\u201d or \u201care most private companies productive?\u201d, are presented to show the capabilities of this human-oriented interface.", "num_citations": "49\n", "authors": ["650"]}
{"title": "Advanced Separation of Concerns for Requirements Engineering\n", "abstract": " Separation of concerns is a fundamental software engineering principle that proposes the encapsulation of each matter of interest in a separate module. Software engineering development methods have been created with this principle in mind. However, concerns such as security, fault tolerance and usability are not handled effectively. These concerns may cut across many other concerns and therefore cannot be kept separated in different modules. They are responsible for producing tangled representations that are difficult to understand, maintain and evolve. An effective requirements engineering approach should reconcile the need to handle crosscutting concerns with the need to integrate existing technologies. Our goal is to propose a generic model to handle advanced separation of concerns at the requirements level.", "num_citations": "35\n", "authors": ["650"]}
{"title": "A Model-driven Approach for Software Product Lines Requirements Engineering\n", "abstract": " UML and feature models complement each other well and can be the base techniques for a systematic method to identify and model software product line (SPL) requirements. In this paper, we present a modeldriven approach to trace both features and UML requirements analysis model elements, and to automatically derive valuable models for domain and application engineering. The resulting contribution is a synergetic approach for SPL requirements. We illustrate it by using a home automation system product line.", "num_citations": "34\n", "authors": ["650"]}
{"title": "Rigorous object-oriented analysis\n", "abstract": " The Rigorous Object-Oriented Analysis (ROOA) method provides a systematic development process which takes a set of informal requirements and produces a formal object-oriented analysis model. The model, which is expressed in LOTOS, integrates the static, dynamic and functional aspects of a problem and acts as a requirements specification. As LOTOS specifications can be executed symbolically, rapid prototyping can be used to check the conformance of the specification against the requirements and to detect inconsistencies, omissions or ambiguities so that feedback can be given to the requirements capture process.", "num_citations": "34\n", "authors": ["650"]}
{"title": "Use of E-LOTOS in Adding Formality to UML.\n", "abstract": " E-LOTOS, a new version of the ISO standard specification language LOTOS, is currently being developed. We describe how it can be used to give a formal meaning to, and to discover inconsistencies in, UML models. As part of this work, we give mappings from UML constructs to E-LOTOS. Emphasis is placed on dealing with UML use case, class and interaction diagrams as these play the dominant part in the development of a UML analysis or high-level design model. Requirements are usually inconsistent and incomplete and we deal with how this can be modelled in a formal language.", "num_citations": "31\n", "authors": ["650"]}
{"title": "An XML-Based Language for Specification and Composition of Aspectual Concerns\n", "abstract": " Separation of concerns refers to the ability of identifying, encapsulating and manipulating parts of software that are crucial to a particular purpose (Dijkstra, 1976). Traditional software development methods were developed with this principle in mind. However, certain broadly-scoped properties are difficult to modularize and keep separated during the lifecycle, producing tangled representations that are difficult to understand and to evolve. Aspect-oriented software development aims at addressing those crosscutting concerns, known as aspects, by providing means for their systematic identification, separation, representation and composition. This paper focuses on the representation and composition activities, by proposing an XML-based language to specify and compose concerns at the requirements level. An illustration of the proposed approach to an example supported by a tool is presented.", "num_citations": "28\n", "authors": ["650"]}
{"title": "Handling unanticipated requirements change with aspects\n", "abstract": " Supporting software evolution and maintenance are two of the major issues of aspect-oriented software development. This paper adds to aspect-orientation by proposing (i) a classification of concerns,(ii) volatile concerns to be kept separately and handled as candidate aspects independently of the crosscutting property,(iii) the use of adaptable use cases and activity diagrams to cope with generic model elements that facilitate the composition of concerns,(iv) the extension of the use case model to support our ideas.", "num_citations": "27\n", "authors": ["650"]}
{"title": "Constructing formal specifications from informal requirements\n", "abstract": " The rigorous object-oriented analysis (ROOA) method provides a systematic development process which, starting from a set of informal requirements, produces an executable object-oriented analysis model. The model is expressed in LOTOS and provides a precise and unambiguous formal requirements specification of the static, dynamic and functional aspects of a problem. There is, however, a wide gap between informal requirements and a formal specification. To help bridge this gap, the authors propose that a formal and executable model which specifies behaviour in terms of what the environment expects from the system should be constructed initially. This user-centred model will give very early feedback to the requirements capture process and can be used as a step in the construction of the ROOA model. Both models are expressed in the same executable formal language and so they can be composed to\u00a0\u2026", "num_citations": "27\n", "authors": ["650"]}
{"title": "Modeling and Composing Navigational Concerns in Web Applications. Requirements and Design Issues\n", "abstract": " Complex applications, in particular Web applications, deal with a myriad of different concerns and some of them affect several others. The result is that these crosscutting concerns are scattered throughout different software artifacts and tangled with other concerns. In this paper we present an approach for modeling and composing navigational concerns in Web applications. By showing how to build partial navigation scenarios with user interaction diagrams, analyzing how they crosscut and defining corresponding composition rules, we add modularity to the requirements specification stage, facilitating reasoning about the requirements and a consequent tradeoff analysis to support informed decisions on architectural choices. Moreover, by focusing on navigation concerns during the early stages of applications development, we aim to address the impact of crosscutting concerns in design models, improve the\u00a0\u2026", "num_citations": "26\n", "authors": ["650"]}
{"title": "Object oriented requirements analysis in an Ada project\n", "abstract": " Among the methodologies that have appeared related to Ada, Object Oriented Development is emerging as the one of choice for a wide range of applications. Although Object Oriented Development is understood as covering more than just the design phase of the software life cycle, most Ada projects adopt these methodologies only in the design phase, using other kinds of methodologies for the requirements analysis, like structured analysis. We believe that if a single coordinated methodology is used throughout all the phases of the software life cycle, it will increase the traceability in the system, decrease the integration problems, and improve conceptual integrity of the design, leading to a more consistent final system.Although there are already many well known Object Oriented Design methods for Ada, Object Oriented Requirements Analysis methods are not so common. Notwithstanding, having a project to be\u00a0\u2026", "num_citations": "16\n", "authors": ["650"]}
{"title": "Towards an Integrated Approach for Aspectual Requirements\n", "abstract": " This paper presents an aspectual requirements approach to handle separation, modularization, representation and composition of crosscutting concerns. The approach includes a process model, a metamodel to define rigorously the main concepts, and a tool to support the approach", "num_citations": "15\n", "authors": ["650"]}
{"title": "An approach to align business and IT perspectives during the SOA services identification\n", "abstract": " Service-oriented architectures are a widely used business practice to develop enterprise information systems. However, the current analysis and design methods consider the software engineering perspective only, what is not sufficient for a proper alignment between business and IT, resulting in demand for new approaches offering the business perspective as well. Such new approaches are required crucial to identify software services that are aligned to the business values, hence contributing to customer satisfaction. This paper describes an approach that focuses on business value modeling and uses model-driven techniques to generate the input required by current software service identification methods, thus aligning business and software perspectives. This approach was evaluated in two parts. First, a quasi-experiment evaluates the perceived efficacy of the business perspective, and a proof-of-concept tool\u00a0\u2026", "num_citations": "14\n", "authors": ["650"]}
{"title": "Formal specifications of user requirements\n", "abstract": " There is a wide gap between informal requirements and a formal object-oriented specification. To help bridge this gap, we propose that a formal and executable user-centred model should be constructed initially. The user-centred model, which specifies the behaviour that the environment expects from the system, is expressed in terms of agent views and gives very early feedback to the requirements' capture process. Once the user-centred model has been validated with respect to the environment, it can be used as a step in the construction and validation of the formal object-oriented specification.", "num_citations": "14\n", "authors": ["650"]}
{"title": "Contracts for aspect-oriented design\n", "abstract": " The Java approach to Object-Oriented Design by Contract can be extended and applied to Aspect-Oriented Software. For doing so, we need to address how current Object-Oriented Design by Contract can be modified to tackle aspect advising, as well as to actually extend the Design by Contract approach for aspect modules. Our approach is general enough to be applied to Java Aspect-Oriented extensions such as AspectJ, CaesarJ, and FuseJ.", "num_citations": "12\n", "authors": ["650"]}
{"title": "UML 2004-The Unified Modelling Language: Modelling Languages and Applications\n", "abstract": " CITI - Editorial - UML 2004 \u2013 The Unified Modeling Language: Modeling Languages and Applications CITI has stopped operations in 2014, to co-launch NOVA LINCS THIS SITE IS NOT BEING UPDATED SINCE 2013 citi banner Home \\ Publications \\ Editorial Activity Page Login CITI Welcome Research Areas Organization Executive Board Advisory Board Contacts Useful Information People CITI Members Visitors Activities Research Projects Publications Seminars @ CITI External Talks & Seminars Graduation Activities Organization of Events Editorial Committees Prototypes Visits & Missions Activity Reports Search & Query Search BibTeX Generator banner bottom File Top UML 2004 \u2013 The Unified Modeling Language: Modeling Languages and Applications Publisher: Springer-Verlag ( Germany ) Series: Lecture Notes in Computer Science Volume: 3272 Date: November, 2004 Editors: Thomas Baar (EPFL), Alfred \u2026", "num_citations": "12\n", "authors": ["650"]}
{"title": "A cover-based approach for configuration repair\n", "abstract": " Feature models are often used to describe variability and commonality in Software Product Lines, specifying admissible configurations of valid products. However, invalid configurations may arise in some scenarios. These include feature model evolution that invalidates pre-existing products or collaborative configuration by multiple stakeholders with conflicting goals, among others. This problem has been acknowledged in the literature and some techniques for configuration repair have already been proposed. However, common optimization criteria such as proximity between original and repaired configurations can result in a significant number of alternative repair possibilities, easily attaining thousands of alternatives for models of practical dimension. Consequently, rather than just efficiently providing an exhaustive list of possibilities, an approach that specifically addresses this issue should be able to offer the\u00a0\u2026", "num_citations": "11\n", "authors": ["650"]}
{"title": "Soft constraints in feature models\n", "abstract": " Feature Models represent admissible configura-tions of products in Software Product Lines. Constraints are used to represent domain specific knowledge, such as requiring or excluding a feature in the presence of another. Configurations failing to conform to these constraints are deemed invalid. However, in many cases useful domain information cannot be expressed comfortably with such forceful, hard constraints. Therefore, we propose the use of softer constraints of less forcing nature. We categorize possible semantics for such constraints, analyze their impact on the feature expression and describe some specific analysis procedures that are unique to the use of soft constraints.", "num_citations": "11\n", "authors": ["650"]}
{"title": "A Metadata-Driven Approach for Aspect-Oriented Requirements Analysis\n", "abstract": " This paper presents a metadata-driven approach based on aspect-oriented requirements analysis. This approach has been defined in cooperation with the European Space Agency in the context of the \u201cAspect Specification for the Space Domain\u201d(ASSD) project. ASSD aims at assessing the applicability and usefulness of aspect-orientation for the space domain (ground segment software projects in particular), focusing on the early stages of the software development life cycle. This paper describes a rigorous representation of requirements analysis concepts, refines a method for handling early aspects, and proposes a client/server architecture based on a metadata repository.", "num_citations": "11\n", "authors": ["650"]}
{"title": "Metadata driven aspect specification\n", "abstract": " Metadata provides the background information that describes the content, quality, structure and other appropriate data characteristics. This paper proposes the use of metadata to define a meta-aspect repository in the scope of early aspects1. The repository stores the necessary information to support navigation over all stored information for future reuse, versioning control and traceability from requirements to implementation.", "num_citations": "11\n", "authors": ["650"]}
{"title": "Evolving requirements through coordination contracts\n", "abstract": " Use-case driven software development processes can seriously compromise the ability of systems to evolve if a careful distinction is not made between \u201cstructure\u201d and \u201cuse\u201d, and this distinction is not reflected immediately in the first model and carried through to the implementation. By \u201cstructure\u201d, we are referring to what derives from the nature of the application domain, i.e. to what are perceived to be the \u201c invariants\u201d or core concepts of the business domain, as opposed to the business rules that apply at a given moment and determine the way the system (solution) will be used.                 This paper shows how the notion of coordination contract can be used to support the separation between structure and use at the level of system models, and how this separation supports the evolution of requirements on \u201cuse\u201d based on the revision or addition of use cases, with minimal impact on the \u201cstructure\u201d of the system.", "num_citations": "11\n", "authors": ["650"]}
{"title": "Aspect-oriented software development beyond programming\n", "abstract": " This tutorial focuses on applying aspect-oriented software development (AOSD) concepts beyond the programming stage of the software development life cycle. Using concrete methods, tools, techniques and notations we discuss how to use AOSD techniques to systematically treat crosscutting concerns during requirements engineering (RE), architecture design and detailed design as well as the mapping between aspects at these stages. With a clear focus on composition, modelling, trade-off analysis and assessment methods, the tutorial imparts an engineering ethos for translation into day-to-day processes and practices.", "num_citations": "10\n", "authors": ["650"]}
{"title": "Designing adaptive deception strategies\n", "abstract": " Deception-based defense is the process by which actions are intentionally employed to cause misrepresentation and induce erroneous inferences on attackers. Deception can be employed in different levels of computation, from network to application-level, which demands careful planning and coordination between multiple strategies and tactics. Despite of advances on using deception in computer defenses, ad-hoc approaches are still used for their design. As a result, deception is realized essentially as single tools or as entire solutions repackaged as honeypot machines. In this paper, we propose a model to specify coordinated deception tactics based on adaptive architectures. Our contributions rely on a deception-based defense life-cycle approach integrated in a software design process, including a model to specify coordinated deception strategies. The feasibility of the proposed approach is shown via an\u00a0\u2026", "num_citations": "9\n", "authors": ["650"]}
{"title": "Concern interactions and tradeoffs: Preparing requirements to architecture\n", "abstract": " This paper focus on concern interactions and tradeoffs in the context of an approach to build an aspect-oriented software architecture from an aspectoriented requirements specification. This approach, the Requirements Engineering to Software Architecture Framework, is composed of several activities, where the first two address the problem domain and constitute the main body for this paper. These two activities will be described and exemplified by means of a case study.", "num_citations": "9\n", "authors": ["650"]}
{"title": "Intelligent query model for business characteristics\n", "abstract": " This paper presents an intelligent human-oriented interface based on fuzzy logic. The queries reasoning process uses four fuzzy translation rules of the meaning representation language PRUF, proposed by Zadeh. A database with the 500 biggest non-financial Portuguese companies is used to obtain specific queries of business characteristics. Illustrative examples of the four natural language queries are presented to show the capabilities of this human-oriented interface.", "num_citations": "9\n", "authors": ["650"]}
{"title": "Multi-paradigm deception modeling for cyber defense\n", "abstract": " Security-critical systems demand multiple well-balanced mechanisms to detect ill-intentioned actions and protect valuable assets from damage while keeping costs in acceptable levels. The use of deception to enhance security has been studied for more than two decades. However, deception is still included in the software development process in an ad-hoc fashion, typically realized as single tools or entire solutions repackaged as honeypot machines. We propose a multi-paradigm modeling approach to specify deception tactics during the software development process so that conflicts and risks can be found in the initial phases of the development, reducing costs of ill-planned decisions. We describe a metamodel containing deception concepts that integrates other models, such as a goal-oriented model, feature model, and behavioral UML models to specify static and dynamic aspects of a deception operation\u00a0\u2026", "num_citations": "8\n", "authors": ["650"]}
{"title": "A Systematic Analysis Patterns Specification\n", "abstract": " Analysis Patterns are indicative analysis solutions for a recurrent problem. Many patterns have been proposed and are successfully used. The writing of a pattern follows a specific structure that can be tailored to each author\u2019s needs. We have developed an analysis pattern template that solves some previously identified gaps on other approaches. This paper focuses on the definition of a systematic process to guide developers to fill in that analysis pattern template. This process will contribute to the unification of the analysis patterns representation, and thus for their understandability and completeness.", "num_citations": "8\n", "authors": ["650"]}
{"title": "Using i* to identify candidate aspects\n", "abstract": " Aspect-orientation has been capturing researcher\u2019s attention for the last few years. We have seen the birth of several aspect-oriented programming techniques and also the propagation of the aspect concept to the earlier stages of the software development process, such as requirements analysis and design. Our long-term goal is to extend aspect-orientation to the business modelling activity. This paper discusses our first results by using the i* 1 technique to assist us with the concern elicitation process.", "num_citations": "8\n", "authors": ["650"]}
{"title": "Complex objects: aggregates\n", "abstract": " Aggregation is a kind of abstraction which allows a more complex object, the aggregate, to be formed from simpler objects, the components. Although there is not yet a standard de nition of aggregation, the two main cases are aggregates with hidden components and aggregates with shared components. The more interesting case is the former, in which the aggregate encapsulates its components, making them invisible to the other objects in the model.", "num_citations": "8\n", "authors": ["650"]}
{"title": "Goal-driven deception tactics design\n", "abstract": " Deception-based defense relies on intentional actions employed to induce erroneous inferences on attackers. Existing deception approaches are included in the software development process in an ad-hoc fashion, and are fundamentally realized as single tools or entire solutions repackaged as honeypot machines. We propose a systematic goal-driven approach to include deception tactics early in the software development process so that conflicts and risks can be found in the initial phases of the development, reducing costs of ill-planed decisions. The process integrates three phases: system modeling (producing a goal model of the application domain), security modeling (producing a threat model specifying the typical security concerns from the attacker perspective), and deception modeling (producing a deception tactic model, a variability model, and deception story models). The feasibility of the proposed\u00a0\u2026", "num_citations": "7\n", "authors": ["650"]}
{"title": "Optimal location of intermodal terminals in Europe: an evaluation model\n", "abstract": " The goal of the EMOLITE project is to develop a selection and evaluation model for the location of intermodal terminals. The model will allow an accurate evaluation of potential sites for the development of freight and passenger terminals according to both internal and external requirements, considering the dynamic and continuously changing environment of freight and passenger transport. Specifically we will create a decision support system designed to be used at a strategic level, which includes a simulation module using Fuzzy Logic.", "num_citations": "7\n", "authors": ["650"]}
{"title": "Indicadores para estimativa da digestibilidade aparente total em equinos\n", "abstract": " Objetivou-se neste estudo avaliar diferentes indicadores para estimativa das digestibilidades aparente total em equinos. Foram utilizadas quatro \u00e9guas adultas, sem ra\u00e7a definida, agrupadas em um quadrado latino 4 x 4 balanceado, alimentadas com dietas que continham partes iguais de feno da gram\u00ednea Tifton 85 (Cynodon sp) e concentrado experimental que continha milho submetido a quatro processamentos: dieta um milho triturado; dieta dois milho floculado; dieta tr\u00eas milho laminado e dieta quatro milho extrusado. A pondera\u00e7\u00e3o dos coeficientes de digestibilidade dos nutrientes pelos indicadores foi efetuada por meio do vi\u00e9s. A acur\u00e1cia e a precis\u00e3o foram determinadas pela compara\u00e7\u00e3o entre os dados preditos e observados, e a robustez pela compara\u00e7\u00e3o dos vieses com outros fatores estudados. O uso do indicador \u00f3xido cr\u00f4mico apontou valores semelhantes de coeficientes de digestibilidade dos\u00a0\u2026", "num_citations": "6\n", "authors": ["650"]}
{"title": "Aspect interaction management with meta-aspects and advice cardinality\n", "abstract": " Aspect interactions are not necessarily bad or undesirable. In fact, interactions may be specifically crafted in order to achieve a certain desired effect. However, if such interactions are not managed deliberately, erroneous behaviour will potentially arise. It should be possible to specify what kinds of interaction are to be expected and admissible. Aspect interaction management should be performed using information that describes the desired aspect\u2019s properties with respect to interaction with other aspects. Automated validation mechanisms should ensure these properties always hold. Aspect interactions that do not conform to the specification should be detected and reported. In this work, we define novel concepts regarding aspect interaction management. These concepts will be integrated and implemented in existing tools as future work.", "num_citations": "6\n", "authors": ["650"]}
{"title": "Using multi-criteria analysis to handle conflicts during composition\n", "abstract": " CITI - Publication - Using Multi-criteria Analysis to Handle Conflicts During Composition CITI has stopped operations in 2014, to co-launch NOVA LINCS THIS SITE IS NOT BEING UPDATED SINCE 2013 citi banner Home \\ Publications \\ Publication Page Login CITI Welcome Research Areas Organization Executive Board Advisory Board Contacts Useful Information People CITI Members Visitors Activities Research Projects Publications Seminars @ CITI External Talks & Seminars Graduation Activities Organization of Events Editorial Committees Prototypes Visits & Missions Activity Reports Search & Query Search BibTeX Generator banner bottom File Top Using Multi-criteria Analysis to Handle Conflicts During Composition Description: \u201cWorkshop on Early Aspects 2006: Traceability of Aspects in the Early Life Cycle\u201d Date: March, 2006 Authors: Filipe Vieira (Instituto Polit\u00e9cnico de Beja), Isabel Sofia Brito, Ana Moreira \u2026", "num_citations": "6\n", "authors": ["650"]}
{"title": "Uma Abordagem C/L da Sexualidade no Idoso\n", "abstract": " Os autores abordam os v\u00e1rios aspectos psicol\u00f3gicos, org\u00e2nicos e relacionais da vida sexual do homem e mulher idosos. A utiliza\u00e7\u00e3o destes conhecimentos na pr\u00e1tica da Psiquiatria Consiliar e de Liga\u00e7\u00e3o com o m\u00e9dico de fam\u00edlia., o seu utente e com outros especialistas, nas enfermarias e na consulta externa, tem facilitado a melhor compreens\u00e3o e abordagem da sexualidade no doente idoso.", "num_citations": "6\n", "authors": ["650"]}
{"title": "Using a formal user-centred model to build a formal system-centred model\n", "abstract": " We have been investigating the process of constructing an executable, formal and objectoriented speci cation from a set of informal requirements. This is not an easy task as there is a wide gap between the structure and notation of a formal speci cation and the requirements from which it is to be derived. It also cannot be a formal process. As informal requirements are usually expressed in terms of the behaviour which the environment expects from the system, we propose that the construction of a formal and executable user-centred model should precede the construction of a formal object-oriented speci cation. By prototyping the user-centred model, we can both validate it with respect to the requirements and show up inconsistencies in the requirements. The user-centred model can then be used to support the construction of a formal system-centred model, ie the object-oriented speci cation.When both models are expressed in the same executable formal language, the informal task of validating the object-oriented speci cation with respect to the requirements can be replaced by verifying that it is equivalent to the user-centred model. We already have the ROOA (Rigorous Object-Oriented Analysis) method, which proposes a process to build a formal system-centred model. Now we are proposing a process to build a user-centred model. As an example of this approach, we show its use within the ROOA method.", "num_citations": "6\n", "authors": ["650"]}
{"title": "Using rigorous object-oriented analysis\n", "abstract": " The ROOA (Rigorous Object-Oriented Analysis) method introduces formality into the object-oriented analysis process by providing a set of rules which enables a formal objectoriented analysis model to be produced systematically from a set of requirements. This model is expressed in LOTOS and provides a precise and unambiguous speci cation of system requirements. As the speci cation obtained is executable, prototyping is used to support validation and re nement of the formal model.", "num_citations": "6\n", "authors": ["650"]}
{"title": "Towards a Systematic Process for the Elicitation of Sustainability Requirements.\n", "abstract": " In recent years, several approaches have been pro-posed in the area of sustainability requirements. They have classified sustainability into different dimensions and explored these dimensions as well as the relationships of sustainability requirements to functional requirements and quality requirements, other than sustainability. Furthermore, case studies were reported. Only a few papers describe a systematic process for deriving sustainability requirements for a specific system. In this paper, we report on work in progress on such a process. The main idea is to provide a checklist of general and IT-specific details for the sustainability dimensions and a checklist of general influences between the dimensions. These checklists can be used to iteratively refine the requirements of a specific system with sustainability considerations which balance the different dimensions. We sketch this process and illustrate it with an example.", "num_citations": "5\n", "authors": ["650"]}
{"title": "ROOA: Rigorous Object-Oriented Analysis Method\n", "abstract": " Object-oriented analysis (OOA) and design methods are used by the software engineering community, while formal description techniques (FDTs) are mainly used in a research environment. The Rigorous Object-Oriented Analysis (ROOA) method combines OOA methods with the ISO standard FDT LOTOS to produce a practical method which can be applied by software engineers.ROOA takes a set of informal requirements and an object model and produces a formal objectoriented analysis model that acts as a requirements speci cation. The resulting formal model integrates the static, dynamic and functional properties of a system in contrast to existing OOA methods which are informal and produce three separate models that are di cult to integrate and keep consistent.", "num_citations": "5\n", "authors": ["650"]}
{"title": "A SPL framework for adaptive deception-based defense\n", "abstract": " In cyber defense, integrated deception mechanisms have been proposed as part of the system operation to enhance security by planting fake resources. The objective is to entice attackers and confuse them in determining the legitimacy of those resources. Although several strategies exist to implement deception in a software system, developing and integrating such solutions are primarily made in an ad-hoc fashion. This hinders reuse and does not consider the operation life cycle management. Additionally, support for adaptive deception is not considered. To alleviate these problems, we propose a framework based on software product lines and aspect-oriented techniques to generate adaptive deception-based defense strategies. We illustrate the feasibility of our approach with an example from the web applications domain, by integrating honeywords into an authentication mechanism to mitigate offline password cracking attacks.", "num_citations": "4\n", "authors": ["650"]}
{"title": "A model-based representation of configuration knowledge\n", "abstract": " Implementation of feature-oriented systems is typically made by creating an admissible configuration, according to a specified feature diagram, that dictates what artifacts are to be composed to create the desired solution. These artefacts are typically grouped according to the feature they concern. However, some artefacts may be related not to a specific feature, but to a combination of them. Also, multiple alternate implementations of a single feature may exist, and the preferred one may be dependent on the specific configuration that is being composed. We propose a graphic model to represent configuration knowledge that is able to address such concerns.", "num_citations": "4\n", "authors": ["650"]}
{"title": "Reusable model slices\n", "abstract": " Reuse of aspectual model elements has proven to be a challenging issue. A few techniques have been already proposed but no clear definitive answer has been found. We propose an aspectual modeling technique that offers highly flexible customization options. This increases the potential for integrating our aspectual model elements (reusable model slices) properly into any given base model, thereby greatly increasing the chances for reusing it in development of different systems.", "num_citations": "4\n", "authors": ["650"]}
{"title": "Using Object Oriented Requirements Analysis for a High Reliability Message Switching System\n", "abstract": " In 1988, the company \u0415\u0428 and the Portuguese Air Vorce decided to launch a project for the development of a prototype of a High Relif; bC\u00a1 ty Message SwitchingSystem, to be programmed in Ada, using modern software engineering technology. Because this is the first real project to be carried out in Ada in the Portuguese software industry, a good deal of attention has to be paid to training the developers to a high degree of proficiency in the language, and also \u0429 the software development methodology that will have been chosen.", "num_citations": "4\n", "authors": ["650"]}
{"title": "Deception planning models for Cyber Security\n", "abstract": " Deception-based mechanisms are typically used to enhance overall security by causing misperception on adversaries who take actions in favor of defense. The process of creating deception is complex and demands careful planning to maximize the benefits while mitigating potential risks. Advances in creating deception planning processes for cyber security are generally based on military tactics, where deception has a long history. However, the complexity of computer systems demands deception planning processes that fit the needs of integrating deception into traditional software security mechanisms. This paper presents a survey of existing deception planning processes in military and digital realms. The goal of this review is to identify the scope of deception planning models, which tools have been used to plan deception, and how the planning is integrated into other activities in the software development\u00a0\u2026", "num_citations": "3\n", "authors": ["650"]}
{"title": "Configuration support for feature models with soft constraints\n", "abstract": " Traditional feature models may include hard domain constraints that must be upheld in all valid configurations. Soft constraints may however be used to enhance the expressiveness of feature models by allowing non-mandatory relations between features to be expressed. One advantage of including soft constraints in feature models is the opportunity to offer improved configuration support. We describe automated configuration techniques for feature models annotated with soft constraints. These techniques allow configuration suggestions to be extracted from soft constraints, even if inconsistencies among multiple soft constraints arise.", "num_citations": "3\n", "authors": ["650"]}
{"title": "Managing features and aspect interactions in software product lines\n", "abstract": " Our goal is to address the large number of variations arising in the context of software product lines, and to manage feature interactions and dependencies resulting from configuration through composition of such variations. To achieve this, we need: (1) to study and understand the various kinds of interferences between features and how they emerge; (2) to enhance the support for the management, detection of interactions, or interferences, between features; (3) to prevent or resolve undesirable interactions. This requires proper traceability and trade-off analysis mechanisms. We will use model-driven and aspect-oriented techniques to develop a framework, techniques and tools to attain our goal. Model-driven techniques may contribute positively since conformance to rules defining expected interaction dependencies may be automatically enforced. Aspect-orientation may help since it offers the possibility to\u00a0\u2026", "num_citations": "3\n", "authors": ["650"]}
{"title": "An hybrid design solution for spacecraft simulators\n", "abstract": " The European Space Agency (ESA) has created the Simulation Model Portability 2 (SMP2) standard with the purpose to provide a design solution for the project of Spacecraft Simulators. One element of the SMP2 standard is the metamodel Simulation Model Definition Language (SMDL). The design artefacts of a Spacecraft Simulator consist in descriptions of the business logic shared by a set of SMP2 models. This paper reports results from a study that considers the hypothesis to complement the model-driven design approach of the SMP2 standard with test-driven design techniques. The high-level abstractions of Spacecraft Simulators are used to carry out Model-Driven Development processes, while reusable pieces of software that can to be used by many SMP2 models are designed and developed following Test-Driven-Development. The tool capable to establish the dependencies between the source code produced by the two methodologies and mission specific source code is the GNU Build System.", "num_citations": "3\n", "authors": ["650"]}
{"title": "Effect of support on autothermal reforming of methane on nickel catalysts\n", "abstract": " Ni/\u03b3-Al2O3, Ni/CeO2 and Ni/ZrO2 catalyts were investigated in the autothermal reforming of methane and were characterized by XRD, DRS and TPR. NiO in different geometries was the main precursor for the several catalysts, but the presence of NiAl2O4 was observed for Ni/\u03b3-Al2O3 after calcination at 650\u00b0C. The reaction procedeed by an indirect mechanism and activity followed the order Ni/ZrO2>Ni/CeO2> Ni/\u03b3-Al2O3.", "num_citations": "3\n", "authors": ["650"]}
{"title": "A fuzzy evaluation model: a case for intermodal terminals in Europe\n", "abstract": " Freight transport services have evolved substantially in the last decade and encountered a continuously increasing demand for speed, reliability, reduced transportation costs and value added services. To minimize the potential negative effects of the expected increase of commercial transport, the development of friendly transport concepts such as intermodal terminal selection is required.               The goal of our work is to develop a decision support system (DSS) for selecting the intermodal terminal that best fits required conditions and criteria. The DSS includes a simulation model developed using fuzzy logic techniques to handle imprecise concepts. The end-result is intended for decision-makers, i.e., managers that need to choose intermodal destination terminals to be used for the transportation of their goods.", "num_citations": "3\n", "authors": ["650"]}
{"title": "Deriving services from KAOS models\n", "abstract": " Designing software using a SOA (Service-Oriented Architecture) style requires systematic service development approaches. In contexts where such style is used, business objectives can be described using goal models, such as those used in requirements engineering. A goal-based requirements specification should ensure completeness of the goals to be achieved, as well as their temporal and logical dependencies. Currently, existing service-oriented approaches do not offer systematic methods for service identification, and the principles and guidelines proposed are very difficult to follow in practice. This makes service identification a challenging task, requiring skilled experts to identify services and their characteristics. This paper offers KAOS4Services, a systematic approach to derive services from goal-models expressed using the KAOS language. This is achieved with model-driven techniques and a set of\u00a0\u2026", "num_citations": "2\n", "authors": ["650"]}
{"title": "Towards an Agile Reference Architecture Method for Information Systems\n", "abstract": " Agility in software architecture development has received significant attention recently, but supporting tools and methods for this architecture-agility combination are still lacking. This paper proposes RAMA (Reference Architecture Modeling in an Agile software development), a value-centric method to address this issue. RAMA uses model-driven engineering to create information system\u2019s reference architecture aligned with the organization\u2019s business values. RAMA\u2019s feasibility was evaluated with a case study and a proof-of-concept tool.", "num_citations": "2\n", "authors": ["650"]}
{"title": "Incremental modular testing for AOP\n", "abstract": " By designing systems as sets of modules that can be composed into larger applications, developers unleasha multitude of advantages. The promise of AOP (Aspect-Oriented Programming) is to enable developers toorganize crosscutting concerns into separate units of modularity making it easier to accomplish this vision.However, AOP does not allow unit tests to be untangled, which impairs the development of properly testedindependent modules. This paper presents a technique that enables developers to encapsulate crosscuttingconcerns using AOP and still be able to develop reusable unit tests. Our approach uses incremental testingand invasive aspects to modify and adapt tests. The approach was evaluated in a medium scale project withpromising results. Without using the proposed technique, due to the presence of invasive aspects, some unittests would have to be discarded or modified to accommodate the changes made by them. This would havea profound impact on the overall modularity and, in particular, on the reusability of those modules. We willshow that this technique enables proper unit tests that can be reused even when coupled with aspect-orientedcode.", "num_citations": "2\n", "authors": ["650"]}
{"title": "Early-aspects\n", "abstract": " \u2022 What does it mean to weave or compose aspectual requirements?\u2022 Projecting the constraints and influences of aspectual requirements on other system requirements\u2022 A synthesis of the various projections that provides a deeper understanding of the system that we want to develop\u2013Critical needs of the stakeholders\u2013Identification of the key properties of a system", "num_citations": "2\n", "authors": ["650"]}
{"title": "Aspect-oriented logical architecture design a layered perspective applied to data warehousing\n", "abstract": " In this paper we propose a layered approach for aspects\u2019 specification and integration at the logical architecture design level. The proposed approach is based on multiple nominal views and crosscutting aspectual views, composed by architectural aspects. To demonstrate the concept applicability, we apply our ideas to a data warehouse architecture design where the metadata is represented as an aspectual, crosscutting view. We aim at demonstrating the advantages of this new aspect-oriented specification approach and how it can be applied to the data warehousing architecture design, broadening the aspectorientation scope.", "num_citations": "2\n", "authors": ["650"]}
{"title": "Aspect-Oriented Software Development: An Overview.\n", "abstract": " Separation of concerns is a software engineering principle that claims the clearly identification of all the elements that participate in a system. There are some concerns such as security and performance that cut across many other concerns. The classical approaches do not support the modularisation and further integration of these crosscutting concerns with the functional requirements of a system producing spread and tangled representations (eg specifications, code) that are difficult to understand, maintain and evolve. Aspect-Oriented Programming (AOP) aims at handling these problems. Recently we have been noticing a clear interest on propagating the AOP ideas and concepts to earlier activities of the software development process. This paper gives an overview of Aspect-Oriented Software Development (AOSD), giving a special emphasis to aspect-oriented requirements engineering. f", "num_citations": "2\n", "authors": ["650"]}
{"title": "Sdl in rigorus object-oriented analysis (short paper)\n", "abstract": " SDL in Rigorus Object-Oriented Analysis (Short Paper) | Proceedings of the IFIP TC6/WG6.1 Third International Conference on Formal Methods for Open Object-Based Distributed Systems (FMOODS) ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsProceedings of the IFIP TC6/WG6.Third International Conference on Formal Methods for Open Object-Based Distributed Systems (FMOODS)SDL in Rigorus Object-Oriented Analysis (Short Paper) Article SDL in Rigorus Object-Oriented Analysis (Short Paper) Share on Authors: Robert G. Clark View Profile , Ana MD Moreira View Profile Authors Info & Affiliations Proceedings of \u2026", "num_citations": "2\n", "authors": ["650"]}
{"title": "Formalizing UML. Why? How?\n", "abstract": " Publication: OOPSLA'98 Addendum: Addendum to the 1998 proceedings of the conference on Object-oriented programming, systems, languages, and applications (Addendum) January 1998 Pages 0.26\u2013A26 https://doi. org/10.1145/346852.346959", "num_citations": "2\n", "authors": ["650"]}
{"title": "Specification case studies in ROOA.\n", "abstract": " Object-oriented approaches and formal methods have both been proposed as ways of alleviating problems in the development and maintenance of reliable software systems. Object-oriented approaches are gradually becoming more and more accepted in industry, during all phases of software development. Formal methods are also gradually becoming more used in industry, but they are not usually introduced until the design phase. This is because the construction of an initial formal specification during early stages of development is difficult. In fact, little previous work has been done in the area of object-oriented analysis and formal methods. We have developed the Rigorous Object-Oriented Analysis (ROOA) method [11, 12, 13, 14, 16] which specifies the required behaviour of a system by constructing a model using the formal description technique LOTOS (Language Of Temporal Ordering Specification)[1, 8]. As LOTOS has a formal semantics, the model has a precise meaning and can be used as a formal requirements specification of the system\u2019s intended behaviour.The ROOA method shows how LOTOS can be integrated with object-oriented analysis methods. ROOA complements existing object-oriented analysis methods (such as those by Rumbaugh et al., Coad and Yourdon, Jacobson and Shlaer-Mellor), enabling precision and formality in development where required, for example in safety-sensitive systems [5, 9, 17, 18]. The model produced by ROOA integrates the static, dynamic and functional models, unlike informal object-oriented analysis methods, such as the one by Rumbaugh et al., which create three separate models [17]. It is\u00a0\u2026", "num_citations": "2\n", "authors": ["650"]}
{"title": "Rigorous Object-Oriented Analysis Method\n", "abstract": " CITI - External Talk - Rigorous Object-Oriented Analysis Method CITI has stopped operations in 2014, to co-launch NOVA LINCS THIS SITE IS NOT BEING UPDATED SINCE 2013 citi banner Home \\ External Talks & Seminars \\ External Talk Page Login CITI Welcome Research Areas Organization Executive Board Advisory Board Contacts Useful Information People CITI Members Visitors Activities Research Projects Publications Seminars @ CITI External Talks & Seminars Graduation Activities Organization of Events Editorial Committees Prototypes Visits & Missions Activity Reports Search & Query Search BibTeX Generator banner bottom File Top Rigorous Object-Oriented Analysis Method (Keynote) By: Ana Moreira Date: 4 Sep 1993 Location/Event: Workshop93 JNICT FAC3, Lisboa, INESC (Portugal) File Bottom \u00a9 2007 CITI @ citi.di.fct.unl.pt administrator | webmaster \u2026", "num_citations": "2\n", "authors": ["650"]}
{"title": "Choosing Ada Development Methodologies for a High Reliability Message Switching System\n", "abstract": " ^ Departamento de Inform\u00e1tica Faculdadfi de Ci\u00eancias e Tecnologia Universidade Nova de Lisboa 2825 MONTE DA \u0421\u0410\u0420\u0410\u0428\u0421\u0410 PORTUGALIn 1983, the Portuguese electronics company EID and the Portuguese Air Force decided to launch a project for the development of a prototype of a High Reliability Message Switching System, to be programmed in Ada, using modern software engineering technology. Because this is the first real project to be carried out in Ada in the Portuguese software industry, a good deal of attention has to be paid to choosing a development methodology well suited to the goals of the project. Training the developers will then follow two concurrent and complementary paths: they have to become experts in the language, knowing how to use it in a way that enhances the methodology, and they have to master the methodology in a way that it will enable them to take the most out of the language.", "num_citations": "2\n", "authors": ["650"]}
{"title": "Object-Oriented Technology\n", "abstract": " For the fourth time this year, in cooperation with Springer-Verlag, the European Conference on Object-Oriented Programming (ECOOP) conference series is glad to offer the object-oriented research community the ECOOP2000 Workshop Reader, a compendium of workshop reports, panel transcripts and poster abstracts pertaining to the ECOOP 2000 conference, held in Cannes and Sophia Antipolis from 12 to 16 June.", "num_citations": "2\n", "authors": ["650"]}
{"title": "Software sustainability: beyond the tower of babel\n", "abstract": " Principally associated with the field of ecology, the topic of sustainability has emerged as an increasingly important area of research in a number of sub-fields within the domain of computing including artificial intelligence, high-performance computing, human-computer interaction, requirements engineering, and scientific computing [9]. Within the field of software engineering, sustainability has been identified as an important topic given modern society's high dependency on increasingly complex and \u2018dangerously fragile\u2019 software systems, which operate in evolving, distributed eco-systems [17].", "num_citations": "1\n", "authors": ["650"]}
{"title": "Competences development and turnover intentions: the serial mediation effect of perceived internal employability and affective commitment\n", "abstract": " PurposeThis study aims to explore the serial mediation effect of perceived internal employability and affective commitment in the relationship between the organisational practices of competences development and turnover intentions.Design/methodology/approachThe methodology was quantitative and is based on a survey with a sample of 313 participants, all of whom were employed in several organisations located in Portugal.FindingsA significant and negative effect of organisational practices of competences development, perceived internal employability and affective commitment on turnover intentions was verified. A total serial mediation effect was also found from perceived internal employability and affective commitment in the relationship between organisational practices of competences development (i.e., training, individualised support and functional rotation) and turnover intentions\u00a0\u2026", "num_citations": "1\n", "authors": ["650"]}
{"title": "Towards a requirements language for modeling emotion in videogames\n", "abstract": " The 1 videogame development process must focus on the user satisfaction. Failing to comply with this may jeopardize the success of the videogame, and even put at risk the owner company. Requirements Engineering is essential to elicit the needs and desires of the systems' stakeholders involved in the development, purchase and use of the videogames. The elicited requirements are the basis for the game specification document which is then the major driver for the construction of the videogame. The success of a game involves concerns, such as game strategy, plot and goal of the game, attractive interfaces, efficient algorithms, and, very important, the emotions that the game triggers on its players. This work focuses exactly on the requirements that specify the trigger for different types of emotions. Modeling such emotion requirements has not been much explored, maybe due to the high degree of subjectivity\u00a0\u2026", "num_citations": "1\n", "authors": ["650"]}
{"title": "Visual Modeling of Cyber Deception\n", "abstract": " Deception-based defense relies on deliberated actions to manipulate the attackers' perception of a system. It requires careful planning and application of multiple techniques to be effective. Therefore, deceptive strategies should be studied in isolation from the traditional security mechanisms. To support this goal, we develop DML, a visual language for deception modeling, offering three complementary views of deception: requirements model, deception tactics feature model, and deception strategy organizational. DML integrates goal-oriented requirements models and threat models to compose a comprehensive model considering the influences of developing deceptive mechanisms and the associated risks. The feasibility of DML is demonstrated via a tool prototype and a set of illustrative scenarios for a web system.", "num_citations": "1\n", "authors": ["650"]}
{"title": "An Incremental Approach to Testing AOP\n", "abstract": " Breaking down applications into smaller modules is a common way for software developers to cope with the increasing complexity of their projects. A common barrier to this endeavor is the presence of crosscutting concerns that prevent reusability and reduce comprehensibility. The promise of AOP (Aspect-Oriented Programming) is that, by using it, developers will be able to organize these crosscutting concerns into their own units of modularity. However, AOP does not tackle the problem of having tangled automatic tests. This paper presents a technique using incremental testing and invasive aspects to modify and adapt tests, enabling the development of unit tests that are free of crosscutting concerns and thus easier to reuse. Using a medium scale project, we will show that without using this technique, due to the presence of invasive aspects, some unit tests would have to be discarded or modified to\u00a0\u2026", "num_citations": "1\n", "authors": ["650"]}
{"title": "Flexible Modeling and Product Derivation in Software Product Lines.\n", "abstract": " Software Product Line development entails planned reuse of development assets for creating applications in a specific domain. SPL development can benefit from incorporating soft constraints in both Domain and Application Engineering. Increased expressiveness is attained and important domain knowledge that would otherwise be lost can be included, allowing improved configuration support to be provided. The stakeholders\u2019 goals for a specific product can also be represented with soft constraints, allowing incomplete and inconsistent specifications to be inputted and then be automatically processed and analyzed. The approach is supported by a tool, which is capable of detecting inconsistencies, identifying the required trade-offs and explaining them to the stakeholder, who can then make an informed trade-off decision.", "num_citations": "1\n", "authors": ["650"]}
{"title": "Soft Constraints in Feature Models: An Experimental Assessment\n", "abstract": " Feature Models specify admissible configurations of products in Software Product Lines. Constraints are used to represent domain specific knowledge, such as requiring or excluding a feature in the presence of another. Configurations failing to conform to these constraints are deemed invalid. However, in many cases useful domain information cannot be expressed comfortably with such forceful, hard constraints. To overcome this problem, softer constraints, of less forcing nature, can be used. We describe a framework for including soft constraints in feature models based on propositional logic. Analysis procedures for detecting inconsistencies and conflicts in this framework are also described. Test sets are built by injecting soft constraints into publicly available feature models, recreating typical patterns of use. These features are then subjected to automated analysis to assess the prevalence of soft constraint related conflicts and interactions.", "num_citations": "1\n", "authors": ["650"]}
{"title": "Managing Information Flow in SPL Development Processes\n", "abstract": " \u00c9cole des Mines de Nantes - Managing Information Flow in SPL Development Processes Acc\u00e9der directement au contenu Acc\u00e9der directement \u00e0 la navigation Toggle navigation CCSD HAL HAL HALSHS TEL M\u00e9diHAL Liste des portails AUR\u00e9HAL API Data Documentation Episciences.org Episciences.org Revues Documentation Sciencesconf.org Support Institut Mines Telecom \u00c9cole des Mines de Nantes ARCHIVES OUVERTES Mines Nantes fusionne avec Telecom Bretagne et devient IMT Atlantique au 01/01/17 HAL - hal.archives-ouvertes.fr Accueil D\u00e9p\u00f4t Consultation Par d\u00e9partement Par auteur Par type de publication Par ann\u00e9e de publication Par \u00e9quipe Rechercher hal-00620995, version 1 Chapitre d'ouvrage Managing Information Flow in SPL Development Processes Nicolas Anquetil 1 Uira Kulesza 2 Ricardo Mateus 3 Ralf Mitschke 4 Ana Moreira 2 Jean-Claude Royer 5, 6 Andreas Rummler 7 D\u00e9tails 1 \u2026", "num_citations": "1\n", "authors": ["650"]}
{"title": "Hyper/Net: MDSOC support for .NET\n", "abstract": " This dissertation uses Multi-Dimensional Separation of Concerns (MDSoC) to focus on software composition. Software composition emerged as a response to difficulties found in modularization with standard Software Engineering approaches such as Object Oriented approaches. MDSoC provides a unified multi-dimensional modularization mechanism that is usable across all the stages of the software lifecycle. This modularization mechanism complements the existing approaches, instead of replacing them.Most of the work presented in this document addresses MDSoC implementations for programming. We developed such an MDSoC implementation for Microsoft .NET and called it Hyper/Net. Hyper/Net is based on partial types, which is a native feature of .NET languages. Relying on native language features for MDSoC is a novelty and is possibly the most interesting contribution of this work. To validate Hyper/Net, it was analyzed in the light of the MDSoC model and compared with other MDSoC implementations. Hyper/Net was also used to implement simple case studies that show the benefits of MDSoC. Finally, the results of each case study were validated by a unit testing approach, which was adapted for MDSoC.", "num_citations": "1\n", "authors": ["650"]}
{"title": "Object-Oriented Technology. ECOOP 2004 Workshop Reader: ECOOP 2004 Workshop, Oslo, Norway, June 14-18, 2004, Final Reports\n", "abstract": " This year, for the eighth time, the European Conference on Object-Oriented Programming (ECOOP) series, in cooperation with Springer, is glad to o? er the object-oriented research community the ECOOP 2004 Workshop Reader, a compendium of workshop reports pertaining to the ECOOP 2004 conference, held in Oslo from June 15 to 19, 2004. ECOOP 2004 hosted 19 high-quality workshops covering a large spectrum of hot research topics. These workshops were chosen through a tight peer review process following a speci? c call for proposals ending on November 30, 2003. We are very grateful to the members of the Workshop Selection Committee for their careful reviews and hard work to put together the excellent workshop program. We also want to thank all submitters, accepted or not, to whom the workshop program equally owes its quality. This selection process was then followed by a selection of workshop participants, done by each team of organizers based on an open call for position papers. This participant selection process ensured that we gathered the most active researchers in each workshop research area, and therefore a fruitful working meeting. Following the tradition of the ECOOP Workshop Reader, we strove for hi-quality, value-adding and open-ended workshop reports. The result, as you can judgefromthefollowingpages, isathought-provokingsnapshotofthecurrent-searchinobject-orientation, fullofpointersforfurtherexplorationofthecovered topics. We want to thank our workshop organizers who, despite the additional burden, did a great job in putting together these reports.", "num_citations": "1\n", "authors": ["650"]}
{"title": "A percep\u00e7\u00e3o do usu\u00e1rio em rela\u00e7\u00e3o a grupos operativos na aten\u00e7\u00e3o b\u00e1sica \u00e0 sa\u00fade\n", "abstract": " Trata-se de uma pesquisa qualitativa que teve como objetivo compreender o que significa para o usu\u00e1rio participar de grupos operativos. O estudo foi realizado em dois Centros de Sa\u00fade de Belo Horizonte e uma Unidade B\u00e1sica de Sa\u00fade da Fam\u00edlia de Ibirit\u00e9/MG. A popula\u00e7\u00e3o foi constitu\u00edda por 43 usu\u00e1rios que responderam a seguinte quest\u00e3o norteadora:\u201cConta para n\u00f3s o que \u00e9, para voc\u00ea, participar das reuni\u00f5es\u201d. A an\u00e1lise dos dados respaldada nos fundamentos de Martins e Bicudo (1998), possibilitou a constru\u00e7\u00e3o de cinco categorias anal\u00edticas: 1-Aprendizado; 2-V\u00ednculo; 3-Resolutividade; 4-Socializa\u00e7\u00e3o; 5-Desmotiva\u00e7\u00e3o. Ao compreendermos os significados emergidos dos discursos, pudemos atentar para a necessidade de sistematizar a pr\u00e1tica dos grupos operativos, j\u00e1 que os mesmos s\u00e3o capazes de \u201coperar\u201d mudan\u00e7as na vida das pessoas. Assim, a partir de uma assist\u00eancia coparticipativa, torna-se\u00a0\u2026", "num_citations": "1\n", "authors": ["650"]}
{"title": "ROOA with SDL\n", "abstract": " Our interest is in making object-oriented analysis a more rigorous process. As we wish to create a practical and usable method, we do not propose a new speci cation language. Instead, we base our work on standard formal description techniques which provide executable speci cations and which are supported by validation and simulation tools so that prototyping can be used validate a speci cation against the requirements. Also, the rst steps in our rigorous object-oriented analysis method are based on widely used informal methods such as OMT and OOSE. In this report, we show how SDL can be applied during object-oriented analysis to produce a formal object-oriented requirements speci cation. SDL is a standard formal description technique that is normally used in the design phase of systems development. Building a formal speci cation from informal requirements is di cult. To simplify this, our method builds two formal models: a user-centred model and a system-centred model. The user-centred model is based on scenarios and speci es the external behaviour of a system from the viewpoint of the environment. It is used to support the construction of the system-centred model which is the formal object-oriented requirements speci cation. We represent both models in the same formal language (in this case SDL, but it could be another formal description technique such as LOTOS). From the external point of view, the two models should exhibit the same behaviour. We validate the user-centred model against the requirements. Validation of the system-centred model can then be achieved by verifying that it provides the behaviour expected by\u00a0\u2026", "num_citations": "1\n", "authors": ["650"]}
{"title": "Teaching objects: the case for modelling\n", "abstract": " Object-oriented development is fast becoming the preferred way to build software. Industry is already offering training courses in several areas of object-oriented technology and academia is reformulating the contents of Computing Science degrees so that several different aspects of object-orientation become part of the curricula.", "num_citations": "1\n", "authors": ["650"]}
{"title": "Formal user-centred models\n", "abstract": " As informal requirements are usually expressed in terms of the behaviour which the environment expects from a system, we propose that the construction of a formal and executable user-centred model should be used as an intermediate step in the construction of a formal object-oriented specification. Rapid prototyping can be used to validate the user-centred model with respect to the requirements and the informal task of validating the object- oriented specification can be replaced by the formal task of verifying that it is equivalent to the user-centred model. As an example of this approach, we show its use within the Rigorous Object-Oriented Analysis (ROOA) method.", "num_citations": "1\n", "authors": ["650"]}
{"title": "M\u00e9todos de An\u00e1lise de Req uisitos Orientada pelos Objectos\n", "abstract": " A entrada em uso da linguagem Ada veio suscitar o aparecimento de novas metodologias de desenvolvimento de software, uma vez que cedo se constatou que as tradicionais n\u00e3o permitem tirar todo o partido da linguagem. De facto, e hoje comummente aceite que o Ada s\u00f3 atingir\u00e1 as suai potential idades quando guiado pelos princ\u00edpios da engenharia de software, no quadro de metodologias de desenvolvimento adequadas.De entre essas novas metodologias tem sobressa\u00eddo as\" orientados pelos objectos\". \u00fc conceito de desenvolvimento de software orientado pelos objectos tem ganho muita popularidade ultimamente, mas apesar de se estender a todas as foses do ciclo de vicia, grande parte dos p roje \u0441 io s desenvolvidos em Ada come\u00e7am a usar este tipo de metodologias somente na fase de desenho. Para a an\u00e1lise de requisitos o mais freq\u00fcente continua a ser recorrer \u00e0 an\u00e1lise funcional, t\u00e9cnica\u00a0\u2026", "num_citations": "1\n", "authors": ["650"]}