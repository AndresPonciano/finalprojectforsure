{"title": "Quality-driven architecture development using architectural tactics\n", "abstract": " This paper presents a quality-driven approach to embodying non-functional requirements (NFRs) into software architecture using architectural tactics. Architectural tactics are reusable architectural building blocks, providing general architectural solutions for common issues pertaining to quality attributes. In this approach, architectural tactics are represented as feature models, and their semantics is defined using the Role-Based Metamodeling Language (RBML) which is a UML-based pattern specification notation. Given a set of NFRs, architectural tactics are selected and composed, and the composed tactic is used to instantiate an initial architecture for the application. The proposed approach addresses both the structural and behavioral aspects of architecture. We describe the approach using tactics for performance, availability and security to develop an architecture for a stock trading system. We demonstrate tool\u00a0\u2026", "num_citations": "112\n", "authors": ["374"]}
{"title": "Design pattern formalization techniques\n", "abstract": " Many formal approaches for pattern specification are emerging as a means to cope with the inherent shortcomings of informal description. Design Pattern Formalization Techniques presents multiple mathematical, formal approaches for pattern specification, emphasizing on software development processes for engineering disciplines. Design Pattern Formalization Techniques focuses on formalizing the solution element of patterns, providing tangible benefits to pattern users, researchers, scholars, academicians, practitioners and students working in the field of design patterns and software reuse. Design Pattern Formalization Techniques explains details on several specification languages, allowing readers to choose the most suitable formal technique to solve their specific inquiries.", "num_citations": "92\n", "authors": ["374"]}
{"title": "An approach to precisely specifying the problem domain of design patterns\n", "abstract": " The problem domain of a design pattern describes the problem context in which the pattern can be applied. In general, determining the applicability of a pattern to a particular problem heavily relies on the knowledge and experience the developer has with the pattern. This significantly limits the use of patterns. To address this issue, we propose an approach for rigorously specifying the problem domain of patterns. This approach systematically guides one to develop rigorous specifications of a pattern's problem domain using a precise notation. The resulting specifications can be used to develop tool support for automatic evaluation of pattern applicability. We describe the approach using the Visitor pattern, and show how the resulting specification can be used to evaluate pattern applicability for a particular problem model. We also demonstrate tool support for the approach.", "num_citations": "59\n", "authors": ["374"]}
{"title": "Evaluating pattern conformance of UML models: a divide-and-conquer approach and case studies\n", "abstract": " A design pattern is realized in various forms depending on the context of the applications. There has been intensive research on detecting pattern instances in models and in implementations. However, little work addresses variations of pattern realization. This paper describes an approach for evaluating conformance of pattern variations. This approach uses a divide-and-conquer strategy to evaluate the structural conformance of a UML class diagram to the solution of a design pattern. A design pattern is specified in an extension of the UML that defines the pattern in terms of roles. To demonstrate the approach, we use the Visitor pattern and two case studies of a price calculator and a word processor. We also present a prototype tool that supports the approach.", "num_citations": "44\n", "authors": ["374"]}
{"title": "The role-based metamodeling language for specifying design patterns\n", "abstract": " This chapter describes a UML-based pattern specification language called the role-based metamodeling language (RBML), which defines the solution domain of a Design pattern in terms of roles at the metamodel level. The goal of the RBML is to support the development of precise pattern specifications that can be used for the development of pattern tools. The author describes the approach and benefits of the RBML, and demonstrates the notation for capturing various perspectives of pattern properties using the Observer, Interpreter, and Iterator patterns. The author also discusses tool support for the RBML and the future trends in pattern specification.", "num_citations": "40\n", "authors": ["374"]}
{"title": "An approach to evaluating structural pattern conformance of UML models\n", "abstract": " This paper describes an approach to evaluating the structural conformance of a UML class diagram to a design pattern. A design pattern is specified in an extension of the UML that defines the pattern as a family of models. A pattern specification consists of a set of pattern roles where a role specifies the properties of a pattern participant. The approach uses a divide-and-conquer method to evaluate pattern conformance. In the approach a pattern and the model being evaluated are decomposed into blocks. Then, the model blocks are evaluated for conformance to the role blocks in the pattern. When all individual role blocks are satisfied by the model blocks, the pattern as a whole is considered to evaluate the entire conformance of the model. A major benefit of this approach is the support for variations of pattern realizations through the notion of pattern roles. We illustrate the approach using the Visitor pattern and a\u00a0\u2026", "num_citations": "39\n", "authors": ["374"]}
{"title": "Model transformation between OPC UA and UML\n", "abstract": " OPC Unified Architecture (UA) is a platform-independent standard for message-based communication between clients and servers on various types of network to facilitate information exchange. OPC UA has been adopted in various domains such as power grids, building automation, and smart devices to support interoperability of involved systems. These domains also use Unified Modeling Language (UML) as the standard notation for data modeling or system modeling. Use of two different notations in the same domain causes compatibility issues. To address this, we present an approach for transforming OPC UA to UML to improve their compatibility and integration. In the approach, we rigorously analyze the semantics of OPC UA elements and establish a mapping between OPC UA elements and UML elements based on the analysis. Based on the mapping, we define transformation algorithms using Query/View\u00a0\u2026", "num_citations": "38\n", "authors": ["374"]}
{"title": "A meta-modeling approach to specifying patterns\n", "abstract": " A major goal in software development is to produce quality products in less time and with less cost. Systematic reuse of software artifacts that encapsulate high-quality development experience can help achieve the goal. Design patterns are a common form of reusable design experience. Use of design patterns can help developers reduce development time. Prevalent design patterns are, however, described informally (eg,[36]). This prevents systematic use of patterns.", "num_citations": "38\n", "authors": ["374"]}
{"title": "QVT-based model transformation to support unification of IEC 61850 and IEC 61970\n", "abstract": " A smart grid is an electrical power grid infrastructure for improved efficiency, reliability, and safety based on automated monitoring and control of data and communication. IEC 61850 and IEC 61970 are core standards in the smart-grid domain for substation automation and power operation management. There are significant data exchanges involved between the IEC 61850 level and the IEC 61970 level, which require high compatibility between the two standards. However, due to different perspectives and independent evolution, IEC 61850 and IEC 61870 are not compatible and practitioners have to come up with their own data mapping for the standards in an ad-hoc manner. This has led to significant issues on interoperability and data consistency in smart grids. An effective solution for this is to define a common semantic model of the standards and provide a systematic transformation method for transforming a\u00a0\u2026", "num_citations": "34\n", "authors": ["374"]}
{"title": "Unifying data types of IEC 61850 and CIM\n", "abstract": " IEC 61850 and IEC 61970-301 (CIM) are core standards in the electrical power domain. IEC 61850 is concerned with control and protection in a substation, while CIM addresses power management. There has been a great attention to unifying these standards to support interoperability in smart grids. However, due to their difference natures and independent evolution, the unification of IEC 61850 and CIM has been a great challenge. A prerequisite to their unification is unifying data types. In this paper, we present an approach for unifying data types of IEC 61850 and CIM. In the approach, the semantics of all the data types in the standards are analyzed to identify matching and non-matching types. Based on the analysis, data types are unified by applying a set of unification principles. We demonstrate tool support for transforming IEC 61850 and CIM data types to unified data types using Query/View/Transformation\u00a0\u2026", "num_citations": "33\n", "authors": ["374"]}
{"title": "Role-based access control for substation automation systems using XACML\n", "abstract": " There has been an increasing need for accessing data of internal equipment and devices of a substation system from external systems as power grids evolve. This has also introduced growing concerns on data security. In response to the concerns, IEC 62351 has proposed role-based access control (RBAC) for substation automation. In this work, we present a novel approach for implementing RBAC based on IEC 62351 for substation automation using eXtensible Access Control Markup Language (XACML). We integrate the approach with IEC 61850 by extending Abstract Communication Service Interface (ACSI), Manufacturing Message Specification (MMS), and System Configuration Language (SCL). A major advantage of the approach is that it fully conforms to both IEC 61850 and IEC 62351 and highly compatible with SCL as both XACML and SCL are XML-based. We implement the approach using\u00a0\u2026", "num_citations": "30\n", "authors": ["374"]}
{"title": "A feature-based approach for modeling role-based access control systems\n", "abstract": " Role-based access control (RBAC) is a popular access control model for enterprise systems due to its flexibility and scalability. There are many RBAC features available, each providing a different function. Not all features are needed for an RBAC system. Depending on the requirements, one should be able to configure features on a need basis, which reduces development complexity and thus fosters development. However, there have not been suitable methods that enable systematic configuration of RBAC features for system development. This paper presents an approach for configuring RBAC features using a combination of feature modeling and UML modeling. Feature modeling is used for capturing the structure of features and configuration rules, and UML modeling is used for defining the semantics of features. RBAC features are defined based on design principles of partial inheritance and compatibility\u00a0\u2026", "num_citations": "30\n", "authors": ["374"]}
{"title": "A metamodeling approach to unifying IEC 61850 and IEC 61970\n", "abstract": " A smart grid is an electrical power grid infrastructure for improved efficiency, reliability, and safety based on automated monitoring and control of data and communication. IEC 61850 and IEC 61970 are core standards in the smart grid domain for substation automation and power operation management. Significant data exchange is involved between the IEC 61850 level and the IEC 61970 level. However, due to different perspectives on smart grid and independent evolution, IEC 61850 and IEC 61970 are not compatible. This forces practitioners to come up with their own data mappings between the standards in an ad-hoc manner, which leads to significant issues on interoperability and data consistency. An effective solution for this is to define a common semantic model for both substation automation and operation management. In this paper, we present a metamodeling approach for unifying IEC 61850 and IEC\u00a0\u2026", "num_citations": "26\n", "authors": ["374"]}
{"title": "Tailoring dds to smart grids for improved communication and control\n", "abstract": " Adopting new technologies in smart grid (SG) enables the improvement of reliable communication. A key factor for SG efficiency is reliable data exchange between different components and domains in the system. SG must allow remote and quick reaction for different events. This is not a trivial task especially with large scale power grids, which requires SG to have a reliable communication protocol. Data Distribution Service (DDS) is introduced as a data-centric middleware standard based on publish-subscribe protocol to address communication needs for distributed applications. DDS supports reliable data exchange between different components using various features such as quality-of-service (QoS). In this paper, we describe how DDS can be tailored to support SG to improve the communication of devices in SG. We first give an overview of DDS and discuss the benefits of applying it to the communication\u00a0\u2026", "num_citations": "24\n", "authors": ["374"]}
{"title": "ElementRank: ranking java software classes and packages using a multilayer complex network-based approach\n", "abstract": " Software comprehension is an important part of software maintenance. To understand a piece of large and complex software, the first problem to be solved is where to start the understanding process. Choosing to start the comprehension process from the important software elements has proven to be a practical way. Research on complex networks opens new opportunities for identifying important elements, and many approaches have been proposed. However, the software networks that existing approaches use neglect the multilayer nature of software systems. That is, nodes in the network can have different types of relationships at the same time, and each type of relationship forms a specific layer. Worse still, they mainly focus on identifying important classes, and little work has been done on quantifying package importance. In this paper, we propose an ElementRank approach to provide a ranked list of classes\u00a0\u2026", "num_citations": "23\n", "authors": ["374"]}
{"title": "Inference of design pattern instances in UML models via logic programming\n", "abstract": " This paper formalizes the notion of a design model structurally conforming to a design pattern by representing the model as a logic program whilst the pattern as a query. The conformance of a model to a design pattern is equivalent to the satisfaction of the query by the logic program. Harnessing logic inference capability of logic programming languages, we obtain an automated method that infers all the instances of a design pattern in a UML class diagram. We use the visitor pattern and a price calculation application to demonstrate the technique", "num_citations": "22\n", "authors": ["374"]}
{"title": "Harmonizing IEC 61850 and CIM for connectivity of substation automation\n", "abstract": " A smart grid is an electrical power grid infrastructure for improving efficiency and reliability of power systems. CIM and IEC 61850 are major standards in the smart grid domain for modeling substations and their management. Due to heavy data exchanges between CIM and IEC 61850, the need for harmonizing the standards has emerged as a high priority issue to improve interoperability of involved systems in a smart grid. Among many aspects involved in the harmonization, connectivity, which is concerned with physical connections of equipment, forms the base. In this work, we present an approach for harmonizing the connectivity aspects of CIM and IEC 61850. In the approach, we analyze the models in the standards that are relevant to connectivity and define harmonization principles based upon the analysis. We then build a harmonized model by applying the principles and define transformation algorithms to\u00a0\u2026", "num_citations": "21\n", "authors": ["374"]}
{"title": "Required behavior of sequence diagrams: Semantics and refinement\n", "abstract": " Sequence diagrams are a widely used design notation for describing software behavior. Many reusable software artifacts such as design patterns and design aspects make use of sequence diagrams to describe interaction behavior. When a pattern or an aspect is reused in an application, it is important to ensure that the sequence diagrams for the application correctly refines the corresponding sequence diagrams for the pattern or aspect. However, reasoning about refinement of sequence diagrams has not been addressed adequately. In this paper, we focus on refinement of required behavior specified by a UML sequence diagram. A novel trace semantics is given that captures precisely required behavior specified by a sequence diagram and a refinement relation between sequence diagrams is formalized based on the semantics. Properties of the trace semantics and the refinement relation are studied.", "num_citations": "19\n", "authors": ["374"]}
{"title": "Software quality improvement via pattern-based model refactoring\n", "abstract": " This paper describes an approach to refactoring a software model using design patterns to improve design quality. In this approach, we define a design pattern as a set of three components, a problem specification characterizing problem models, a solution specification characterizing solution models and a transformation specification describing how a problem model should be transformed to a solution model. A problem model is checked for pattern applicability against the problem specification. If the pattern is applicable, the transformation specification is instantiated and applied to the model to incorporate the pattern's solution properties. The resulting model is a solution model conforming to the solution specification of the pattern. We demonstrate the approach using the visitor design pattern and a distributed monitoring system.", "num_citations": "19\n", "authors": ["374"]}
{"title": "Tool support for quality-driven development of software architectures\n", "abstract": " In this paper, we present a prototype tool that supports the systematic development of software architectures driven by quality requirements using architectural tactics. The tool allows one to configure architectural tactics based on quality requirements and compose the configured tactics to produce an initial architecture for the system. We demonstrate the tool for developing an architecture for a resource profiling system in the web environment and validate the results using a set of metrics.", "num_citations": "18\n", "authors": ["374"]}
{"title": "Toward interoperability of smart grids\n", "abstract": " Smart grid has emerged as the next generation of power grids for improved control and efficiency of power production, delivery, and consumption. Unlike the traditional power grid, a smart grid involves significant data communication across the grid. However, in the current practice, different areas of the power domain use different data semantic models, which has caused significant interoperability issues among systems and become a major barrier toward smart grids. Interoperability issues can also arise in communication. There has been growing interest in adopting publish-subscribe communication for improved quality of communication in smart grids. However, adopting publish-subscribe communication requires resolving potential interoperability issues with the client-server communication in the traditional power grid. In this article, we explore interoperability issues in smart grids and discuss how they can be\u00a0\u2026", "num_citations": "16\n", "authors": ["374"]}
{"title": "ReMo: a recommendation model for software process improvement\n", "abstract": " Software process assessment methods such as SCAMPI and ISO 15504-2 provide an assessment framework for evaluating the current practice of software development organizations. Strengths, weaknesses, and recommendations are core results of process assessment to be used as a basis for process improvement. While the existing models provide concrete methods for identifying strengths and weaknesses of process, they lack detailed approaches to building recommendations, which are crucial in developing strategic improvement plans. This makes it difficult for the assessment team to develop constructive recommendations, which has consequently negative impact on the quality of process improvement. To address this, we present a systematic method for developing recommendations based on a capability-based reference model (e.g., CMMI, SPICE). The presented method is evaluated using real\u00a0\u2026", "num_citations": "15\n", "authors": ["374"]}
{"title": "Describing access control models as design patterns using roles\n", "abstract": " An access control model describes at a high level of abstraction a mechanism for governing access to shared resources. In this paper, we view an access control model as a design pattern providing a general solution for ensuring confidentiality, integrity and availability of information resources. We present three widely used access control models, DAC, MAC and RBAC as design patterns using the POSA template. We use an extension of the UML to represent the structure and behavior of the patterns. The extension enables capturing variations of pattern instances. We also attempt to give more details on the problem domain of the patterns to help pattern selection.", "num_citations": "13\n", "authors": ["374"]}
{"title": "Required behavior of sequence diagrams: Semantics and conformance\n", "abstract": " Many reusable software artifacts such as design patterns and design aspects make use of UML sequence diagrams to describe interaction behaviors. When a pattern or an aspect is reused in an application, it is important to ensure that the sequence diagrams for the application conform to the corresponding sequence diagrams for the pattern or aspect. Reasoning about conformance relationship between sequence diagrams has not been addressed adequately in literature. In this article, we focus on required behaviors specified by a UML sequence diagram and provide a semantic-based formalization of conformance relationships between sequence diagrams. A novel trace semantics is first given that captures precisely required behaviors. A refinement relation between sequence diagrams is then defined based on the semantics. The refinement relation allows a sequence diagram to be refined by changing its\u00a0\u2026", "num_citations": "12\n", "authors": ["374"]}
{"title": "A pattern-based technique for developing UML models of access control systems\n", "abstract": " This paper describes a pattern-based technique for systematic development of UML models of secure systems using access control. Access control is viewed and specified as a design pattern. An access control pattern is applied to a functional UML model of an application to be secured using a composition algorithm. We demonstrate the technique using mandatory access control (MAC) and a model of a simple file system. We also discuss how the composed model can be evaluated for security assurance expected from the applied access control", "num_citations": "12\n", "authors": ["374"]}
{"title": "Design pattern based model transformation with tool support\n", "abstract": " A design pattern helps to improve the quality of a software system by providing a proven solution for recurring design problems. However, the abstract and informal nature of prevailing pattern descriptions makes it hard to use design patterns and hinders the development of tool support. In this paper, we present an approach that systematically applies a design pattern to a problem model and transforms it to a solution model with traceability, which helps to understand how a design pattern addresses its intended design problem. In the approach, a design pattern is defined as a pair of solution and problem specifications and a transformation specification. A problem model is checked for pattern applicability, and if applicable, the pattern is applied to the model using the pattern's transformation specification, which results in a solution model conforming to the solution specification of the pattern. This approach\u00a0\u2026", "num_citations": "11\n", "authors": ["374"]}
{"title": "A tactic-based approach to embodying non-functional requirements into software architectures\n", "abstract": " This paper presents an approach for embodying nonfunctional requirements (NFRs) into software architecture using architectural tactics. Architectural tactics are reusable architectural building blocks, providing general architectural solutions for commonly occurring issues related to quality attributes. In this approach, architectural tactics are represented as feature models, and their semantics is defined using the role-based metamodeling language (RBML) which is a UML-based pattern specification notation. Given a set of NFRs, architectural tactics are elected and composed. The composed tactic is then used to instantiate an initial architecture for the application where the NFRs are embodied. A stock trading system is used to demonstrate the approach.", "num_citations": "11\n", "authors": ["374"]}
{"title": "Path prediction method for effective sensor filtering in sensor registry system\n", "abstract": " The Internet of Things (IoT) has emerged and several issues have arisen in the area such as sensor registration and management, semantic interpretation and processing, and sensor searching and filtering in Wireless Sensor Networks (WSNs). Also, as the number of sensors in an IoT environment increases significantly, sensor filtering becomes more important. Many sensor filtering techniques have been researched. However most of them do not consider real-time searching and efficiency of mobile networks. In this paper, we suggest a path prediction approach for effective sensor filtering in Sensor Registry System (SRS). SRS is a sensor platform to register and manage sensor information for sensor filtering. We also propose a method for learning and predicting user paths based on the Collective Behavior Pattern. To improve prediction accuracy, we consider a time feature to measure weights and predict a path\u00a0\u2026", "num_citations": "10\n", "authors": ["374"]}
{"title": "Evaluating conformance of UML models to design patterns\n", "abstract": " In this paper, we describe an approach to checking conformance of UML class diagrams to design patterns. The technique provides a set of checks that evaluate syntactic and semantic pattern conformance. Syntactic pattern conformance is concerned with structural conformance of a class diagram to the structural properties of a pattern. Semantic pattern conformance is concerned with conformance of invariants and pre- and post-conditions in a class diagram to semantic pattern properties. A class diagram is said to conform a pattern when it acquires both syntactic and semantic conformance.", "num_citations": "10\n", "authors": ["374"]}
{"title": "A web service-based approach for developing self-adaptive systems\n", "abstract": " The current development on self-adaptive systems mainly focuses on autonomy and self-containment where decision-making solely depends on the local knowledge base within the system. This limits the evolution of the knowledge base for making more precise decisions. There have been some recent works using the cloud for the knowledge base. However, they suffer from the overhead caused by the communication with the cloud. In this work, we propose a hybrid approach for developing self-adaptive systems using both the local knowledge base in the vehicle and the global knowledge base provided via a web service. The global knowledge base is shared and evolves by multiple vehicles through the web service. We validate the approach using Gazebo, a 3D simulation environment for robotic systems. The results show 96% precision in identifying objects with a viable overhead introduced by the web service\u00a0\u2026", "num_citations": "9\n", "authors": ["374"]}
{"title": "Design pattern-based model transformation supported by QVT\n", "abstract": " A design pattern helps to improve the quality of a software system by providing a proven solution for recurring design problems. However, the abstract and informal nature of prevailing pattern descriptions makes it difficult to use design patterns. There have been significant works on formalizing design patterns which found a base for systematic application of a design pattern. Pattern-based model transformation has emerged as an approach for incorporating pattern properties into a design model. However, the existing work mostly focuses on the solution domain of a pattern while leaving out the problem domain, structural pattern aspects with little attention to behavioral aspects, and general methodologies without concrete implementations. In this work, we present an approach for transforming an application model using both the structural and behavioral properties of a design pattern defined in terms of the problem\u00a0\u2026", "num_citations": "9\n", "authors": ["374"]}
{"title": "A survey of deep learning in agriculture: Techniques and their applications\n", "abstract": " With promising results and enormous capability, deep learning technology has attracted more and more attention to both theoretical research and applications for a variety of image processing and computer vision tasks. In this paper, we investigate 32 research contributions that apply deep learning techniques to the agriculture domain. Different types of deep neural network architectures in agriculture are surveyed and the current state-of-the-art methods are summarized. This paper ends with a discussion of the advantages and disadvantages of deep learning and future research topics. The survey shows that deep learning-based research has superior performance in terms of accuracy, which is beyond the standard machine learning techniques nowadays.", "num_citations": "8\n", "authors": ["374"]}
{"title": "A feature-based modeling approach for building hybrid access control systems\n", "abstract": " Role-Based Access Control (RBAC) and Mandatory Access Control (MAC) are widely used access control models. They are often used together in domains where both data integrity and information flow are concerned. There is much work on combined use of RBAC and MAC policies at the kernel level, which focuses on enforcing hybrid policies at run-time. However, there is little work on techniques for developing hybrid systems of RBAC and MAC from a development perspective. In this work, we present a feature-based modeling approach for developing hybrid access control systems. In the approach, RBAC and MAC are designed in terms of features and features are configured based on requirements. Configured features are then composed to produce a design model that supports hybrid access control. The approach enables systematic development of hybrid systems of RBAC and MAC and reduces\u00a0\u2026", "num_citations": "8\n", "authors": ["374"]}
{"title": "A verifiable modeling approach to configurable role-based access control\n", "abstract": " Role-based access control (RBAC) is a popular access control model for enterprise systems due to its economic benefit and scalability. There are many RBAC features available, each providing a different feature. Not all features are needed for an RBAC system. Depending on the requirements, one should be able to configure RBAC by selecting only those features that are needed for the requirements. However, there have not been suitable methods that enable RBAC configuration at the feature level. This paper proposes an approach for systematic RBAC configuration using a combination of feature modeling and UML modeling. The approach describes feature modeling and design principles for specifying and verifying RBAC features and a composition method for building configured RBAC. We demonstrate the approach by building an RBAC configuration for a bank application.", "num_citations": "8\n", "authors": ["374"]}
{"title": "Generating UML models from domain patterns\n", "abstract": " The development of a family of applications in a domain can be greatly eased if patterns in the domain are systematically reused. Systematic use of such patterns can be achieved by tools that support the specification of patterns and their instantiation in a specific application context. In this paper, we present a prototype tool called RBML-Pattern Instantiator (RBML-PI) that generates application-specific UML class diagrams and sequence diagrams from a pattern specification described in the Role-Based Metamodeling Language (RBML), a pattern specification language defining a domain-specific sub-language of the UML. We give an overview of the RBML using the Visitor design pattern, and demonstrate the tool using an RBML specification for the CheckIn-CheckOut (CICO) domain pattern that specifies services to check in and check out items. We use the CICO pattern specification to generate an application\u00a0\u2026", "num_citations": "8\n", "authors": ["374"]}
{"title": "Building hybrid access control by configuring RBAC and MAC features\n", "abstract": " ContextRole-Based Access Control (RBAC) and Mandatory Access Control (MAC) are widely used access control models. They are often used together in domains where both data integrity and information flow are concerned. However, there is little work on techniques for building hybrid access control of RBAC and MAC.ObjectiveIn this work, we present a systematic approach for developing a hybrid access control model using feature modeling with the aim of reducing development complexity and error-proneness.MethodIn the approach, RBAC and MAC are defined in terms of features based on partial inheritance. Features are then configured for specific access control requirements of an application. Configured features are composed homogeneously and heterogeneously to produce a hybrid access model for the application. The resulting hybrid model is then instantiated in the context of the application to\u00a0\u2026", "num_citations": "7\n", "authors": ["374"]}
{"title": "Using DDS based on unified data model to improve interoperability of smart grids\n", "abstract": " The connectivity of power domains is a key factor for realizing a smart grid. Different power domains in smart grid (SG) involves various types of applications and devices each of which comes with its own requirements. In addition, different communication protocols and data models have been already proposed to address those requirements. Due to the differences in communication technologies, interoperability challenges have been raised in SG. Interoperability issues not only deteriorate the connectivity of different domains, but also compromise the potentials of data sharing in SG. The Data Distribution Service (DDS) has emerged as a possible solution since it supports different features such as transport configuration and dynamic discovery mechanism. In this paper, we describe how DDS can be used to address both data interoperability and protocol interoperability in SG. We first describe interoperability issues\u00a0\u2026", "num_citations": "6\n", "authors": ["374"]}
{"title": "Configuring DDS features for communicating components in smart grids\n", "abstract": " A key success factor for a smart grid lies on reliable data exchange between components across domains in the grid. However, a smart grid involves various types of devices and equipment having different quality concerns and computing capability, which requires a flexible communication platform that can accommodate heterogeneous devices. The Data Distribution Service (DDS) is a standard for data-centric communication based on a publish-subscribe protocol for distributed applications. It enables reliable data communication through various features such as quality-of-service (QoS) and dynamic discovery. In this paper, we present configuring DDS features to support different types of components in smart grids. First, we describe communicating components, requirements, and challenges in smart grids. Then, we describe how DDS features can be configured to a specific component. Based on the\u00a0\u2026", "num_citations": "6\n", "authors": ["374"]}
{"title": "Opinions on computing education in Korean K-12 system: higher education perspective\n", "abstract": " The need for computing education in the K-12 curriculum has grown globally. The Republic of Korea is not an exception. In response to the need, the Korean Ministry of Education has announced an outline for software-centric computing education in the K-12 system, which aims at enhancing the current computing education with software emphasis. In this paper, we review the outline from a higher education perspective and provide insights into its constructive improvement based on our experience in computer science education in higher education and a study of global initiatives on computing education. We also consider the social environment for computing education in Korea. In the proposed implementation, we first discuss goals for software-centric computing education and identify areas of focus. The identified areas are discussed in terms of topics to be covered and appropriate exposure of knowledge depth\u00a0\u2026", "num_citations": "6\n", "authors": ["374"]}
{"title": "Building sustainable software by preemptive architectural design using tactic-equipped patterns\n", "abstract": " Sustainability of software architectures has gained increasing attention to cope with factors causing architectural changes such as requirements changes, technological changes, and changes in business strategies and goals. However, there has not been much work on architectural sustainability. In this paper, we present a novel approach for addressing architectural sustainability with respect to non-functional requirements changes through preemptive architectural designs built upon the combined use of architectural patterns and architectural tactics. The approach presented in this paper provides a strategic solution for practitioners to building a quality attribute into a chosen architectural pattern to proactively deal with the requirements changes of quality attribute, which may arise after the construction phase.", "num_citations": "6\n", "authors": ["374"]}
{"title": "Modeling functional behaviors of DDS\n", "abstract": " Distributed real-time systems such as internet of things (IoT) systems and smart grid systems have been dramatically pervasive during the last several years. Many technologies have emerged accordingly to support their development. One of prominent technologies is Data Distribution Service (DDS) which is a publish-subscribe middleware standard that aims at improving the scalability and communication aspects in distributed and large-scale applications. DDS has been gaining increasing attentions due to its support for scalability and various quality of service (QoS) policies which are important for reliable communication. The DDS standard provides static and dynamic models of DDS entities. However, the dynamic models absent some important behaviors that are often assumed well understood, but have distinct semantics for which without their definitions, the dynamic models are left incomplete. Consequently\u00a0\u2026", "num_citations": "5\n", "authors": ["374"]}
{"title": "A semantic-based approach for detecting and decomposing god classes\n", "abstract": " Cohesion is a core design quality that has a great impact on posterior development and maintenance. By the nature of software, the cohesion of a system is diminished as the system evolves. God classes are code defects resulting from software evolution, having heterogeneous responsibilities highly coupled with other classes and often large in size, which makes it difficult to maintain the system. The existing work on identifying and decomposing God classes heavily relies on internal class information to identify God classes and responsibilities. However, in object-oriented systems, responsibilities should be analyzed with respect to not only internal class information, but also method interactions. In this paper, we present a novel approach for detecting God classes and decomposing their responsibilities based on the semantics of methods and method interactions. We evaluate the approach using JMeter v2.5.1 and the results are promising.", "num_citations": "5\n", "authors": ["374"]}
{"title": "Pattern-based transformation rules for developing interaction models of access control systems\n", "abstract": " This paper presents a set of transformation rules for transforming a non-secure interaction model to a secure interaction model using an access control pattern. The transformation rules resolve conflicts, uncertainties and type mismatches that may arise during pattern application. We demonstrate a case study using the Mandatory Access Control pattern and a defense messaging system in the military domain, and discuss about an analysis of the resulting model for pattern conformance.", "num_citations": "5\n", "authors": ["374"]}
{"title": "Describing access control patterns using roles\n", "abstract": " Access control patterns describe access control mechanisms at a high level of abstraction. An access control pattern provides a general solution to a class of access control problems for the confidentiality, integrity and availability of the information resources of software systems. While there has been much literature describing the general solution as to how these patterns enforce access control voluminously, there is little work that describes the patterns in a pattern template using appropriate notations for an easy and quick reference. In this paper, we present pattern descriptions of three commonly used access control patterns (DAC, MAC, RBAC) described in the template of pattern-oriented software architecture (POSA). We use an extension of the UML for representing the structure and behaviors of the patterns to capture variations of pattern realizations. We also attempt to give more details on the problem domain of the patterns to help developers choose an suitable pattern.", "num_citations": "5\n", "authors": ["374"]}
{"title": "A survey of the application of blockchain in multiple fields of financial services\n", "abstract": " The core value of finance is credit. It can be said that without credit, there can be no finance. The distributed structure of the blockchain and the low-cost trust-building mechanism based on mathematical algorithms provide a new solution and path for solving and optimizing related problems in the financial field. The blockchain technology is applied in the development of the financial industry through consensus mechanisms, smart contracts, and distributed networks. In this research, a comprehensive survey of the blockchain technology is proposed in the development of financial services including equity crowdfunding and credit investigations in inclusive finance, cross-border remittance, Internet financial payment, P2P lending, supply chains finance, and the application of blockchain in the field of anti-money laundering. This paper discusses the role of blockchain in solutions to different issues in the financial field. It also discusses the architectures in different financial service application scenarios from the perspective of the financial trust mechanism and the perspective of the technology and rule change of blockchain participation in financial innovation. Finally, the problems and challenges of blockchain in financial services are discussed, and corresponding solutions are proposed.", "num_citations": "4\n", "authors": ["374"]}
{"title": "Verification of Structural Pattern Conformance Using Logic Programming.\n", "abstract": " This paper formalizes UML class diagrams and structural patterns as mathematical objects and provides a precise notion of conformance of a structural model specified as a class diagram to a structural pattern. We also present a conformance verification method which represents a class diagram as a logic program and a structural pattern as a query. The conformance of the class diagram to the structural pattern is verified by computing all the answers to the query by the logic program and checking the satisfaction of realization multiplicity constraints imposed by the pattern.", "num_citations": "4\n", "authors": ["374"]}
{"title": "Decomposing class responsibilities using distance-based method similarity\n", "abstract": " Cohesion is a design quality that has a great impact on the posterior development and maintenance. As software evolves, the cohesion of the system becomes weaker due to the changes introduced during evolution. Over evolution, a single responsibility class may be unintentionally assigned other responsibilities, which makes the class less cohesive and more complex and consequently increases the complexity of the entire system. There has been much work on decomposing class responsibilities based on internal class relationships such as method-attribute referencing and internal method calls. However, object-oriented systems involve significant external class relationships carrying important behavioral semantics, which should be taken into account in identifying class responsibilities. In this paper, we present a novel approach for identifying and decomposing classes responsibilities based on\u00a0\u2026", "num_citations": "3\n", "authors": ["374"]}
{"title": "Adopting DDS to Smart Grids: Towards Reliable Data Communication\n", "abstract": " The rapid growth of technologies in smart grid (SG) enables reliable data communication. SG involves many sub-domains each of which involves various types of components and devices which require significant data communication in an efficient manner. Thus, a key success factor for SG lies in reliable data exchange between components and domains. Data Distribution Service (DDS) is a standard for data-centric communication based on a publish-subscribe protocol for distributed applications. DDS enables reliable data communication supported by various features such as quality-of-service (QoS). In this paper, we describe the potential of DDS for SG for reliable and efficient data communication. We first give an overview of DDS and discuss its benefits for SG. We then describe communication requirements and constraints in SG. Finally, we discuss how DDS can be tailored to SG with respect to the\u00a0\u2026", "num_citations": "3\n", "authors": ["374"]}
{"title": "Apparatus and method for recommending software process improvement\n", "abstract": " An apparatus and method for recommending software process improvement are disclosed. The method includes generating improvement packages from correlated findings by analyzing correlations between findings identified from different processes, refining the improvement packages by performing an additional correlation analysis on the improvement packages, and providing an action plan for process improvement by building recommendations from the refined improvement packages.", "num_citations": "3\n", "authors": ["374"]}
{"title": "ABAC-Based Security Model for DDS\n", "abstract": " DDS is a middleware standard for data-centric publish/subscribe communication in a large scale real-time environment. DDS provides a security model for secure data communication. A major service of the security model is authorization. The authorization is based on the contents of messages rather than the information about the participant which should be the subject for access control. In this paper, we present a novel approach for improved authorization of the DDS security model using ABAC. We first analyze the DDS security model and identify integration points for ABAC. Based on the analysis, we incorporate ABAC entities into the security model with ABAC behaviors defined across RTPS and DCPS. We implemented the model in XACML and evaluated by applying it to a patient monitoring system in the healthcare domain for its effectiveness, scalability, and efficiency in a controlled environment. The\u00a0\u2026", "num_citations": "2\n", "authors": ["374"]}
{"title": "Configurable DDS as Uniform Middleware for Data Communication in Smart Grids\n", "abstract": " Data Distribution Service (DDS) has emerged as a potential solution for data communication challenges in smart grids. DDS is designed to support quality communication for large scale real-time systems through a wide range of QoS policies. However, a smart grid involves various types of communication applications running on different computing environments. Some environments have limited computing resources such as small memory and low performance, which makes it difficult to accommodate DDS. In this paper, we present a feature-based approach for tailoring DDS to configure lightweight DDS by selecting only the necessary features for the application in consideration of the resource constraints of its running environment. This allows DDS to serve as a uniform communication middleware across the smart grid, which is critical for interoperability. We analyze DDS in terms of features and design them using Unified Modeling Language (UML) and Object Constraint Language (OCL) based on inheritance and overriding. We define a formal notion of feature composition to build DDS configurations. We implemented the approach in OpenDDS and demonstrate its application to different application environments. We also experimented the approach for the efficiency of configured DDS in terms of resource utilization. The results show that configured DDS is viable for efficient and quality data communication for applications that run on an environment with limited computing capability. View Full-Text", "num_citations": "2\n", "authors": ["374"]}
{"title": "Detecting no-sleep energy bugs using reference counted variables\n", "abstract": " Mobile devices have become pervasive in today's society. The range of their use has been constantly increasing, which requires more computing capability. As the computing capability of mobile devices grow, so does the need for effective power management. There has been some work on reducing the power consumption of mobile applications by detecting energy bugs. In this work, we address no-sleep energy bugs with respect to semaphore wakelocks in consideration of race conditions with synchronization using reaching definitions and parallel flow graphs. We demonstrate the approach through a case example.", "num_citations": "2\n", "authors": ["374"]}
{"title": "Class Modularization Using Indirect Relationships\n", "abstract": " Cohesion significantly impacts on posterior development and maintenance. A well-designed module should be coherent with a single responsibility and less propagative for changes to other modules. In object-oriented development, classes are often modularized based on their relationships to localize change impact. There has been much work on grouping classes using direct class interactions and similarity of lexical information of classes. However, there has been little attention to indirect class relationships which are significant in defining functional semantics in object-oriented systems. In this paper, we present an approach for grouping classes using both direct and indirect class relationships. In the approach, we define a set of metrics for measuring couplings based on indirect class relationships and use them to group classes with the aim of localizing the impact of changes. We evaluate the approach using\u00a0\u2026", "num_citations": "2\n", "authors": ["374"]}
{"title": "Adopting Attribute-Based Access Control to Data Distribution Service\n", "abstract": " The Internet of Things (IoT) is characterized by heterogeneous protocols and technologies which co-operate to provide various innovative services in various application domains. In the last few years, several protocols and approaches have been developed and proposed to support the connectivity, interoperability, and security in the IoT. The Data Distribution Service (DDS), which is a standard for data-centric publish/subscribe communication, is introduced to address interoperability in the IoT. DDS defines its own access control model that can be adapted to Attribute-Based Access Control (ABAC) for greater flexibility. In this work, we present a feasibility study on how Attribute-Based Access Control (ABAC) can be adopted to DDS.", "num_citations": "2\n", "authors": ["374"]}
{"title": "B-knn to improve the efficiency of kNN\n", "abstract": " The kNN algorithm typically relies on the exhaustive use of training datasets, which aggravates efficiency on large datasets. In this paper, we present the B-kNN algorithm to improve the efficiency of kNN using a two-fold preprocess scheme built upon the notion of minimum and maximum points and boundary subsets. For a given training dataset, B-kNN first identifies classes and for each class, it further identifies the minimum and maximum points (MMP) of the class. A given testing object is evaluated to the MMP of each class. If the object belongs to the MMP, the object is predicted belonging to the class. If not, a boundary subset (BS) is defined for each class. Then, BSs are fed into kNN for determining the class of the object. As BSs are significantly smaller in size than their classes, the efficiency of kNN improves. We present two case studies to evaluate B-kNN. The results show an average of 97% improvement in efficiency over kNN using the entire training dataset, while making little sacrifice of the accuracy compared to kNN.", "num_citations": "2\n", "authors": ["374"]}
{"title": "Measuring class cohesion based on iterative process using external class relationships\n", "abstract": " Class cohesion is a design quality that has a great impact on maintenance of object-oriented systems. There has been much work on measuring class cohesion based on internal class relationships only. However, object-oriented systems involve many external class relationships carrying functional semantics which should be also taken into account in measuring class cohesion. In this paper, we present a novel metric for measuring class cohesion based on an iterative process using both internal and external class relationships.", "num_citations": "2\n", "authors": ["374"]}
{"title": "Pattern-Based Model Transformation Using QVT\n", "abstract": " A design pattern addresses a recurring design problem by providing a proven solution for reuse in software development. However, due to the informal nature of prevailing pattern descriptions, it is difficult to reuse design patterns in practice. There has been much work on tool support for pattern reuse. However, the existing work focuses on only the solution domain of a pattern, leaving largely the problem domain unaddressed which is an important aspect in determining pattern applicability. Also, the existing work uses non-standardized techniques, which makes it difficult to adopt. In this work, we present a novel approach for applying design patterns using Query/View/Transformation (QVT), a de-facto standard for model transformation. In the approach, we make use of both the problem domain and solution domain of a design pattern for checking pattern applicability and verifying pattern conformance. The domains\u00a0\u2026", "num_citations": "2\n", "authors": ["374"]}
{"title": "An interaction-driven approach to identifying functional behaviors of service robot systems\n", "abstract": " The service robot domain has gained increasing attention for its significant impact on human society. By its nature, the service robot domain is component-based and distributed and comprising components are usually developed by third parties as black-box. In general, very limited information is available even in execution logs. This makes it difficult for the system integrator to understand and verify the functional behaviors of the system. The existing work on deriving functional behaviors focuses on sequential systems and assumes certain level of information available, which is not suitable for the service robot domain. In this work, we present an interaction-based approach for systematically identifying functional behaviors of a service robot system. This approach allows not only identifying functional behaviors, but also their dependencies as invariants which are useful for verifying system behaviors. We demonstrate\u00a0\u2026", "num_citations": "2\n", "authors": ["374"]}
{"title": "A three-phase decision making approach for self-adaptive systems using web services\n", "abstract": " A self-adaptive system adapts itself to changes in a dynamic environment. The core in self-adaptive systems is making an adaptation decision. The current practice focuses on a single layer of decision making using either a local knowledge base or a shared knowledge base shared by multiple units through a network. While the use of a local knowledge base is efficient, it suffers from its limited maturity. A shared knowledge base can address the maturity problem, but it is inefficient in adaptation due to communication overheads. In this work, we present a three-phase decision making approach for self-adaptive systems to improve precision while being competitive for efficiency. The approach consists of three phases for making a decision. The first phase uses the local knowledge base of the self-adaptive unit to identify an object. If the object cannot be identified locally, the unit sends a request to shared knowledge\u00a0\u2026", "num_citations": "1\n", "authors": ["374"]}
{"title": "Comparative Assessment of Static Analysis Tools for Software Vulnerability.\n", "abstract": " Software security is a continuous and growing field within software development, maintenance, and operation. Vulnerabilities in software provide significant risk to the operation of software. Software tools have been developed over time to assist in identification and rectification of software vulnerabilities through static analysis of source code. Static analysis tools provide a software development team a means to rapidly review their project for the vulnerabilities that exist, but unknown to the team. In this paper, we present comparative assessment of three commonly used static analysis tools for software vulnerability using open source software for the purpose to aid software developers in choosing a suitable tool for their needs.", "num_citations": "1\n", "authors": ["374"]}
{"title": "Special issue on software reuse\n", "abstract": " Reuse is a common practice in software development, and it is critical for both cost savings and quality assurance. When properly done, reuse of artifacts (eg, design patterns and source code) often improves productivity, in turn leading to cost savings. More importantly software reuse improves the quality of software, because of the reuse of quality code components, and makes it possible to leverage the collective wisdom of numerous seasoned software engineers who faced similar challenges and found optimal solutions widely accepted by the software developer community. Types of reusable software artifacts vary ranging from those found in the requirements phase to the design phase, and to the implementation and testing phases. They include domain requirements, architectural and design patterns, Commercial Off-The-Shelf, code, reusable tests, and so on. The compatibility of different types of reusable\u00a0\u2026", "num_citations": "1\n", "authors": ["374"]}
{"title": "Method for metamodeling unification\n", "abstract": " The present invention relates to a method for metamodeling unification, in particular to a method for metamodeling unification to guarantee interoperability between an UML model of IEC 61850 and an UML model of IEC 61970.", "num_citations": "1\n", "authors": ["374"]}
{"title": "Identifying correlations of findings for building process improvement packages using graph clustering\n", "abstract": " Software process improvement (SPI) begins with process assessment based on a process reference model such as CMMI. Process improvement action items in SPI are determined according to the identified strengths and weaknesses of the current practice. Therefore, given that a list of assessment findings has been identified, it is important to analyze correlations of findings and identify relevant findings for building improvement items. However, correlation analysis requires expertise and considerable efforts, which makes it difficult for practitioners to perform it in process improvement projects. In this work, we present a CMMI\u2010based method for identifying correlations of findings and building improvement packages using graph clustering techniques. We evaluate the method using industrial data. Copyright \u00a9 2015 John Wiley & Sons, Ltd.", "num_citations": "1\n", "authors": ["374"]}
{"title": "Pattern-based transformation of sequence diagrams using QVT\n", "abstract": " Design patterns provide a proven solution for a recurring design problem. There has been much work on tool support for pattern reuse. However, the existing work focuses mostly on the static structure of design patterns, leaving behavioral aspects largely manual. In this work, we present an approach for transforming application behaviors based on behaviors of design patterns using Query/View/Transformation (QVT). In the approach, we specify a design pattern in terms of a problem specification, a solution specification, and a transformation specification at the metamodel level. A problem model that exhibits the behaviors of the problem specification is transformed to a solution model with the behaviors of the solution specification. We use Role-Based Metamodeling Language (RBML) for specifying problem and solution specifications and QVT for describing transformation rules. We demonstrate the approach using\u00a0\u2026", "num_citations": "1\n", "authors": ["374"]}
{"title": "Recommending process improvement package using direct and indirect relationships of activities\n", "abstract": " Software process improvement (SPI) has been widely practiced in various domains. SPI uses a process reference model (eg, CMMI) for planning improvement actions by identifying weaknesses and strengths of the current exercise. Identified findings are analyzed for their relationships to increase the synergy of improvement actions. However, the current practice is monotonic focusing on the identification of weaknesses and strengths. In this work, we present a CMMI-based recommendation method for analyzing correlations of assessment findings. In the model, we define a process correlation model capturing relationships of practices in CMMI. The model is then used for inferring relationships of given findings where findings are viewed as instances of CMMI practices. We take into account both direct and indirect relationships and analyze the precision and recall of the correlation model by different levels of\u00a0\u2026", "num_citations": "1\n", "authors": ["374"]}
{"title": "Process correlation analysis model for process improvement identification\n", "abstract": " Software process improvement aims at improving the development process of software systems. It is initiated by process assessment identifying strengths and weaknesses and based on the findings, improvement plans are developed. In general, a process reference model (e.g., CMMI) is used throughout the process of software process improvement as the base. CMMI defines a set of process areas involved in software development and what to be carried out in process areas in terms of goals and practices. Process areas and their elements (goals and practices) are often correlated due to the iterative nature of software development process. However, in the current practice, correlations of process elements are often overlooked in the development of an improvement plan, which diminishes the efficiency of the plan. This is mainly attributed to significant efforts and the lack of required expertise. In this paper, we present a process correlation analysis model that helps identify correlations of process elements from the results of process assessment. This model is defined based on CMMI and empirical data of improvement practices. We evaluate the model using industrial data.", "num_citations": "1\n", "authors": ["374"]}
{"title": "GARDIAN: A tool for validating rule-based modeling methods\n", "abstract": " A software modeling method provides concrete modeling guidelines. Use of the guidelines helps designers build rigorous software in a systematic manner. However, the observation of modeling guidelines heavily relies on individual developer. This paper presents a rule syntax and its tool support for describing and verifying the modeling guidelines of UML-based modeling methods. The rule syntax enables one to specify informative messages in a conditional structure that help understand violations of modeling guidelines. We also present tool support that implements the rule syntax to validate modeling guidelines for UML models. We use COMET, a design method for concurrent systems, to demonstrate the approach. We validate the guidelines of COMET for UML models of a robot navigation system and a robot patrol system.", "num_citations": "1\n", "authors": ["374"]}