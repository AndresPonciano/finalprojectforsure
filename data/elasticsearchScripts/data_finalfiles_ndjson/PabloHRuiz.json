{"title": "Formalizing the software process in small companies\n", "abstract": " Counting on a formally defined software process brings a series of benefits such as being able to improve project management, reusing the knowledge acquired about software development, comparing software work products across projects on a concrete basis, and making easier and less error prone the evolution of the software process itself, among others. However, building a software process is never easy, let alone formalizing it. In this paper we propose a meta-process, ie, a process for formalizing the software process using the EPF platform. We show how the meta-process was applied in a medium size Chilean software company and we analyze its advantages and drawbacks.", "num_citations": "7\n", "authors": ["405"]}
{"title": "Software tool to support the improvement of the collaborative learning process\n", "abstract": " Computer supported collaborative learning brings together the same characteristics and qualities of traditional learning, and includes benefits at the level of interaction and collective learning, as well as the inclusion of a motivating element associated with technology, which allows monitoring more detailed, incorporate an activities record, guide, evaluate and observe the process that is executing in a collaborative activity. However, one of its main problems are caused by a lack of software tools to guarantee effective collaboration, to support the monitoring and evaluation of the process in each of its phases (Pre-Process, Process and Post-Process), and provide a compendium of mechanisms that allow the execution of a collaborative activity and increase collaboration among participants. In this paper, the MEPAC (Monitoreo y Evaluaci\u00f3n del Proceso de Aprendizaje Colaborativo) software tool is presented\u00a0\u2026", "num_citations": "6\n", "authors": ["405"]}
{"title": "A software process line based on the Unified Process\n", "abstract": " Unified Process - UP, is a prescriptive framework widely used by the software industry. Since the UP was developed under the assumption of a universal applicability, its definition is not match to every organization or project. Several proposals have been outlined to adapt this framework to the specific needs of organizations and projects. Although these adaptations have been applied in contexts, industry and research, they do not include systematic mechanisms and so, they are difficult to replicate. This paper applies a general strategy, but concrete to facilitate systematic adaptation of the Unified Process using a software process line approach. In order to evaluate this proposal, the UP implementation discipline has been modeled as a software process line using CASPER meta-process providing evidences about the advantages and disadvantages of approach.", "num_citations": "6\n", "authors": ["405"]}
{"title": "A comparative study for scoping a software process line\n", "abstract": " Software process lines (SPrL) is an approach for facilitating the adaptation and evolution of a set of related software processes within a software organization. In order to correctly establish the processes and process assets to be reused as well as to typify the situations under which the processes will be used (the process demands) an implicit or explicit scoping activity that is normally performed. There are some methods oriented to support this activity. In this article we explore the definition of the scope of a SPrL of a software company focused on the software testing service through two methods: SCOPE and CASPER Scoping. The main goal of this work is to explore, through an empirical study, the advantages and disadvantages of scope determination in an industrial context by using two methods reported in the literature: SCOPE and CASPER. The developed study allows us to evidence some limitations of these\u00a0\u2026", "num_citations": "3\n", "authors": ["405"]}
{"title": "Validating the shared understanding construction in computer supported collaborative work in a problem-solving activity\n", "abstract": " Computer-Supported Collaborative Work is a multidisciplinary research field and is the core of our society, forged with difficulties and benefits, however, one of its main problems is that the collaboration success is difficult to achieve and probably impossible to guarantee or even predict. Given that collaboration is a coordinated, synchronized activity and it is the result of a continuous attempt to construct and maintain a shared conception of a problem, it can be inferred that for collaboration to occur, there must be a shared understanding of the problem that it is being resolved. For this reason, the shared understanding of the task is an important determinant of the performance of groups. This is why this paper presents an initial proposal of a process for the shared understanding construction in a problem-solving activity, specifically, it shows the validation of the feasibility and usefulness of the process in this\u00a0\u2026", "num_citations": "2\n", "authors": ["405"]}
{"title": "Human-Computer Interaction: 5th Iberoamerican Workshop, HCI-Collab 2019, Puebla, Mexico, June 19\u201321, 2019, Revised Selected Papers\n", "abstract": " This book constitutes the proceedings of the 5th Iberoamerican Workshop on Human-Computer Interaction, HCI-Collab 2019, held in Puebla, Mexico, in June 2019. The 31 full papers presented in this volume were carefully reviewed and selected from 55 submissions. The papers describe models, design patterns, implementations, evaluations of existing applications, and systemic reviews; all of which are very important aspects within HCI.", "num_citations": "2\n", "authors": ["405"]}
{"title": "Towards a Process Definition for the Shared Understanding Construction in Computer-Supported Collaborative Work\n", "abstract": " In Computer-Supported Collaborative Work - CSCW, there are factors that affect the collaboration achievement, as for example, the difficulty of having all group members participate effectively in the development of an idea, for this, it is necessary to go beyond having the activity and the technological tools. A deeper approach must be taken through some external factors\u2019 analysis, among them, cognitive processes. One of these cognitive processes is shared understanding, which refers to the degree to which group members concur on a topic, its interpretation, when they share a perspective (mutual agreement), or can act in a coordinated manner. This is why, this paper presents a process proposal initial for the shared understanding construction in a problem-solving activity, where the aim is to achieve, before starting the executing process of the task, way a shared understanding of the objective, that is, the\u00a0\u2026", "num_citations": "1\n", "authors": ["405"]}
{"title": "Structure of a Guide for Usability Evaluation in Virtual Learning Environments\n", "abstract": " Usability is an important factor in determining software quality, therefore, its evaluation is very important for the design process of usable software systems, as well as for the development of tests about its final performance to suggest improvements in different stages of the development life cycle. The usability evaluation of an interactive system is an important step in the User-Centered Design since it allows obtaining the usability characteristics of the system and the measurement in which usability principles are being applied, besides that it implies several activities that depend on the evaluation method to be implemented. To make this evaluation there are different methods, which present methodological defects and whose application depends on many variables, which makes it unreliable its use and it more complicated choosing methods to evaluate a Virtual Learning Environment (VLE). For this reason, this\u00a0\u2026", "num_citations": "1\n", "authors": ["405"]}
{"title": "A canonical software process family based on the Unified Process\n", "abstract": " The Unified Process (UP) is a processes framework widely known and used by the software industry and academic community. UP was developed under the conception of a universal application, but even a single process is not appropriate to address all development projects since optimal process depends on the particularities of each project or organization. Frequently, many process components need to be adapted to the organization or project needs, a complex task because the experience and knowledge required. Perform adaptation in an inappropriate way is prone to error due to the difficulties for taking tailoring decisions. The paper goal is proposing a canonical software processes family based on the Unified Process to support software process tailoring. Our methodology was based on the meta-process CASPER to build a software process family and we use the Case Study method as a strategy for validating the canonical process family empirically. As a result, we show a canonical software processes family, which will serve as a platform for determining a process family based on Unified process in a small software organization. This canonical family has the advantage that uses a tailoring mechanism following a transformation strategy that encapsulates tailoring decisions in order to systematize this activity. In this work, we show the initial results in the applicability of a canonical software process family as base in the building the software process families based on UP in the small companies context, and also we conclude that the UP is a process framework with spread spectrum, which limited its formulation like a general software\u00a0\u2026", "num_citations": "1\n", "authors": ["405"]}
{"title": "Framework Based on Software Process Lines for Tailoring of Software Process Models\n", "abstract": " Software process are recognized way for guide the software development, however counting with a process does not necessary means that it fits to all specific situations. Consequently, the software processes normally require be tailored to each specific context to achieve the rightest adapted process. However, software process tailoring is a challenge research area because it a knowledge intensive activity: it requires experience, knowledge and it is time consuming. In recent years have emerged different approaches for tailoring the software process. One of these approaches are the Software Process Lines-SPrL, which have achieve some theoretical milestones. Nevertheless, to the best of our knowledge, the approach did not report enough evidence about the real industrial applicability. One of the major causes are the sophisticated and complex solutions that have been proposed by the literature, reducing significantly its use. This work proposes a simplified approach based on SPrL for tailoring software process models in order to decrease the complexity. As initial result of this work we identified some factors determining the complexity in SPrL: the complexity for establishing the scoping, deal with variability, and encapsulate tailoring knowledge in SPrL approach. Based on these complexity factors this doctoral proposal sketches a practical solution.", "num_citations": "1\n", "authors": ["405"]}
{"title": "Experiencias de Desarrollo de L\u00edneas de Productos Software en el Contexto de un Curso de Ingenier\u00eda de Software.\n", "abstract": " Las l\u00edneas de productos de Software\u2013SPL, se han convertido en una estrategia valiosa para incrementar la competitividad de las empresas productoras de software que trabajan en dominios espec\u00edficos. Sin embargo, la aplicaci\u00f3n de dicho enfoque requiere grandes competencias t\u00e9cnicas, conocimientos del dominio, recursos y tiempo. Estos factores se tornan cr\u00edticos cuando la entidad que desea adoptar este enfoque es peque\u00f1a y sus recursos son limitados. En este art\u00edculo se presenta un estudio de caso en el que se aplicaron y evaluaron un conjunto de pr\u00e1cticas recomendadas por dos de los patrones definidos en el framework propuesto por el SEI, en un proyecto de desarrollo en el contexto de una peque\u00f1a entidad dentro de un curso de Ingenier\u00eda de Software. Como principal resultado se identific\u00f3 un conjunto de pr\u00e1cticas que por su facilidad y utilidad pueden ser incorporadas en el proceso de desarrollo SPL en el contexto de peque\u00f1as entidades de software.", "num_citations": "1\n", "authors": ["405"]}