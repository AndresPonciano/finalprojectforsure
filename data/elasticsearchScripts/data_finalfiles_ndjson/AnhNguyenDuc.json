{"title": "The impact of global dispersion on coordination, team performance and software quality\u2013A systematic literature review\n", "abstract": " ContextGlobal software development (GSD) contains different context setting dimensions, which are essential for effective teamwork and success of projects. Although considerable research effort has been made in this area, as yet, no agreement has been reached about the impact of these dispersion dimensions on team coordination and project outcomes.ObjectiveThis paper summarizes empirical evidence on the impact of global dispersion dimensions on coordination, team performance and project outcomes.MethodWe performed a systematic literature review of 46 publications from 25 journals and 19 conference and workshop proceedings, which were published between 2001 and 2013. Thematic analysis was used to identify global dimensions and their measures. Vote counting was used to decide on the impact trends of dispersion dimensions on team performance and software quality.ResultsGlobal\u00a0\u2026", "num_citations": "132\n", "authors": ["750"]}
{"title": "Minimum viable product or multiple facet product? The role of MVP in software startups\n", "abstract": " Minimum viable product (MVP) is the main focus of both business and product development activities in software startups. We empirically explored five early stage software startups to understand how MVP are used in early stages. Data was collected from interviews, observation and documents. We looked at the MVP usage from two angles, software prototyping and boundary spanning theory. We found that roles of MVPs in startups were not fully aware by entrepreneurs. Besides supporting validated learning, MVPs are used to facilitate product design, to bridge communication gaps and to facilitate cost-effective product development activities. Entrepreneurs should consider a systematic approach to fully explore the value of MVP, as a multiple facet product (MFP). The work also implies several research directions about prototyping practices and patterns in software startups.", "num_citations": "104\n", "authors": ["750"]}
{"title": "\u201cFailures\u201d to be celebrated: an analysis of major pivots of software startups\n", "abstract": " In the context of software startups, project failure is embraced actively and considered crucial to obtain validated learning that can lead to pivots. A pivot is the strategic change of a business concept, product or the different elements of a business model. A better understanding is needed on different types of pivots and different factors that lead to failures and trigger pivots, for software entrepreneurial teams to make better decisions under chaotic and unpredictable environment. Due to the nascent nature of the topic, the existing research and knowledge on the pivots of software startups are very limited. In this study, we aimed at identifying the major types of pivots that software startups make during their startup processes, and highlighting the factors that fail software projects and trigger pivots. To achieve this, we conducted a case survey study based on the secondary data of the major pivots happened in 49\u00a0\u2026", "num_citations": "97\n", "authors": ["750"]}
{"title": "Software startup engineering: A systematic mapping study\n", "abstract": " Software startups have long been a significant driver in economic growth and innovation. The on-going failure of the major number of startups calls for a better understanding of state-of-the-practice of startup activities. Objective With a focus on engineering perspective, this study aims at identifying the change in focus of research area and thematic concepts operating startup research.A systematic mapping study on 74 primary papers (in which 27 papers are newly selected) from 1994 to 2017 was conducted with a comparison with findings from previous mapping studies. A classification schema was developed, and the primary studies were ranked according to their rigour.We discovered that most research has been conducted within the SWEBOK knowledge areas software engineering process, management, construction, design, and requirements, with the shift of focus towards process and management areas. We\u00a0\u2026", "num_citations": "87\n", "authors": ["750"]}
{"title": "Hunter-gatherer cycle: a conceptual model of the evolution of software startups\n", "abstract": " Software startups are increasingly important in generating innovative products and services that widely impact global economy. However, there is an insufficient research support for their innovation and engineering activities, from both theoretical and empirical perspectives. This study aims at proposing a conceptual model to understand how these activities occur and evolve in software startups. The model is constructed using a complexity theory and system design thinking. The model usage is illustrated by describing three software startup stories. The results show that our model can capture innovation generation activities and the non-linear evolution of engineering activities in software startups, which is not presentable in current software life cycle models.", "num_citations": "52\n", "authors": ["750"]}
{"title": "Software engineering process models for mobile app development: A systematic literature review\n", "abstract": " Context: An effective development model can help improve competitive advantage and shorten release cycles, which is vital in the fast paced environment of mobile app development.Objective: The aim with this paper is to provide an extensive review of existing mobile app development models.Method: The review is done by following a systematic literature review process. Also presented is an assessment of the usefulness and relevance to industry of the models based on a rigor and relevance framework.Results: 20 primary studies were identified, each with distinct models. Agile methods or state-based principles are commonly adopted across the models. Relatively little effort focuses on deployment, maintenance, project evaluation activities.Conclusion: The review reveals that the contexts in which the identified models are intended to be used vary. This benefits practitioners as they are able to select a model that\u00a0\u2026", "num_citations": "51\n", "authors": ["750"]}
{"title": "Cheating in e-exams and paper exams: the perceptions of engineering students and teachers in Norway\n", "abstract": " A concern that has been raised with the transition from pen and paper examinations to electronic examinations is whether this will make cheating easier. This article investigates how teachers and students perceive the differences in ease of cheating during three types of written examination: paper exams, bring your own device e-exams and e-exams using university-owned devices. It also investigates perceptions about the effectiveness of some typical countermeasures towards cheating across these examination types. A mixed-method approach was used, combining questionnaires and interviews with students and teachers in the authors\u2019 own university. A total of 212 students and 162 teachers participated in the questionnaire survey, and then, a more limited number were interviewed to get a deeper understanding of the results. Six-different cheating practices were considered \u2013 impersonation, forbidden aids\u00a0\u2026", "num_citations": "48\n", "authors": ["750"]}
{"title": "Towards an early stage software startups evolution model\n", "abstract": " Startup process is a series of experiments before reaching a successful product. However, it is often difficult for startup founders to learn from their own experiences as well as from other startups. In order to capture the evolution of product and customer, we developed a theoretical model for early stage software startups. The model was adopted to describe five European software startups. Data was collected by interviews and documents. The model revealed the co-evolution patterns of product and customer knowledge. In addition, it discovers a common startup patterns among our cases, such as prototype-centric development and scale-up Agile. Last but not least, the model highlights signification pivots and possible relationship among them.", "num_citations": "39\n", "authors": ["750"]}
{"title": "What influences the speed of prototyping? An empirical investigation of twenty software startups\n", "abstract": " It is essential for startups to quickly experiment business ideas by building tangible prototypes and collecting user feedback on them. As proto\u2010typing is an inevitable part of learning for early stage software startups, how fast startups can learn depends on how fast they can prototype. Despite of the impor\u2010tance, there is a lack of research about prototyping in software startups. In this study, we aimed at understanding what are factors influencing different types of prototyping activities. We conducted a multiple case study on twenty European software startups. The results are two folds; firstly we propose a prototype-centric learning model in early stage software startups. Secondly, we identify factors occur as barriers but also facilitators for prototyping in early stage software startups. The factors are grouped into (1) artifacts,(2) team competence,(3) collaboration,(4) customer and (5) process dimensions. To speed up a startup\u2019s progress at the early stage, it is important to incorporate the learning objective into a well-defined collaborative approach of prototyping.", "num_citations": "37\n", "authors": ["750"]}
{"title": "A systematic mapping study on requirements engineering in software ecosystems\n", "abstract": " Software ecosystems (SECOs) and open innovation processes have been claimed as a way forward for the software industry. A proper understanding of requirements is as important for SECOs as for more traditional ones. This article presents a mapping study on the issues of RE and quality aspects in SECOs. Our findings indicate that among the various phases or subtasks of RE, most of the SECO specific research has been accomplished on elicitation, analysis, and modeling. On the other hand, requirement selection, prioritization, verification, and traceability has attracted few published studies. Among the various quality attributes, most of the SECOs research has been performed on security, performance and testability. On the other hand, reliability, safety, maintainability, transparency, usability attracted few published studies. The article provides a review of the academic literature about SECO-related RE\u00a0\u2026", "num_citations": "33\n", "authors": ["750"]}
{"title": "How do software startups pivot? empirical results from a multiple case study\n", "abstract": " In order to handle intense time pressure and survive in dynamic market, software startups have to make crucial decisions constantly on whether to change directions or stay on chosen courses, or in the terms of Lean Startup, to pivot or to persevere. The existing research and knowledge on software startup pivots are very limited. In this study, we focused on understanding the pivoting processes of software startups, and identified the triggering factors and pivot types. To achieve this, we employed a multiple case study approach, and analyzed the data obtained from four software startups. The initial findings show that different software startups make different types of pivots related to business and technology during their product development life cycle. The pivots are triggered by various factors including negative customer feedback.", "num_citations": "31\n", "authors": ["750"]}
{"title": "Dispersion, coordination and performance in global software teams: A systematic review\n", "abstract": " Effective team coordination is crucial for successful global software projects. Although considerable research effort has been made in this area, no agreement has been reached on the influence of dispersion on team coordination and performance. The objective of this paper is to summarize the evidence on the relationship among context dispersion, team coordination and performance in global software projects. We have performed a Systematic literature review (SLR) to collect relevant studies and a thematic analysis to synthesize the extracted data. We found 28 primary studies reporting the impact of five dispersion dimensions on team performance. Previously, only two primary studies considered and distinguished all of these dispersion dimensions in studying dispersed team performance. The dispersion dimensions affect team outcomes indirectly through influencing organic and mechanistic coordination\u00a0\u2026", "num_citations": "31\n", "authors": ["750"]}
{"title": "Development of a Real-Time, Simple and High-Accuracy Fall Detection System for Elderly Using 3-DOF Accelerometers\n", "abstract": " Falls represent a major problem for the elderly people aged 60 or above. There are many monitoring systems which are currently available to detect the fall. However, there is a great need to propose a system which is of optimal effectiveness. In this paper, we propose to develop a low-cost fall detection system to precisely detect an event when an elderly person accidentally falls. The fall detection algorithm compares the acceleration with lower fall threshold and upper fall threshold values to accurately detect a fall event. The post-fall recognition module is the combination of posture recognition and vertical velocity estimation that has been added to our proposed method to enhance the performance and accuracy. In case of a fall, our device will transmit the location information to the contacts instantly via SMS and voice call. A smartphone application will ensure that the notifications are delivered to the\u00a0\u2026", "num_citations": "30\n", "authors": ["750"]}
{"title": "Statistical Learning of API Fully Qualified Names in Code Snippets of Online Forums\n", "abstract": " Software developers often make use of the online forums such as StackOverflow to learn how to use software libraries and their APIs. However, the code snippets in such a forum often contain undeclared, ambiguous, or largely unqualified external references. Such declaration ambiguity and external reference ambiguity present challenges for developers in learning to correctly use the APIs. In this paper, we propose StatType, a statistical approach to resolve the fully qualified names (FQNs) for the API elements in such code snippets. Unlike existing approaches that are based on heuristics, StatType has two well-integrated factors. We first learn from a large training code corpus the FQNs that often co-occur. Then, to derive the FQN for an API name in a code snippet, we use that knowledge and leverage the context consisting of neighboring API names. To realize those factors, we treat the problem as statistical\u00a0\u2026", "num_citations": "29\n", "authors": ["750"]}
{"title": "Forking and coordination in multi-platform development: a case study\n", "abstract": " [Context] With the proliferation of desktop and mobile platforms the development and maintenance of identical or similar applications on multiple platforms is urgently needed.[Goal] We study a software product deployed to more than 25 software/hardware combinations over 10 years to understand multi-platform development practices.[Method] We use semi structured interviews, project wikis, VCSs and issue tracking systems to understand and quantify these practices.[Results] We find the projects using MR cloning, MR review meeting, cross platform coordinator's role as three primary means of coordination. We find that forking code temporarily relieves the coordination needs and is driven by divergent schedule, market needs, and organizational policy. Based on our qualitative findings we propose quantitative measures of coordination, redundant work, and parallel development.[Conclusions] A model of\u00a0\u2026", "num_citations": "29\n", "authors": ["750"]}
{"title": "Security challenges in IoT development: a software engineering perspective\n", "abstract": " The rapid growth of Internet-of-things (IoT) software applications has driven both practitioners and researchers' attention to methodological approaches for secure IoT development. Security issues for IoT is special in the way that they include not only software, but also hardware and network concerns. With the aim at proposing a methodological approach for secure IoT application development, we investigated what are security challenges in the context of IoT development. We reviewed literature and investigated two industry cases. The preliminary finding results in a list of 17 security challenges with regards to technical, organizational and methodological perspectives. Cross-case comparison provides initial explanation about the less emphasis on methodological and organizational security concerns in our cases.", "num_citations": "28\n", "authors": ["750"]}
{"title": "Achieving agility and quality in product development-an empirical study of hardware startups\n", "abstract": " Context: Startups aim at scaling their business, often by developing innovative products with limited human and financial resources. The development of software products in the startup context is known as opportunistic, agility-driven, and with high tolerance for technical debt. The special context of hardware startups calls for a better understanding of state-of-the-practice of hardware startups\u2019 activities. Objective: This study aimed to identify whether and how startups can achieve product quality while maintaining focus on agility. Method: We conducted an exploratory study with 13 hardware startups, collecting data through semi-structured interviews and analysis of documentation. We proposed an integrative model of agility and quality in hardware startups. Results: Agility in hardware startups is complex and not achieved through adoption of fast-paced development practices alone. Hardware startups follow a quality\u00a0\u2026", "num_citations": "25\n", "authors": ["750"]}
{"title": "Impact of stakeholder type and collaboration on issue resolution time in oss projects\n", "abstract": " Initialized by a collective contribution of volunteer developers, Open source software (OSS) attracts an increasing involvement of commercial firms. Many OSS projects are composed of a mix group of firm-paid and volunteer developers, with different motivations, collaboration practices and working styles. As OSS development consists of collaborative works in nature, it is important to know whether these differences have an impact on collaboration between difference types of stakeholders, which lead to an influence in the project outcomes. In this paper, we empirically investigate the firm-paid participation in resolving OSS evolution issues, the stakeholder collaboration and its impact on OSS issue resolution time. The results suggest that though a firm-paid assigned developer resolves much more issues than a volunteer developer does, there is no difference in issue resolution time between them. Besides\u00a0\u2026", "num_citations": "25\n", "authors": ["750"]}
{"title": "Exploring the intersection between software industry and Software Engineering education-A systematic mapping of Software Engineering Trends\n", "abstract": " Context:Software has become ubiquitous in every corner of modern societies. During the last five decades, software engineering has also changed significantly to advance the development of various types and scales of software products. In this context, Software Engineering Education plays an important role in keeping students updated with software technologies, processes, and practices that are popular in industries.Objective:We investigate from literature the extent Software Engineering Education addresses major Software Engineering Trends in the academic setting.Method:We conducted a systematic mapping study about teaching major Software Engineering Trends in project courses. We classified 126 papers based on their investigated Software Engineering Trends, specifically Software Engineering processes and practices, teaching approaches, and the evolution of Software Engineering Trends over\u00a0\u2026", "num_citations": "21\n", "authors": ["750"]}
{"title": "Empirical validation of human factors in predicting issue lead time in open source projects\n", "abstract": " [Context] Software developers often spend a significant portion of their resources resolving submitted evolution issue reports. Classification or prediction of issue lead time is useful for prioritizing evolution issues and supporting human resources allocation in software maintenance. However, the predictability of issue lead time is still a research gap that calls for more empirical investigation.[Aim] In this paper, we empirically assess different types of issue lead time prediction models using human factor measures collected from issue tracking systems.[Method] We conduct an empirical investigation of three active open source projects. A machine learning based classification and statistical univariate and multivariate analyses are performed.[Results] The accuracy of classification models in ten-fold cross-validation varies from 75.56% to 91%. The R 2 value of linear multivariate regression models ranges from 0.29 to 0\u00a0\u2026", "num_citations": "21\n", "authors": ["750"]}
{"title": "From MVPs to pivots: a hypothesis-driven journey of two software startups\n", "abstract": " Software startups have emerged as an interesting multiper-spective research area. Inspired by Lean Startup, a startup journey can be viewed as a series of experiments that validate a set of business hypotheses an entrepreneurial team make explicitly or inexplicitly about their startup. It is little known about how startups evolve through business hypothesis testing. This study proposes a novel approach to look at the startup evolution as a Minimum Viable Product (MVP) creating process. We identified relationships among business hypotheses and MVPs via ethnography and post-mortem analysis in two software startups. We observe that the relationship between hypotheses and MVPs is incomplete and non-linear in these two startups. We also find that entrepreneurs do learn from testing their hypotheses. However, there are hypotheses not tested by MVPs and vice versa, MVPs not related to any business\u00a0\u2026", "num_citations": "18\n", "authors": ["750"]}
{"title": "Coordination of Software Development Teams across Organizational Boundary--An Exploratory Study\n", "abstract": " Coordinating teams across geographical, temporal and cultural boundaries has been identified as a critical task to achieve the success of global software projects. Organizational boundary is another dimension of global distribution, which is a less visible but equally important factor that influences team coordination. This study investigates attributes of the organizational boundary that inhibits coordination and development activities. Besides, we explore a set of effective coordination practices to overcome organizational boundary. The data were collected from two projects involving four different software development organizations. We found that the variety on collaboration policy, team organization, engineering process, and development practices contributes to extra coordination efforts, insufficient communication, team awareness and mistrust. The study also highlights that coordination practices, such as face-to\u00a0\u2026", "num_citations": "17\n", "authors": ["750"]}
{"title": "Collaborative resolution of requirements mismatches when adopting open source components\n", "abstract": " [Context and motivation] There is considerable flexibility in requirements specifications (both functional and non-functional), as well as in the features of available OSS components. This allows a collaborative matching and negotiation process between stakeholders such as: customers, software contractors and OSS communities, regarding desired requirements versus available and thus reusable OSS components. [Problem] However, inconclusive research exists on such cooperative processes. Not much empirical data exists supporting the conduction of such research based on observation of industrial OSS adoption projects. This paper investigates how functional and non-functional requirement mismatches are handled in practice. [Results] We found two common approaches to handle functional mismatches. The main resolution approach is to get the components changed by the development team, OSS\u00a0\u2026", "num_citations": "16\n", "authors": ["750"]}
{"title": "A preliminary study of agility in business and production: Cases of early-stage hardware startups\n", "abstract": " [Context] Advancement in technologies, popularity of small-batch manufacturing and the recent trend of investing in hardware startups are among the factors leading to the rise of hardware startups nowadays. It is essential for hardware startups, companies that involve both software and hardware development, to be not only agile to develop their business but also efficient to develop the right products.[Objective] We investigate how hardware startups achieve agility when developing their products in early stages.[Methods] A qualitative research is conducted with data from 20 hardware startups.[Result] Preliminary results show that agile development is known to hardware entrepreneurs, however it is limitedly adopted. We also found four categories of tactics:(1) strategy,(2) personnel,(3) artifact and (4) resource that enable hardware startups agile in their early stage business and product development\u00a0\u2026", "num_citations": "13\n", "authors": ["750"]}
{"title": "Minimum viable products for internet of things applications: Common pitfalls and practices\n", "abstract": " Internet of Things applications are not only the new opportunity for digital businesses but also a major driving force for the modification and creation of software systems in all industries and businesses. Compared to other types of software-intensive products, the development of Internet of Things applications lacks a systematic approach and guidelines. This paper aims at understanding the common practices and challenges among start-up companies who are developing Internet of Things products. A qualitative research is conducted with data from twelve semi-structured interviews. A thematic analysis reveals common types of Minimum Viable Products, prototyping techniques and production concerns among early stage hardware start-ups. We found that hardware start-ups go through an incremental prototyping process toward production. The progress associates with the transition from speed-focus to quality-focus. Hardware start-ups heavily rely on third-party vendors in term of development speed and final product quality. We identified 24 challenges related to management, requirement, design, implementation and testing. Internet of Things entrepreneurs should be aware of relevant pitfalls and managing both internal and external risks. View Full-Text", "num_citations": "11\n", "authors": ["750"]}
{"title": "Coopetition of software firms in open source software ecosystems\n", "abstract": " Software firms participate in an ecosystem as a part of their innovation strategy to extend value creation beyond the firm\u2019s boundary. Participation in an open and independent environment also implies the competition among firms with similar business models and targeted markets. Hence, firms need to consider potential opportunities and challenges upfront. This study explores how software firms interact with others in OSS ecosystems from a coopetition perspective. We performed a quantitative and qualitative analysis of three OSS projects. Finding shows that software firms emphasize the co-creation of common value and partly react to the potential competitiveness on OSS ecosystems. Six themes about coopetition were identified, including spanning gatekeepers, securing communication, open-core sourcing and filtering shared code. Our work contributes to software engineering research with a rich\u00a0\u2026", "num_citations": "10\n", "authors": ["750"]}
{"title": "The Impact of Software Complexity on Cost and Quality - A Comparative Analysis Between Open Source  and Proprietary Software\n", "abstract": " Early prediction of software quality is important for better software planning and controlling. In early development phases, design complexity metrics are considered as useful indicators of software testing effort and some quality attributes. Although many studies investigate the relationship between design complexity and cost and quality, it is unclear what we have learned beyond the scope of individual studies. This paper presented a systematic review on the influence of software complexity metrics on quality attributes. We aggregated Spearman correlation coefficients from 59 different data sets from 57 primary studies by a tailored meta-analysis approach. We found that fault proneness and maintainability are most frequently investigated attributes. Chidamber and Kemerer metric suite is most frequently used but not all of them are good quality attribute indicators. Moreover, the impact of these metrics is not different in proprietary and open source projects. The result provides some implications for building quality model across project type", "num_citations": "10\n", "authors": ["750"]}
{"title": "Identifying security risks of digital transformation-an engineering perspective\n", "abstract": " Technological advancements continue to disrupt how organizations compete and create value in almost every industry and society. The recent digital transformation movement has expanded the reliance of companies and organizations in software technologies, such as cloud computing, big data, artificial intelligence, internet-of-things, and also increase the risk associated with software usage. This work aims at identifying security risks associated with these technologies from an engineering management perspective. We conducted two focused groups and a literature review to gather and discuss the list of security risks. The findings have implications for both practitioners to manage software security risks and future research work.", "num_citations": "8\n", "authors": ["750"]}
{"title": "How do startups develop Internet-of-things systems-A multiple exploratory case study\n", "abstract": " Internet-of-Things applications are not only the new opportunity for digital businesses but also a major driving force for the modification and creation of software systems in all industries and businesses. Compared to other types of software-intensive products, the development of Internet-of-Things applications lacks a systematic approach and guidelines. This paper aims at understanding the methodological commonalities among startups who are developing Internet-of-Things products. Using the SEMAT Essence framework, we captured common team compositions, common types of Minimum Viable Products and common way of working in early stage Internet-of-Things startups. We found that startups include various engineering and business competence, but do not cover all of what is needed. The development of Internet-of-Things applications adopts certain speed-favor approaches, i.e. rapid prototyping\u00a0\u2026", "num_citations": "8\n", "authors": ["750"]}
{"title": "Towards understanding startup product development as effectual entrepreneurial behaviors\n", "abstract": " With the rapid development of technology and competitiveness of IT sectors, the speed of learning and evolving is vital for success of software startups. However, software startups often face with multiple technical and business challenges, which lengthen the duration of their idea-to-launch process. Little is known about the relation of entrepreneurial characteristics of software startups and their product development. We conducted an empirical study on twenty software startups to understand their challenges that leads long idea-to-launch processes. Six engineering-related challenges were identified and interpreted via a lens of an entrepreneurial behavior theory. Our main finding is that the effectuation-based approach of developing a startup business is mismatched with the iterative, evolutionary-oriented approach of developing a startup product. Software startups search for local optimal solutions\u00a0\u2026", "num_citations": "8\n", "authors": ["750"]}
{"title": "100+ Metrics for Software Startups-A Multi-Vocal Literature Review\n", "abstract": " Metrics can be used by businesses to make more objective decisions based on data. Software startups in particular are characterized by the uncertain or even chaotic nature of the contexts in which they operate. Using data in the form of metrics can help software startups to make the right decisions amidst uncertainty and limited resources. However, whereas conventional business metrics and software metrics have been studied in the past, metrics in the spe-cific context of software startup are not widely covered within academic literature. To promote research in this area and to create a starting point for it, we have conducted a multi-vocal literature review focusing on practitioner literature in order to compile a list of metrics used by software startups. Said list is intended to serve as a basis for further research in the area, as the metrics in it are based on suggestions made by practitioners and not empirically verified.", "num_citations": "7\n", "authors": ["750"]}
{"title": "Exploring the outsourcing relationship in software startups: A multiple case study\n", "abstract": " Software startups are becoming increasingly popular in software industry as well as other sectors of economy. Startups that lack necessary competences often seek for external resources from outsourcing partners. Little is known how this outsourcing relationship works and whether it makes sense to outsource the technical competence to an external party. This is among the first investigations on the outsourcing relationships in software startups. By conducting exploratory case studies at six startups, we found a mixed experience with outsourcing. The experimental nature of an early product development makes outsourcing a feasible option, although startups often suffer from its uncertainty and managing commitments from partners. Results further propose that early contract-based activities could be transformed into a long-term partnership by adopting a startup boundary spanner's role, establishing an inter\u00a0\u2026", "num_citations": "7\n", "authors": ["750"]}
{"title": "Competition on inter-organizational collaboration from an organizational-social-technical perspective\n", "abstract": " Benefiting from inter-organizational collaboration while remaining competitive are organizations' target in software industry nowadays. However, little is known about competition awareness and collaboration processes and practices in software-intensive organizations. This paper introduces the first step to understand the role and impact of competition on team collaboration in the context of inter-organizational software project. A case study was designed and initially performed. Initial findings revealed a set of propositions for future research. We found that collaboration initiates from technical coordination requirement and is influenced by technical, social and organizational factors. Meanwhile, competition comes from business strategy and competition awareness could negatively influence effectiveness of social-technical collaboration. Future works will focus on the mutual influence between competition and\u00a0\u2026", "num_citations": "7\n", "authors": ["750"]}
{"title": "Do software firms collaborate or compete? A model of coopetition in community-initiated OSS projects\n", "abstract": " [Background] An increasing number of commercial firms are participating in Open Source Software (OSS) projects to reduce their development cost and increase technical innovativeness. When collaborating with other firms whose sought values are conflicts of interests, firms may behave uncooperatively leading to harmful impacts on the common goal. [Aim] This study explores how software firms both collaborate and compete in OSS projects. [Method] We adopted a mixed research method on three OSS projects. [Result] We found that commercial firms participating in community-initiated OSS projects collaborate in various ways across the organizational boundaries. While most of firms contribute little, a small number of firms that are very active and account for large proportions of contributions. We proposed a conceptual model to explain for coopetition among software firms in OSS projects. The model shows two aspects of coopetition can be managed at the same time based on firm gatekeepers. [Conclusion] Firms need to operationalize their coopetition strategies to maximize value gained from participating in OSS projects.", "num_citations": "6\n", "authors": ["750"]}
{"title": "The essence theory of software engineering\u2013large-scale classroom experiences from 450+ software engineering BSc students\n", "abstract": " Software Engineering as an industry is highly diverse in terms of development methods and practices. Practitioners employ a myriad of methods and tend to further tailor them by e.g. omitting some practices or rules. This diversity in development methods poses a challenge for software engineering education, creating a gap between education and industry. General theories such as the Essence Theory of Software Engineering can help bridge this gap by presenting software engineering students with higher-level frameworks upon which to build an understanding of software engineering methods and practical project work. In this paper, we study Essence in an educational setting to evaluate its usefulness for software engineering students while also investigating barriers to its adoption in this context. To this end, we observe 102 student teams utilize Essence in practical software engineering projects\u00a0\u2026", "num_citations": "6\n", "authors": ["750"]}
{"title": "Reordering dimensions for Radial Visualization of multidimensional data \u2014 A Genetic Algorithms approach\n", "abstract": " In this paper, we propose a Genetic Algorithm (GA) for solving the problem of dimensional ordering in Radial Visualization (Radviz) systems. The Radviz is a non-linear projection of high-dimensional data set onto two dimensional space. The order of dimension anchors in the Radviz system is crucial for the visualization quality. We conducted experiments on five common data sets and compare the quality of solutions found by GA and those found by the other well-known methods. The experimental results show that the solutions found by GA for these tested data sets are very competitive having better cost values than almost all solutions found by other methods. This suggests that GA could be a good approach to solve the problem of dimensional ordering in Radviz.", "num_citations": "6\n", "authors": ["750"]}
{"title": "Time for AI (Ethics) Maturity Model Is Now\n", "abstract": " There appears to be a common agreement that ethical concerns are of high importance when it comes to systems equipped with some sort of Artificial Intelligence (AI). Demands for ethical AI are declared from all directions. As a response, in recent years, public bodies, governments, and universities have rushed in to provide a set of principles to be considered when AI based systems are designed and used. We have learned, however, that high-level principles do not turn easily into actionable advice for practitioners. Hence, also companies are publishing their own ethical guidelines to guide their AI development. This paper argues that AI software is still software and needs to be approached from the software development perspective. The software engineering paradigm has introduced maturity model thinking, which provides a roadmap for companies to improve their performance from the selected viewpoints known as the key capabilities. We want to voice out a call for action for the development of a maturity model for AI software. We wish to discuss whether the focus should be on AI ethics or, more broadly, the quality of an AI system, called a maturity model for the development of AI systems.", "num_citations": "5\n", "authors": ["750"]}
{"title": "Startup metrics that tech entrepreneurs need to know\n", "abstract": " Metrics can be used by firms to make more objective decisions based on data. Software startups in particular are characterized by the uncertain or even chaotic nature of the contexts in which they operate. Using data in the form of metrics can help software startups to make the right decisions amid uncertainty and limited resources. However, whereas conventional business metrics and software metrics have been studied in the past, metrics in the specific context of software startups have not been studied. In this chapter, we present the results of a multivocal literature review to offer you 118 metrics practitioner experts think software startups should measure. These metrics can give you ideas for what your startup should measure.", "num_citations": "5\n", "authors": ["750"]}
{"title": "Gamifying the Escape from the Engineering Method Prison\n", "abstract": " Software Engineering is an engineering discipline but lacks a solid theoretical foundation. One effort in remedying this situation has been the SEMAT Essence specification. Essence consists of a language for modeling Software Engineering (SE) practices and methods and a kernel containing what its authors describe as being elements that are present in every software development project. In practice, it is a method agnostic project management tool for SE Projects. Using the language of the specification, Essence can be used to model any software development method or practice. Thus, the specification can potentially be applied to any software development context, making it a powerful tool. However, due to the manual work and the learning process involved in modeling practices with Essence, its initial adoption can be tasking for development teams. Due to the importance of project management in SE\u00a0\u2026", "num_citations": "5\n", "authors": ["750"]}
{"title": "Towards understanding startup product development as effectual entrepreneurial behaviors\n", "abstract": " Software startups face with multiple technical and business challenges, which could make the startup journey longer, or even become a failure. Little is known about entrepreneurial decision making as a direct force to startup development outcome. In this study, we attempted to apply a behavior theory of entrepreneurial firms to understand the root-cause of some software startup\u2019s challenges. Six common challenges related to prototyping and product development in twenty software startups were identified. We found the behavior theory as a useful theoretical lens to explain the technical challenges. Software startups search for local optimal solutions, emphasize on short-run feedback rather than long-run strategies, which results in vague prototype planning, paradox of demonstration and evolving throw-away prototypes. The finding implies that effectual entrepreneurial processes might require a more\u00a0\u2026", "num_citations": "5\n", "authors": ["750"]}
{"title": "Female Leadership in Software Projects\u2014A Preliminary Result on Leadership Style and Project Context Factors\n", "abstract": " Women have been shown to be effective leaders in many team-based situations. However, it is also well-recognized that women are underrepresented in engineering and technology areas, which leads to wasted efforts and a lack of diversity in professional organizations. Although studies about gender and leadership are rich, research focusing on engineering-specific activities, are scarce. To react on this gap, we explored the experience of female leaders of software development projects and possible context factors that influence leadership effectiveness. The study was conducted as a longitudinal multiple case study. Data was collected from survey, interviews, observation and project reports. In this work, we reported some preliminary findings related to leadership style, team perception on leadership and team-task context factors. We found a strong correlation between perceived team leadership and\u00a0\u2026", "num_citations": "4\n", "authors": ["750"]}
{"title": "An investigation into software product innovation: a systematic literature review\n", "abstract": " New products enable firms not only to accrue high profits but also to leapfrog competition. Different key activities and processes have been proposed to increase the likelihood of successful product innovation. Software products have different characteristics, which need different treatment than products in other domains. Current research on software innovation is still scattered among different areas. This study accumulates the current knowledge and empirical evidences of software product innovation using a systematic literature review approach, and builds the path for future research in this area. Among others, our findings highlight research gaps, as well as best practices and determinants for software product innovation from the reviewed empirical studies.", "num_citations": "4\n", "authors": ["750"]}
{"title": "An Empirical Investigation on Software Practices in Growth Phase Startups\n", "abstract": " Context: Software startups are software-intensive early-stage companies with high growth rates. We notice little evidence in the literature concerning engineering practices when startups transition to the growth phase. Aim: Our goal is to evaluate how software startups embrace software engineering practices. Methodology: We conduct a survey guided by semi-structured interviews as an initial step, to be followed by field questionnaires as part of a future exploratory study. We use open coding to identify patterns leading to themes we use to state our hypotheses. To identify our samples, we use purposive sampling. Results: Specifically, we analyze seven startup cases during the first qualitative phase. We obtain five anti-patterns (no-documentation, no-agile, no-code intellectual property protection, cowboy programming, no-automated testing) and corresponding patterns (readable code, ad-hoc project management\u00a0\u2026", "num_citations": "3\n", "authors": ["750"]}
{"title": "Six pillars of modern entrepreneurial theory and how to use them\n", "abstract": " In recent years, there has been an explosion of interest in entrepreneurship from both practical entrepreneurs and researchers. While theories are helpful for explaining business-driven activities in a startup, they are also valid in reasoning for the practical activities occurring in the entrepreneurial context. We believe that startups would benefit from the awareness of these entrepreneurial theories and the understanding of how they can be connected to decision-making in both business and engineering perspectives. In particular, we want to focus on theories that are already used by practical entrepreneurs and their advisors. As an example, we have studied the Scandinavian entrepreneurial ecosystem. We selected six groups of theories that might be particularly relevant for the startup population, namely (1) core competence and resource-based view,(2) effectuation,(3) the fulfillment of entrepreneurial opportunities\u00a0\u2026", "num_citations": "3\n", "authors": ["750"]}
{"title": "Software Startup ESSENCE: How Should Software Startups Work?\n", "abstract": " Software startups need to work in a systematic fashion just like mature organizations. However, existing software engineering methods and practices are not aimed at software startups. They do not account for the business aspect of startups and may not be well suited for software startups in general. The Lean Startup Methodology on the other hand contains some useful practices for software startups but is nonetheless impractical, offering little in the way of telling you what to do. Software startups are thus required to tailor their own method. Currently, many software startups simply work ad hoc or use various Agile methods and practices. In terms of Agile methods and practices, little consensus exists between startups. In this chapter, we discuss methods and method tailoring. We give guidelines on how to create your own way of working and recommend a tangible tool for doing so: the Essence Theory of Software\u00a0\u2026", "num_citations": "3\n", "authors": ["750"]}
{"title": "Fostering open innovation in coworking spaces: A study of norwegian startups\n", "abstract": " Coworking spaces and open innovation are two trends that emerged in the early 2000s and have gained considerable attention. Although there exists a vast amount of research on either of these topics, the connection between them has not been much explored. The aim of this research study was to assess the state of practice of open innovation in coworking spaces and to propose a model that captures this phenomenon. Empirical data were collected by surveys and interviews with seven entrepreneurs operating Norwegian coworking spaces and two managers of coworking spaces. We found that coworking spaces express a large potential to foster open innovation among early-stage startups. Also, open innovation was found to already occur in coworking spaces: Among the four coworking space dimensions analyzed\u2014places, spaces, events, and projects\u2014events were regarded as the most important ones\u00a0\u2026", "num_citations": "3\n", "authors": ["750"]}
{"title": "An empirical study on female participation in software project courses\n", "abstract": " Gender issues in software engineering education are gaining research attention due to the desire to promote female participation in the field. The objective of this work is to enhance the understanding of female students' participation in software engineering projects to support gender-aware course optimization. Since 2015, we have investigated the participation of female students in terms of software engineering activities and team dynamics in a software project course that involves a real customer. We found that female students are more active with project management and requirement engineering, while they remain under-represented in highly complex or specific tasks, i.e. architecture work, and user experience design. We found no statistically significant difference in perceived team dynamics between male and female students. Insights on female project activities would facilitate the arrangement of project\u00a0\u2026", "num_citations": "3\n", "authors": ["750"]}
{"title": "Building an entrepreneurship data warehouse\n", "abstract": " The main principle of the Lean Startup movement is that static business planning should be replaced by a dynamic development, where products, services, business model elements, business objectives and activities are frequently changed based on constant customer feedback. Our ambition is to empirically measure if such changes of the business idea, the business model elements, the project management and close interaction with customers really increases the success rate of entrepreneurs, and in what way. Our first paper; \u201cDoes Lean Startup really work? Foundation for an empirical study\u201d presented the first attempt to model the relations we want to measure. This paper will focus on how to build and set up a test harness (from now on called the Entrepreneurship Platform or EP) to gather empirical data from Companies and how to store these data together with demographical and financial data from the\u00a0\u2026", "num_citations": "3\n", "authors": ["750"]}
{"title": "On the role of boundary spanners as team coordination mechanisms in organizationally distributed projects\n", "abstract": " Software projects are still facing with challenges of team coordination across global boundaries. Boundary spanner is an important organic coordination mechanism that is not much explored in GSD literature. This paper presents a finding from four case studies of how a boundary spanner resolve coordination gaps in organizationally distributed teams. The qualitative data were collected from 16 interviews from different types of global software projects. Boundary spanners have common characteristics of a coordinator, such as team member recognition, multiple perspective expertise, decision-making ability and work time flexibility. Task negotiation, conflict resolution, task information navigation and boundary object set-up are common activities to support team coordination. We also discussed a compound effect of other organizational roles and the impact of context factors on boundary spanner's activities.", "num_citations": "3\n", "authors": ["750"]}
{"title": "IT Students Project Group Work in the Day of COVID-19: Understanding the Impact and Attitudes\n", "abstract": " COVID-19 pandemic has resulted in disruptive impacts on teaching and learning experience around the world. In a particular context of project-based courses, where students need to interact and collaborate frequently, there appears additional challenges in implementing and learning from projects. Understanding the impact of COVID-19 on project-based courses does not only provide recommendations for preparing such courses in post-pandemic eras, but also has some implications for physical IT projects in industry. We investigated 30 student teams in Spring semester 2020, when COVID-19 measures were applied in the middle of the course. We adopted a mixed-method approach; a bottom-up analysis with a thematic analysis, and a top-down approach with attribution theory. We found that COVID19 measures introduced as external attributions to the course had direct and sudden impact manifestations on individual level, which leads to internal attributions, such as lack of motivation, lack of commitment, realization of usefulness of some online tools, and mental struggle. This creates an indirect impact on team, process and product factors in the course.", "num_citations": "2\n", "authors": ["750"]}
{"title": "SIoT framework: Towards an approach for early identification of security requirements for internet-of-things applications\n", "abstract": " Background: Security has become more of a concern with the wide deployment of Internet-of-things (IoT) devices. The importance of addressing security risks early in the development lifecycle before pushing to market cannot be over emphasized. Aim: To this end, we propose a conceptual framework to help with identifying security concerns early in the product development lifecycle for Internet-of-things, that we refer to as SIoT (Security for Internet-of-Things). Method: The framework adopts well known security engineering approaches and best practices, and systematically builds on existing research work on IoT architecture. Results: Practitioners at a Norwegian start-up company evaluated the framework and found it useful as a foundation for addressing critical security concerns for IoT applications early in the development lifecycle. The output from using the framework can be a checklist that can be used as input during security requirements engineering activities for IoT applications. Conclusions: However, security is a multi-faced concept; therefore, users of the SIoT framework should not view the framework as a panacea to all security threats. The framework may need to be refined in the future, particularly to improve its completeness to cover various IoT contexts.", "num_citations": "2\n", "authors": ["750"]}
{"title": "An analysis of Core Competence and Unique Value Proposition as normative entrepreneurship elements\n", "abstract": " The search for a \"best practice\" of entrepreneurship has been a big part of the science of entrepreneurship of our millennium. Using text analysis, this article empirically investigates the way 756 entrepreneurs from three different cohorts conceptualize two of the 27 elements in such a suggested normative model. The two elements explored are \"Core Competence\" and \"Unique Value Proposition\". Our findings are that there may be two problems with the use of these elements. Firstly - the number of entries from each case suggest that entrepreneurs struggle with finding and settling on a \"unique\" statement for either of the two elements. Secondly, a percentage of the entrepreneurs seem to struggle to differentiate the two concepts from each other. Finally, there seem to be differences between the three investigated cohorts concerning the findings, where higher education and more experience may make it easier to\u00a0\u2026", "num_citations": "2\n", "authors": ["750"]}
{"title": "Resource and competence (internal) view vs. environment and market (external) view when defining a business\n", "abstract": " Startups is a popular phenomenon that has a significant impact on global economy growth, innovation and society development. However, there is still insufficient understanding about startups, particularly, how to start a new business in the relation to consequent performance. Toward this knowledge, we have performed an empirical study regarding the differences between a Resource and Competence View (Internal) vs Environment and Market View (External) when defining a Business. 701 entrepreneurs have reflected on their startups on nine classes of Resources (values, vision, personal objectives, employees and partners, buildings and rental contracts, cash and credit, patents, IPR's and brands, products and services and finally revenues and grants) and three elements of the Business Mission (\u201cKeyContribution\u201d, \u201cKeyMarket\u201d and \u201cDistinction\u201d). It seems to be a tendency to favour the Internal View over the\u00a0\u2026", "num_citations": "2\n", "authors": ["750"]}
{"title": "Software Business\n", "abstract": " Welcome to the proceedings of the 10th International Conference on Software Business (ICSOB 2019). This year, ICSOB celebrated its tenth anniversary and returned to Jyv\u00e4skyl\u00e4, Finland where the conference series was started in 2010. Jyv\u00e4skyl\u00e4 is a vibrant university city located in the heart of the beautiful Finnish lake district. The host organization, University of Jyv\u00e4skyl\u00e4, is a highly esteemed multidisciplinary university with six faculties, and its Faculty of Information Technology is known for research on computational sciences, software and telecommunications technology, information systems, cognitive science, and educational technology. Additionally, the research of cyber security, computational thinking, and decision-making crosscut all areas mentioned.For the tenth anniversary of the conference we selected the conference theme \u201cThe First Decade and Beyond\u201d and welcomed submissions summarizing\u00a0\u2026", "num_citations": "2\n", "authors": ["750"]}
{"title": "On the combination of static analysis for software security assessment -- a case study of an open-source e-government project\n", "abstract": " Static Application Security Testing (SAST) is a popular quality assurance technique in software engineering. However, integrating SAST tools into industry-level product development and security assessment poses various technical and managerial challenges. In this work, we reported a longitudinal case study of adopting SAST as a part of a human-driven security assessment for an open-source e-government project. We described how SASTs are selected, evaluated, and combined into a novel approach for software security assessment. The approach was preliminarily evaluated using semi-structured interviews. Our result shows that (1) while some SAST tools out-perform others, it is possible to achieve better performance by combining more than one SAST tools and (2) SAST tools should be used towards a practical performance and in the combination with triangulated approaches for human-driven vulnerability assessment in real-world projects.", "num_citations": "1\n", "authors": ["750"]}
{"title": "Software Startup Practices\u2013Software Development in Startups Through the Lens of the Essence Theory of Software Engineering\n", "abstract": " Software startups continue to be important drivers of economy globally. As the initial investment required to found a new software company becomes smaller and smaller resulting from technological advances such as cloud technology, increasing numbers of new software startups are born. Startups are considered to differ from other types of software organizations in various ways, including software development. In this paper, we study software development in startups from the point of view of practices to better understand how startups develop software. Using extant literature and case study data, we devise a list of practices which we categorize using the Essence Theory of Software Engineering (Essence). Based on the data, we propose a list of common practices utilized by software startups. Additionally, we propose potential changes to Essence to make it better suited for the software startup context.", "num_citations": "1\n", "authors": ["750"]}
{"title": "Incorporating societal topics in software engineering education: A case study of a customer-driven course\n", "abstract": " Context: This full research paper presents a review of the project descriptions from a projectbased course designed around close collaboration with students and external customers. Our master course is based on four decades of software engineering experience and teaching at Norwegian University of Science and Technology. In the scope of this work, we analyzed 45 customers\u2019 project proposals over the past three years.Objectives: More precisely, we looked into 1) how many societal topics are present in project customers\u2019 descriptions? 2) Which sustainable development goals if any, are addressed from the customers? 3) How do the trends of societal topics addressing SDGs in customer projects change over time? 4) Which categories of individuals do project descriptions target?Methods: We conducted a deductive thematic analysis utilizing open coding of the customers\u2019 project descriptions. Results: We found that most project descriptions provided by the customers had a technical focus with a moderate portion of projects addressing societal topics for specific target groups.Contribution: The study\u2019s overall outcomes contribute to the course\u2019s future improvement and informs customers about the prospective socially relevant project proposals.", "num_citations": "1\n", "authors": ["750"]}
{"title": "Continuous experimentation on artificial intelligence software: a research agenda\n", "abstract": " Moving from experiments to industrial level AI software development requires a shift from understanding AI/ML model attributes as a standalone experiment to know-how integrating and operating AI models in a large-scale software system. It is a growing demand for adopting state-of-the-art software engineering paradigms into AI development, so that the development efforts can be aligned with business strategies in a lean and fast-paced manner. We describe AI development as an \u201cunknown unknown\u201d problem where both business needs and AI models evolve over time. We describe a holistic view of an iterative, continuous approach to develop industrial AI software basing on business goals, requirements and Minimum Viable Products. From this, five areas of challenges are presented with the focus on experimentation. In the end, we propose a research agenda with seven questions for future studies.", "num_citations": "1\n", "authors": ["750"]}
{"title": "Internal software startups\u2013a multiple case study on practices, methods, and success factors\n", "abstract": " Startups are often seen as drivers of innovation. In an attempt to leverage this potential, larger business organizations have founded internal startups as a subset of internal corporate ventures (ICV). These smaller organizations are intended to be more agile than the parent organization, in order to produce new service and product innovations using their own methods and practices independently of the organizational culture and methods of the parent organization. However, our understanding of ICVs is still lacking in terms of processes and success factors, and especially the more recent internal startups have scarcely been studied thus far. To approach this novel area of research, we take on a qualitative approach by means of a multiple case study of internal startups in large companies. Based on the data, we argue that the origin of the idea of the internal startup heavily influences the processes utilized by the\u00a0\u2026", "num_citations": "1\n", "authors": ["750"]}
{"title": "Software Startup Formation in an Experiential-Based Course-An Empirical Investigation of Students\u2019 Motivations\n", "abstract": " We added a Bootcamp external activity to our experiential-based course for first-year master students of Norwegian University of Science and Technology. Students engaged with realistic challenges from stakeholders while participating in the Bootcamp. We aimed to evaluate this year's student motivation in startup formation. We followed a mixed-methods approach combining data from a questionnaire and interviews. From the questionnaire, we found that the motivations regarding dimensions, such as startup formation increases, and the involvement of existing team members slightly decreased after Bootcamp. The interviews show that involving others--not only the existing team members--and having better funding opportunities are deemed crucial in future startup formations. The involvement in the startup formation of the existing stakeholders is still at a marginal level. The overall outcomes of the study help\u00a0\u2026", "num_citations": "1\n", "authors": ["750"]}
{"title": "An Analytical Framework for Planning Minimum Viable Products\n", "abstract": " For early-stage high-tech startups, Minimum Viable Products are the most important artifacts for both business development and product development. In an entrepreneurial journey with build\u2013measure\u2013learn loops, startups need to be certain about what they learn to be closer to a product\u2013market fit. Grounded from insights of 40 active digital startups, we proposed the 6W3H framework that captures a comprehensive set of context factors for developing an MVP. The framework represents an effectual MVP development with the relationships among the existing competence (Who question), business ideas (Why question) and current customers (For Whom questions), MVP\u2019s features (What to build question), Startup metrics (What to measure question), and the development processes and practices (How questions). We demonstrate how 6W3H framework can be used for visualizing startup development, supporting\u00a0\u2026", "num_citations": "1\n", "authors": ["750"]}
{"title": "A Tool-Based Approach for Essentializing Software Engineering Practices\n", "abstract": " Software Engineers work using highly diverse methods and practices, and general theories in software engineering are lacking. A recent attempt at creating a common ground in the area of software engineering methodologies has been the Essence Theory of Software Engineering. Essence is a method-agnostic progress management framework and a meta-method for Software Engineering (SE). However, tooling for Essence is still lacking. Without dedicated tools and other instruments, a meta-method such as Essence is cumbersome to utilize by practitioners and students. Indeed, Essence currently suffers from a lack of widespread practitioner adoption. In this paper, we thus present an Open Source tool for essentializing methods and practices: Essencery. We conduct a qualitative evaluation of the tool through a quasi-formal experiment and a set of semi-structured interviews. Based on this data, we improve\u00a0\u2026", "num_citations": "1\n", "authors": ["750"]}
{"title": "Software Cost Estimation and Capability Maturity Model in Context of Global Software Engineering\n", "abstract": " Software cost estimation is the process of forecasting the effort needed to develop the software system. Global software engineering (GSE) highlights that software development knows no boundaries and majority of the software products and services are developed today by globally-distributed teams, projects, and companies. The problem of cost estimation gets more complex if the discussion is carried out in the context of GSE, which has its own issues. Temporal, cultural, and geographical distance creates communication and software process implementation issues. Traditional software process models such as capability maturity model (CMM) lacks the dynamism to accommodate the recent trends in GSE. The chapter introduces GSE and discusses various cost estimation techniques and different levels of CMM. A couple of GSE-based case studies having CMM-level projects from multiple organizations are\u00a0\u2026", "num_citations": "1\n", "authors": ["750"]}
{"title": "Evaluation of team dynamic in Norwegian projects for IT students\n", "abstract": " The need for teaching realistic software development in project courses has increased in a global scale. It has always been challenges in cooperating fast-changing software technologies, development methodologies and teamwork. Moreover, such project courses need to be designed in the connection to existing theoretical courses. We performed a large-scale research on student performance in Software Engineering projects in Norwegian universities. This paper investigates four aspects of team dynamics, which are team reflection, leadership, decision making and task assignment in order to improve student learning. Data was collected from student projects in 4 years at two universities. We found that some leader's characteristics are perceived differently for female and male leaders, including the perception of leaders as skilful workers or visionaries. Leadership is still a challenging aspect to teach, and assigned leadership is probably not the best way to learn. Students is are performing well in task review, however, needs support while performing task assignment. The result also suggests that task management to be done in more fine-grained levels. It is also important to maintain an open and active discussion to facilitate effective group decision makings.", "num_citations": "1\n", "authors": ["750"]}