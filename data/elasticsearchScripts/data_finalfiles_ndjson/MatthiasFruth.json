{"title": "Probabilistic model checking of contention resolution in the IEEE 802.15. 4 low-rate wireless personal area network protocol\n", "abstract": " The international standard IEEE 802.15.4 defines low-rate wireless personal area networks, a central communication infrastructure of pervasive computing. In order to avoid conflicts caused by multiple devices transmitting at the same time, it uses a contention resolution algorithm based on randomised exponential backoff that is similar to the ones used in IEEE 802.3 for Ethernet and IEEE 802.11 for Wireless LAN. We model the protocol using probabilistic timed automata, a formalism in which both nondeterministic and probabilistic choice can be represented. The probabilistic timed automaton is transformed into a finite-state Markov decision process via a property-preserving integral-time semantics. Using the probabilistic model checker PRISM, we verify correctness properties, compare different operation modes of the protocol, and analyse performance and accuracy of different model abstractions.", "num_citations": "90\n", "authors": ["1677"]}
{"title": "Graphical modelling for simulation and formal analysis of wireless network protocols\n", "abstract": " It is well-known that the performance of wireless protocols depends on the quality of the wireless links, which in turn is affected by the network topology. The aim of this paper is to investigate the use of probabilistic model checking in the analysis of performance of wireless protocols, using a probabilistic abstraction of wireless unreliability.               Our main contributions are first, to show how to formalise wireless link unreliability via probabilistic behaviour derived from the current best analytic models [12], and second, to show how such formal models can be generated automatically from a graphical representation of the network, and analysed with the PRISM model checker.               We also introduce CaVi, a graphical specification tool, which reduces the specification task to the design of the network layout, and provides a uniform design interface linking model checking with simulation. We illustrate our\u00a0\u2026", "num_citations": "37\n", "authors": ["1677"]}
{"title": "Formal Methods for the Analysis of Wireless Network Protocols\n", "abstract": " In this thesis, we present novel software technology for the analysis of wireless networks, an emerging area of computer science. To address the widely acknowledged lack of formal foundations in this field, probabilistic model checking, a formal method for verification and performance analysis, is used. Contrary to test and simulation, it systematically explores the full state space and therefore allows reasoning about all possible behaviours of a system. This thesis contributes to design, modelling, and analysis of ad-hoc networks and randomised distributed coordination protocols. First, we present a new hybrid approach that effectively combines probabilistic model checking and state-of-the-art models from the simulation community in order to improve the reliability of design and analysis of wireless sensor networks and their protocols. We describe algorithms for the automated generation of models for both analysis methods and their implementation in a tool.", "num_citations": "28\n", "authors": ["1677"]}
{"title": "CaVi: Simulation and Model Checking for Wireless Sensor Networks\n", "abstract": " CaVi provides a uniform interface to state-of-the-art simulation methods and formal verification methods for wireless sensor network. Simulation is suitable to examine the behavior of a wireless sensor network in great detail. Due to the probabilistic behavior of these systems, however, the simulation covers only a small fraction of all possible behaviors.Formal model checking techniques, based on Markov decision processes, use less detailed and more abstract models and compute exact probabilities and expected values for the entire behavior, where simulation can only give averages. CaVi allows for creating a single model for simulation, Monte-Carlo simulation, and model checking.", "num_citations": "17\n", "authors": ["1677"]}
{"title": "Trace checking with real-time specifications\n", "abstract": " Obtaining full models for the validation and verification of embedded systems is often difficult. The presented approach overcomes this problem by checking finite traces, which does not require any system model. Traces are generated by test car runs or hardware-in-the-loop simulation. We propose a canonical extension of linear-time temporal logic (LTL) for real-time specifications. Our algorithm translates real-time LTL formulae into corresponding B\u00fcchi automata that check finite traces. The algorithm has been implemented as part of an industrial validation and verification framework for automotive electronics and successfully applied to real-world systems.", "num_citations": "5\n", "authors": ["1677"]}
{"title": "Neue Absicherungsstrategien f\u00fcr Steuerger\u00e4tesoftware\n", "abstract": " Neue Absicherungsstrategien f\u00fcr Steuerger\u00e4tesoftware - ORA - Oxford University Research Archive Logos Header links Search History Bookmarks 0 New Search Deposit Help Footer links Deposit Agreements Disclaimer Privacy Policy Cookies Accessibility Statement Take-down Policy Copyright API Contact Skip to main NEW SEARCH Deposit HELP 0 Back to Search CONTACT Name Email Comment Send message Actions Authors Bibliographic Details Terms of Use Stats Export BibTeX EndNote RefWorks Book section icon Book section Neue Absicherungsstrategien f\u00fcr Steuerger\u00e4tesoftware Actions Email \u00d7 Send the bibliographic details of this record to your email address. Your Email Please enter the email address that the record information will be sent to. Your message (optional) Please add any additional information to be included within the email. Send Cite \u00d7 APA Style Deutschmann, R., Fruth, M., & Zabelt, \u2026", "num_citations": "1\n", "authors": ["1677"]}
{"title": "Graphical modelling for simulation and formalanalysis of wireless network protocols\n", "abstract": " It is well-known that the performance of wireless protocols depends on the quality of the wireless links, which in turn is affected by the network topology. The aim of this paper is to investigate the use of probabilistic model checking in the analysis of performance of wireless protocols, using a probabilistic abstraction of wireless unreliability. Our main contributions are first, to show how to formalise wireless link unreliability via probabilistic behaviour derived from the current best analytic models, and second, to show how such formal models can be generated automatically from a graphical representation of the network, and analysed with the PRISM model checker.", "num_citations": "1\n", "authors": ["1677"]}
{"title": "Formal Verification of Embedded Real-Time Systems\n", "abstract": " Motivation In future, all systems will first and foremost be computer systems. As a consequence of this development, systems in all application domains, regardless whether they are implemented on hardware, software, or hybrid architectures, will essentially be concurrent and reactive. While their correct operation is often critical in several ways, complexity grows rapidly. For these reasons, verification becomes an absolute necessity. In the last decades, a variety of verification techniques has been proposed. Traditional approaches, based on testing and simulation, are often limited to relatively weak specification languages and partial coverage of a system\u2019s behaviour. Formal methods [CGP99] cover all possible execution paths of a system by exploring a full system model and thus find all violations of the system specification. Unfortunately, source code of real-world systems is in many cases unavailable to the verifying party, and then models cannot be constructed. Furthermore, due to the state explosion problem, formal verification is often infeasible for large systems.A solution to these problems is runtime verification [HR01b], a semi-formal 1 automatic verification method that checks single execution traces of a running system against temporal-logic specifications. This approach does not require additional modelling and can handle much larger systems than formal methods. In order to achieve acceptable coverage rates, both a sensible selection of input traces as well as the formulation of exhaustive specifications are required.", "num_citations": "1\n", "authors": ["1677"]}
{"title": "\u00dcberwachung von Java-Programmen mittels Java PathFinder\n", "abstract": " Moderne Informationssysteme werden immer komplexer. Es gibt bestimmte Klassen von Fehlern, die mit den klassischen Validierungsverfahren Test und Simulation praktisch nicht gefunden werden k\u00f6nnen. Dagegen k\u00f6nnen formale Verifikationsverfahren alle m\u00f6glichen Verhaltensweisen eines Systems \u00fcberpr\u00fcfen und sie liefern beweisbar richtige Resultate. Im Vergleich zur Uberpr\u00fcfung von Hardware und Entw\u00fcrfen gilt die formale Verifikation von Software nach wie vor als schwierig. Hauptproblem ist die effiziente Modellierung dynamischer Datenstrukturen, die potentiell unendlich gro\u00df sind.", "num_citations": "1\n", "authors": ["1677"]}