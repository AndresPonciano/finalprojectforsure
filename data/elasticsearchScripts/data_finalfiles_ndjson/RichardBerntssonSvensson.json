{"title": "Challenges when adopting continuous integration: A case study\n", "abstract": " The complexity of software development has increased over the last few years. Customers today demand higher quality and more stable software with shorter delivery time. Software companies strive to improve their processes in order to meet theses challenges. Agile practices have been widely praised for the focus they put on customer collaboration and shorter feedback loops. Companies that have well established agile practices have been trying to improve their processes further by adopting continuous integration - the concept where teams integrate their code several times a day. However, adopting continuous integration is not a trivial task. This paper presents a case study in which we, based on interviews at a major Swedish telecommunication services and equipment provider, assess the challenges of continuous integration. The study found 23 adoption challenges that organisations may face when\u00a0\u2026", "num_citations": "61\n", "authors": ["1535"]}
{"title": "Selecting creativity techniques for creative requirements: An evaluation of four techniques using creativity workshops\n", "abstract": " Requirements engineering is recognized as a creative process where stakeholders jointly discover new creative ideas for innovative and novel products that eventually are expressed as requirements. This paper evaluates four different creativity techniques, namely Hall of Fame, Constraint Removal, Brainstorming, and Idea Box, using creativity workshops with students and industry practitioners. In total, 34 creativity workshops were conducted with 90 students from two universities, and 86 industrial practitioners from six companies. The results from this study indicate that Brainstorming can generate by far the most ideas, while Hall of Fame generates most creative ideas. Idea Box generates the least number of ideas, and the least number of creative ideas. Finally, Hall of Fame was the technique that led to the most number of requirements that was included in future releases of the products.", "num_citations": "29\n", "authors": ["1535"]}
{"title": "Non-functional requirements metrics in practice-an empirical document analysis\n", "abstract": " Non-functional requirements metrics in practice - an empirical document analysis LUND UNIVERSITY LUND UNIVERSITY LIBRARIES Lund University Lund University Publications LUND UNIVERSITY LIBRARIES Register publications | Statistics | Marked list 0 | Saved searches 0 Advanced Home | Publications | Departments Non-functional requirements metrics in practice - an empirical document analysis Olsson, Thomas ; Berntsson Svensson, Richard LU and Regnell, Bj\u00f6rn LU (2007) Workshop on Measuring Requirements for Project and Product Success Mark Links Research Portal page Google Scholar find title Please use this url to cite or link to this publication: http://lup.lub.lu.se/record/1615536 Details BibTeX author Olsson, Thomas ; Berntsson Svensson, Richard LU and Regnell, Bj\u00f6rn LU organization Department of Computer Science Software Engineering-lup-obsolete (research group) publishing date \u2026", "num_citations": "24\n", "authors": ["1535"]}
{"title": "Impact of usability on process lead-time in information systems: A case study\n", "abstract": " Technological advancements have started to demand the need for information systems to survive in the business world. There is an inherent need to be fast and efficient to conquer the market. In order to reduce time to market there is a need to shorten the lead-time in design and development process of products. Hence, lead-time is a significant performance metric for a product development organizations having information systems. It is important to explore the factors which affect the process lead-time in information systems. The objective of this study is to explore the impact that usability (one of the factors that may affect the process lead-time) has on process lead-time. This paper presents a case study involving qualitative and quantitate data from Volvo Group, which uses an information system called KOLA for their design and development process. Data was collected through 29 interviews, 17 think aloud\u00a0\u2026", "num_citations": "8\n", "authors": ["1535"]}
{"title": "Creativity techniques for more creative requirements: theory vs. practice\n", "abstract": " Requirements engineering was initially regarded as a front-end activity to form a basis for the coming activities of software development, which can be achieved by gathering and producing unambiguous and consistent requirements. However, in recent years, requirements engineering has been recognized as a creative process. A systematic literature review followed by an online questionnaire with practitioners were employed to identify a comprehensive overview of existing empirical evidence using creativity techniques in the requirements engineering process. The results show a limited range of applied creativity techniques with insufficient empirical evidence to adequately evaluate if the techniques create more creative requirements. The contribution of this study is threefold: First, it compares which creativity techniques have been empirically evaluated in literature. Second, it compares the identified creativity\u00a0\u2026", "num_citations": "8\n", "authors": ["1535"]}
{"title": "Supporting release planning of quality requirements: the Quality Performance Model\n", "abstract": " In a competitive environment, as experienced by market-driven organizations, it is important to plan software product releases with time-to-market in mind. To increase the chances of market success, software products need to be released to the market, not only at the right time, but also with higher level of quality than the competitors\u2019 products. Thus quality requirements can be seen as a key competitive advantage. An especially challenging problem for an organization that develops software products offered to a market is to set the right quality target in relation to future market demands and competitor products. When is the quality level a competitive advantage? The goal of this thesis is to increase the awareness and understanding of quality requirements, and to find means for improving the ability to make early estimates of quality requirements, eg, performance requirements, in order to enhance high-level decision-making related to release planning and roadmapping.This thesis is based on empirical research using a flexible research design. The research contains two qualitative surveys of quality requirements challenges in market-driven software product development organizations based on interviews with practitioners. From these surveys, issues emerge such as when the quality level is good enough, and how to get quality requirements into projects when functional requirements are prioritized. A case study within the embedded software domain investigates how quality requirements are classified and specified (including quantification) in an industrial context, which concludes that for a method to be successful, it is important that the method\u00a0\u2026", "num_citations": "7\n", "authors": ["1535"]}
{"title": "Measuring team innovativeness: a multiple case study of Agile and lean software developing companies\n", "abstract": " [Context/Background] Innovation is seen as the basis of competitive economy and measuring the innovation process is important for organizations. In the literature, focus has been on innovation and innovation capabilities on an organizational level, while few studies has been placed on innovation at team level. Furthermore, organizations tend to focus on the measurement of innovation to input and outputs of the innovation process and ignoring the process in-between. [Goal] This paper explores how a team\u2019s innovation capability is measured, and can be measured in practice in agile and lean software developing companies. [Method] It is based on data collected through semi-structured interviews with 28 practitioners from 11 software developing companies. [Results] The contribution of this study is twofold: First, it characterizes which metrics are used in industry to measure a team\u2019s innovation capability\u00a0\u2026", "num_citations": "5\n", "authors": ["1535"]}
{"title": "The effect of stakeholder inertia on product line requirements\n", "abstract": " One of the goals of requirements engineering is to capture and document innovation in the form of new product requirements. These product requirements need to express new system functions or new qualities that are most desired by customers while maintaining customer familiarity with existing products. This paper explores the contradiction between the customer desire for revolutionary advancement and their desire to maintain familiarity with existing systems. This customer inertia creates a bias toward incremental (evolutionary) advancement, potentially multiplying the risks associated with revolutionary innovations. We present a review of scenarios illustrating this stakeholder bias and propose a research agenda for further work in the area.", "num_citations": "5\n", "authors": ["1535"]}
{"title": "Dynamic Systems Development Method and Rapid Application Development\n", "abstract": " When developing software it is a huge difference in which process model to follow. Different model is suitable for different projects and there different purposes. In this paper we will present the Dynamic Systems Development Method and the characteristics of this method as well as strengths and weaknesses and to what kind of project this method is suitable for. A small summary of the Rapid Application Development method is also presented together with similarities and differences from the Dynamic Systems Development Method. The result shows that the method is more suitable for in-house and marketdriven development rather then contract-driven development. The major weakness with the method that we have found is that it is hard to plan and that the requirements are loosely defined. The major strengths are that the end-products tend to fit the business need as the user is much involved in the development process. This method also has a short time to market for development.", "num_citations": "4\n", "authors": ["1535"]}
{"title": "A survey of practitioners use of open innovation\n", "abstract": " In recent years, the influence of open innovation has become more and more important in the development of software products and services. However, open innovation is still unexplored for software-intensive organizations and its potential impact on the organization's innovative performance. In this paper we present the results of an empirical study carried out to gauge common experiences within open innovation in the requirements engineering process, and to understand the barriers and drivers for using open innovation. A web-based questionnaire was sent out to 54 industry practitioners, of which 35 answered. The results show that open innovation as part of the requirements engineering process is becoming more and more fully exploited from both the outside and inside. Moreover, potential drivers for using open innovation include, new generated ideas and higher costumer benefits, while identified barriers\u00a0\u2026", "num_citations": "3\n", "authors": ["1535"]}
{"title": "Effects of Feature Complexity on Software Effort Estimates--An Exploratory Study\n", "abstract": " Software estimates are an important input to project selection, planning, monitoring as well assessment of projects' success. However, the practice of estimation is also a challenging activity for many practitioners, and there is a continuing need to understand and improve it. To contribute to the existing knowledge of this process, an in-depth study was conducted where 18 practitioners from eight sub domains at a company producing embedded systems were interviewed. The contribution of this article is twofold: First, it reports the estimation challenges as perceived by the practitioners where the two most prominent were organizational dependencies and complexity of requested features. Second, since feature complexity was noted as one of the estimation challenges, this paper also reports on factors that are driving that complexity, two of the most common being dependencies on functionality developed by other\u00a0\u2026", "num_citations": "3\n", "authors": ["1535"]}
{"title": "Has time stood still in Requirements Engineeirng\n", "abstract": " Since the inception of requirements engineering in the 1970s, most requirements engineering research has been devoted to techniques of modeling and specification of requirements [1]. Also, since the 1980s we have been doing requirements acquisition where we have developed dozens of different techniques, each shown to be effective in different situations. And yet, most requirements analysts do not use them, instead we keep using the same old techniques in projects to elicit, acquire, and discover our customer\u2019s requirements. However, since the 1970s and 1980s, a major shift is currently taken place in how requirements engineering tasks needs to be approached. This shift is not only related to changes in globalization and distribution of software development; web services and virtualization of application services, but also to changes in economic activities and the merge of traditional industries and\u00a0\u2026", "num_citations": "3\n", "authors": ["1535"]}
{"title": "Managing quality requirements in software product development\n", "abstract": " Software product development companies experience different challenges in managing quality requirements compared to functional requirements. In this context, quality requirements are defined as requirements that describe a restriction on the system, and specify how well the system performs its functions. In a market\u2013driven development context with large markets, potential customers, and strong competitors push the software product development companies to release the software product to a certain market segment at the right time with higher level of quality than the competitors.", "num_citations": "3\n", "authors": ["1535"]}
{"title": "Addressing model complexity in automotive system development: selection of system model elements for allocation of requirements\n", "abstract": " Modern automotive embedded systems are developed by Original Equipment Manufacturers (OEM) together with multiple suppliers. A key problem for a supplier is to allocate an OEM's requirements specification to their own subsystem design. This is a difficult manual task especially on complex systems and it requires expert knowledge about the system design. To address this problem, this paper presents a design science research to develop and evaluate a Requirements Allocation Assistant tool (RAA). The tool provides functionality to search through and filter requirements and system models to enable efficient requirements allocation even in the presence of complexity. RAA is built on top of the EATOP/Eclipse framework using EAST-ADL as system modelling language. The tool was evaluated and validated during a qualitative usability study with 17 engineers active in the Swedish automotive industry. Key\u00a0\u2026", "num_citations": "2\n", "authors": ["1535"]}
{"title": "A prototype tool for QUPER to support release planning of quality requirements\n", "abstract": " A prototype tool for QUPER to support release planning of quality requirements LUND UNIVERSITY LUND UNIVERSITY LIBRARIES Lund University Lund University Publications LUND UNIVERSITY LIBRARIES Register publications | Statistics | Marked list 0 | Saved searches planning of quality requirements Berntsson Svensson, Richard LU ; Lindberg Parker, Pontus and Regnell, Bj\u00f6rn LU (2011) Fifth International Workshop on Software Product Management Mark Links Research Portal page Google Scholar find title Please use this url to cite or link to this publication: https://lup.lub.lu.se/record/2167807 Details BibTeX author Berntsson Svensson, Richard LU ; Lindberg Parker, Pontus and Regnell, Bj\u00f6rn LU organization Department of Computer Science Software Engineering-lup-obsolete (research group) ELLIIT: the \u2026", "num_citations": "2\n", "authors": ["1535"]}
{"title": "Toward Becoming a Data-Driven Organization: Challenges and Benefits\n", "abstract": " Organizations are looking for ways to harness the power of big data and to incorporate the shift that big data brings into their competitive strategies in order to seek competitive advantage and to improve their decision making by becoming data-driven organizations. Despite the potential benefits to be gained from becoming data-driven, the number of organizations that efficiently use it and successfully transform into data-driven organizations stays low. The emphasis in the literature has mostly been technology oriented with limited attention paid to the organizational challenges it entails. This paper presents an empirical study that investigates the challenges and benefits faced by organizations when moving toward becoming a data-driven organization. Data were collected through semi-structured interviews with 15 practitioners from nine software developing companies. The study identifies 49 challenges an\u00a0\u2026", "num_citations": "1\n", "authors": ["1535"]}
{"title": "Evaluating the effects of different requirements representations on writing test cases\n", "abstract": " [Context and Motivation] One must test a system to ensure that the requirements are met, thus, tests are often derived manually from requirements. However, requirements representations are diverse; from traditional IEEE-style text, to models, to agile user stories, the RE community of research and practice has explored various ways to capture requirements. [Question/problem] But, do these different representations influence the quality or coverage of test suites? The state-of-the-art does not provide insights on whether or not the representation of requirements has an impact on the coverage, quality, or size of the resulting test suite. [Results] In this paper, we report on a family of three experiment replications conducted with 148 students which examines the effect of different requirements representations on test creation. We find that, in general, the different requirements representations have no statistically\u00a0\u2026", "num_citations": "1\n", "authors": ["1535"]}
{"title": "Successful Software Projects and Products: A quantitative study\n", "abstract": " Successful or failed software projects have been discussed in literature for many years. Successful software projects are often defined as meeting business objectives, deliver on time and within budget, and meeting requirements. Different factors that contribute to software project success have been identified in the literature. Some of the most common factors that lead to software project success are: user involvement, management support, realistic requirements, and having good estimations. However, there are different opinions about what a successful software project is. Linberg found in a study that managers had a different perception from software practitioners (developers, testers etc.) about what a successful software project is. Since there are different perceptions of what a successful project is among different roles in software development, there may be differences from other perspectives too. This observation relates to the overall research questions in the thesis: Could there be different perceptions about what success factors are for software projects among different countries and customersupplier relationships? Do people from different countries have different perceptions about what success factors are for software products? This study investigated if there are any differences and similarities between Swedish and Australian companies. In addition, a comparison between bespoke and market driven and bespoke and in-house customersupplier relationships was made. The result shows that there are differences of which factors that lead to software project success among the two countries as well as between different types of customer\u00a0\u2026", "num_citations": "1\n", "authors": ["1535"]}