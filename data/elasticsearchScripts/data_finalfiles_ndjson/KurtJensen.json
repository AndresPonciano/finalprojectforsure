{"title": "Coloured Petri nets: basic concepts, analysis methods and practical use\n", "abstract": " This book presents a coherent description of the theoretical and practical aspects of Coloured Petri Nets (CP-nets or CPN). It shows how CP-nets have been de veloped-from being a promising theoretical model to being a full-fledged lan guage for the design, specification, simulation, validation and implementation of large software systems (and other systems in which human beings and/or com puters communicate by means of some more or less formal rules). The book contains the formal definition of CP-nets and the mathematical theory behind their analysis methods. However, it has been the intention to write the book in such a way that it also becomes attractive to readers who are more interested in applications than the underlying mathematics. This means that a large part of the book is written in a style which is closer to an engineering textbook (or a users' manual) than it is to a typical textbook in theoretical computer science. The book consists of three separate volumes. The first volume defines the net model (ie, hierarchical CP-nets) and the basic concepts (eg, the different behavioural properties such as deadlocks, fair ness and home markings). It gives a detailed presentation of many small exam ples and a brief overview of some industrial applications. It introduces the for mal analysis methods. Finally, it contains a description of a set of CPN tools which support the practical use of CP-nets.", "num_citations": "6517\n", "authors": ["1614"]}
{"title": "Coloured Petri nets: modeling and validation of concurrent systems\n", "abstract": " Coloured Petri Nets (CPN) is a graphical language for modelling and validating concurrent and distributed systems, and other systems in which concurrency plays a major role. The development of such systems is particularly challenging because of inherent intricacies like possible nondeterminism and the immense number of possible execution sequences. In this textbook Jensen and Kristensen introduce the constructs of the CPN modelling language and present the related analysis methods in detail. They also provide a comprehensive road map for the practical use of CPN by showcasing selected industrial case studies that illustrate the practical use of CPN modelling and validation for design, specification, simulation, verification and implementation in various application domains. Their presentation primarily aims at readers interested in the practical use of CPN. Thus all concepts and constructs are first informally introduced through examples and then followed by formal definitions (which may be skipped). The book is ideally suitable for a one-semester course at an advanced undergraduate or graduate level, and through its strong application examples can also serve for self-study. An accompanying website offers additional material such as slides, exercises and project proposals. Book website: http://www. cs. au. dk/CPnets/cpnbook/", "num_citations": "1742\n", "authors": ["1614"]}
{"title": "Coloured Petri Nets and CPN Tools for modelling and validation of concurrent systems\n", "abstract": " Coloured Petri Nets (CPNs) is a language for the modelling and validation of systems in which concurrency, communication, and synchronisation play a major role. Coloured Petri Nets is a discrete-event modelling language combining Petri nets with the functional programming language Standard ML. Petri nets provide the foundation of the graphical notation and the basic primitives for modelling concurrency, communication, and synchronisation. Standard ML provides the primitives for the definition of data types, describing data manipulation, and for creating compact and parameterisable models. A CPN model of a system is an executable model representing the states of the system and the events (transitions) that can cause the system to change state. The CPN language makes it possible to organise a model as a set of modules, and it includes a time concept for representing the time taken to execute\u00a0\u2026", "num_citations": "1515\n", "authors": ["1614"]}
{"title": "Coloured Petri nets and the invariant-method\n", "abstract": " In many systems a number of different processes have a similar structure and behaviour. To shorten system description and system analysis it is desirable to be able to treat such similar processes in a uniform and succinct way. In this paper it is shown how Petri nets can be generalized to allow processes to be described by a common subnet, without losing the ability to distinguish between them. Our generalization, called coloured Petri nets, is heavily influenced by predicate transition-nets introduced by H.J. Genrich and K. Lautenbach. Moreover our paper shows how the invariant-method, introduced for Petri nets by K. Lautenbach, can be generalized to coloured Petri nets.", "num_citations": "925\n", "authors": ["1614"]}
{"title": "Coloured Petri nets: A high level language for system design and analysis\n", "abstract": " This paper describes how Coloured Petri Nets (CP-nets) have been developed \u2014 from being a promising theoretical model to being a full-fledged language for the design, specification, simulation, validation and implementation of large software systems (and other systems in which human beings and/or computers communicate by means of some more or less formal rules).             First CP-nets are introduced by means of a small example and a formal definition of their structure and behaviour is presented. Then we describe how to extend CP-nets by a set of hierarchy constructs (allowing a hierarchical CP-net to consist of many different subnets, which are related to each other in a formal way). Next we describe how to analyse CP-nets, how to support them by various computer tools, and we also describe some typical applications. Finally, a number of future extensions are discussed (of the net model and the\u00a0\u2026", "num_citations": "851\n", "authors": ["1614"]}
{"title": "An introduction to the theoretical aspects of coloured petri nets\n", "abstract": " This paper presents the basic theoretical aspects of Coloured Petri Nets (CP-nets or CPN). CP-nets have been developed, from being a promising theoretical model, to being a full-fledged language for the design, specification, simulation, validation and implementation of large software systems (and other systems in which human beings and/or computers communicate by means of some more or less formal rules). The paper contains the formal definition of CP-nets and their basic concepts (e.g., the different dynamic properties such as liveness and fairness). The paper also contains a short introduction to the analysis methods, in particular occurrence graphs and place invariants.             The development of CP-nets has been driven by the desire to develop a modelling language \u2014 at the same time theoretically well-founded and versatile enough to be used in practice for systems of the size and complexity\u00a0\u2026", "num_citations": "605\n", "authors": ["1614"]}
{"title": "The practitioner\u2019s guide to coloured Petri nets\n", "abstract": " Coloured Petri nets (CP-nets or CPNs) provide a framework for the design, specification, validation, and verification of systems. CP-nets have a wide range of application areas and many CPN projects have been carried out in industry, eg, in the areas of communication protocols, operating systems, hardware designs, embedded systems, software system designs, and business process re-engineering. Design/CPN is a graphical computer tool supporting the practical use of CP-nets. The tool supports the construction, simulation, and functional and performance analysis of CPN models. The tool is used by more than four hundred organisations in forty different countries\u2013including one hundred commercial companies. It is available free of charge, also for commercial use. This paper provides a comprehensive road map to the practical use of CP-nets and the Design/CPN tool. We give an informal introduction to the basic concepts and ideas underlying CP-nets. The key components and facilities of the Design/CPN tool are presented and their use illustrated. The paper is self-contained and does not assume any prior knowledge of Petri nets and CP-nets nor any experience with the Design/CPN tool.", "num_citations": "512\n", "authors": ["1614"]}
{"title": "Hierarchies in coloured Petri nets\n", "abstract": " The paper shows how to extend Coloured Petri Nets with a hierarchy concept. The paper proposes five different hierarchy constructs, which allow the analyst to structure large CP-nets as a set of interrelated subnets (called pages). The paper discusses the properties of the proposed hierarchy constructs, and it illustrates them by means of two examples. The hierarchy constructs can be used for theoretical considerations, but their main use is to describe and analyse large real-world systems. All of the hierarchy constructs are supported by the editing and analysis facilities in the CPN Palette tool package (see [1\u20135]).", "num_citations": "479\n", "authors": ["1614"]}
{"title": "CPN tools for editing, simulating, and analysing coloured Petri nets\n", "abstract": " CPN Tools is a tool for editing, simulating and analysing Coloured Petri Nets. The GUI is based on advanced interaction techniques, such as toolglasses, marking menus, and bi-manual interaction. Feedback facilities provide contextual error messages and indicate dependency relationships between net elements. The tool features incremental syntax checking and code generation which take place while a net is being constructed. A fast simulator efficiently handles both untimed and timed nets. Full and partial state spaces can be generated and analysed, and a standard state space report contains information such as boundedness properties and liveness properties. The functionality of the simulation engine and state space facilities are similar to the corresponding components in Design/CPN, which is a widespread tool for Coloured Petri Nets.", "num_citations": "468\n", "authors": ["1614"]}
{"title": "An introduction to the practical use of coloured petri nets\n", "abstract": " The development of Coloured Petri Nets (CP-nets or CPN) has been driven by the desire to develop a modelling language - at the same time theoretically well-founded and versatile enough to be used in practice for systems of the size and complexity found in typical industrial projects. To achieve this, we have combined the strength of Petri nets with the strength of programming languages. Petri nets provide the primitives for describing synchronisation of concurrent processes, while programming languages provide the primitives for definition of data types and manipulation of their data values.             The paper focuses on the practical use of Coloured Petri Nets. It introduces the basic ideas behind the CPN language, and it illustrates how CPN models can be analysed by means of simulation, state spaces and condensed state spaces. The paper also describes how CP-nets can be extended with a time\u00a0\u2026", "num_citations": "303\n", "authors": ["1614"]}
{"title": "A brief introduction to coloured petri nets\n", "abstract": " Coloured Petri Nets (CP-nets or CPN) is a graphical oriented language for design, specification, simulation and verification of systems. It is in particular well-suited for systems in which communication, synchronisation and resource sharing are important. Typical examples of application areas are communication protocols, distributed systems, imbedded systems, automated production systems, work flow analysis and VLSI chips.             The development of CP-nets has been driven by the desire to develop a modelling language \u2014 at the same time theoretically well-founded and versatile enough to be used in practice for systems of the size and complexity we find in typical industrial projects. To achieve this, we have combined the strength of Petri nets with the strength of programming languages. Petri nets provide the primitives for the description of the synchronisation of concurrent processes, while\u00a0\u2026", "num_citations": "300\n", "authors": ["1614"]}
{"title": "High-level Petri nets\n", "abstract": " This paper combines two closely related net models, predicate/transition nets and coloured Petri nets, into a new net model called high-level Petri nets. The new model is intended to combine the qualities of the two old models into a single formalism, and we propose in future to use high-level Petri nets instead of both predicate/transition nets and coloured Petri nets.", "num_citations": "159\n", "authors": ["1614"]}
{"title": "Application of coloured petri nets in system development\n", "abstract": " Coloured Petri Nets (CP-nets or CPNs) and their supporting computer tools have been used in a wide range of application areas such as communication protocols, software designs, and embedded systems. The practical application of CP-nets has also covered many phases of system development ranging from requirements to design, validation, and implementation. This paper presents four case studies where CP-nets and their supporting computer tools have been used in system development projects with industrial partners. The case studies have been selected such that they illustrate different application areas of CP-nets in various phases of system development.", "num_citations": "129\n", "authors": ["1614"]}
{"title": "Towards reachability trees for high-level Petri nets\n", "abstract": " High-level Petri nets [I, 4, 5, 6, 9] have been introduced as a powerful net type, by which it is possible to handle rather complex systems in a succinct and manageable way. The success of high-level Petri nets is undebatable when we speak about description, but there is still much work to be done to establish the necessary analysis methods. In [1, 4, 5] it is shown how to generalize the concept of place-invariants (s-invariants), from place/transition-nets (PT-nets) to high-level Petri nets (HL-nets). Analogously,[9] shows how to generalize transition-invariants (t-invariants). Our present paper constitutes the first steps towards a generalization of reachability trees, which is one of the other important analysis methods known for PT-nets [2, 7, 8]. The central idea in our paper is the observation, that HL-nets often possess classes of equivalent markings. As an example the HL-net describing the five dining philosophers in [4\u00a0\u2026", "num_citations": "123\n", "authors": ["1614"]}
{"title": "Reachability trees for high-level Petri nets\n", "abstract": " High-level Petri nets have been introduced as a powerful net type by which it is possible to handle rather complex systems in a succinct and manageable way. The success of high-level Petri nets is undebatable when we speak about description, but there is still much work to be done to establish the necessary analysis methods. In other papers it is shown how to generalize the concept of place- and transition invariants from place/transition nets to high-level Petri nets. Our present paper contributes to this with a generalization of reachability trees, which is one of the other important analysis methods known for place/transition nets.", "num_citations": "121\n", "authors": ["1614"]}
{"title": "Condensed state spaces for symmetrical coloured Petri nets\n", "abstract": " This paper deals with state spaces. A state space is a directed graph with a node for each reachable state and an arc for each possible state change. We describe how symmetries of the modelled system can be exploited to obtain much more succinct state space analysis. The symmetries induce equivalence classes of states and equivalence classes of state changes. It is then possible to construct a condensed state space where each node represents an equivalence class of states while each arc represents an equivalence class of state changes. Such a condensed state space is often much smaller than the full state space and it is also much faster to construct. Nevertheless, it is possible to use the condensed state space to verify the same kind of behavioural properties as the full state space. hence, we do not lose analytic power.               We define state spaces and condensed state spaces for a language\u00a0\u2026", "num_citations": "111\n", "authors": ["1614"]}
{"title": "Colored Petri nets: a graphical language for formal modeling and validation of concurrent systems\n", "abstract": " Formal executable models enable systematic evaluation of system designs prior to implementation and deployment.", "num_citations": "109\n", "authors": ["1614"]}