{"title": "Comprehensive dictionary of electrical engineering\n", "abstract": " Succinct yet comprehensive coverage of the most important terms, acronyms, and definitions made the first edition of the Comprehensive Dictionary of Electrical Engineering a bestseller. Recent advances in many disciplines of this rapidly growing field have made necessary a new edition of this must-have reference. This authoritative lexicon includes more than 1500 additional terms, now supplying more than 11,000 total terms gathered by a stellar international panel of the world's leading experts, compiled from CRC's immensely popular and highly respected handbooks, and accompanied by more than 120 tables and illustrations.", "num_citations": "136\n", "authors": ["488"]}
{"title": "Transient fault tolerance in digital systems\n", "abstract": " It is hard to shield systems effectively from transient faults (fault avoidance techniques). So some other means must be employed to assure appropriate levels of transient fault tolerance (insensitivity to transient faults). They are based on fault-masking and fault recovery ideas. Having analyzed this problem, the author identifies critical design points and outlines some practical solutions that refer to efficient on-line detectors (detecting errors during the system operation) and error handling procedures. This framework provides a basis for understanding transient fault problems in digital systems. It can be helpful in selecting optimum techniques to mask or eliminate transient fault effects in developed systems.< >", "num_citations": "113\n", "authors": ["488"]}
{"title": "Software-based self-testing of microprocessors\n", "abstract": " Hardware-based self-testing techniques have limitations in the performance and area overhead. Those can be eliminated using software-based self-testing. In this paper, we investigate capabilities of the microprocessor testing by software procedures taking into account system environment constraints. Special attention is paid to microarchitectural features of pipelined and superscalar processors. New test strategies are proposed combining deterministic and pseudorandom approaches supported by the available hardware mechanisms (test registers, on-chip monitoring circuitry, etc.), which improve testability features. The test effectiveness is studied using various test coverage measures (stimuli, circuit stressing), statistical and fault injection tools. To demonstrate the utility of the proposed methodology, it has been applied to commercial microprocessors and experimental results are presented in this paper.", "num_citations": "42\n", "authors": ["488"]}
{"title": "Detection of control flow errors using signature and checking instructions\n", "abstract": " An approach is presented to the online detection of control flow errors caused by transient and intermittent faults in microprocessor systems. It is based on the idea of signatured instruction streams. Signatures are embedded into the program memory using the monitored processor instructions. Compared with existing techniques, the presented approach is universal and can be easily implemented using off-the-shelf programmable array logic and LCA circuits. The hardware overhead ranges from one to several chips for microprocessors with 8-bit and 16-bit data buses. Program memory overhead is 10-20% and quite often no extra memory chip is required. A special software module has been developed to embed signatures and checkpoints into application programs.< >", "num_citations": "42\n", "authors": ["488"]}
{"title": "In-system testing of cache memories\n", "abstract": " Caches embedded in microprocessor systems are implemented with limited observability and controllability. Hence they create many problems in testing. This paper gives a methodology of developing user test programs for data and instruction caches with various organization.", "num_citations": "36\n", "authors": ["488"]}
{"title": "Experiences with software implemented fault injection\n", "abstract": " The paper deals with the problem of evaluating system dependability using software implemented fault injectors (SWIFIs). In particular we describe methods of improving functionality and performance in SWIFI injectors. We discuss problems related to experiment scheduling and simulation result interpretation. The presented considerations base on our long experience with fault injection tools. They are illustrated with some practical examples.", "num_citations": "31\n", "authors": ["488"]}
{"title": "Software implemented fault inserters\n", "abstract": " The paper deals with the problem of checking system fault susceptibility in simulation experiments. Three fault simulators are presented. They are based on the idea of disturbing system states (registers, memory locations). Two systems deal with Win 32 environment and one with Linux. They differ in implementation and functional capabilities. The use of fault injection in system dependability evaluation is illustrated in a sample of experiments.", "num_citations": "29\n", "authors": ["488"]}
{"title": "Investigating software testing and maintenance reports: Case study\n", "abstract": " ContextAlthough many papers have been published on software development and defect prediction techniques, problem reports in real projects quite often differ from those described in the literature. Hence, there is still a need for deeper exploration of case studies from industry.ObjectiveThe aim of this study is to present the impact of fine-grained problem reports on improving evaluation of testing and maintenance processes. It is targeted at projects involving several releases and complex schemes of problem handling. This is based on our experience gained while monitoring several commercial projects.MethodExtracting certain features from detailed problem reports, we derive various measures and present analysis models which characterize and visualize the effectiveness of testing and problem resolution processes. The considered reports describe types of problems (e.g. defects), their locations in project\u00a0\u2026", "num_citations": "25\n", "authors": ["488"]}
{"title": "Dependability evaluation with fault injection experiments\n", "abstract": " In the paper we evaluate program susceptibility to hardware faults using fault injector. The performed experiments cover many applications with different features. The effectiveness of software techniques improving system dependability is analyzed. Practical aspects of embedding these techniques in real programs are discussed. They have significant impact on the final fault robustness.", "num_citations": "25\n", "authors": ["488"]}
{"title": "Energy efficiency trade-off between duty-cycling and wake-up radio techniques in IoT networks\n", "abstract": " Energy consumption has become dominant issue for wireless internet of things (IoT) networks with battery-powered nodes. The prevailing mechanism allowing to reduce energy consumption is duty-cycling. In this technique the node sleeps most of the time and wakes up only at selected moments to extend the lifespan of nodes up to 5\u201310\u00a0years. Unfortunately, the scheduled duty-cycling technique is always a trade-off between energy consumption and delay in delivering data to the target node. The delay problem can be alleviated with an additional wake-up radio (WuR) channel. In the paper we present original power consumption models for various duty-cycling schemes. They are the basis for checking whether WuR approach is competitive with scheduled duty-cycling techniques. We determine the maximum energy level that an additional wake-up radio can consume to become a reasonable alternative\u00a0\u2026", "num_citations": "22\n", "authors": ["488"]}
{"title": "Improving software based self-testing for cache memories\n", "abstract": " Testing cache memories within the computer system environment is based on using processor instructions, which involve cache operations intermixed with RAM memory accesses. Applying test patterns to the cache and checking its behavior needs sophisticated instruction sequences. We simplify these sequences by means of the available on-chip performance monitors as well as built-in on-line error detectors. This new method is compared with classical approaches.", "num_citations": "22\n", "authors": ["488"]}
{"title": "Analyzing fault susceptibility of ABS microcontroller\n", "abstract": " In real-time safety-critical systems, it is important to predict the impact of faults on their operation. For this purpose we have developed a test bed based on software implemented fault injection (SWIFI). Faults are simulated by disturbing the states of registers and memory cells. Analyzing reactive and embedded systems with SWIFI tools is a new challenge related to the simulation of an external environment for the system, designing test scenarios and result qualification. The paper presents our original approach to these problems verified for an ABS microcontroller. We show fault susceptibility of the ABS microcontroller and outline software techniques to increase fault robustness.", "num_citations": "20\n", "authors": ["488"]}
{"title": "Enhancing fault injection testbench\n", "abstract": " Fault injection techniques are widely used in system dependability evaluation. In the paper we deal with the problem of enhancing classical fault injection tools in two aspects: improvement of experiment effectiveness and result analysis capabilities. In particular we discuss the problem of distributing fault injection processes within a computer network and collecting the simulation results in a data warehouse with data mining capabilities. The presented considerations are illustrated with some experimental results performed with simulation tools developed in our institute", "num_citations": "19\n", "authors": ["488"]}
{"title": "On-line monitoring of computer systems\n", "abstract": " The paper deals with the problem of on-line diagnosis of computer systems. It is based on three monitoring techniques related to system event logging, performance and resource usage measurements. This approach is illustrated with practical results.", "num_citations": "19\n", "authors": ["488"]}
{"title": "Analyzing the effectiveness of fault hardening procedures\n", "abstract": " The paper addresses the problem of evaluating the effectiveness of fault hardening procedures based on software redundancy. We analyze the time and memory overhead of fine-grained and coarse-grained error detection and correction techniques. We check the impact of the involved overhead on fault coverage. The presented considerations are illustrated with fault injection experimental results.", "num_citations": "19\n", "authors": ["488"]}
{"title": "Developing fault injection environment for complex experiments\n", "abstract": " The paper addresses the problem of creating a comprehensive fault injection environment, which integrates and improves various simulation and supplementary functions. This is illustrated with experimental results.", "num_citations": "18\n", "authors": ["488"]}
{"title": "Evaluation of transient hazards in microprocessor controllers\n", "abstract": " The paper is concerned with the analysis of transient faults in microprocessor based controllers. Transient faults (physical level) may cause fatal, steady state or transient system failures. Fatal failures (resulting from hardware damage) can be avoided with special protection circuits, transient failures last for short periods and in most microprocessor controllers are not critical. Hence, we deal with steady state failures ie failures of long duration which can be removed logically by recovery procedures. These failures are considered at the program level and are called transient hazards. For various hazards (false loops, trap states, deadlocks) we estimate the probability of their occurence. The presented approach is a theoretical transient fault analysis of a practical, useful nature.These failures result from false transitions of the controller into so called trap states or invalid state subgraphs. The trap state is the state from which it is difficult to go to any other state. The controller can leave this state at a particular situation eg issuing reset signal. Examples of microprocessor trap states are: HALT, Low power mode, Wait loop,(when exit conditions are not satisfied). Trap states exist also in I/O cir-cuits and support logic e. g. 17 le mode state, invalid operation mode [9]. The invalid state subgraph is a generalized case of the trap state. It is relevant to situations in which the controller executes a false sequence of operations (e. g. false loop) and cannot return to valid operation. The problems related to transient faults have been reported in the research literature. However, most papers deal with system structures tolerating transient faults eg 11, 2, 3, 5, 6). The\u00a0\u2026", "num_citations": "18\n", "authors": ["488"]}
{"title": "Monitoring event logs within a cluster system\n", "abstract": " Resolving complex problems on cluster systems we have to take into account threats related to system dependability. We faced this problem in relevance to the developed project of the KASKADA platform targeted at managing heavy multimedia processing in a supercomputer environment (Galera cluster in Intel technology). Having analyzed the experience of other authors in the area of cluster dependability analysis and anomaly predictions we have found the need of developing appropriate strategy of monitoring the KASKADA platform within the Galera cluster. In the chapter we deal with the problem of exploring the event logs generated within the nodes of the platform. The main goal was to study the specificity of the platform operational image in the event space, explore the morphology and informative contents of logs and develop methods of anomaly detection. For this purpose special tools have been\u00a0\u2026", "num_citations": "15\n", "authors": ["488"]}
{"title": "Software implementation of explicit DMC algorithm with improved dependability\n", "abstract": " The paper presents an approach to improve the dependability of software implementation of the explicit DMC (Dynamic Matrix Control) Model Predictive Control (MPC) algorithm. The investigated DMC algorithm is implemented for a control system of a rectification column - a process with strong cross-couplings and significant time delays. The control plant has two manipulated inputs and two outputs. The fault sensitivity of the proposed implementation is verified in experiments with a software implemented fault injector. The experimental results prove the efficiency of proposed software improvements.", "num_citations": "15\n", "authors": ["488"]}
{"title": "Developing data warehouse for simulation experiments\n", "abstract": " The paper deals with the problem of creating a specialized data warehouse for collecting and analyzing experimental results, which relate to system dependability evaluation using fault injections into running programs. The developed data warehouse with embedded data mining capabilities facilitates to identify factors influencing fault susceptibility of analyzed applications. The paper presents the developed system, and illustrates its usefulness with a sample of experimental results.", "num_citations": "15\n", "authors": ["488"]}
{"title": "Experimental evaluation of fault handling mechanisms\n", "abstract": " The paper deals with the problem of enhancing fault handling capabilities (detection, masking, recovery) in COTS based systems by means of various software techniques. The effectiveness of this approach is analyzed using fault insertion testbed. Discussing test results, we concentrate on fault propagation effects and experiment tuning issues.", "num_citations": "15\n", "authors": ["488"]}
{"title": "Multidimensional monitoring of computer systems\n", "abstract": " This paper presents a new approach to detecting abnormal situations in computer systems basing on an integrated monitoring, which covers performance parameters as well as other operational reports or logs. It takes into account different time perspectives and analysis goals. The presented methodology was implemented in Windows based systems. Its usefulness has been illustrated with some examples and statistics related to real production systems.", "num_citations": "14\n", "authors": ["488"]}
{"title": "Error recovery problems\n", "abstract": " The paper deals with the problem of handling detected faults in computer systems. We present software procedures targeted at fault detection, fault masking and error recovery. They are discussed in the context of standard PC Windows and Linux environments. Various aspects of checkpointing and recovery policies are studied. The presented considerations are illustrated with some experimental results obtained in our fault injection testbench.", "num_citations": "14\n", "authors": ["488"]}
{"title": "Improving fault handling software techniques\n", "abstract": " The paper presents the new software library supporting development of the fault-robust applications. The main goals of the proposed software hardening mechanisms are: usage simplicity for the programmer, independence from the development tool, effectiveness in terms of fault coverage, low static and dynamic overheads. The paper describes implemented software mechanisms and discusses their effectiveness verified with fault injection experiments.", "num_citations": "13\n", "authors": ["488"]}
{"title": "An approach to distributed fault injection experiments\n", "abstract": " Software implemented fault injection technique is gaining much interest in evaluating system dependability. For complex software applications fault injection experiments take a lot of time. In the paper we present an innovative approach to fault injection by performing it in LAN distributed environment. The paper presents the system architecture, task scheduling and the analysis of its effectiveness. The presented considerations are illustrated with practical results.", "num_citations": "13\n", "authors": ["488"]}
{"title": "Using software implemented fault inserter in dependability analysis\n", "abstract": " We investigate program susceptibility to hardware faults in Win32 environment. For this purpose we use the software implemented fault injector FITS. We analyze natural fault resistivity of COTS systems and the effectiveness of various software techniques improving system dependability. The problems of experiment tuning and result interpretation are discussed in context of a wide spectrum of applications.", "num_citations": "13\n", "authors": ["488"]}
{"title": "Tracing fault effects in system environment\n", "abstract": " The paper presents a new tool (FITS) for fault insertion in Win32 environment. Using processor trace mode operation we assure high accuracy in analyzing fault effects in the system. Moreover we provide some supplementary functions which simplify this process. The productivity of FITS have been illustrated in many experimental results related to the analysis of system sensitivity to hardware faults and evaluation of developed error detection and fault tolerance methods.", "num_citations": "13\n", "authors": ["488"]}
{"title": "LRFI\u2013Fault Injection Tool for Testing Mobile Software\n", "abstract": " Developing software for mobile platforms we face the problem of dealing with various erroneous situations, transient faults, component incompatibilities which influence their operations. This results in the need of embedding error detection mechanisms and handling them software procedures. This problem has been appreciated by Samsung. As the consequence of this need we have developed a special tool (LRFI) which allows simulating various fault effects and observe their propagation as well as the effectiveness of handling them in real mobile products of Samsung. The paper outlines the capabilities of fault injection technique and presents an original tool dedicated for mobile environment. Some practical experience with this tool has been also reported.", "num_citations": "12\n", "authors": ["488"]}
{"title": "Software implemented fault detection and fault tolerance mechanisms. Part 1, Concepts and algorithms\n", "abstract": " The paper discusses the problem of eliminating hardware fault effects by means of software. We describe various error detection and fault handling software schemes, show their limitations and capabilities. On the basis of this analysis, we propose original fault handling procedures, which integrate hardware and software mechanisms. Special attention is paid to exception handling and error recovery procedures. The presented solutions have been verified for a wide spectrum of applications running on IBM PC environment.", "num_citations": "12\n", "authors": ["488"]}
{"title": "Analyzing fault effects in fault insertion experiments\n", "abstract": " Addresses the problem of evaluating system sensitivity to hardware faults. For this purpose the authors use a software implemented fault injector with extended statistical capabilities (FITS). The main contribution of the paper is the formulation of basic factors influencing system dependability and checking them in experiments. These experiments have been performed on an IBM PC platform.", "num_citations": "11\n", "authors": ["488"]}
{"title": "Software implemented fault detection and fault tolerance mechanisms. Part 2, Experimental evaluation of error coverage\n", "abstract": " The paper deals with the problem of evaluating the impact of hardware faults on program execution. For this purpose we use software implemented fault injector supplemented with various statistical tools. It simulates faults by disturbing CPU registers and memory cells in the analysed system. Using this tool we analyse fault effects in ordinary applications and in applications with embedded fault detection and fault tolerance mechanisms. The paper presents experimental results for a wide spectrum of applications and different fault hardening techniques. It outlines some critical problems and discusses the effectiveness of the proposed solutions.", "num_citations": "10\n", "authors": ["488"]}
{"title": "Fault injection stress strategies in dependability analysis\n", "abstract": " The paper deals with the problem of testing computer system\u2019s susceptibility to hardware faults by means of software implemented fault injectors. Basing on our experience with fault injection techniques we present various strategies of fault stressing in relevance to fault impact analysis in the function of the application input data profile, fault injection profile in time and space, resource activities etc. We discuss the problem of test result qualification and significance. Fault hardening at the software level is also outlined. The considerations presented are illustrated with numerous experimental results obtained in Windows and Linux environments.", "num_citations": "10\n", "authors": ["488"]}
{"title": "Analysing problem handling schemes in software projects\n", "abstract": " ContextAlthough many papers have been published on software development and maintenance processes, there is still a need for deeper exploration of software repositories related to real projects to evaluate these processes.ObjectiveThe aim of this study is to present and evaluate different schemes of handling problems (bugs) during software development and maintenance. It is based on exploring information comprised in various software repositories.MethodHaving analysed the contents of software repositories we have introduced a graph model describing problem handling processes and a scheme of analysing the effectiveness of these processes. This analysis is targeted at structural, throughput and timing aspects. The presented methodology has been verified on real data comprised in open source and commercial projects. Moreover, having identified some drawbacks and anomalies, we point out\u00a0\u2026", "num_citations": "9\n", "authors": ["488"]}
{"title": "Holistic processing and exploring event logs\n", "abstract": " Computer systems generate large amounts of event logs related to various operational aspects (positive and negative). Extracting from them useful information (e.g. targeted at dependability and resilience issues) is a challenging problem widely discussed in the literature and still needing deeper studies. We have developed a new holistic approach using enhanced event classification (based on original text mining algorithms) combined with multidimensional statistical analysis of various properties in vocabulary (words, phrases), time, spatial, local and global correlations. It has been incorporated in the developed tools and verified on event data sets collected from different computers.", "num_citations": "9\n", "authors": ["488"]}
{"title": "Multidimensional log analysis\n", "abstract": " Various event and performance logs are available in computer systems. They are considered as useful data source characterizing system operational profiles and possible anomalies. In the literature different classes of logs are usually analyzed separately and targeted at some specific problems. We have developed analysis schemes and tools which facilitate studying these logs in a holistic way taking into account various observation perspectives and cross relations as well as different analysis goals. This approach has been verified for some computer systems of the University and industry.", "num_citations": "9\n", "authors": ["488"]}
{"title": "Creating a knowledge database on system dependability and resilience\n", "abstract": " The paper deals with the problem of creating a knowledge database on system dependability and resilience, created on the basis of available system and application logs. Special tools to collect and analyse these data from many systems have been developed. Taking into account a wide spectrum of various logs we explore them locally and globally. This allowed for identification of characteristics of normal operation and anomalous behaviour. A lot of attention is paid to the problem of selecting measures to identify symptoms characterising system operation and their usefulness in dependability and resilience evaluation or prediction. The concepts presented are illustrated with experience gained during monitoring of real systems.", "num_citations": "9\n", "authors": ["488"]}
{"title": "Testing distributed abs system with fault injection\n", "abstract": " The paper deals with the problem of adapting software implemented fault injection technique (SWIFI) to evaluate dependability of reactive microcontroller systems. We present an original methodology of disturbing controller operation and analyzing fault effects taking into account reactions of the controlled object and the impact of the system environment. Faults can be injected randomly (in space and time) or targeted at the most sensitive elements of the controller to check it at high stresses. This approach allows identifying rarely encountered problems, usually missed in classical approaches. The developed methodology has been used successfully to verify dependability of ABS system. Experimental results are commented in the paper.", "num_citations": "9\n", "authors": ["488"]}
{"title": "On improving dependability of the numerical GPC algorithm\n", "abstract": " The paper studies the dependability of software implementation of the numerical Generalized Predictive Control (GPC) Model Predictive Control (MPC) algorithm. The algorithm is implemented for a control system of a multivariable chemical reactor - a process with strong cross-couplings. Fault sensitivity of the proposed implementations is verified in experiments with a software implemented fault injector. Experimental methodology of disturbing the software implementation of the control algorithm is presented. The impact of faults on the quality of the controller performance is analysed and techniques improving the dependability of the algorithm implementation are proposed. The experimental results prove the efficiency of the software improvements.", "num_citations": "9\n", "authors": ["488"]}
{"title": "\" In system\" transparent autodiagnostics of RAMs\n", "abstract": " In this paper we present an original technique of testing classical RAMs (without BIST) in real system environment. The developed testing methodology allows to cover a large class of faults including pattern sensitivity and dynamic faults. An important feature of the presented approach is test transparency which assures that at the end of the test the contents of the RAM are equal to its initial contents (before testing). This technique is especially useful for periodic autodiagnostic procedures in embedded and multiprocessor systems. It has been also extended for cache and dual port RAMs.< >", "num_citations": "9\n", "authors": ["488"]}
{"title": "Design of reactive security mechanisms in time-triggered embedded systems\n", "abstract": " In the paper we discuss how a single node communication interface failure in a time-triggered system can be used to model a DoS-type attack. More so, we present a design approach based on active detection of common DoS characteristics, which can serve as a template for attack detection. This approach is feasible in time-triggered systems because of the periodic and deterministic characteristics either at the fieldbus communication or application level. We support our discussion with an example case study of a vehicle braking system implementing time-triggered messages disturbed by fault injection.", "num_citations": "8\n", "authors": ["488"]}
{"title": "Precipitating innovations by academia and industry feedback\n", "abstract": " Developments of technologies play an important role in success and competitiveness of firms. This can be assured by means of innovation, which improves quality of products and services, expends the markets and attracts customers. This paper outlines factors having direct impact on enterprise innovativeness. Referencing to classical approaches we show some limitations and negligence of the widely accepted innovation indicators used in various statistics. In most considered models of innovation the role of academia is underestimated. We deal with this problem in the paper and claim the need of creating innovation feedback between academia and industry. The presented considerations are related to our experience in cooperation with industry.", "num_citations": "8\n", "authors": ["488"]}
{"title": "A tool for databus safety analysis using fault injection\n", "abstract": " In real-time safety-critical systems, it is important to predict the consequences of specific faults in databus logic and driver software on the safe operation of a databus. For this purpose we have developed a test-bench based on the TrueTime simulator extended by adding a fault injection capability, with new network models and fault modeling strategy. Faults are simulated by disturbing specified parameters of the databus model. In this paper, we present the modeling approach, the fault injection scenarios, and illustrate it with examples of the impact of the simulated faults on data throughput, message latency and bus scheduling for CAN and TTCAN networks.", "num_citations": "8\n", "authors": ["488"]}
{"title": "Analysing system susceptibility to faults with simulation tools\n", "abstract": " In the paper we present original fault simulation tools developed in our Institute. These tools are targeted at system dependability evaluation. They provide mechanisms for detailed and aggregated fault effect analysis. Based on our experience with testing various software applications we outline the most important problems and discuss a sample of simulation results.", "num_citations": "8\n", "authors": ["488"]}
{"title": "Evaluation of transient fault susceptibility in microprocessor systems\n", "abstract": " The paper addresses the problem of evaluating transient fault impact on COTS microprocessor systems. We present the problem of fault effect propagation from low logical to software and application levels. Such an analysis is needed to optimize error detection and correction mechanisms at hardware and software levels. For this purpose we use sophisticated fault injectors. The usefulness of the presented approach was proved in many experiments described in the paper. It may support hardware/software co-design.", "num_citations": "8\n", "authors": ["488"]}
{"title": "Experimental validation of fault detection and fault tolerance mechanisms\n", "abstract": " The paper deals with the problem of validating the effectiveness of hardware and software mechanisms decreasing system susceptibility to hardware faults. The validation process is based on the use of software implemented fault injector (FITS). The performed analysis concentrates on tuning the profile of faults and experiment set-ups. The presented simulation results are explained in context of the considered applications.", "num_citations": "8\n", "authors": ["488"]}
{"title": "Extensive testing of floating point unit\n", "abstract": " This paper addresses the problem of developing test programs for IEEE-754 and Intel x87-compliant floating point units (FPUs). Exhaustive testing is assured by a balanced mixture of pseudorandom, fault and application-oriented instruction sequences. Special tools have been used to manage the test monitoring and to optimize the fault coverage. Their usefulness was illustrated with experimental results. Some data related to the cost (in time and RAM space) of the developed tests are presented.", "num_citations": "8\n", "authors": ["488"]}
{"title": "Tracing fault effects in FPGA systems\n", "abstract": " FPGA based systems and concentrates on transient faults (induced by single event upsets\u2013SEUs) within the configuration memory of FPGA. An original method of detailed analysis of fault effect propagation is presented. It is targeted at microprocessor based FPGA systems using the developed fault injection technique. The fault injection is performed at HDL description level of the microprocessor using special simulators and developed supplementary programs. The proposed methodology is illustrated for soft PicoBlaze microprocessor running 3 programs. The presented results reveal some problems with fault handling at the software level.", "num_citations": "7\n", "authors": ["488"]}
{"title": "Dependability evaluation based on system monitoring\n", "abstract": " Recently dependability, maintainability and performance are becoming challenging issues for system designers and users. This results from the increasing complexity of hardware and software. In consequence these issues triggered various measurement based studies in the literature, in particular they relate to the detection or prediction of critical situations. Most published results are focused on restricted and fragmented problems encountered in the systems or applications considered by the authors eg (Daniel et al., 2008; Ganapathi & Patterson, 2005: Hoffmann et al., 2007; Li et al., 2006; Makanju et al. 2008). In contemporary computer systems various monitoring mechanisms are provided, usually they relate to event and performance monitoring (John & Eckhout, 2006; Simache & Kaaniche 2001; Stearley, 2004; Zhang 2008; Ye, 2008). Such monitoring can generate a huge quantity of various data. An important issue is the selection and exploration of this data, to characterise the system operation. This is a non trivial task even for experienced system administrators and analysts. Hence, it needs further investigations in the following aspects: system observation techniques, selecting the most sensitive observation parameters, creating the model of normal and abnormal (dangerous) behaviour of the system to facilitate problem identification and applying appropriate reactions. In the literature most papers concentrate on finding some characteristic patterns in log files related to well defined critical problems encountered in the considered systems eg leading to system crash (Kalyanakrishman et al., 1999; Sahoo et al., 2004; Xu et al., 1999). Various\u00a0\u2026", "num_citations": "7\n", "authors": ["488"]}
{"title": "C09: Flexible microntroller simulator for testing purposes\n", "abstract": " The paper describes microcontroller simulator with flexible definition of system configuration and simulation strategies. An important feature of the simulator is the possibility of defining complex network of devices co-operating with the microcontroller chip. These devices can be defined at various abstraction levels as program objects. Test stimuli and system behaviour probing are also programmed in a friendly way. The simulator is supported with various statistical modules, which can characterise operational profile of the application, resource usage etc. Capabilities of the simulator are illustrated for car immobilizer.", "num_citations": "7\n", "authors": ["488"]}
{"title": "Transient fault tolerance in microprocessor controllers\n", "abstract": " The paper deals with mechanisms of transient fault tolerance in microprocessor controllers. These mechanisms are discussed in con-text of various classes of applications. Error coverage, error la-tency and hardware/software overhead are considered. A new approach to self-checking programs with programmable watchdog timers and program tags is presented.", "num_citations": "7\n", "authors": ["488"]}
{"title": "Applying time series analysis to performance logs\n", "abstract": " Contemporary computer systems provide mechanisms for monitoring various performance parameters (e.g. processor or memory usage, disc or network transfers), which are collected and stored in performance logs. An important issue is to derive characteristic features describing normal and abnormal behavior of the systems. For this purpose we use various schemes of analyzing time series. They have been adapted to the specificity of performance logs and verified using data collected from real systems. The presented approach is useful in evaluating system dependability.", "num_citations": "6\n", "authors": ["488"]}
{"title": "CPU testability in embedded systems\n", "abstract": " The paper deals with the problem of testing CPUs in embedded systems taking into account application properties. Basing on the developed original software tools we have analysed the coverage of CPU functionality and operational stresses for many benchmark programs. The experimental results confirmed the need of introducing application driven testing of CPUs to assure high fault coverage with acceptable software and time overheads. This original approach has been used in some real systems.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Fail-bounded implementations of the numerical model predictive control algorithms\n", "abstract": " Methods of fault-hardening software implementations of the numerical Model Predictive Control (MPC) algorithms are discussed in the paper. In particular, Generalized Predictive Control (GPC) algorithms are considered. The robustness of these algorithms with respect to faults is crucial for process safety and economic efficiency, as faults may result in major control performance degradation or even destabilization. Therefore, fault-hardening of GPC algorithms is an important issue. The fault sensitivity of the non-fault-hardened algorithms implementations and the effectiveness of the fault hardening procedures are verified in experiments with a software implemented fault injector. These experiments refer to the control system of a chemical plant. Experience with fault simulations resulted in some methods of fault-hardening which are described in detail. Improvement of the dependability of the GPC algorithms is commented for each of the proposed fault-hardening mechanism.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Assessing software implemented fault detection and fault tolerance mechanisms\n", "abstract": " The problems of hardware fault detection and correction using software techniques are analysed. They relate to our experience with a large class of applications. The effectiveness of these techniques is studied using a special fault injector with various statistical tools. A new error-handling scheme is proposed.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Experimental evaluation of CPU performance features\n", "abstract": " The paper addresses the problem of evaluating CPU performance in real system environment. We present an efficient methodology of CPU performance analysis at the architecture (coarse grained) and microarchitecture (fine grained) levels. It is based on time and internal event monitoring technique. This methodology is referred to Intel processors operating in IBM PC environment. The usefulness of the presented approach was proved in many experiments described in the paper.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Pseudorandom versus deterministic testing of Intel 80/spl times/86 processors\n", "abstract": " The paper deals with the problem of testing microprocessors in the system environment. We discuss two approaches to testing microprocessors: deterministic and pseudorandom. They are related to Intel 80/spl times/86 processors. Many drawbacks of the deterministic approach can be overcome with pseudorandom tests. However developing pseudorandom test programs we face some other problems. The paper shows how to combine the two approaches.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Concurrent error detection using signature monitors\n", "abstract": " This paper presents an efficient approach to concurrent detection of processor control flow errors using signatured programs. It allows to design signature monitors for various microprocessors using off-the-shelf (1\u20132 PAL chips) or specialized circuits (ASIC\u2019s). As compared with other approaches it results in much lower hardware overhead.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Experiments with transient fault upsets in microprocessor controllers\n", "abstract": " Original fault and error insertion experiments determining the effects of transient faults in microprocessor controllers are described. The fault insertion experiments qualify most probable errors (logical level) which are caused by transient faults resulting from electrical noise. A wide class of microprocessor circuits is considered and measurements of static and dynamic noise margins are presented. The error insertion experiments allow to evaluate sensitivity of the controller to various errors (fault tolerance, error coverage and error latency). These experiments are carried out by using universal microprocessor emulator.", "num_citations": "6\n", "authors": ["488"]}
{"title": "Exploring operational profiles and anomalies in computer performance logs\n", "abstract": " Operational/functional problems in computer systems can be identified by monitoring and exploring performance metrics. These metrics can also be used to evaluate system activity profiles and manage relevant infrastructure (hardware and software). The critical point is finding features that make it possible to distinguish normal from abnormal system behaviour and to reveal emerging trends. This paper proposes a systematic methodology for deriving such features based on diverse observation perspectives in time (direct and aggregated) and defined specific data objects. We introduce a novel data model which combines collected samples into higher level observation objects (pulses and their compositions). This model is supported with original analysis algorithms for evaluating system behaviour. These provide useful sample/object statistics significantly enhanced with derived correlation formulas and periodicity\u00a0\u2026", "num_citations": "5\n", "authors": ["488"]}
{"title": "Performance issues in creating cloud environment\n", "abstract": " The paper deals with the problem of analyzing performability of creating cloud environment within a server taking into account various hardware and software configurations. Within the hardware we consider the impact of using SATA and SSD discs for holding data and program codes of the involved processes. Within software we checked single and multiple thread approaches. The effectiveness of the activated processes was evaluated using performance monitoring based on vSphere tool. The performed measurements were targeted at CPU, RAM and disc usage as well as execution time analysis. We present the measurement methodology and interpretation of the obtained results, which proved their practical significance.", "num_citations": "5\n", "authors": ["488"]}
{"title": "Dependability of explicit DMC and GPC algorithms\n", "abstract": " This paper studies dependability of software implementation of DMC (Dynamic Matrix Control) and GPC (Generalised Predictive Control) Model Predictive Control (MPC) algorithms. Explicit formulation of algorithms is considered in which the control laws are calculated off-line. Dependability is evaluated usig software implemented fault injection approach. Tests are performed in the control system of a remotely controlled robot vehicle used in nuclear plants.", "num_citations": "5\n", "authors": ["488"]}
{"title": "Experimental evaluation of pseudorandom test effectiveness\n", "abstract": " We describe various circuit controllability and observability measures which specify pseudorandom test effectiveness in a direct and indirect way. The usefulness of this approach is illustrated for some complex circuits.", "num_citations": "5\n", "authors": ["488"]}
{"title": "Managing Complex Software Projects\n", "abstract": " In the paper we present our experience with development and maintenance of complex software systems. In particular, we concentrate on monitoring related development, testing and debugging processes. We have analyzed the contents of collected reports (provided by different tools) covering many projects and defined several metrics and statistics helpful in managing complex projects and achieving high quality software. Moreover, we have identified lacking data which could improve these processes.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Analyzing logs of the university data repository\n", "abstract": " Identification of execution anomalies is very important for the maintenance and performance refinement of computer systems. For this purpose we can use system logs. These logs contain vast amounts of data, hence there is a great demand for techniques targeted at log analysis. The paper presents our experience with monitoring event and performance logs related to data repository operation. Having collected representative data from the monitored systems we have developed original algorithms of log analysis and problem predictions, they are based on various data mining approaches. These algorithms have been included in the implemented tools: LogMiner, FEETS, ODM. Practical significance of the developed approaches has been illustrated with some examples of exploring data repository logs. To improve the accuracy of problem diagnostics we have developed supplementary log database which\u00a0\u2026", "num_citations": "4\n", "authors": ["488"]}
{"title": "Remote software reprogramming in embedded systems\n", "abstract": " In many applications basing on embedded systems we have the problem with limited access for servicing. During the exploitation of such systems it happens that various errors can appear in hardware or software. Many of these errors can be eliminated (e.g. single event upsets), avoided or repaired (e.g. software bugs) by reprogramming the system partially or completely, locally or remotely. The paper discusses strategies of this approach taking into account various limitations and presents a case study solution designed for a satellite microcontroller.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Exploring the space of system monitoring\n", "abstract": " During system exploitation and maintenance an important issue is to evaluate its operational profile and detect occurring anomalies or situations which may lead to such anomalies (anomaly prediction issue). To resolve these problems we have studied the capabilities of standard event and performance logs which are available in computer systems. In particular we have concentrated on checking the morphology and information contents of various event logs (system, application levels) as well as the correlation of performance logs with operational profiles. This analysis has been supported with some tools and special scripts.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Enhanced instrumentation of system monitoring\n", "abstract": " In the paper we present problems related to run-time system monitoring based on event and performance logs. Depending upon the goals of monitoring we face various aspects of selecting and exploring the collected data. For this purpose we have developed special tools. The usefulness of our approach has been illustrated with some practical results related to our local computer environment.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Monitoring dependability of a mail server\n", "abstract": " This paper presents the methodology of monitoring a mail server in order to assess its dependability and detect various anomalies. It is based on collecting and analysing various events stored in system logs and continuous monitoring of system resource usage. A special program has been developed and practically verified to deal with these problems in the server handling mails within the Institute.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Testing fault susceptibility of a satellite power controller\n", "abstract": " The paper presents some experience with developing a satellite power controller. Due to high probability of transient faults (in particular caused by cosmic radiation) we had to check their impact on the controller operation. For this purpose we have developed a special test bed. It comprises some universal fault simulator (FITS), a software model of the controller and its environment. Simulation results show relatively high fault robustness. We also outline some further improvements of the controller code.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Checking of fault susceptibility of cryptographic algorithms\n", "abstract": " EN The paper deals with the problem of evaluating of the operation of software implemented cryptographic algorithms in the presence of transient faults. For this purpose we use an original fault simulator. We have also proposed fault-hardening schema to increase dependability of cryptographic techniques. They were verified in many experimental studies.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Safety issues in modern bus standards\n", "abstract": " Selecting and designing bus standards for safety-critical applications requires careful analysis of error-detection and fault-handling mechanisms. This analysis must be based on the revision of standard specifications and an experimental evaluation that covers representative fault classes. The traditional approach to evaluating a bus design measures its two most important performance parameters: data throughput and data latency.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Embedded System dependability evaluation with simulation tools\n", "abstract": " Dependability evaluation is an important issue in designing and exploiting embedded systems. The paper presents the capabilities and limitations of fault injection techniques in relevance to dependability analysis. e discuss the impact of fault models on the simulation results and their interpretation. A special attention is paid to transient faults, which dominate in contemporary systems. The presented analysis bases mostly on our experience with software implemented fault injection. As an illustration we give some original experimental results for a real application.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Fault Tolerance Extensions of TrueTime Package for Discrete Systems Simulation\n", "abstract": " The general objective of this project is to create an environment for discrete event simulation to assess safety properties of databuses used in real-time applications, especially in automotive and avionics industries. In this paper, we describe several extensions of the TrueTime simulator, beginning with the development of the fault injection model and incorporating it into the simulator using Matlab S-functions in C++. We also discuss an interface to TrueTime to simulate hardware faults via Matlab/Simulink with the use of HDL/Spice tools and high-level object-oriented programming models, which simulate software and hardware faults. Finally, we are suggesting graphical user interface extensions to TrueTime using Lab VIEW that prove necessary for efficient experimental data generation, gathering and analysis.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Dependability evaluation of real-time network interfaces\n", "abstract": " This article presents a study on efficient dependability evaluation via fault injection using an extension of the True Time network simulator. The experimental results were obtained for checking and comparing fault tolerant aspects of CAN and TTCAN safety critical network interfaces.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Software reliability analysis in designing data base oriented applications\n", "abstract": " The paper deals with the problem of evaluating the reliability of newly created software systems. It outlines the most important problems encountered in integrating reliability with testing and software development issues. We have embedded some of reliability analysis ideas into real software production of data base applications. The paper presents and discusses results of applying these ideas to three different projects.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Path delay fault testability analysis\n", "abstract": " The paper deals with the problem of testing delay path faults. We present results obtained with a newly developed test pattern generator. This generator is based on the use of reduced ordered binary decision diagrams (ROBDDs) and reveals many advantages as compared with other ATPGs published in the literature. An important contribution of the paper is the analysis of various testability features of digital circuits in respect to path delay faults. It was applied to the ISCAS89 benchmark and other circuits. The proposed testability measures are helpful in codesigning deterministic and pseudorandom delay tests as well as in improving circuit testability.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Web-based course on software quality assurance: Perspectives on intercontinental learning\n", "abstract": " This paper discusses issues related to offering a web-based course in software engineering, using a course on\" Software Quality Assurance\" as an example. A set of web-related requirements for such course is presented and examples of practical solutions are given. Issues related to joint development of modules and course internationalization are also discussed briefly.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Pseudorandom testing of microprocessors at instruction/data flow level\n", "abstract": " A universal approach to testing microprocessors is described. It is based on a test program with pseudorandom stream of instructions and data. An original software generator of such programs has been presented. Theoretical studies and many simulation experiments show that the proposed approach has similar properties to pseudorandom testing at the circuit level and covers a lot of fault models.", "num_citations": "4\n", "authors": ["488"]}
{"title": "Concurrent checking of program flow using single-chip microcomputers\n", "abstract": " This paper describes the use of universal off-the-shelve single-chip microcomputers as watchdog processors in embedded systems. The watchdog processor executes assertions about the process running on the checked system. The checking procedures include verification of the program control flow graph (interpreted and compiled graph tracing techniques), program execution time, reasonableness of calculations and I/O signals. The capability, limitations and the overhead of this approach are discussed.", "num_citations": "4\n", "authors": ["488"]}
{"title": "AN ALGEBRAIC APPROACH TOWARDS TRANSIENT ANALYSIS OF ASYNCHRONOUS CIRCUITS.\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "4\n", "authors": ["488"]}
{"title": "Correlating software metrics with software defects\n", "abstract": " In software development and testing an interesting issue is checking correlations of observed software defects with various product and process metrics. Such analysis is helpful in predicting potential defects and optimization of testing processes. In the paper we present results of deeper studies in this area, they involve many metrics and various prediction schemes taking into account diverse correlation parameters. Special attention is paid to the problem of selecting most significant metrics. In the prediction schemes we consider modified and non modified program objects. The presented analysis methods have been verified in an experimental investigation covering twelve open source projects, for some of them several subsequent versions have been examined. This is followed by result discussion.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Analysing efficiency of IPv6 packet transmission over 6LoWPAN network\n", "abstract": " Practical proliferation of Internet of Things (IoT) concept depends upon communication efficiency in the related network. In the paper we outline basic features of wireless communication protocols used in IoT and concentrate on analysing communication overheads. In particular, we discuss the impact of IPv6 packet length on 6LoWPAN network operation with physical and MAC layer defined by IEEE 802.15.4 standard. The presented analysis methodology is useful in estimation of the total goodput (throughput at the application level) and energy consumptions within the whole traffic model which are the crucial features of IoT networks.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Managing and enhancing performance benchmarks\n", "abstract": " The paper deals with the problem of computer performance evaluation basing on program benchmarks. We outline the drawbacks of existing techniques and propose a significant enhancement using available performance counters. This new approach needed development of supplementary tools to control benchmarking processes and combining them with various measurements. In particular, this resulted in some extensions of the open source program Phoronix Test Suite. The usefulness of our approach have been verified in many experiments taking into account various benchmarks and system configurations. We present the measurement methodology and interpretation of the obtained results, which confirmed their practical significance.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Tracing life cycle of software bugs\n", "abstract": " The paper deals with the problem of monitoring software development and maintenance processes. In particular, we concentrate on data reported in software bug repositories. These data characterize the progress and effectiveness of the above mentioned processes. To analyze these data we have developed a special program which extracts information from typical bug repositories (e.g. Bugzilla) and generates various useful statistics. The analysis methodology is based on problem handling graphs (PHGs) and various metrics. The usefulness of this approach has been illustrated for some real open source and commercial projects. We present the measurement methodology and interpretation of the obtained results, which confirmed their practical significance.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Fault injection in embedded systems using GNU Debugger\n", "abstract": " EN The paper presents the technique of simulating faults in embedded systems. It consists of PC software that performs fault injection through the JTAG interface controlled by GNU Debugger (GDB) server for a chosen platform. This approach can be easily adopted to various platforms due to a wide support of GDB project for many architectures. The experimental results for ARM architecture show high controllability of the fault injection process and measured time overhead in the implemented injector.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Event and performance logs in system management and evaluation\n", "abstract": " The paper outlines the space of event and performance logs which can be collected in computer systems to support managing and evaluating system operation. We concentrate on methodology of finding anomalies and assessing system dependability or resilience. General considerations are illustrated with more details on storage problems and network attacks.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Fault sensitivity of explicit DMC and GPC algorithms\n", "abstract": " This paper studies dependability of software implementation of DMC (Dynamic Matrix Control) and GPC (Generalised Predictive Control) Model Predictive Control (MPC) algorithms. Explicit formulation of algorithms is considered in which the control laws are calculated off-line. Dependability is evaluated using software implemented fault injection approach. Tests are performed in the control system of a remotely controlled robot vehicle used in nuclear plants.", "num_citations": "3\n", "authors": ["488"]}
{"title": "The effect of large clock drifts on performance of event and time triggered network interfaces\n", "abstract": " This paper discusses some dependability problems (e.g. message delays) related to clock drifts in the processing nodes of real-time networks based on event and time triggered interfaces. We show that having detected the clock drift, it is reasonable to delay the shutdown of the network node whose clock synchronization algorithm is not able to track a high clock drift. We observed that transient clock drifts, which last up to one second and are as high as 2e-2 sec/sec do not increase message delays above safety-critical required levels. We verified this by injecting transient faults into our new clock model and measured the message delay between a pair of network nodes. The performed experiments revealed that time triggered interfaces are more sensitive to transient clock drift disturbances than event triggered interfaces.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Testing crossbar switch interconnection networks\n", "abstract": " The author presents methods of testing crossbar switches in multiprocessor environment. Implementation problems of assuring appropriate test controllability and observability has been considered and referred to popular crossbar switches with static and dynamic interconnection strategies.< >", "num_citations": "3\n", "authors": ["488"]}
{"title": "Transient fault tolerance in redundant systems\n", "abstract": " Outlines some problems which result from transient faults in designing fault tolerant systems. Based on this analysis, a systematic approach to effective transient fault tolerance in redundant systems is presented. The main point of this approach is to design error handling procedures, taking into account a variety of available error detection mechanisms and the context of error appearance. Implementation of these strategies required some special hardware and software. This approach is illustrated for systems with double and triple modular redundancy.< >", "num_citations": "3\n", "authors": ["488"]}
{"title": "Transient fault tolerance in a data acquisition system\n", "abstract": " In the paper we analyse the problem of transient faults in a data acquisition system. A transient fault (physical level) may cause circuit errors (logical level) leading to critical system failures. Some examples of such errors are discussed and the probability of false (infinite) loop appearance is estimated. The system is equipped with simple hardware and software facilities allowing to tolerate transient faults, so deadlocks cannot occur.", "num_citations": "3\n", "authors": ["488"]}
{"title": "Dependability issues in the PPLD-PSU subsystem for the BRITE-PL Hevelius microsatellite\n", "abstract": " Due to specific conditions for electronic equipment in satellites and high launching costs, dependability issues of satellite subsystems are of great importance. This paper presents the PPLD-PSU subsystem designed for Polish payload of the BRITE-PL Hevelius microsatellite. When developing software for this system, we have assured some dependability requirements related to testing this equipment before launching (exhaustive external and internal self-testing) and during the whole mission (on-line monitoring). Moreover, special mechanisms have been included to support remote reprogramming. In the paper we also analyze various possible fault effects (transient, intermittent and permanent) and methods of mitigating them locally or remotely.", "num_citations": "2\n", "authors": ["488"]}
{"title": "Monitoring Software Development and Usage\n", "abstract": " Artyku\u0142 przedstawia metodyk\u0119 monitorowania proces\u00f3w testowania i korekcji b\u0142\u0119d\u00f3w w fazie rozwijania i eksploatacji oprogramowania. Praca koncertuje si\u0119 na miarach opisuj\u0105cych te procesy w odniesieniu do dwu modeli wytwarzania oprogramowania wykorzystywanych we wdro\u017conych projektach. Bazuj\u0105c na zebranych danych przedstawiono u\u017cyteczno\u015b\u0107 opracowanego podej\u015bcia w kontrolowaniu jako\u015bci oprogramowania oraz efektywno\u015bci proces\u00f3w jego wytwarzania i utrzymania. Wskazano r\u00f3wnie\u017c mo\u017cliwo\u015bci poprawienia efektywno\u015bci proces\u00f3w monitorowania.(Monitorowanie rozwijania i eksploatacji oprogramowania).", "num_citations": "2\n", "authors": ["488"]}
{"title": "Testing fault robustness of model predictive control algorithms\n", "abstract": " The paper deals with the problem of evaluating fault robustness of the software implemented Dynamic Matrix Control (DMC) Model Predictive Control (MPC) algorithms. Numerical and explicit implementations of the DMC algorithms are considered. It is shown that faults affecting the algorithms can provoke undesirable behaviour or even destabilize the process. Dependability was evaluated experimentally using two different software implemented fault injection approaches, the old one (FITS) and a new one (InBochs). FITS was not sufficient in case of the numerical DMC implementation. InBochs is based on the system emulator and delivers the same level of functionality as FITS while having capability to extend fault models.", "num_citations": "2\n", "authors": ["488"]}
{"title": "Dependability comparison of explicit and numerical gpc algorithms\n", "abstract": " The paper presents the dependability comparison of software implementation of the explicit and numerical Generalized Predictive Control (GPC) Model Predictive Control (MPC) algorithms. The investigated GPC algorithms are implemented for a control system of a multivariable chemical reactor \u2013 a process with strong cross-couplings. The fault sensitivity of the proposed implementations is verified in experiments with a software implemented fault injector. Experimental methodology of disturbing the software implementation of control algorithms is presented. The influence of faults on the quality of the controller performance is analysed. Implementations of the considered control algorithms are also compared in terms of their profiles (e.g. resource usage, code size and efficiency).", "num_citations": "2\n", "authors": ["488"]}
{"title": "Dependability of the explicit DMC algorithm for a rectification process\n", "abstract": " The paper studies dependability of software implementation of the explicit DMC (Dynamic Matrix Control) Model Predictive Control (MPC) algorithm applied for a rectification column. The process with two inputs and two outputs with strong cross-couplings and significant time delays is studied. The algorithm\u2019s control law is calculated off-line. Dependability is evaluated experimentally using software implemented fault injection approach. The injected faults influence the quality of rectification process.", "num_citations": "2\n", "authors": ["488"]}
{"title": "E05: A study of routing for the bluetooth scatternet\n", "abstract": " Scatternet is a wireless network topology based upon Bluetooth technology. In essence, the scatternet is a network formed from multiple small personal networks called piconets. Piconets are centralized networks because they relay on a central node, called master node, to perform necessary link establishment and synchronization within a piconet. In order to realize inter-piconet communication, necessary protocols must be researched so that a cohesive network structure is formed, medium access conflicts are resolved, and packet transfer from source to destination is accomplished. Currently a few complete protocol solutions exist and the Bluetooth specification does not detail any protocols that could implement a scatternet. The focus of this paper is to detail a new routing algorithm necessary for development of a scatternet. The authors present this new algorithm and discuss its performance characteristics.", "num_citations": "2\n", "authors": ["488"]}
{"title": "Using IEEE 1149.1 Interface in Systems with FPGAS\n", "abstract": " The paper deals with the problem of using IEEE 1149.1 interface in digital systems. We have concentrated on two issues: developing of a simple universal IEEE1149.1 emulator for IBM PC environment and improving system capabilities (testability, debugging, reconfiguration) with boundary scan path. This last issue is mostly related to FPGAs and systems comprising these devices. The paper fills the gap between system manufacturer and system user points of view on IEEE 1149.1 interface.", "num_citations": "2\n", "authors": ["488"]}
{"title": "Object oriented time series exploration: Applied to power consumption analysis of embedded systems\n", "abstract": " Performance monitoring and anomaly detection are major issues in designing and maintaining electronic devices and systems. In recent years, they become more difficult due to the increased complexity of hardware and software. Hence, an important point is to collect representative signal samples and reveal characteristic features allowing to evaluate device operational profiles. This results in the need of an efficient time series analysis. This problem is considered in relevance to embedded systems and Internet of Things devices. The paper presents a new scheme of decomposing time series by introducing higher level objects targeted at the searched system properties. They create a compact state model which facilitates deriving knowledge on system behaviour to validate correctness of its operation. The collected samples are aggregated into objects according to predefined similarity metrics, these objects can\u00a0\u2026", "num_citations": "1\n", "authors": ["488"]}
{"title": "Exploring the software repositories of embedded systems: An industrial experience\n", "abstract": " ContextTracing reports for software repositories have attracted many researchers. Most of them have focused on defect analysis and development processes in relation to open source programs. There exists a gap between open source and industrial software projects, which, in particular, relates to different schemes for creating software repositories and development schemes. This is especially true for embedded systems that gain large markets and become more complex.ObjectiveThe aim is to explore the software repositories of industrial embedded systems and derive characteristic features in order to evaluate quality and identify problems to do with development processes.MethodIn this paper we have proposed a novel approach to software repository analysis based on the fine grained exploration of issue tracking and code control repositories. In particular, we distinguish the various activities of project actors\u00a0\u2026", "num_citations": "1\n", "authors": ["488"]}
{"title": "ESD problems in embedded systems\n", "abstract": " Mitigating failures caused by electrostatic discharge (ESD) is a crucial problem in many applications of embedded systems. The paper analyses in a systematic way the propagation of ESD effects at structural and logical levels in order to find threats and capabilities of efficient system recovery. The presented considerations are illustrated with some results referred to commercially developed devices for registering and analyzing ECG signals.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Log Based Analysis of Software Application Operation\n", "abstract": " Event logs provide the capability to gain insight into system operation under the real workload. They have been widely used to detect anomalies, evaluate dependability including security, service time analysis, etc. The paper outlines log analyses schemes described in the literature and presents a new approach which takes into account specificity of applications embedded into system environment. It takes into account a wide scope of logs, defines and extracts their features helpful in assessing application operation in the considered lifetime span. The presented methodology is illustrated with results related to a complex commercial system used as a case study.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Evaluating energy consumption in wireless sensor networks\n", "abstract": " Fast growing market related to Internet of Things creates new demands for wireless sensor networks. Here we face the problem of optimizing energy consumption in many miniature electronic devices powered from local batteries and requested long life span of nodes up to 5-10 years. The transmission processes constitute the primary source of energy consumption in the node, however complex data processing can also contribute a non negligible component. Optimizing energy consumption we can use various energy saving schemes, e.g. bringing the nodes in a sleeping mode and waking them periodically. In the paper we analyse in detail time and power components influencing energy consumption profiles. The derived original parameters are helpful to create power consumption models for specific applications. The presented methodology has been verified experimentally within (TI) CC1310F128 chip.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Tracing project development in Scrum model\n", "abstract": " Agile software development and management related to Scrum model is gaining popularity. It may differ significantly from classical development schemes widely discussed in the literature. An interesting issue is to evaluate project progress and the effectiveness of task handling in Scrum based development. This process can be supported with an advanced study of repositories provided by issue tracking and project management software. This is neglected in publications on Scrum methodology. In the paper we present some original analysis schemes which have been verified using repository data from a commercial project involving developers from multiple sites. In the presented approach we exploit our experience with other development techniques targeted at big and complex open source or commercial projects. It has been adapted to the specificity of Scrum model and relevant software repositories.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Exploring disk performance benchmarks\n", "abstract": " In the paper we discuss the problem of evaluating disc performance with benchmarks. In particular, we concentrate on assessing benchmark properties. For this purpose we have developed benchmark managing platform which allows us to enhance the benchmark execution process with monitoring performance counters. The developed methodology and tool do not need additional benchmark instrumentation and have a negligible impact on its execution. The usefulness of this approach has been illustrated with experimental results covering a representative set of benchmark programs.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Fault tolerance techniques for embedded telemetry system: case study\n", "abstract": " This paper presents software methods of improving fault tolerance in embedded systems. These methods have been adapted to a telemetry system dedicated to tracking vehicles for logistics purposes. The developed telemetry system allows us to monitor vehicle position and some technical parameters via GSM communication. It comprises the capability of remote software reconfiguration. To evaluate dependability of the system we use a fault injection technique based on simulating bit-flip errors within memory cells. For this purpose an original testbed has been developed. It provides not only the capability of disturbing internal state of the tested system (via JTAG interface) but also the possibility of controlling system input states and observing its behavior (in particular output signals) according to specified test scenarios. The whole test process is automatized. The paper presents a case study related to a\u00a0\u2026", "num_citations": "1\n", "authors": ["488"]}
{"title": "Gas-flow computer with SBST\n", "abstract": " The paper deals with the problem of improving dependability in industrial embedded systems. This problem is considered in relevance to the developed gas flow computer. It is implemented around ARM microcontroller which performs complex measurements and calculations of gas flow with embedded software based self-test mechanisms (SBST) assuring fault detection and fault handling. These mechanisms do not interfere with the normal operation neither in time nor in space. The effectiveness of these approaches has been practically verified in specialised experiments.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Tracing anomalies in computer systems\n", "abstract": " High complexity and dynamicity of computer systems result in various anomalies related to failures and usage problems. Detection and diagnosis of anomalies is still a challenging practical problem. The paper presents a project on a multidimensional and wide range monitoring of a big population of heterogeneous systems.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Dependability of the software implementation of the explicit DMC algorithm\n", "abstract": " The paper studies dependability of software implementation of the explicit DMC (Dynamic Matrix Control) Model Predictive Control (MPC) algorithm applied for a rectification column. The process with two inputs and two outputs with strong cross-couplings and significant time delays is studied. The algorithm\u2019s control law is calculated off-line. Dependability is evaluated experimentally using software implemented fault injection approach. The injected faults influence the quality of rectification process.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Monitoring parallel interfaces in system environment\n", "abstract": " The paper addresses the problem of testing and validating interface functions in system environment. The presented approach bases on the use of an universal monitor covering various levels of interface protocols. It is illustrated with some experimental results.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Improving fault coverage in system tests\n", "abstract": " The paper is devoted to the problem of self-testing in system environment (field diagnosis and maintenance at the end user). It discusses test process decomposition in the context of increasing hardware complexity and proliferation of embedded DFT and BIST circuitry in the commercial off-the shelf VLSI chips (COTS). Test observability is improved with the use of various on-line monitoring mechanisms. To optimize test effectiveness we use special tools based on direct and indirect fault coverage analysis.", "num_citations": "1\n", "authors": ["488"]}
{"title": "Excitation functions for edge-sensitive inputs of logical elements\n", "abstract": " Sauf mention contraire ci-dessus, le contenu de cette notice bibliographique peut \u00eatre utilis\u00e9 dans le cadre d\u2019une licence CC BY 4.0 Inist-CNRS/Unless otherwise stated above, the content of this bibliographic record may be used under a CC BY 4.0 licence by Inist-CNRS/A menos que se haya se\u00f1alado antes, el contenido de este registro bibliogr\u00e1fico puede ser utilizado al amparo de una licencia CC BY 4.0 Inist-CNRS", "num_citations": "1\n", "authors": ["488"]}