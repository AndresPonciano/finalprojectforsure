{"title": "Defining System Context using Scenarios\n", "abstract": " It is already well known that in order to define the software system requirements deep knowledge of the universe of discourse is needed. This includes not only what is actually happening but also what the plans for the future are. Unless the requirements engineer has a previous knowledge of the domain, he or she may become overloaded by data of different nature. To cope with this, a gradual process which slowly migrates from learning to definition is advisable. During the learning phase, the focus should be placed on the current facts which should be organized and recorded. Later, the forthcoming plans should be also understood but instead of recording them as they are, they should be used to design future universe of discourse models. This chapter focuses on the description of current situations and lays foundations for the description of future situations by means of an evolution process.", "num_citations": "53\n", "authors": ["379"]}
{"title": "Uso de Escenarios en la Derivaci\u00f3n de Software\n", "abstract": " Esta tesis presenta una estrategia en la Ingenier\u00eda de Requisitos, denominada SDRES, que intenta abordar temas poco tratados en la pr\u00e1ctica real, tales como los cambios constantes en los requisitos, defectos del software originados en los requisitos, el contexto organizacional que rodea al sistema de software y la consideraci\u00f3n de requisitos de calidad. Esta estrategia est\u00e1 dirigida por modelos (L\u00e9xico Extendido del Lenguaje, Escenarios y Documento de Requisitos) y orientada al cliente, por ello utiliza sus modelos escritos en lenguaje natural como medio de comunicaci\u00f3n y elicitaci\u00f3n. SDRES tiene en cuenta la calidad de los modelos que produce mediante procesos de verificaci\u00f3n y validaci\u00f3n. Para cada actividad de la estrategia se presenta un conjunto de heur\u00edsticas y recomendaciones. Se encara el tema de evoluci\u00f3n y versionado de los modelos, as\u00ed como distintas modalidades de utilizar la estrategia seg\u00fan la complejidad del problema, el conocimiento sobre el mismo y otras caracter\u00edsticas.", "num_citations": "33\n", "authors": ["379"]}
{"title": "Creating Software System Context Glossaries\n", "abstract": " Requirements engineering (RE) is the area of software engineering responsible for the elicitation and definition of the software system requirements. This task implies joining the knowledge of the services that a software system can and cannot provide with the knowledge of clients\u2019 and users\u2019 needs (Jackson, 1995; Katasonov & Sakkinen, 2005; Kotonya & Sommerville, 1998; Sommerville & Sawyer, 1997; Sutcliffe, Fickas, & Sohlberg, 2006; Uchitel, Chatley, Kramer, & Magee, 2006). Frequently, this activity is done by people with a software engineering bias. The underlying hypothesis of this choice is that users\u2019 needs are easier to understand than the software\u2019s possible behaviors. This is not always true; however, this is the metacontext in which most RE heuristics and methodologies have been developed. Understanding clients\u2019 and users\u2019 needs is far more complex than merely interviewing selected clients and\u00a0\u2026", "num_citations": "29\n", "authors": ["379"]}
{"title": "Explicitar Requisitos del Software usando Escenarios.\n", "abstract": " Los escenarios describen situaciones del proceso del negocio, tanto del proceso observable actual como del proceso proyectado o futuro. En este \u00faltimo caso los escenarios resultan ser contenedores de la mayor\u00eda de los requisitos del sistema de software, pero no son los requisitos propiamente dichos. Muchas de las buenas pr\u00e1cticas o pr\u00e1cticas recomendadas en el proceso de desarrollo de software se basan en la existencia de un documento de requisitos en el que \u00e9stos se individualizan en forma precisa. En el presente art\u00edculo se presenta una estrategia para confeccionar un documento de requisitos a partir de escenarios ya construidos. La particularidad que presenta la misma es que los requisitos individualizados tienden a ser libres de conflictos y de ambig\u00fcedad a consecuencia del propio proceso de producci\u00f3n.", "num_citations": "20\n", "authors": ["379"]}
{"title": "Comprendiendo el Universo de Discurso Futuro con Escenarios.\n", "abstract": " La definici\u00f3n de requisitos es meramente el producto final de la fase de requisitos, pero es el punto de partida basamental para el dise\u00f1o del software y para la tarea de seguimiento de requisitos, y adem\u00e1s en muchos casos es un documento contractual con los clientes. Para lograr una correcta definici\u00f3n, no s\u00f3lo es necesario comprender el Universo de Discurso presente sino tambi\u00e9n comprender el Universo de Discurso futuro. Se plantean en este art\u00edculo alternativas para la construcci\u00f3n de Escenarios Futuros, utilizando los mismos como medio de representaci\u00f3n parcial del Universo de Discurso futuro en el que se asume la presencia del sistema de software que se planifica desarrollar.", "num_citations": "19\n", "authors": ["379"]}
{"title": "Facilitando la Asignaci\u00f3n de Prioridades a los Requisitos.\n", "abstract": " Existe una gran variedad de propuestas y est\u00e1ndares internacionales que ofrecen gu\u00edas de contenido y estilo para la generaci\u00f3n de un documento de especificaci\u00f3n de requisitos (SRS). Adicionalmente, la literatura da cuenta de diversos m\u00e9todos para asignar prioridades a los requisitos, que parten de un conjunto de requisitos perfectamente individualizados, frecuentemente plasmados en un SRS. En este art\u00edculo se presenta una estrategia alternativa para asignar prioridades a los requisitos, que se apoya en el proceso previo que les dio origen: su derivaci\u00f3n desde escenarios y la descomposici\u00f3n de objetivos en subobjetivos.", "num_citations": "16\n", "authors": ["379"]}
{"title": "Correcciones sem\u00e1nticas en m\u00e9todos de estimaci\u00f3n de completitud de modelos en lenguaje natural\n", "abstract": " La Ingenier\u00eda de Requisitos tiene como objetivo producir requisitos  de alta calidad, poniendo especial inter\u00e9s en la completitud de los modelos ela-borados. Establecer si la informaci\u00f3n elicitada y modelada es suficiente para  construir un software que cubra las necesidades del cliente es una cuesti\u00f3n de  dif\u00edcil respuesta. Existen algunos intentos realizados en ese sentido, tal como  una adaptaci\u00f3n del m\u00e9todo decaptura-recaptura para estimar el tama\u00f1o de mo-delos de requisitos escritos en lenguaje natural. Basados en dicho trabajo y con-siderando la naturaleza de estos modelos, proponemos introducir un an\u00e1lisis  sem\u00e1ntico previo a estimar el tama\u00f1o, dado que el m\u00e9todo predictivo solo con-templa aspectos formales y cuantitativos. Dicho an\u00e1lisis sem\u00e1ntico estudia la re-levancia, pertenencia, sinonimia y homonimia del contenido textual del modelo.  Comparando los resultados estad\u00edsticos detrabajos precedentes contra los obte-nidos realizando correcciones sem\u00e1nticas, concluimos que estas son beneficio-sas para la estimaci\u00f3n dela completitud de modelos en lenguaje natural.", "num_citations": "15\n", "authors": ["379"]}
{"title": "Dealing with Completeness in Requirements Engineering\n", "abstract": " The Requirements Engineering (RE) goal is to systematize the process of requirements construction and management (Maculay, 1993; Reubenstein & Waters, 1991; Mat\u00e9 & Silva, 2005) along with the creation of a compromise among clients and users with developers, since both human groups must participate and collaborate together. To accomplish such tasks, the requirements engineers should understand and participate in the definition of the context of use for the software system to be developed. The requirements engineers usually ignore totally or partially both, the current and the foreseen future context of use. The latter must be conceived having as a resource the new tool: the system software itself. Frequently, nobody knows in detail such future context of use. To be able to participate in the definition of the future business process, the requirements engineers must understand the current business process\u00a0\u2026", "num_citations": "12\n", "authors": ["379"]}
{"title": "Un abordaje al problema de completitud en requisitos de software\n", "abstract": " La completitud es uno de los temas imposibles o casi imposibles de  ponderar  en la Ingenier\u00eda de Software en general y en la Ingenier\u00eda de  Requisitos en particular. Se han hecho algunos intentos de estimar la  completitud en los casos de prueba en inspecciones de sistemas mediante el uso  de t\u00e9cnicas predictivas. Estas t\u00e9cnicas permiten estimar el grado de completitud  alcanzado. Entre ellas se encuentra Detection Profile Method, que fue con  anterioridad aplicada a un modelo de requisitos escrito en lenguaje natural. Los  resultados fueron muy promisorios, pese a basarse s\u00f3lo en aspectos formales y  cuantitativos del modelo. Una revisi\u00f3n ulterior de estos resultados ha permitido detectar que existen factores cualitativos, como distintas personas observan distintos problemas o partes del  mismo  problema, que podr\u00edan haber  distorsionado los resultados alcanzados. En el presente art\u00edculo, se reportan los  resultados de reanalizar el problema incorporando algunos elementos  sem\u00e1nticos a las estrategias involucradas", "num_citations": "12\n", "authors": ["379"]}
{"title": "A requirements engineering process adapted to global software development\n", "abstract": " MIGHETTI, Juan P. y HADAD, Graciela DS. A Requirements Engineering Process Adapted to Global Software Development. CLEIej [online]. 2016, vol. 19, n. 3, pp. 181-209. ISSN 0717-5000.", "num_citations": "7\n", "authors": ["379"]}
{"title": "Mejoras a un modelo l\u00e9xico mediante mapas conceptuales\n", "abstract": " Para aumentar la probabilidad de \u00e9xito de un proyecto de software es fundamental partir de buenas especificaciones de requisitos, pues defectos en ellas se trasladan a subsiguientes modelos y componentes de software. Es por ello que deben realizarse verificaciones tempranas de los modelos que se construyen en el proceso de requisitos. La mayor\u00eda de las t\u00e9cnicas de verificaci\u00f3n apuntan a detectar defectos del tipo hechos incorrectos, inconsistencias y en menor medida omisiones. Frecuentemente, los modelos en la Ingenier\u00eda de Requisitos suelen escribirse en lenguaje natural, lo que propende tambi\u00e9n a la aparici\u00f3n de ambig\u00fcedades. Se presenta una propuesta preliminar de verificaci\u00f3n de un modelo l\u00e9xico utilizando mapas conceptuales, centrada en detectar principalmente omisiones y ambig\u00fcedades, y en formular correcciones a las mismas. Esta propuesta fue aplicada a un caso real, donde se comprob\u00f3 la detecci\u00f3n de un n\u00famero razonable de defectos.", "num_citations": "6\n", "authors": ["379"]}
{"title": "Mejoras sem\u00e1nticas para estimar la Completitud de Modelos en Lenguaje Natural\n", "abstract": " La Ingenier\u00eda de Requisitos tiene como objetivo  producir requisitos de alta calidad, siendo la  completitud un aspecto cr\u00edtico. \u00bfSe ha elicitado y  modelado la suficiente informaci\u00f3n para construir  un sistema de software que cubra las expectativas y  necesidades del cliente? Esuna pregunta de dif\u00edcil  respuesta a pesar de algunos intentos que se est\u00e1n  realizando en ese sentido. Un estudio de la  estimaci\u00f3n del tama\u00f1o de modelos de requisitos  escritos en lenguaje natural ha dado resultados  prometedores, aunque se consideraron s\u00f3lo los  aspectos formales y cuantitativos. Debido a la  naturaleza de estos modelos, se ha introducido un  an\u00e1lisis sem\u00e1ntico que se realiza previo a la  aplicaci\u00f3n del m\u00e9todo estimativo de tama\u00f1o. Todos  los trabajos de estimaci\u00f3n de tama\u00f1o, tanto con o  sin an\u00e1lisis sem\u00e1ntico previo, se realizaron  utilizando una adaptaci\u00f3n del m\u00e9todo de captura-recaptura. En este art\u00edculo se presenta un nuevo  estudio de estimaci\u00f3n de tama\u00f1o sobre un modelo  generado siguiendo un proceso de construcci\u00f3n m\u00e1s  refinado que el utilizado en estudios anteriores. Se  pudo observar que pese a las mejoras incorporadas  y varios estudios realizados, persiste a\u00fan una gran  incompletitud en los modelos elaborados. Se  considera que es probable que sea necesario  incrementar la profundidad del an\u00e1lisis sem\u00e1ntico  para mejorar la estimaci\u00f3n de completitud.", "num_citations": "5\n", "authors": ["379"]}
{"title": "Scenario inspections\n", "abstract": " Scenarios help practitioners to better understand the requirements of a software system as well as its interface with the environment. However, despite their widespread use both by object-oriented development teams and human\u2013computer interface designers, scenarios are being built in a very ad-hoc way. Departing from the requirements engineering viewpoint, this article shows how inspections help software developers to better manage the production of scenarios. We used Fagan\u2019s inspections as the main paradigm in the design of our proposed process. The process was applied to case studies and data were collected regarding the types of problems as well as the effort to find them.", "num_citations": "5\n", "authors": ["379"]}
{"title": "Nominalizations in requirements engineering natural language models\n", "abstract": " It is a usual practice to use natural language in any document intended for clients and users in the requirements engineering process of a software development. This facilitates the comprehension of the requirements engineer's proposals to clients and users. However, natural language introduces some drawbacks, such as ambiguity and incompleteness, which attempt a good comprehension of those documents. Glossaries help by reducing ambiguity, though they introduce their own linguistic weaknesses. The nominalization of verbs is one of them. There are sometimes appreciable differences between using a verb form or its nominal form, while in other cases they may be synonyms. Therefore, the requirements engineer must be aware of the precise meaning of each term used in the application domain in order to correctly define them and properly use them in every document. In this chapter, guidelines about\u00a0\u2026", "num_citations": "4\n", "authors": ["379"]}
{"title": "Dynamic Situational Adaptation of a Requirements Engineering Process\n", "abstract": " Literature shows that the elicitation techniques used in a requirements engineering process are often chosen based on the particular characteristics of the application context, mainly related to the involved human sources of information. However, these particularities, usually called situational factors, are seldom taken into account in other activities of the requirements process. Most situational factors, when considered in software projects, have a high influence on the requirements process. Therefore, the different situations that may attempt against or may favor a successful requirements process should be identified at the beginning of the project. Additionally, some factors may evolve along with software development life cycle; this may imply re-planning the requirements process at later strategic milestones. In this chapter, a process for constructing and dynamically adapting a requirements process is proposed. The\u00a0\u2026", "num_citations": "4\n", "authors": ["379"]}
{"title": "Procesamiento de lenguaje natural para estudiar completitud de requisitos\n", "abstract": " La Ingenier\u00eda de Software incluye el estudio inicial de los requisitos del sistema de software a desarrollar. A ello se dedican los Ingenieros de Requisitos, generando modelos que logren representar las necesidades de los clientes y usuarios y las soluciones a las mismas. El desarrollo de modelos de requisitos en lenguaje natural facilita la interacci\u00f3n entre todos los involucrados, aunque contribuye a generar ambig\u00fcedades. Por otro lado se ha comprobado la existencia de omisiones en una cantidad muy superior a la imaginada intuitivamente. Por su propia naturaleza, las omisiones son notoriamente elusivas. El desarrollo de un mismo modelo acerca del mismo problema por personas diferentes es la forma m\u00e1s eficaz para vislumbrar la magnitud de las omisiones en el dominio de la Ingenier\u00eda de Requisitos y posiblemente en muchas otras \u00e1reas. Para realizar estudios sobre la completitud de los modelos desarrollados, a fin de mejorar la calidad de los mismos, se ha propuesto la generaci\u00f3n de una herramienta de software que permita comparar modelos escritos en lenguaje natural. Se propone que esta herramienta utilice recursos del Procesamiento del Lenguaje Natural.", "num_citations": "4\n", "authors": ["379"]}
{"title": "Experimento Controlado en la Inspecci\u00f3n de un L\u00e9xico mediante Mapas Conceptuales\n", "abstract": " El proceso de Ingenier\u00eda de Requisitos involucra comprender el comportamiento actual en un contexto y definir la situaci\u00f3n futura al incorporar un sistema de software. Es frecuente durante el proceso de requisitos construir modelos escritos en lenguaje natural, dado que facilitan la elicitaci\u00f3n, validaci\u00f3n y negociaci\u00f3n con los clientes. Estas facilidades se incrementan cuando se escriben usando el lenguaje propio del cliente.Un modelo construido tempranamente en el proceso de requisitos es el L\u00e9xico Extendido del Lenguaje. Es un glosario que permite comprender y definir el vocabulario utilizado en un contexto, siendo un medio para mejorar la comunicaci\u00f3n entre los involucrados y promover el uso de dicho vocabulario en la descripci\u00f3n de otros modelos.", "num_citations": "4\n", "authors": ["379"]}
{"title": "Estudio sem\u00e1ntico de modelos construidos por elicitadores independientes observando el mismo problema: Proyecto Completitud de Modelos de Requisitos\n", "abstract": " Uno de los principales problemas que se presenta en la Ingenier\u00eda de Requisitos es la incompletitud  [Kotonya 98] [Loucopoulos 95] [Firesmith 05]. Esto se refiere a la dificultad en establecer si se ha elicitado  y modelado toda la informaci\u00f3n requerida para desarrollar un sistema de software que cubra las expectativas y necesidades de los clientes y usuarios.", "num_citations": "4\n", "authors": ["379"]}
{"title": "Derivar casos de uso de un glosario\n", "abstract": " El modelado del negocio permite detectar debilidades en los procesos del negocio dando pie a proyectar mejoras eficientes involucrando sistemas de software. Utilizando modelos en lenguaje natural se achica la brecha de comunicaci\u00f3n entre los usuarios y los ingenieros de software, y cuando adem\u00e1s se trata de modelos como los casos de uso o los escenarios, \u00e9stos estimulan la imaginaci\u00f3n para proyectar mejoras en los procesos del negocio con sistemas de software, tanto por parte de los ingenieros de software como de los propios usuarios. Se presenta en este art\u00edculo un enfoque para el modelado del negocio construyendo casos de uso a partir de un glosario espec\u00edfico, denominado l\u00e9xico extendido del lenguaje. Este enfoque aborda una modalidad middle-out para el modelado de los casos de uso, ofreciendo ventajas de arranque frente a otras propuestas.", "num_citations": "4\n", "authors": ["379"]}
{"title": "Inspecci\u00f3n del lexico extendido del lenguaje\ufeff\n", "abstract": " El uso de glosariosen el proceso de elicitaci\u00f3n de requisitos se ha difundido tanto entre los desarrolladores como entre los investigadores en el campo de la Ingenier\u00eda de Requisitos. Por otro lado, se ha comprobado que...", "num_citations": "4\n", "authors": ["379"]}
{"title": "Cr\u00edticas Cognitivas a Heur\u00edsticas Orientadas a Modelos.\n", "abstract": " The requirements, as the foundation stone of the software system development, must be of the best possible quality, covering the real needs of the clients and the limitations of the project. Reaching an acceptable level of quality is not easy and sometimes it is not usually met. In previous research projects, these quality levels have been thoroughly evaluated in natural language written models, mainly in glossaries with definitions of the terms of the language used in the context of application, observing in these cases a low quality and low repetitiveness thereof. This feature is virtually independent of the model and of the sources of information used. Despite repeated efforts consisting of the incorporation of new heuristics, the improvements achieved were unsatisfactory. A retrospective review of these works allowed to detect that it is undoubtedly the cognitive ability of the own requirements engineer the origin of these defects. Notably, the heuristics used provide rudimentary guides on how to prepare the elicited information. This lack is the basis of the exploratory-descriptive research project that has been initiated and presented here.", "num_citations": "2\n", "authors": ["379"]}
{"title": "Evoluci\u00f3n de los Factores Situacionales durante el Proceso de Requisitos\n", "abstract": " La literatura presenta una diversidad de procesos de software, que dependen en gran medida del tipo de software a construir y de la envergadura del mismo. La selecci\u00f3n del proceso m\u00e1s adecuado y la adaptaci\u00f3n a un contexto espec\u00edfico suele ser a su vez fuertemente dependiente de la experiencia de los desarrolladores. Sin embargo, condicionar el an\u00e1lisis de los factores situacionales de esta manera es una restricci\u00f3n innecesaria. Por otra parte, muchos de estos factores impactan en el proceso de software desde sus etapas iniciales. Es por ello que es beneficioso realizar una adaptaci\u00f3n lo m\u00e1s temprana posible, en funci\u00f3n de factores observables en el contexto. Es decir, considerar los factores situacionales desde el proceso de requisitos mismo. A partir de varios casos reales donde se aplic\u00f3 un proceso de requisitos, se inici\u00f3 la evaluaci\u00f3n de dichos factores, observ\u00e1ndose que algunos de ellos son dif\u00edciles de establecer con precisi\u00f3n en los primeros pasos del proceso o que por su naturaleza cambian a lo largo del proceso. Conocer qu\u00e9 factores son m\u00e1s proclives a evolucionar por mejora de la estimaci\u00f3n inicial o por cambios genuinos permitir\u00e1 una mejor adaptaci\u00f3n del proceso de requisitos.", "num_citations": "2\n", "authors": ["379"]}
{"title": "Inspecci\u00f3n Centrada en Omisiones y Ambig\u00fcedades de un Modelo L\u00e9xico.\n", "abstract": " El uso de modelos escritos en lenguaje natural en la producci\u00f3n de requisitos est\u00e1 ampliamente difundido tanto en la literatura como en el \u00e1mbito profesional. Si bien estos modelos favorecen la comunicaci\u00f3n entre los involucrados y la validaci\u00f3n, presentan ciertos obst\u00e1culos, como la ambig\u00fcedad del texto y la dificultad en realizar verificaciones automatizadas. La inspecci\u00f3n es reconocida como una t\u00e9cnica de verificaci\u00f3n de alta efectividad para detectar defectos en c\u00f3digo fuente, modelos de dise\u00f1o y modelos de requisitos. Se propone una variante de la t\u00e9cnica de inspecci\u00f3n basada en la construcci\u00f3n de mapas conceptuales para verificar un modelo l\u00e9xico. Estudios estad\u00edsticos han comprobado que este modelo l\u00e9xico presenta un bajo nivel de completitud, y que puede arrastrarse a otros modelos pues suele construirse al inicio de un proceso de requisitos. Dado ello, la inspecci\u00f3n propuesta se aboca a detectar principalmente omisiones y ambig\u00fcedades, habi\u00e9ndose probado en siete casos con resultados promisorios.", "num_citations": "2\n", "authors": ["379"]}
{"title": "Priorizar Requisitos: un Estudio sobre sus Prop\u00f3sitos\n", "abstract": " La literatura propone diversidad de t\u00e9cnicas de asignaci\u00f3n de prioridades a requisitos, las que a veces se aplican sobre otros elementos intermedios generados en el proceso de ingenier\u00eda de requisitos, tales como casos de uso, historias de usuario, funciones o intereses estrat\u00e9gicos. As\u00ed como existe una variedad de algoritmos, escalas de valoraciones cuantitativas y cualitativas, puntos de vista y criterios a utilizar, tambi\u00e9n se pueden observar distintos prop\u00f3sitos al asignar prioridades. Esto \u00faltimo es un tema poco tratado cuando se realizan estudios comparativos de las mismas. Asimismo, el uso de estas t\u00e9cnicas debiera ser coherente con su prop\u00f3sito, sin embargo, se ha observado que esto no siempre ocurre. El objetivo principal del presente art\u00edculo es justamente poner en evidencia los prop\u00f3sitos expl\u00edcitos y subyacentes de las t\u00e9cnicas de priorizaci\u00f3n y la coherencia o su falta en oportunidad de su uso, lo que no es una cuesti\u00f3n menor porque gran parte de las actividades del proceso de desarrollo est\u00e1n influenciadas por estas prioridades.", "num_citations": "2\n", "authors": ["379"]}
{"title": "Heur\u00edsticas para el modelado de requisitos escritos en lenguaje natural\n", "abstract": " El dise\u00f1o de heur\u00edsticas de calidad comprobable que permitan facilitar la construcci\u00f3n de modelos en la Ingenier\u00eda de Requisitos es una ardua tarea. Disponer de dichas heur\u00edsticas simplifica las actividades del ingeniero de requisitos y permite mejorar la calidad de los modelos producidos. Trabajando sobre problemas de completitud de modelos en lenguaje natural, se observ\u00f3 que algunas heur\u00edsticas de construcci\u00f3n de dichos modelos no lograban efectos reales en la reducci\u00f3n de las omisiones. Es por ello que se propone una mejora en las heur\u00edsticas para facilitar la creaci\u00f3n de un modelo en lenguaje natural llamado L\u00e9xico Extendido del Lenguaje. Estas heur\u00edsticas se elaboraron en base a la identificaci\u00f3n de las causas que provocaban las omisiones detectadas.", "num_citations": "2\n", "authors": ["379"]}
{"title": "Introducing Variability in a Client-Oriented Requirements Engineering Process\n", "abstract": " It is a good practice to consider the adaptation of any process to particular situations. This applies to Requirements Engineering where the requirements production process becomes adaptable to particular situations. Indicators depicting these situations should be created in order to guide the choice of the requirements process that best suits each specific case. Almost all literature offers a fixed requirements process independent of the context where it will be carried out. Top-down and bottom-up approaches are the most widespread ones, though middle-out approaches or combinations of them sometimes provide more accurate solutions. Our present research project \u201cAdaptability and Completeness in Requirements Process\u201d is centered on improving a well-developed requirements process based on natural language models (a glossary, scenarios and requirement specifications). The idea is to establish the factors that may influence a software project and the adaptations that may be introduced in the requirements process.", "num_citations": "2\n", "authors": ["379"]}
{"title": "Inspecciones para mejorar la calidad de modelos en lenguaje natural\n", "abstract": " Las inspecciones han probado ser de gran eficacia en la detecci\u00f3n de defectos en c\u00f3digo fuente, por lo que esta t\u00e9cnica se ha adaptado para verificar modelos elaborados en el proceso de especificar requisitos. La literatura ha propuesto algunas variantes de inspecci\u00f3n en el modo de detectar defectos en estos modelos, sin embargo, los estudios emp\u00edricos realizados no alcanzan para establecer qu\u00e9 variante puede ser m\u00e1s apropiada en determinadas situaciones, en funci\u00f3n de la calidad exigida y tiempos disponibles. Dado el uso frecuente de modelos escritos en lenguaje natural en el proceso de requisitos, se ha llevado a cabo un experimento para comparar la eficiencia y eficacia de tres variantes de inspecci\u00f3n aplicadas a 5 modelos l\u00e9xico. Los resultados obtenidos permiten establecer una aproximaci\u00f3n inicial en cuanto a que la variante basada en la lectura constructiva detecta un n\u00famero superior de defectos, principalmente omisiones y ambig\u00fcedades, aunque insumiendo m\u00e1s tiempo.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Enhancing a Lexicon Model by Concept Mapping\n", "abstract": " Starting with good requirements specifications is an essential key to increase the likelihood of software project success. Defects persisting in specifications will inevitable be transferred to subsequent models and software components damaging client expectations through the software product. Therefore, early verifications of requirements models should be a regular activity in a software process. Most verification techniques aim to detect defects about wrong facts, inconsistencies and to a lesser extent omissions. Models produced in a Requirements Engineering process are frequently written in natural language, thus enabling the appearance of ambiguities. This article presents a preliminary proposal for verifying a lexicon model driven by concept maps, which is mainly focused on detecting omissions and ambiguities, and it recommends corrections to the model. This proposal was applied to a model produced for a real software project, detecting a reasonable number of defects.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Uso de un L\u00e9xico y Escenarios para Mitigar Amenazas a Requisitos en el Desarrollo Global de Software.\n", "abstract": " El desarrollo global de software se est\u00e1 difundiendo cada vez m\u00e1s en las organizaciones. Si bien brinda ventajas competitivas al aumentar la velocidad en las entregas del software y reducir costos por aprovechar recursos calificados m\u00e1s baratos, es una forma de trabajo compleja, donde amenazas provenientes principalmente de distancias geogr\u00e1ficas y culturales pueden impactar negativamente en actividades y artefactos del proceso. La calidad de los requisitos suele deteriorarse debido a estas amenazas latentes no tratadas, propagando defectos en subsiguientes fases del desarrollo. Estas dificultades fueron estudiadas en un proyecto real de gran envergadura, desarrollado bajo esta modalidad de trabajo. Debido a ellas, se elabor\u00f3 una propuesta utilizando un modelo L\u00e9xico y Escenarios para mitigar amenazas que afectan a los requisitos en esta modalidad distribuida. La propuesta fue aplicada en un nuevo proyecto real de similares caracter\u00edsticas y, al compararlos en calidad y tiempos en requisitos, se obtuvieron resultados suficientemente promisorios.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Interacci\u00f3n de Atributos al Priorizar Requisitos a trav\u00e9s de Objetivos\n", "abstract": " Una actividad que ejerce una fuerte influencia en la gesti\u00f3n de proyectos de software es establecer el orden de implementar los requisitos del software. Este ordenamiento determina la necesidad de recursos humanos y tecnol\u00f3gicos a lo largo del tiempo, el modo de puesta en operaci\u00f3n parcial del software y su mantenimiento, entre otras actividades. Es uno de los motores de la evoluci\u00f3n de los requisitos implementados y a implementar debido a realimentaciones de los usuarios al comenzar a utilizar los m\u00f3dulos instalados. Definir este orden es uno de los prop\u00f3sitos que detentan muchas t\u00e9cnicas de asignaci\u00f3n de prioridades. Se ha observado que varias de estas t\u00e9cnicas no pueden ser aplicadas cuando se tiene un gran n\u00famero de requisitos. Atendiendo a este problema, en proyectos anteriores se elabor\u00f3 una propuesta para asignar prioridades utilizando los objetivos del software, de manera tal de transferir prioridades desde objetivos espec\u00edficos hacia los requisitos, ya que el n\u00famero de objetivos conforma un conjunto mucho menor que el de requisitos. La propuesta actual consiste en definir qu\u00e9 atributos deben utilizarse para establecer el orden de implementaci\u00f3n de los requisitos.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Proceso de requisitos adaptable a factores situacionales\n", "abstract": " La estrategia de ingenier\u00eda de requisitos orientada al cliente, que se ha desarrollado a lo largo de varios proyectos de investigaci\u00f3n desde 1995, ha sido difundida a trav\u00e9s de cursos de grado y posgrado, y puesta en pr\u00e1ctica en varios proyectos de software en la industria. A\u00fan cuando esta estrategia puede considerarse suficientemente madura, todav\u00eda requiere mejoras en algunos aspectos relevantes. Una de las mejoras posibles est\u00e1 relacionada con la adaptaci\u00f3n del proceso de requisitos a las caracter\u00edsticas del proyecto de software. Estas caracter\u00edsticas se manifiestan en factores observables que ata\u00f1en al contexto de aplicaci\u00f3n y al proyecto mismo. En base a estos factores se pueden tomar decisiones referidas a qu\u00e9 artefactos de requisitos deben construirse, qu\u00e9 actividades del proceso de requisitos son necesarias realizar y qu\u00e9 t\u00e9cnicas espec\u00edficas son m\u00e1s convenientes aplicar. Es decir, se propone adaptar el proceso de requisitos a cada proyecto de software espec\u00edfico, en base a los factores situacionales imperantes en \u00e9l. En la pr\u00e1ctica hemos encontrado que esta tarea de adaptaci\u00f3n no se realiza, o s\u00f3lo se lleva a cabo parcialmente en base a la experiencia del ingeniero de requisitos a cargo, sin una gu\u00eda de par\u00e1metros a contemplar.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Trazabilidad de versiones en Ingenier\u00eda de Requisitos\n", "abstract": " La trazabilidad persiste como un aspecto relevante y dif\u00edcil de tratar en la pr\u00e1ctica de la Ingenier\u00eda de Software. El presente proyecto considera tratar en forma combinada la trazabilidad y el manejo de versiones en el caso de modelos de requisitos. Es un hecho observable que las trazas fluyen esencialmente del proceso del negocio hacia los requisitos, mientras que los cambios de versiones suelen tener origen en fen\u00f3menos casi independientes de este flujo. Esta ortogonalidad puede ser muy bien descripta mediante un modelo conjunto de trazas y versionado. Este modelo debe ser acompa\u00f1ado de gu\u00edas de producci\u00f3n de trazas para modelos basados en lenguaje natural. La idea primordial es que el modelo de trazas est\u00e9 desacoplado de los modelos del problema y que la producci\u00f3n de trazas se realice simult\u00e1neamente con el modelado de requisitos y en forma autom\u00e1tica o semiautom\u00e1tica. Por otro lado, se manejan los cambios en los modelos de requisitos generando concurrentemente cambios en las trazas, versionando luego las trazas.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Completitud en la Ingenieria de Requisitos\n", "abstract": " Cuando proyectos de software de gran envergadura fracasan (ver cuadro), habitualmente se llevan a cabo estudios posteriores para identificar las causas de dichos fracasos. Algunos de estos estudios son realizados por The Standish Group con sus denominados reportes CHAOS, por U.S. Government Accountability Office (GAO) de los Estados Unidos y por muchos investigadores en el \u00e1rea de la ingenier\u00eda de software [Faulk 92] [Lutz 93] [Leveson 95] [Finkelstein 96] [Breitman 99]. Una de las principales causas detectadas a trav\u00e9s de estos estudios han sido problemas en los requisitos: requisitos inadecuados, cambios en los requisitos durante el ciclo de vida, requisitos no bien comprendidos o comprendidos tard\u00edamente y requisitos incompletos.La incompletitud es uno de los graves problemas que se afronta en la fase de producci\u00f3n de requisitos [Kotonya 98] [Loucopoulos 95] [Firesmith 05], lo que inevitablemente se arrastra a las siguientes fases del proceso de desarrollo de software si no es atendida oportunamente. No es una tarea trivial detectar informaci\u00f3n faltante. Procurar la completitud de los requisitos, es por un lado un aspecto de calidad y por otro requiere una comprensi\u00f3n acabada del problema bajo estudio", "num_citations": "1\n", "authors": ["379"]}
{"title": "Agregando sem\u00e1ntica a t\u00e9cnicas de predicci\u00f3n de completitud en modelos de requisitos\n", "abstract": " En casi todas las ramas de la ingenier\u00eda se genera un bosquejo/maqueta/plano/diagrama que representa el artefacto a construir. A trav\u00e9s de \u00e9l, se planifica la construcci\u00f3n de ese artefacto y se asegura que responda a las expectativas de los clientes. Sin embargo, en la Ingenier\u00eda de Software la dificultad se centra justamente en la representaci\u00f3n del producto a construir, pues dicho producto (el software) es en s\u00ed mismo una representaci\u00f3n parcial del mundo real. Esto requiere prestar especial atenci\u00f3n a la generaci\u00f3n de dichos modelos para que sean precisos, correctos y completos. El proceso de desarrollo de software debe arrancar elaborando modelos de requisitos con la calidad apropiada, siendo la completitud de los mismos una caracter\u00edstica primordial. Aplicar t\u00e9cnicas de verificaci\u00f3n y validaci\u00f3n de los modelos debe formar parte de las actividades continuas del proceso de desarrollo, aunque ellas no permiten asegurar el grado de completitud alcanzado. Es necesario recurrir a t\u00e9cnicas predictivas que realicen estimaciones del tama\u00f1o esperado del modelo de requisitos. Se propone entonces agregar an\u00e1lisis sem\u00e1ntico a la aplicaci\u00f3n de estas t\u00e9cnicas predictivas, en particular el M\u00e9todo de Captura y Recaptura. Esto conllevar\u00e1 a establecer mejoras al proceso de construcci\u00f3n de los modelos de requisitos.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Documentando Requisitos en el Contexto de su Elicitacion\n", "abstract": " La l\u00ednea de investigaci\u00f3n \u201cEspecificaci\u00f3n de Requisitos\u201d est\u00e1 enfocada en formular los requisitos del sistema en forma clara y precisa, de manera tal de facilitar la gesti\u00f3n de los mismos y establecer las etapas de su puesta en servicio a trav\u00e9s de unidades de software. Para ello, se propone el desarrollo de una estrategia para confeccionar un documento de definici\u00f3n de requisitos (SRS) a partir de escenarios futuros ya construidos, y la asignaci\u00f3n de prioridades a dichos requisitos. La particularidad que se vislumbra en esta estrategia es que los requisitos individualizados tienden a ser libres de conflictos y de ambig\u00fcedad a consecuencia del propio proceso de producci\u00f3n La propuesta para asignar prioridades a requisitos se apoya en el proceso previo que les dio origen: su derivaci\u00f3n desde escenarios y la descomposici\u00f3n de objetivos en sub-objetivos.", "num_citations": "1\n", "authors": ["379"]}
{"title": "Using scenarios to derive software\n", "abstract": " The present thesis describes a Requirements Engineering strategy, called SDRES (Scenario Driven Requirements Engineering Strategy), which proposes to face topics rarely treated in real practice, such as continuous changes in requirements, software defects originated during requirements production, the organisational context surrounding the software system and the treatment of quality requirements.", "num_citations": "1\n", "authors": ["379"]}