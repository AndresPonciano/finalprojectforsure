{"title": "Collective anomaly detection based on long short-term memory recurrent neural networks\n", "abstract": " Intrusion detection for computer network systems is becoming one of the most critical tasks for network administrators today. It has an important role for organizations, governments and our society due to the valuable resources hosted on computer networks. Traditional misuse detection strategies are unable to detect new and unknown intrusion types. In contrast anomaly detection in network security aims to distinguish between illegal or malicious events and normal behavior of network systems. Anomaly detection can be considered as a classification problem where it builds models of normal network behavior, which it uses to detect new patterns that significantly deviate from the model. Most of the current research on anomaly detection is based on the learning of normal and anomaly behaviors. They have no memory that is they do not take into account previous events classify new ones. In this paper, we\u00a0\u2026", "num_citations": "202\n", "authors": ["1709"]}
{"title": "A Hybrid Autoencoder and Density Estimation Model for Anomaly Detection\n", "abstract": " A novel one-class learning approach is proposed for network anomaly detection based on combining autoencoders and density estimation. An autoencoder attempts to reproduce the input data in the output layer. The smaller hidden layer becomes a bottleneck, forming a compressed representation of the data. It is now proposed to take low density in the hidden layer as indicating an anomaly. We study two possibilities for modelling density: a single Gaussian, and a full kernel density estimation. The methods are tested on the NSL-KDD dataset, and experiments show that the proposed methods out-perform best-known results on three out of four sub-datasets.", "num_citations": "87\n", "authors": ["1709"]}
{"title": "GEVA: grammatical evolution in Java\n", "abstract": " We are delighted to announce the release of GEVA [1], an open source software implementation of Grammatical Evolution (GE) in Java. Grammatical Evolution in Java (GEVA) was developed at UCD's Natural Computing Research & Applications group (http://ncra.ucd.ie).", "num_citations": "80\n", "authors": ["1709"]}
{"title": "Ponyge2: Grammatical evolution in python\n", "abstract": " Grammatical Evolution (GE) is a population-based evolutionary algorithm, where a formal grammar is used in the genotype to phenotype mapping process. PonyGE2 is an open source implementation of GE in Python, developed at UCD's Natural Computing Research and Applications group. It is intended as an advertisement and a starting-point for those new to GE, a reference for students and researchers, a rapid-prototyping medium for our own experiments, and a Python workout. As well as providing the characteristic genotype to phenotype mapping of GE, a search algorithm engine is also provided. A number of sample problems and tutorials on how to use and adapt PonyGE2 have been developed.", "num_citations": "76\n", "authors": ["1709"]}
{"title": "Evolutionary design using grammatical evolution and shape grammars: Designing a shelter\n", "abstract": " A new evolutionary design tool is presented, which uses shape grammars and a grammar-based form of evolutionary computation, grammatical evolution (GE). Shape grammars allow the user to specify possible forms, and GE allows forms to be iteratively selected, recombined and mutated: this is shown to be a powerful combination of techniques. The potential of GE and shape grammars for evolutionary design is examined by attempting to design a single-person shelter to be evaluated by collaborators from the University College Dublin School of Architecture, Landscape, and Engineering. The team was able to successfully generate conceptual shelter designs based on scrutiny from the collaborators. A number of avenues for future work are highlighted arising from the case study.", "num_citations": "62\n", "authors": ["1709"]}
{"title": "Defining locality as a problem difficulty measure in genetic programming\n", "abstract": " A mapping is local if it preserves neighbourhood. In Evolutionary Computation, locality is generally described as the property that neighbouring genotypes correspond to neighbouring phenotypes. A representation has high locality if most genotypic neighbours are mapped to phenotypic neighbours. Locality is seen as a key element in performing effective evolutionary search. It is believed that a representation that has high locality will perform better in evolutionary search and the contrary is true for a representation that has low locality. When locality was introduced, it was the genotype-phenotype mapping in bitstring-based Genetic Algorithms which was of interest; more recently, it has also been used to study the same mapping in Grammatical Evolution. To our knowledge, there are few explicit studies of locality in Genetic Programming (GP). The goal of this paper is to shed some light on locality in GP and\u00a0\u2026", "num_citations": "50\n", "authors": ["1709"]}
{"title": "Combining structural analysis and multi-objective criteria for evolutionary architectural design\n", "abstract": " This study evolves and categorises a population of conceptual designs by their ability to handle physical constraints. The design process involves a trade-off between form and function. The aesthetic considerations of the designer are constrained by physical considerations and material cost. In previous work, we developed a design grammar capable of evolving aesthetically pleasing designs through the use of an interactive evolutionary algorithm. This work implements a fitness function capable of applying engineering objectives to automatically evaluate designs and, in turn, reduce the search space that is presented to the user.", "num_citations": "47\n", "authors": ["1709"]}
{"title": "Shape grammars and grammatical evolution for evolutionary design\n", "abstract": " We describe the first steps in the adoption of Shape Grammars with Grammatical Evolution for application in Evolutionary Design. Combining the concepts of Shape Grammars and Genetic Programming opens up the exciting possibility of truly generative design assist tools. In this initial study we provide some background on the adoption of grammar-based Genetic Programming for Evolutionary Design, describe Shape Grammars, and give a brief overview of Grammatical Evolution before detailing how Grammatical Evolution used Shape Grammars to successfully rediscover some benchmark target structures.", "num_citations": "46\n", "authors": ["1709"]}
{"title": "Automatic innovative truss design using grammatical evolution\n", "abstract": " Truss optimization in the field of Structural Engineering is a growing discipline. The application of Grammatical Evolution, a grammar-based form of Genetic Programming (GP), has shown that it is capable of generating innovative engineering designs. Existing truss optimization methods in GP focus primarily on optimizing global topology. The standard method is to explore the search space while seeking minimum cross-sectional areas for all elements. In doing so, critical knowledge of section geometry and orientation is omitted, leading to inaccurate stress calculations and structures not meeting codes of practice. This can be addressed by constraining the optimisation method to only use standard construction elements.The aim of this paper is not to find fully optimized solutions, but rather to show that solutions very close to the theoretical optimum can be achieved using real-world elements. This methodology can\u00a0\u2026", "num_citations": "42\n", "authors": ["1709"]}
{"title": "Should music interaction be easy?\n", "abstract": " A fundamental assumption in the fields of human-computer interaction and usability studies is that interfaces should be designed for ease of use, with a few exceptions such as the trade-off with long-term power. In this chapter it is argued that in music interaction the situation is far more complex, with social, technical, artistic, and psychological reasons why difficulty is in some cases a good thing, and in other cases a necessary evil. Different aspects of static and time-varying difficulty in music interaction are categorised. Some specific areas in which difficulty seems to be inextricably linked to positive aspects of music interaction are described. This is followed by discussion of some areas in which difficulty is undesirable and, perhaps, avoidable. Examples are drawn from music interaction research in general and from other chapters of this book in particular.", "num_citations": "39\n", "authors": ["1709"]}
{"title": "Jive: A generative, interactive, virtual, evolutionary music system\n", "abstract": " A novel paradigm and system for interactive generative music are described. Families of musical pieces are represented as functions of a time variable and several variables under user control. Composition/performance proceeds in the following two stages. Interactive grammatical evolution is used to represent, explore, and optimise the possible functions. The computer mouse or a Wii-controller can be used for real-time interaction with the generative process. We present rationale for design decisions and several pieces of example music.", "num_citations": "38\n", "authors": ["1709"]}
{"title": "Diagnosing a disorder in a classification benchmark\n", "abstract": " A large majority of the many hundreds of papers which use the UCI BUPA Liver Disorders data set as a benchmark for classification misunderstand the data and use an unsuitable dependent variable.", "num_citations": "37\n", "authors": ["1709"]}
{"title": "Towards an understanding of locality in genetic programming\n", "abstract": " Locality-how well neighbouring genotypes correspond to neighbouring phenotypes-has been defined as a key element affecting how Evolutionary Computation systems explore and exploit the search space. Locality has been studied empirically using the typical Genetic Algorithm (GA) representation (ie, bitstrings), and it has been argued that locality plays an important role in EC performance. To our knowledge, there are few explicit studies of locality using the typical Genetic Programming (GP) representation (ie, tree-like structures). The aim of this paper is to address this important research gap. We extend the genotype-phenotype definition of locality to GP by studying the relationship between genotypes and fitness. We consider a mutation-based GP system applied to two problems which are highly difficult to solve by GP (a multimodal deceptive landscape and a highly neutral landscape). To analyse in detail the\u00a0\u2026", "num_citations": "37\n", "authors": ["1709"]}
{"title": "Elevated pitch: Automated grammatical evolution of short compositions\n", "abstract": " A system for automatic composition using grammatical evolution is presented. Music is created under the constraints of a generative grammar, and under the bias of an automatic fitness function and evolutionary selection. This combination of two methods is seen to be powerful and flexible. Human evaluation of automatically-evolved pieces shows that a more sophisticated grammar in combination with a naive fitness function gives better results than the reverse.", "num_citations": "35\n", "authors": ["1709"]}
{"title": "An analysis of the behaviour of mutation in grammatical evolution\n", "abstract": " This study attempts to decompose the behaviour of mutation in Grammatical Evolution (GE). Standard GE mutation can be divided into two types of events, those that are structural in nature and those that are nodal. A structural event can alter the length of the phenotype whereas a nodal event simply alters the value at any terminal (leaf or internal node) of a derivation tree. We analyse the behaviour of standard mutation and compare it to the behaviour of its nodal and structural components. These results are then compared with standard GP operators to see how they differ. This study increases our understanding of how the search operators of an evolutionary algorithm behave.", "num_citations": "34\n", "authors": ["1709"]}
{"title": "Flex-gp: Genetic programming on the cloud\n", "abstract": " We describe Flex-GP, which we believe to be the first largescale genetic programming cloud computing system. We took advantage of existing software and selected a socket-based, client-server architecture and an island-based distribution model. We developed core components required for deployment on Amazon\u2019s EC2. Scaling the system to hundreds of nodes presented several unexpected challenges and required the development of software for automatically managing deployment, reporting, and error handling. The system\u2019s performance was evaluated on two metrics, performance and speed, on a difficult symbolic regression problem. Our largest successful Flex-GP runs reached 350 nodes and taught us valuable lessons for the next phase of scaling.", "num_citations": "32\n", "authors": ["1709"]}
{"title": "One-class classification for anomaly detection with kernel density estimation and genetic programming\n", "abstract": " A novel approach is proposed for fast anomaly detection by one-class classification. Standard kernel density estimation is first used to obtain an estimate of the input probability density function, based on the one-class input data. This can be used for anomaly detection: query points are classed as anomalies if their density is below some threshold. The disadvantage is that kernel density estimation is lazy, that is the bulk of the computation is performed at query time. For large datasets it can be slow. Therefore it is proposed to approximate the density function using genetic programming symbolic regression, before imposing the threshold. The runtime of the resulting genetic programming trees does not depend on the size of the training data. The method is tested on datasets including in the domain of network security. Results show that the genetic programming approximation is generally very good, and\u00a0\u2026", "num_citations": "30\n", "authors": ["1709"]}
{"title": "A library to run evolutionary algorithms in the cloud using MapReduce\n", "abstract": " We discuss ongoing development of an evolutionary algorithm library to run on the cloud. We relate how we have used the Hadoop open-source MapReduce distributed data processing framework to implement a single \u201cisland\u201d with a potentially very large population. The design generalizes beyond the current, one-off kind of MapReduce implementations. It is in preparation for the library becoming a modeling or optimization service in a service oriented architecture or a development tool for designing new evolutionary algorithms.", "num_citations": "29\n", "authors": ["1709"]}
{"title": "Toward user-directed evolution of sound synthesis parameters\n", "abstract": " Experiments are described which use genetic algorithms operating on the parameter settings of an FM synthesizer, with the aim of mimicking known synthesized sounds. The work is considered as a precursor to the development of synthesis plug-ins using evolution directed by a user. Attention is focussed on the fitness functions used to drive the evolution: the main result is that a composite fitness function \u2013 based on a combination of perceptual measures, spectral analysis, and low-level sample-by-sample comparison \u2013 drives more successful evolution than fitness functions which use only one of these types of criterion.", "num_citations": "29\n", "authors": ["1709"]}
{"title": "Subtree semantic geometric crossover for genetic programming\n", "abstract": " The semantic geometric crossover (SGX) proposed by Moraglio et al.\u00a0has achieved very promising results and received great attention from researchers, but has a significant disadvantage in the exponential growth in size of the solutions. We propose a crossover operator named subtree semantic geometric crossover (SSGX), with the aim of addressing this issue. It is similar to SGX but uses subtree semantic similarity to approximate the geometric property. We compare SSGX to standard crossover (SC), to SGX, and to other recent semantic-based crossover operators, testing on several symbolic regression problems. Overall our new operator out-performs the other operators on test data performance, and reduces computational time relative to most of them. Further analysis shows that while SGX is rather exploitative, and SC rather explorative, SSGX achieves a balance between the two. A simple method of\u00a0\u2026", "num_citations": "26\n", "authors": ["1709"]}
{"title": "Defining locality in genetic programming to predict performance\n", "abstract": " A key indicator of problem difficulty in evolutionary computation problems is the landscape's locality, that is whether the genotype-phenotype mapping preserves neighbourhood. In genetic programming the genotype and phenotype are not distinct, but the locality of the genotype-fitness mapping is of interest. In this paper we extend the original standard quantitative definition of locality to cover the genotype-fitness case, considering three possible definitions. By relating the values given by these definitions with the results of evolutionary runs, we investigate which definition is the most useful as a predictor of performance.", "num_citations": "26\n", "authors": ["1709"]}
{"title": "An executable graph representation for evolutionary generative music\n", "abstract": " We focus on a representation for evolutionary music based on executable graphs in which nodes execute arithmetic functions. Input nodes supply time variables and abstract control variables, and multiple output nodes are mapped to MIDI data. The motivation is that multiple outputs from a single graph should tend to behave in related ways, a key characteristic of good music. While the graph itself determines the short-term behaviour of the music, the control variables can be used to specify large-scale musical structure. This separation of music into form and content enables novel compositional techniques well-suited to writing for games and film, as well as for standalone pieces. A mapping from integer-array genotypes to executable graph phenotypes means that evolution, both interactive and non-interactive, can be applied. Experiments with and without human listeners support several specific claims concerning\u00a0\u2026", "num_citations": "24\n", "authors": ["1709"]}
{"title": "Tonality driven piano compositions with grammatical evolution\n", "abstract": " We present a novel method of creating piano melodies with Grammatical Evolution (GE). The system employs a context free grammar in combination with a tonality-driven fitness function to create a population of piano melodies. The grammar is designed to create a variety of styles of musical events within each melody such as runs, arpeggios, turns and chords without any a priori musical information in regards to key or time signature. The fitness of the individuals is calculated as a measure of their tonality defined by a statistical distribution of the pitches in each piece. A number of short compositions are presented demonstrating that our system is capable of creating music that is interesting and unpredictable.", "num_citations": "22\n", "authors": ["1709"]}
{"title": "Design of an autonomous intelligent Demand-Side Management system using stochastic optimisation evolutionary algorithms\n", "abstract": " Demand-Side Management systems aim to modulate energy consumption at the customer side of the meter using price incentives. Current incentive schemes allow consumers to reduce their costs, and from the point of view of the supplier play a role in load balancing, but do not lead to optimal demand patterns. In the context of charging fleets of electric vehicles, we propose a centralised method for setting overnight charging schedules. This method uses evolutionary algorithms to automatically search for optimal plans, representing both the charging schedule and the energy drawn from the grid at each time-step. In successive experiments, we optimise for increased state of charge, reduced peak demand, and reduced consumer costs. In simulations, the centralised method achieves improvements in performance relative to simple models of non-centralised consumer behaviour.", "num_citations": "21\n", "authors": ["1709"]}
{"title": "Evolutionary computation applied to the control of sound synthesis\n", "abstract": " Synthesizers are an essential tool in many types of modern music, giving musicians great control of expression and the ability to invent novel timbres. The control of synthesizers can be regarded as dividing into two parts. The choice of pitches (and their volumes and durations) may be accomplished using a sequencer or a keyboard, varying the notes while keeping the character of the notes unchanged: this problem is left to composers and virtuosi. The control of timbres is accomplished using controllers (either hardware or on-screen) such as knobs, sliders, and switches to vary the parameters of the underlying synthesis algorithms and thereby the character of the notes: this is the problem of interest here. It is a genuinely difficult problem, since typical synthesizers have dozens of parameters with names and functions which are often opaque to those who have not studied synthesis algorithms. Parameters\u2019 effects can be interdependent. Novice and non-technical musicians in particular often find synthesizer control to be difficult: some succeed only in random and serendipitous use of the parameter controllers, and others give up and stick to using sounds pre-programmed by the synthesizer manufacturer.", "num_citations": "21\n", "authors": ["1709"]}
{"title": "Evolutionary GUIs for sound synthesis\n", "abstract": " This paper describes an experiment carried out to determine which, among several possible evolutionary and non-evolutionary sound synthesizer graphical user interfaces, is the most suitable for the task of matching a target sound. Results show that standard and new varieties of evolutionary interface are competitive with a standard non-evolutionary interface, achieving better results in some situations and worse in others. Subjects\u2019 comments suggest a preference for a new type of evolutionary interface, presented here, which allows faster audition of the population, avoiding the need for time-consuming fitness evaluation of poor-quality sounds.", "num_citations": "21\n", "authors": ["1709"]}
{"title": "String-rewriting grammars for evolutionary architectural design\n", "abstract": " Evolutionary methods afford a productive and creative alternative design workflow. Crucial to success is the choice of formal representation of the problem. String-rewriting context-free grammars (CFGs) are one common option in evolutionary computation, but their suitability for design is not obvious. Here, a CFG-based evolutionary algorithm for design is presented. The process of meta-design is described, in which the CFG is created and then refined to produce an improved design language. CFGs are contrasted with another grammatical formalism better known in architectural design: Stiny's shape grammars. The advantages and disadvantages of the two types of grammars for design tasks are discussed.", "num_citations": "20\n", "authors": ["1709"]}
{"title": "Higher-order functions in aesthetic EC encodings\n", "abstract": " The use of higher-order functions, as a method of abstraction and re-use in EC encodings, has been the subject of relatively little research. In this paper we introduce and give motivation for the ideas of higher-order functions, and describe their general advantages in EC encodings. We implement grammars using higher-order ideas for two problem domains, music and 3D architectural design, and use these grammars in the grammatical evolution paradigm. We demonstrate four advantages of higher-order functions (patterning of phenotypes, non-entropic mutations, compression of genotypes, and natural expression of artistic knowledge) which lead to beneficial results on our problems.", "num_citations": "19\n", "authors": ["1709"]}
{"title": "Interactive EC Control of Synthesized Timbre\n", "abstract": " Perhaps the biggest limitation of interactive EC is the fitness evaluation bottleneck, caused by slow user evaluation and leading to small populations and user fatigue. In this study these problems are addressed through the proposal of new user interface techniques for interactive EC, which allow faster evaluation of large numbers of individuals and the combination of interactive with noninteractive evaluation. For the first time in the interactive EC literature a set of rigorous usability experiments compares these techniques with existing interactive EC and non-EC interfaces, for the application domain of sound synthesis. The results show that a new user interface for interactive EC improves performance, and further experiments lead to refinement of its design. The experimental protocol shows, again for the first time, that formal usability experiments are useful in the interactive EC setting. Statistically significant results\u00a0\u2026", "num_citations": "19\n", "authors": ["1709"]}
{"title": "Evolutionary computation applied to sound synthesis\n", "abstract": " Sound synthesis is a natural domain in which to apply evolutionary computation (EC). The EC concepts of the genome, the phenotype, and the fitness function map naturally to the synthesis concepts of control parameters, output sound, and comparison with a desired sound. More importantly, sound synthesis can be a very unintuitive technique, since changes in input parameters can give rise, via non-linearities and interactions among parameters, to unexpected changes in output sounds. The novice synthesizer user and the simple hill-climbing search algorithm will both fail to produce a desired sound in this context, whereas an EC technique is well-suited to the task.               In this chapter we introduce and provide motivation for the application of EC to sound synthesis, surveying previous work in this area. We focus on the problem of automatically matching a target sound using a given synthesizer. The\u00a0\u2026", "num_citations": "19\n", "authors": ["1709"]}
{"title": "Discrete planar truss optimization by node position variation using grammatical evolution\n", "abstract": " The majority of existing discrete truss optimization methods focus primarily on optimizing global truss topology using a ground structure approach, in which all possible node and beam locations are specified a priori. The ground structure discrete optimization method has been shown to be restrictive as it limits derivable solutions to what is explicitly defined. Greater representational freedom can improve performance. In this paper, grammatical evolution is applied. It can represent a variable number of nodes and their locations on a continuum. A novel method of connecting evolved nodes using a Delaunay triangulation algorithm shows that fully triangulated, kinematically stable structures can be generated. Discrete beam-truss structures can be optimized without the need for any information about the desired form of the solution other than the design envelope. Our technique is compared to existing discrete\u00a0\u2026", "num_citations": "16\n", "authors": ["1709"]}
{"title": "GEVA-grammatical evolution in java (v 1.0)\n", "abstract": " GEVA is an open source implementation of Grammatical Evolution in Java developed at UCD\u2019s Natural Computing Research & Applications group. As well as providing the characteristic genotype-phenotype mapper of GE a search algorithm engine and a simple GUI are also provided. A number of sample problems and tutorials on how to use and adapt GEVA have been developed.", "num_citations": "16\n", "authors": ["1709"]}
{"title": "Optimising complex pylon structures with grammatical evolution\n", "abstract": " Evolutionary algorithms have proven their ability to optimise architectural designs but are limited by their representation, i.e., the structures that the algorithm is capable of generating. The representation is normally constrained to small structures, or parts of a larger structure, to prevent a preponderance of invalid designs. This work uses a grammar based representation to generate large scale pylon designs. It removes invalid designs from the search space, but still allows complex and large scale constructions. In order to show the suitability of this method to real world design problems, we apply it to the Royal Institute of British Architects pylon design competition. This work shows that a combination of a grammar representation with real world constraints is capable of exploring different design configurations while evolving viable and optimised designs.", "num_citations": "15\n", "authors": ["1709"]}
{"title": "A fine-grained view of GP locality with binary decision diagrams as ant phenotypes\n", "abstract": " The property that neighbouring genotypes tend to map to neighbouring phenotypes, i.e.\u00a0locality, is an important criterion in the study of problem difficulty. Locality is problematic in tree-based genetic programming (GP), since typically there is no explicit phenotype. Here, we define multiple phenotypes for the artificial ant problem, and use them to describe a novel fine-grained view of GP locality. This allows us to identify the mapping from an ant\u2019s behavioural phenotype to its concrete path as being inherently non-local, and show that therefore alternative genetic encodings and operators cannot make the problem easy. We relate this to the results of evolutionary runs.", "num_citations": "15\n", "authors": ["1709"]}
{"title": "Improving fitness functions in genetic programming for classification on unbalanced credit card data\n", "abstract": " Credit card classification based on machine learning has attracted considerable interest from the research community. One of the most important tasks in this area is the ability of classifiers to handle the imbalance in credit card data. In this scenario, classifiers tend to yield poor accuracy on the minority class despite realizing high overall accuracy. This is due to the influence of the majority class on traditional training criteria. In this paper, we aim to apply genetic programming to address this issue by adapting existing fitness functions. We examine two fitness functions from previous studies and develop two new fitness functions to evolve GP classifiers with superior accuracy on the minority class and overall. Two UCI credit card datasets are used to evaluate the effectiveness of the proposed fitness functions. The results demonstrate that the proposed fitness functions augment GP classifiers, encouraging fitter\u00a0\u2026", "num_citations": "13\n", "authors": ["1709"]}
{"title": "Implementing an intuitive mutation operator for interactive evolutionary 3d design\n", "abstract": " Locality-how well neighbouring genotypes correspond to neighbouring phenotypes-has been described as a key element in Evolutionary Computation. Grammatical Evolution (GE) is a generative system as it uses grammar rules to derive a program from an integer encoded genome. The genome, upon which the evolutionary process is carried out, goes through several transformations before it produces an output. The aim of this paper is to investigate the impact of locality during the generative process using both qualitative and quantitative techniques. To explore this, we examine the effects of standard GE mutation using distance metrics and conduct a survey of the output designs. There are two different kinds of event that occur during standard GE Mutation. We investigate how each event type affects the locality on different phenotypic stages when applied to the problem of interactive design generation.", "num_citations": "13\n", "authors": ["1709"]}
{"title": "When and why metaheuristics researchers can ignore \u201cNo Free Lunch\u201d theorems\n", "abstract": " The No Free Lunch (NFL) theorem for search and optimisation states that averaged across all possible objective functions on a fixed search space, all search algorithms perform equally well. Several refined versions of the theorem find a similar outcome when averaging across smaller sets of functions. This paper argues that NFL results continue to be misunderstood by many researchers, and addresses this issue in several ways. Existing arguments against real-world implications of NFL results are collected and re-stated for accessibility and new ones are added. Specific misunderstandings extant in the literature are identified, with speculation as to how they may have arisen. This paper presents an argument against a common paraphrase of NFL findings\u2014that algorithms must be specialised to problem domains to do well\u2014after problematising the usually undefined term \u201cdomain\u201d. It provides novel concrete\u00a0\u2026", "num_citations": "11\n", "authors": ["1709"]}
{"title": "Grammatical music composition with dissimilarity driven hill climbing\n", "abstract": " An algorithmic compositional system that uses hill climbing to create short melodies is presented. A context free grammar maps each section of the resultant individual to a musical segment resulting in a series of MIDI notes described by pitch and duration. The dissimilarity between each pair of segments is measured using a metric based on the pitch contour of the segments. Using a GUI, the user decides how many segments to include and how they are to be distanced from each other. The system performs a hill-climbing search using several mutation operators to create a population of segments the desired distances from each other. A number of melodies composed by the system are presented that demonstrate the algorithm\u2019s ability to match the desired targets and the versatility created by the inclusion of the designed grammar.", "num_citations": "11\n", "authors": ["1709"]}
{"title": "An investigation of local patterns for estimation of distribution genetic programming\n", "abstract": " We present an improved estimation of distribution (EDA) genetic programming (GP) algorithm which does not rely upon a prototype tree. Instead of using a prototype tree, Operator-Free Genetic Programming learns the distribution of ancestor node chains,\" n-grams\", in a fit fraction of each generation's population. It then uses this information, via sampling, to create trees for the next generation. Ancestral n-grams are used because an analysis of a GP run conducted by learning depth first graphical models for each generation indicated their emergence as substructures of conditional dependence. We are able to show that our algorithm, without an operator and a prototype tree, achieves, on average, performance close to conventional tree based crossover GP on the problem we study. Our approach sets a direction for pattern-based EDA GP which off ers better tractability and improvements over GP with operators or\u00a0\u2026", "num_citations": "11\n", "authors": ["1709"]}
{"title": "How far is it from here to there? A distance that is coherent with GP operators\n", "abstract": " The distance between pairs of individuals is a useful concept in the study of evolutionary algorithms. It is particularly useful to define a distance which is coherent with, i.e. related to, the action of a particular operator. We present the first formal, general definition of this operator-distance coherence. We also propose a new distance function, based on the multi-step transition probability (MSTP), that is coherent with any GP operator for which the one-step transition probability (1STP) between individuals can be defined. We give an algorithm for 1STP in the case of subtree mutation. Because MSTP is useful in GP investigations, but impractical to compute, we evaluate a variety of means to approximate it. We show that some syntactic distance measures give good approximations, and attempt to combine them to improve the approximation using a GP symbolic regression method. We conclude that 1STP itself is a\u00a0\u2026", "num_citations": "10\n", "authors": ["1709"]}
{"title": "Timbral, perceptual, and statistical attributes for synthesized sound\n", "abstract": " A set of 40 timbral, perceptual, and statistical sound attributes is described and studied, with reference to machine learning applications and statistical experiments using a software synthesizer. The attributes include trajectory, vibrato, and statistical subsets, and subsets defined in the time, Fouriertransform, and partial domains. High correlations between some attributes are confirmed: this has application to future choice of attributes for machine learning applications. The synthesizer\u2019s achievable attribute ranges give an indication of its relative flexibility and strengths, and the method described has application to synthesizer design.", "num_citations": "10\n", "authors": ["1709"]}
{"title": "Dissimilarity-based representations for one-class classification on time series\n", "abstract": " In several real-world classification problems it can be impractical to collect samples from classes other than the one of interest, hence the need for classifiers trained on a single class. There is a rich literature concerning binary and multi-class time series classification but less concerning one-class learning.In this study, we investigate the little-explored one-class time series classification problem. We represent time series as vectors of dissimilarities from a set of time series referred to as prototypes. Based on this approach, we evaluate a Cartesian product of 12 dissimilarity measures, and 8 prototype methods (strategies to select prototypes). Finally, a one-class nearest neighbor classifier is used on the dissimilarity-based representations (DBR).Experimental results show that DBR are competitive overall when compared with a strong baseline on the data-sets of the UCR/UEA archive. Additionally, DBR enable\u00a0\u2026", "num_citations": "9\n", "authors": ["1709"]}
{"title": "Target-driven genetic algorithms for synthesizer control\n", "abstract": " A set of experiments is described which use Genetic Algorithms (GAs) to find the synthesizer parameters required to synthesize a target sound. Comparisons between the target and candidate sounds (for the algorithms\u2019 fitness functions) are calculated via a mapping from the sound data to a set of timbral, perceptual, and statistical sound attributes, many of which have been used in recent machine learning research. In particular, the performance of a new type of modification to the standard GA, using an Increasingly Discriminating Fitness Function, is evaluated; the performance of a weighted-attribute fitness function is also tested. The main results are that all GA techniques perform better than random search, but that the new variations fail to provide an improvement over the standard GA.", "num_citations": "9\n", "authors": ["1709"]}
{"title": "Geometric semantic grammatical evolution\n", "abstract": " Geometric Semantic Genetic Programming (GSGP) is a novel form of Genetic Programming (GP), based on a geometric theory of evolutionary algorithms, which directly searches the semantic space of programs. In this chapter, we extend this framework to Grammatical Evolution (GE) and refer to the new method as Geometric Semantic Grammatical Evolution (GSGE). We formally derive new mutation and crossover operators for GE which are guaranteed to see a simple unimodal fitness landscape. This surprising result shows that the GE genotype-phenotype mapping does not necessarily imply low genotype-fitness locality. To complement the theory, we present extensive experimental results on three standard domains (Boolean, Arithmetic and Classifier).", "num_citations": "8\n", "authors": ["1709"]}
{"title": "Why Is Auto-Encoding Difficult for Genetic Programming?\n", "abstract": " Unsupervised learning is an important component in many recent successes in machine learning. The autoencoder neural network is one of the most prominent approaches to unsupervised learning. Here, we use the genetic programming paradigm to create autoencoders and find that the task is difficult for genetic programming, even on small datasets which are easy for neural networks. We investigate which aspects of the autoencoding task are difficult for genetic programming.", "num_citations": "7\n", "authors": ["1709"]}
{"title": "Genetic programming\n", "abstract": " Genetic programming (GP                                                                    ) is the subset of evolutionary computation in which the aim is to create executable programs. It is an exciting field with many applications, some immediate and practical, others long-term and visionary. In this chapter, we provide a\u00a0brief history of the ideas of genetic programming. We give a\u00a0taxonomy of approaches and place genetic programming in a\u00a0broader taxonomy of artificial intelligence. We outline some current research topics and point to successful use cases. We conclude with some practical GP-related resources including software packages and venues for GP publications.", "num_citations": "7\n", "authors": ["1709"]}
{"title": "Graph grammars for evolutionary 3D design\n", "abstract": " A new interactive evolutionary 3D design system is presented. The representation is based on graph grammars, a fascinating and powerful formalism in which nodes and edges are iteratively rewritten by rules analogous to those of context-free grammars and shape grammars. The nodes of the resulting derived graph are labelled with Euclidean coordinates: therefore the graph fully represents a 3D beam design. Results from user-guided runs are presented, demonstrating the flexibility of the representation. Comparison with results using an alternative graph representation demonstrates that the graph grammar search space is more rich in organised designs. A set of numerical features are defined over designs. They are shown to be effective in distinguishing between the designs produced by the two representations, and between designs labelled by users as good or bad. The features allow the definition\u00a0\u2026", "num_citations": "7\n", "authors": ["1709"]}
{"title": "Evolutionary and generative music informs music HCI\u2014and vice versa\n", "abstract": " This chapter suggests a two-way influence between the field of evolutionary and generative music and that of human\u2013computer interaction and usability studies. The interfaces used in evolutionary and generative music can be made more effective and more satisfying to use with the influence of the ideas, methods, and findings of human\u2013computer interaction and usability studies. The musical representations which are a focus of evolutionary and generative music can enable new user-centric tools for mainstream music software. Some successful existing projects are described and some future work is proposed.", "num_citations": "7\n", "authors": ["1709"]}
{"title": "Locality in continuous fitness-valued cases and genetic programming difficulty\n", "abstract": " It is commonly accepted that a mapping is local if it preserves neighbourhood. In Evolutionary Computation, locality is generally described as the property that neighbouring genotypes correspond to neighbouring phenotypes. Locality has been classified in one of two categories: high and low locality. It is said that a representation has high locality if most genotypic neighbours correspond to phenotypic neighbours. The opposite is true for a representation that has low locality. It is argued that a representation with high locality performs better in evolutionary search compared to a representation that has low locality. In this work, we explore, for the first time, a study on Genetic Programming (GP) locality in continuous fitnessvalued cases. For this, we extended the original definition of locality (first defined and used in Genetic Algorithms using bitstrings) from genotype-phenotype mapping to the genotype-fitness\u00a0\u2026", "num_citations": "6\n", "authors": ["1709"]}
{"title": "Graph grammars as a representation for interactive evolutionary 3d design\n", "abstract": " A new interactive evolutionary 3D design system is presented. The representation is based on graph grammars, a fascinating and powerful formalism in which sub-graphs, nodes and edges are iteratively rewritten by rules analogous to those of context-free grammars and shape grammars. The nodes of the resulting derived graph are labelled with Euclidean coordinates: therefore the graph fully represents a 3D beam design. Results from user-guided runs are reported, demonstrating the flexibility of the representation. Comparison with results using an alternative graph representation demonstrates that the graph grammar search space is rich in appealing, organised designs. A set of numerical graph features are defined in an attempt to computationally distinguish between good and bad areas of the search space, leading to the definition of a computational fitness function and non-interactive runs.", "num_citations": "6\n", "authors": ["1709"]}
{"title": "A fine-grained view of phenotypes and locality in genetic programming\n", "abstract": " The locality of the mapping from genotype to phenotype is an important issue in the study of landscapes and problem difficulty in evolutionary computation. In tree-structured Genetic Programming (GP), the locality approach is not generally applied because no explicit genotype-phenotype mapping exists, in contrast to some other GP encodings. In this paper we define GP phenotypes in terms of semantics or behaviour. For a given problem, a model of one or more phenotypes and mappings between them may be appropriate e.g. g ? p0, where g is the genotype, pi are distinct types of phenotypes, and f is fitness. Thus, the behaviour of each component mapping can be studied separately. The locality of the genotype-phenotype mapping can also be decomposed into the effects of the encoding and those of the operator\u2019s genotypic step-size. Two standard benchmark problem classes\u2013Boolean and artificial ant\u00a0\u2026", "num_citations": "6\n", "authors": ["1709"]}
{"title": "Subject recognition using wrist-worn triaxial accelerometer data\n", "abstract": " This study demonstrates how a subject can be identified by the means of accelerometer data generated through wrist-worn devices in the context of clinical trials where data integrity is of utmost importance. A custom vector of features extracted from the daily accelerometer time series is defined. Feature selection is adapted to take account of the sequential structure in features. Several classifiers are compared within three different learning frameworks: binary, multi-class and one-class. A simple algorithm like logistic regression shows excellent performance in the binary and multi-class frameworks.", "num_citations": "5\n", "authors": ["1709"]}
{"title": "Program optimisation with dependency injection\n", "abstract": " For many real-world problems, there exist non-deterministic heuristics which generate valid but possibly sub-optimal solutions. The program optimisation with dependency injection method, introduced here, allows such a heuristic to be placed under evolutionary control, allowing search for the optimum. Essentially, the heuristic is \u201cfooled\u201d into using a genome, supplied by a genetic algorithm, in place of the output of its random number generator. The method is demonstrated with generative heuristics in the domains of 3D design and communications network design. It is also used in novel approaches to genetic programming.", "num_citations": "5\n", "authors": ["1709"]}
{"title": "Functional representations of music\n", "abstract": " Music is an interesting domain for the study of computational creativity. Some generative formalisms for musical composition (eg Markov chains) achieve plausible music over short time-scales (a few notes) but appear to be \u201cmeandering\u201d over longer time-scales. Imposing a sense of teleology or purpose is an important goal in creating valuable music.In the field of evolutionary computation (EC), researchers draw inspiration from Darwinian evolution to address computational problems. EC can be applied to aesthetic and creative domains. Although EC is commonly used to generate music, key open issues remain. Formal measurement of the quality of a piece of music in a computational fitness function is an obvious obstacle. A naive representation for music, such as a list of integer values each corresponding directly to a note, will tend to produce disorganised music. In previous work, Hoover et al.[1, and later] showed that a functional representation could impose organisation and a sense of purpose. In this system, music is represented as a function of time. A fixed piece of pre-existing music is used as a \u201cscaffold\u201d: the system then evolves functions, ie mappings from the scaffold to new accompanying material. Time-series of numerical \u201ccontrol\u201d variables are also proposed as a means of imposing structure on the music. Fitness is judged interactively. The XG project is partly inspired by this work. It discards the \u201cscaffold\u201d, but relies on the time-series of control variables (see Figure 1).", "num_citations": "5\n", "authors": ["1709"]}
{"title": "Genetic programming symbolic regression: What is the prior on the prediction\n", "abstract": " In Genetic Programming Symbolic Regression (GPSR), what is the prior on the prediction \u02c6y? This fundamental question does not seem to have been asked in the GP literature.The prior is a core concept in a Bayesian understanding of statistics, and is thought of as one\u2019s belief concerning the value of some variable of interest, prior to observing evidence, based on assumptions or on domain knowledge. Sometimes the variable whose prior is under discussion is an explicit model parameter which we are trying to infer from data. In the context of neural networks, for example,\u201cweight decay\u201d(L2 regularisation of weights) is equivalent to a prior on weights\u2014specifically, a prior belief that good weights will be normal and small in magnitude [16]. For another example [9] proposes a weakly informative prior on the learnable parameters of logistic regression. In Bayesian linear regression, the model is \u02c6y\u223c J (\u03b2T X, \u03c3 2I) and domain knowledge can be injected through priors on \u03b2 and \u03c32. In the context of inference it is most common to discuss priors on a model\u2019s internal parameters, as in this example. However, the prior on the Bayesian linear regression output \u02c6y also exists and in this case is normal.", "num_citations": "4\n", "authors": ["1709"]}
{"title": "Genetic programming for musical sound analysis\n", "abstract": " This study uses Genetic Programming (GP) in developing a classifier to distinguish between five musical instruments. Using only simple arithmetic and boolean operators with 95 features as terminals, a program is developed that can classify 300 unseen samples with an accuracy of 94%. The experiment is then run again using only 14 of the most often chosen features. Limiting the features in this way raised the best classification to 94.3% and the average accuracy from 68.2% to 75.67%. This demonstrates that not only can GP be used to create a classifier but it can be used to determine the best features to choose for accurate musical instrument classification, giving an insight into timbre.", "num_citations": "4\n", "authors": ["1709"]}
{"title": "A genetic algorithm approach to the smart grid tariff design problem\n", "abstract": " Smart metering in electricity markets offers an opportunity to explore more diverse tariff structures. In this article residential electricity demand and the System Marginal Price of Ireland\u2019s Single Electricity Market are simulated to estimate the wholesale risk associated with possible tariffs. A genetic algorithm (GA) with a stochastic fitness function is proposed to search for time-of-use tariffs that minimise wholesale risk to the supplier in residential markets. Alternative search algorithms and fitness functions are investigated in detail, as well as trade-offs in GA and simulation parameter settings.", "num_citations": "3\n", "authors": ["1709"]}
{"title": "Visualising evolutionary search spaces\n", "abstract": " Understanding the structure of search spaces can help us to design better search algorithms, and it is natural to try to understand search spaces by visualising them. For typical evolutionary search spaces, like the space of genetic programming trees, visualising them directly is impossible, because of their large dimensionality. However, we can use the idea of distances on search spaces to project them into two dimensions, expose their structure, and obtain useful and attractive visualisations.", "num_citations": "3\n", "authors": ["1709"]}
{"title": "Evolutionary and biologically inspired music, sound, art and design\n", "abstract": " EvoMUSART 2013\u2014the second International Conference and the 11th European event on Biologically Inspired Music, Sound, Art and Design\u2014took place April 3\u20135, 2013, in Vienna, Austria. It brought together researchers who use biologically inspired computer techniques for artistic, aesthetic, and design purposes. Researchers presented their latest work in the intersection of the fields of computer science, evolutionary systems, art, and aesthetics. Since its first edition in 2003 in Essex, UK, when it was one of the Applications of Evolutionary Computing workshops, evoMUSART has grown steadily. This growth is reflected in the number and quality of submissions, the size of the Program Committee, and the prestige of the event. In 2012 evoMUSART became a full evo* conference. It is now established as the main forum and the most important annual event in its field. It has always also been known for its friendly\u00a0\u2026", "num_citations": "3\n", "authors": ["1709"]}
{"title": "Logo design by grammatical evolution of L-Systems\n", "abstract": " Artistic Statement A good logo is both attractive and meaningful. Our populations are intended to demonstrate a range of attractive possibilities and to give the viewer a sense of what the evolutionary logo-design process is like. Our finished logos are intended to convey a clear meaning and to conform to a pre-defined style. Logo design can range from purely functional to highly expressive, as demonstrated by our range of images.", "num_citations": "3\n", "authors": ["1709"]}
{"title": "One-class subject authentication using feature extraction by grammatical evolution on accelerometer data\n", "abstract": " In this study Grammatical Evolution\u00a0(GE) is used to extract features from accelerometer time series\u00a0in order to increase the performance of a Kernel Density Estimation\u00a0(KDE) classifier. Time series are collected through nine wrist-worn accelerometers assigned to as many subjects. The goal is to distinguish each subject from all the others in a one-class classification framework. GE-evolved solutions, referred to as feature extractors, are thoroughly analyzed. Each solution is a function able to target a specific sub-sequence of a time series\u00a0and reduce it to a single scalar. In this way a long time series can be summarized to an arbitrary number of features. Results show that the proposed evolutionary algorithm outperforms two strong baselines.", "num_citations": "2\n", "authors": ["1709"]}
{"title": "Program Synthesis in a Continuous Space Using Grammars and Variational Autoencoders\n", "abstract": " An important but elusive goal of computer scientists is the automatic creation of computer programs given only input and output examples. We present a novel approach to program synthesis based on the combination of grammars, generative neural models, and evolutionary algorithms. Programs are described by sequences of productions sampled from a Backus-Naur form grammar. A sequence-to-sequence Variational Autoencoder (VAE) is trained to embed randomly sampled programs in a continuous space \u2013 the VAE\u2019s encoder maps a sequence of productions (a program) to a point z in the latent space, and the VAE\u2019s decoder reconstructs the program given z. After the VAE has converged, we can engage the decoder as a generative model that maps locations in the latent space to executable programs. Hence, an Evolutionary Algorithm can be employed to search for a vector z (and its corresponding\u00a0\u2026", "num_citations": "2\n", "authors": ["1709"]}
{"title": "Late-acceptance and step-counting hill-climbing GP for anomaly detection\n", "abstract": " One-Class Classification (OCC) for anomaly detection is a method for anomaly detection that constructs a classifier from only normal examples. Classifier systems such as Kernel Density Estimation (KDE) and Support Vector Machine (SVM) typically do well at this task, but can be slow when classifying new instances. Previous work has used Genetic Programming (GP) to learn the density from KDE, with results often out-performing those of one-class SVM (OCSVM) and KDE based OCC (OCKDE). However, the search is computationally expensive, and it suffers from a need to tune many parameters. In this paper, we will introduce the Late Acceptance Hill-Climbing (LAHC) and Step Counting Hill-Climbing (SCHC) algorithms as GP alternatives. These are simple hill-climbing algorithms, with specific methods to avoid local optima, and far less parameters to tune. The results demonstrate that the proposed models are\u00a0\u2026", "num_citations": "2\n", "authors": ["1709"]}
{"title": "Evolutionary and Biologically Inspired Music, Sound, Art and Design: Third European Conference, EvoMUSART 2014, Granada, Spain, April 23-25, 2014, Revised Selected Papers\n", "abstract": " This book constitutes the refereed proceedings of the Third International Conference on Biologically Inspired Music, Sound, Art and Design, Evo MUSART 2014, held in Granada, Spain, in April 2014, co-located with the Evo* 2013 events Euro GP, Evo COP, Evo BIO and Evo Applications. The 11 revised full papers presented were carefully reviewed and selected from 30 submissions. They cover a wide range of topics and application areas.", "num_citations": "2\n", "authors": ["1709"]}
{"title": "New-generation methods in an interpolating EC synthesizer interface\n", "abstract": " This paper describes work on a graphical user interface (GUI) for sound synthesizers based on interactive evolutionary computation. The GUI features user-controlled interpolation for fast auditioning and evaluation of relatively large populations. Interpolation behaviour is considered with reference to usability and the psychoacoustical \u201cjust noticeable difference\u201d. Different methods of generating new populations are tested in a formal usability experiment: a method giving a type of consistency of behaviour and increased population diversity is shown to give improved performance over two methods lacking these characteristics.", "num_citations": "2\n", "authors": ["1709"]}
{"title": "Feature extraction by grammatical evolution for one-class time series classification\n", "abstract": " When dealing with a new time series classification problem, modellers do not know in advance which features could enable the best classification performance. We propose an evolutionary algorithm based on grammatical evolution to attain a data-driven feature-based representation of time series with minimal human intervention. The proposed algorithm can select both the features to extract and the sub-sequences from which to extract them. These choices not only impact classification performance but also allow understanding of the problem at hand. The algorithm is tested on 30 problems outperforming several benchmarks. Finally, in a case study related to subject authentication, we show how features learned for a given subject are able to generalise to subjects unseen during the extraction phase.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Investigating Company Logo Memorability with Convolutional Neural Embedding Models.\n", "abstract": " The present study compared several state of the art neural embedding models for the correlation of their embeddings with human judgements, relating to both human memory and relevance ranking. These models included two embedding models, DeepRank and Ranknet; two classification models, ConvNet and VisNet; and a Variational Autoencoder. To assess each model\u2019s performance, two custom evaluation metrics were developed: a fine detail coefficient and a coarse detail coefficient. These measures revealed that the embeddings produced by the DeepRank model had the highest correlation with human judgement. This design combination of a tri-linear architecture, triplet loss function and semi-hard negative sampling did best at capturing the similarities between the images, achieving the highest overall result for both the fine detail and coarse detail coefficients. The embeddings produced by the DeepRank model were then used to investigate the memorability of each company logo. However, as image memorability cannot be characterised by low-level features alone our results suffered. In addition, the results show that deep features extracted from the embedding models show markedly better results on fine classification and retrieval tasks than their classification counterparts.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Program trace optimization\n", "abstract": " We introduce Program Trace Optimization (PTO), a system for \u2018universal heuristic optimization made easy\u2019. This is achieved by strictly separating the problem from the search algorithm. New problem definitions and new generic search algorithms can be added to PTO easily and independently, and any algorithm can be used on any problem. PTO automatically extracts knowledge from the problem specification and designs search operators for the problem. The operators designed by PTO for standard representations coincide with existing ones, but PTO automatically designs operators for arbitrary representations.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Late-acceptance hill-climbing with a grammatical program representation\n", "abstract": " The late-acceptance hill-climbing (LAHC) metaheuristic is a stochastic hill-climbing algorithm with a simple history mechanism, proposed by Burke and Bykov in 2008, which seems to give a remarkable and reliable performance improvement relative to hill-climbing itself. LAHC is here used for the first time for genetic programming problems, with a grammatical encoding. A novel variant of LAHC with an initial random sampling is also proposed. Performance of both is competitive with full population-based search.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Genetic Programming: 20th European Conference, EuroGP 2017, Amsterdam, the Netherlands, April 19-21, 2017, Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the 20th European Conference on Genetic Programming, EuroGP 2017, held in Amsterdam, The Netherlands, in April 2017, co-located with the Evo* 2017 events, EvoCOP, EvoMUSART, and EvoApplications. The 14 revised full papers presented together with 8 poster papers were carefully reviewed and selected from 32 submissions. The wide range of topics in this volume reflects the current state of research in the field. Thus, we see topics and applications including program synthesis, genetic improvement, grammatical representations, self-adaptation, multi-objective optimisation, program semantics, search landscapes, mathematical programming, games, operations research, networks, evolvable hardware, and program synthesis benchmarks.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "EvoMUSART 2014: third international conference on evolutionary and biologically inspired music, sound, art and design\n", "abstract": " Evolutionary Computation (EC) is a broad class of computational techniques inspired by nature, and in particular by Darwinian evolution. EC is used for search-and-optimization problems ranging from business and engineering to graphical art, as described in this section. It may be familiar to long-time readers, as Leonardo has previously published two special sections on evolutionary art, in Leonardo Vol. 35, No. 2, and Vol. 36, No. 1.The basic principles are those of genetics. In EC, as in nature, there is a population of individuals, and each has some genetic material (a genotype) that affects the appearance or behavior of the individual. Among the individuals of the population, some are \u201cbetter\u201d than others and give rise to new individuals by mating or mutation. Others are discarded. Over time, the population improves. In nature, better refers to the ability to survive and reproduce in a harsh environment. In EC, if the\u00a0\u2026", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Mapping brain signals to music via executable graphs\n", "abstract": " A method for generating music via a mapping from brain signals is proposed. The brain signals are recorded using consumer-level brain-computer interface equipment. Each time-step in the signal is passed through a directed acyclic graph whose nodes execute simple numerical manipulations. Certain nodes also output MIDI commands, leading to patterned MIDI output. Some interesting music is obtained, and desirable system properties are demonstrated: the music is responsive to changes in input, and a single input signal passed through different graphs leads to similarly-structured outputs.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Measuring mutation operators\u2019 exploration-exploitation behaviour and long-term biases\n", "abstract": " We propose a simple method of directly measuring a mutation operator\u2019s short-term exploration-exploitation behaviour, based on its transition matrix. Higher values for this measure indicate a more exploitative operator. Since operators also differ in their degree of long-term bias towards particular areas of the search space, we propose a simple method of directly measuring this bias, based on the Markov chain stationary state. We use these measures to compare numerically the behaviours of two well-known mutation operators, the genetic algorithm per-gene bitflip mutation and the genetic programming subtree mutation.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Evolutionary and Biologically Inspired Music, Sound, Art and Design: Second International Conference, EvoMUSART 2013, Vienna, Austria, April 3-5, 2013, Proceedings\n", "abstract": " This book constitutes the refereed proceedings of the Second International Conference on Biologically Inspired Music, Sound, Art and Design, EvoMUSART 2013, held in Vienna, Austria, in March 2013, colocated with the Evo* 2013 events EuroGP, EvoCOP, EvoBIO, and EvoApplications. The 11 revised full papers and 5 poster papers presented were carefully reviewed and selected from 36 submissions. They cover a wide range of topics and application areas, including: generative approaches to music, graphics, game content, and narrative; robot gait creation; music information retrieval; computational aesthetics; the mechanics of interactive evolutionary computation; and the art theory of evolutionary computation.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "FlexGP. py: Prototyping Flexibly-Scaled, Flexibly-Factored Genetic Programming for the Cloud\n", "abstract": " Running genetic programming on the cloud presents researchers with great opportunities and challenges. We argue that standard island algorithms do not have the properties of elasticity and robustness required to run well on the cloud. We present a prototyped design for a decentralized, heterogeneous, robust, self-scaling, self-factoring, self-aggregating genetic programming algorithm. We investigate its properties using a software \u201csandbox\u201d.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Investigation of Membrane Computing for Generative Computer Graphics\n", "abstract": " In order to explore new methods of generative graphics, we have explored the use of the relatively new computing paradigm known as Membrane Computing. Similar to the oft-used technique known as Lindenmeyer Systems (L- Systems), Membrane Computing shows potential as being a more powerful tool for generating graphics.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Interactive interpolating crossover in grammatical evolution\n", "abstract": " Interactive interpolating crossover allows a user to quickly see a large number of individuals formed by interactively-controlled interpolation between two or more parents. We study it here for the first time in the context of grammatical evolution (GE). We define methods of quantifying the behaviour of interpolations and use them to compare two methods of performing interpolation and two encodings for GE, one standard and one new. We conclude that a Cartesian interpolation combined with a novel developmental-style GE encoding gives the most usable results. We make connections between our work and broader issues of genotype-phenotype mappings, landscapes, and operators.", "num_citations": "1\n", "authors": ["1709"]}
{"title": "Tree representations and the usability of interpolating controllers\n", "abstract": " Interpolation is ubiquitous as a user interface method: it is here investigated for its usability using both numerical and experimental methods. Three properties\u2014consistency, locality, and monotonicity\u2014are stated to be required for interpolating controllers to be usable. These properties are defined quantitatively. An existing linear representation for tree structures is shown to have relatively poor values for these properties, and an alternative method of representing trees is proposed with much better values. The properties are confirmed to be important, and the new tree representation is shown to be much more usable, in a pair of user experiments.", "num_citations": "1\n", "authors": ["1709"]}