{"title": "Pingmesh: A large-scale system for data center network latency measurement and analysis\n", "abstract": " Can we get network latency between any two servers at any time in large-scale data center networks? The collected latency data can then be used to address a series of challenges: telling if an application perceived latency issue is caused by the network or not, defining and tracking network service level agreement (SLA), and automatic network troubleshooting. We have developed the Pingmesh system for large-scale data center network latency measurement and analysis to answer the above question affirmatively. Pingmesh has been running in Microsoft data centers for more than four years, and it collects tens of terabytes of latency data per day. Pingmesh is widely used by not only network software developers and engineers, but also application and service developers and operators.", "num_citations": "326\n", "authors": ["227"]}
{"title": "Stroke localization and binding to electronic document\n", "abstract": " A method and apparatus for capturing information encoded within a surface, such as location information or document metadata, and associating the information with a document is described. The captured information may be obtained by a camera associated with a pointing or writing device having a camera, such as an image-capturing pen.", "num_citations": "248\n", "authors": ["227"]}
{"title": "Inertial sensors integration\n", "abstract": " An input device and method for generating electronic ink and/or other inputs is described. The input device may be used in combination with any surface through the use of an improved movement sensing technique for generating data for use in ink related applications and non-ink related applications. Improved motion sensing may be achieved using one or more inertial sensors for detecting movement of the input device by measuring such indicators as velocity, acceleration, and changes in electro-magnetic fields. The input device may include a memory for storing movement data and a transceiver for transmitting data representing movement of the input device to a host computer. Processing of the sensed movement data to generate images representative of hand written strokes may also be performed using a processor within the input device. The input device may be formed in the shape of a pen, and may\u00a0\u2026", "num_citations": "118\n", "authors": ["227"]}
{"title": "Enabling access to aggregated software security information\n", "abstract": " A method for enabling access to software security data is provided. The method includes accessing data associated with software vulnerabilities from a plurality of on-line sources. The method further includes aggregating the data from the plurality of on-line sources and identifying attributes associated with the data. The method also includes enabling access to the aggregated data through a graphical user interface that can be used to analyze the data according to the attributes.", "num_citations": "96\n", "authors": ["227"]}
{"title": "Software error report analysis\n", "abstract": " Described herein is technology for, among other things, accessing error report information. It involves various techniques and tools for analyzing and interrelating failure data contained in error reports and thereby facilitating developers to more easily and quickly solve programming bugs. Numerous parameters may also be specified for selecting and searching error reports. Several reliability metrics are provided to better track software reliability situations. The reliability metrics facilitate the tracking of the overall situation of failures that happen in the real word by providing metrics based on error reports (eg, failure occurrence trends, failure distributions across different languages).", "num_citations": "89\n", "authors": ["227"]}
{"title": "Yading: fast clustering of large-scale time series data\n", "abstract": " Fast and scalable analysis techniques are becoming increasingly important in the era of big data, because they are the enabling techniques to create real-time and interactive experiences in data analysis. Time series are widely available in diverse application areas. Due to the large number of time series instances (e.g., millions) and the high dimensionality of each time series instance (e.g., thousands), it is challenging to conduct clustering on large-scale time series, and it is even more challenging to do so in real-time to support interactive exploration. In this paper, we propose a novel end-to-end time series clustering algorithm, YADING, which automatically clusters large-scale time series with fast performance and quality results. Specifically, YADING consists of three steps: sampling the input dataset, conducting clustering on the sampled dataset, and assigning the rest of the input data to the clusters generated\u00a0\u2026", "num_citations": "81\n", "authors": ["227"]}
{"title": "Can I clone this piece of code here?\n", "abstract": " While code cloning is a convenient way for developers to reuse existing code, it may potentially lead to negative impacts, such as degrading code quality or increasing maintenance costs. Actually, some cloned code pieces are viewed as harmless since they evolve independently, while some other cloned code pieces are viewed as harmful since they need to be changed consistently, thus incurring extra maintenance costs. Recent studies demonstrate that neither the percentage of harmful code clones nor that of harmless code clones is negligible. To assist developers in leveraging the benefits of harmless code cloning and/or in avoiding the negative impacts of harmful code cloning, we propose a novel approach that automatically predicts the harmfulness of a code cloning operation at the point of performing copy-and-paste. Our insight is that the potential harmfulness of a code cloning operation may relate to\u00a0\u2026", "num_citations": "67\n", "authors": ["227"]}
{"title": "Strokes localization by m-array decoding and fast image matching\n", "abstract": " Systems and methods that determine a path of a pen tip as the pen tip is moved across a document are described. The document is watermarked with a maze pattern from which encoded position information is determined. A sequence of images is captured by a camera that is located in a pen. The path of the pen tip is determined by decoding the associated maze pattern and by matching the captured images with document images. If the position coordinates of any frame that is associated with a stroke cannot be determined from m-array decoding, the frames are transformed and then matched with an area of a document image. Once the position coordinates of at least one frame is determined, the position coordinates of other frames are determined by matching the frames in a neighboring area.", "num_citations": "45\n", "authors": ["227"]}
{"title": "Embedded interaction code decoding for a liquid crystal display\n", "abstract": " A method and system for decoding data on a medium that is captured by an input device is described. The method decodes a symbol design, such as an embedded interaction code (EIC), on a display screen, such as a liquid crystal display (LCD). An image that is captured by an input device, such as a universal pen-type input device with a camera, is received. The captured image is processed to output an extracted bit stream. Position data and/or metadata information is decoded from the extracted bit stream and a position of the captured image with respect to a screen of the LCD is determined based upon the decoded position data. The EIC pattern may be recognized from LCD pixel grids and a bit stream of EIC bits may be extracted based upon the recognized EIC pattern.", "num_citations": "43\n", "authors": ["227"]}