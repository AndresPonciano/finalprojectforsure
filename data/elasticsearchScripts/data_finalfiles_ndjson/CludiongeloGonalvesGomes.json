{"title": "Co-simulation: a Survey\n", "abstract": " Modeling and simulation techniques are today extensively used both in industry and science. Parts of larger systems are, however, typically modeled and simulated by different techniques, tools, and algorithms. In addition, experts from different disciplines use various modeling and simulation techniques. Both these facts make it difficult to study coupled heterogeneous systems. Co-simulation is an emerging enabling technique, where global simulation of a coupled system can be achieved by composing the simulations of its parts. Due to its potential and interdisciplinary nature, co-simulation is being studied in different disciplines but with limited sharing of findings. In this survey, we study and survey the state-of-the-art techniques for co-simulation, with the goal of enhancing future research and highlighting the main challenges. To study this broad topic, we start by focusing on discrete-event-based co-simulation\u00a0\u2026", "num_citations": "210\n", "authors": ["612"]}
{"title": "Co-simulation: State of the Art\n", "abstract": " It is essential to find new ways of enabling experts in different disciplines to collaborate more efficient in the development of ever more complex systems, under increasing market pressures. One possible solution for this challenge is to use a heterogeneous model-based approach where different teams can produce their conventional models and carry out their usual mono-disciplinary analysis, but in addition, the different models can be coupled for simulation (co-simulation), allowing the study of the global behavior of the system. Due to its potential, co-simulation is being studied in many different disciplines but with limited sharing of findings. Our aim with this work is to summarize, bridge, and enhance future research in this multidisciplinary area. We provide an overview of co-simulation approaches, research challenges, and research opportunities, together with a detailed taxonomy with different aspects of the state of the art of co-simulation and classification for the past five years. The main research needs identified are: finding generic approaches for modular, stable and accurate coupling of simulation units; and expressing the adaptations required to ensure that the coupling is correct.", "num_citations": "174\n", "authors": ["612"]}
{"title": "Maestro: the INTO-CPS co-simulation framework\n", "abstract": " Cyber-Physical Systems (CPSs) often operate in a critical context where it is crucial that they behave as intended. However, the heterogeneous nature of CPSs makes them inherently challenging to develop. To assist in the development process, one can perform co-simulation, where models of constituents of a CPS are coupled to jointly simulate the full system. The challenge herein is to combine heterogeneous formalisms in a sound fashion and address practical needs such as stability, performance, platform compatibility and so forth. To address this, Maestro is a tool for co-simulation using models adhering to the Functional Mock-up Interface standard for co-simulation. Its development was driven by needs from different industry domains such as railways, agriculture, building automation and automotive. It supports both a fixed and variable constraint-based iteration scheme along with platform distribution\u00a0\u2026", "num_citations": "50\n", "authors": ["612"]}
{"title": "An empirical survey on co-simulation: Promising standards, challenges and research needs\n", "abstract": " Co-simulation is a promising approach for the modelling and simulation of complex systems, that makes use of mature simulation tools in the respective domains. It has been applied in various different domains, oftentimes without a comprehensive study of the impact to the simulation results. As a consequence, over the recent years, researchers have set out to understand the essential challenges arising from the application of this technique. This paper complements the existing surveys in that the social and empirical aspects were addressed. More than 50 experts participated in a two-stage Delphi study to determine current challenges, research needs and promising standards and tools. Furthermore, an analysis of the strengths, weakness, opportunities and threats of co-simulation utilizing the analytic hierarchy process resulting in a SWOT-AHP analysis is presented. The empirical results of this study show that\u00a0\u2026", "num_citations": "40\n", "authors": ["612"]}
{"title": "Semantic adaptation for FMI co-simulation with hierarchical simulators\n", "abstract": " Model-based design can shorten the development time of complex systems by the use of simulation techniques. However, it can be hard to simulate the system as a whole if it is developed in a concurrent fashion by multiple and specialized teams. Co-simulation, with the support of the Functional Mockup Interface (FMI) Standard, is proposed as a way to promote tool interoperability while protecting the intellectual property of subsystems. The standard allows uniform communication between subsystem simulators, but does not state how the inputs and outputs should be interpreted, nor how the subsystems should interact correctly.Semantic adaptations can be quickly made to correct the interactions with subsystem simulators that were produced with different assumptions, and avoid changing those subsystems, their simulators, or the orchestration algorithm that computes the co-simulation. In this work, we explore\u00a0\u2026", "num_citations": "25\n", "authors": ["612"]}
{"title": "Modular design of hybrid languages by explicit modeling of semantic adaptation\n", "abstract": " The engineering of a complex cyber-physical system (CPS) involves the creation and simulation of hybrid models of- ten encompassing multiple levels of abstraction and combining different formalisms, often not expressible in any single existing formalisms. Modular language engineering is thus essential for effective and efficient development of new formalisms, appropriate for the task. In our work, each modeling language is represented as a language specification fragment: a modular representation of the syntax and semantics. We propose a white-box technique for explicitly modeling the definition and composition of the fragments. In this paper, we focus on the composition of the operational semantics (i.e., the semantic adaptation) of hybrid languages. This enables automatic synthesis of a simulator for the hybrid language. Our approach is demonstrated by creating two well-known hybrid languages as a\u00a0\u2026", "num_citations": "21\n", "authors": ["612"]}
{"title": "Towards the verification of hybrid co-simulation algorithms\n", "abstract": " Engineering modern systems is becoming increasingly difficult due to the heterogeneity between different subsystems. Modelling and simulation techniques have traditionally been used to tackle complexity, but with increasing heterogeneity of the subsystems, it becomes impossible to find appropriate modelling languages and tools to specify and analyse the system as a whole.                 Co-simulation is a technique to combine multiple models and their simulators in order to analyse the behaviour of the whole system over time. Past research, however, has shown that the na\u00efve combination of simulators can easily lead to incorrect simulation results, especially when co-simulating hybrid systems.                 This paper shows: (i) how co-simulation of a family of hybrid systems can fail to reproduce the order of events that should have occurred (event ordering); (ii) how to prove that a co-simulation algorithm is\u00a0\u2026", "num_citations": "19\n", "authors": ["612"]}
{"title": "Classification of model transformation tools: pattern matching techniques\n", "abstract": " While comparing different model transformation languages (MTLs), it is common to refer to their syntactic and semantic features and overlook their supporting tools\u2019 performance. Performance is one of the aspects that can hamper the application of MDD to industrial scenarios. An highly declarative MTL might simply not scale well when using large models due to its supporting implementation. In this paper, we focus on the several pattern matching techniques (including optimization techniques) employed in the most popular transformation tools, and discuss their effectiveness w.r.t. the expressive power of the languages used. Because pattern matching is the most costly operation in a transformation execution, we present a classification of the existing model transformation tools according to the pattern matching optimization techniques they implement. Our classification complements existing ones that are\u00a0\u2026", "num_citations": "19\n", "authors": ["612"]}
{"title": "HintCO-Hint-based Configuration of Co-simulations.\n", "abstract": " Simulation-based analyses of Cyber-Physical Systems are fundamental in industrial design and testing approaches. The utility of analyses relies on the correct configuration of the simulation tools, which can be highly complicated. System engineers can normally judge the results, and either evaluate multiple simulation algorithms, or change the models. However, this is not possible in a co-simulation approach. Co-simulation is a technique to perform full-system simulation, by combining multiple black-box simulators, each responsible for a part of the system. In this paper, we demonstrate the difficulty of correctly configuring a co-simulation scenario using an industrial case study. We propose an approach to tackle this challenge by allowing multiple engineers, specialized in different domains, to encode some of their experience in the form of hints. These hints, together with state-of-the-art best practices, are then used to semi-automatically guide the configuration process of the co-simulation. We report the application of this approach to a use case proposed by our industrial partners, and discuss some of the lessons learned.", "num_citations": "18\n", "authors": ["612"]}
{"title": "Co-simulation of continuous systems: a tutorial\n", "abstract": " Co-simulation consists of the theory and techniques to enable global simulation of a coupled system via the composition of simulators. Despite the large number of applications and growing interest in the challenges, the field remains fragmented into multiple application domains, with limited sharing of knowledge. This tutorial aims at introducing co-simulation of continuous systems, targeted at researchers new to the field.", "num_citations": "18\n", "authors": ["612"]}
{"title": "Functional Mock-up Interface: An Empirical Survey Identifies Research Challenges and Current Barriers\n", "abstract": " Co-simulation is a promising approach for the analysis of complex, multi-domain systems, that leverages mature simulation tools of the respective domains. It has been applied in many different disciplines in academia and industry, with limited sharing of findings. With the increasing adoption of the FMI standard, researchers have set to work on surveying the scattered knowledge on co-simulation in academia. This paper complements the existing surveys by taking on the social and empirical aspect, corroborating, and prioritizing, previous findings. We focus on understanding the perceived research challenges, and the current barriers, based on expert assessment. One of the main barriers pointed out is the limited support for discrete event and hybrid co-simulation.", "num_citations": "18\n", "authors": ["612"]}
{"title": "Approximated Stability Analysis of Bi-Modal Hybrid Co-simulation Scenarios\n", "abstract": " Co-simulation is a technique to orchestrate multiple simulators in order to approximate the behavior of a coupled system as a whole. Simulators execute in a lockstep fashion, each exchanging inputs and output data points with the other simulators at pre-accorded times.                 In the context of systems with a physical and a cyber part, the communication frequency with which the simulators of each part communicate can have a negative impact in the accuracy of the global simulation results. In fact, the computed behavior can be qualitatively different, compared to the actual behavior of the original system, laying waste to potentially many hours of computation. It is therefore important to develop methods that answer whether a given communication frequency guarantees trustworthy co-simulation results.                 In this paper, we take a small step in that direction. We develop a technique to approximate the\u00a0\u2026", "num_citations": "18\n", "authors": ["612"]}
{"title": "Stable Adaptive Co-simulation: A Switched Systems Approach\n", "abstract": " Co-simulation promotes the idea that domain specific simulation tools should cooperate in order to simulate the inter-domain interactions that are often observed in complex systems. To get trustworthy results, it is important that this technique preserves the stability properties of the original system. In this paper, we show how to preserve stability for adaptive co-simulation schemes, which offer fine grained control over the performance/accuracy of the co-simulation. To this end, we apply the joint spectral radius theory to certify that an adaptive co-simulation scheme is stable, and, if that is not possible, we use recent results in this field to create a trace of decisions that lead to instability. With this trace, it is possible to adjust the adaptive co-simulation in order to make it stable. Our approach is limited by the fact that computing the joint spectral radius is NP-Hard and undecidable in general. Nevertheless, we\u00a0\u2026", "num_citations": "17\n", "authors": ["612"]}
{"title": "Co-Simulation \u2013 an Empirical Survey: Applications, Recent Developments and Future Challenges\n", "abstract": " This article describes the first results of an empirical survey on co-simulation conducted with over 50 experts in this field. In the last decades, cosimulation has become an important tool to meet challenges emerging from the increasing complexity of systems and the need for efficient collaboration between experts in different disciplines. However, research on this topic has been motivated by varying fields of interest and developed with different perspectives on application and thus lead to different definitions and emphases within this topic. The present survey aims to clarify some of these different perceptions and open research fields.", "num_citations": "12\n", "authors": ["612"]}
{"title": "SyVOLT: Full Model Transformation Verification Using Contracts\n", "abstract": " We introduce SyVOLT, a plugin for the Eclipse development environment for the verification of structural pre-/post-condition contracts on model transformations. The plugin allows the user to build transformations in our transformation language DSLTrans using a visual editor. The pre-/post-condition contracts to be proved on the transformation can also be built in a similar interface. Our contract proving process is exhaustive, meaning that if a contract is said to hold, then the contract will hold for all input models of a transformation. If the contract does not hold, then the counter-examples (ie, input models) where the contract fails will be presented.", "num_citations": "12\n", "authors": ["612"]}
{"title": "Minimally, Constrained Stable Switched Systems and Application to Co-Simulation\n", "abstract": " We propose an algorithm to restrict the switching signals of a constrained switched system in order to guarantee its stability, while at the same time attempting to keep the largest possible set of allowed switching signals. Our work is motivated by applications to (co-)simulation where numerical stability is a hard constraint, but should be attained by restricting as little as possible the allowed behaviours of the simulators. We apply our results to certify the stability of an adaptive co-simulation orchestration algorithm, which selects the optimal switching signal at run-time, as a function of (varying) performance and accuracy requirements.", "num_citations": "11\n", "authors": ["612"]}
{"title": "Coupling Petri nets with Deterministic Formalisms Using Co-simulation\n", "abstract": " Modeling cyber-physical systems is often seen as a highly multi-disciplinary activity. Therefore, efficient methodologies are required to be able to represent environment, plant and control models using the most appropriate formalisms. On the one hand, the Petri net formalism is appropriate to model the environment of a complex cyber-physical system, especially since it inherently supports non-determinism and concurrency. On the other hand, plant models, based on the laws of physics, are often represented using differential equations. In order to produce a relevant simulation of the overall system, the controller, the plant and the environment models are composed. Co-simulation and its industrial standard, the Functional Mock-up Interface, is one such generic technique that allows for the coupling of different executable models. However, coupling a non-deterministic model with other types of models would be\u00a0\u2026", "num_citations": "11\n", "authors": ["612"]}
{"title": "Towards reuse of synchronization algorithms in co-simulation frameworks\n", "abstract": " An immediate industry challenge is to fashion a co-simulation that replicates real-systems behaviour with high fidelity. To achieve this goal, developers rely on frameworks to enhance the creation and analysis of the co-simulation. One major problem is that new co-simulation frameworks require extensive development, most of which resides in non-essential functionalities, before they can be used in practice. Additionally, existing co-simulations demand a thorough understanding before they can be extended.                 Our vision is a modular co-simulation framework architecture, that is easily extensible by researchers, and can integrate existing and legacy co-simulation approaches. The architecture we propose permits extension at three levels, each providing different degrees of flexibility. The most flexible integration level involves the specification of a Domain Specific Language (DSL) for Master\u00a0\u2026", "num_citations": "9\n", "authors": ["612"]}
{"title": "Foundations for Continuous Time Hierarchical Co-simulation\n", "abstract": " Complex systems have to decomposed into sub-systems which are developed by specialized teams. Modeling and simulation techniques help each team achieve a locally optimal solution but they fail to help all teams achieve a globally optimal solution. This is due to each team having its own models made in its own tools, and external suppliers having intellectual property. The result is that it is difficult to simulate the coupled system.Co-simulation is proposed as a way to enable such simulation. Simulators communicate and collaborate as black boxes. The technique has been used in a number of domains improving the overall cost of engineered systems. In these use cases, a minimum common denominator is assumed for the capabilities of simulators. Leveraging the optional capabilities of simulators improves the performance/accuracy of a co-simulation, but the number of decisions the orchestration mechanism has to make grows exponentially. Different, conflicting concerns have to be addressed in an optimal way.", "num_citations": "9\n", "authors": ["612"]}
{"title": "Rapid prototyping of self-adaptive-systems using python functional mockup units\n", "abstract": " During the development of Cyber-Physical Systems (CPSs), it is crucial to enable efficient collaboration between different disciplines. Co-simulation plays a key role in this by allowing the system as a whole to be simulated by composing simulations of its parts. The ability to do this coupling relies on the models adhering to a well-defined interface. The Functional Mockup Interface (FMI) defines this interface and the models that implemented it are called Functional Mockup Units (FMUs). While a wealth of specialized simulation tools can generate FMUs, they are often commercial and do not support of complex software prototypes. Rather than implement these as FMUs from scratch (FMI requires expertise in C), losing valuable time, the contribution presented in this paper is a tool that allows FMUs to be implemented rapidly in Python. The advantages of this approach are demonstrated in an industrial use case, where\u00a0\u2026", "num_citations": "8\n", "authors": ["612"]}
{"title": "Semantics of co-simulation algorithms with simulator contracts\n", "abstract": " The rapid adoption of co-simulation techniques allows for holistic complex system development. However, ensuring trustworthy results when combining simulators requires a careful consideration of their implementation and capabilities. Especially in black box integration, these are frequently left implicit. In this paper, we explore a way to account for simulator capabilities, by formalizing the execution of a co-simulation that respects such contracts. This formalization is specific to two kinds of contracts, but could serve as a basis to a general approach to black box co-simulation. An example application of the semantics to generate master algorithms is presented.", "num_citations": "8\n", "authors": ["612"]}
{"title": "Hybrid System Modelling and Simulation with Dirac Deltas\n", "abstract": " For a wide variety of problems, creating detailed continuous models of (continuous) physical systems is, at the very least, impractical. Hybrid models can abstract away short transient behaviour (thus introducing discontinuities) in order to simplify the study of such systems. For example, when modelling a bouncing ball, the bounce can be abstracted as a discontinuous change of the velocity, instead of resorting to the physics of the ball (de-)compression to keep the velocity signal continuous. Impulsive differential equations can be used to model and simulate hybrid systems such as the bouncing ball. In this approach, the force acted on the ball by the floor is abstracted as an infinitely large function in an infinitely small interval of time, that is, an impulse. Current simulators cannot handle such approximations well due to the limitations of machine precision. In this paper, we explore the simulation of impulsive differential equations, where impulses are first class citizens. We present two approaches for the simulation of impulses: symbolic and numerical. Our contribution is a theoretically founded description of the implementation of both approaches in a Causal Block Diagram modelling and simulation tool. Furthermore, we investigate the conditions for which one approach is better than the other.", "num_citations": "8\n", "authors": ["612"]}
{"title": "Towards modular language design using language fragments: The hybrid systems case study\n", "abstract": " Cyber-physical systems can be best represented using hybrid models that contain specifications of both continuous and discrete event abstractions. The syntax and semantics of such hybrid languages should ideally be defined by reusing the syntax and semantics of each components\u2019 formalisms. In language composition, semantic adaptation is needed to ensure correct realization of the concepts that are part of the intricacies of the hybrid language.               In this paper, we present a technique for the composition of heterogeneous languages by explicitly modelling the semantic adaptation between them. Each modelling language is represented as a language specification fragment (LSF): a modular representation of the syntax and semantics. The basis of our technique is to reuse the operational semantics as defined in existing simulators. Our approach is demonstrated by means of a hybrid language\u00a0\u2026", "num_citations": "8\n", "authors": ["612"]}
{"title": "Hint-Based Configuration of Co-simulations with Algebraic Loops\n", "abstract": " Co-simulation is a powerful technique for performing full-system simulation. Multiple black-box models and their simulators are combined together to provide the behaviour for a full system. However, the black-box nature of co-simulation and potentially infinite configuration space means that configuration of co-simulations is a challenging problem for today\u2019s practitioners. Our previous work on co-simulation configuration operated on the notion of hints, which allow system engineers to encode their knowledge and insights about the system. These hints, combined with state-of-the-art best practices, can then be used to semi-automatically configure the co-simulation. We summarize our previous hint-based configuration work here, and explore the challenging problem of scheduling co-simulations which contain algebraic loops. Solving or \u201cbreaking\u201d these loops is required for scheduling, yet this breaking process can\u00a0\u2026", "num_citations": "7\n", "authors": ["612"]}
{"title": "Causal-Block Diagrams\n", "abstract": " The description of a complex system in terms of constituent components and their interaction is one of the most natural and intuitive ways of decomposition. Causal Block Diagram (CBD) models combine subsystem blocks in a network of relationships between input signals and output signals. Popular modeling and simulation tools such as Matlab/SimulinkR implement different variants from the family of Causal Block Diagram formalisms. This chapter gives an overview of modeling and simulation of systems with software and physical components using Causal Block Diagrams. It describes the syntax and-both declarative and operational-semantics of CBDs incrementally. Starting from simple algebraic models (no notion of time), we introduce, first a discrete notion of time (leading to discretetime CBDs) and subsequently, a continuous notion of time (leading to continuous-time CBDs). Each new variant builds on the previous ones. Because of the heavy dependency of CBDs on numerical techniques, we give an intuitive introduction to this important field, pointing out main solutions as well as pitfalls.", "num_citations": "7\n", "authors": ["612"]}
{"title": "Property preservation in co-simulation\n", "abstract": " It is not just that systems are complex. Their development process is also complex. While systems comprised of many interacting, heterogeneous, components, are fundamental to our society [230, 276], we argue that the complexity in their development process should be reduced.", "num_citations": "6\n", "authors": ["612"]}
{"title": "Causal-block diagrams: a family of languages for causal modelling of cyber-physical systems\n", "abstract": " The description of a complex system in terms of constituent components and their interaction is one of the most natural and intuitive ways of decomposition. Causal Block Diagram (CBD) models combine subsystem blocks in a network of relationships between input signals and output signals. Popular modelling and simulation tools such as Matlab/Simulink\u00ae implement different variants from the family of Causal Block Diagram formalisms. This chapter gives an overview of modelling and simulation of systems with software and physical components using Causal Block Diagrams. It describes the syntax and-both declarative and operational-semantics of CBDs incrementally. Starting from simple algebraic models (no notion of time), we introduce, first a discrete notion of time (leading to discrete-time CBDs) and subsequently, a continuous notion of time (leading to continuous-time CBDs). Each new variant builds on the previous ones. Because of the heavy dependency of CBDs on numerical techniques, we give an intuitive introduction to this important field, pointing out main solutions as well as pitfalls.", "num_citations": "5\n", "authors": ["612"]}
{"title": "Generation of co-simulation algorithms subject to simulator contracts\n", "abstract": " Correct co-simulation results require a careful consideration of how the interacting simulators are implemented. In version 2.0 of the FMI Standard, input handling implementation is left implicit, which leads to the situation where a simulator can be interacted with in a manner that its implementation does not expect, yielding incorrect results. In this paper, we build on prior work to make information about each simulator implementation explicit, in order to derive correct interactions with it. The formalization we use is specific to two kinds of contracts, but could serve as a basis to a general approach to black box co-simulation. The algorithm we propose generates a co-simulation execution plan in linear time. It has been successfully applied to an industrial case study, and the results are available online.", "num_citations": "5\n", "authors": ["612"]}
{"title": "A Building Automation Case Study - Setup and Challenges\n", "abstract": " Smart buildings will play a fundamental role in ensuring comfort while reducing the energy required. However, due to the lack of knowledge about the operation of the smart controllers, the occupants can unintentionally increase the energy spent. Nevertheless, there is evidence that the informed and motivated user will actually cooperate with the system. Some of the issues associated with researching control systems in the context of building automation are difficult to address, because of the chronic lack of effective laboratory settings for experimentation. In this paper, we describe a system representative of the usual complexity found in cyber-physical systems, whose purpose is to address the needs for experimenting with building automation, with a focus on control systems and gamification. Designed with pragmatic concerns, this system presents a unique set of challenges and opportunities to research a new\u00a0\u2026", "num_citations": "5\n", "authors": ["612"]}
{"title": "An FMI-Based Initialization Plugin for INTO-CPS Maestro 2\n", "abstract": " The accuracy of the result of a co-simulation is dependent on the correct initialization of all the simulation units. In this work, we consider co-simulation where the simulation units are described as Functional Mock-up Units (FMU). The Functional Mock-up Interface (FMI) specification specifies constraints to the initialization of variables in the scope of a single FMU. However, it does not consider the initialization of interconnected variables between instances of FMUs. Such interconnected variables place particular constraints on the initialization order of the FMUs.                 The approach taken to calculate a correct initialization order is based on predicates from the FMI specification and the topological ordering of both internal connections and interconnected variables. The approach supports the initialization of co-simulation scenarios containing algebraic loops using fixed point iteration. The approach has\u00a0\u2026", "num_citations": "4\n", "authors": ["612"]}
{"title": "Optimizing fault injection in FMI co-simulation through sensitivity partitioning.\n", "abstract": " As society and industry relies extensively on Cyber-Physical Systems (CPS), any malfunctions can have unforeseen catastrophic failures. Fault Injection (FI) techniques perturb a model of a CPS with the intention of causing a failure and measuring the robustness of the CPS. Naturally, the success of a FI simulation depends on three factors:(i) the realism of the faults injected;(ii) how quickly the faults cause catastrophic failure; and (iii) the fidelity of the model used.This paper proposes to improve the success rate of FI studies by addressing each one of these factors. An algorithm is presented that leverages traditional sensitivity analysis in hybrid systems to reduce an uncountable fault search space to a optimal finite set (factors i, ii), and we use co-simulation as the model integration technique (factor iii). We evaluate our contribution on the power window system developed by MathWorks\u00ae.", "num_citations": "3\n", "authors": ["612"]}
{"title": "Formally verified FMI enabled external data broker: rabbitmq FMU\n", "abstract": " Automated monitoring of deployed Cyber-physical Systems while they are operating can assist in detecting misbehavior. One way to achieve such monitoring is via co-simulation of a modelled system that corresponds to the deployed system. A necessary element in the realization of such a concept is data brokering between the systems. Our work addresses the topic of brokering external data into an Functional Mock-up Interface (FMI) 2.0 enabled co-simulation via a Functional Mock-up Unit (a simulation unit) called RabbitMQ FMU that outputs messages from an external message queue into the FMI enabled co-simulation.", "num_citations": "2\n", "authors": ["612"]}
{"title": "Towards a Static Check of FMUs in VDM-SL\n", "abstract": " In order to ensure that the co-simulation of Cyber-Physical Systems (CPSs) is possible with as wide a variety of tools as possible, a standard called the Functional Mockup Interface (FMI) has been defined. The FMI provides the means to compute the overall behaviour of a coupled system by the coordination and communication of simulators, each responsible for a part of the system. The contribution presented in this paper is an initial formal model of the FMI standard using the VDM Specification Language. Early results suggest that the FMI standard defines a number of FMU static constraints that are not enforced by many of the tools that are able to export such FMUs.", "num_citations": "2\n", "authors": ["612"]}
{"title": "Explicit Modelling and Synthesis of Debuggers for Hybrid Simulation Languages\n", "abstract": " Any sufficiently complex system is best described (or specified) with a combination of models in multiple formalisms. To support creating such \u201chybrid models\u201d, recent research focuses on the (syntactic and semantic) combination of formalism fragments. To implement the hybrid language\u2019s operational semantics, the simulators of each of the formalisms are combined. Inspired by this principle, we study how hybrid simulators can be instrumented with debugging capabilities. Previous work has shown that an explicit model of any simulator\u2019s behaviour can be instrumented with common code debugging operations (eg, stepwise execution, breakpoints, pause/play) and simulation-specific operations (eg,(scaled) real-time simulation, event injection). We extend this work by combining debugging-enhanced simulators to create a hybrid simulator, and instrument it with debugging support at the hybrid level. To demonstrate feasibility, we create a debugging-enhanced simulator of the Hybrid Automata formalism, by embedding a Causal Block Diagrams simulator in a Timed Finite State Automata simulator.", "num_citations": "2\n", "authors": ["612"]}
{"title": "A framework for efficient model transformations\n", "abstract": " The reported productivity gains while using models and model transformations to develop entire systems, after almost a decade of experience applying model-driven approaches for system development, are already undeniable benefits of this approach. However, the slowness of higher-level, rule based model transformation languages hinders the applicability of this approach to industrial scales. Lower-level, and efficient, languages can be used but productivity and easy maintenance seize to exist. The abstraction penalty problem is not new, it also exists for high-level, object oriented languages but everyone is using them now. Why is not everyone using rule based model transformation languages then? In this thesis, we propose a framework, comprised of a language and its respective environment, designed to tackle the most performance critical operation of high-level model transformation languages: the pattern matching. This framework shows that it is possible to mitigate the performance penalty while still using high-level model transformation languages.", "num_citations": "2\n", "authors": ["612"]}
{"title": "The FMI 3.0 Standard Interface for Clocked and Scheduled Simulations\n", "abstract": " This paper gives an overview of the FMI 3.0 support for two kinds of clock-based simulations: Synchronous Clocked Simulation, and Scheduled Execution. The former is used when the information about multiple simultaneous events (cause and exact time of occurrence) can be unambiguously conveyed. The later facilitates real-time simulations comprising multiple black-box models, by allowing fine grained control over the computation time of sub-models. A formalization is presented along with example application scenarios, meant as an introduction to the conceptualization of clocks in the FMI Standard.", "num_citations": "1\n", "authors": ["612"]}
{"title": "Digital twins for collaboration and self-integration\n", "abstract": " Digital twins are digital representations of cyber-physical systems, allowing bi-directional data and control flow between them. In this paper, we introduce the digital twin concept in self-integrating and self-improving systems. Specifically, we highlight the usage of digital twin models for autonomous systems spontaneously interacting with each other and aiming to improve collaboration and mutual safety. We present the main challenges and an initial architecture to enable autonomous cyber-physical systems to collaborate, self-integrate, and self-improve during run-time.", "num_citations": "1\n", "authors": ["612"]}
{"title": "Introduction to Digital Twin Engineering\n", "abstract": " Cyber-Physical Systems (CPSs) are getting increasingly complex and generate large amounts of data. Analyzing such data provides us an insight into a given system. The digital twin concept emerges as an attempt to seamlessly integrate the data and insight in order to improve system performances. It enables applications such as visualization, monitoring, state estimation, and self-adaptation. In this paper, we demonstrate the construction of a digital twin exemplified by an incubator system, including the benefits and challenges of each application. The result is a description of the building blocks of a digital twin.", "num_citations": "1\n", "authors": ["612"]}
{"title": "The effect and selection of solution sequence in co-simulation\n", "abstract": " In non-iterative serial co-simulation, the solution sequence of the systems is ordered either ad-hoc or based on the solution priorities. The selection of the priorities determines which systems approximate the upcoming inputs from connected systems. This input estimation causes an error on the time integration of the states. This article discusses indicators to estimate the extent of input estimation contribution on the overall state calculation error and addresses to the question if the solution sequence has an influence on the state evolution. Moreover, a temporal analysis of this effect is studied to predict when to flip the sequence at an interface between two systems on a linear numerical example. In conclusion, an adaptive algorithm which switches the co-simulation sequence run-time based on the input estimation accuracy is proposed and validated with a parameter study.", "num_citations": "1\n", "authors": ["612"]}
{"title": "The Incubator Case Study for Digital Twin Engineering\n", "abstract": " To demystify the Digital Twin concept, we built a simple yet representative thermal incubator system. The incubator is an insulated box fitted with a heatbed, and complete with a software system for communication, a controller, and simulation models. We developed two simulation models to predict the temperature inside the incubator, one with two free parameters and one with four free parameters. Our experiments showed that the latter model was better at predicting the thermal inertia of the heatbed itself, which makes it more appropriate for further development of the digital twin. The hardware and software used in this case study are available open source, providing an accessible platform for those who want to develop and verify their own techniques for digital twins.", "num_citations": "1\n", "authors": ["612"]}
{"title": "Stability of planar switched systems under delayed event detection\n", "abstract": " In this paper, we analyse the impact of delayed event detection on the stability of a 2-mode planar hybrid automata. We consider hybrid automata with a unique equilibrium point for all the modes, and we find the maximum delay that preserves stability of that equilibrium point. We also show for the class of hybrid automata treated that the instability of the equilibrium point for the equivalent hybrid automaton with delay in the transitions is equivalent to the existence of a closed orbit in the hybrid state space, a result that is inspired by the Joint Spectral Radius theorem. This leads to an algorithm for computing the maximum stable delay exactly. Other potential applications of our technique include co-simulation, networked control systems and delayed controlled switching with a state feedback control.", "num_citations": "1\n", "authors": ["612"]}