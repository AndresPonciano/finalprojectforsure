{"title": "15 Years of Software Regression Testing Techniques -- A Survey\n", "abstract": " Software regression testing techniques verify previous functionalities each time software modifications occur or new characteristics are added. With the aim of gaining a better understanding of this subject, in this work we present a survey of software regression testing techniques applied in the last 15 years; taking into account its application domain, kind of metrics they use, its application strategies and the phase of the software development process where they are applied. From an outcome of 460 papers, a set of 25 papers describing the use of 31 software testing regression techniques were identified. Results of this survey suggest that at the time of applying a regression testing techniques, metrics like cost and fault detection efficiency are the most relevant. Most of the techniques were assessed with instrumented programs (experimental cases) under academic settings. Conversely, we observe a minimum set of\u00a0\u2026", "num_citations": "38\n", "authors": ["1297"]}
{"title": "Avances en las Mejoras de Procesos Software en las MiPyMEs Desarrolladoras de Software: Una Revisi\u00f3n Sistem\u00e1tica\n", "abstract": " Este trabajo presenta la aplicaci\u00f3n de un protocolopara revisiones sistem\u00e1ticas de Ingenier\u00eda de Software. En esteart\u00edculo el protocolo es utilizado como un modelo formal aplicadoa la b\u00fasqueda de publicaciones relacionadas con las adaptacionesSPI llevadas a cabo en MiPyMEs desarrolladoras de software, enel per\u00edodo comprendido de 1995 a diciembre de 2013, centr\u00e1ndoseen tendencias, pa\u00edses, y sectores que publican, as\u00ed como enlos modelos, metodolog\u00edas, est\u00e1ndares y procesos de soporte delsoftware del \u00e1rea de calidad. Los resultados obtenidos sugierenque en la comunidad de Ingenier\u00eda de Software hay un inter\u00e9screciente en este tema, por ejemplo, la mayor\u00eda de las investigaciones realizadas surgen en el sector educativo. El modelo deprocesos y la metodolog\u00eda m\u00e1s utilizada es CMMi y Xtreme Programing, respectivamente. El est\u00e1ndar m\u00e1s utilizado es el ISO/IEC 15504 y el proceso de soporte del software del ciclo de vidadel software mayormente abordado es SQA.", "num_citations": "19\n", "authors": ["1297"]}
{"title": "Pair versus Solo Programming--An Experience Report from a Course on Design of Experiments in Software Engineering\n", "abstract": " This paper presents an experience report about an experiment that evaluates duration and effort of pair and solo programming. The experiment was performed as part of a course on Design of Experiments (DOE) in Software Engineering (SE) at Autonomous University of Yucatan (UADY). A total of 21 junior student subjects enrolled in the bachelor's degree program in SE participated in the experiment. During the experiment, subjects (7 pairs and 7 solos) wrote two small programs in two sessions. Results show a significant difference (at alpha=0.1) in favor of pair programming regarding duration (28% decrease), and a significant difference (at alpha=0.1) in favor of solo programming with respect to effort (30% decrease). With only a difference of 1%, our results regarding duration and effort are practically the same as those reported by Nosek in 1998.", "num_citations": "18\n", "authors": ["1297"]}
{"title": "An Empirical Study on the Impact of an IDE Tool Support in the Pair and Solo Programming\n", "abstract": " The adoption of Agile software development approaches has been widespread. One well-known Agile approach is extreme programming, which encompasses twelve practices of which pair programming is one of them. Although various aspects of pair programming have been studied, we have not found, under a traditional setting of pair programming, studies that examine the impact of using a tool support, such as an integrated development environment (IDE) or a simple text editor. In an attempt to obtain a better understanding of the impact of using an IDE in this field, we present the results of a controlled experiment that expose the influence on quality, measured as the number of defects injected per hour, and cost, measured as the time necessary to complete a programming assignment, of pair and solo programming with and without the use of an IDE. For quality, our findings suggest that the use of an IDE\u00a0\u2026", "num_citations": "16\n", "authors": ["1297"]}
{"title": "Estudio del Proceso Software Personal (PSP) en un entorno acad\u00e9mico\n", "abstract": " El Proceso Software Personal (En Ingl\u00e9s, Personal Software Process o PSP) es un proceso individual cuyo objetivo es ayudar a los ingenieros en software a medir y mejorar su productividad personal. El PSP suele ense\u00f1arse exclusivamente a profesionales, no obstante \u00e9ste ha comenzado a incluirse como parte de cursos universitarios. En este trabajo se presenta un estudio sobre PSP efectuado en un entorno acad\u00e9mico donde se analizan los siguientes", "num_citations": "12\n", "authors": ["1297"]}
{"title": "Tipolog\u00eda de Replicaciones para la S\u00edntesis de Experimentos en Ingenier\u00eda del Software\n", "abstract": " La Ingenieria del Software Experimental (ISE) traslada a la Ingenieria del Software (IS) el paradigma experimental que se ha aplicado con exito en diversas disciplinas cientificas. El objetivo de la ISE es hacer de la construccion del software una actividad predecible gracias al conocimiento de las relaciones entre los procesos de produccion del software y los productos que se obtienen. Para avanzar en el paradigma experimental en IS no es suficiente aplicar las tecnicas de diseno experimental y el analisis estadistico de datos, sino que es necesario construir una metodologia (bien desde cero o adaptada de otras disciplinas) basada en los principios generales del experimentalismo. La motivacion principal de esta investigacion es trabajar en la adaptacion de un aspecto particular del paradigma experimental a la experimentacion en IS: la replicaci\u00f3n. En ISE se han realizado varias replicaciones de experimentos, sin embargo, aun existe discusion sobre el modo mas adecuado de llevarlas a cabo. Algunas preguntas que surgen de esta discusion son: .se deben reutilizar los materiales del experimento base?, .la replicacion debe realizarse de forma independiente, o puede existir algun tipo de comunicacion entre experimentadores y replicadores?, .que elementos de la estructura del experimento a replicar pueden variarse y aun considerarse una replicacion? En esta investigacion se estudia el concepto de replicacion desde una perspectiva teorico-practica para su incorporacion a la ISE. En concreto, se persiguen los siguientes objetivos: 1) estudio del concepto de replicacion en distintas disciplinas cientificas para tener mayor\u00a0\u2026", "num_citations": "12\n", "authors": ["1297"]}
{"title": "Estudio Comparativo de Herramientas de Apoyo a la Creaci\u00f3n de Objetos de Aprendizaje\n", "abstract": " This paper presents an experiment that evaluates the usefulness, usability and time spent developing a learning object (LO) of two tools that support the creation of LO\u2019s (exe-Learning and Reload Editor). 21 professors from upper secondary educational institution from Mexico (CONALEP) were randomly assigned to each tool; performing same tasks under controlled conditions. By a small difference, results suggest that Reload Editor is significantly more useful than exe-Learning. Regarding time spent developing a LO, results suggest a significant difference of 33% in favor of Reload Editor. Finally, results suggest that both tools are perceived with the same level of usability.", "num_citations": "9\n", "authors": ["1297"]}
{"title": "Influence on the use of an IDE tool support in the pair programming: A controlled experiment\n", "abstract": " Agile software development has been widespread adopted. One well-known agile approach is eXtreme Programming (XP) where pair programming (PP) is a relevant practice. Although various aspects of PP have been studied, we have not found, under a traditional model of PP, studies that examine the impact of using an IDE tool support. In an attempt to obtain a better understanding of the impact of using an IDE, we present the results of a controlled experiment that expose the influence on quality, measured as the number of defects injected per hour, of pair and solo programmers with and without the use of an IDE. Our findings suggest that the use of an IDE results in significantly higher defect injection rates (for both pairs and solos) when the programming task is not very complicated. Nevertheless, defect injection rates seem to decrease when pairs work on more complicated programming assignments\u00a0\u2026", "num_citations": "8\n", "authors": ["1297"]}
{"title": "Regression Testing of Database Applications under an Incremental Software Development Setting\n", "abstract": " Software regression testing verifies previous features on a software product when it is modified or new features are added to it. Because of the nature of regression testing it is a costly process. Different approaches have been proposed to reduce the costs of this activity, among which are: minimization, prioritization, and selection of test cases. Recently, soft computing techniques, such as data mining, machine learning, and others have been used to make regression testing more efficient and effective. Currently, in different contexts, to a greater or lesser extent, software products have access to databases (DBs). Given this situation, it is necessary to consider regression testing also for software products such as information systems that are usually integrated with or connected to DBs. In this paper, we present a selection regression testing approach that utilizes a combination of unsupervised clustering with random\u00a0\u2026", "num_citations": "8\n", "authors": ["1297"]}
{"title": "Assessment of software defect detection efficiency and cost through an intelligent collaborative virtual environment\n", "abstract": " The use of collaborative virtual environments facilitates communication, coordination and cooperation within a group of people. In the field of information and communications technology (ICT), collaborative virtual environments have been developed to support the learning of programming. In this work, we report an empirical study (controlled experiment) which assess the efficiency and cost of detecting defects in instrumented programs with and without the support of an intelligent collaborative virtual environment (ICVE). The ICVE was used as part of a programming course at undergraduate level. The results suggest an equivalent efficiency in defect detection for both types of participants, those who used the ICVE (3.76 observed defects per hour) and those who worked in a traditional manner (4.07 observed defects per hour). With regard to cost, it was observed that participants who used the ICVE completed the\u00a0\u2026", "num_citations": "8\n", "authors": ["1297"]}
{"title": "An Approach for Regression Testing of Database Applications in Incremental Development Settings\n", "abstract": " In an iterative and incremental development environment software regression testing plays an important role; it helps to ensure the reliability in the building process of a software product. The optimization of a regression test depends on the size of the test suite to be executed. Regression testing helps to verify existing modifications (fixing bugs) or verify new features added to a software product. When regression testing is applied to database applications it is necessary to consider aspects of the database along with the product code in order to guarantee a proper verification of the product. In this paper we present an approach for conducting regression tests on database applications under an iterative and incremental development setting.", "num_citations": "7\n", "authors": ["1297"]}
{"title": "Current Trends of Teaching Computer Programming in Undergraduate CS Programs: A Survey from Ecuadorian Universities\n", "abstract": " Computer programming has become a relevant element of the modern era. Practically it is involved in all sectors of modern society. Currently, many universities around the globe offer bachelor\u2019s degree programs that contain computer programming related courses. In order to gain insight into how computer programming is taught in Ecuadorian Higher Education Institutions (HEIs), we have conducted the first national survey on teaching computer programming in undergraduate CS programs. In this survey participated 53 respondents from 13 Ecuadorian HEIs. We report on programming paradigms, programming languages, integrated development environments and teaching strategies used in the programming learning process. We found that the object-oriented paradigm along with the Java programming language are the most often used. The NetBeans integrated development environment is the most commonly used among the respondents. Concerning teaching strategies, e-learning platforms are commonly used as part of computer programming courses. More than half of the respondents use collaborative strategies such as pair programming in their courses. Finally, a half of the respondents use traditional computer labs for teaching programming; however, other approaches such as mobile devices, games and simulations, Arduino kits and robots start to be used as a teaching strategy. Our findings can serve as a starting point for addressing reforms in computer programming courses taught in Ecuadorian CS undergraduate programs.", "num_citations": "6\n", "authors": ["1297"]}
{"title": "Software testing education through a collaborative virtual approach\n", "abstract": " The use of collaborative virtual environments facilitates communication, coordination and cooperation within a group of people. In the field of Information and Communications Technology (ICT), collaborative virtual environments have been developed to support the learning of programming. With the aim of fostering software testing education by alternative means, we present findings from the use of a collaborative virtual environment used for software testing training. Particularly, we report an empirical study (controlled experiment) which assesses the effectiveness of detecting defects in instrumented programs with and without the support of an collaborative virtual environment (CVE). The CVE was used as part of a programming course at under-graduate level. The results suggest an equivalent effectiveness in defect detection for both types of participants, those who used the CVE and those who worked in\u00a0\u2026", "num_citations": "5\n", "authors": ["1297"]}
{"title": "A Controlled Experiment on Productivity of Pair Programming Gender Combinations: Preliminary Results\n", "abstract": " Context: Nowadays the pair programming (PP) approach is a well known practice that has been studied and applied in academia and industry, however the study of gender along with this practice is scarce. Objective: With the aim of approaching the study of gender in PP we conducted an empirical study. Method: We run a controlled experiment in an academic setting to assess the productivity (lines of code per hour) produced by different gender pair configurations (Female-Female, Female-Male and Male-Male). Results: Our results suggest similar productivity rates for the three gender pair combinations. The programming assignments have a significant impact on the productivity. Finally, we observed greater variability of productivity rates with mixed gender pairs (FM). Conclusions: The experiment reported here can serve as reference for studying further aspects related to gender and pair programming.", "num_citations": "5\n", "authors": ["1297"]}
{"title": "Efectividad de t\u00e9cnicas de prueba de software aplicadas por sujetos novicios de pregrado\n", "abstract": " The main objective of this work is to examine possible effects of using freshman student subjects in software engineering experiments. Particularly in this work we report the effectiveness measured as percentage of observed and observable defects of two software testing techniques: Black-box and white-box. Regarding observed defects, both techniques show an effectiveness around of 4%. With respect of observable defects by test cases, black-box testing is slightly more effective (21%) than white-box testing (16%), although this difference is not significant. We observe a considerable lack of technical skills of subjects for applying both software testing techniques. Due to observed findings, we suggest to employ students with more technical skills for carrying out software engineering experiments. ----- El objetivo de este trabajo se centra en investigar los efectos que conlleva realizar experimentos en ingenier\\'ia de software (IS) empleando como sujetos experimentales a estudiantes de pregrado cursando su primer a\\~no de estudios de la carrera en ingenier\\'ia de software. De manera particular en este trabajo se investiga la efectividad medida en porcentaje de defectos observados y observables de las t\\'ecnicas de prueba de software funcional (caja negra) y estructural (caja blanca). Con respecto a los defectos observados por los sujetos, ambas t\\'ecnicas obtuvieron una efectividad del 4%. Con respecto a los defectos observables por los casos de prueba, la t\\'ecnica funcional es ligeramente superior (21%) que la t\\'ecnica estructural (16%), aunque esta diferencia no es significativa. Se observa un nivel de inexperiencia considerable en los\u00a0\u2026", "num_citations": "5\n", "authors": ["1297"]}
{"title": "Estudio de calidad y eficiencia de un enfoque de desarrollo software secuencial con programadores solos y en pareja\n", "abstract": " Los modelos de procesos de desarrollo software (MPDS) gu\u00edan el desarrollo o el mantenimiento de productos software. Actualmente existen diversos MPDS aplicados en diferentes contextos. Uno de los MPDS ampliamente conocido es el MPDS en cascada, cuyas etapas que lo conforman se realizan de manera secuencial. Con el fin de obtener mayor conocimiento sobre la aplicaci\u00f3n de un MPDS secuencial (tipo cascada), en el presente documento se reportan los resultados de un experimento controlado que estudia la calidad y eficiencia en el uso de un MPDS secuencial aplicado en programadores solos y en pareja. Dicho modelo es contrastado con un MPDS ad-hoc que es una aproximaci\u00f3n de un MPDS iterativo usado como grupo de control. En cuanto a la calidad, los resultados de este experimento sugieren que el usar un MPDS secuencial arroja tasas de defectos similares que el MPDS usado como grupo de control. En cuanto a la eficiencia, los participantes quienes aplicaron el MPDS secuencial requirieron un n\u00famero significativamente menor de compilaciones para realizar los ejercicios de programaci\u00f3n planteados. En cuanto al tipo de programaci\u00f3n, los programadores solos y en pareja se desempe\u00f1aron de manera similar. A pesar del criticismo existente en torno a un MPDS secuencial, nuestros resultados sugieren que en ciertos contextos su uso puede ser ben\u00e9fico, como lo observado en nuestros hallazgos con respecto a la eficiencia.", "num_citations": "4\n", "authors": ["1297"]}
{"title": "New Perspectives in Instructional Design using Semantic Web Technologies: A Systematic Literature Review\n", "abstract": " Systems development based on the application of semantic web technologies is gradually growing, especially in the field of e-learning. A key aspect in the field of e-learning is instructional design, which facilitates the creation of online courses. Several studies have been conducted on the use of ontologies and semantic web technologies in open e-learning platforms, which have obtained several benefits in terms of better learning and better orchestration of instructional practices. Nevertheless, there are notably few reports related to instructional design using semantic web technologies. Thus, the primary objective of this paper is to present a systematic literature review of primary research proposals that involve the field of instructional design combined with the use of semantic web technologies. From a total of 5035 initially gathered papers, 21 of them were related to instructional design and were deeply analyzed. Our results indicate a lack of interest in including certain aspects, such as pedagogical approach, standards, and compatibility with virtual learning environments. It is suggested that the systems should incorporate characteristics of semantic web technologies in virtual learning environments.", "num_citations": "4\n", "authors": ["1297"]}
{"title": "Detecci\u00f3n de defectos con y sin apoyo de un entorno virtual colaborativo inteligente en cursos introductorios de programaci\u00f3n\n", "abstract": " El uso de entornos virtuales colaborativos facilita la comunicaci\u00f3n, coordinaci\u00f3n y cooperaci\u00f3n en un grupo de personas. En el \u00e1mbito de las Tecnolog\u00edas de la Informaci\u00f3n y la Comunicaci\u00f3n (TIC) se han desarrollado entornos virtuales colaborativos para apoyar el aprendizaje de la programaci\u00f3n. En ese trabajo se examina la efectividad en la detecci\u00f3n de defectos en programas instrumentados con y sin apoyo de un entorno virtual colaborativo inteligente (EVCI) propio. Empleando un dise\u00f1o experimental cruzado se conformaron 18 equipos de 2 y 3 estudiantes (en total 46) donde en dos sesiones los estudiantes trabajaron con y sin un EVCI en la detecci\u00f3n de defectos en dos programas instrumentados. Los resultados sugieren una efectividad equivalente en la detecci\u00f3n de defectos para quienes emplearon el ECVI (43.45%) como para quienes trabajaron de manera tradicional (45.33%). Se observa que es igualmente efectivo para este tipo de tarea (detecci\u00f3n de defectos) trabajar de forma virtual a trav\u00e9s de un ECVI que hacerlo de manera tradicional (al mismo tiempo y en el mismo sitio).", "num_citations": "4\n", "authors": ["1297"]}
{"title": "Construcci\u00f3n de plantillas pedag\u00f3gicas en un curso en l\u00ednea mediante la aplicaci\u00f3n de teor\u00edas de dise\u00f1o instruccional\n", "abstract": " La popularidad de los entornos de aprendizaje virtuales ha permitido que el dise\u00f1o de cursos online sea una tarea cada vez m\u00e1s frecuente en los docentes. Sin embargo, los cursos online creados por los docentes han sido criticados, ya que en su mayor\u00eda se enfocan a proveer un contenido de aprendizaje pobre y minimalista. Posiblemente estas limitaciones se deban a la falta de conocimiento de las teor\u00edas y/o enfoques pedag\u00f3gicos que se vinculan el dise\u00f1o instruccional, por lo que se determin\u00f3 que los cursos online producidos por los docentes se originan sin un fundamento pedag\u00f3gico adecuado. Esto motiv\u00f3 a buscar enfoques alternativos que permitan", "num_citations": "3\n", "authors": ["1297"]}
{"title": "Evaluando la arquitectura de software\n", "abstract": " En el n\u00famero anterior (SG A\u00f1o 03 No. 01, P\u00e1g. 40) dimos a conocer como una pr\u00e1ctica recomendada llevar a cabo evaluaciones a la arquitectura durante el ciclo de vida del desarrollo de software. Algunos de los puntos m\u00e1s importantes que se trataron fueron el prop\u00f3sito de evaluar, los momentos y los tipos de t\u00e9cnicas de evaluaci\u00f3n, las personas que intervienen en este proceso as\u00ed como los resultados que se obtienen tras evaluar la arquitectura.En el presente art\u00edculo damos a conocer una serie de m\u00e9todos utilizados para evaluar la arquitectura de software. Estos m\u00e9todos han demostrado su efectividad en diferentes dominios de aplicaci\u00f3n, como son: sistemas financieros, sistemas de gobierno, sistemas en tiempo real, entre otros m\u00e1s. A continuaci\u00f3n se describen cuatro m\u00e9todos, que analizan un atributo de calidad espec\u00edfico en la arquitectura de software. Al final del presente art\u00edculo se incluye una tabla en la que se comparan los cuatro m\u00e9todos con respecto a una serie de elementos.", "num_citations": "3\n", "authors": ["1297"]}
{"title": "CRUDyLeaf: a DSL for generating spring boot REST APIs from entity CRUD operations\n", "abstract": " Domain-Specific Languages (DSLs) are programming languages designed specifically to express solutions to problems in a particular domain. It is said they foster productivity and quality. In this work we describe CRUDyLeaf, a DSL focused on the generation of Spring Boot REST APIs from entity CRUD operations. Spring Boot is an open source Java-based framework used to implement the REST architecture style. It has gained popularity among developers mainly because it allows to build stand-alone and production ready software applications (avoiding the use of an application server). Through seven proposed stages (domain immersion, golden application implementation, syntax definition, meta model generation, code generator implementation, deployment, and refinement) we describe the development of this DSL. We also exemplify and evaluate the proposed DSL. Our findings suggest a yield automation rate of 32.1 LOC (Lines Of Code) for each LOC written in this DSL, among other observed benefits.", "num_citations": "2\n", "authors": ["1297"]}
{"title": "Software Engineering Research in Mexico: A Systematic Mapping Study\n", "abstract": " Background: Software Engineering (SE) is a young discipline aiming at the systematic application of tools, methods and practices to develop and maintain software products on time, under budget and with a certain degree of quality. Research in SE has gradually attracted the attention of various Mexican higher-education institutions and some Mexican research centers. Objective: This study aims to survey the existing SE research conducted in Mexico to identify areas of research and research gaps. Method: A systematic mapping study was performed to find relevant papers on the topic in a structured and repeatable manner. Results: From a total of 380 documents retrieved by the defined search string, 206 relevant papers were selected. Taking as reference the Knowledge Areas (KAs) of the Software Engineering Body of Knowledge (SWEBOK V3. 0), we observe that more than half (69%) of the Mexican states have at least one published paper in one of the KAs. The knowledge areas KA02 (software design) and KA08 (software engineering process) have the most published papers. The most common venue of publication is the conference, and the second most common is the journal article, among other interesting results. Conclusions: Although SE research in Mexico is gradually being strengthened, more research across the Mexican states remains necessary.", "num_citations": "2\n", "authors": ["1297"]}
{"title": "Estudio del Proceso Software Personal (PSP) en un entorno acad\u00e9mico-Study of the Personal Software Process (PSP) Under an Academic Setting\n", "abstract": " El Proceso Software Personal (En Ingl\u00e9s, Personal Software Process o PSP) es un proceso individual cuyo objetivo es ayudar a los ingenieros en software a medir y mejorar su productividad personal. El PSP suele ense\u00f1arse exclusivamente a profesionales, no obstante \u00e9ste ha comenzado a incluirse como parte de cursos universitarios. En este trabajo se presenta un estudio sobre PSP efectuado en un entorno acad\u00e9mico donde se analizan los siguientes indicadores: precisi\u00f3n en las estimaciones de tama\u00f1o y esfuerzo, calidad del producto as\u00ed como productividad. Los resultados aqu\u00ed reportados sugieren una mejor\u00eda parcial con respecto a la precisi\u00f3n de las estimaciones, una reducci\u00f3n sustantiva en la densidad de defectos de acuerdo a un factor de 6.6 y una productividad media de 53 l\u00edneas de c\u00f3digo fuente por hora. Abstract: The Personal Software Process (PSP) is an individual process where its main goal is to help software engineers to measure and to improve their own productivity. PSP courses usually are given to practitioners; nevertheless it has started to be taught in bachelor\u2019s and master\u2019s degree programs too. In this work, we present a study of the PSP under an academic setting; where the following elements are analyzed: Size and effort precision estimates, product quality and productivity. Results shown suggest a partial improvement regarding size and effort precision estimates; an important decrease, by a factor of 6.6, with respect of defect density; and an average productivity of 53 source lines of code (SLOC) per hour. Keywords: Software Engineering; Personal Software Process; PSP; Software Measurement; Software\u00a0\u2026", "num_citations": "2\n", "authors": ["1297"]}
{"title": "Paradigma Experimental en la Ingenier\u00eda de Software \u2013 Caso Programaci\u00f3n en Pareja\n", "abstract": " La Ingenier\u00eda de Software (IS) es unadisciplina compleja donde a d\u00eda de hoy el resultado de laaplicaci\u00f3n de alguna tecnolog\u00eda para apoyar el desarrollo desoftware es impredecible. De manera similar a otras disciplinasingenieriles, la IS requiere de construcci\u00f3n de modelos, experimentaci\u00f3ny aprendizaje. La experimentaci\u00f3n es un recurso valiosoque permite evaluar de manera objetiva las distintastecnolog\u00edas disponibles para desarrollar software. Objetivo: Conla finalidad de promover el paradigma experimental en la IS, eneste art\u00edculo se aplica el paradigma experimental para estudiaralgunos efectos de la programaci\u00f3n en pareja. M\u00e9todo: A trav\u00e9sde un dise\u00f1o experimental cuadrado latino con dos factores debloqueo, se emplearon 21 estudiantes del programa de licenciaturaen IS de la Universidad Aut\u00f3noma de Yucat\u00e1n (UADY) para examinar la duraci\u00f3n y esfuerzo que conlleva la programaci\u00f3nen pareja. Los estudiantes se agruparon en 7 parejas y 7individuos donde codificaron durante dos sesiones dos programaspeque\u00f1os. Resultados: Los resultados del experimento sugierenuna diferencia significativa (en un nivel?= 0.1) en favor de laprogramaci\u00f3n en pareja con respecto a la duraci\u00f3n de codificaci\u00f3nde los ejercicios asignados (28% decremento en tiempo). Por el contrario, los resultados sugieren una diferencia significativa (en un nivel?= 0.1) en favor de la programaci\u00f3n individualcon respecto al esfuerzo (30% decremento en esfuerzo). Conclusiones: En este art\u00edculo se presenta el paradigma experimentalaplicado a la IS. A trav\u00e9s del paradigma experimental es posibleobtener observaciones de manera objetiva para\u00a0\u2026", "num_citations": "2\n", "authors": ["1297"]}
{"title": "Desarrollo de aplicaciones para dispositivos m\u00f3viles utilizando J2ME\n", "abstract": " \u2022 Hoy en d\u00eda existen mas de 1.5 billones de tel\u00e9fonos m\u00f3viles en el mundo. Puedes usarlos para navegar por la Web, tomar fotos, enviar correos y jugar, muy pronto estos dispositivos podr\u00edan hacer las PCs obsoletas.\u2022 Existen m\u00e1s de 1.5 billones de tel\u00e9fonos celulares en el mundo, m\u00e1s de tres veces el n\u00famero de PCs.", "num_citations": "2\n", "authors": ["1297"]}
{"title": "Open Data in Higher Education-A Systematic Literature Review\n", "abstract": " The open data (OD) initiative fosters open access to public information in an organization. It is a relatively new but very significant and potentially powerful approach that starts being adopted in different organizations. In the context of higher education, the adoption of this initiative starts being reported in the literature. In order to get a better understanding of open data (OD) in higher education, we conducted a systematic literature review. From a sample of 595 papers, we identified and selected 25 relevant papers for the review. Our findings suggest that open science, open government, and open university are main reasons to adopt OD. Models, frameworks, methods, and standards about OD have been adopted in higher education context. Different technological tools have been used for: data modeling, RDF data generation, data publishing, linking, and exploitation. However, some issues have been\u00a0\u2026", "num_citations": "1\n", "authors": ["1297"]}
{"title": "Best Practices and Methodologies for IT Project Portfolio Management\n", "abstract": " In today's business environment, a key factor for decision making is the IT projects portfolio management (ITPPM). IT projects must be aligned with the objectives, goals and strategies, which is achieved through the appropriate application of a methodology for ITPPM. The experienced application of a methodology depends on the experience of the managers of ITPPM, considering that the application of methodologies generates best practices, it becomes necessary to study some of the more representative methodologies and obtain the best practices that allow novice administrators to initiate their portfolio management activities in information technology projects. In this article, three methodologies are studied, from which best practices are obtained, as results; a hierarchy of best practices is obtained so that project managers can be guided or introduced in their field.", "num_citations": "1\n", "authors": ["1297"]}
{"title": "Ingenier\u00eda de Software e Ingenier\u00eda del Conocimiento: Reporte de las JIISIC-CEIS\u20192015\n", "abstract": " En el presente documento se presenta el reporte de las XI Jornadas Iberoamericanas de Ingenier\u00eda de Software e Ingenier\u00eda del Conocimiento as\u00ed como del Congreso Ecuatoriano en Ingenier\u00eda de Software, celebrados en la Escuela Superior Polit\u00e9cnica de Chimborazo (ESPOCH) los d\u00edas 4 y 5 de junio de 2015. De un total de 28 trabajos enviados, en esta edici\u00f3n se han aceptado 16. En este documento se presentan los t\u00edtulos y res\u00famenes de los trabajos aceptados.", "num_citations": "1\n", "authors": ["1297"]}
{"title": "Estudio Comparativo de herramientas de autor empleadas en bachillerato presencial y en l\u00ednea\n", "abstract": " En la actualidad, diversas Herramientas de Autor se encuentran disponibles para apoyar el proceso de Ense\u00f1anza y Aprendizaje. Mejorando la habilidad de los profesores en la construcci\u00f3n de recursos educativos, cursos y objetos de aprendizaje (OAs). El presente trabajo se centra en las herramientas exe-Learning y Reload Editor con el fin de evaluar su utilidad, facilidad de uso y el tiempo empleado en completar un OA por profesores de diversas disciplinas de educaci\u00f3n media superior presencial y en l\u00ednea. Los profesores fueron asignados aleatoriamente a cada herramienta realizando las tareas de: dise\u00f1ar un OA y desarrollar el OA. Derivado del an\u00e1lisis de las pruebas Wilcoxon y T-student, se observa una peque\u00f1a diferencia que favorece a Reload Editor respecto a la utilidad percibida. En relaci\u00f3n a la facilidad de uso, se sugiere a Exe-Learning. Finalmente, los resultados favorecen a Reload Editor con respecto al tiempo empleado para completar un OA.", "num_citations": "1\n", "authors": ["1297"]}
{"title": "Integraci\u00f3n continua en componentes EJB\n", "abstract": " Los Enterprise Beans [4] son componentes Java que implementan la tecnolog\u00eda EJB (Enterprise Java Bean) esta tecnolog\u00eda es parte de la plataforma Java EE (Java Enterprise Edition). Este tipo de componentes se ejecutan dentro de un contenedor EJB que es un entorno de ejecuci\u00f3n dentro de un servidor de aplicaciones. Aunque, transparente para el desarrollador de aplicaciones, el contenedor EJB proporciona servicios a nivel de sistema tales como manejo de transacciones y seguridad para los enterprise beans. Estos tipos de servicios permiten al desarrollador construir y desplegar aplicaciones de manera r\u00e1pida.", "num_citations": "1\n", "authors": ["1297"]}
{"title": "Propuesta de mejora sobre la primera etapa del modelo de proceso KDDM, CRISP-DM\n", "abstract": " En el presente documento se propone una serie de pr\u00e1cticas y t\u00e9cnicas tomadas de los dominios de gesti\u00f3n de proyectos e ingenier\u00eda del software para usarlas en la etapa de entendimiento del negocio del modelo de proceso CRISP-DM con la finalidad de reducir el riesgo de fracaso en la implementaci\u00f3n de proyectos de descubrimiento de conocimiento y miner\u00eda de datos.", "num_citations": "1\n", "authors": ["1297"]}