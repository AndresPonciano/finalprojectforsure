{"title": "Mining software repositories using topic models\n", "abstract": " Software repositories, such as source code, email archives, and bug databases, contain unstructured and unlabeled text that is difficult to analyze with traditional techniques. We propose the use of statistical topic models to automatically discover structure in these textual repositories. This discovered structure has the potential to be used in software engineering tasks, such as bug prediction and traceability link recovery. Our research goal is to address the challenges of applying topic models to software repositories.", "num_citations": "92\n", "authors": ["212"]}
{"title": "A statistical view of FMRFamide neuropeptide diversity\n", "abstract": " FMRFamide-like peptide (FLP) amino acid sequences have been collected and statistically analyzed. FLP amino acid composition as a function of position in the peptide is graphically presented for several major phyla. Results of total amino acid composition and frequencies of pairs of FLP amino acids have been computed and compared with corresponding values from the entire GenBank protein sequence database. The data for pairwise distributions of amino acids should help in future structure-function studies of FLPs. To aid in future peptide discovery, a computer program and search protocol was developed to identify FLPs from the GenBank protein database without the use of keywords.", "num_citations": "49\n", "authors": ["212"]}
{"title": "A multicenter comparison of established and emerging cardiac biomarkers for the diagnostic evaluation of chest pain in the emergency department\n", "abstract": " BackgroundThe aim of this study is to assess the role of novel biomarkers for the diagnostic evaluation of acute coronary syndrome (ACS).MethodsAmong 318 patients presenting to an emergency department with acute chest discomfort, we evaluated the diagnostic value of 5 candidate biomarkers (amino terminal pro\u2013B-type natriuretic peptide [NT-proBNP], ischemia modified albumin, heart fatty acid binding protein, high-sensitivity troponin I [hsTnI], and unbound free fatty acids [FFAu]) for detecting ACS, comparing their results with that of conventional troponin T (cTnT).ResultsSixty-two subjects (19.5%) had ACS. The sensitivity and negative predictive values of NT-proBNP (73%, 90%) and hsTnI (57%, 89%) were higher than that of cTnT (22%, 84%). Unbound free fatty acids had the highest overall combination of sensitivity (75%), specificity (72%), and negative predictive values (92%) of all the markers examined\u00a0\u2026", "num_citations": "45\n", "authors": ["212"]}
{"title": "Implantable SiC based RF antenna biosensor for continuous glucose monitoring\n", "abstract": " A continuous glucose sensor employing radio frequency (RF) signals has been developed using the biocompatible material Silicon Carbide (SiC). Unlike biosensors that require direct contact with interstitial fluids to trigger chemical reactions to operate, this biocompatible SiC sensor doesn't require a direct interface. The sensing mechanism is based upon a shift in resonant frequency as a function of change in glucose levels which electrically manifests itself as a change in blood permittivity and conductivity. For invivo applications the antenna sensor needs to operate inside the body environment, and it has been determined that the best operational location of this biocompatible SiC biosensor is within fatty tissue in close proximity to blood vessels. To test the sensor as a function of glucose level, measurements using synthetic body fluid (SBF), which is electrically equivalent to blood plasma, and pig blood were\u00a0\u2026", "num_citations": "31\n", "authors": ["212"]}
{"title": "\u03c4XSchema: Support for data-and schema-versioned XML documents\n", "abstract": " XML is becoming an increasingly popular language for documents and data. XML can be approached from two quite separate orientations: a document-centered orientation (eg, HTML) and a data-centered orientation (eg, relational and object-oriented databases). Schemas are important in both orientations. A schema defines the building blocks of an XML document, such as the types of elements and attributes. An XML document can be validated against a schema to ensure that the document conforms to the formatting rules for an XML document (is well-formed) and to the types, elements, and attributes defined in the schema (is valid). A schema also serves as a valuable guide for querying and updating an XML document or database. For instance, to correctly construct a query, eg, in XQuery, a user will (usually) consult the schema rather than the data. Finally, a schema can be helpful in query optimization, eg, in constructing a path index [54].", "num_citations": "28\n", "authors": ["212"]}
{"title": "Mining Unstructured Software Repositories Using IR Models\n", "abstract": " Mining Software Repositories, which is the process of analyzing the data related to software development practices, is an emerging field which aims to aid development teams in their day to day tasks. However, data in many software repositories is currently unused because the data is unstructured, and therefore difficult to mine and analyze. Information Retrieval (IR) techniques, which were developed specifically to handle unstructured data, have recently been used by researchers to mine and analyze the unstructured data in software repositories, with some success.", "num_citations": "24\n", "authors": ["212"]}
{"title": "Mining software repositories with topic models\n", "abstract": " Mining Software Repositories (MSR) is a technique used in the field of software engineering (SE) focused on analyzing and understanding the data repositories related to a software development project [43, 50\u201352]. The main goal of MSR is to make intelligent use of these software repositories to help in the decision process of the software project. Specific examples of successes in MSR include predicting the locations of bugs in source code, discovering traceability links between requirements documents and source code, indexing the repositories to provide instant search functionality to project stakeholders, and inferring the social network of developers based on email communication patterns [127, 137].The repositories in a software project typically contain unstructured text. Source code, while structured with the syntax of a programming language, contains a series of comments, identifier names, and string literals that capture the semantics and developer intentions of the document. Since developers tend to use meaningful identifier names, provide comments that describe the functionality of the code, and write error messages to the screen with string literals, looking at these three sources of text alone yields a good approximation of what is happening in the source code, without too much of the how. Other repositories, such as email archives, requirements documents, and bug reports, contain unstructured text in the more traditional sense. An increasingly popular way to analyze unstructured text in other domains is by using topic models, which aim to uncover relationships between words and documents [3, 20, 124, 135]. Topic models, such as\u00a0\u2026", "num_citations": "21\n", "authors": ["212"]}
{"title": "Adding temporal constraints to XML schema\n", "abstract": " If past versions of XML documents are retained, what of the various integrity constraints defined in XML Schema on those documents? This paper describes how to interpret such constraints as sequenced constraints, applicable at each point in time. We also consider how to add new variants that apply across time, so-called nonsequenced constraints. Our approach supports temporal documents that vary over both valid and transaction time, whose schema can vary over transaction time. We do this by replacing the schema with a (possibly time-varying) temporal schema and replacing the document with a temporal document, both of which are upward compatible with conventional XML and with conventional tools like XMLLINT, which we have extended to support the temporal constraints introduced here.", "num_citations": "20\n", "authors": ["212"]}