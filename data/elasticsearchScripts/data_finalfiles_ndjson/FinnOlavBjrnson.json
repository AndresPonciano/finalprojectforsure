{"title": "Managing food traceability information using EPCIS framework\n", "abstract": " This paper introduces a new methodology for modeling traceability information using the EPCIS framework and UML statecharts. The method follows the approach of defining states and transitions in food production. A generic model is presented and evaluated based on its practical application by providing illustrations from two supply chains; frozen mackerel production and corn wet milling processes. All states and transitions for these processes as well as the information that needs to be captured for each state are indentified. This includes the product, process and quality information. The model presented in this paper is not just another process modeling tool but is used for mapping of food production processes to provide improved description and integration of traceability information. Information exchange technologies such as EPCIS are used for monitoring events based on logistic processes. Application of\u00a0\u2026", "num_citations": "115\n", "authors": ["1363"]}
{"title": "An empirical study of variations in COTS-based software development processes in the Norwegian IT industry\n", "abstract": " More and more software projects use Commercial-Off-The-Shelf (COTS) components. Although previous studies have proposed specific COTS-based development processes, there are few empirical studies that investigate how to use and customize COTS-based development processes for different project contexts. This paper describes an exploratory study of state-of-the-practice of COTS-based development processes. Sixteen software projects in the Norwegian IT companies have been studied by structured interviews. The results are that COTS-specific activities can be successfully incorporated in most traditional development processes (such as waterfall or prototyping), given proper guidelines to reduce risks and provide specific assistance. We have identified four COTS-specific activities\u2014the build vs. buy decision, COTS component selection, learning and understanding COTS components, and\u00a0\u2026", "num_citations": "83\n", "authors": ["1363"]}
{"title": "Improving the effectiveness of root cause analysis in post mortem analysis: A controlled experiment\n", "abstract": " Retrospective analysis is a way to share knowledge following the completion of a project or major milestone. However, in the busy workday of a software project, there is rarely time for such reviews and there is a need for effective methods that will yield good results quickly without the need for external consultants or experts. Building on an existing method for retrospective analysis and theories of group involvement, we propose improvements to the root cause analysis phase of a lightweight retrospective analysis method known as post mortem analysis (PMA). In particular, to facilitate brainstorming during the root cause analysis phase of the PMA, we propose certain processual changes to facilitate more active individual participation and the use of less rigidly structured diagrams. We conducted a controlled experiment to compare this new variation of the method with the existing one, and conclude that in our setting\u00a0\u2026", "num_citations": "54\n", "authors": ["1363"]}
{"title": "Tailoring RUP to a defined project type: A case study\n", "abstract": " The Unified Process is a widely used process framework for software development. The framework is covering many of the roles, activities and artifacts needed in a software development project. However, a tailoring of the framework is necessary to fit specific needs. This tailoring may be accomplished in various ways. In this paper we describe a concrete attempt to tailor the Rational Unified Process to a defined project type; a Mainstream Software Development Project Type. The paper has focus on the process of creating the tailored Rational Unified Process as well as the resulting Rational Unified Process. The paper makes some conclusions and has a proposition for further research.", "num_citations": "41\n", "authors": ["1363"]}
{"title": "Knowledge management in software process improvement\n", "abstract": " Reports of software a development projects that miss schedule, exceeds budget and deliver products with poor quality are abundant in the literature. Both researchers and the industry are seeking methods to counter these trends and improve software quality.  Software Process Improvement is a systematic approach to improve the capabilities and performance of software organizations. One basic idea is to assess the organizations\u2019 current practice and improve their software process on the basis of the competencies and experiences of the practitioners working in the organization. A major challenge is to create strategies and mechanisms for managing relevant and updated knowledge about software development and maintenance. Insights from the field of knowledge management are therefore potentially useful in software process improvement efforts to facilitate the creation, modification, and sharing of software processes in any organization.  In the work presented in this thesis, we have made an overview of empirical studies on the effect of knowledge management in software engineering. We have categorized these studies according to a framework and we report findings on the major concepts that have been investigated empirically, as well as the research methods applied within the field. We have also investigated two main strategies for knowledge management, codification and personalization, through the application of four concrete methods in a software process improvement setting: Mentoring, Rational Unified Process, Process Workshops and Post Mortem Analysis.  We have classified the work in this thesis within three main themes\u00a0\u2026", "num_citations": "24\n", "authors": ["1363"]}
{"title": "Using rational unified process in an SME\u2013a case study\n", "abstract": " The Rational Unified Process (RUP) is a comprehensive software development process framework emphasizing use-cases, architecture focus and an iterative approach. RUP is widely known and many organizations have tried to adopt it. Being a framework, RUP has to, in some way, be tailored to the specific context of use, no software development project is alike. This paper presents a case study of a Norwegian SME that tried to adopt RUP in the simplest way, by introducing the methodology by providing comprehensive documentation and some simple training. Our study shows that the use of RUP had some positive effects but also that the use has been scattered. Interviews with users of RUP show that there is a great need of better training and practical support in getting most value out of RUP. The key message is that if you consider taking RUP into use you have to invest resources in it. Training and\u00a0\u2026", "num_citations": "24\n", "authors": ["1363"]}
{"title": "An empirical study of COTS component selection processes in Norwegian IT companies\n", "abstract": " The use of Commercial-Off-The-Shelf (COTS) software has become more and more important in software development. In COTS-based development, COTS component selection is the most crucial phase. Although some selection processes have been proposed, empirical studies are necessary to assess these processes. This paper describes an exploratory study by structured interviews of 16 COTS-based development projects in Norwegian IT companies. The results indicate that successful COTS component selection can be implemented without using formal processes, and projects with different contexts may use different selection processes. If members in new project has enough practical experience with actual COTS components, such experience can be the dominant factor in selection. In the case of using a new COTS component in the project, hands-on experimentation is needed as an effective way of evaluating the component.", "num_citations": "18\n", "authors": ["1363"]}
{"title": "Tailoring and introduction of the rational unified process\n", "abstract": " RUP is a comprehensive software development process framework that has gained a lot of interest by the industry. One major challenge of taking RUP into use is to tailor it to specific needs and then to introduce it into a development organization. This study presents a review and a systematic assembly of existing studies on the tailoring and introduction of RUP. From a systematic search for study reports on this topic we found that most research is anecdotal and focus on the effects of RUP itself. Only a few number of studies address tailoring and introduction. We have found that tailoring RUP is a considerable challenge by itself and that it must be closely related to existing best practices. We see a tendency of turning from large complete process frameworks towards smaller and more light-weight processes which may impose a smoother transition from process model to process in use.", "num_citations": "17\n", "authors": ["1363"]}
{"title": "Knowledge sharing and process improvement in large-scale agile development\n", "abstract": " When scaling agile development methods, the principle of continuous improvement is challenged since most practices to support it is described on the team level and not on the project level. In this study we compare practices from two published empirical case studies on large-scale agile development implementations, with a focus on knowledge networks and process improvement. Our findings indicate that continuous process improvement will be influenced by the project type. There is a clear need for dynamic structures for learning and coordination, and these structures needs to be supported by a clear decision making process. We also describe informal arenas as an alternative to knowledge sharing in the traditional communities of practice suggested by large scale frameworks.", "num_citations": "10\n", "authors": ["1363"]}
{"title": "Harvesting knowledge through a method framework in an electronic process guide\n", "abstract": " A key leverage for small software consultancy companies is the collective knowledge possessed by their consultants. There have been some studies in the literature on how to harvest and transfer this knowledge, but most studies are aimed at large multinational corporations. In this paper we describe an ongoing research project, aimed at improving knowledge sharing in a small software consultancy company through the use of a method framework in an electronic process guide coupled with an experience repository.", "num_citations": "8\n", "authors": ["1363"]}
{"title": "Coordination in the large: a research design\n", "abstract": " The public sector is facing a massive digitalization process in order to provide faster and more automated services to the public. Several new projects in this sector are developing software using agile methodologies. There is, however, a lack of empirical research on how these methods are used in practice, how they are adapted to these complex and large settings, and how the projects achieves good coordination. In this paper we outline our initial research proposal to study a large-scale agile development program in the public sector. Our primary focus is to make sure the research is grounded in the reality of the practitioners and so we seek to follow an engaged scholarship model in order to make our research relevant as well as rigorous.", "num_citations": "5\n", "authors": ["1363"]}
{"title": "D5. 1 Model development guidelines\n", "abstract": " Objectives:The purpose of this report is to describe guidelines for model developers involved in developing virtual laboratory solutions for the aquaculture domain. This allows for developing new models as well as integration of existing models. The framework developed and implemented will be flexible in terms of including new mathematical models, facilitating easy future expansion and adaptation to other types of experiments.Rationale:", "num_citations": "4\n", "authors": ["1363"]}
{"title": "Case-based reasoning in a system architecture for intelligent fish farming\n", "abstract": " Fish farmers manage assets of considerable value on a daily basis. Many aspects of the daily operation are automated in some way, such as the feeding system. Sensory equipment steadily becomes cheaper and more ubiquitous, yielding data that can be used by automated systems and for post-processing (ie data mining) to discover hidden trends in the data. However, a lot of information is only known informally by the fish farmers themselves, through years of experience. Companies that can store this information and reuse it will have an advantage; even more so if high-level human expertise can be linked to low-level sensor data. This paper presents early developments of a system that stores this informal knowledge using case based-reasoning, combined with corresponding sensor data.", "num_citations": "4\n", "authors": ["1363"]}
{"title": "Operational support in fish farming through case-based reasoning\n", "abstract": " Farmed fish is the third biggest export in Norway (around NOK 30 billion/\u20ac3.82 billion/US$ 5.44 billion in 2010), and large fish farms have biomass worth around NOK 150 million/\u20ac19.38 million/US$ 26.72 million. Several processes are automated (e.g. the feeding system), and sensory logging systems are becoming ubiquitous. Still, the key to successful management of a site is the operational knowledge possessed by the fish farmers. In most cases, this information is not stored formally. To capture, store and reuse this knowledge in a more systematic way is called for. We present a system that employs case-based reasoning (CBR) for such knowledge management, combined with sensor data and numerical models. The CBR system will ultimately be the core part of a decision support for regional managers surveying fish farming sites. Data is acquired from multiple fish farms, spanning several years. We\u00a0\u2026", "num_citations": "3\n", "authors": ["1363"]}
{"title": "Empirical Study on COTS Components Classification\n", "abstract": " COTS-based development is gaining more and more attention. Effective COTS component classification will help integrators to successfully control the development process, such as selection and integration. In this paper, we present an empirical study to investigate the characterized classification proposed by previous research. From the result of this study, we conclude that some attributes are not good because they are either not measurable or unnecessary. We also propose one other attribute that will affect the development process dramatically. Our future study will focus on investigating these attributes in a larger sample.", "num_citations": "2\n", "authors": ["1363"]}
{"title": "D5. 5 Virtual laboratory version\n", "abstract": " Objectives:This deliverable describes the first version of the virtual laboratory developed in WP5 of AQUAEXCEL2020. The document describes the technical framework used to integrate the different submodels that are part of the virtual laboratory, short descriptions of these submodels, and demonstrations of the integration through simple simulation experiments. Since the development of the virtual laboratory will continue throughout the remainder of the project period, this report will also serve as a starting point for the remaining work in WP5.Rationale: One of the main research activities in AQUAEXCEL2020 WP5 is to develop a virtual laboratory system that enables virtual experiments in aquaculture research facilities. This system will feature a framework that allows the integration of mathematical models of different subsystems in common simulations, replicating the system operation of research laboratories.Main Results:", "num_citations": "1\n", "authors": ["1363"]}