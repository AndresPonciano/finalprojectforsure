{"title": "Multi-level agile project management challenges: A self-organizing team perspective\n", "abstract": " Agile software development advocates self-organizing teams that display high levels of autonomy. Self-organizing agile teams are meant to share project management activities such as estimation, planning, and requirements elicitation with managers and customers. While prior literature has explored some individual management-related issues, little is known about how the high involvement of self-organizing agile teams influences everyday project management activities. Through a Grounded Theory study involving 21 agile practitioners across six software companies implementing scrum and XP, we identified a set of eight project management challenges as experienced by and as a result of self-organizing agile teams at multiple levels. These include delayed/changing requirements and eliciting senior management sponsorship at the project level; achieving cross-functionality and effective estimations at the\u00a0\u2026", "num_citations": "236\n", "authors": ["2225"]}
{"title": "Coordination challenges in large-scale software development: a case study of planning misalignment in hybrid settings\n", "abstract": " Achieving effective inter-team coordination is one of the most pressing challenges in large-scale software development. Hybrid approaches of traditional and agile development promise combining the overview and predictability of long-term planning on an inter-team level with the flexibility and adaptability of agile development on a team level. It is currently unclear, however, why such hybrids often fail. Our case study within a large software development unit of 13 teams at a global enterprise software company explores how and why a combination of traditional planning on an inter-team level and agile development on a team level can result in ineffective coordination. Based on a variety of data, including interviews with scrum masters, product owners, architects and senior management, and using Grounded Theory data analysis procedures, we identify a lack of dependency awareness across development teams\u00a0\u2026", "num_citations": "81\n", "authors": ["2225"]}
{"title": "Self-organizing agile teams: A grounded theory\n", "abstract": " Self-organizing teams are a hallmark of Agile software development, directly a ecting team e ectiveness and project success. Agile software development, and in particular the Scrum method, emphasizes self-organizing teams but does not provide clear guidelines on how teams should become and remain self-organizing. Based on Grounded Theory research involving 58 Agile prac- titioners from 23 di erent software organizations in New Zealand and In- dia, this thesis presents a grounded theory of self-organizing Agile teams. The theory of self-organizing Agile teams explains how software development teams take on informal, implicit, transient, and spontaneous roles and per- form balanced practices while facing critical environmental factors, in order to become self-organizing. The roles are: Mentor, Co-ordinator, Translator, Champion, Promoter, and Terminator. The practices involve balancing free- dom and responsibility, cross-functionality and specialization, and continuous learning and iteration pressure. The factors are senior management support and level of customer involvement. This thesis will help teams and their coaches better understand their roles and responsibilities as a self-organizing Agile team. This thesis will also serve to educate senior management and customers about the importance of supporting these teams", "num_citations": "80\n", "authors": ["2225"]}
{"title": "Understanding the roles of the manager in agile project management\n", "abstract": " Agile project management (APM) does away with the role and the job title of the manager and instead places emphasis on self-organizing teams. However, recent surveys show that the job title of managers, particularly the project manager, is in existence on a significant number of agile projects. At the same time there is very little empirical evidence on the manager's role in an APM framework. To address this issue, a Grounded Theory study involving 20 software professionals from 18 different organizations which employed Agile Software Development (ASD) was carried out. The key finding of this preliminary study is the identification of the four roles played by managers on agile teams: mentor, coordinator, negotiator, and process adapter. As a mentor, the manager guides and supports the team in agile practice; the coordinator facilitates and coordinates the teams functioning; the negotiator takes care of the\u00a0\u2026", "num_citations": "36\n", "authors": ["2225"]}
{"title": "Reflection in agile retrospectives\n", "abstract": " A retrospective is a standard agile meeting practice designed for agile software teams to reflect and tune their process. Despite its integral importance, we know little about what aspects are focused upon during retrospectives and how reflection occurs in this practice. We conducted Case Study research involving data collected from interviews of sixteen software practitioners from four agile teams and observations of their retrospective meetings. We found that the impor\u2010tant aspects focused on during the retrospective meeting include identifying and discussing obstacles, discussing feelings, analyzing previous action points, iden\u2010tifying background reasons, identifying future action points and generating a plan. Reflection occurs when the agile teams embody these aspects within three levels of reflection: reporting and responding, relating and reasoning, and recon\u2010structing. Critically, we show that agile teams may not achieve all levels of reflection simply by performing retrospective meetings. One of the key contri\u2010butions of our work is to present a reflection framework for agile retrospective meetings that explains and embeds three levels of reflection within the five steps of a standard agile retrospective. Agile teams can use this framework to achieve better focus and higher levels of reflection in their retrospective meetings.", "num_citations": "31\n", "authors": ["2225"]}
{"title": "Understanding knowledge management in agile software development practice\n", "abstract": " Knowledge management in agile software development has typically been treated as a broad topic resulting in major classifications of its schools and concepts. What inherent knowledge is involved in everyday agile practice and how agile teams manage it is not well understood. To address these questions, we performed a Systematic Literature Review of 48 relevant empirical studies selected from reputed databases. Using a thematic analysis approach to the synthesis, we discovered that (a) agile teams use three knowledge management strategies: discussions, artifacts and visualisations to manage knowledge (b) there are three types of software engineering knowledge: team progress as project knowledge; requirements as product knowledge; and coding techniques as process knowledge. (c) this knowledge is presented in several everyday agile practices. A theoretical model describing how\u00a0\u2026", "num_citations": "22\n", "authors": ["2225"]}
{"title": "Does the \u201cProject Manager\u201d still exist in Agile Software Development Projects?\n", "abstract": " The project manager has been a ubiquitous feature of traditional software development projects. However, agile software development (ASD) methods which emphasize selforganizing teams and rapid response to change have done away with the project manager's title. New job titles such as the scrum master and product owner have been introduced instead. It is unclear as to what extent the \"project manager\" is still encountered in the agile software industry. An online survey was posted out to agile special interest groups on popular social media platforms to discover the frequency of the job title \"project manager\" in agile projects. Analysis of the 97 responses from 31 countries around the world revealed that: a) the title of project manager is still widely used (67%); b) there is a correlation between the team size and presence of project manager such that there is a higher probability the project manager will be\u00a0\u2026", "num_citations": "21\n", "authors": ["2225"]}
{"title": "How digital environments in schools might be used to boost social skills: Developing a conditional augmentation hypothesis\n", "abstract": " The use of online devices, tools and technologies in schools is seen as being able to promote \u201821st century\u2019 skills, specifically inter personal (e.g., being empathetic, taking others' perspectives, cooperation and collaboration) and intra personal skills (e.g., persistence and self-control). We review theoretical rationales for and, where available, research evidence about the impact of digital tools and technologies on the development of these skills under two conditions. One is where there are direct effects of access to and use of digital technologies relatively independently from other influences of the teacher. The evidence suggests powerful mechanisms are afforded directly, such as feedback, social learning, agentive learning and play (game-based learning), but that effects are variable and there are both positive and negative influences on skills. The second condition is when the digital environments are mediated by\u00a0\u2026", "num_citations": "19\n", "authors": ["2225"]}
{"title": "It's not them, it's us! Why computer science fails to impress many first years\n", "abstract": " High attrition and failure in first year computer science and software engineering courses has often been linked to the personal traits and skills of students\u2013dividing the world into those that \u201cget it\u201d and those \u201cthat don\u2019t\u201d. We present several concrete strategies based on the recently developed Learning Edge Momentum (LEM) theory, which when applied together, were found useful in reducing failure rates. Based on the our experiences, we challenge our current understanding of attrition and failure in first year courses and dare to claim that maybe it\u2019s not them, it\u2019s us that is the problem..", "num_citations": "16\n", "authors": ["2225"]}
{"title": "Aligning technological and pedagogical considerations: Harnessing touch-technology to enhance opportunities for collaborative gameplay and reciprocal teaching in NZ early education\n", "abstract": " New Zealand early childhood education (ECE) aims to provide a mix of teacher and child-led learning. A non-prescriptive curriculum allows for broad and rich early years teaching and learning experiences, with teachers responsive to devising engaging activities to align with children\u2019s diverse interests. However, such spontaneity presents an on-going challenge for teachers. Using a combination of Action Research, elements of User-Centered and Participatory Design, and Scrum software development approaches, we conducted a multi-disciplinary study which leveraged joint contributions of software engineers and experts, including practitioners (teachers), users (children and teachers), and domain experts (in ECE curriculum and pedagogy, and early childhood psychology). Examination of teacher\u2013child interactions with our software demonstrated that our game was engaging, promoted collaborative gameplay\u00a0\u2026", "num_citations": "15\n", "authors": ["2225"]}
{"title": "The role of the project manager in agile software development projects\n", "abstract": " Agile teams are not meant to have project managers. Instead, agile methods such as Scrum and XP define roles such as product owner, scrum master, and coach. Studies have uncovered the existence of the project manager in agile projects, pointing to disconnect between theory and practice. To address this gap, a Grounded Theory study with a mixed methods approach was conducted using multiple sources of data including over 45\u00a0h of interviews with 39 software practitioners and quantitative data from 57 questionnaire respondents. We present and describe the project manager\u2019s role in agile projects in terms of (a) everyday activities: facilitating, mentoring, negotiating, coordinating, and protecting, performed by the project manager using; (b) three management approaches: hard, moderate, and soft; (c) four traditional project management activities continued to be performed by them, including: tracking project\u00a0\u2026", "num_citations": "14\n", "authors": ["2225"]}
{"title": "Math tutor: an interactive Android-based numeracy application for primary education\n", "abstract": " With growing exposure of children to handheld and mobile devices, there is an increasing interest in exploring the use of mobile technology for educational purposes. In particular, touch-based devices seem to promise great potential in this domain. In this paper, we present Math Tutor\u2013an Android-based application designed to help children learn and practice early numeracy addition and subtraction (take away) as well as help teachers monitor and review children\u201f s progress, with support for English and M\u0101ori languages. We describe the design and development process, features of the application, and the results of a usability evaluation. This project takes a step towards creating interactive platforms required for educating the upcoming generation of digital natives.", "num_citations": "13\n", "authors": ["2225"]}
{"title": "Human values in software engineering: Contrasting case studies of practice\n", "abstract": " The growing diffusion of software in society and its influence on people demands from its creators that their work carefully considers human values such as transparency, social responsibility, and equality. But how do software practitioners address human values in software engineering practice\u2019 We interviewed 31 software practitioners from two organizations, each having a strong values framework, with the aim to understand: (a) practitioners\u2019 perceptions of human values and their role in software engineering; (b)practices that practitioners use to address human values in software; and (c) challenges they face during this process. We report our findings from two contrasting case studies on how practitioners \u201cengineer\u201d values in their unique organizational settings. We found evidence that organizational culture significantly contributes to how values are addressed in software. We summarize recommendations from\u00a0\u2026", "num_citations": "11\n", "authors": ["2225"]}
{"title": "Designing an educational tabletop software for children with autism\n", "abstract": " Discrete Trial Training (DTT) is an intervention method used by behaviour analysts for teaching skills to children with Autism Spectrum Disorder (ASD) around a table using physical materials and artefacts. Traditional DTT suffers from these main challenges: inconsistency due to human limitations; need for focusing the child\u2019s attention on the trial at hand; and disruptions on account of insession data recording and analysis by the analysts while delivering the training. Developed in collaboration with HCI and behaviour analysis experts, our proposed solution is an interactive, tabletop software application that provides the consistency and integrity that DTT aims to achieve, while engaging the child\u2019s attention on the interactive interface, and seamlessly collecting and analysing in-session data in the background. Upcoming usability evaluations of the prototype promise to provide insight into the potential effectiveness of our prototype.", "num_citations": "9\n", "authors": ["2225"]}
{"title": "Socio-Technical Grounded Theory for Software Engineering\n", "abstract": " Grounded Theory (GT), a sociological research method designed to study social phenomena, is increasingly being applied to investigate human-centric and social aspects of software engineering. Despite its strong potential, GT remains a largely misunderstood, misused, and poorly presented and evaluated method in software engineering. Inevitably, software engineering researchers attempt to adapt traditional GT to suit their unique socio-technical contexts but without philosophical rationales or methodological justification. At the heart of these challenges lies the misalignment of GT's traditional social sciences approach to studying what is an inherently and inextricably socio-technical discipline and the absence of clear methodological guidelines to bridge the gap. Motivated by the needs of the software engineering research community and an acknowledgement of the misalignment of the traditional GT methods to studying an increasingly socio-technical world, this paper outlines the Socio-Technical Grounded Theory (STGT) method, a variant of the traditional GT methods. With its unique socio-technical lens, STGT presents philosophical and methodological guidance for studying socio-technical phenomena and theory development in software engineering and related disciplines.", "num_citations": "8\n", "authors": ["2225"]}
{"title": "Recruitment, engagement and feedback in empirical software engineering studies in industrial contexts\n", "abstract": " ContextResearch carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.ObjectiveThe aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.MethodWe designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and\u00a0\u2026", "num_citations": "8\n", "authors": ["2225"]}
{"title": "Identifying design features using combination of requirements elicitation techniques\n", "abstract": " Requirements elicitation (RE) is the explanatory development activity of helping users figure out what theywant. However, acquisition of requirements is challenging and inappropriate requirements might lead to unncessary project development cost. It is important to validate the requirementswith various possible techniques to design a software solution. It is equally important to choose appropriate techniques for RE. To understand the importance of RE, Energy feedback or visualization of electricity consumption application had been chosen which would help in reducing household electricity consumption by motivating the residential end-users. To design an effectiveand innovative solution for visualization application, this article used a combination of three RE techniques, viz., systematic literature review (SLR), crowdsourcing survey and user-centred design (UCD) based design activity. The SLR assessed 22\u00a0\u2026", "num_citations": "8\n", "authors": ["2225"]}
{"title": "Fill that blank! An iOS-based literacy application\n", "abstract": " There are many existing software applications that claim to teach English literacy. However, these applications often cater to preschoolers, only teach vocabulary or phonetics and mostly focus on fundamental reading skills, and not comprehension. This project aims to develop an application that teaches 7-10 years old children comprehension of the English language. Research was conducted into existing applications and pedagogy leading to the elicitation of requirements specification and design. Our iOS app is designed as a tailored cloze activity (\"fill-in-the-blanks\") in the context of a story. A usability study was conducted with 18 children in the target age group at two primary schools from different socio-economic areas. Overall response to the application was positive with high intuitiveness and engagement ratings. Future work includes refinements and can explore effectiveness of the app through a longer\u00a0\u2026", "num_citations": "8\n", "authors": ["2225"]}
{"title": "Spearheading agile: The role of the scrum master in agile projects\n", "abstract": " Scrum innovated the role of the scrum master in software engineering. The scrum master is envisioned in agile literature as the \u201cservant leader\u201d who serves the team in a multitude of different ways, which include promoting scrum, facilitating the team\u2019s functioning, and removing obstacles. However, empirical studies focusing on the role of the scrum master in practice are scarce. To address this gap, a Grounded Theory study with a mixed methods approach was carried out which included semi-structured interviews with 39 software practitioners and a questionnaire with 47 respondents. In this study, we present and describe the scrum master\u2019s role in agile projects in terms of (a) the grounded theory of the role of the scrum master which involves everyday activities of facilitating, mentoring, negotiating, process adapting, coordinating, and protecting;(b) the varying involvement of the scrum master in selected agile\u00a0\u2026", "num_citations": "6\n", "authors": ["2225"]}
{"title": "Towards understanding emotional response to requirements changes in agile teams\n", "abstract": " Agile software development welcomes requirements changes even late in the process. However, it is unclear how agile teams respond to these changes. Therefore, as the starting point of a planned extensive study on handling requirements changes in agile projects, we examined the emotional responses to requirements changes by agile teams. In this paper, we (i) introduce a novel combined approach of using Grounded Theory and Sentiment Analysis (through SentiStrength and Job Emotion Scale),(ii) present three distinct phases of emotional responses, a summary of emotions, and variation in emotions and sentiment polarity (positivity, negativity, and neutrality) at each stage, and (iii) emphasize the necessity of taking emotional responses of agile teams into consideration when applying agile principles and practices to deal with changes.", "num_citations": "6\n", "authors": ["2225"]}
{"title": "Medtouch: Towards the development of smartphone-based software solutions for mobile health care\n", "abstract": " Audiovisual material available from this site has been copied and communicated to you under a Screenrights licence pursuant to Section 113P of the Copyright Act 1968 solely for the educational purposes of your institution. No other use is authorised. For more information please contact Screenrights at [email protected] or at www. screenrights. org.", "num_citations": "6\n", "authors": ["2225"]}
{"title": "How Can Human Values Be Addressed in Agile Methods? A Case Study on SAFe\n", "abstract": " Agile methods are predominantly focused on delivering business values. But can Agile methods be adapted to effectively address and deliver human values such as social justice, privacy, and sustainability in the software they produce? Human values are what an individual or a society considers important in life. Ignoring these human values in software can pose difficulties or risks for all stakeholders (e.g., user dissatisfaction, reputation damage, financial loss). To answer this question, we selected the Scaled Agile Framework (SAFe), one of the most commonly used Agile methods in the industry, and conducted a qualitative case study to identify possible intervention points within SAFe that are the most natural to address and integrate human values in software. We present five high-level empirically-justified sets of interventions in SAFe: artefacts, roles, ceremonies, practices, and culture. We elaborate how some current Agile artefacts (e.g., user story), roles (e.g., product owner), ceremonies (e.g., stand-up meeting), and practices (e.g., business-facing testing) in SAFe can be modified to support the inclusion of human values in software. Further, our study suggests new and exclusive values-based artefacts (e.g., legislative requirement), ceremonies (e.g., values conversation), roles (e.g., values champion), and cultural practices (e.g., induction and hiring) to be introduced in SAFe for this purpose. Guided by our findings, we argue that existing Agile methods can account for human values in software delivery with some evolutionary adaptations.", "num_citations": "5\n", "authors": ["2225"]}
{"title": "Visualization of Electricity Consumption: Software Prototype through Literature Survey\n", "abstract": " Visualization of energy consumption is widely considered as an important means to assist the end-users and the energy managers in reducing energy consumption and bringing about sustainable behavior. However, there are no clear design requirements to develop the energy monitoring visualization. This paper makes a leap forward in identifying the functional and non-functional requirements through a systematic literature review (SLR) of 28 papers. Also, the recommendations to tackle the requirements are also presented, which would help the visualization designers or researchers in designing the visualization. Through the information from the SLR, a software prototype for \u2018visualization of electricity consumption\u2019is proposed, which is created using open source software.", "num_citations": "5\n", "authors": ["2225"]}
{"title": "Agile Processes in Software Engineering and Extreme Programming\u2013Workshops: XP 2019 Workshops, Montr\u00e9al, QC, Canada, May 21\u201325, 2019, Proceedings. Springer Nature\n", "abstract": " This open access book constitutes the research workshops, doctoral symposium and panel summaries presented at the 20th International Conference on Agile Software Development, XP 2019, held in Montreal, QC, Canada, in May 2019. XP is the premier agile software development conference combining research and practice. It is a hybrid forum where agile researchers, academics, practitioners, thought leaders, coaches, and trainers get together to present and discuss their most recent innovations, research results, experiences, concerns, challenges, and trends. Following this history, for both researchers and seasoned practitioners XP 2019 provided an informal environment to network, share, and discover trends in Agile for the next 20 years. Research papers and talks submissions were invited for the three XP 2019 research workshops, namely, agile transformation, autonomous teams, and large scale agile. This book includes 15 related papers. In addition, a summary for each of the four panels at XP 2019 is included. The panels were on security and privacy; the impact of the agile manifesto on culture, education, and software practices; business agility \u2013 agile\u2019s next frontier; and Agile \u2013 the next 20 years.", "num_citations": "3\n", "authors": ["2225"]}
{"title": "Using agile games to invigorate agile and lean software development learning in classrooms\n", "abstract": " A wide variety of professional certifications, trainings and dedicated academic courses are attempting to meet the ever-growing demand for software professionals competent in the knowledge and use of agile and lean software methods and practices. Agile games, embodying experiential learning, are popular in industrial contexts and are increasingly being trialed in academic settings as a feasible alternative or a complement to traditional instructional learning approaches. Most games reported, however, focus exclusively on the Scrum method and practices. This study reports on the use of four agile games for learning fundamental agile and lean concepts such as iterative and incremental delivery, collaborative estimation, pair programming and work-in-progress limits. Based on classroom observations and survey-based quantitative and qualitative data, we found that: agile games are a useful supplement\u00a0\u2026", "num_citations": "3\n", "authors": ["2225"]}
{"title": "ECoS: Energy control system for smart homes\n", "abstract": " One of the most efficient ways of reducing household energy consumption is through an online feedback system, which helps users in reducing their household energy. There are several research and commercial products available, yet over-consumption issues are still prevalent. An important factor fueling these issues is rendering too many features or information in the online feedback system, which results in a decrease in use of those applications over time. This study aims to develop a user-friendly system with a minimal set of features that would help the residential users achieve maximum savings. The energy control system (ECoS) consists of three major features, i.e., (a) visualization of energy, (b) recommendation of energy saving decision to users, (c) remote appliance control through recommendations, with thirteen sub-features. Based on an analysis of energy savings and user preferences, we identified\u00a0\u2026", "num_citations": "3\n", "authors": ["2225"]}
{"title": "Towards designing assistive software applications for discrete trial training\n", "abstract": " Discrete Trial Training (DTT) is one of the most effective training methods for children diagnosed with Autism. Traditional DTT suffers from limitations of inconsistencies on account of human error, disruptions due to in-session data collection by trainers, and difficulties of producing physical within-stimulus prompts. Current software solutions either support sole child usage thereby eliminating the social interaction benefits of DTT or lack automated data collection. Designed by an inter-disciplinary team of software engineers, HCI, and psychology experts and certified behaviour analysts for a touch-tabletop, DTTAce is an assistive-software that provides digital consistency and integrity and supports customization of trials, automated data collection, and within-stimulus prompts while preserving natural interactions and the social nature of DTT. It is an important step towards designing effective assistive software for Discrete\u00a0\u2026", "num_citations": "3\n", "authors": ["2225"]}
{"title": "Investigating Visualization of Energy Consumption\n", "abstract": " Visualization of energy consumption patterns is expected to enforce ecologically responsible behavior. Visualization performs a vital role by assisting residential end-users to understand and manage their energy consumption in a sustainable manner. The main objective of visualizing energy consumption is to inculcate awareness among residents and to encourage energy conserving behavior. A robust design is essential to achieving an effective visualization. This article discusses the preliminary research work on identifying the design requirements for visualization followed by the future direction in this area of research.", "num_citations": "3\n", "authors": ["2225"]}
{"title": "Decoding Grounded Theory for Software Engineering\n", "abstract": " Grounded Theory, while becoming increasingly popular in software engineering, is also one of the most misunderstood, misused, and poorly presented and evaluated method in software engineering. When applied well, GT results in dense and valuable explanations of how and why phenomena occur in practice. GT can be applied as a full research method leading to mature theories and also in limited capacity for data analysis within other methods, using its robust open coding and constant comparison procedures. This technical briefing will go through the social origins of GT, present examples of grounded theories developed in SE, discuss the key challenges SE researchers face, and provide a gentle introduction to socio-technical grounded theory, a variant of GT for software engineering research.", "num_citations": "2\n", "authors": ["2225"]}
{"title": "Policy recommendations to induce behavioural changes through interactive energy visualisation\n", "abstract": " One of the important ways of saving household electricity and inducing behavioural change is through the visualisation of electricity consumption. Several models have been proposed to make the visualisation more creative and interactive to achieve significant energy savings among the energy users. However, advocating this visualisation among the users requires policy analysts and government bodies to design relevant energy efficiency policies. This paper has analysed the requirements of an interactive energy visualisation system named ECoS (Energy Control System) through user-centered techniques such as survey and design thinking activity, and the top seven features of the system are identified, designed and implemented. These features are assessed through usability testing and the software is updated based on the feedback from the participants. With all these assessments and analysis, five policy\u00a0\u2026", "num_citations": "2\n", "authors": ["2225"]}
{"title": "Power to the People\n", "abstract": " Software development teams no longer live-or want to live-in a world of command and control. They want to be self-organizing and have adaptive, supportive, and collaborative leadership guiding them. This new age of management requires managers to build a culture of trust, encourage participation of their teams in decision making, and sponsor innovation. Simply put, managers need to do away with the traditional (micro) management and share power with self-organizing teams.", "num_citations": "2\n", "authors": ["2225"]}
{"title": "Toward visualising and controlling household electrical appliances\n", "abstract": " Energy consumption is a vital component in day-today life. Visualising energy consumption, recommending energy conserving strategies and, controlling the appliances are some of the widely considered means to motivate and/or to help end-users at household to conserve energy. However, the conventional energy visualisation applications have certain drawbacks, such as lack of energy consumption location, lack of controlling appliances based on energy-saving recommendations, etc. To overcome those, this research would accomplish a simulation model by designing the following: (i) visualisation engine, to visualise household electricity consumption, (ii) recommendation engine, to provide energy-saving recommendations to the end-users, (iii) control engine, to control the household appliances based on the recommendations, and (iv) integrate visualisation, recommendation and control engines. This\u00a0\u2026", "num_citations": "1\n", "authors": ["2225"]}
{"title": "Workshop on cooperative and human aspects of software engineering:(CHASE 2011)\n", "abstract": " Software is created by people for people working in varied environments, under various conditions. Thus understanding cooperative and human aspects of software development is crucial to comprehend how methods and tools are used, and thereby improve the creation and maintenance of software. Over the years, both researchers and practitioners have recognized the need to study and understand these aspects. Despite recognizing this, researchers in cooperative and human aspects have no clear place to meet and are dispersed in different research conferences and areas. The goal of this workshop is to provide a forum for discussing high quality research on human and cooperative aspects of software engineering. We aim at providing both a meeting place for the growing community and the possibility for researchers interested in joining the field to present their work in progress and get an overview over the\u00a0\u2026", "num_citations": "1\n", "authors": ["2225"]}