{"title": "Evaluating the monolithic and the microservice architecture pattern to deploy web applications in the cloud\n", "abstract": " Cloud computing provides new opportunities to deploy scalable application in an efficient way, allowing enterprise applications to dynamically adjust their computing resources on demand. In this paper we analyze and test the microservice architecture pattern, used during the last years by large Internet companies like Amazon, Netflix and LinkedIn to deploy large applications in the cloud as a set of small services that can be developed, tested, deployed, scaled, operated and upgraded independently, allowing these companies to gain agility, reduce complexity and scale their applications in the cloud in a more efficient way. We present a case study where an enterprise application was developed and deployed in the cloud using a monolithic approach and a microservice architecture using the Play web framework. We show the results of performance tests executed on both applications, and we describe the benefits\u00a0\u2026", "num_citations": "351\n", "authors": ["1522"]}
{"title": "The Adele configuration manager\n", "abstract": " A Software Configuration Management (SCM) system results from harmonious collaboration between a Repository Space (RS) and Work Spaces (WSs). The WS controls the dynamic aspect of SCM, ie, the place where activities are performed; the RS is the place wherein software objects are modelled, stored and manipulated. It is argued here that an SCM system must satisfy conflicting requirements. These are the need for a powerful and dedicated OMS with high modelling power (and thus complexity), and the need for files and directories which are simple concepts, but with low modelling power. We show how different systems have met these requirements. This article shows how different aspects of the Adele system contribute to meeting these requirements and how this provides a highly customizable and extensible system with services for complex data management, tool integration, inter-tool cooperation, process support and configuration management.", "num_citations": "214\n", "authors": ["1522"]}
{"title": "Infrastructure cost comparison of running web applications in the cloud using AWS lambda and monolithic and microservice architectures\n", "abstract": " Large Internet companies like Amazon, Netflix, and LinkedIn are using the microservice architecture pattern to deploy large applications in the cloud as a set of small services that can be developed, tested, deployed, scaled, operated and upgraded independently. However, aside from gaining agility, independent development, and scalability, infrastructure costs are a major concern for companies adopting this pattern. This paper presents a cost comparison of a web application developed and deployed using the same scalable scenarios with three different approaches: 1) a monolithic architecture, 2) a microservice architecture operated by the cloud customer, and 3) a microservice architecture operated by the cloud provider. Test results show that microservices can help reduce infrastructure costs in comparison to standard monolithic architectures. Moreover, the use of services specifically designed to deploy and\u00a0\u2026", "num_citations": "184\n", "authors": ["1522"]}
{"title": "Changing a generation\u2019s way of thinking: Teaching computational thinking through programming\n", "abstract": " Computational thinking (CT) uses concepts that are essential to computing and information science to solve problems, design and evaluate complex systems, and understand human reasoning and behavior. This way of thinking has important implications in computer sciences as well as in almost every other field. Therefore, we contend that CT should be taught in elementary schools and included in every university\u2019s educational curriculum. Several studies that measure the impact of teaching programming, analytical thinking, and CT have been conducted. In this review, we analyze and discuss findings from these studies and highlight the importance of learning programming with a focus on the development of CT skills at a young age. We also describe the tools that are available to improve the teaching of CT and provide a state-of-the-art overview of how programming is being taught at schools and universities in\u00a0\u2026", "num_citations": "176\n", "authors": ["1522"]}
{"title": "Cost comparison of running web applications in the cloud using monolithic, microservice, and AWS Lambda architectures\n", "abstract": " Large Internet companies like Amazon, Netflix, and LinkedIn are using the microservice architecture pattern to deploy large applications in the cloud as a set of small services that can be independently developed, tested, deployed, scaled, operated, and upgraded. However, aside from gaining agility, independent development, and scalability, how microservices affect the infrastructure costs is a major evaluation topic for companies adopting this pattern. This paper presents a cost comparison of a web application developed and deployed using the same scalable scenarios with three different approaches: 1) a monolithic architecture, 2) a microservice architecture operated by the cloud customer, and 3) a microservice architecture operated by the cloud provider. Test results show that microservices can help reduce infrastructure costs in comparison with standard monolithic architectures. Moreover, the use of\u00a0\u2026", "num_citations": "73\n", "authors": ["1522"]}
{"title": "Three dimensional versioning\n", "abstract": " Versioning, in Software Engineering, has become synonym to the revision/variant graph, as proposed 20 years ago by SCCS. It is claimed here that this version graph is only a mechanism, and that it does not provide a clear description of the versioning concept. Consequently, the same mechanism is now used for very different purposes which lead (1) to a great confusion in the concepts involved, and (2) the services provided are low level and inadequate in most situations.             The other claim is that the irruption of software process support in SE introduced new needs which can also be solved by another kind of versioning.             In this paper we try to clarify the situation, introducing three orthogonal versioning dimensions: historical, logical and cooperative. We show that the associated concepts services and needs are clearly different, and how this model was (partially) implemented in the Adele project.", "num_citations": "63\n", "authors": ["1522"]}
{"title": "Towards the understanding and evolution of monolithic applications as microservices\n", "abstract": " Nowadays, software development teams face the challenge of maintenance and evolution of large applications. This is known as modernization and comprises a process of understanding the existing application, and a process of transforming from the as-is state to the to-be state. In this article, we present an approach to modernize legacy applications into microservices. We propose a model-centered process to analyze and visualize the current structure and dependencies between the business layer and the data layer. Furthermore, we propose a modularization into clusters and microservices using four different diagrams. To validate our approach we have analyzed a JEE application with over 74566 LoC. The results show that the understanding is greatly improved through the diagrams proposed, and the modularization proposed constitutes the first step towards the automated modernization of the application.", "num_citations": "62\n", "authors": ["1522"]}
{"title": "Data schema does matter, even in NoSQL systems!\n", "abstract": " A Schema-less NoSQL system refers to solutions where users do not declare a database schema and, in fact, its management is moved to the application code. This paper presents a study that allows us to evaluate, to some extent, the data structuring impact. The decision of how to structure data in semi-structured databases has an enormous impact on data size, query performance and readability of the code, which influences software debugging and maintainability. This paper presents an experiment performed using MongoDB along with several alternatives of data structuring and a set of queries having increasing complexity. This paper introduces an analysis regarding the findings of such an experiment.", "num_citations": "40\n", "authors": ["1522"]}
{"title": "Realizing model transformation chain interoperability\n", "abstract": " A single Model Transformation Chain (MTC) takes a high-level input model rooted in the problem domain and through one or more transformation steps produces a low-level output model rooted in the solution domain. To build a single \u201calmighty\u201d MTC that is in charge of every design, implementation and specific platform concern is a complex task. Instead, we can use several smaller MTCs that are easier to develop and maintain, because each MTC is independently developed focusing on a specific concern. However, the MTCs must interoperate to produce complete applications; this inherently creates dependencies between them, because each MTC generates a part of the final low-level model. In this paper, we propose an external and explicit mechanism to track dependencies between the MTCs (i.e., the MTCs are oblivious to the mechanism), which is used to automatically derive correspondence\u00a0\u2026", "num_citations": "40\n", "authors": ["1522"]}
{"title": "Mmc-bpm: A domain-specific language for business processes analysis\n", "abstract": " Business Process Management approaches incorporate an analysis phase as an essential activity to improve business processes. Although business processes are defined at a high-level of abstraction, the actual analysis concerns are specified at the workflow implementation level resulting in a technology-dependent solution, increasing the complexity to evolve them. In this paper we present a language for high-level monitoring, measurement data collection, and control of business processes and an approach to translate these specifications into executable implementations. The approach we present offers process analysts the opportunity to evolve analysis concerns independently of the process implementation.", "num_citations": "35\n", "authors": ["1522"]}
{"title": "White-box modernization of legacy applications: The oracle forms case study\n", "abstract": " Software modernization consists of transforming legacy applications into modern technologies, mainly to minimize maintenance costs. This transformation often produces a new application that is a poor copy of the legacy due to the degradation of quality attributes, for example. This paper presents a white-box transformation approach that changes the application architecture and the technological stack without losing business value and quality attributes. This approach obtains a technology agnostic model from the original sources, such a model facilitates the architecture configuration before performing the actual transformation of the application into the new technology. The architecture for the new application can be configured considering aspects such as data access, quality attributes, and process. We evaluate our approach through an industrial case study, the gist of which is the transformation of Oracle Forms\u00a0\u2026", "num_citations": "27\n", "authors": ["1522"]}
{"title": "Variability management in a model-driven software product line\n", "abstract": " La administraci\u00f3n de variabilidad en una l\u00ednea de producto tiene dos retos fundamentales:(1) la expresi\u00f3n de las caracter\u00edsticas comunes y variables de la l\u00ednea, y (2) la construcci\u00f3n de aplicaciones que incluyan las caracter\u00edsticas comunes, y un subconjunto de las caracter\u00edsticas variables. En este art\u00edculo presentamos una propuesta para administrar la variabilidad durante el proceso de construcci\u00f3n de Software Product Lines (SPLs) usando un enfoque de construcci\u00f3n de l\u00edneas de producto basado en modelos (MD-SPL). Para esto separamos conceptos relacionados con SPLs en diferentes dominios y construimos como activos de la l\u00ednea modelos de rasgos, metamodelos y tres tipos de reglas de transformaci\u00f3n para transformar modelos de un dominio origen a diferentes (variables) modelos en un dominio destino. Las reglas nos permiten generar incrementalmente las aplicaciones de acuerdo con una selecci\u00f3n de rasgos realizada para cada dominio destino. As\u00ed, logramos ampliar el alcance de las SPLs, separar los dominios de manera que se disminuya la complejidad de crear aplicaciones con caracter\u00edsticas variables, y generar aplicaciones autom\u00e1ticamente usando reglas de transformaci\u00f3n. Para ilustrar la soluci\u00f3n construimos una MD-SPL donde los productos corresponden a ejercicios pedag\u00f3gicos para la ense\u00f1anza de programaci\u00f3n de computadores.", "num_citations": "27\n", "authors": ["1522"]}
{"title": "Dealing with fine-grained configurations in model-driven spls\n", "abstract": " In Model-Driven SPL approaches, the derivation of a product starts from a domain application model. This model is transformed using model transformations, which are selected according to variants included in configurations, until a product is obtained. There are at least two drawbacks to these approaches. First, the selection of variants affects the whole domain application model, impeding fine-grained configurations, ie configurations at the level of each element in the model, and second, model transformations are coupled with variants which make their maintenance and adaptation difficult. We present an approach that uses meta-modeling and feature modeling. A novelty in our approach is the possibility of configuring a product from a domain application model in which elements can be bound separately to features. These fine-grained configurations are an input to the derivation process which uses decision\u00a0\u2026", "num_citations": "26\n", "authors": ["1522"]}
{"title": "Bridging the Gap between e-learning Modeling and Delivery through the Transformation of Learnflows into Workflows\n", "abstract": " E-learning pedagogical models are described in terms of educational modeling languages (EMLs). IMS-LD is accepted as the standard EML. It allows for the description of multiactor adaptable learning processes. Although some IMS-LD-compatible editing tools are being developed, no delivery platfonn is yet available. This chapter proposes to bridge this gap by looking at business process modeling languages and execution engines, in particular the Workflow Management Coalition Standard, XPDL. The first two sections of the chapter give the introduction and the context of the work. Section 3 describes IMS-LD as well as existing editing and delivery tools. Section 4 describes XPDL and some editing tools and execution engines. Section 5 proposes a transformation from IMS-LD to XPDL, and Section 6 describes the application developed to implement this transfonnation. The chapter ends with some\u00a0\u2026", "num_citations": "25\n", "authors": ["1522"]}
{"title": "Challenges in creating environments for SOA learning\n", "abstract": " SOA is now in widespread use by the industry and is a current area of interest for research. However a currently open area of investigation is how to properly introduce SOA in an IT/CS/SwE type of curriculum. Software engineering students must develop a series of abilities and skills related to SOA for effective professional practice. Providing environments where students go beyond learning some concepts and specific technologies to truly apprehend the complexity involved in SOA is a major challenge. This environment must be articulated in the context of business needs and other software architecture methodologies. Instructors need a new set of skills and abilities to tackle this challenge. This position paper discusses what such an environment should provide for students and instructors to effectively develop skills that will enable SOA practice in the business world.", "num_citations": "22\n", "authors": ["1522"]}
{"title": "Product Derivation in a Model-Driven Software Product Line using Decision Models.\n", "abstract": " We present a mechanism to derivate products of Software Product Lines (SPLs) using decision models. Our approach to create SPLs is based on Model Driven Engineering principles. It uses metamodels and model transformation programs, which are sets of ordered model transformation rules, to obtain concrete software artifacts departing from an initial model. It uses also feature models to express the variability included in the SPLs. Because of the variability, to derivate product line members, we have to adapt the transformation programs according to user choices done on the feature models. The choices are gathered in configurations. Then, to derivate a product, we process a specific configuration and a decision model, which links variants, expressed as features, to model transformation rules. Thus, decision models enable the adaptation of the model transformation programs to derivate products including specific variants.", "num_citations": "21\n", "authors": ["1522"]}
{"title": "Metodolog\u00eda para implantar el Modelo Integrado de Capacidad de Madurez en grupos peque\u00f1os y emergentes\n", "abstract": " En este art\u00edculo se presenta QualDev-Software Process Improvement (SPI), una metodolog\u00eda para ayudar a la gerencia de empresas o departamentos de software peque\u00f1os y emergentes a implantar el Capability Maturity Model Integration (CMMI). El objetivo de esta metodolog\u00eda es aumentar la competitividad de estos grupos para que ofrezcan mayor calidad en sus productos y tengan mejores indicadores de productividad. QualDev-SPI se basa en 3\u00a0principios: a)\u00a0peque\u00f1os pasos para el mejoramiento alineados con los proyectos de desarrollo; b)\u00a0procesos livianos apoyados en herramientas, y c)\u00a0visibilidad a corto plazo de los beneficios. La metodolog\u00eda incluye un modelo de mejoramiento organizacional, una matriz de grados de logro de las pr\u00e1cticas y un mapa de ruta que contiene una definici\u00f3n estandarizada de procesos y de las herramientas de apoyo que facilitan su puesta en marcha.", "num_citations": "20\n", "authors": ["1522"]}
{"title": "Using domain specific languages for software process modeling\n", "abstract": " This paper presents the use of Domain-Specific Modeling (DSM) technologies to tackle the complexity associated to the definition and improvement of software process models. This complexity arises because these tasks involve the description of different activities as well as the relationships with other processes. In this work, we propose the use of viewpoint models to represent, in a modular and non-intrusive way, concerns expressed on a software process model. We developed a Domain-Specific Aspect Language, called AspectViewpoint, to create viewpoint models using a vocabulary based on the workflow control patterns.", "num_citations": "19\n", "authors": ["1522"]}
{"title": "Teaching/learning a first object-oriented programming course outside the CS curriculum\n", "abstract": " In this paper, we present a new approach to teach/learn a first programming course for students outside CS curriculum. Our approach aims to deal with some known student difficulties: 1) motivational problems, 2) lack of balance in the aspects related to building a program to solve a problem, and 3) methodological problems in teaching programming. Our proposal intends to contribute to overcome the difficulties by means of: 1) an active learning approach based on problems, 2) a balance among several thematic axes related to programming, and 3) the construction of a teaching/learning pedagogical model to help instructors teach programming in a systematic way.", "num_citations": "18\n", "authors": ["1522"]}
{"title": "El reto de dise\u00f1ar un primer curso de programaci\u00f3n de computadores\n", "abstract": " En este art\u00edculo presentamos el trabajo desarrollado durante los \u00faltimos dos a\u00f1os en el marco del proyecto Cupi2, cuyo objetivo es buscar una nueva aproximaci\u00f3n al problema de ense\u00f1ar a programar. Durante muchos a\u00f1os hemos tratado de adaptar los cursos de programaci\u00f3n a las nuevas tendencias y lenguajes, sin que hasta el momento podamos decir que los resultados sean completamente satisfactorios. En este proyecto hemos trabajado en 4 etapas. En la primera etapa se hizo un diagn\u00f3stico completo, tratando de identificar los problemas actuales de nuestros cursos y los factores que hacen de la ense\u00f1anza de la programaci\u00f3n una tarea dif\u00edcil. Este trabajo nos tom\u00f3 aproximadamente un a\u00f1o. En la segunda etapa se estableci\u00f3 un marco conceptual de trabajo, que incluye un conjunto de principios y un conjunto de ejes conceptuales. Este marco es completamente reutilizable, puesto que es\u00a0\u2026", "num_citations": "18\n", "authors": ["1522"]}
{"title": "Towards quality analysis for document oriented bases\n", "abstract": " Document-oriented bases allow high flexibility in data representation which facilitates a rapid development of applications and enables many possibilities for data structuring. Nevertheless, the structural choices remain crucial because of their impact on several aspects of the document base and application quality, e.g., memory print, data redundancy, readability and maintainability. Our research is motivated by quality issues of document-oriented bases. We aim at facilitating the study of the possibilities of data structuring and providing objective metrics to better reveal the advantages and disadvantages of each solution with respect to user needs. In this paper, we propose a set of structural metrics for a JSON compatible schema abstraction. These metrics reflect the complexity of the structure and are intended to be used in decision criteria for schema analysis and design process. This work capitalizes on\u00a0\u2026", "num_citations": "17\n", "authors": ["1522"]}
{"title": "MTC Flow: A tool to design, develop and deploy model transformation chains\n", "abstract": " This paper presents a tool called MTC Flow, which allows model-driven developers to design, develop, test and deploy Model Transformation Chains (MTCs). The tool offers a graphical DSL for defining MTC workflow models independently of the technologies that support the transformations. Using basic concepts such as metamodels, models and transformations (M2M, M2T and T2M) the user defines, executes and tests his MTC easily in the same development environment. MTC Flow has an abstraction layer to implement technology support. It facilitates the interoperability of model transformation and validation using the existing technologies without changes. Additionally, once the MTC is finished, MTC Flow offers an option to deploy it in any environment that support JAVA technology. The tool supports modularity and alternative execution paths of the MTCs. It was built on top of the Eclipse Modeling Framework\u00a0\u2026", "num_citations": "16\n", "authors": ["1522"]}
{"title": "Propagating decisions to detect and explain conflicts in a multi-step configuration process\n", "abstract": " In configuration processes with multiple stakeholders, conflicts are very likely because each decision maker has a different concerns and expectations about the product. They may not be aware of features selected by others or the restrictions that these selections impose. To help solve the conflicts, this paper introduces a new approach to provide explanations about their causes. Our approach is based on representing features from different concerns using different Feature Models (FMs), and relating them through Feature-Solution Graphs. An FSG contains dependency relationships between two FMs: one feature from the left side forces or prohibits the selection of features in the right side feature model. The strategy to detect and explain conflicts is based on propagation of constraints over the FSGs. We claim that our approach is more expressive and efficient than when using a single FM that contains all\u00a0\u2026", "num_citations": "15\n", "authors": ["1522"]}
{"title": "A practical approach to multi-modeling views composition\n", "abstract": " The use of several view models to specify a complex system is a common practice to provide the most appropriate abstractions to model its diverse concerns. When several view models are used to specify a system, it is necessary to compose them to generate the application. When the view models are expressed in different Domain Specific Modeling Languages a problem arises because a heterogeneous composition is required. A possible approach to avoid a heterogeneous composition is to transform the diverse models into low-level models using a common low-level modeling language as target. Therefore, when all the view models are transformed in low-level models specified with a common language, it is possible to apply a ho-mogeneous composition to obtain the final application. However, it is necessary to identify the elements to compose in the low-level. In this paper, we present an auto-matic mechanism to identify which elements will be composed. This mechanism is based on defining correspondence relationships between the high-level view mod-els and automatically deriving new correspondence between the generated low-level models.", "num_citations": "15\n", "authors": ["1522"]}
{"title": "Monitoring and analysis concerns in workflow applications: from conceptual specifications to concrete implementations\n", "abstract": " Workflow monitoring and analysis concerns aim at identifying potential improvements of workflow applications. This paper presents an approach to specify and implement monitoring and analysis concerns on workflow applications raising the level of abstraction for workflow analysts. First, the specification of monitoring and analysis concerns is declared in a technology-independent way with a domain-specific language named MonitA. MonitA makes extensive use of the data available in the workflow application and its constituents to enhance the monitoring and analysis specifications. Second, we defined and implemented a strategy to assist developers to enhance a given workflow technology to support the generation of the monitoring and analysis code and its composition with the workflow application. This instrumentation-based approach enables the monitoring and analysis of workflow applications during their\u00a0\u2026", "num_citations": "14\n", "authors": ["1522"]}
{"title": "A dsl for rapid prototyping of cross-platform tower defense games\n", "abstract": " Because of the increasing expansion of the videogame industry, shorten videogame time to market for diverse platforms (e.g, Mac, android, iOS, BlackBerry) is a quest. This paper presents how a Domain Specific Language (DSL) in conjunction with Model-Driven Engineering (MDE) techniques can automate the development of games, in particular, tower defense games such as Plants vs. Zombies. The DSL allows the expression of structural and behavioral aspects of tower defense games. The MDE techniques allow us to generate code from the game expressed in the DSL. The generated code is written in an existing open source language that leverages the portability of the games. We present our approach using an example so-called Space Attack. The example shows the significant benefits offered by our proposal in terms of productivity and portability.", "num_citations": "12\n", "authors": ["1522"]}
{"title": "An approach for evolving transformation chains\n", "abstract": " A transformation chain (TC) generates applications from high-level models that are defined in terms of problem domain concepts. The result is a low-level model that is rooted in the solution domain. The evolution of a TC is a complex and expensive endeavor since there are intricate dependencies between all its constituent parts. More specific, an evolution problem arises when we need to add an unanticipated concern (e.g., security) that does not fit the expressiveness of the high-level metamodel, because such an addition forces us to adapt existing assets (i.e., metamodels, models, and transformations). We present a solution that adds a new concern model to the TC, in an independent way.", "num_citations": "12\n", "authors": ["1522"]}
{"title": "Comparing two Implementations of an Approach for Managing Variability in Product Line Construction Using the GMF and GME Frameworks\n", "abstract": " In this paper, we present a comparison of two implementations of our proposed MDA approach for managing variability in a software product line. The implementations correspond to two representative frameworks based on the Model Driven Engineering (MDE) principles. These frameworks are the Graphical Modeling Framework (GMF) and the Generic Model Environment (GME). We built the core assets of the product line and we generated applications using the two different frameworks. The core assets that we built are: feature models, metamodels, mapping models, and three different types of transformation rules. We built the transformation rules using two different languages: the ATLAS Transformation Language (ATL) in the context of GMF and, the Embedded Constraint Language (ECL) in GME.", "num_citations": "11\n", "authors": ["1522"]}
{"title": "Administraci\u00f3n de Variabilidad en una l\u00ednea de producto basado en modelo\n", "abstract": " La administraci\u00f3n de variabilidad en una l\u00ednea de producto tiene dos retos fundamentales:(1) la expresi\u00f3n de las caracter\u00edsticas comunes y variables de la l\u00ednea, y (2) la construcci\u00f3n de aplicaciones que incluyan las caracter\u00edsticas comunes, y un subconjunto de las caracter\u00edsticas variables. En este art\u00edculo presentamos una propuesta para administrar la variabilidad durante el proceso de construcci\u00f3n de SPLs usando un enfoque de construcci\u00f3n de l\u00edneas de producto basado en modelos (MDSPL). Para esto separamos conceptos relacionados con SPLs en diferentes dominios y construimos como activos de la l\u00ednea modelos de rasgos, metamodelos y tres tipos de reglas de transformaci\u00f3n para transformar modelos de un dominio origen a diferentes (variables) modelos en un dominio destino. Las reglas nos permiten generar incrementalmente las aplicaciones de acuerdo con una selecci\u00f3n de rasgos realizada para cada dominio destino. As\u00ed, logramos ampliar el alcance de las SPLs, separar los dominios de manera que se disminuya la complejidad de crear aplicaciones con caracter\u00edsticas variables, y generar aplicaciones autom\u00e1ticamente usando reglas de transformaci\u00f3n. Para ilustrar la soluci\u00f3n construimos una MD-SPL donde los productos corresponden a ejercicios pedag\u00f3gicos para la ense\u00f1anza de programaci\u00f3n de computadores.", "num_citations": "11\n", "authors": ["1522"]}
{"title": "Fundamentos de programaci\u00f3n\n", "abstract": " 1.11 Lenguajes de programaci\u00f3n 1.12 Traductores del lenguaje de programaci\u00f3n 1.13 Ciclo de vida de un software 1.14 Algoritmo", "num_citations": "10\n", "authors": ["1522"]}
{"title": "HiLeS2: model driven embedded system virtual prototype generation\n", "abstract": " Embedded system virtual prototyping allows exploration of solutions in system architecture and hardware specification, prior to real prototype construction, resulting in higher quality products, shorter time to market and cost reduction. Virtual prototypes allow simulation of the system so designers can analyze and evaluate their design decisions against system response. However, benefits in costs, shorter developing times and simulation capabilities can be affected by Virtual Prototype (VP) construction and modification, especially if done directly in Hardware Description Languages (HDL). The reasons are associated with being a manual error prone activity, the difficulty on keeping the VP in conformance to design requirements and the risk of simulations being hard to analyze. We propose a Model-Driven approach to generate automatically from a SysML high-level specification, structure and behavior, a VP in a\u00a0\u2026", "num_citations": "9\n", "authors": ["1522"]}
{"title": "From high level business rules to an implementation on an event-based platform to integrate applications\n", "abstract": " In this paper, we show how to build an implementation from a high level description of business rules through successive model transformations. The implementation of business rules can involve the integration of several heterogeneous applications. The key element of our proposal is the definition of a profile (EAI-Rules profile) whose objective is to define a vocabulary to model the concepts needed to integrate business activities and applications. The profile is used to annotate the models and, due to its well-defined semantics, we can assist transformations that lead towards a platform specific model that is ready to be executed. The specific platform is an event-based platform called Eleggua.", "num_citations": "9\n", "authors": ["1522"]}
{"title": "M\u00e9triques structurelles pour l'analyse de bases orient\u00e9es documents\n", "abstract": " La flexibilit\u00e9 dans la structuration des donn\u00e9es dans les bases orient\u00e9es documents est appr\u00e9ci\u00e9e pour permettre un d\u00e9veloppement initial rapide. Cependant, les possibilit\u00e9s de structuration des donn\u00e9es sont nombreuses et le choix de structuration adopt\u00e9 reste assez crucial par son impact potentiel sur plusieurs aspects de la qualit\u00e9 des applications. En effet, chaque structuration peut pr\u00e9senter des avantages et des inconv\u00e9nients notamment en mati\u00e8re d'em-preinte m\u00e9moire, redondance de donn\u00e9es engendr\u00e9e, co\u00fbt de navigation dans les structures et acc\u00e8s \u00e0 certaines donn\u00e9es, lisibilit\u00e9 des programmes. Dans cet article nous proposons un ensemble de m\u00e9triques structurelles pour des \"sch\u00e9mas\" de documents JSON. Ces m\u00e9triques permettent de refl\u00e9ter la complexit\u00e9 des sch\u00e9mas et des crit\u00e8res de qualit\u00e9 tels que leur lisibilit\u00e9 et maintenabilit\u00e9. La d\u00e9finition de ces m\u00e9triques s'appuie, entre autres, sur des exp\u00e9rimentations avec MongoDB, des travaux li\u00e9s \u00e0 XML et les m\u00e9triques utilis\u00e9es en G\u00e9nie logiciel pour la qualit\u00e9 du code. La d\u00e9finition des m\u00e9triques est compl\u00e9t\u00e9e par un sc\u00e9nario de validation.", "num_citations": "8\n", "authors": ["1522"]}
{"title": "Using multiple Feature Models to specify configuration options for Electrical Transformers: an Experience Report\n", "abstract": " Electrical Transformers are complex devices that exhibit an enormous variability depending on the intended power transformation, environmental conditions, standards imposed and customer particularities. Incomplete information or inconsistencies in the specifications can lead to re-processes and higher bid times. This paper presents our experience on using multiple feature models to specify custom Electrical Transformer as a Configuration Process. This process facilitates the elicitation of knowledge from multidisciplinary experts using several feature models, one per domain and per standard and defining relationships among them. This separation of domains eases the analysis and validation of the models. To support the process, we have developed some tools to separate, merge and analyze these models. The final feature models are tested configuring and comparing products from existing company catalogs\u00a0\u2026", "num_citations": "8\n", "authors": ["1522"]}
{"title": "Influence of programming style in transformation bad smells: mining of ETL repositories\n", "abstract": " Bad smells affect maintainability and performance of model-to-model transformations. There are studies that define a set of transformation bad smells, and some of them propose techniques to recognize and \u2013 according to their complexity \u2013 fix them in a (semi)automated way. In academia it is necessary to make students aware of this subject and provide them with guidelines to improve the quality of their transformations. This paper presents the most common bad smells made by master students from Universidad de los Andes, and compares them with those from publicly available repositories of Epsilon transformation language transformations, with the purpose of knowing whether programming style affects the incidence of smells. Three concrete contributions are presented: (i) two new bad smells that enrich the existing catalogs; (ii) a process that includes the automated extraction of transformation metrics and bad\u00a0\u2026", "num_citations": "7\n", "authors": ["1522"]}
{"title": "Aiming towards Modernization: Visualization to Assist Structural Understanding of Oracle Forms Applications\n", "abstract": " Oracle Forms is a tool for creating screens that interact with an Oracle database. It appeared in the eighties and its use spread to many IT sectors today. There are pressures that push software engineers to modernize Oracle Forms applications: obsolescence of technology, requirements of users, etc. For a straightforward modernization, it is necessary to comprehend the applications from a prior step. This paper reports the preliminary results of the\u201d Forms Modernization\u201d project, in particular, of the understanding step. In most cases, the understanding of Forms applications is a complex and time-consuming task due to several reasons: large size of applications, lack of design documentation, lack of software organization. This paper proposes a visualization process to alleviate these issues. The process takes static Oracle Forms code as input and produces a set of domain specific diagrams/views, that ranges from high to low abstraction levels, as output. The gist of diagrams and views is to assist engineers in a structural understanding of the Oracle Forms software. The process includes algorithms for element discovery and clustering, and is instrumented by means of a tool running on Eclipse Modeling technologies. We take advantage of four real Oracle Forms applications to illustrate the benefits of this approach. These applications have been provided by Asesoftware, which is the Colombian industrial partner of the project.", "num_citations": "7\n", "authors": ["1522"]}
{"title": "HiLeS-T: an ADL for early requirement verification of embedded systems\n", "abstract": " Verification of functional and non-functional requirements throughout the design process is a cost-effective solution when compared to a build-test validation process. By using a model based design process and by describing system behavior with a formal model, model checking becomes a viable solution to perform requirement verification at early stages of the design process. This paper presents how the HiLeS ADL can be used to express the behavior of the system with a Petri Net and how to use that representation to perform system verification. HiLeS is used as a intermediate stage of a model driven automated virtual prototype design framework, in which SysML is used for capturing requirements and system modeling.", "num_citations": "7\n", "authors": ["1522"]}
{"title": "Un enfoque para desarrollar aplicaciones web basado en l\u00edneas de producto dirigidas por modelos\n", "abstract": " La Ingenier\u00eda Web Dirigida por Modelos (MDWE) ofrece mecanismos que permiten solucionar el problema de la heterogeneidad y continua evoluci\u00f3n de las plataformas; tambi\u00e9n permite enfocar el dise\u00f1o de aplicaciones desde diferentes puntos de vista a trav\u00e9s de la separaci\u00f3n de preocupaciones. Existen diferentes aproximaciones basadas en MDWE, sin embargo, la mayor\u00eda tiene limitaciones importantes, puesto que se limitan a la representaci\u00f3n de la soluci\u00f3n sin tener en cuenta la representaci\u00f3n del problema y no proveen mecanismos o herramientas centradas en usuario que permitan expresar y configurar los puntos de variaci\u00f3n de los diferentes productos. Este art\u00edculo presenta una nueva estrategia para desarrollar aplicaciones Web que, aparte de solucionar los problemas de heterogeneidad de las plataformas, permite modelar las aplicaciones Web a partir de la definici\u00f3n del problema utilizando diferentes puntos de vista. Adicionalmente, cuenta con mecanismos y herramientas para expresar y seleccionar la configuraci\u00f3n de cada uno de los productos por derivar.", "num_citations": "7\n", "authors": ["1522"]}
{"title": "Multi-step concern refinement\n", "abstract": " A Model-Driven Software Product Line (MD-SPL) uses metamodels, models, and transformations to create a family of products using a Model Refinement Line (MRL). However, an MD-SPL must evolve and provide mechanisms to add new crosscutting concerns, such as security or logging, to the applications. Our problem is that we want to preserve and reuse the original MRL. In this paper, we present the challenges associated with this problem. We illustrate them by evaluating different model-driven approaches to add crosscutting concerns into an application using high-level aspects. Furthermore, we propose an approach to add crosscutting concerns as early aspects and to preserve the original MRL. This approach adds a new MRL that refines a high-level model of the concern. This high-level model is related with the high-level application model in the original MRL. The refinement of the application model and\u00a0\u2026", "num_citations": "7\n", "authors": ["1522"]}
{"title": "Ense\u00f1anza de la ingenier\u00eda de software por procesos instrumentados\n", "abstract": " En este art\u00edculo presentamos un curso de ingenier\u00eda de software que combina de una manera balanceada y pr\u00e1ctica: procesos, metodolog\u00eda y herramientas de apoyo al desarrollo de un producto de software. Hemos llamado nuestro enfoque \u201cproceso instrumentado\u201d para diferenciarlo de procesos como TSP\u2122 en donde se definen las fases y los entregables del desarrollo, pero no la metodolog\u00eda que ha de ser usada durante las actividades ni las herramientas de soporte. En nuestro curso, los estudiantes deben realizar un proyecto en varios ciclos y en grupos de 5 \u00f3 6 personas. Ellos son instruidos en el uso de un proceso predefinido, entrenados en el uso de las metodolog\u00edas OO y en las herramientas para apoyar tareas como el manejo de versiones, pruebas, planes, etc. Nuestra experiencia ha sido exitosa en cuanto al desarrollo del proyecto y en cuanto a que los estudiantes asimilan de tal manera los conceptos y pr\u00e1cticas aqu\u00ed vistos que los usan en cursos posteriores y en sus trabajos de grado.", "num_citations": "7\n", "authors": ["1522"]}
{"title": "Understanding the women participation decline in systems & computing engineering: Case study at the University of los Andes, Colombia\n", "abstract": " The participation of women in undergraduate program of Systems and Computing Engineering at the University of los Andes, Colombia, has been declining over the past years, and today it is only about 11%. This phenomenon has been evidenced in many universities around the world and there are several collaborative projects and networks trying to understand the causes to find mitigation actions in the future. In this paper, we present progress of the project being done in our context. We present figures for the last two decades that show the problem, the instruments we have defined to understand the causes and some preliminary results.", "num_citations": "6\n", "authors": ["1522"]}
{"title": "Issues in mapping change-based product line architectures to configuration management systems.\n", "abstract": " Most software product lines are first specified as an architecture, a high-level description of what the overall family system structure is to be like and from which individual product architectures can be generated. This structure, however, must be mapped onto implementation code stored in a Software Configuration Management system for it to be useful beyond the definitional phase of product line development. Various solutions have been developed to date, but the recent emergence of changebased approaches to product line architecture description challenges these existing solutions. In this paper, we characterize those challenges, and present an alternative solution that relies on a mapping to a change-based Software Configuration Management system. We motivate this choice, discuss why it is more appropriate, and carefully lay out its strengths and weaknesses relative to the existing state of the art.", "num_citations": "6\n", "authors": ["1522"]}
{"title": "White-box modernization of legacy applications\n", "abstract": " Software modernization consists of transforming legacy applications into modern technologies, mainly to minimize maintenance costs. This transformation often produces a new application that is a poor copy of the legacy due to the degradation of quality attributes, for example. This paper presents a white-box transformation approach that changes the application architecture and the technological stack without losing business value and quality attributes. This approach obtains a technology agnostic model from the original sources, such a model facilitates the architecture configuration before performing the actual transformation of the application into the new technology. The architecture for the new application can be configured considering aspects such as data access, quality attributes, and process. We evaluate our approach through an industrial case study, the gist of which is the transformation of Oracle\u00a0\u2026", "num_citations": "5\n", "authors": ["1522"]}
{"title": "Model-based framework for embedded system product line\n", "abstract": " The use of reconfigurable platforms for embedded system design leverages product line engineering (PLE), in which the development of products starts from a set of core assets (the platform) rather than the development of individual products from zero. Two major activities of PLE are domain engineering (i.e., platform development) and product engineering (i.e., product customization) reusing the core assets. Virtual prototyping in PLE allows rapid validation of both the platform and individual products with greater benefits in development costs, time to market and quality. However, since virtual prototypes (VP) are implemented in low-level languages, if platform development and product engineering are done at this level, productivity is negatively affected. A commonly-accepted solution for closing this productivity gap is to raise the level of abstraction in the whole design process and to automate the implementation\u00a0\u2026", "num_citations": "5\n", "authors": ["1522"]}
{"title": "Eleggua: an event infrastructure for application cooperation\n", "abstract": " Global Software Development (GSD) is a reality but still faces a lot of challenges to give solutions to problems related to software processes themselves, and problems raised by geographical dispersion. Focusing on the latter, we are interested in building a supporting software development environment to integrate processes and tools. This paper introduces Eleggua, an infrastructure for application cooperation with a central focus on low coupling and loose integration of applications. Eleggua is based on distributed events and Web Services for communication. It also uses Event Condition Action (ECA) rules to describe application cooperation models. The goal of application cooperation is to ensure consistency and integrity of overlapping domain concepts embedded in applications that interact throughout the enactment of business processes. The main restrictions on the design are imposed by the existence of heterogeneous, distributed, legacy systems which are too expensive to modify. Eleggua is being validated in the context of a GSD project1 focused on improving processes of a software house that faces the challenges of geographical dispersion.", "num_citations": "5\n", "authors": ["1522"]}
{"title": "Re-architecting a JEE on-premise web application to deploy it in the cloud\n", "abstract": " Hundreds of companies trying to move their JEE applications to the cloud face different challenges because these applications were developed without considering their deployment in cloud infrastructures. This fact typically generates that those companies have to pay large infrastructure costs in their cloud deployments. In the short-term, those companies have to decide if they should continue paying those costs, or if they may re-architect part of their applications with more efficient technologies or architectures to reduce them, and at the same time incur in the costs of the re-architecting process. Using a case study, in this paper we present and evaluate several approaches that can be used by companies that want to deploy and scale their on-premise JEE applications in the cloud. Each approach looks for increasing the application scalability by introducing changes to the application architecture generating efforts to\u00a0\u2026", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Supporting multi-level configuration with feature-solution graphs formal semantics and alloy implementation\n", "abstract": " In Software Product Lines, several approaches support configuration processes using feature models representing constraints about which features, software elements or assets can be included in a product. These approaches use a single feature models to display users which features can be included in a product and to validate if a given configuration is valid. In this paper we propose feature-solution graphs (FSGs) to detect and explain conflicts in multi-staged configuration processes. In these FSGs, configuration options are arranged into a pair of feature models with relationships between them. Then, when some options are selected in one of them, an automatic process is able to determine the set of options that can be selected in the other. Finally, if a combination of features results in that none option can be selected in the latter feature model, an automatic process determine the selected options that cause the problem. The technical report presents the approach providing a formal semantics for feature models and feature solution graphs, and provides an example and comparison.", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Deriving correspondence relationships to guide a multi-view heterogeneous composition\n", "abstract": " The use of several view models is a common practice to specify diverse concerns of a complex system. It is advantageous to use appropriate Domain-Specific Modeling Languages, at high-level of abstraction, to specify each concern. To actually produce the running application, it is necessary not only to transform the view-models into code, but also to compose them. We can establish at the high-level correspondence relationships between the concepts in the different concerns, but it is a complex task to compose the models at this level because we face a heterogeneous composition problem. Therefore, our strategy is to independently transform each view model into a common low-level language to perform a homogeneous composition. We create a mechanism to automatically derive correspondence relationships between the generated low-level models. These new correspondences contain the\u00a0\u2026", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Using transformation-aspects in model-driven software product lines\n", "abstract": " Model-Driven Software Product Lines (MD-SPL) are configured by using configuration models and Problem Space metamodels that capture product line scope. Products are derived by means of successive model transformations, starting from problem space models and based on the configuration models. Fine-variations of MD-SPLs correspond to characteristics that afect particular elements of models involved in the model transformations. In this paper, we present an approach to create MD-SPL including fine-variations. We configure products creating fine-feature configurations. Then, based on such configurations, we create MD-SPLs using principles of Aspects Oriented Development. Thus, our approach allows to derive products including fine-grained details of configuration.", "num_citations": "4\n", "authors": ["1522"]}
{"title": "An environment to help develop professional software engineering skills for undergraduate students\n", "abstract": " In this paper, we present a strategy to help students develop the necessary skills to become effective software engineering professionals. We created a software engineering group, called QualDev, composed mostly of undergraduate students. QualDev places students onreal software projects, but with some features to ease their control and evaluation. Our educational strategy is to use active teaching/learning methodologies that enable us to create scenarios with regular self-assessment. There are many challenges related to setting upand maintaining such a software development team; we relate our experience in creating and evolving the QualDev group, itsorganization, projects, methodologies, and processes.", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Dealing with Constraints during a Feature Configuration Process in a Model-Driven Software Product Line\n", "abstract": " We present our ongoing work on an approach to create Model-Driven Software Product Lines by means of successive model refinement, guided by configuration of features. Each refinement uses model-to-model transformation until arriving at the executable code with technological platform details included. During this process, users select features at each stage taking into account their preferences and requirements. The selection of features can be performed for each element of the model. Thus, the selection is constrained by many facts, for example, a mandatory selection element-feature because some structural model relationships that has to be preserved. To deal with model transformations while satisfying the constraints, we introduce the concept of constraint-model to restraint the possible feature configurations a user can specify. Then, we propose the construction of transformations by composing several rules that facilitate, from a single source, the generation of different targets according to a given feature configuration.", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Un caso pr\u00e1ctico en MDA para construir aplicaciones JEE5 y. net\n", "abstract": " En este art\u00edculo presentamos un caso pr\u00e1ctico de utilizaci\u00f3n del enfoque Model Driven Architecture (MDA) para construir aplicaciones JEE5 y .NET. El contexto de nuestro trabajo es la construcci\u00f3n de aplicaciones empresariales distribuidas, restringidas a una simplificaci\u00f3n de la arquitectura MIS (Management Information Systems).", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Looking for a new approach to teach/learn a first computerprogramming course\n", "abstract": " In this paper, we present an approach for teaching/learning a first computer-programming course. The approach aims to deal with some known student difficulties: 1) motivational problems, 2) lack of balance in the aspects related to building a program to solve a problem, and 3) methodological problems in teaching programming. Our proposal intends to contribute to overcome the difficulties by means of: 1) an active learning approach based on problems, 2) a balance among several thematic axes related to programming, and 3) the construction of a teaching/learning pedagogical model to help instructors teach programming in a systematic way. We present the elements of our proposal and the results obtained in the context of a pilot course.", "num_citations": "4\n", "authors": ["1522"]}
{"title": "Detecting Architectural Issues During the Continuous Integration Pipeline\n", "abstract": " The use of a software reference architecture limits possible deviations and errors in the implementation of software projects, as the code must follow predefined rules that developers must respect to guarantee quality. However, when introducing new code to projects these rules can be violated. As a result, architectural erosion, bad smells, or even bugs that can be difficult to find are introduced to the projects. This paper proposes an approach for reviewing compliance to predefined rules that map architectural decisions to code. During the continuous integration process, the automatic analysis raises an issue for each rule violation. Developers can analyze and correct issues, and trace/visualize improvements, or lack thereof, through time. We present a validation experiment carried out in the context of a Software Development course, and we show how the approach helps developers to write better code.", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Constraint programming heuristics for configuring optimal products in multi product lines\n", "abstract": " Nowadays, complex application domains require configuring multi-product lines where product features and constraints among them are specified in several variability models. These variability models are enriched with inter-model constraints representing the existing relations among domain concerns, and with non-functional properties modeled as attributes attached to product features. Multiple techniques use constraint programming to automate the cumbersome task of manually configuring a suitable product. Currently, there are some proposals to improve the performance of constraint solvers when configuring single-model product lines, however configuration scenarios with multiple interrelated and attributed models are not yet targeted. This paper proposes and evaluates three search heuristics used to configure optimal products regarding multi-objective criteria. Results are compared against the default\u00a0\u2026", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Metric-centered and technology-independent architectural views for software comprehension\n", "abstract": " The maintenance of applications is a crucial activity in the software industry. The high cost of this process is due to the effort invested on software comprehension since, in most of cases, there is no up-to-date abstraction or documentation to ease this task but the source code. The goal of many commercial and academic tools is to build software architectural views from the code. The main disadvantages of such tools are: i) they are dependent on the language/technology on top of which the application is built; and ii) they offer pre-defined views that are too difficult to adapt to meet particular software comprehension needs. In this paper, we present a Technology-independent approach which is flexible enough to allow developers to define metric-centered architectural views by using annotations. These views display in a single canvas architectural elements whose look and feel maps software metrics. Our work results from joint projects with industry partners with software modernization needs in different technologies: Oracle Forms, Java EE, and Ruby on Rails. We present how our proposal was applied in these projects and compare the results with those of the previously followed process.", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Software architecture for product lines\n", "abstract": " This chapter describes the technical means and methods for defining a reference architecture for a software product line. It presents the methods for operating this architecture through, for example, techniques emerging from model and software component engineering, or aspect\u2010oriented programming. Then, the chapter illustrates these concepts and techniques using a case study. Product line engineering aims at rationalizing the development of a set of similar software applications by concentrating on the reuse of component kernel. The ultimate aim of this form of engineering is to improve productivity, i.e. to reduce the cost of development and time taken to put on the market and to increase quality. Variability management and the reference architecture are elements that are specific to the engineering of a product line. Particular attention must be given to them by any business that hopes to implement a software\u00a0\u2026", "num_citations": "3\n", "authors": ["1522"]}
{"title": "A simulated annealing algorithm for the vehicle routing and scheduling problem\n", "abstract": " This paper studies the problem of determining the schedule of n trucks that visit m warehouses within the cities aiming to minimize the vehicular congestion and to improve the productivity of both the truck and warehouse companies. This problem is modeled as a Flexible Open Shop Scheduling Problem (FOSSP) where trucks represent jobs and warehouses represent workstations with identical parallel machines. Each machine corresponds to a loading/unloading dock. The travel times between warehouses and from/to the depot are also considered. The objective is minimizing total flow time. The problem is formulated as a Mixed Integer Program. Due to the NP-Hard nature of the FOSSP, a Simulated Annealing algorithm is proposed and tested. The results are compared against several lower bounds. The results show very good solutions in short computational times for the studied instances.", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Modularizing monitoring rules in business processes models\n", "abstract": " Business process management systems contain monitoring, measurement and control (MMC) specifications to enable the identification of problems and solutions to improve business processes. Business processes facilitate the integration of human and technological resources in an organization, according to a set of activities that fulfil a policy goal [1].               Currently, several business-process monitoring, measurement and control solutions are available [2]. However, MMC specifications typically are implicitly encoded in the low-level implementation of the workflow system. This results in tangled and scattered MMC knowledge in the underlying process code. It is clear that this decreases the maintainability and reusability of the MMC specifications since they are not specified in a modular fashion. Furthermore, specific knowledge about the overall system implementation is required if the MMC\u00a0\u2026", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Mejoramiento del proceso de pruebas en un contexto de desarrollo de software globalizado\n", "abstract": " Los grupos de desarrollo de software en un contexto globalizado enfrentan grandes retos. Estos est\u00e1n relacionados con problemas de comunicaci\u00f3n, sincronizaci\u00f3n del trabajo, administraci\u00f3n del proyecto, horarios, etc. Para aliviar parte de los problemas es necesario que las personas involucradas tengan claros los procesos de software que utilizan para llevar a cabo sus tareas y que cuenten con una infraestructura tecnol\u00f3gica que apoye estos procesos y facilite la coordinaci\u00f3n. En este art\u00edculo presentamos una propuesta para el mejoramiento del proceso de pruebas y correcci\u00f3n de defectos en un ambiente de desarrollo de software globalizado. La propuesta consta de la definici\u00f3n del proceso y de la infraestructura que dar\u00e1 soporte a la ejecuci\u00f3n en el contexto de dispersi\u00f3n geogr\u00e1fica. La infraestructura est\u00e1 basada en eventos distribuidos donde la coordinaci\u00f3n entre aplicaciones se logra por medio de reglas Evento-Condici\u00f3n-Acci\u00f3n1.", "num_citations": "3\n", "authors": ["1522"]}
{"title": "The challenge of teaching a software engineering first course\n", "abstract": " We present an approach to teach a first course on software engineering. The course focuses on the development of a medium size software project by a team of 5-6 members. To develop the project, students use a process whose central features are based primarily on Humphrey\u2019s Team Software Process. TSP has several components to build active/collaborative learning: role definition, positive interdependence, reflection on the doing, etc. However, there are some barriers to fully achieve the course\u2019s instructional objectives. These barriers are a combination of the complexity of software development and the student background; they are manifested as: 1) the lack of motivation 2) teamwork reservations and 3) the lack of commitment to quality. In this paper we present a proposal to help students overcome these barriers. Our contribution is sustained on an active/collaborative learning approach based on three\u00a0\u2026", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Objets historiques et annotations pour les environnements logiciels\n", "abstract": " Dans un environnement guide par les procedes de fabrication de logiciel (EGPFL), la gestion de l'information est un probleme complexe qui doit concilier deux besoins : gerer le produit logiciel et gerer les procedes de fabrication. Outre la grande quantite d'entites diverses et fortement interdependantes, la gestion du produit doit prendre en compte l'aspect evolutif et les facteurs de variation du logiciel, ainsi que la nature cooperative des activites de fabrication des logiciels. La gestion des procedes recouvre la modelisation, l'execution, l'evaluation et la supervision des procedes. Diverses informations doivent alors etre prises en compte : la trace d'execution des procedes, les evenements survenus dans l'environnement et les mesures de qualite. Nous proposons les objets historiques annotes pour gerer l'information d'un EGPFL. L'objet historique constitue la notion de base d'un modele a objets historique permettant de representer a la fois les entites logicielles et leur evolution. La notion d'annotation vient, quant a elle, enrichir ce modele pour permettre d'introduire des informations qui denotent des faits (notes, mesures, observations, etc) pouvant etre ponctuellement associes aux entites de l'EGPFL. Un langage de requetes est defini afin d'acceder aux differentes informations. Grace a ce langage, l'EGPFL dispose d'un service puissant pour rassembler, a partir de la base d'objets, les diverses informations necessaires a l'evaluation et au controle des procedes de fabrication. Nous proposons egalement d'exploiter les possibilites offertes par notre modele pour definir des evenements et, eventuellement, en conserver un historique. Les\u00a0\u2026", "num_citations": "3\n", "authors": ["1522"]}
{"title": "Implementing operations to combine feature models: the conditional intersection case\n", "abstract": " In order to reduce the complexity of modeling product lines, many authors propose modeling product concerns separately by using multiple feature models. These proposals use well-known operations such as merge, union and slice to compose the models for analysis and engineering. Such operations produce new models that represent sets of products that comply with the semantics of the operations. We use different feature models, which were independently created by various experts, to represent: (1) domain concerns and (2) standards and regulations. When experts want to analyze the interactions among the models, they need to work collaboratively and compose their own models. This paper (1) introduces the Conditional Intersection Merge - an operation to combine a feature model for a domain with a feature model for a standard, in which the resulting model includes an optional feature that represents the\u00a0\u2026", "num_citations": "2\n", "authors": ["1522"]}
{"title": "Managing trade-offs among architectural tactics using feature models and feature-solution graphs\n", "abstract": " In Software Architecture, several approaches focus first on selecting architectural tactics to address quality attributes and later use the corresponding design alternatives to create application architectures. Regrettably, sometimes the alternatives used to improve some quality attributes inhibit or reduce the achievement of others. These conflicts, known as trade-off points, lead to trade-off decisions to solve them. Usually, detection of trade-off points and guidance for trade-off decisions rely on the expertise of software architects. The architect has to (1) identify and analyze the conflict on design alternatives, (2) determine which quality attributes and tactics motivated the selection of conflicting alternatives, and (3) decide about which set of non-conflicting tactics to use. This paper presents an approach based on feature models to help manage trade-offs. It is based on the specification of relationships between architectural\u00a0\u2026", "num_citations": "2\n", "authors": ["1522"]}
{"title": "Architectural tactics support in cloud computing providers: the jelastic case\n", "abstract": " When developing and deploying applications in the cloud, architects face the challenge of conciliating architectural decisions with the options and restrictions imposed by the chosen cloud provider. An architectural decision can be seen as a two-step process: selecting architectural tactics to promote quality attributes and choosing design alternatives to implement those tactics. Available design alternatives are limited by the offer of the cloud provider. When configuring the cloud platform and its services as directed by the chosen tactics, the architect must be mindful of conflicts among the available alternatives. These trade-offs amongst the desired quality attributes can be difficult to detect, understand and ultimately solve. In this paper, we consider the case of Jelastic, a particular cloud platform provider, to illustrate: 1) the modeling of architectural tactics and their corresponding design alternatives using cloud\u00a0\u2026", "num_citations": "2\n", "authors": ["1522"]}
{"title": "Supporting Multi-level Configuration with Feature-Solution Graphs--Formal Semantics and Alloy Implementation\n", "abstract": " In Software Product Lines, several approaches support configuration processes using feature models representing constraints about which features, software elements or assets can be included in a product.", "num_citations": "2\n", "authors": ["1522"]}
{"title": "Effective detection of model changes\n", "abstract": " Model-driven software development (MDSD) is promising alternative in software engineering that proposes the use of models, not only as documentation artifacts, but also as first-class entities. Over the past few years, this approach has gained importance due to its proven benefits in terms of reusability and flexibility. However, the well-known problem of software evolution is also relevant in MDSD. When a model evolves, several dependent artifacts may be affected and migration would be necessary. In this paper, we present an approach that aims at effectively detecting changes in models. This approach corresponds to a first step towards the implementation of migration strategies in the context of MDSD. We validate the proposal with the classical example of evolution of model classes from UML 1.4 to UML 2.0.", "num_citations": "2\n", "authors": ["1522"]}
{"title": "Automating the implementation of analysis concerns in workflow applications\n", "abstract": " In workflow management systems, analysis concerns related to monitoring, measurement, and control aim at identifying potential improvements of workflow applications. However, the specification of analysis concerns is done using a specific workflow language and engine, producing entangled code which is detrimental to their maintainability. The purpose of this paper is twofold. First, it presents briefly a domain-specific language to specify analysis concerns, independently of any workflow technology and in a modularized way. Second, it shows a strategy to assist developers to enhance a given workflow technology to support the automated implementation of analysis concerns into its workflow applications. Thus, given a workflow application and its analysis concerns, they are automatically integrated producing an enhanced executable workflow application.", "num_citations": "2\n", "authors": ["1522"]}
{"title": "A strategy for synchronizing and updating models after source code changes in Model-Driven Development\n", "abstract": " In this paper, we propose a model-based synchronization strategy to facilitate the updating of models according to source code changes into a model-driven approach. In the context of model-driven development, the source code generation is not complete; therefore, developers have to modify the generated source code to achieve entirely the system requirements. This evolution process causes a loss of synchronization between software models and code. Due to the lack of tools to support the evolution changes, the synchronization process is carried out manually. Our work focuses primarily on maintaining the software models and code representation of a system synchronized, facilitating the automatic propagation of changes made on the source code to the models from which it was generated. Our proposal is based on different model-driven approaches, such as AST model discovery, model traceability techniques, model-to-model transformations and model matching strategies.", "num_citations": "2\n", "authors": ["1522"]}
{"title": "El Proyecto Cupi2\n", "abstract": " \u25cf 2003-2004: Levantamiento de informaci\u00f3n\u25cf 2004-2: Diagn\u00f3stico\u25cf 2004-2: Marco conceptual\u25cf 2004-2: Dise\u00f1o APO1\u25cf 2005-1: Piloto APO1\u25cf 2005-2: 2do piloto APO1, piloto APO2\u25cf 2006-1: Masificaci\u00f3n APO1, 2do piloto APO2, piloto APO1\u25cf 2006-2: Estable APO1, masificaci\u00f3n APO2, 2do piloto DATOS\u25cf 2007-1: Cursos estables+ piloto ISOFT", "num_citations": "2\n", "authors": ["1522"]}
{"title": "Analysis and evaluation of document-oriented structures\n", "abstract": " Document-oriented bases allow high flexibility in data representation which facilitates a rapid development of applications and enables many possibilities for data structuring. Unfortunately, in many cases, due to this flexibility and the absence of data modelling, the choice of a data representation is neglected by developers leading to many issues on several aspects of the document base and application quality; e.g., memory print, data redundancy, readability and maintainability. We aim at facilitating the study of data structuring alternatives and providing objective metrics to better reveal the advantages and disadvantages of a structure with respect to user needs. The main contributions of our approach are twofold. First of all, the semi-automatic generation of many suitable alternatives for data structuring given an initial UML model. Second, the automatic computation of structural metrics, allowing a comparison of the\u00a0\u2026", "num_citations": "1\n", "authors": ["1522"]}
{"title": "Automatic Schema Generation for Document-Oriented Systems\n", "abstract": " Popular document-oriented systems store JSON-like data (e.g. MongoDB). Such data formats combine the flexibility of semi-structured models and traditional data structures like records and arrays. This allows numerous structuring possibilities even for simple data. The data structure choice is important as it impacts many aspects such as memory footprint, data access performances and programming complexity. Our work aims at helping users in selecting data structuring from a set of automatically generated alternatives. These alternatives can be analyzed considering complexity metrics, query requirements and best practices using such \u201cschemaless\u201d databases. Our approach for \u201cschema\u201d generation has been inspired from Software Product Lines strategies based on feature models. From a UML class diagram that represents user\u2019s data, we generate automatically a feature model that implicitly contains the\u00a0\u2026", "num_citations": "1\n", "authors": ["1522"]}
{"title": "Fiesta toolkit: Model-driven software product lines in practice\n", "abstract": " Model-Driven Software Product Lines (MD-SPLs) are those product lines whose members are created by using models and model transformations as first-class artifacts. In this paper we present the Fiesta toolkit, a set of tools to assist product line architects and products designers when creating MD-SPLs. The main characteristic of our toolkit is that it facilitates the creation of fine-grained configurations of products, i.e. configurations at the level of each element in models that will be transformed into product line members. For that, the toolkit includes a set of tools for the creation of MD-SPL projects, feature models, constraint models, binding models, OCL-type expressions to validate binding models against constraint models, and decision models.", "num_citations": "1\n", "authors": ["1522"]}
{"title": "G\u00e9n\u00e9ration automatique d'alternatives de structuration de donn\u00e9es pour syst\u00e8mes orient\u00e9s document\n", "abstract": " Les possibilit\u00e9s de structuration des donn\u00e9es dans les syst\u00e8mes orient\u00e9s document  sont  tr\u00e8s nombreuses m\u00eame lorsque  les donn\u00e9es \u00e0 traiter sont simples. Le choix de la structuration est n\u00e9anmoins tr\u00e8s important car il conditionne des aspects cruciaux de la base et des applications. Nos travaux visent \u00e0 aider l'utilisateur \u00e0 comprendre, \u00e9valuer et  choisir, la structuration des donn\u00e9es d'une base orient\u00e9e document selon les besoins. Dans cet article, nous proposons de g\u00e9n\u00e9rer automatiquement des alternatives de structuration orient\u00e9es document, \u00e0 partir d'un sch\u00e9ma UML, afin de pouvoir les comparer. Nous adoptons une approche originale de g\u00e9n\u00e9ration inspir\u00e9e des lignes de produits logiciels. Dans notre cas, le produit est une structure de donn\u00e9es orient\u00e9e document bas\u00e9e sur JSON. Nous utilisons des mod\u00e8les de caract\u00e9ristiques pour repr\u00e9senter les variantes et les points communs entre les produits tout en contr\u00f4lant l\u2019explosion du nombre de combinaisons. Cet article pr\u00e9sente l\u2019approche, les algorithmes de g\u00e9n\u00e9ration et le prototype qui permet aux utilisateurs d'appr\u00e9cier diverses alternatives de structuration pour une base de documents.", "num_citations": "1\n", "authors": ["1522"]}
{"title": "Dealing with scalability in an event-based infrastructure to support global software development\n", "abstract": " Scalability is a challenging issue in the context of an infrastructure based on asynchronous events to support integration and cooperation between distributed applications. Furthermore, if an infrastructure of this kind supports the execution of processes in a global software development environment, we have to deal with an enormous amount of Internet-scale events passing through the infrastructure diminishing performance. In this paper, we present an approach to treat this problem based on a network of interconnected nodes. At any given moment, each node executes a process while maintaining the scope of the local events and propagating only the events needed to synchronize broader processes. To support cooperation between applications, we use an ECA rules mechanism, which we have extended to enable the infrastructure to identify a process executing in a node, as an application that can\u00a0\u2026", "num_citations": "1\n", "authors": ["1522"]}
{"title": "xEAI-Rules: executable models to simulate enterprise application cooperation\n", "abstract": " We propose an approach to create application-cooperation executable UML models by performing transformations on high-level business rule models. Business rules are defined, using activity diagrams, then, they are transformed to an annotated PIM to, finally, be transformed into an executable UML (xUML) model. The xUML model along side with a set of test cases enables us to validate that applications, whose cooperation is described in the rules, maintain consistency and integrity. Because this validation is based on a non-distributed, platform-independent simulation the cost and effort of its development and testing is reduced; early detection of flaws can help avoid expensive modifications on a concrete platform specific implementation.", "num_citations": "1\n", "authors": ["1522"]}
{"title": "QualDev Process: Procesos adaptables de desarrollo de software para proyectos \u00e1giles\n", "abstract": " Los Procesos que deben ser utilizados durante el desarrollo de software dependen altamente de las caracter\u00edsticas del proyecto. Entre estas caracter\u00edsticas se encuentran las del grupo de desarrollo y las del contexto dentro del cual se trabajar\u00e1 (los clientes, la tecnolog\u00eda, las restricciones, etc.). Denominamos proyecto \u00e1gil aquel en el que sus caracter\u00edsticas de alto riesgo (alta rotaci\u00f3n de personal, tecnolog\u00eda nueva, dispersi\u00f3n geogr\u00e1fica, requerimientos cambiantes, etc.) dificulta el prescribir las pr\u00e1cticas de software que deben ser seguidas. En este art\u00edculo presentamos una propuesta de procesos de software para este tipo de proyectos denominada QualDev Process. Los procesos sugeridos son adecuados en t\u00e9rminos de mejorar la calidad del producto, la productividad del equipo y la facilidad para realizar mantenimiento a los productos de software construidos. QualDev Process est\u00e1 basado en la idea de adaptabilidad de los procesos y de mejoramiento continuo. El resultado final es una mezcla de las propuestas de los procesos livianos (lightweight process)[7] y de procesos m\u00e1s definidos como TSP [5] o CMMI [1]. La propuesta, adem\u00e1s de incluir el qu\u00e9 hacer incluye gu\u00edas metodol\u00f3gicas de c\u00f3mo llevar a cabo las pr\u00e1cticas. Este proceso se ha estado aplicando en los \u00faltimos dos a\u00f1os en algunos desarrollos de proyectos \u00e1giles lo que nos ha permitido validar las pr\u00e1cticas.", "num_citations": "1\n", "authors": ["1522"]}
{"title": "\u00bf A\u00fan en crisis?\n", "abstract": " En ese momento fue identificado un gran n\u00famero de problemas derivados de la utilizaci\u00f3n de m\u00e9todos Ad Hoc (el ciclo programar-corregir). Hablar entonces de Ingenier\u00eda de Software, era expresar el deseo de contar con pr\u00e1cticas m\u00e1s disciplinadas que remplazaran la manera artesanal como se constru\u00edan las aplicaciones.", "num_citations": "1\n", "authors": ["1522"]}