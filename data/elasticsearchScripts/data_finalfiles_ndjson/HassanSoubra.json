{"title": "Functional size estimation technologies for software maintenance\n", "abstract": " Estimating functional software size is the key input for building software models. Unlike direct effort estimates, software size estimation gives a measure of the software product itself and can be used to build objective estimation models for predicting project effort and duration, estimating defects for quality and service cost predictions, and obtaining software development productivity ratios. Although maintenance dominates software projects, the underlying technologies for estimation have been rather poorly described to date. Here, the authors examine estimation technologies based on the COSMIC (Common Software Measurement International Consortium) method as it's applied to maintenance projects.", "num_citations": "14\n", "authors": ["2010"]}
{"title": "Functional size measurement of electronic control units software designed following the autosar standard: A measurement guideline based on the cosmic iso 19761 standard\n", "abstract": " In their early age, E/E (electrical and electronic) systems were OEM (Original Equipment Manufacturers) specific. Adapting existing components to different environments was both time and effort consuming. AUTOSAR (AUTomotive Open System Architecture) is both a consortium founded by the major automotive companies and an architecture standard that allows collaboration on basic E/E functions while providing a platform to develop new innovative ones. One of AUTOSAR main objectives is to standardize a large number of E/E software modules in order to benefit from the reuse of these modules, it also aims to prepare for the increase in functional scope of E/E systems. Functional size measurement (FSM) has become an important task in software development projects for real-time embedded systems. Functional size can be used to estimate development effort, to manage project scope changes, to measure\u00a0\u2026", "num_citations": "8\n", "authors": ["2010"]}
{"title": "Manual and Automated Functional Size Measurement of an Aerospace Realtime Embedded System: A Case Study based on SCADE and on COSMIC ISO 19761\n", "abstract": " Software Functional size allows the application of engineering principles to software development, which provides an objective and quantitative base for management decisions. Automating Functional size measurement (FSM) is important for organizations needing to measure a large number of projects in a short time. In this paper, we present related work on FSM in the context of real-time embedded systems (RTES) with particular emphasis on works covering FSM automation and providing case studies. Next, we present a COSMIC based FSM procedure, for RTES designed with SCADE. Finally, we manually apply the FSM procedure to an aerospace system; and we compare the results obtained with those produced automatically by a prototype tool developed at ESTACA. Our experimentation concluded that no difference is detected between the automated and the manual measurements by comparing the results at the detailed level; however, applying FSM procedures manually is tedious, time-consuming and error-prone. The study, on the one hand, addresses the lack of fully detailed illustrations of FSM applied both automatically and manually, on RTES software via a full case study which tackles all the intermediate measurement steps. On the other hand, it demonstrates the time efficiency of FSM automation.", "num_citations": "4\n", "authors": ["2010"]}
{"title": "Adapting security policy at runtime for connected autonomous vehicles\n", "abstract": " Models@run.time has appeared as a new paradigm for continuously monitoring software systems execution to enable self-adaptation. This adaptation happens whenever a change, a failure or a bug is introduced within the execution environment. It is done by a causal bidirectional connection between design and execution artifacts supported by feedback-loop information. We developed an approach to integrate a secure lightweight dynamic adaptation of access control policies when new security requirements are introduced at runtime. The proposed runtime adaptation is supported by a fast checking of design models at runtime against security constraints. A vehicle-2-x security case study is used to demonstrate the benefits of our approach.", "num_citations": "3\n", "authors": ["2010"]}
{"title": "Fast functional size measurement with synchronous languages: An approach based on LUSTRE and on the COSMIC ISO 19761 standard\n", "abstract": " Functional size measurement is considered a complicated, tedious and time-consuming task when performed manually. Automating FSM is one solution to help in applying it and using it. Another solution is designing simple and easy-to-apply FSM procedures. The Synchronous Languages (SL) are built on solid mathematical foundations and used for correctly designing safety-critical reactive real-time systems. They are known for their strong semantic soundness, allowing the design of explicit safely-constructed formal models where the interpretation of a model is unique and reader-independent. These properties are very useful in the context of FSM because they help create simple FSM procedures and hence speed up the measurement process. In this paper, we propose a fast functional size measurement (FSM) procedure, based on the COSMIC method-ISO 19761, for safety-critical real-time systems described\u00a0\u2026", "num_citations": "3\n", "authors": ["2010"]}
{"title": "Automatisation de la mesure fonctionnelle COSMIC-ISO 19761 des logiciels temps-r\u00e9el embarqu\u00e9s, en se basant sur leurs sp\u00e9cifications fonctionnelles\n", "abstract": " De plus en plus de prestations v\u00e9hicule sont r\u00e9alis\u00e9es par du logiciel embarqu\u00e9, notamment celles li\u00e9es au v\u00e9hicule \u00e9lectrique, au multim\u00e9dia et aux aides \u00e0 la conduite. Piloter les co\u00fbts de d\u00e9veloppement de ces logiciels embarqu\u00e9s en augmentation est un enjeu majeur pour garantir la comp\u00e9titivit\u00e9 de Renault. L\u2019objectif du projet industriel dans lequel ce projet de recherche s\u2019inscrit est de piloter ces co\u00fbts efficacement.  Le premier probl\u00e8me industriel \u00e0 r\u00e9soudre est l'estimation des co\u00fbts de d\u00e9veloppement des futurs logiciels en ayant seulement leurs sp\u00e9cifications fonctionnelles mod\u00e9lis\u00e9es avec un langage/outil de mod\u00e9lisation donn\u00e9. Renault SAS, avec son propre processus d\u2019estimation a priori, entre autre, aura des benchmarks pour pouvoir n\u00e9gocier et choisir les futurs fournisseurs auxquels il va confier le d\u00e9veloppement de ces produits logiciels. Suite \u00e0 un appel d\u2019offre et aux r\u00e9ponses des diff\u00e9rents fournisseurs, le constructeur pourra chercher et demander des explications on se basant sur des mesures et des benchmarks concrets.  Un processus d\u2019estimation bas\u00e9 sur l\u2019utilisation de mod\u00e8les de simulation de productivit\u00e9 de d\u00e9veloppement logiciel permet ce pilotage des co\u00fbts. La cr\u00e9ation d\u2019un mod\u00e8le de productivit\u00e9 repose d\u2019une part sur la mesure d\u2019un attribut du logiciel, sa taille fonctionnelle, et d\u2019autre part sur les donn\u00e9es d\u2019effort transmises par le fournisseur.  Le but principal de ce projet de recherche est l\u2019automatisation de la mesure de la taille fonctionnelle, selon la m\u00e9thode COSMIC ISO 19761, des logiciels des syst\u00e8mes r\u00e9actifs, temps-r\u00e9el et embarqu\u00e9s en utilisant leurs sp\u00e9cifications fonctionnelles. Le but est donc d\u2019identifier\u00a0\u2026", "num_citations": "1\n", "authors": ["2010"]}
{"title": "Design of a functional size procedure for real-time embedded software requirements expressed using the simulink model\n", "abstract": " CiNii \u8ad6\u6587 - Design of a functional size procedure for real-time embedded software requirements expressed using the simulink model CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831 \u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f \u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005 \u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 Design of a functional size procedure for real-time embedded software requirements expressed using the simulink model SOUBRA H. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 SOUBRA H. \u53ce\u9332\u520a\u884c\u7269 Int'l Workshop on Software Measurement (IWSM), Nov. 2011 Int'l Workshop on Software Measurement (IWSM), Nov. 2011, 2011 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 CompSize : A Model-Based and Automated Approach to Size Estimation of Embedded Software Components LIND Kenneth , HELDAL Rogardt IEICE \u2026", "num_citations": "1\n", "authors": ["2010"]}