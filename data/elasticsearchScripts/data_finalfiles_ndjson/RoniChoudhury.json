{"title": "Abstract visualization of runtime memory behavior\n", "abstract": " We present a system for visualizing memory reference traces, the records of the memory transactions performed by a program at runtime. The visualization consists of a structured layout representing the levels of a cache and a set of data glyphs representing the pieces of data in memory being operated on during application runtime. The data glyphs move in response to events generated by a cache simulator, indicating their changing residency in the various levels of the memory hierarchy. Within the levels, the glyphs arrange themselves into higher-order shapes representing the structure of the cache levels, including the composition of their associative cache sets and eviction ordering. We make careful use of different visual channels, including structure, motion, color, and size, to convey salient events as they occur. Our abstract visualization provides a high-level, global view of memory behavior, while giving\u00a0\u2026", "num_citations": "29\n", "authors": ["952"]}
{"title": "Interactive visualization for memory reference traces\n", "abstract": " We present the Memory Trace Visualizer (MTV), a tool that provides interactive visualization and analysis of the sequence of memory operations performed by a program as it runs. As improvements in processor performance continue to outpace improvements in memory performance, tools to understand memory access patterns are increasingly important for optimizing data intensive programs such as those found in scientific computing. Using visual representations of abstract data structures, a simulated cache, and animating memory operations, MTV can expose memory performance bottlenecks and guide programmers toward memory system optimization opportunities. Visualization of detailed memory operations provides a powerful and intuitive way to expose patterns and discover bottlenecks, and is an important addition to existing statistical performance measurements.", "num_citations": "24\n", "authors": ["952"]}
{"title": "Topological analysis and visualization of cyclical behavior in memory reference traces\n", "abstract": " We demonstrate the application of topological analysis techniques to the rather unexpected domain of software visualization. We collect a memory reference trace from a running program, recasting the linear flow of trace records as a high-dimensional point cloud in a metric space. We use topological persistence to automatically detect significant circular structures in the point cloud, which represent recurrent or cyclical runtime program behaviors. We visualize such recurrences using radial plots to display their time evolution, offering multi-scale visual insights, and detecting potential candidates for memory performance optimization. We then present several case studies to demonstrate some key insights obtained using our techniques.", "num_citations": "20\n", "authors": ["952"]}
{"title": "Ray tracing NPR-style feature lines\n", "abstract": " We present an algorithm for rendering high-quality line primitives of controllable on-screen width within a ray tracing framework, which can render simple NPR-style feature lines, including silhouette edges, crease lines, and primitive intersection lines. The algorithm is based on a variant of cone tracing, which measures distances in screen space and is used to detect and render feature lines. This technique opens ray tracing up to previously difficult or impossible styles of rendering, such as mesh visualization, as well as a variety of NPR techniques, such as apparent ridges.", "num_citations": "15\n", "authors": ["952"]}
{"title": "Visualization of software memory usage\n", "abstract": " A system, computer-readable medium, and method of visualizing memory utilization by a computing device are provided. In the method, a user interface window is presented in a display. The user interface window includes a first indicator representing a first datum stored in a first memory and a second indicator representing a second datum stored in a second memory. A first access speed for accessing the first memory is faster than a second access speed for accessing the second memory. A determination is made that the second datum is not stored in the first memory, but is ready for access by the processor from the first memory. In response, an update to the user interface window is presented in the display including a line connecting a first location of the first indicator with a second location of the second indicator.", "num_citations": "13\n", "authors": ["952"]}
{"title": "Visualizing program memory behavior using memory reference traces\n", "abstract": " Computer programs have complex interactions with their underlying hardware, exhibiting complex behaviors as a result. It is critical to understand these programs, as they serve an important role: researchers use them to express new ideas in computer science, while many others derive production value from them. In both cases, program understanding leads to mastery over these functions, adding value to human endeavors. Memory behavior is one of the hallmarks of general program behavior: it represents the critical function of retrieving data for the program to work on; it often reflects the overall actions taken by the program, providing a signature of program behavior; and it is often an important performance bottleneck, as the the memory subsystem is typically much slower than the processor. These reasons justify an investigation into the memory behavior of programs.", "num_citations": "10\n", "authors": ["952"]}
{"title": "Enhanced understanding of particle simulations through deformation-based visualization\n", "abstract": " We present a physically based method for visualizing deformation in particle simulations, such as those describing structural mechanics simulations. The method uses the deformation gradient tensor to transform carefully chosen glyphs representing each particle. The visualization approximates how simulated objects responding to applied forces might look in reality, allowing for a better understanding of material deformation, an important indicator of, for example, material failure. It can also help highlight possible errors and numerical deficiencies in the simulation itself, suggesting how simulations might be changed to yield more accurate results.", "num_citations": "7\n", "authors": ["952"]}
{"title": "Viime: Visualization and Integration of Metabolomics Experiments\n", "abstract": " Metabolomics involves the comprehensive measurement of metabolites from a biological system. The resulting metabolite profiles are influenced by genetics, lifestyle, biological stresses, disease, diet and the environment and therefore provides a more holistic biological readout of the pathological condition of the organism (Beger et al., 2016; Wishart, 2016). The challenge for metabolomics is that no single analytical platform can provide a truly comprehensive coverage of the metabolome. The most commonly used platforms are based on mass-spectrometry (MS) and nuclear magnetic resonance (NMR). Investigators are increasingly using both methods to increase the metabolite coverage. The challenge for this type of multi-platform approach is that the data structure may be very different in these two platforms. For example, NMR data may be reported as a list of spectral features, eg, bins or peaks with arbitrary\u00a0\u2026", "num_citations": "3\n", "authors": ["952"]}
{"title": "Visualizing Global Correlation in Large-Scale Molecular Biological Data\n", "abstract": " Detection of novel patterns of correlation in large-scale molecular biological data can hint at the existence of as yet unknown cellular regulatory mechanisms. For example, correlations were observed among the DNA binding of cell cycle transcription factors [5] and the mRNA expression levels of cell cycle-regulated genes [6]. These correlations correspond to a known causal coordination among these processes. Recent experimental results [4] verify a computationally predicted mechanism of regulation [3] correlating genome-wide binding of replication initiation proteins [7] with mRNA expression during the cell cycle. This has demonstrated for the first time that mathematical modeling of DNA microarray data can be used, beyond classification of genes and cellular samples, to correctly predict previously unknown global modes of regulation [2].In this work, we propose a visualization approach that facilitates exploration and identification of patterns of correlation in biological data. Our method provides a global view of temporal relationships between biological variables and local views of underlying data. This approach empowers researchers to discover global patterns and possible regulatory mechanisms while supporting visual verification of data quality and maintaining confidence in the visualization.", "num_citations": "2\n", "authors": ["952"]}
{"title": "MaterialNet: A web-based graph explorer for materials science data\n", "abstract": " Materials science research deals primarily with understanding the relationship between the structure and properties of materials. With recent advances in computational power and automation of simulation techniques, material structure and property databases have emerged (Curtarolo et al., 2012; Jain et al., 2013; Kirklin et al., 2015), allowing a more data-driven approach to carrying out materials research. Recent studies have demonstrated that representing these databases as material networks can enable extraction of new materials knowledge (Hegde, Aykol, Kirklin, & Wolverton, 2018; Isayev et al., 2015) or help tackle challenges like predictive synthesis (Aykol, Hegde, et al., 2019) that require relational information between materials. Materials databases have become very popular because they enable their users to do rapid prototyping by searching near globally for figures of merit for their target application. However, both scientists and engineers have little in the way of visualization of aggregates from these databases, that is, intuitive layouts that help understand which materials are related and how they are related. The need for a tool that does this is particularly crucial in materials science because properties like phase stability and crystal structure similarity are themselves functions of a material dataset, rather than of individual materials.In these new approaches, materials can be represented with a graph structure that has nodes standing in for materials, and links between them encoding the appropriate relationships of interest, such as thermodynamic co-existence, chemical similarity or co-occurrence in text, to name a few. MaterialNet is\u00a0\u2026", "num_citations": "1\n", "authors": ["952"]}