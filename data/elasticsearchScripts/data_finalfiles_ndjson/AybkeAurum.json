{"title": "Value based software engineering\n", "abstract": " The IT community has always struggled with questions concerning the value of an organization\u2019s investment in software and hardware. It is the goal of value-based software engineering (VBSE) to develop models and measures of value which are of use for managers, developers and users as they make tradeoff decisions between, for example, quality and cost or functionality and schedule\u2013such decisions must be economically feasible and comprehensible to the stakeholders with differing value perspectives. VBSE has its roots in work on software engineering economics, pioneered by Barry Boehm in the early 1980s. However, the emergence of a wider scope that defines VBSE is more recent. VBSE extends the merely technical ISO software engineering definition with elements not only from economics, but also from cognitive science, finance, management science, behavioral sciences, and decision sciences\u00a0\u2026", "num_citations": "511\n", "authors": ["1468"]}
{"title": "Engineering and managing software requirements\n", "abstract": " Requirements engineering is the process by which the requirements for software systems are gathered, analyzed, documented, and managed throughout their complete lifecycle. Traditionally it has been concerned with technical goals for, functions of, and constraints on software systems. Aurum and Wohlin, however, argue that it is no longer appropriate for software systems professionals to focus only on functional and non-functional aspects of the intended system and to somehow assume that organizational context and needs are outside their remit. Instead, they call for a broader perspective in order to gain a better understanding of the interdependencies between enterprise stakeholders, processes, and software systems, which would in turn give rise to more appropriate techniques and higher-quality systems.Following an introductory chapter that provides an exploration of key issues in requirements\u00a0\u2026", "num_citations": "493\n", "authors": ["1468"]}
{"title": "An Exploration of Technical Debt\n", "abstract": " ContextWhilst technical debt is considered to be detrimental to the long term success of software development, it appears to be poorly understood in academic literature. The absence of a clear definition and model for technical debt exacerbates the challenge of its identification and adequate management, thus preventing the realisation of technical debt's utility as a conceptual and technical communication device.ObjectiveTo make a critical examination of technical debt and consolidate understanding of the nature of technical debt and its implications for software development.MethodAn exploratory case study technique that involves multivocal literature review, supplemented by interviews with software practitioners and academics to establish the boundaries of the technical debt phenomenon.ResultA key outcome of this research is the creation of a theoretical framework that provides a holistic view of technical\u00a0\u2026", "num_citations": "408\n", "authors": ["1468"]}
{"title": "State\u2010of\u2010the\u2010art: software inspections after 25 years\n", "abstract": " Software inspections, which were originally developed by Michael Fagan in 1976, are an important means to verify and achieve sufficient quality in many software projects today. Since Fagan's initial work, the importance of software inspections has been long recognized by software developers and many organizations. Various proposals have been made by researchers in the hope of improving Fagan's inspection method. The proposals include structural changes to the process and several types of support for the inspection process. Most of the proposals have been empirically investigated in different studies. This is a review paper focusing on the software inspection process in the light of Fagan's inspection method and it summarizes and reviews other types of software inspection processes that have emerged in the last 25 years. This paper also addresses important issues related to the inspection process and\u00a0\u2026", "num_citations": "305\n", "authors": ["1468"]}
{"title": "Investigating Knowledge Management practices in software development organisations\u2013An Australian experience\n", "abstract": " This study, using both quantitative and qualitative methods, investigates current practice of Knowledge Management (KM) in Software Engineering (SE) processes in two Australian companies on the basis that they both claimed to apply KM practices in their software development work. It also describes the KM activities and KM process used in SE practice, and examines the enablers of KM process for SE in terms of leadership, technology, culture, process and measurement.One of the main findings showed that software developers believe in the usefulness of knowledge sharing; however, their ability to utilise some of the KM systems was limited. The most commonly used systems included personal networks, informal networks, groupware and third-party knowledge. There is a need to formalise knowledge sharing of practices, while also supporting informal and ad-hoc knowledge sharing. While KM was considered\u00a0\u2026", "num_citations": "266\n", "authors": ["1468"]}
{"title": "Antecedents to IT personnel's intentions to leave: A systematic literature review\n", "abstract": " This paper undertakes a systematic review to gain insight into existing studies on the turnover of information technology (IT) personnel. Our systematic review of 72 studies from 1980 to 2008 examines the background and trend of research into IT personnel's intentions to leave their workplaces, in addition to providing a taxonomy of the determinants of their intentions to quit as captured in IT literature. We note a huge growth in the number of academic papers on the topic since 1998. Moreover, most of the research on IT turnover has been undertaken in North America, followed by Asia. Based on the 72 extracted studies, we found a total of 70 conceptually distinct IT turnover drivers. We classified them into the 5 broad categories of individual, organisational, job-related, psychological, and environmental, each containing three to four sub-categories. Finally, this paper presents insightful recommendations for IT\u00a0\u2026", "num_citations": "261\n", "authors": ["1468"]}
{"title": "Towards a decision-making structure for selecting a research design in empirical software engineering\n", "abstract": " Several factors make empirical research in software engineering particularly challenging as it requires studying not only technology but its stakeholders\u2019 activities while drawing concepts and theories from social science. Researchers, in general, agree that selecting a research design in empirical software engineering research is challenging, because the implications of using individual research methods are not well recorded. The main objective of this article is to make researchers aware and support them in their research design, by providing a foundation of knowledge about empirical software engineering research decisions, in order to ensure that researchers make well-founded and informed decisions about their research designs. This article provides a decision-making structure containing a number of decision points, each one of them representing a specific aspect on empirical software engineering\u00a0\u2026", "num_citations": "198\n", "authors": ["1468"]}
{"title": "A product management challenge: Creating software product value through requirements selection\n", "abstract": " It is important for a software company to maximize value creation for a given investment. The purpose of requirements engineering activities is to add business value that is accounted for in terms of return on investment of a software product. This paper provides insight into the release planning processes used in the software industry to create software product value, by presenting three case studies. It examines how IT professionals perceive value creation through requirements engineering and how the release planning process is conducted to create software product value. It also presents to what degree the major stakeholders\u2019 perspectives are represented in the decision-making process. Our findings show that the client and market base of the software product represents the most influential group in the decision to implement specific requirements. This is reflected both in terms of deciding the processes followed\u00a0\u2026", "num_citations": "171\n", "authors": ["1468"]}
{"title": "Knowledge management in software engineering-describing the process\n", "abstract": " The management of knowledge and experience are key means by which systematic software development and process improvement occur. Within the domain of software engineering (SE), quality continues to remain an issue of concern. Although remedies such as fourth generation programming languages, structured techniques and object-oriented technology have been promoted, a \"silver bullet\" has yet to be found. Knowledge management (KM) gives organisations the opportunity to appreciate the challenges and complexities inherent in software development. We report on two case studies that investigate KM in SE at two IT organisations. Structured interviews were conducted, with the assistance of a qualitative questionnaire. The results were used to describe current practices for KM in SE, to investigate the nature of KM activities in these organisations, and to explain the impact of leadership, technology\u00a0\u2026", "num_citations": "152\n", "authors": ["1468"]}
{"title": "A Field Study of the Requirements Engineering Practice in Australian Software Industry\n", "abstract": " Empirical studies have demonstrated that requirements errors introduced during software development are most numerous in the software life-cycle, making software requirements critical determinants of software quality. This article reports an exploratory study which provides insight into industrial practices with respect to requirements engineering (RE). A combination of both qualitative and quantitative data is collected, using semi-structured interviews and a detailed questionnaire from 28 software projects in 16 Australian companies. The contribution of this RE study is threefold: Firstly, it includes a detailed examination of the characteristics of the RE activities involved in the projects. Secondly, it reconstructs the underlying practiced process models. Thirdly, it compares these models to one another and with a number of well-known process models from RE literature to give insight into the gap between RE\u00a0\u2026", "num_citations": "100\n", "authors": ["1468"]}
{"title": "A value-based approach in requirements engineering: explaining some of the fundamental concepts\n", "abstract": " Today\u2019s rapid changes and global competition forces software companies to become increasingly competitive and responsive to consumers and market developments. The purpose of requirements engineering activities is to add business value that is accounted for in terms of return-on-investment of a software product. This article introduces some of the fundamental aspects of value by borrowing theories from economic theory, discusses a number of the challenges that face requirements engineers and finally provides a model that illustrates value from business, product and project perspectives.", "num_citations": "90\n", "authors": ["1468"]}
{"title": "What is important when deciding to include a software requirement in a project or release?\n", "abstract": " The requirements on software systems are so many that not all requirements may be included in the next development project or the next release. This means that it is necessary to select a set of requirements to implement in the forthcoming project, and hence to postpone the implementation of other requirements to a later point in time. In this selection process different criteria are used. In many cases, the criteria are not officially stated, but rather implicitly used by the decision-makers. However, to be able to support this decision-making process, it is important to know and understand the underlying reasons for the decisions. This paper presents an empirical study of the decision criteria. In particular, the paper focuses on how different perspectives have different influence on the decision-making process. It is concluded that business-oriented and management-oriented criteria are more important than technical\u00a0\u2026", "num_citations": "88\n", "authors": ["1468"]}
{"title": "Criteria for selecting software requirements to create product value: An industrial empirical study\n", "abstract": " Product value is based on which requirements are included in a specific release of a software product. This chapter provides an overview of the value concept and presents an empirical study conducted as an industrial survey. The objective of the survey was to quantify the importance of different decision making criteria when deciding whether to include a requirement in a project or release. The results reported from the survey are based on responses from two companies. It was discovered that there were similarities in responses at a company level, although major differences existed between individual respondents to the survey. The most important criteria were found to be those related to specific customers or markets and criteria, such as development cost-benefit, delivery date, and resources. The least important criteria were those related to development and maintenance. The results also indicate that a\u00a0\u2026", "num_citations": "78\n", "authors": ["1468"]}
{"title": "Resources contributing to gaining competitive advantage for open source software projects: An application of resource-based theory\n", "abstract": " Open Source Software (OSS) is an important asset in today's software-intensive society. The success of OSS projects is highly dependent on a number of factors. These factors must be understood and managed as an OSS project progresses. Thus, project management of an OSS project has a decisive role in ensuring the success of its software. The objective of the research is to increase the understanding of the resources affecting the competitiveness of OSS projects. Herewith, the responsiveness of OSS projects to users' needs is assessed via an investigation of the defect-fixing process. A Resource-Based View of the firm (RBV) is used to build theoretical justifications for a set of hypotheses proposed in this study. Data gathered from 427 OSS projects confirmed that developers' interest in and users' contribution to the project as well as frequently updating and releasing the software affect the project's ability to\u00a0\u2026", "num_citations": "67\n", "authors": ["1468"]}
{"title": "The impact of project capabilities on project performance: Case of open source software projects\n", "abstract": " Open Source Software (OSS) projects are contingent on volunteer developers and voluntary contributions from users, accordingly, traditional performance measures used for software projects, like being on time and budget, and satisfying specifications, may not be relevant for such projects. Although researchers have studied some predictors of OSS project performance, there is a lack of empirical work that studies the impact of project capabilities on the performance of OSS projects. Therefore, this paper studies project capabilities as potential predictors of OSS project performance. The data, gathered from 607 OSS projects over time (in two snap-shots), were consistent with Dynamic Capability Theory (DCT). In other words, the results showed that in order to achieve higher project performance, OSS projects need to have strong capabilities in terms of proactive and efficient defect-removal as well as proactive and\u00a0\u2026", "num_citations": "62\n", "authors": ["1468"]}
{"title": "Strategy-oriented alignment in requirements engineering: linking business strategy to requirements of e-business systems using the SOARE approach\n", "abstract": " This paper proposes the Strategy-oriented Alignment in Requirements Engineering (SOARE) approach for e-business systems. The primary objective of the SOARE approach is to enable alignment between requirements for e-business systems and the business strategies they are intended to support. The SOARE approach incorporates means for analysing and decomposing business strategy, employing goal modelling both to represent business strategy in a requirements engineering context and to link high-level strategic objectives to low-level requirements through goal refinement. The SOARE approach further describes a basis for deriving and leveraging recurring requirements patterns. This paper proposes a high-level process for the SOARE approach, which is then illustrated via a proof-of-concept case study from the literature.", "num_citations": "54\n", "authors": ["1468"]}
{"title": "Requirements engineering process models in practice\n", "abstract": " Requirements engineering literature presents different models of the requirements engineering process. The process models range from linear to iterative in structure. This paper reports on a study of the requirements engineering processes at two Australian companies. Structured interviews were conducted with the aid of a qualitative questionnaire. The results from the interviews are discussed, with particular focus on requirements engineering activities and the high-level descriptive process models of the requirements engineering processes that were constructed from the data. These models are then compared with three descriptive requirements engineering process models from existing requirements engineering literature.", "num_citations": "51\n", "authors": ["1468"]}
{"title": "An experiment in inspecting the quality of use case descriptions\n", "abstract": " Achieving higher quality software is one of the aims sought by development organizations worldwide. Establishing defect free statements of requirements is a key strategy for achieving improvements in quality. In this paper we present the results of a laboratory experiment that explored the application of a checklist in the process of inspecting use case descriptions. We compare the checklist with others in the literature then report experimental findings. A simple experimental design was adopted in which the control group used an ad hoc approach and the treatment group was provided with a six-point checklist. The defects identified in the experiment were classified at three levels of significance: i. Internal to the use case ii. Specification impact, and iii. Requirements impact. It was found that the identification of requirements defects was not significantly different between the control and treatment groups, but that more\u00a0\u2026", "num_citations": "50\n", "authors": ["1468"]}
{"title": "A taxonomy for measuring the success of open source software projects\n", "abstract": " Open Source Software (OSS) has been widely adopted by organizations as well as individual users and has changed the way software is developed, deployed and perceived. Research into OSS success is critical since it provides project leaders with insights into how to manage an OSS project in order to succeed. However, there is no universally agreed definition of \u201csuccess\u201d and researchers employ different dimensions (eg, project activity and project performance) to refer to OSS success. By conducting a rigorous literature survey, this paper seeks to take a holistic view to explore various areas of OSS success that have been studied in prior research. Finally it provides a measurement taxonomy including six success areas for OSS projects. Implications for theory and practice are presented.", "num_citations": "46\n", "authors": ["1468"]}
{"title": "Aligning software project decisions: a case study\n", "abstract": " Recent research in software engineering has highlighted the need to ensure alignment between business objectives, customer requirements and product development. If the business is to meet its strategic objectives, the Requirements Engineering (RE) activities must be executed in a manner such that they support these higher level objectives. A clear alignment between RE activities and the strategic objectives of the organization should underscore the merit of IT investment and the opportunities for competitive advantage that can be pursued as a result by the organization. This research begins with a detailed investigation of the complexity of decision-making during RE activities on business, product and project levels. Secondly, it investigates \"in-project\" level RE decisions and provides empirical findings from an industrial case study. The findings show that RE project related decisions are influenced by business\u00a0\u2026", "num_citations": "37\n", "authors": ["1468"]}
{"title": "Capturing implicit software engineering knowledge\n", "abstract": " It is commonly accepted that all forms of software engineering knowledge should be captured and stored in a repository. This knowledge enables us to learn from past development experience and promotes reuse. Unfortunately there is not much work in the software engineering literature that emphasizes the importance of capturing implicit knowledge for the repository. This paper begins with a critical literature review on the epistemological dimensions of knowledge (explicit and implicit knowledge) in software development. Then it speculates a lack of attention on the capture of knowledge for the software experience factory. It suggests that the source of implicit knowledge extends beyond the software development team which accumulates implicit knowledge during practice. In this paper we formulate a conceptual framework that captures the implicit knowledge, and then organize the knowledge in a useful form for\u00a0\u2026", "num_citations": "36\n", "authors": ["1468"]}
{"title": "Cooperative modelling evaluated\n", "abstract": " In any modelling activity, a framework to determine the maturity of a developed model before its use is highly advantageous. Such a framework would save modellers expensive time in many areas of information systems. It would also lower the risk of users relying on an incomplete or inaccurate model. In this paper, we develop a framework which uses internal inconsistencies as a quantitative indicator for estimating the completeness and correctness of a model as it is cooperatively evolved. Whilst internal inconsistencies are due to bad fit between different parts of a model, we argue that they are also correlated with how the evolved model fits with the \"world\". This argument underpins our framework to evaluate integrated models.         Contributions of this paper are three folds: firstly, it presents a theoretically grounded framework for integrating models. We extend an existing incremental modelling framework, NRDR\u00a0\u2026", "num_citations": "34\n", "authors": ["1468"]}
{"title": "Competency rallying in electronic markets: implications for open source project success\n", "abstract": " This paper studies the success of Open Source Software (OSS) projects in attracting developer interest and achieving project efficiency. The focus of our study is on examining the relationship between the four sets of capabilities proposed in the Theory of Competency Rallying (TCR) and the success of OSS projects. The data collected from 607 OSS projects mainly confirm that the capabilities proposed in the TCR are necessary for the success of OSS projects. The results of this study show that in order to succeed, OSS projects should constantly identify their market\u2019s quality and functionality needs. Ability of OSS project managers to know which developers possess certain skills required to meet a particular market need is also found to be critical. Another capability that is recognised to be crucial in predicting project success is the ability of OSS developers in effectively addressing market needs and\u00a0\u2026", "num_citations": "32\n", "authors": ["1468"]}
{"title": "Measuring the effectiveness of the defect-fixing process in open source software projects\n", "abstract": " The defect-fixing process is a key process in which an open source software (OSS) project team responds to customer needs in terms of detecting and resolving software defects, hence the dimension of defect-fixing effectiveness corresponds nicely to adopters' concerns regarding OSS products. Although researchers have been studying the defect fixing process in OSS projects for almost a decade, the literature still lacks rigorous ways to measure the effectiveness of this process. Thus, this paper aims to create a valid and reliable instrument to measure the defect-fixing effectiveness construct in an open source environment through the scale development methodology proposed by Churchill [4]. This paper examines the validity and reliability of an initial list of indicators through two rounds of data collection and analysis. Finally four indicators are suggested to measure defect-fixing effectiveness. The implication for\u00a0\u2026", "num_citations": "31\n", "authors": ["1468"]}
{"title": "Quest for a silver bullet: Creating software product value through requirements selection\n", "abstract": " This paper provides results of an empirical study on how software product value is both understood and created through release planning for software products in Australia. We examine how IT professionals perceive value creation through requirements engineering and how the release planning process is conducted to create software product value. We then look at the degree to which the major stakeholders' perspectives are represented in the decision making process. Our findings show that the client and market base of the software product represents the most influential group in the decision to implement specific requirements. This is reflected both in terms of deciding the processes followed and the decision making criteria applied when selecting requirements for the product. It is concluded that the creation of software product value is dependant on the context in which the software product exists, including\u00a0\u2026", "num_citations": "31\n", "authors": ["1468"]}
{"title": "An analysis of empirical requirements engineering survey data\n", "abstract": " The gap between research and practice in requirements engineering is immense. To understand practice and the reasons for this gap, empirical evidence about requirements engineering practice is needed. In the last ten years a number of empirical studies have been conducted to gather such data. This chapter gives an overview focusing on broad surveys. The aim of this overview is to understand the following three issues: (1) what kind of questions can and should we ask to understand practice, (2) what evidence do we have about practice, (3) what further evidence do we need about practice. To further illustrate the issues, we provide findings of new studies conducted by the authors in Germany and Australia. Altogether this chapter aims at establishing a basis for further empirical research on requirements engineering.", "num_citations": "29\n", "authors": ["1468"]}
{"title": "Knowledge management in software engineering education\n", "abstract": " The importance of knowledge management (KM) is increasingly recognized in education since it deals with information and knowledge resources. The challenge for educational organizations is to develop effective strategies for managing the knowledge resources and providing appropriate access to this information. This article examines the key components of KM that may have a potential impact on success of the KM practices in educational context. The purpose of this investigation is to support the learning activity in the software engineering program within a university. Results indicated that both academic staff and students were aware of the importance of these components and the role they play in successfully managing knowledge in the program; however the actual implementation of such criteria was inadequate and needed improvement.", "num_citations": "28\n", "authors": ["1468"]}
{"title": "The impact of project licence and operating system on the effectiveness of the defect-fixing process in open source software projects\n", "abstract": " Open source software (OSS) products have been widely adopted by commercial as well as government organisations. However, despite their increased adoption, many OSS projects still fail in responding to users\u2019 quality needs such as resolving software defects. Hence, this paper investigates the responsiveness of OSS projects to users\u2019 needs in terms of resolving software defects. To do so, we develop and test a model of antecedents to the effectiveness of the defect-fixing process for OSS projects. Data gathered for this study from 1481 OSS projects confirms that OSS projects that apply a less restrictive licence are less dependent on their team to operate their defect-fixing process. It is also demonstrated that OSS projects developed to run on a broader range of operating systems are more likely to have an effective defect-fixing. The study provides practitioners with insightful recommendations on project\u00a0\u2026", "num_citations": "27\n", "authors": ["1468"]}
{"title": "Linking requirements goal modeling techniques to strategic e-business patterns and best practice\n", "abstract": " We propose that requirements for strategic-level IT systems for e-business can be linked to business strategy via techniques in goal modeling. We further propose that there exist repeating patterns of best practice in business strategy, which are based on recurring business models. These patterns have both direct and indirect implications for systems requirements, and thus identification of these patterns facilitates the requirements discovery process for strategic-level information systems initiatives in business. These patterns moreover help ensure alignment of systems requirements with business strategy.", "num_citations": "27\n", "authors": ["1468"]}
{"title": "The Impact of Process Effectiveness on User Interest in Contributing to the Open Source Software Projects.\n", "abstract": " Unlike closed source software development, open source software (OSS) projects are not commonly driven by direct profit and do not offer developers monetary incentives. Instead, OSS development relies on volunteer developers and voluntary contributions from the user community. Thus, attracting voluntary user contributions to OSS projects is a challenging task. Defect fixing is one important area of OSS development that requires user contributions. Postulating upon the theory of competency rallying, this research examines the impact of the defectfixing effectiveness on user interest in contributing to OSS projects. Analysis of data collected from 1481 OSS projects confirms that the effectiveness of the defect fixing process till any period of time has a positive significant effect on the user contribution in terms of defect submission as well as defect resolution in the following time period. The results of this study have several implications for OSS projects\u2019 managers as well as corporations interested in adopting OSS software.", "num_citations": "26\n", "authors": ["1468"]}
{"title": "The morning after: What happens when outsourcing relationships end?\n", "abstract": " Many firms are reevaluating their initial outsourcing decisions for various reasons, including whether the goals set for the outsourcing effort were achieved, changes in the business environment, internal changes, and/or mergers. An increasing number of outsourcing deals are being terminated and backsourced or re-outsourced. According to a recent international industry survey 49% of companies engaged in outsourcing have terminated outsourcing contracts prematurely. Research has not reflected this trend with few studies concentrating on what firms do after they terminate or fail to extend an outsourcing contract. It is argued that there is a need to study this important and increasingly frequent decision. The main contribution of this chapter is to present an outsourcing decision model and demonstrate its applicability with respect to a recent sourcing decision.", "num_citations": "26\n", "authors": ["1468"]}
{"title": "Investigating Inter-Organizational Knowledge Sharing Intention in Supply Chain Partnership\n", "abstract": " In today\u2019s knowledge based economies, organizations cannot rely on acquiring the required knowledge solely from internal resources. This will make inter-organizational knowledge sharing an important issue. A great proportion of the current Studies mostly focus on the intention to share knowledge within an organization. This paper argues that there is a need to investigate the intention to share knowledge between organizations especially among supply chain partners because inter-organizational knowledge sharing is critical to supply chain activities. Based on the literature, the current study proposes a conceptual model showing the factors affecting inter-organizational knowledge sharing in supply chains, and how these factors may affect intention to share knowledge among the chained organisations. Through a systematic literature review, three major sets of factors were identified including: contextual factors, organizational factors and factors related to nature of knowledge. It is illustrated in the proposed conceptual model that contextual factors influence the intention to share knowledge in IO contexts. A plan is also proposed for both validation and testing of the conceptual model. For this purpose a mix methodology approach is proposed including interviews and a survey.", "num_citations": "24\n", "authors": ["1468"]}
{"title": "Balancing software product investments\n", "abstract": " The long-term sustainability of a software product depends on more than developing features. Priorities are placed on aspects that support the development of software, like software product quality (eg. ISO 9126), project constraints - time and cost, and even the development of intellectual capital (IC). A greater focus on any one aspect takes priority from another, but as each aspects delivers a different type of value managers have trouble comparing and balancing these aspects. This paper presents a method to help determine the balance between key priorities in the software development process. The method is applied to a new case study, that also combines with results from previous studies. The results show it is possible to compare features, quality, time, cost and IC in a comprehensive way, with the case study showing that participants perceive a change from a shorter-term product perspective to a longer-term\u00a0\u2026", "num_citations": "23\n", "authors": ["1468"]}
{"title": "Combining data from reading experiments in software inspections: a feasibility study\n", "abstract": " Software inspections have been around for 25 years, and most software engineering researchers and professionals know that they are mostly a cost-effective means for removing software defects. However, this does not mean that there is consensus about how they should be conducted in terms of reading techniques, number of reviewers or the effectiveness of reviewers. Still, software inspections are probably the most extensively empirically studied technique in software engineering. Thus, a large body of knowledge is available in literature. This paper uses 30 data sets from software inspections found in the literature to study different aspects of software inspections. As a feasibility study, the data are amalgamated to increase our understanding and illustrate what could be achieved if we manage to conduct studies where a combination of data can be collected. It is shown how the combinated data may help to\u00a0\u2026", "num_citations": "22\n", "authors": ["1468"]}
{"title": "Software support for creative problem solving\n", "abstract": " The paper describes a development effort and an empirical test of a software prototype for stimulating creative problem solving. The software was designed on the basis of a solo brainstorming technique that provided users with external stimuli and exposed them to a large number of ideas over a short period of time. The prototype was empirically tested in the context of issue identification for a natural disaster. The results of the test indicate that users were able to identify on average 40% of all critical issues individually, and over 95% of issues in nominal groups of 4-6 people. These results suggest that collaborative creativity may facilitate optimal performance and learning.", "num_citations": "21\n", "authors": ["1468"]}
{"title": "Social Forking in Open Source Software: An Empirical Study\n", "abstract": " Forking is the creation of a new software project by making a copy of artefacts from another project. Forking is gaining traction in industry because of the maturity of distributed version control systems and the abundance of open source software (OSS) and hosting platforms that support forking. However, forking in OSS is a poorly understood practice in research, often assumed to be damaging to the open source community. This research aims to explore social forking. It uses a conceptual model for forking centring on three key conceptsforks (ie created projects), communities (ie groups of forks) and contributions (ie changes contributed from a forked project to the project from which its artefacts were copied)-to empirically analyse nine public domain JavaScript development communities in GitHub, a web site for hosting social coding. The analysis examined the relationships of these communities, the nature of forking, and the way in which forking and contributions were used in a social setting.", "num_citations": "20\n", "authors": ["1468"]}
{"title": "Knowledge transformation for education in software engineering\n", "abstract": " The use of Knowledge Management (KM) is increasingly relevant to education for the management of information and knowledge resources. It is important that educational organisations adapt to mobile learning using existing established frameworks for evaluation. In particular, strategies for KM within the university context need to be understood. This article examines the industrial Socialisation Externalisation Combination and Internalisation (SECI) model of KM and how it is applied to the educational domain. The purpose of this investigation is to analyse the KM supported by different technologies within a SECI framework, in the Software Engineering (SE) programme within a university, and how this may support learning. Results indicated that the SECI model was an incomplete representation of KM in this context. An increased understanding of the technology that supports each aspect of the model would\u00a0\u2026", "num_citations": "20\n", "authors": ["1468"]}
{"title": "A Consolidated Understanding of Technical Debt\n", "abstract": " Technical debt utilises financial debt as a metaphor to describe the phenomenon of increasing software development costs over time. Whilst this phenomenon is evidently detrimental to the long-term success of software development, it appears to be poorly understood in the academic literature. The absence of a clear definition and model for technical debt means that the notion of technical debt remains metaphorical, thus preventing the realisation of technical debt's utility as a conceptual and technical communication device. This exploratory study reconciles the high-level, abstracted view of technical debt presented in academic literature. It establishes the boundaries of the technical debt phenomenon and develops a comprehensive theoretical framework to facilitate future research. The resulting theoretical framework portrays a holistic view of technical debt that incorporates a set of precedents and outcomes, as well as the phenomenon itself.", "num_citations": "19\n", "authors": ["1468"]}
{"title": "When product managers gamble with requirements: Attitudes to value and risk\n", "abstract": " [Context and motivation] Finding a balance between commercial (customer specific, market pull and external quality requirements) and internal quality requirements is a recognized challenge in market driven software product development (MDSPD). In order to address this challenge it is important to understand the preferences and biases influencing decision makers selecting requirements for software releases. [Question/problem] Prospect theory has been successfully applied to many disciplines. Applying it to MDSPD suggests decision makers will avoid risk when selecting between commercial requirements, take risk with internal quality requirements, and prefer commercial requirements over internal quality requirements in order to maximize their perceived value. This paper seeks to investigate this claim. [Principal ideas/results] This paper presents an experiment investigating whether the\u00a0\u2026", "num_citations": "18\n", "authors": ["1468"]}
{"title": "Assessment of software measurement: an information quality study\n", "abstract": " This paper reports on the first phase of an empirical research project concerning methods to assess the quality of the information in software measurement products. Two measurement assessment instruments are developed and deployed in order to generate two sets of analyses and conclusions. These sets will be subjected to an evaluation of their information quality in phase two of the project. One assessment instrument was based on AIMQ, a generic model of information quality. The other instrument was developed by targeting specific practices relating to software project management and identifying requirements for information support. Both assessment instruments delivered data that could be used to identify opportunities to improve measurement The generic instrument is cheap to acquire and deploy, while the targeted instrument requires more effort to build. Conclusions about the relative merits of the\u00a0\u2026", "num_citations": "18\n", "authors": ["1468"]}
{"title": "Adding Value to Software Requirements\uff1a An Empirical Study in the Chinese Software Industry\n", "abstract": " The rapid growth of the Chinese software industry has attracted attention from all over the world. Meanwhile, software requirements selection has a crucial impact on the final value of a software product and the satisfaction of stakeholders. This paper presents an empirical study, which focuses on the decision-making criteria for requirements selection in market-driven software development projects in international companies in China. The outcome shows that some criteria, such as business strategy, customer satisfaction, and software features, are more important than others when making decisions for requirements selection.", "num_citations": "16\n", "authors": ["1468"]}
{"title": "When technology is mandatory-factors influencing users satisfaction\n", "abstract": " One commonly acknowledged factor in the successful implementation of any application or information system is user satisfaction. This paper studied users' judgments on a new technology in an educational context. This study found that, while perceived usefulness and perceived ease of use each had a positive correlation with user satisfaction, there are likely to be additional factors that contribute to user satisfaction.", "num_citations": "16\n", "authors": ["1468"]}
{"title": "Knowledge discovery: Some empirical evidence and directions for future research\n", "abstract": " Large amounts of data generated by electronic commerce are becoming an increasingly important source of knowledge to support organisational decision making. An empirical study was conducted in a simulated electronic commerce environment to examine people\u2019s ability to discover varying associative patterns in transactions data, and utilise that knowledge to support product sales forecasting. The results of the study indicate that people were able to reasonably well discover valid associations among data items and consequently improved performance over naive forecasts. The results also indicate that people were more successful in recognising and using stronger rather than weaker associative patterns. However, they failed to reach optimal performance.", "num_citations": "15\n", "authors": ["1468"]}
{"title": "Evaluation of effects of pair work on quality of designs\n", "abstract": " Quality is a key issue in the development of software products. Although the literature acknowledges the importance of the design phase of software lifecycle and the effects of the design process and intermediate products on the final product, little progress has been achieved in addressing the quality of designs. This is partly due to difficulties associated in defining quality attributes with precision and measurement of the many different types and styles of design products, as well as problems with assessing the methodologies utilized in the design process. In this research we report on an empirical investigation that we conducted to examine and evaluate quality attributes of design products created through a process of pair-design and solo-design. The process of pair-design methodology involves pair programming principles where two people work together and periodically switch between the roles of driver and\u00a0\u2026", "num_citations": "14\n", "authors": ["1468"]}
{"title": "Search engine advertising adoption and utilization: An empirical investigation of inflectional factors\n", "abstract": " Search engine advertising (SEA) is a prominent source of revenue for search engine companies, and also a solution for businesses to promote their visibility on the web. However, there is little academic research available about the factors and the extent to which they may influence businesses\u2019 decision to adopt SEA. Building on Theory of Planned Behavior, Technology Acceptance Model, and Unified Theory of Acceptance and Use of Technology, this study develops a context-specific model for understanding the factors that influence the decision of businesses to use SEA. Using structural equation modeling and survey data collected from 142 businesses, this research finds that the intention of businesses to use SEA is directly influenced by four factors: (i) attitude toward SEA, (ii) subjective norms, (iii) perceived control over SEA, and (iv) perceived benefits of SEA in terms of increasing web traffic, increasing sales\u00a0\u2026", "num_citations": "13\n", "authors": ["1468"]}
{"title": "Connecting role activity diagrams to the problem frames approach\n", "abstract": " Capturing process information in requirements is not a simple task. To alleviate this difficulty, we propose a Problem Frames approach that takes elements of process models and maps them to Problem Frames. To show where requirements have an effect on particular contextual entities, we use an extended problem diagram. From here we attempt to derive appropriate Problem Frames. The paper reports on an industrial study for a major online brokerage and financial system that describes the approach.", "num_citations": "13\n", "authors": ["1468"]}
{"title": "Measurement and decision making\n", "abstract": " Value-Based Software Engineering requires the capability to measure and analyze value in order to make informed decisions. The difficulty experienced by many organizations in measuring concepts that are even simpler than value suggests that this requirement will be hard to meet. The goal of this chapter is to build an understanding of measurement and decision making and the relationship between them. A multi-view model of measurement is presented as a way to cope with the complexity of measuring concepts such as value. A behavioral decision making model is presented that identifies the points at which measurement products impact the decision making behavior of a manager or software engineer. This model attempts to satisfactorily account for the idiosyncrasies of human behavior, while preserving some elements of the rational model of decision making. The chapter concludes with an\u00a0\u2026", "num_citations": "12\n", "authors": ["1468"]}
{"title": "Solo brainstorming: behavioral analysis of decision makers\n", "abstract": " Degree: Ph. D.DegreeYear: 1997Institute: University of New South Wales (Australia)The need to improve decision making is a longstanding concern in management as well as in many research areas. This research aims to support, facilitate and enhance the outcome of the issue identification and idea generation stages of decision making.", "num_citations": "11\n", "authors": ["1468"]}
{"title": "Business value through product line engineering-a case study\n", "abstract": " Software product line (PL) engineering has been established in the last decade as a proven way to build flexibility and reusability into software systems. This approach is centred around the idea that the initial investments made in the development of reusable artefacts are outweighed by the quality and product improvements gained through the reuse of such artefacts. While there are many studies on introducing PL engineering into software development and calculating expected value upfront, there is little documented evidence of long-term experiences with PL engineering. This paper examines perceptions of the value of PL engineering for three PL of different ages. The paper confirms that, while PL engineering enhances product value and quality through shared components and architecture, this is also the predominant limitation of PL engineering. Furthermore, our investigations show that while perceptions of\u00a0\u2026", "num_citations": "10\n", "authors": ["1468"]}
{"title": "A systematic review on search engine advertising\n", "abstract": " The innovation of Search Engine Advertising (SEA) was first introduced in 1998. It soon became a very popular tool among practitioners for promoting their websites on the Web and turned into a billion dollar revenue source for search engines. In parallel with its rapid growth in use, SEA attracted the attention of academic researchers resulting in a large number of publications on the topic of SEA. However, no comprehensive review of this accumulated body of knowledge is currently available. This shortcoming has motivated us to conduct a systematic review of SEA literature. Herewith, we searched for and collected 101 papers on the topic of SEA, published in 72 journals from different disciplines and analyzed them to answer the research questions for this study. We have identified the historical development of SEA literature, predominant journals in the publication of SEA research, active reference disciplines as well as the main researchers in the field of SEA. Moreover, we have classified SEA literature into four categories and 10 research topics. We also uncovered a number of gaps in SEA literature and provided future research direction accordingly.", "num_citations": "9\n", "authors": ["1468"]}
{"title": "Supporting creativity in software development: an application in IT education\n", "abstract": " This chapter examines the potential of the application of an individual creativity-enhancing technique (called SoloBrainstorming, or SBS) to improve the level of creativity of Information Technology (IT) students in performing information system (IS) requirements determination. Requirements determination, in the context of software development, involves gaining an understanding of the underlying issues related to a business problem, and also considering potential solutions. The chapter begins with a definition of creativity, followed by an overview of strategies suggested to enhance creativity. The SBS technique is then introduced, followed by a report of empirical results from its application. Finally, we offer advice for IT education in terms of incorporating creativity-enhancing techniques into the IT course curriculum.", "num_citations": "9\n", "authors": ["1468"]}
{"title": "Determinant of intention to use search engine advertising: a conceptual model\n", "abstract": " The innovation of Search Engine Advertising (SEA) acts as a prominent source of revenue for search engine companies, as well as being a solution for businesses to promote their visibility on the Web. However, the underlying factors that contribute to businesses\u2019 decision to adopt SEA have not been well investigated. Building upon known behavioural theories (Theory of Planned Behaviour, Technology Acceptance Model and Unified Theory of Acceptance and Use of Technology) this paper conceptualizes and develops a context-specific model for understanding the factors that influence the decision of businesses to utilize SEA. The conceptual model of the paper proposes that this decision is influenced by four direct factors (attitude toward SEA, subjective norms, perceived control over SEA, perceived benefits of SEA) and ten indirect factors (trust in search engines, perceived risk of SEA, ability to manage\u00a0\u2026", "num_citations": "7\n", "authors": ["1468"]}
{"title": "Adoption of instant messaging technologies by university students\n", "abstract": " The main objective of this paper is to better understand the nature and patterns of students\u2019 socialization patterns in relation to the adoption of Instant Messaging (IM) systems. A model based on the Extended Planned Behavior Theory (EPBT) was applied to a sample of 80 students of software engineering at the University of New South Wales, Australia. Based on the EPBT model, a questionnaire was administered to these students. A number of key concepts were identified in relation to the students\u2019 adoption of IM. It was also found that students use IM to support a number of task-related purposes such as collaborating with their classmates about group work and assignments, as well as for scheduling and coordinating meetings and significant results were obtained.", "num_citations": "7\n", "authors": ["1468"]}
{"title": "Increasing the understanding of effectiveness in software inspections using published data sets\n", "abstract": " Since its inception into software engineering, software inspection has been viewed as a cost-effective way of increasing software quality. Despite this, many questions remain unanswered regarding, for example, ideal team size or cost effectiveness. This paper addresses some of these questions by performing an analysis using 30 published data sets from empirical experiments of software inspections. The main question is concerned with determining a suitable team size for software inspections. The effectiveness of different team sizes is also studied. Furthermore, the differences in mean effectiveness between different team sizes are investigated based on the inspection environmental context, document types and reading technique. It is concluded that it is possible to choose a suitable team size based on the effectiveness of inspections. This can be used as a tool to assist in the planning of inspections. A\u00a0\u2026", "num_citations": "7\n", "authors": ["1468"]}
{"title": "Search engine advertising perceived effectiveness: a resource-based approach on the role of advertisers' competencies\n", "abstract": " Search engine advertising (SEA), in which businesses (or advertisers) bid on keywords and pay search engine providers (eg Google) to get a secure place on the first page of search results, is a prominent source of revenue for search engine companies, and an effective method for businesses to promote their visibility on the Web. SEA is a complex and dynamic form of advertising and managing it effectively is still a challenge for many businesses, particularly smaller businesses. Building upon resource-based theory, this study has developed a context-specific model for understanding advertisers' competency factors that influence SEA effectiveness. Using structural equation modelling and survey data collected from 142 businesses, this research has found that SEA effectiveness is influenced by organizations' ability to manage keywords and bids, ability to analyse and monitor outcomes, advertising expertise\u00a0\u2026", "num_citations": "6\n", "authors": ["1468"]}
{"title": "Requirements engineering practice in pharmaceutical and healthcare manufacturing\n", "abstract": " With the growing demand for pharmaceutical and healthcare products worldwide, we examine requirements engineering (RE) process practices in three multinational pharmaceutical and healthcare companies in Australia. We found there were large differences in the processes used between companies in the production of similar products and that none of the projects followed the recommended best practice RE process model for this industry. We found that a number of implicit activities were being conducted as part of the project process. Within this life critical domain this is not to be recommended. Thus we highlight the need to more closely align recommended best practice with actual practice through the employment of a standardised and explicit RE process for developing mission and safety-critical systems in pharmaceutical and healthcare manufacturing.", "num_citations": "6\n", "authors": ["1468"]}
{"title": "A use case description inspection experiment\n", "abstract": " Achieving higher quality software is one of the aims sought by development organizations worldwide. Establishing defect free statements of requirements is a necessary prerequisite to this goal. In this paper we present the results of a laboratory experiment that explored the application of a checklist in the process of inspecting use case descriptions. A simple experimental design was adopted in which the control group used an ad hoc approach and the treatment group was provided with a six-point checklist. The defects identified in the experiment were classified at three levels of significance: i. Internal to the use case ii. Specification impact, and iii. Requirements impact. It was found that the identification of requirements defects was not significantly different between the control and treatment groups, but that more specification and internal defects were found by the groups using the checklist. In the paper we explore the implications of these findings.", "num_citations": "6\n", "authors": ["1468"]}
{"title": "An Empirical Study of an ER-Model Inspection Meeting.\n", "abstract": " A great benefit of software inspections is that they can be applied at almost any stage of the software development life cycle. We document a large-scale experiment conducted during an entity relationship (ER) model inspection meeting. The experiment was aimed at finding empirically validated answers to the question \"which reading technique has a more efficient detection rate when searching for defects in an ER model\". Secondly, the effect of the usage of roles in a team meeting was also explored. Finally, we investigate the reviewers' ability to find defects belonging to certain defect categories. The findings showed that the participants using a checklist had a significantly higher detection rate than the ad hoc groups. Overall, the groups using roles had a lower performance than those without roles. Furthermore, the findings showed that when comparing the groups using roles to those without roles, the proportion\u00a0\u2026", "num_citations": "6\n", "authors": ["1468"]}
{"title": "Analysing search engine advertising research: synthesis of two decades of research\n", "abstract": " Search engine advertising (SEA) has attracted the attention of academic researchers from marketing, information systems, computer science, mathematics and other related fields. Aiming to provide a picture of the state of the art in this field, the present research systematically searches for and reviews the literature on SEA, analyses and structures them, and provides directions for future research. We searched extensively and collected 97 journal papers on SEA published in 64 journals from different disciplines and analysed them to answer our research questions. Using systematic mapping approach, this research has identified research topics (ten categories of topics were identified and visualised in a graphical representation), research approaches, nature of research and the interdependencies between them. The research also has identified directions for future research.", "num_citations": "3\n", "authors": ["1468"]}
{"title": "Aligning service requirements with business strategy: A proposed stakeholder value model for SOA\n", "abstract": " Value-based requirements engineering plays a critical role in software development because it seeks to align requirements with the organizational strategy that drives business value. This chapter discusses the value proposition of service-oriented architectures and proposes a value-based decision mechanism for requirements engineering for service-oriented systems. In doing so, it lays the groundwork for future research into the important but relatively unexplored area of service-oriented requirements engineering.", "num_citations": "3\n", "authors": ["1468"]}
{"title": "Preparing IT professionals for the knowledge economy\n", "abstract": " This paper reports the results of an empirical examination of a learning tool aimed at stimulating creative and innovative performance of IT students. The tool is based on a brainstorming method that provides students with external stimuli and exposes them to a large number of ideas over a short period of time. An empirical test was conducted using students from a software development course. The results of this study indicate that application of the tool significantly improves participants' creative performance. In particular, interaction with the tool resulted in a significant increase in the originality of ideas generated without affecting their relevance and workability.", "num_citations": "3\n", "authors": ["1468"]}
{"title": "Investigating Post-Outsourcing Decisions: Using the Intellectual Capital View\n", "abstract": " Over the last 30 years, IT outsourcing has become an enormous industry, and it continues to grow today. Over this period, outsourcing has matured and become widespread; this change has meant that for many managers, outsourcing questions have shifted from \u201cWhether or not I should outsource?\u201d to \u201cWhat should I do when the outsourcing contract is about to expire/be terminated?\u201d This study presents multiple case studies of the post-outsourcing decisions faced by two companies operating in Australia and begins the process of understanding this new class of outsourcing decisions. The study identifies the factors considered during post-outsourcing decisions and their interrelationship. The findings show that the factors affecting post-outsourcing decisions are of a combination of initial outsourcing decision factors and experience factors with the previous vendor. Several factors that were important in the\u00a0\u2026", "num_citations": "2\n", "authors": ["1468"]}
{"title": "Factors Affecting the Success of Businesses in Effective Utilization of Search Engine Advertising\n", "abstract": " The innovation of Search Engine Advertising (SEA) has become a prominent source of revenue for search engine companies, as well as an effective method for businesses (also referred to in this paper as \u2018advertisers\u2019) to promote their visibility on the Web. However, SEA is a complex and dynamic form of advertising and managing it effectively is a challenge for businesses. SEA is not necessarily a successful venture for all businesses that adopt it. It is therefore important to know the enablers for the successful and effective adoption of SEA. In this paper, we first explore, analyze and synthesize SEA literature to identify factors that influence the success of businesses in exploiting search engine advertising as an advertising tool. Then, based on the inputs and evidence from the literature review, along with insights from Resource-based theory, we propose a context specific conceptual model of factors that contribute to the success and effectiveness of businesses in utilizing SEA. We also identify directions for future research.", "num_citations": "2\n", "authors": ["1468"]}
{"title": "Empowering the User in Product Design with Virtual Reality\n", "abstract": " Positive empowerment of users through their simultaneous involvement in decisionmaking whilst a product is being created is a novel approach that has promising potentials. This involves the use of collaborative design combined with emerging interactive virtual environment technologies. The present paper illustrates a process model that addresses the development of an end-user involvement model. The objective of this paper is to describe a study that investigates the involvement of endusers in product design in order to improve the overall effectiveness of the process of designing, and aims to develop tools that allow collaborative interactive 3D designing capabilities for all stakeholders (ie end-users, professional designers, and product retail companies). An overview of the theoretical framework of the study will be presented in the hope to widen the debate as to the merit of such research and possible means\u00a0\u2026", "num_citations": "2\n", "authors": ["1468"]}
{"title": "Planning an Empirical Experiment To Evaluate The Effects Of Pair Work On The Design Phase Of The Software Lifecycle\n", "abstract": " This report presents the details of an empirical experiment designed to evaluate the effects of Pair Work on the design phase of software development lifecycle. The experiment is designed to investigate the effects of pair work on the quality of design products and whether the pair work approach in the design process is more efficient or cost effective than individual work approach. The aims of the experiment are to compare the quality of the design products produced by pair designers and individual designers as well as compare the efficiency and cost effectiveness of the pair work approach and the individual work approaches in the design process. In addition, the experiment studies the partner's expectations and practices during the pair work experience. The experimental hypotheses, design, inputs, outputs, and evaluation measures will be described.", "num_citations": "2\n", "authors": ["1468"]}
{"title": "A comparative study of two knowledge discovery tools: barchart versus scatterplot\n", "abstract": " This paper reports the results of an empirical examination of the effectiveness of two knowledge discovery tools (barchart and scatterplot) in the context of a sales forecasting task. The main results of the study indicate that both tools were reasonably suitable for well conveying associations among task variables and offering improvements in prediction accuracy when compared to a naive predictor. There is however, still much ground for improvement towards a theoretical optimal case. In addition, findings show that a scatterplot was significantly more beneficial than a barchart in enhancing forecasters\u2019 knowledge and performance of the task. This superiority can be potentially explained in terms of the favorable aspects of Cartesian graphs and the greater concentration required for using the tool. 1 Introduction Experts predict that the turbulence brought about by mega trends of globalisation, digitalisation and transformation will continue to increase over the next few decades, the complexity of business will be even higher, and uncertainty worse than ever [32, 37]. Ongoing economic, technical and social transformations place enormous pressure on organisations survive the new-age economy [14, 36]. Knowledge management is an emergent response to the need to accelerate both the creation and application of knowledge for successful competitive advantage. Various disciplines are contributing to academic literature on knowledge management [13, 15]. The common task of all is to determine best ways to cultivate, nurture and exploit knowledge at both individual and collective levels.", "num_citations": "2\n", "authors": ["1468"]}
{"title": "An Empirical Study of a Knowledge Discovery Tool\n", "abstract": " This paper addresses knowledge discovery This paper reports the results of an empirical investigation of the effectiveness of a KKD tool in supporting users in extracting knowledge from data using time series and trend analysis. The results obtained clearly show that people are capable of extracting knowledge using this technology, but they also indicate that there is still room for improvement. Hence, more research is needed in this area to achieve increased efficiency.", "num_citations": "2\n", "authors": ["1468"]}
{"title": "An evaluation criterion for open source software projects: enhancement process effectiveness\n", "abstract": " Enhancement process is a key process in which open source software (OSS) project responds to user needs in terms of suggesting and implementing software features, thus the dimension of enhancement effectiveness corresponds nicely to adopters\u2019 concern about open source software. This study aims to construct a valid, reliable measurement model for the enhancement process effectiveness in an open source environment. We examine the validity and reliability of an initial list of indicators through two rounds of data collection and analysis from 240 and 750 OSS projects respectively, and come up with a measurement model for the effectiveness of enhancement process comprising four indicators. The implication of this measurement model for practitioners is explained through a numerical example followed by implications for research community.", "num_citations": "1\n", "authors": ["1468"]}
{"title": "A framework to represent antecedents of user interest in open-source software projects\n", "abstract": " Victoria University acknowledges, recognises and respects the Ancestors, Elders and families of the Boonwurrung, Wadawurrung and Wurundjeri of the Kulin who are the traditional owners of University land in Victoria, and the Gadigal and Guring-gai of the Eora Nation who are the traditional owners of University land in Sydney.", "num_citations": "1\n", "authors": ["1468"]}
{"title": "Description of an empirical experiment to measure effects of pair work on the design phase.\n", "abstract": " DESCRIPTION OF AN EMPIRICAL EXPERIMENT TO MEASURE EFFECTS OF PAIR WORK ON THE DESIGN PHASE Hiyam Al-Kilidar1 , Ross Jeffery1, 3 , Aybuke Aurum2 1 School of Computer Science and Engineering 2 School of Information Systems, Technology and Management University of New South Wales, Sydney, NSW, 2052 Australia {hiyama | rossj @cse.unsw.edu.au}, aybuke@unsw.edu.au 3 National ICT Australia, NSW 1430 Abstract This paper presents a description of an empirical experiment into the effects of pair work on the design phase of the software development lifecycle. The aims of the experiment are to compare the quality of the design products produced by pair designers and individual designers as well as compare the efficiency and cost effectiveness of the pair work and the individual work paradigms in the design process. In addition, the experiment studies the partners expectations \u2026", "num_citations": "1\n", "authors": ["1468"]}