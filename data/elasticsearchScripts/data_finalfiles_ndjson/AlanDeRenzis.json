{"title": "Microservices identification through interface analysis\n", "abstract": " The microservices architectural style is gaining more and more momentum for the development of applications as suites of small, autonomous, and conversational services, which are then easy to understand, deploy and scale. One of today\u2019s problems is finding the adequate granularity and cohesiveness of microservices, both when starting a new project and when thinking of transforming, evolving and scaling existing applications. To cope with these problems, the paper proposes a solution based on the semantic similarity of foreseen/available functionality described through OpenAPI specifications. By leveraging a reference vocabulary, our approach identifies potential candidate microservices, as fine-grained groups of cohesive operations (and associated resources). We compared our approach against a state-of-the-art tool, sampled microservices-based applications and decomposed a large dataset\u00a0\u2026", "num_citations": "81\n", "authors": ["2214"]}
{"title": "Case-based reasoning for web service discovery and selection\n", "abstract": " Web Service discovery and selection deal with the retrieval of the most suitable Web Service, given a required functionality. Addressing an effective solution remains difficult when only functional descriptions of services are available. In this paper, we propose a solution by applying Case-based Reasoning, in which the resemblance between a pair of cases is quantified through a similarity function. We show the feasibility of applying Case-based Reasoning for Web Service discovery and selection, by introducing a novel case representation, learning heuristics and three different similarity functions. We also experimentally validate our proposal with a dataset of 62 real-life Web Services, achieving competitive values in terms of well-known Information Retrieval metrics.", "num_citations": "32\n", "authors": ["2214"]}
{"title": "A domain independent readability metric for web service descriptions\n", "abstract": " Web Services are influencing most IT-based industries as the basic building block of business infrastructures. A Web Service has an interface described in a machine-processable format (specifically WSDL). Service providers expose their services by publishing the corresponding WSDL documents. Service consumers can learn about service capability and how to interact with the services. Service descriptions (WSDL documents) should be ideally understood easily by service stakeholders so that the process of consuming services is simplified. In this work we present a practical metric to quantify readability in WSDL documents \u2013 attending to their semantics by using WordNet as the underlying concept hierarchy. In addition, we propose a set of best practices to be used during the development of WSDL documents to improve their readability. To validate our proposals, we performed both qualitative and quantitative\u00a0\u2026", "num_citations": "21\n", "authors": ["2214"]}
{"title": "Semantic-structural assessment scheme for integrability in service-oriented applications\n", "abstract": " This work improves a novel Service Selection Method for the development of Service-Oriented Applications in the context of the Service-Oriented Computing (SOC) paradigm. We have defined a Semantic-Structural Scheme to assess Web Services on Interface Compatibility exploring the available information from WSDL documents. The structural information involves data types from return, parameters and exceptions. The semantic information concerns identifiers from parameters and operation names. The lexical database WordNet is used as a semantic basis. Two appraisal values were defined: compatibility gap and adaptability gap. The former is centered on functional aspects. The latter explains the adaptation effort to a successful integration. We validated those appraisals values through different experiments with a data-set of 465 real-life Web Services and measured the results using three metrics from the\u00a0\u2026", "num_citations": "19\n", "authors": ["2214"]}
{"title": "A structural-semantic web service selection approach to improve retrievability of web services\n", "abstract": " Service-Oriented Computing promotes building applications by consuming and reusing Web Services. However, the selection of adequate Web Services given a client application is still a major challenge. The effort of assessing and adapting candidate services could be overwhelming due to the \u201cimpedance\u201d of Web Service interfaces expected by clients versus the actual interfaces of retrieved Web Services. In this work, we present a novel structural-semantic approach to help developers in the retrieval and selection of services from a service registry. The approach is based on a comprehensive structural scheme for service Interface Compatibility analysis, and WordNet as the semantic support to assess identifiers of operations and parameters. We also empirically analyze, compare and contrast the performance of three service selection methods: a pure structural approach, a pure semantic approach, and\u00a0\u2026", "num_citations": "14\n", "authors": ["2214"]}
{"title": "Blockchain and cryptocurrency: A comparative framework of the main architectural drivers\n", "abstract": " Blockchain is a decentralized transaction and data management solution, the technological weapon-of-choice behind the success of Bitcoin and other cryptocurrencies. As the number and variety of existing blockchain implementations continues to increase, adopters should focus on selecting the best one to support their decentralized applications (dApps), rather than developing new ones from scratch. In this paper we present a framework to aid software architects, developers, tool selectors and decision makers to adopt the right blockchain technology for their problem at hand. The framework exposes the correlation between technological decisions and architectural features, capturing the knowledge from existing industrial products, technical forums/blogs, experts' feedback and academic literature; plus our own experience using and developing blockchain-based applications. We validate our framework by applying it to dissect the most outstanding blockchain platforms, i.e., the ones behind the top 10 cryptocurrencies apart from Bitcoin. Then, we show how we applied it to a real-world case study in the insurtech domain.", "num_citations": "11\n", "authors": ["2214"]}
{"title": "B\u00fasqueda de Servicios para Asistir en el Desarrollo de una L\u00ednea de Productos de Software\n", "abstract": " El desarrollo de L\u00edneas de Productos de Software (LPS) es un paradigma de desarrollo basado en reuso muy vigente en la actualidad. Este paradigma plantea la existencia de una base com\u00fan de funcionalidades definidas para un dominio particular de la cual se pueden instanciar productos con caracter\u00edsticas similares. Estas funcionalidades pueden ser comunes a todos los productos o variar seg\u00fan las necesidades espec\u00edficas de un producto particular. Existe un gran numero de procesos de desarrollo definidos para el desarrollo de LPS que buscan reducir tiempo y esfuerzo. Para esta tarea los recursos sem\u00e1nticos, como las taxonom\u00edas, permiten organizar estos servicios para asistir en el desarrollo de nuevas funcionalidades y la instanciaci\u00f3n de nuevos productos. A medida que una LPS crece estos recursos sem\u00e1nticos tambi\u00e9n crecen y se vuelven mas dif\u00edciles de explorar, haciendo que su utilidad disminuya. Este trabajo propone un proceso de selecci\u00f3n asistida de servicios que permita reducir o eliminar este problema. Este proceso ha sido instanciado en el contexto de una LPS cuyo desarrollo se baso en una taxonom\u00eda de servicios derivada de est\u00e1ndares geogr\u00e1ficos y fue validado mediante evaluaci\u00f3n experimental con expertos en el \u00e1rea.", "num_citations": "5\n", "authors": ["2214"]}
{"title": "Assessing Web Services interfaces with lightweight semantic basis\n", "abstract": " In the last years, Web Services have become the technological choice to materialize the Service-Oriented Computing paradigm. However, a broad use of Web Services requires efficient approaches to allow service consumption from within applications. Currently, developers are compelled to search for suitable services mainly by manually exploring Web catalogs, which usually show poorly relevant information, than to provide the adequate\" glue-code\" for their assembly. This implies a large effort into discovering, selecting and adapting services. To overcome these challenges, this paper presents a novel Web Service Selection Method. We have defined an Interface Compatibility procedure to assess structural-semantic aspects from functional specifications-in the form of WSDL documents-of candidate Web Services. Two different semantic basis have been used to define and implement the approach: WordNet, a widely known lexical dictionary of the English language; and DISCO, a database which indexes co-occurrences of terms in very large text collections. We performed a set of experiments to evaluate the approach regarding the underlying semantic basis and against third-party approaches with a data-set of real-life Web Services. Promising results have been obtained in terms of well-known metrics of the Information Retrieval field.", "num_citations": "2\n", "authors": ["2214"]}
{"title": "Assessing readability of Web service interfaces\n", "abstract": " A Web Service has an interface described in a machine-processable format (specifically WSDL). Service providers expose their services by publishing their WSDL documents. Service consumers can learn about service capability and how to interact with the services. Service descriptions (WSDL documents) should be ideally understood easily by service stakeholders so that the process of consuming services is simplified. In this work we present a practical metric to quantify readability in WSDL documents. We adapted and extended an existing semantic readability metric to focus on WSDL documents by using WordNet as the underlying concept hierarchy. Finally, we performed a qualitative experiment: a controlled survey with a group of service consumers. The results showed that consumers (software engineers) required less time and effort to analyze WSDL documents with higher readability values.", "num_citations": "2\n", "authors": ["2214"]}
{"title": "Classification-based Mining of Reusable Components on Software Product Lines\n", "abstract": " Software Product Lines and Component-based systems can be combined to maximize reuse in a predictable and opportunistic manner. When a product line is built for a certain subdomain within a more generic domain, future needs from a closely subdomain may be fulfilled by mining the line's internal components to build a new product line. In this work, we present an approach to classify internal and external (third party) reusable components into a repository, by applying a K-Nearest Neighbors strategy, as a support for building new product lines. Natural language techniques and the WordNet lexical database are also used to process information from software components. We validate the approach with an experiment based in a dataset of external third-party components and reusable components from a product line that we built in the geographic subdomain of marine ecology.", "num_citations": "2\n", "authors": ["2214"]}
{"title": "Lightweight Semantic based Approach to Assess Readability of Web Service Interfaces\n", "abstract": " A Web Service has an interface described in a machine-processable format (specifically WSDL). Service providers expose their services by publishing their WSDL documents. Service consumers can learn about service capabilities and how to interact with services. Service descriptions (WSDL documents) should be ideally understood easily by service stakeholders so that the process of consuming services is simplified. In this work we present a practical metric to quantify readability in WSDL documents. We adapted and extended an existing ontology-based semantic readability metric to focus on WSDL documents by using WordNet as a lightweight concept hierarchy. We have validated our approach by performing both qualitative and quantitative experiments. The first one consists of a controlled survey with a group of service consumers. The results showed that consumers (software engineers) required less time and effort to analyze WSDL documents with higher readability values. The second experiment compares our approach with two ontology-based approaches. The third experiment compares the readability values of a dataset of real- life service descriptions before and after rewriting them. The results showed the effectiveness of our approach to assess readability of Web Services interfaces.", "num_citations": "1\n", "authors": ["2214"]}
{"title": "Reuso orientado a servicios: mejoras en evaluaci\u00f3n y testing\n", "abstract": " El reuso de artefactos software brinda oportunidades para proveedores y clientes, tanto para acelerar el proceso de desarrollo de software como para establecer oferta de productos reusables. El paradigma de Computaci\u00f3n Orientada a Servicios (SOC), promueve el desarrollo de aplicaciones distribuidas en ambientes heterog\u00e9neos, que son construidas ensamblando o componiendo servicios reusables, que se publican a trav\u00e9s de una red y se acceden mediante protocolos espec\u00edficos. SOC ha sido ampliamente adoptado bajo su implementaci\u00f3n con la tecnolog\u00eda de Servicios Web, que provee flexibilidad de ejecuci\u00f3n remota que oculta las plataformas espec\u00edficas de ejecuci\u00f3n y permite descentralizar los procesos de negocios. SOC requiere la publicaci\u00f3n de servicios en un registro (UDDI de acuerdo a Servicios Web), los cuales luego son identificados y evaluados para una aplicaci\u00f3n en desarrollo. Sin embargo, a\u00fan este proceso necesita m\u00e9todos exhaustivos y eficientes, tanto para identificaci\u00f3n como para selecci\u00f3n de servicios, en el cual se puede considerar la aplicaci\u00f3n de t\u00e9cnicas de Pruebas de Software y el uso de dos conceptos actuales: Orquestaci\u00f3n y Coreograf\u00eda de servicios.", "num_citations": "1\n", "authors": ["2214"]}
{"title": "Avances en reuso orientado a servicios\n", "abstract": " El reuso de artefactos software brinda oportunidades para proveedores y clientes, tanto para acelerar el proceso de desarrollo de software como para establecer oferta de productos reusables. El paradigma de Computaci\u00f3n Orientada a Servicios (SOC), promueve el desarrollo de aplicaciones distribuidas en ambientes heterog\u00e9neos, que son construidas ensamblando o componiendo servicios reusables, que se publican a trav\u00e9s de una red y se acceden mediante protocolos espec\u00edficos. SOC ha sido ampliamente adoptado bajo su implementaci\u00f3n con la tecnolog\u00eda de Servicios Web, que provee flexibilidad de ejecuci\u00f3n remota que oculta las plataformas espec\u00edficas de ejecuci\u00f3n y permite descentralizar los procesos de negocios. SOC requiere la publicaci\u00f3n de servicios en un registro (UDDI de acuerdo a Servicios Web), los cuales luego son identificados y evaluados para una aplicaci\u00f3n en desarrollo. Sin embargo, a\u00fan este proceso necesita m\u00e9todos exhaustivos y eficientes, tanto para identificaci\u00f3n como para selecci\u00f3n de servicios, en el cual se puede considerar la aplicaci\u00f3n de t\u00e9cnicas de Pruebas de Software y el uso de dos conceptos actuales: Orquestaci\u00f3n y Coreograf\u00eda de servicios.", "num_citations": "1\n", "authors": ["2214"]}
{"title": "A Software Tool for Selection and Integrability on Service Oriented Applications\n", "abstract": " Connecting services to rapidly developing service-oriented applications is a challenging issue. Selection of adequate services implies to face an overwhelming assessment effort, even with a reduced set of candidate services. On previous work we have presented an approach for service selection addressing the assessment of WSDL interfaces and the expected execution behavior of candidate services. In this paper we present a plugin for the Eclipse IDE to support the approach and to assist developers\u2019 daily tasks on exploring services integrability. Particularly for behavioral compatibility we make use of two testing frameworks: JUnit and MuClipse to achieve a compliance testing strategy.", "num_citations": "1\n", "authors": ["2214"]}
{"title": "Testing-based Behavioral Assessment for Service Selection\n", "abstract": " Building Service-oriented Applications implies the selection of adequate services to fulfill required functionality. Even a reduced set of candidate services involves an overwhelming assessment effort. In a previous work we have presented an approach to assist developers in the selection of Web Services. In this paper we detail its behavioral assessment procedure, which is based on compliance testing. This is done by a specific Behavioral Test Suite for exposing required messages interchange from/to a client application and a Web Service. In addition, helpful information takes shape to build the needed adaptation logic to safely integrate the selected candidate into a Service-oriented Application. A concise case study shows the potential of this approach for both selection and integration of a service among a set of candidates.", "num_citations": "1\n", "authors": ["2214"]}