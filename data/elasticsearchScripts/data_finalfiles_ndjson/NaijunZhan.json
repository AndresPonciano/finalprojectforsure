{"title": "Computing semi-algebraic invariants for polynomial dynamical systems\n", "abstract": " In this paper, we consider an extended concept of invariant for polynomial dynamical systems (PDSs) with domain and initial condition, and establish a sound and complete criterion for checking semi-algebraic invariants (SAIs) for such PDSs. The main idea is encoding relevant dynamical properties as conditions on the high order Lie derivatives of polynomials occurring in the SAI. A direct consequence of this criterion is a relatively complete method of SAI generation based on template assumption and semi-algebraic constraint solving. Relative completeness means if there is an SAI in the form of a predefined template, then our method can indeed find one.", "num_citations": "115\n", "authors": ["1767"]}
{"title": "A calculus for hybrid CSP\n", "abstract": " Hybrid Communicating Sequential Processes (HCSP) is an extension of CSP allowing continuous dynamics. We are interested in applying HCSP to model and verify hybrid systems. This paper is to present a calculus for a subset of HCSP as a part of our efforts in modelling and verifying hybrid systems. The calculus consists of two parts. To deal with continuous dynamics, the calculus adopts differential invariants. A brief introduction to a complete algorithm for generating polynomial differential invariants is presented, which applies DISCOVERER, a symbolic computation tool for semi-algebraic systems. The other part of the calculus is a logic to reason about HCSP process, which involves communication, parallelism, real-time as well as continuous dynamics. This logic is named as Hybrid Hoare Logic. Its assertions consist of traditional pre- and post-conditions, and also Duration Calculus formulas to record\u00a0\u2026", "num_citations": "99\n", "authors": ["1767"]}
{"title": "Discovering non-linear ranking functions by solving semi-algebraic systems\n", "abstract": " Differing from [6] this paper reduces non-linear ranking function discovering for polynomial programs to semi-algebraic system solving, and demonstrates how to apply the symbolic computation tools, DISCOVERER and QEPCAD, to some interesting examples.", "num_citations": "81\n", "authors": ["1767"]}
{"title": "Formal Verification of Simulink/Stateflow Diagrams\n", "abstract": " Our modern life increasingly depends on embedded systems. How to develop complex embedded systems correctly is a grand challenge for computer science and control theory. The model-based method is thought to be an effective approach to the design of complex embedded systems. Using this approach at the very beginning, an abstract model of the system to be developed is defined. Extensive analysis and verification on the abstract model are then committed so that errors can be identified and corrected at the very early stage. Then the higher-level abstract model is refined to a lower-level abstract model, even to source code, step by step, using model transformation techniques.Model-based design is supported by Simulink/Stateflow (S/S) and has been widely adopted in the industry. Simulink is an environment for the model-based analysis and design of embedded control systems, which offers an intuitive\u00a0\u2026", "num_citations": "68\n", "authors": ["1767"]}
{"title": "Barrier certificates revisited\n", "abstract": " A barrier certificate can separate the state space of a considered hybrid system (HS) into safe and unsafe parts according to the safety property to be verified. Therefore this notion has been widely used in the verification of HSs. A stronger condition on barrier certificates (BCs) means that fewer BCs can be synthesized, as the expressiveness of synthesized BCs is weaker. On the other hand, synthesizing more expressive BCs normally means higher complexity. Kong et al. (2013a) investigated how to relax the condition of BCs while still keeping their convexity so that one can synthesize more expressive BCs efficiently using semi-definite programming (SDP). In this paper, we first discuss how to relax the condition of BCs in a general way, while still keeping their convexity. Thus, one can utilize different weaker conditions flexibly to synthesize different kinds of BCs with more expressiveness efficiently using SDP, which\u00a0\u2026", "num_citations": "57\n", "authors": ["1767"]}
{"title": "Recent advances in program verification through computer algebra\n", "abstract": " In this paper, we summarize the results on program verification through semi-algebraic systems (SASs) solving that we have obtained, including automatic discovery of invariants and ranking functions, symbolic decision procedure for the termination of a class of linear loops, termination analysis of nonlinear systems, and so on.", "num_citations": "57\n", "authors": ["1767"]}
{"title": "Verifying Chinese train control system under a combined scenario by theorem proving\n", "abstract": " In this paper, we investigate how to formalize and verify the System Requirements Specification (SRS) of Chinese Train Control System Level 3 (CTCS-3), which includes a set of basic operational scenarios that cooperate with each other to achieve the desired behavior of trains. It is absolutely necessary to prove that the cooperation of basic scenarios indeed completes the required behavior. As a case study, a combined scenario with several basic scenarios integrated is studied in this paper. We model each scenario as a Hybrid CSP (HCSP) process, and specify its properties using Hybrid Hoare Logic (HHL). Given such an annotated HCSP model, the deductive verification of conformance of the model to the properties is then carried out. For the purpose, we implement a theorem prover of HHL in Isabelle/HOL, with which the process including modelling and verification of annotated HCSP models can be\u00a0\u2026", "num_citations": "56\n", "authors": ["1767"]}
{"title": "Verifying simulink diagrams via a hybrid hoare logic prover\n", "abstract": " Simulink is an industrial de-facto standard for building executable models of embedded systems and their environments, facilitating validation by simulation. Due to the inherent incompleteness of this form of system validation, complementing simulation by formal verification would be desirable. A prerequisite for such an approach is a formal semantics of Simulink's graphical models. In this paper, we show how to encode Simulink diagrams into Hybrid CSP (HCSP), a formal modelling language encoding hybrid system dynamics by means of an extension of CSP. The translation from Simulink to HCSP is fully automatic. We furthermore discuss how to utilize a Hybrid Hoare Logic Prover to verify the translated HCSP models. We demonstrate our approach on a combined scenario originating from the Chinese High-speed Train Control System at Level 3 (CTCS-3).", "num_citations": "52\n", "authors": ["1767"]}
{"title": "Generating polynomial invariants with DISCOVERER and QEPCAD\n", "abstract": " This paper investigates how to apply the techniques on solving semi-algebraic systems to invariant generation of polynomial programs. By our approach, the generated invariants represented as a semi-algebraic system are more expressive than those generated with the well-established approaches in the literature, which are normally represented as a conjunction of polynomial equations. We implement this approach with the computer algebra tools DISCOVERER and QEPCAD. We also explain, through the complexity analysis, why our approach is more efficient and practical than the one of [17] which directly applies first-order quantifier elimination.", "num_citations": "49\n", "authors": ["1767"]}
{"title": "An improved HHL prover: an interactive theorem prover for hybrid systems\n", "abstract": " Hybrid systems are integrations of discrete computation and continuous physical evolution. To guarantee the correctness of hybrid systems, formal techniques on modelling and verification of hybrid systems have been proposed. Hybrid CSP (HCSP) is an extension of CSP with differential equations and some forms of interruptions for modelling hybrid systems, and Hybrid Hoare logic (HHL) is an extension of Hoare logic for specifying and verifying hybrid systems that are modelled using HCSP. In this paper, we report an improved HHL prover, which is an interactive theorem prover based on Isabelle/HOL for verifying HCSP models. Compared with the prototypical release in\u00a0[22], the new HHL prover realises the proof system of HHL as a shallow embedding in Isabelle/HOL, rather than deep embedding in\u00a0[22]. In order to contrast the new HHL prover in shallow embedding and the old one in deep embedding\u00a0\u2026", "num_citations": "46\n", "authors": ["1767"]}
{"title": "Formal verification of quantum algorithms using quantum hoare logic\n", "abstract": " We formalize the theory of quantum Hoare logic (QHL) [TOPLAS 33(6),19], an extension of Hoare logic for reasoning about quantum programs. In particular, we formalize the syntax and semantics of quantum programs in Isabelle/HOL, write down the rules of quantum Hoare logic, and verify the soundness and completeness of the deduction system for partial correctness of quantum programs. As preliminary work, we formalize some necessary mathematical background in linear algebra, and define tensor products of vectors and matrices on quantum variables. As an application, we verify the correctness of Grover\u2019s search algorithm. To our best knowledge, this is the first time a Hoare logic for quantum programs is formalized in an interactive theorem prover, and used to verify the correctness of a nontrivial quantum algorithm.", "num_citations": "45\n", "authors": ["1767"]}
{"title": "Formal verification of simulink/stateflow diagrams\n", "abstract": " Simulink is an industrial de-facto standard for building executable models of control systems and their environments. Stateflow is a toolbox used to model reactive systems via hierarchical statecharts within a Simulink model, extending Simulink\u2019s scope to event-driven and hybrid forms of embedded control. In safety-critical control systems, exhaustive coverage of system dynamics by formal verification would be desirable, being based on a formal semantics of combined Simulink/Stateflow graphical models. In our previous work, we addressed the problem of formal verification of pure Simulink diagrams via an encoding into HCSP, a formal modelling language encoding hybrid system dynamics by means of an extension of CSP. In this paper, we extend the approach to cover Simulink models containing Stateflow components also. The transformation from Simulink/Stateflow to HCSP is fully automatic, and the\u00a0\u2026", "num_citations": "45\n", "authors": ["1767"]}
{"title": "Program verification by using DISCOVERER\n", "abstract": " Recent advances in program verification indicate that various verification problems can be reduced to semi-algebraic system (SAS for short) solving. An SAS consists of polynomial equations and polynomial inequalities. Algorithms for quantifier elimination of real closed fields are the general method for those problems. But the general method usually has low efficiency for specific problems. To overcome the bottleneck of program verification with a symbolic approach, one has to combine special techniques with the general method. Based on the work of complete discrimination systems of polynomials [33,31],, we invented new theories and algorithms [32,30,35] for SAS solving and partly implemented them as a real symbolic computation tool in Maple named DISCOVERER. In this paper, we first summarize the results that we have done so far both on SAS-solving and program verification with DISCOVERER\u00a0\u2026", "num_citations": "43\n", "authors": ["1767"]}
{"title": "Symbolic decision procedure for termination of linear programs\n", "abstract": " Tiwari proved that the termination of a class of linear programs is decidable in Tiwari (Proceedings of CAV\u201904. Lecture notes in computer science, vol 3114, pp 70\u201382, 2004). The decision procedure proposed therein depends on the computation of Jordan forms. Thus, people may draw a wrong conclusion from this procedure, if they simply apply floating-point computation to compute Jordan forms. In this paper, we first use an example to explain this problem, and then present a symbolic implementation of the decision procedure. Thus, the rounding error problem is therefore avoided. Moreover, we also show that the symbolic decision procedure is as efficient as the numerical one given in Tiwari (Proceedings of CAV\u201904. Lecture notes in computer science, vol 3114, pp 70\u201382, 2004). The complexity of former is max{O(n                         6), O(n                         m+3)}, while that of the latter is O(n                         m+3\u00a0\u2026", "num_citations": "34\n", "authors": ["1767"]}
{"title": "Abstraction of elementary hybrid systems by variable transformation\n", "abstract": " Elementary hybrid systems (EHSs) are those hybrid systems (HSs) containing elementary functions such as exp, ln, sin, cos, etc. EHSs are very common in practice, especially in safety-critical domains. Due to the non-polynomial expressions which lead to undecidable arithmetic, verification of EHSs is very hard. Existing approaches based on partition of the state space or overapproximation of reachable sets suffer from state space explosion or inflation of numerical errors. In this paper, we propose a symbolic abstraction approach that reduces EHSs to polynomial hybrid systems (PHSs), by replacing all non-polynomial terms with newly introduced variables. Thus the verification of EHSs is reduced to the one of PHSs, enabling us to apply all the well-established verification techniques and tools for PHSs to EHSs. In this way, it is possible to avoid the limitations of many existing methods. We illustrate the\u00a0\u2026", "num_citations": "33\n", "authors": ["1767"]}
{"title": "Formal verification of a descent guidance control program of a lunar lander\n", "abstract": " We report on our recent experience in applying formal methods to the verification of a descent guidance control program of a lunar lander. The powered descent process of the lander gives a specific hybrid system (HS), i.e. a sampled-data control system composed of the physical plant and the embedded control program. Due to its high complexity, verification of such a system is very hard. In the paper, we show how this problem can be solved by several different techniques including simulation, bounded model checking (BMC) and theorem proving, using the tools Simulink/Stateflow, iSAT-ODE and Flow*, and HHL Prover, respectively. In particular, for the theorem-proving approach to work, we study the invariant generation problem for HSs with general elementary functions. As a preliminary attempt, we perform verification by focusing on one of the 6 phases, i.e. the slow descent phase, of the powered\u00a0\u2026", "num_citations": "31\n", "authors": ["1767"]}
{"title": "A higher-order duration calculus\n", "abstract": " In 1991, Zhou Chaochen, CAR Hoare and AP Ravn proposed a rst order interval logic called Duration Calculus (DC) which can specify real-time requirements of computing system. This paper investigates how real-time behaviour of programs can be described within this logical framework. In order to describe local variable declaration, quanti cations over program variables are inevitable, and therefore a higherorder DC is established in the paper. This higher-order DC has a complete proof system, if we assume nite variability of program variables.", "num_citations": "30\n", "authors": ["1767"]}
{"title": "Automatic verification of stability and safety for delay differential equations\n", "abstract": " Delay differential equations (DDEs) arise naturally as models of, e.g., networked control systems, where the communication delay in the feedback loop cannot always be ignored. Such delays can prompt oscillations and may cause deterioration of control performance, invalidating both stability and safety properties. Nevertheless, state-exploratory automatic verification methods have until now concentrated on ordinary differential equations (and their piecewise extensions to hybrid state) only, failing to address the effects of delays on system dynamics. We overcome this problem by iterating bounded degree interval-based Taylor overapproximations of the time-wise segments of the solution to a DDE, thereby identifying and automatically analyzing the operator that yields the parameters of the Taylor overapproximation for the next temporal segment from the current one. By using constraint solving for\u00a0\u2026", "num_citations": "28\n", "authors": ["1767"]}
{"title": "Generating non-linear interpolants by semidefinite programming\n", "abstract": " Interpolation-based techniques have been widely and successfully applied in the verification of hardware and software, e.g., in bounded-model checking, CEGAR, SMT, etc., in which the hardest part is how to synthesize interpolants. Various work for discovering interpolants for propositional logic, quantifier-free fragments of first-order theories and their combinations have been proposed. However, little work focuses on discovering polynomial interpolants in the literature. In this paper, we provide an approach for constructing non-linear interpolants based on semidefinite programming, and show how to apply such results to the verification of programs by examples.", "num_citations": "26\n", "authors": ["1767"]}
{"title": "Inner-approximating reachable sets for polynomial systems with time-varying uncertainties\n", "abstract": " In this paper, we propose a convex programming based method to address a long-standing problem of inner-approximating backward reachable sets of state-constrained polynomial systems subject to time-varying uncertainties. The backward reachable set is a set of states, from which all trajectories starting will surely enter a target region at the end of a given time horizon without violating a set of state constraints in spite of the actions of uncertainties. It is equal to the zero sublevel set of the unique Lipschitz viscosity solution to a Hamilton-Jacobi partial differential equation (HJE). We show that inner approximations of the backward reachable set can be formed by zero sublevel sets of its viscosity supersolutions. Consequently, we reduce the inner-approximation problem to a problem of synthesizing polynomial viscosity supersolutions to this HJE. Such a polynomial solution in our method is synthesized by solving a\u00a0\u2026", "num_citations": "24\n", "authors": ["1767"]}
{"title": "Safe over-and under-approximation of reachable sets for delay differential equations\n", "abstract": " Delays in feedback control loop, as induced by networked distributed control schemes, may have detrimental effects on control performance. This induces an interest in safety verification of delay differential equations (DDEs) used as a model of embedded control. This article explores reachable-set computation for a class of DDEs featuring a local homeomorphism property. This topological property facilitates construction of over- and under-approximations of their full reachable sets by performing reachability analysis on the boundaries of their initial sets, thereby permitting an efficient lifting of reach-set computation methods for ODEs to DDEs. Membership in this class of DDEs is determined by conducting sensitivity analysis of the solution mapping with respect to the initial states to impose a bound constraint on the time-lag term. We then generalize boundary-based reachability analysis to such DDEs. Our\u00a0\u2026", "num_citations": "24\n", "authors": ["1767"]}
{"title": "Behavior modeling and verification of movement authority scenario of Chinese train control system using AADL\n", "abstract": " Train control systems like most digital controllers are, by definition, hybrid systems as they interact with or try to control some aspects of the physical world. Detailed behavior modeling with constraints specification and formal verification, required for reliability prediction, is a great challenge for hybrid system designers. Train control systems further intensify this challenge with extensive interaction between computing units and their physical environment and their mutual dependence on each other. In this paper, we investigate behavior modeling and formal verification of Chinese Train Control System Level 3 (CTCS-3) using Architectural Analysis & Design Language (AADL) to cope with this challenge. AADL is an architecture description language for embedded systems and is based on model-based engineering paradigm. Along with structural modeling of embedded systems using the core language\u00a0\u2026", "num_citations": "24\n", "authors": ["1767"]}
{"title": "Reachability analysis for solvable dynamical systems\n", "abstract": " The reachability problem is one of the most important issues in the verification of hybrid systems. But unfortunately the reachable sets for most of hybrid systems are not computable. In the literature, only some special families of linear vector fields are proved with decidable reachability problem, let alone nonlinear ones. In this paper, we investigate the reachability problem of nonlinear vector fields by identifying three families of nonlinear vector fields with solvability and prove that their reachability problems are decidable. An n-dimension dynamical system is called solvable if its state variables can be partitioned into m groups such that the derivatives of the variables in the ith group are linear in themselves, but possibly nonlinear in the variables from the 1st to i-1th groups. The three families of nonlinear solvable vector fields under consideration are: the matrices corresponding to the linear parts of any vector field in\u00a0\u2026", "num_citations": "23\n", "authors": ["1767"]}
{"title": "Model checking conditional CSL for continuous-time Markov chains\n", "abstract": " In this paper, we consider the model-checking problem of continuous-time Markov chains (CTMCs) with respect to conditional logic. To the end, we extend Continuous Stochastic Logic introduced in Aziz et al. (2000) [1] to Conditional Continuous Stochastic Logic (CCSL) by introducing a conditional probabilistic operator. CCSL allows us to express a richer class of properties for CTMCs. Based on a parameterized product obtained from the CTMC and an automaton extracted from a given CCSL formula, we propose an approximate model checking algorithm and analyse its complexity.", "num_citations": "22\n", "authors": ["1767"]}
{"title": "Finding polynomial loop invariants for probabilistic programs\n", "abstract": " Quantitative loop invariants are an essential element in the verification of probabilistic programs. Recently, multivariate Lagrange interpolation has been applied to synthesizing polynomial invariants. In this paper, we propose an alternative approach. First, we fix a polynomial template as a candidate of a loop invariant. Using Stengle\u2019s Positivstellensatz and a transformation to a sum-of-squares problem, we find sufficient conditions on the coefficients. Then, we solve a semidefinite programming feasibility problem to synthesize the loop invariants. If the semidefinite program is unfeasible, we backtrack after increasing the degree of the template. Our approach is semi-complete in the sense that it will always lead us to a feasible solution if one exists and numerical errors are small. Experimental results show the efficiency of our approach.", "num_citations": "21\n", "authors": ["1767"]}
{"title": "Automatically discovering relaxed Lyapunov functions for polynomial dynamical systems\n", "abstract": " The notion of Lyapunov function plays a key role in the design and verification of dynamical systems, as well as hybrid and cyber-physical systems. In this paper, to analyze the asymptotic stability of a dynamical system, we generalize standard Lyapunov functions to relaxed Lyapunov functions (RLFs), by considering higher order Lie derivatives. Furthermore, we present a method for automatically discovering polynomial RLFs for polynomial dynamical systems (PDSs). Our method is relatively complete in the sense that it is able to discover all polynomial RLFs with a given predefined template for any PDS. Therefore it can also generate all polynomial RLFs for the PDS by enumerating all polynomial templates.", "num_citations": "21\n", "authors": ["1767"]}
{"title": "Validated simulation-based verification of delayed differential dynamics\n", "abstract": " Verification by simulation, based on covering the set of time-bounded trajectories of a dynamical system evolving from the initial state set by means of a finite sample of initial states plus a sensitivity argument, has recently attracted interest due to the availability of powerful simulators for rich classes of dynamical systems. System models addressed by such techniques involve ordinary differential equations (ODEs) and can readily be extended to delay differential equations (DDEs). In doing so, the lack of validated solvers for DDEs, however, enforces the use of numeric approximations such that the resulting verification procedures would have to resort to (rather strong) assumptions on numerical accuracy of the underlying simulators, which lack formal validation or proof. In this paper, we pursue a closer integration of the numeric solving and the sensitivity-related state bloating algorithms underlying\u00a0\u2026", "num_citations": "19\n", "authors": ["1767"]}
{"title": "Hybrid annex: An AADL extension for continuous behavior and cyber-physical interaction modeling\n", "abstract": " Correct design, and system-level dependability prediction of highly-integrated systems demand the collocation of requirements and architectural artifacts within an integrated development environment. Hybrid systems, having dependencies and extensive interactions between their control portion and their environment, further intensify this need.", "num_citations": "19\n", "authors": ["1767"]}
{"title": "Synthesizing switching controllers for hybrid systems by generating invariants\n", "abstract": " We extend a template-based approach for synthesizing switching controllers for semi-algebraic hybrid systems, in which all expressions are polynomials. This is achieved by combining a QE (quantifier elimination)-based method for generating invariants with a qualitative approach for predefining templates. Our synthesis method is relatively complete with regard to a given family of predefined templates. Using qualitative analysis, we discuss heuristics to reduce the numbers of parameters appearing in the templates. To avoid too much human interaction in choosing templates as well as the high computational complexity caused by QE, we further investigate applications of the SOS (sum-of-squares) relaxation approach and the template polyhedra approach in invariant generation, which are both supported by modern numerical solvers.", "num_citations": "19\n", "authors": ["1767"]}
{"title": "Decidability of the reachability for a family of linear vector fields\n", "abstract": " The reachability problem is one of the most important issues in the verification of hybrid systems. Computing the reachable sets of differential equations is difficult, although computing the reachable sets of finite state machines is well developed. Hence, it is not surprising that the reachability of most of hybrid systems is undecidable. In this paper, we identify a family of vector fields and show its reachability problem is decidable. The family consists of all vector fields whose state parts are linear, while input parts are non-linear, possibly with exponential expressions. Such vector fields are commonly used in practice.To the best of our knowledge, the family is one of the most expressive families of vector fields with a decidable reachability problem.The decidability is achieved by proving the decidability of the extension of Tarski\u2019s algebra with some specific exponential functions, which has been proved in [21, 22\u00a0\u2026", "num_citations": "17\n", "authors": ["1767"]}
{"title": "A \u201chybrid\u201d approach for synthesizing optimal controllers of hybrid systems: A case study of the oil pump industrial example\n", "abstract": " We propose an approach to reduce the optimal controller synthesis problem of hybrid systems to quantifier elimination; furthermore, we also show how to combine quantifier elimination with numerical computation in order to make it more scalable but at the same time, keep arising errors due to discretization manageable and within bounds. A major advantage of our approach is not only that it avoids errors due to numerical computation, but it also gives a better optimal controller. In order to illustrate our approach, we use the real industrial example of an oil pump provided by the German company HYDAC within the European project Quasimodo as a case study throughout this paper, and show that our method improves (up to 7.5%) the results reported in [4] based on game theory and model checking.", "num_citations": "17\n", "authors": ["1767"]}
{"title": "Program verification by reduction to semi-algebraic systems solving\n", "abstract": " The discovery of invariants and ranking functions plays a central role in program verification. In our previous work, we investigated invariant generation and non-linear ranking function discovering of polynomial programs by reduction to semi-algebraic systems solving. In this paper we will first summarize our results on the two topics and then show how to generalize the approach to discovering more expressive invariants and ranking functions, and applying to more general programs.", "num_citations": "15\n", "authors": ["1767"]}
{"title": "Robust invariant sets generation for state-constrained perturbed polynomial systems\n", "abstract": " In this paper we study the problem of computing robust invariant sets for state-constrained perturbed polynomial systems within the Hamilton-Jacobi reachability framework. A robust invariant set is a set of states such that every possible trajectory starting from it never violates the given state constraint, irrespective of the actual perturbation. The main contribution of this work is to describe the maximal robust invariant set as the zero level set of the unique Lipschitz-continuous viscosity solution to a Hamilton-Jacobi-Bellman (HJB) equation. The continuity and uniqueness property of the viscosity solution facilitates the use of existing numerical methods to solve the HJB equation for an appropriate number of state variables in order to obtain an approximation of the maximal robust invariant set. We furthermore propose a method based on semi-definite programming to synthesize robust invariant sets. Some illustrative\u00a0\u2026", "num_citations": "14\n", "authors": ["1767"]}
{"title": "Adding formal meanings to AADL with hybrid annex\n", "abstract": " AADL is a Model-Based Engineering language for architectural analysis and specification of real-time embedded systems with stringent performance requirements (e.g. fault-tolerance, security, safety-critical etc.). However, core AADL lacks of a mechanism for modeling continuous evolution of physical processes which are controlled by digital controllers. In our previous work, we have introduced Hybrid Annex\u2014an AADL extension for continuous behavior and cyber-physical interaction modeling based on Hybrid Communicating Sequential Processes (HCSP). In this paper, we present formal semantics of the synchronous subset of AADL models annotated with Hybrid Annex specifications using HCSP. The semantics are then used to verify correctness of AADL models (with Hybrid Annex specifications) using an in-house developed theorem prover \u2014 Hybrid Hoare Logic (HHL) prover.", "num_citations": "14\n", "authors": ["1767"]}
{"title": "An assume/guarantee based compositional calculus for hybrid CSP\n", "abstract": " Hybrid CSP (HCSP) extends CSP to describe interacting continuous and discrete dynamics. The concurrency with synchronous communications, timing constructs, interrupts, differential equations, and so on, make the behavior of HCSP difficult to specify and verify. In this paper, we propose a Hoare style calculus for reasoning about HCSP. The calculus includes Duration Calculus formulas to record process execution history and reason about real-time properties and continuous evolution, and dedicated predicate symbols to specify communication traces and readiness of process actions so that the composite constructs of HCSP can be handled compositionally by using assume/guarantee reasoning.", "num_citations": "14\n", "authors": ["1767"]}
{"title": "MARS: A toolchain for modelling, analysis and verification of hybrid systems\n", "abstract": " We introduce a toolchain MARS for Modelling, Analyzing and veRifying hybrid Systems we developed in the past years. Using MARS, we build executable models of hybrid systems using the industrial standard environment Simulink/Stateflow, which facilitates analysis by simulation. To complement simulation, formal verification of Simulink/Stateflow models is conducted in the toolchain via the following steps: first, we translate Simulink/Stateflow diagrams to Hybrid CSP (HCSP) processes by an automatic translator Sim2HCSP, where HCSP is an extension of CSP for formally modelling hybrid systems; second, to justify the translation, another automatic translator HCSP2Sim that translates from HCSP to Simulink is provided, so that the consistency between the original Simulink/Stateflow model and the translated HCSP formal model can be checked by co-simulation; then, the HCSP processes obtained in\u00a0\u2026", "num_citations": "13\n", "authors": ["1767"]}
{"title": "Computing reachable sets of linear vector fields revisited\n", "abstract": " The reachability problem is one of the most important issues in the verification of hybrid systems. But unfortunately the reachable sets for most of hybrid systems are not computable except for some special families. In our previous work, we identified a family of vector fields, whose state parts are linear with real eigenvalues, while input parts are exponential functions, and proved its reachability problem is decidable. In this paper, we investigate another family of vector fields, whose state parts are linear, but with pure imagine eigenvalues, while input parts are trigonometric functions, and prove its reachability problem is decidable also. To the best of our knowledge, the two families are the largest families of linear vector fields with a decidable reachability problem. In addition, we present an approach on how to abstract general linear dynamical systems to the first family. Comparing with existing abstractions for linear\u00a0\u2026", "num_citations": "13\n", "authors": ["1767"]}
{"title": "A formal proof of the rate monotonic scheduler\n", "abstract": " We formally prove Liu and Layland's classic theorem on the Rate Monotonic Scheduler in Duration Calculus, a real time interval temporal logic. We describe the assumption of the system, the scheduling policy, the requirement, i.e., service is met for the processes before their deadlines, all by Duration Calculus formulae. That a feasibility condition is sufficient is formalised as logical implication. By using the proof system of Duration Calculus, we formally prove that the feasibility condition due to Liu and Layland is sufficient.", "num_citations": "13\n", "authors": ["1767"]}
{"title": "Under-approximating reach sets for polynomial continuous systems\n", "abstract": " In this paper we suggest a method based on convex programming for computing semi-algebraic under-approximations of reach sets for polynomial continuous systems with initial sets being the zero sub-level set of a polynomial function. It is well-known that the reachable set can be formulated as the zero sub-level set of a value function to a Hamilton-Jacobi partial differential equation (HJE), and our approach in this paper consequently focuses on searching for approximate analytical polynomial solutions to associated HJEs, of which the zero sub-level sets converge to the exact reachable set from inside in measure, without discretizing the state space. Such approximate solutions can be computed via a classical hierarchy of convex programs consisting of linear matrix inequalities, which are constructed by sum-of-squares decomposition techniques. In contrast to traditional numerical methods approximately solving\u00a0\u2026", "num_citations": "12\n", "authors": ["1767"]}
{"title": "Taming delays in dynamical systems\n", "abstract": " Delayed coupling between state variables occurs regularly in technical dynamical systems, especially embedded control. As it consequently is omnipresent in safety-critical domains, there is an increasing interest in the safety verification of systems modelled by Delay Differential Equations (DDEs). In this paper, we leverage qualitative guarantees for the existence of an exponentially decreasing estimation on the solutions to DDEs as established in classical stability theory, and present a quantitative method for constructing such delay-dependent estimations, thereby facilitating a reduction of the verification problem over an unbounded temporal horizon to a bounded one. Our technique builds on the linearization technique of nonlinear dynamics and spectral analysis of the linearized counterparts. We show experimentally on a set of representative benchmarks from the literature that our technique indeed\u00a0\u2026", "num_citations": "11\n", "authors": ["1767"]}
{"title": "The opacity of real-time automata\n", "abstract": " Opacity is an important property on information flow to guarantee that a system under attack keeps its \u201csecrets\u201d, possibly subsets of traces (language-based opacity) or subsets of states (state-based opacity), opaque to the outside intruder with partial observability. In this paper, we investigate the opacity problems of real-time automata (RTA), which is a popular model for real-time systems. In order to prove that the language-opacity problem of RTA is decidable, we introduce the notion of trace-equivalence and then translate RTA into finite-state automata (FA) with timed alphabets. Besides, we also introduce the notions of partitioned timed alphabet and language to guarantee trace equivalence is preserved by complementation and product operations over FA with timed alphabets. Thus, our decision procedure can be sketched as follows: first, translate the RTA to model a system under attack and the RTA to specify\u00a0\u2026", "num_citations": "10\n", "authors": ["1767"]}
{"title": "What\u2019s to Come is Still Unsure\n", "abstract": " The possible interactions between a controller and its environment can naturally be modelled as the arena of a two-player game, and adding an appropriate winning condition permits to specify desirable behavior. The classical model here is the positional game, where both players can (fully or partially) observe the current position in the game graph, which in turn is indicative of their mutual current states. In practice, neither sensing or actuating the environment through physical devices nor data forwarding to and signal processing in the controller are instantaneous. The resultant delays force the controller to draw decisions before being aware of the recent history of a play. It is known that existence of a winning strategy for the controller in games with such delays is decidable over finite game graphs and with respect to -regular objectives. The underlying reduction, however, is impractical for non-trivial\u00a0\u2026", "num_citations": "10\n", "authors": ["1767"]}
{"title": "Approximate bisimulation and discretization of hybrid CSP\n", "abstract": " Hybrid Communicating Sequential Processes (HCSP) is a powerful formal modeling language for hybrid systems, which is an extension of CSP by introducing differential equations for modeling continuous evolution and interrupts for modeling interaction between continuous and discrete dynamics. In this paper, we investigate the semantic foundation for HCSP from an operational point of view by proposing the notion of approximate bisimulation, which provides an appropriate criterion to characterize the equivalence between HCSP processes with continuous and discrete behaviour. We give an algorithm to determine whether two HCSP processes are approximately bisimilar. In addition, based on which, we propose an approach on how to discretize HCSP, i.e., given an HCSP process A, we construct another HCSP process B which does not contain any continuous dynamics such that A and B are\u00a0\u2026", "num_citations": "10\n", "authors": ["1767"]}
{"title": "Interpolant synthesis for quadratic polynomial inequalities and combination with EUF\n", "abstract": " An algorithm for generating interpolants for formulas which are conjunctions of quadratic polynomial inequalities (both strict and nonstrict) is proposed. The algorithm is based on a key observation that quadratic polynomial inequalities can be linearized if they are concave. A generalization of Motzkin\u2019s transposition theorem is proved, which is used to generate an interpolant between two mutually contradictory conjunctions of polynomial inequalities, using semi-definite programming in time complexity , where n is the number of variables and m is the number of inequalities (This complexity analysis assumes that despite the numerical nature of approximate SDP algorithms, they are able to generate correct answers in a fixed number of calls.). Using the framework proposed in [22] for combining interpolants for a combination of quantifier-free theories which have their own interpolation algorithms, a\u00a0\u2026", "num_citations": "10\n", "authors": ["1767"]}
{"title": "Completeness of Higher-Order Duration Calculus\n", "abstract": " In order to describe the real-time behaviour of programs in terms of Duration Calculus (DC), proposed by Zhou Chaochen, C.A.R. Hoare and A.P. Ravn in [3], which can specify real-time requirements of computing systems, quantifications over program variables are inevitable, e.g. to describe local variable declaration, to declare internal channel and so on. So a higher-order duration calculus (HDC) is established in [2]. This paper proves completeness of HDC on abstract domains by encoding HDC into a complete first-order two-sorted interval temporal logic (IL                         2). This idea is hinted by [9]. All results shown in this paper are done under the assumption that all program variables have finite variability.", "num_citations": "10\n", "authors": ["1767"]}
{"title": "A two-way path between formal and informal design of embedded systems\n", "abstract": " It is well known that informal simulation-based design of embedded systems has a low initial cost and delivers early results; yet it cannot guarantee the correctness and reliability of the system to be developed. In contrast, the correctness and reliability of the system can be thoroughly investigated with formal design, but it requires a larger effort, which increases the development cost. Therefore, it is desirable for a designer to move between formal and informal design. This paper describes how to translate Hybrid CSP (HCSP) formal models into Simulink graphical models, so that the models can be simulated and tested using a MATLAB platform, thus avoiding expensive formal verification if the development is at a stage where it is considered unnecessary. Together with our previous work on encoding Simulink/Stateflow diagrams into HCSP, it provides a two-way path in the design of embedded systems, so\u00a0\u2026", "num_citations": "9\n", "authors": ["1767"]}
{"title": "Extending hybrid CSP with probability and stochasticity\n", "abstract": " Probabilistic and stochastic behavior are omnipresent in computer controlled systems, in particular, so-called safety-critical hybrid systems, because of fundamental properties of nature, uncertain environments, or simplifications to overcome complexity. Tightly intertwining discrete, continuous and stochastic dynamics complicates modelling, analysis and verification of stochastic hybrid systems (SHSs). In the literature, this issue has been extensively investigated, but unfortunately it still remains challenging as no promising general solutions are available yet. In this paper, we give our effort by proposing a general compositional approach for modelling and verification of SHSs. First, we extend Hybrid CSP (HCSP), a very expressive and process algebra-like formal modeling language for hybrid systems, by introducing probability and stochasticity to model SHSs, which is called stochastic HCSP (SHCSP). To\u00a0\u2026", "num_citations": "9\n", "authors": ["1767"]}
{"title": "Formalising Scheduling Theories in Duration Calculus.\n", "abstract": " Traditionally many proofs in real time scheduling theory were informal and lacked the rigor usually required for good mathematical proofs. Some attempts have been made towards making the proofs more reliable, including using formal logics to specify scheduling algorithms and verify their properties. In particular, Duration Calculus, a real time interval temporal logic, has been used since timing requirements in scheduling can be naturally associated with intervals. This paper aims to improve the work in this area and give a summary. Static and dynamic priority scheduling algorithms are formalised in Duration Calculus and classical theorems for schedulability analysis are proven using the formal proof system of Duration Calculus.", "num_citations": "9\n", "authors": ["1767"]}
{"title": "Over-and underapproximating reach sets for perturbed delay differential equations\n", "abstract": " This article explores reach set computations for perturbed delay differential equations (DDEs). The perturbed DDEs of interest in this article is a class of DDEs whose dynamics are subject to perturbations, and their solutions feature the local homeomorphism property with respect to initial states. Membership in this class of perturbed DDEs is determined by conducting sensitivity analysis of solution mappings with respect to initial states to impose a bound constraint on the time-lag term. The homeomorphism property of solutions to such class of perturbed DDEs enables us to construct over- and underapproximations of reach sets by performing reachability analysis on just the boundaries of their permitted initial sets, thereby permitting an extension of reach set computation methods for ordinary differential equations to perturbed DDEs. Three examples demonstrate the performance of our approach.", "num_citations": "8\n", "authors": ["1767"]}
{"title": "Discovering non-terminating inputs for multi-path polynomial programs\n", "abstract": " This paper investigates the termination problems of multi-path polynomial programs (MPPs) with equational loop guards. To establish sufficient conditions for termination and nontermination simultaneously, the authors propose the notion of strong/weak non-termination which under/over-approximates non-termination. Based on polynomial ideal theory, the authors show that the set of all strong non-terminating inputs (SNTI) and weak non-terminating inputs (WNTI) both correspond to the real varieties of certain polynomial ideals. Furthermore, the authors prove that the variety of SNTI is computable, and under some sufficient conditions the variety of WNTI is also computable. Then by checking the computed SNTI and WNTI varieties in parallel, termination properties of a considered MPP can be asserted. As a consequence, the authors establish a new framework for termination analysis of MPPs.", "num_citations": "8\n", "authors": ["1767"]}
{"title": "Automatically generating systemc code from HCSP formal models\n", "abstract": " In model-driven design of embedded systems, how to generate code from high-level control models seamlessly and correctly is challenging. This is because hybrid systems are involved with continuous evolution, discrete jumps, and the complicated entanglement between them, while code only contains discrete actions. In this article, we investigate the code generation from Hybrid Communicating Sequential Processes (HCSP), a formal hybrid control model, to SystemC. We first introduce the notion of approximate bisimulation as a criterion to check the consistency between two different systems, especially between the original control model and the final generated code. We prove that it is decidable whether two HCSPs are approximately bisimilar in bounded time and unbounded time with some conditions, respectively. For both the cases, we present two sets of rules correspondingly for discretizing HCSPs and\u00a0\u2026", "num_citations": "7\n", "authors": ["1767"]}
{"title": "Robust invariant sets computation for switched discrete-time polynomial systems\n", "abstract": " In this paper we study the robust invariant sets generation problem for discrete-time switched polynomial systems subject to disturbance inputs within the optimal control framework. A robust invariant set of interest is a set of states such that every possible trajectory starting from it never leaves a specified safe set, regardless of actual disturbances. The maximal robust invariant set is shown to be the zero level set of the unique bounded solution to a Bellman type equation, which is a functional equation being widely used in discrete-time optimal control. This is the main contribution of this work. The uniqueness of bounded solutions enables us to solve the derived Bellman type equation using numerical methods such as the value iteration, which provides an approximation of the maximal robust invariant set. In order to increase the scalability of the Bellman equation based method, a semi-definite program, which is constructed based on the derived Bellman type equation, is also implemented to synthesize robust invariant sets. Finally, three examples demonstrate the performance of our methods.", "num_citations": "7\n", "authors": ["1767"]}
{"title": "Formal analysis and verification of chinese train control system\n", "abstract": " It is essential that the correctness of high-speed train control systems be guaranteed by formal verification because they are safety-critical. However, as these systems become increasingly more complicated, achieving this goal in practice is difficult, and may even be infeasible. On the other hand, it is more convenient to graphically model a complicated system. A graphical model is fairly intuitive, which has resulted in such models being used extensively in industry. Thus, to improve the reliability of a high-speed train control system, constructing a graphical model for the system and then detecting its bugs by simulation should be very effective. In this paper, we first show how to use Simulink/Stateflow to build graphical models for various combined scenarios of Chinese train control systems (CTCS), in which mode conversion and level upgrade take place simultaneously. This modeling approach can be easily adapted to model other scenarios in CTCS by simply modifying the corresponding parameters. Then, we analyze these graphical models via simulations and show that under some circumstances the trains will stop abnormally. Finally, in order to avoid the inherent incompleteness of simulation, we show how to translate these graphical models into formal models given in HCSP-a formal modeling language for hybrid systems that extends CSP-and subsequently formally prove that abnormal stops can happen in many of the cases in one of the combined scenarios. Formal verification of Simulink/Stateflow diagrams complements simulation and improves the reliability of systems being developed.", "num_citations": "7\n", "authors": ["1767"]}
{"title": "Learning real-time automata\n", "abstract": " Real-time automata (RTAs) are a subclass of timed automata with only one clock which resets at each transition. In this paper, we present an active learning algorithm for deterministic real-time automata (DRTAs) in both continuous-time semantics and discrete-time semantics. For a target language recognized by a DRTA A, we convert the problem of learning DRTA A to the problem of learning a canonical real-time automaton A with the same recognized language, ie, L (A)= L (A). The algorithm is inspired by existing learning algorithms for symbolic automata.", "num_citations": "6\n", "authors": ["1767"]}
{"title": "Probably approximate safety verification of hybrid dynamical systems\n", "abstract": " In this paper we present a method based on linear programming that facilitates reliable safety verification of hybrid dynamical systems subject to perturbation inputs over the infinite time horizon. The verification algorithm applies the probably approximately correct (PAC) learning framework and consequently can be regarded as statistically formal verification in the sense that it provides formal safety guarantees expressed using error probabilities and confidences. The safety of hybrid systems in this framework is verified via the computation of so-called PAC barrier certificates, which can be computed by solving a linear programming problem. Based on scenario approaches, the linear program is constructed by a family of independent and identically distributed state samples. In this way we can conduct verification of hybrid dynamical systems that existing methods are not capable of dealing with. Some\u00a0\u2026", "num_citations": "6\n", "authors": ["1767"]}
{"title": "A Compositional Modelling and Verification Framework for Stochastic Hybrid Systems.\n", "abstract": " In this paper, we propose a general compositional approach for modelling and verification of stochastic hybrid systems (SHSs). We extend Hybrid CSP (HCSP), a very expressive process algebra-like formal modeling language for hybrid systems, by introducing probability and stochasticity to model SHSs, which we call stochastic HCSP (SHCSP). Especially, non-deterministic choice is replaced by probabilistic choice, ordinary differential equations are replaced by stochastic differential equations (SDEs), and communication interrupts are generalized by communication interrupts with weights. We extend Hybrid Hoare Logic to specify and reason about SHCSP processes: On the one hand, we introduce the probabilistic formulas for describing probabilistic states, and on the other hand, we propose the notions of local stochastic differential invariants for characterizing SDEs and global loop invariants for repetition. Throughout the paper, we demonstrate our approach by an aircraft running example.", "num_citations": "6\n", "authors": ["1767"]}
{"title": "Compositionality of fixpoint logic with chop\n", "abstract": " Compositionality plays an important role in designing reactive systems as it allows one to compose/decompose a complex system from/to several simpler components. Generally speaking, it is hard to design a complex system in a logical frame in a compositional way because it is difficult to find a connection between the structure of a system to be developed and that of its specification given by the logic. In this paper, we investigate the compositionality of the Fixpoint Logic with Chop (FLC for short). To this end, we extend FLC with the nondeterministic choice \u201c+\u201d(FLC+ for the extension) and then establish a correspondence between the logic and the basic process algebra with deadlock and termination (abbreviated BPA ^\u03f5_\u03b4). Subsequently, we show that the choice \u201c+\u201d is definable in FLC. As an application of the compositionality of FLC, an algorithm is given to construct characteristic formulae of BPA ^\u03f5_\u03b4 up to\u00a0\u2026", "num_citations": "6\n", "authors": ["1767"]}
{"title": "Indecision and delays are the parents of failure\u2014taming them algorithmically by synthesizing delay-resilient control\n", "abstract": " The possible interactions between a controller and its environment can naturally be modelled as the arena of a two-player game, and adding an appropriate winning condition permits to specify desirable behavior. The classical model here is the positional game, where both players can (fully or partially) observe the current position in the game graph, which in turn is indicative of their mutual current states. In practice, neither sensing and actuating the environment through physical devices nor data forwarding to and from the controller and signal processing in the controller are instantaneous. The resultant delays force the controller to draw decisions before being aware of the recent history of a play and to submit these decisions well before they can take effect asynchronously. It is known that existence of a winning strategy for the controller in games with such delays is decidable over finite game graphs and with respect to \u03c9-regular objectives. The underlying reduction, however, is impractical for non-trivial delays as it incurs a blow-up of the game graph which is exponential in the magnitude of the delay. For safety objectives, we propose a more practical incremental algorithm successively synthesizing a series of controllers handling increasing delays and reducing the game-graph size in between. It is demonstrated using benchmark examples that even a simplistic explicit-state implementation of this algorithm outperforms state-of-the-art symbolic synthesis algorithms as soon as non-trivial delays have to be handled. We furthermore address the practically relevant cases of non-order-preserving delays and bounded message loss, as arising in\u00a0\u2026", "num_citations": "5\n", "authors": ["1767"]}
{"title": "Unified graphical co-modelling of cyber-physical systems Using AADL and Simulink/Stateflow\n", "abstract": " The efficient design of safety-critical embedded systems involves, at least, the three modelling aspects common to all cyber-physical systems (CPSs): functionalities, physics and architectures. Existing modelling formalisms cannot provide strong support to take all of these three dimensions into account uniformly, e.g., AADL is a precise formalism for modelling architecture and prototyping hardware platforms, but it is weak for modelling physical and software behaviours and their interaction. By contrast, Simulink/Stateflow is strong for modelling physical and software behaviour and their interaction, but weak for modelling architecture and hardware platforms. To address this issue, we consider the combination of AADL and Simulink/Stateflow, two widely used graphical modelling formalisms for CPS design in industry. This combination provides a unified graphical co-modelling formalism supporting the design\u00a0\u2026", "num_citations": "5\n", "authors": ["1767"]}
{"title": "Super-dense computation in verification of hybrid CSP processes\n", "abstract": " Hybrid Communicating Sequential Processes (HCSP) extends CSP to include differential equations and interruptions. We feel comfortable in our experience with HCSP to model scenarios of the Level 3 of Chinese Train Control System (CTCS-3), and to define a formal semantics for Simulink. The Hoare style calculus of [5] proposes a calculus to verify HCSP processes. However it has an error with respect to super-dense computation. This paper is to establish another calculus for a subset of HCSP, which uses Duration Calculus formulas to record program history, negligible time state to denote super-dense computation and semantic continuation to avoid infinite interval. It is compositional and sound.", "num_citations": "5\n", "authors": ["1767"]}
{"title": "Bounded model-checking of discrete duration calculus\n", "abstract": " Fraenzle and Hansen investigated the model-checking problem of the subset of Duration Calculus without individual variables and quantifications wrt some approximation semantics by reduction to the decision problem of Presburger Arithmetic, thus obtained a model-checking algorithm with 4-fold exponential complexity [6, 7]. As an alternative, inspired by their work, we consider the bounded model-checking problem of the subset in the context of the standard discrete-time semantics in this paper. Based on our previous work [20], we reduce this problem to the reachability problem of timed automata. The complexity of our approach is singly exponential in the size of formulas and quadratic in the number of states of models. We implement our approach using UPPAAL and demonstrate its efficiency by some examples.", "num_citations": "5\n", "authors": ["1767"]}
{"title": "Another formal proof for deadline driven scheduler\n", "abstract": " The paper presents another formal proof for the correctness of the Deadline Driven Scheduler (DDS). This proof is different from Zheng Yuhua and Zhou Chaochen's, although both are given in terms of duration calculus (DC) which provides abstraction for random preemption of processor. In the proof of Zheng and Zhou, the induction rules of the duration calculus are heavily applied, but the intuition of the induction propositions is not obvious. However, this proof is to follow and to formalise the original one developed by C.L. Liu and J.W. Layland (1973) which relies on many intuitive facts. Therefore, this proof is more intuitive, while it is still formal.", "num_citations": "5\n", "authors": ["1767"]}
{"title": "Nonlinear Craig interpolant generation\n", "abstract": " Craig interpolant generation for non-linear theory and its combination with other theories are still in infancy, although interpolation-based techniques have become popular in the verification of programs and hybrid systems where non-linear expressions are very common. In this paper, we first prove that a polynomial interpolant of the form  exists for two mutually contradictory polynomial formulas  and , with the form , where  are polynomials in  or , and the quadratic module generated by  is Archimedean. Then, we show that synthesizing such interpolant can be reduced to solving a semi-definite programming problem (). In addition, we propose a verification approach to assure the validity of the synthesized interpolant and consequently avoid the unsoundness caused by numerical error in  solving. Besides, we discuss how to generalize our approach to general\u00a0\u2026", "num_citations": "4\n", "authors": ["1767"]}
{"title": "An interface model of software components\n", "abstract": " We present an automata-based model for describing the behaviors of software components. This extends our previous work by allowing internal behaviors. In order to improve the techniques for checking if two component can be composed without causing deadlocks, we develop an interface model, called input deterministic automata, that define all the non-blockable traces of invocation to services provided by a component. We also present an algorithm that, for any given component automaton, generates the interface model that has the same input deterministic behaviors as the original automaton. Properties of the algorithm with respect to component refinement and composition are studied as preliminary results towards a theory of software component interfaces.", "num_citations": "4\n", "authors": ["1767"]}
{"title": "Refinement of models of software components\n", "abstract": " Models of software components at different levels of abstraction, component interfaces, contracts, implementations and publications are important for component-based design. Refinement relations among models at the same level and between different levels are essential for model-driven development of components. Classical refinement theories mainly focus on verification and put little attention on design. Therefore, most of them are not suitable for component-based model-driven development (CB-MDD). To address this issue, in this paper, we propose two refinement relations for CB-MDD, that is a trace-based refinement and a state-based refinement. Both are discussed in the framework of rCOS, which is a formal model of component and object systems. These refinement relations provide different granularity of abstraction and can capture the intuition that a refined component provides\" more\" and\" better\"\u00a0\u2026", "num_citations": "4\n", "authors": ["1767"]}
{"title": "Deriving non-determinism from conjunction and disjunction\n", "abstract": " In this paper, we show that the non-deterministic choice \u201c+\u201d, which was proposed as a primitive operator in Synchronization Tree Logic (STL for short) can be defined essentially by conjunction and disjunction in the \u03bc-calculus (\u03bcM for short). This is obtained by extending the \u03bc-calculus with the non-deterministic choice \u201c+\u201d (denoted by \u03bcM\u2009+\u2009) and then showing that \u03bcM\u2009+\u2009 can be translated into \u03bcM. Furthermore, we also prove that STL can be encoded into \u03bcM\u2009+\u2009 and therefore into \u03bcM.", "num_citations": "4\n", "authors": ["1767"]}
{"title": "Formalising scheduling theories in duration calculus\n", "abstract": " Correctness of real time scheduling algorithms has traditionally been argued in ad-hoc manners using natural languages. Proofs in this way are often unreliable. Work has been done on using a formal logic, in particular Duration Calculus, a real time interval temporal logic, to specify the algorithms and verify their properties. This paper aims to improve the work on this topic and give a summary. The two fundamental real time scheduling algorithms, namely, the Rate Monotonic and the Earliest Deadline First schedulers, are specified. The classic theorems on feasibility conditions due to Liu and Layland are proven as logical theorems.", "num_citations": "4\n", "authors": ["1767"]}
{"title": "NIL: learning nonlinear interpolants\n", "abstract": " Nonlinear interpolants have been shown useful for the verification of programs and hybrid systems in contexts of theorem proving, model checking, abstract interpretation, etc. The underlying synthesis problem, however, is challenging and existing methods have limitations on the form of formulae to be interpolated. We leverage classification techniques with space transformations and kernel tricks as established in the realm of machine learning, and present a counterexample-guided method named NIL for synthesizing polynomial interpolants, thereby yielding a unified framework tackling the interpolation problem for the general quantifier-free theory of nonlinear arithmetic, possibly involving transcendental functions. We prove the soundness of NIL and propose sufficient conditions under which NIL is guaranteed to converge, i.e., the derived sequence of candidate interpolants converges to an actual\u00a0\u2026", "num_citations": "3\n", "authors": ["1767"]}
{"title": "Compositional properties of sequential processes\n", "abstract": " It is widely agreed that the modular method is one of the most effective methods to specify and verify complex systems in order to avoid combinatorial explosion. FLC (Fixpoint Logic with Chop) is an important modal logic because of its expressivity and logic properties, eg, it is strictly more expressive than the \u03bc-calculus. In this paper, we study the compositionality of FLC, namely, to investigate the connection between the connectives of the logic and the constructors of programs. To this end, we first extend FLC with a nondeterministic operator \u201c+\u201d(FLC+ for the extension) and then establish a correspondence between the logic and the basic process algebra with deadlock and termination (abbreviated by BPA \u03b4 \u03b5). Finally, we show that as a by-product of the correspondence characteristic formulae for processes of BPA \u03b4 \u03b5 up to strong (observational) bisimulation can be constructed compositionally directly from the\u00a0\u2026", "num_citations": "3\n", "authors": ["1767"]}
{"title": "Action refinement from a logical point of view\n", "abstract": " Action refinement provides a mechanism to design a complex reactive system hierarchically. This paper is devoted to action refinement from a logical point of view, and to combining the hierarchical implementation of a complex system with the hierarchical specification of the system in order to verify it in an easy way. To this end, we use a TCSP-like language with an action refinement operator as a modeling language, and an extension of the modal \u03bc-calculus, called FLC (Fixpoint Logic with Chop) [18], as a specification language. Specifications in FLC can be refined via a mapping that takes as arguments an abstract specification \u03c6 for the process P, an action a of P and a specification \u03c8 for the process Q that may refine a and produces a refined specification. We prove under some syntactical conditions: if Q \u22a8 \u03c8 then P \u22a8 \u03c6 iff. P[a\u21ddQ] satisfies the refined specification. Therefore our approach supports \u2018a\u00a0\u2026", "num_citations": "3\n", "authors": ["1767"]}
{"title": "An intuitive formal proof for deadline driven scheduler\n", "abstract": " This paper presents another formal proof for the correctness of the Deadline Driven Scheduler (DDS). This proof is given in terms of Duration Calculus which provides abstraction for random preemption of processor. Compared with other approaches, this proof relies on many intuitive facts. Therefore this proof is more intuitive, while it is still formal.", "num_citations": "3\n", "authors": ["1767"]}
{"title": "Synthesizing Invariant Barrier Certificates via Difference-of-Convex Programming\n", "abstract": " A barrier certificate often serves as an inductive invariant that isolates an unsafe region from the reachable set of states, and hence is widely used in proving safety of hybrid systems possibly over the infinite time horizon. We present a novel condition on barrier certificates, termed the invariant barrier-certificate condition, that witnesses unbounded-time safety of differential dynamical systems. The proposed condition is by far the least conservative one on barrier certificates, and can be shown as the weakest possible one to attain inductive invariance. We show that discharging the invariant barrier-certificate condition -- thereby synthesizing invariant barrier certificates -- can be encoded as solving an optimization problem subject to bilinear matrix inequalities (BMIs). We further propose a synthesis algorithm based on difference-of-convex programming, which approaches a local optimum of the BMI problem via solving a series of convex optimization problems. This algorithm is incorporated in a branch-and-bound framework that searches for the global optimum in a divide-and-conquer fashion. We present a weak completeness result of our method, in the sense that a barrier certificate is guaranteed to be found (under some mild assumptions) whenever there exists an inductive invariant (in the form of a given template) that suffices to certify safety of the system. Experimental results on benchmark examples demonstrate the effectiveness and efficiency of our approach.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Inner-approximating reach-avoid sets for discrete-time polynomial systems\n", "abstract": " In this paper we propose a computational method based on semi-definite programming for synthesizing infinite-time reach-avoid sets in discrete-time polynomial systems. An infinite-time reach-avoid set is a set of initial states making the system eventually, i.e., within finite time enter the target set while remaining inside another specified (safe) set during each time step preceding the target hit. The reach-avoid set is first characterized equivalently as a strictly positive sub-level of a bounded value function, which in turn is shown to be a solution to a system of derived equations. The derived equations are further relaxed into a system of inequalities, which is encoded into semi-definite constraints based on the sum-of-squares decomposition for multivariate polynomials, such that the problem of synthesizing inner-approximations of the reach-avoid set can be addressed via solving a semi-definite programming problem\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Safety Verification for Random Ordinary Differential Equations\n", "abstract": " Random ordinary differential equations (RODEs) are ordinary differential equations (ODEs) that contain a stochastic process in their vector field functions. They have been used for many years in a wide range of applications, but have been a shadow existence to stochastic differential equations (SDEs) despite being able to model a wider and often physically more adequate range of disturbances. In this article, we study the safety verification problem over both finite time horizons and the infinite time horizon for RODEs incorporating Wiener processes. Concretely, we investigate the    -safety problem, where we identify the set of initial states from which the probability to satisfy safety specifications is at least    . Based on identifying a set of sample paths whose probability measure is larger than    , we propose a method of reducing stochastic reachability to adversary reachability of ODEs for solving the    -safety problem over\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "A Characterization of Robust Regions of Attraction for Discrete-Time Systems Based on Bellman Equations\n", "abstract": " In this paper we present a Bellman equation for computing robust regions of attraction for state-constrained perturbed discrete-time systems. The robust region of attraction of interest is a set of states such that every trajectory initialized in it will approach an equilibrium while never violating a specified state constraint, regardless of the actual perturbation. In this approach, the interior of the maximal robust region of attraction is characterized as the strict one sub-level set of the unique bounded and continuous solution to a Bellman equation.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Robust non-termination analysis of numerical software\n", "abstract": " Numerical software is widely used in safety-critical systems such as aircrafts, satellites, car engines and many other fields, facilitating dynamics control of such systems in real time. It is therefore absolutely necessary to verify their correctness. Most of these verifications are conducted under ideal mathematical models, but their real executions may not follow the models exactly. Factors that are abstracted away in models such as rounding errors can change behaviors of systems essentially. As a result, guarantees of verified properties despite the present of disturbances are needed. In this paper, we attempt to address this issue of nontermination analysis of numerical software. Nontermination is often an unexpected behaviour of computer programs and may be problematic for applications such as real-time systems with hard deadlines. We propose a method for robust conditional nontermination analysis that\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Monitoring CTMCs by multi-clock timed automata\n", "abstract": " This paper presents a numerical algorithm to verify continuous-time Markov chains (CTMCs) against multi-clock deterministic timed automata (DTA). These DTA allow for specifying properties that cannot be expressed in CSL, the logic for CTMCs used by state-of-the-art probabilistic model checkers. The core problem is to compute the probability of timed runs by the CTMC  that are accepted by the DTA . These likelihoods equal reachability probabilities in an embedded piecewise deterministic Markov process (EPDP) obtained as product of  and \u2019s region automaton. This paper provides a numerical algorithm to efficiently solve the PDEs describing these reachability probabilities. The key insight is to solve an ordinary differential equation (ODE) that exploits the specific characteristics of the product EPDP. We provide the numerical precision of our algorithm and present experimental results with a\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Keynote\n", "abstract": " In the model-driven design of embedded systems, how to generate code from high-level control models seamlessly and correctly is challenging, as control models contain lots of complicated behaviour, e.g., continuous evolution, discrete jumps, and the complex interaction between them, time delay, and so on, while code only contains discrete actions. In this talk, I will report our recent work on the code generation from a formal control model, given by Hybrid CSP (HCSP), to SystemC. In detail, we first introduce the notion of approximate bisimulation that will be used to investigate the consistency between two different systems, especially between the original control model and the final executable code. We prove that it is decidable whether two HCSP processes are approximately bisimilar in bounded time and unbounded time, respectively. For both of the two cases, we define a set of rules to the discretize HCSP\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Compositional hoare-style reasoning about hybrid csp in the duration calculus\n", "abstract": " Deductive methods for the verification of hybrid systems vary on the format of statements in correctness proofs. Building on the example of Hoare triple-based reasoning, we have investigated several such methods for systems described in Hybrid CSP, each based on a different assertion language, notation for time, and notation for proofs, and each having its pros and cons with respect to expressive power, compositionality and practical convenience. In this paper we propose a new approach based on weakly monotonic time as the semantics for interleaving, the Duration Calculus (DC) with infinite intervals and general fixpoints as the logic language, and a new meaning for Hoare-like triples which unifies assertions and temporal conditions. We include a proof system for reasoning about the properties of systems written in the new form of triples that is complete relative to validity in DC.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Generating semi-algebraic invariants for non-autonomous polynomial hybrid systems\n", "abstract": " Hybrid systems are dynamical systems with interacting discrete computation and continuous physical processes, which have become more common, more indispensable, and more complicated in our modern life. Particularly, many of them are safety-critical, and therefore are required to meet a critical safety standard. Invariant generation plays a central role in the verification and synthesis of hybrid systems. In the previous work, the fourth author and his coauthors gave a necessary and sufficient condition for a semi-algebraic set being an invariant of a polynomial autonomous dynamical system, which gave a confirmative answer to the open problem. In addition, based on which a complete algorithm for generating all semi-algebraic invariants of a given polynomial autonomous hybrid system with the given shape was proposed. This paper considers how to extend their work to non-autonomous dynamical\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Formal analysis and verification of Chinese train control system\n", "abstract": " It is essential that the correctness of high-speed train control systems be guaranteed by formal verification because they are safety-critical. However, as these systems become increasingly more complicated, achieving this goal in practice is difficult, and may even be infeasible. On the other hand, it is more convenient to graphically model a complicated system. A graphical model is fairly intuitive, which has resulted in such models being used extensively in industry. Thus, to improve the reliability of a high-speed train control system, constructing a graphical model for the system and then detecting its bugs by simulation should be very effective. In this paper, we first show how to use Simulink/Stateflow to build graphical models for various combined scenarios of Chinese train control systems (CTCS), in which mode conversion and level upgrade take place simultaneously. This modeling approach can be easily adapted\u00a0\u2026", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Towards a failure model of software components\n", "abstract": " We present a failure model for software components that describe sequences of services that are provided and required by a component, which may be blocked and therefore result in failures. For any automata-based model introduced in our previous work, there is a corresponding failure model. We show that the failure model is expressive enough to describe non-blockable properties defined in the automata-based models. Plugging operation over failure models is defined and proved to be consistent with the one over automata-based models. A kind of specific components, called coordinators, are introduced to coordinate behaviors of components to avoid failures, and accordingly, coordination operation is defined. Moreover, an algorithm is proposed to generate a coordinator which can filter out sequences of provided service invocations that may cause failures.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "CCMC: A Conditional CSL Model Checker for Continuous-Time Markov Chains\n", "abstract": " We present CCMC (Conditional CSL Model Checker), a model checker for continuous-time Markov chains (CTMCs) with respect to properties specified in continuous-time stochastic logic (CSL). Existing CTMC model checkers such as PRISM or MRMC handle only binary CSL until path formulas. CCMC is the first tool that supports algorithms for analyzing multiple until path formulas. Moreover, CCMC supports a recent extension of CSL \u2013 conditional CSL \u2013 which makes it possible to verify a larger class of properties on CTMC models. Our tool is based on our recent algorithmic advances for CSL, that construct a stratified CTMC before performing transient probability analyses. The stratified CTMC is a product obtained from the original CTMC and an automaton extracted from a given formula, aiming to filter out the irrelevant paths and make the computation more efficient.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "On hierarchically developing reactive systems\n", "abstract": " The hierarchical development method is one of the most practical and effective methods for designing large reactive systems by allowing a design at different levels of abstraction. Combining hierarchical specification with hierarchical implementation plays a key role in decreasing the complexity of the verification of these systems. But, up to now, little work has been done related to the topic. In this paper, we investigate this issue.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Towards a theory of refinement of component-based systems\n", "abstract": " Models of software components at different levels of abstraction, component interfaces, contracts, implementations and publications are important for component-based design. Refinement relations among models at the same level and between different levels are essential for model-driven development of components. Classical refinement theories mainly focus on verification and put little attention on design. Therefore, most of them are not suitable for component-based model-driven development (CB-MDD). To address this issue, in this paper, we propose two refinement relations for CB-MDD, that is a trace-based refinement and a state-based refinement. The former comprises a trace refinement between contracts and components and an alternating trace refinement between publications; while the latter comprises a data refinement between contracts and components, and an alternating data refinement between publications. Both of the two refinement relations are discussed in the framework of rCOS, which is a formal model of component and object systems. These refinement relations provide different granularity of abstraction and can capture the intuition that a refined component provides \u201cmore\u201d and \u201cbetter\u201d services to the environment. We also show how to extend these refinement relations to allow us to compare contracts, components and publications with different interfaces by exploiting the primitive operator internalizing over contracts, components and publications.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Connecting algebraic and logical descriptions of concurrent systems\n", "abstract": " Algebraical approach and logical approach are two different methodologies for designing concurrent systems. In this paper, we show some connections between these two approaches. On one hand, we relate a set of primitives of process algebras which exactly corresponds to the primitives of basic process algebra (BPA for short) to the connectives of modal and temporal logics like fixpoint logic with chop (FLC for short). Thus, we can conclude that these logics could be used to compositionally develop complex systems in an algebra-like way. On the other hand, given a context-free process and an equivalence or preorder such as strong bisimulation, we present a uniform method to construct the characteristic formula of the process up to the relation directly from its syntax. So, all reductions concerning processes that are usually performed in an algebraical framework can be done in a logical framework.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Refinement of actions for real-time concurrent systems with causal ambiguity\n", "abstract": " We develop an approach of action refinement for concurrent systems with not only the notation of real-time but also with causal ambiguity, which often exists in real application areas. The systems are modeled in terms of a timed extension of event structures with causal ambiguity. Under a certain partial order semantics, the behavior of the refined system can be inferred compositionally from the behavior of the original system and from the behavior of the systems used to refine actions with explicitly represented start points. A variant of a linear-time equivalence termed pomset trace equivalence and a variant of a branching-time equivalence termed history preserving bisimulation equivalence based on the partial order semantics are both congruences under the refinement. The refinement operation behaves thus well and meets the commonly expected properties.", "num_citations": "2\n", "authors": ["1767"]}
{"title": "Switching controller synthesis for delay hybrid systems under perturbations\n", "abstract": " Delays are ubiquitous in modern hybrid systems, which exhibit both continuous and discrete dynamical behaviors. Induced by signal transmission, conversion, the nature of plants, and so on, delays may appear either in the continuous evolution of a hybrid system such that the evolution depends not only on the present state but also on its execution history, or in the discrete switching between its different control modes. In this paper we come up with a new model of hybrid systems, called delay hybrid automata, to capture the dynamics of systems with the aforementioned two kinds of delays. Furthermore, based upon this model we study the robust switching controller synthesis problem such that the controlled delay system is able to satisfy the specified safety properties regardless of perturbations. To the end, a novel method is proposed to synthesize switching controllers based on the computation of differential\u00a0\u2026", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Safety Guarantee for Time-Delay Systems with Disturbances by Control Barrier Functionals\n", "abstract": " Time delays occur in a variety of engineering problems because they may be inherent in the nature of plants or networks-induced. We investigate the safety verification of time-delay systems modeled by nonlinear delay differential equations subject to disturbances in their dynamics based on control barrier functionals in this paper. To the end, we propose the notion of input-to-state safety and input-to-state safe control barrier functional first, and then present an algorithm to synthesize input-to-state safe control barrier functional to guarantee the safety of the considered time-delay systems with disturbances. Three examples are provided to demonstrate the proposed approach.", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Regions of attraction generation for state-constrained perturbed discrete-time polynomial systems\n", "abstract": " In this paper we attempt to address a long-standing problem of computing regions of attraction for state-constrained perturbed discrete-time polynomial systems, where perturbations are time varying rather than constant. The region of attraction is a set of all states such that every possible trajectories initialized in it will respect the specified state constraint while approaching the equilibrium state eventually, regardless of the actions of uncertain perturbed inputs. The problem of computing regions of attraction is first reduced to the search for the unique bounded and continuous solution to an equation being a discrete analog to a modified Zubov\u2019s partial differential equation, and then boils down to a semi-definite programming problem such that an inner-approximation of the region of attraction can be gained by solving a single semi-definite program, rendering this method simple to implement. Moreover, a converging sequence of inner-approximations by solving the constructed semi-definite program to a set, which differs from the region of attraction with a set of measure at most as the same as that of the boundary of the region of attraction, is able to be obtained. Finally, our approach is evaluated on one simple example.", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Decidability of the initial-state opacity of real-time automata\n", "abstract": " In this paper, we investigate the initial-state opacity of real-time automata. A system is called initial-state opaque if an intruder with partial observability is unable to determine whether or not the execution starts from a secret state. In order to prove that the initial-state opacity problem is decidable, we first calculate the lapse of time between each pair of observable events. Two real-time automata are constructed which accept the projection of languages from secret initial states and non-secret ones, respectively. Then, the two real-time automata are further transformed into trace-equivalent finite-state automata. Subsequently, we adapt complement and product on the finite-state automata, and check accepting language of the finally-obtained automaton. The system is initial-state opaque if it accepts nothing or only empty trace, and not initial-state opaque otherwise.", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Synthesizing systemc code from delay hybrid csp\n", "abstract": " Delay is omnipresent in modern control systems, which can prompt oscillations and may cause deterioration of control performance, invalidate both stability and safety properties. This implies that safety or stability certificates obtained on idealized, delay-free models of systems prone to delayed coupling may be erratic, and further the incorrectness of the executable code generated from these models. However, automated methods for system verification and code generation that ought to address models of system dynamics reflecting delays have not been paid enough attention yet in the computer science community. In our previous work, on one hand, we investigated the verification of delay dynamical and hybrid systems; on the other hand, we also addressed how to synthesize SystemC code from a verified hybrid system modelled by Hybrid CSP (HCSP) without delay. In this paper, we give a first attempt\u00a0\u2026", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Combining formal and informal methods in the design of spacecrafts\n", "abstract": " In this chapter, we summarize our experience on combing formal and informal methods together in the design of spacecrafts. With our approach, the designer can either build an executable model of a spacecraft using the industrial standard environment Simulink/Stateflow, which facilitates analysis by simulation, or construct a formal model using Hybrid CSP (HCSP), which is an extension of CSP for formally modeling hybrid systems. HCSP processes can be specified and reasoned about by Hybrid Hoare Logic (HHL), which is an extension of Hoare logic to hybrid systems. The connection between informal and formal methods is realized via an automatic translator from Simulink/Stateflow diagrams to HCSP and an inverse translator from HCSP to Simulink. The advantages of combining formal and informal methods in the design of spacecrafts include                                        It enables formal verification as a\u00a0\u2026", "num_citations": "1\n", "authors": ["1767"]}
{"title": "On Termination of Polynomial Programs with Equality Conditions\n", "abstract": " We investigate the termination problem of a family of multi-path polynomial programs (MPPs), in which all assignments to program variables are polynomials, and test conditions of loops and conditional statements are polynomial equalities. We show that the set of non-terminating inputs (NTI) of such a program is algorithmically computable, thus leading to the decidability of its termination. To the best of our knowledge, the considered family of MPPs is hitherto the largest one for which termination is decidable. We present an explicit recursive function which is essentially Ackermannian, to compute the maximal length of ascending chains of polynomial ideals under a control function, and thereby obtain a complete answer to the questions raised by Seidenberg. This maximal length facilitates a precise complexity analysis of our algorithms for computing the NTI and deciding termination of MPPs. We extend our method to programs with polynomial guarded commands and show how an incomplete procedure for MPPs with inequality guards can be obtained. An application of our techniques to invariant generation of polynomial programs is further presented.", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Non-linear Interpolant Generation and Its Application to Program Verification\n", "abstract": " [McMillan 05] on quantifier-free theory of linear inequality with UF;[Henzinger et al 04] on a theory with arithmetic and pointer expressions, and call-by-value functions;[YorshMusuvathi 05] on a class of first-order theories;[Kapur et al 06] on theories of arrays, sets and multisets;[RybalchenkoSofronie-Stokkermans 10] to reduce the synthesis of Craig interpolants of the combined theory of linear arithmetic and uninterpreted function symbols to constraint solving. But little work on how to synthesize non-linear interpolants", "num_citations": "1\n", "authors": ["1767"]}
{"title": "A complete method to polynomial differential invariant generation for hybrid systems\n", "abstract": " How to design, verify and certify hybrid systems is a grand challenge in computer science and control theory. The concept of invariant is a crucial idea for system design, verification and certification. In this paper, by investigating the role of Lie derivatives in the analysis of continuous evolution tendency, we present a complete method for constructing polynomial differential invariants of a hybrid system in which all term expressions are or can be reduced to polynomials. Completeness here means that for a given hybrid system, if there is a polynomial differential invariant in the form of the predefined template, then it can indeed be discovered by our method. Hence, theoretically speaking, our approach is able to generate all polynomial invariants as all templates can be enumerated by their degree in order. To the best of our knowledge, this is the first complete approach to computably generating polynomial differential invariants.", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Connection between logical and algebraic approaches to concurrent systems\n", "abstract": " The logical and algebraic approaches are regarded as two of the dominant methodologies for the development of reactive and concurrent systems. It is well known that the logic approach is more abstract, but lacks compositionality; while the algebraic approach is inherently compositional, but lacks abstractness. However, connecting the two approaches is a major challenge in computer science, and many efforts have been directed to resolving the problem. Linking the algebraic approach to the logical approach has been satisfactorily resolved through the notion of characteristic formulae. But very limited success has been achieved so far in the other direction, as most of the established results have been developed only with respect to a simple semantics, which has usually been strong bisimulation. However, in practice, an observational semantics like weak bisimulation, which is much more complicated, is thought\u00a0\u2026", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Combining hierarchical specification with hierarchical implementation\n", "abstract": " Action refinement is a practical hierarchical method to ease the design of large reactive systems. Relating hierarchical specification to hierarchical implementation is an effective method to decrease the complexity of the verification of these systems. In our previous work [15], this issue has been investigated in the simple case of the refinement of an action by a finite process.             In this paper, on the one hand, we extend our previous results by considering the issue in general, i.e., refining an abstract action by an arbitrary process; on the other hand, we exploit different techniques such that our method is easier to be followed and applied in practice.", "num_citations": "1\n", "authors": ["1767"]}
{"title": "Automatic synthesis of the DC specifications of lip synchronisation protocol\n", "abstract": " Duration Calculus (DC), an extension of interval temporal logic, has been shown very powerful and suitable for specifying multimedia protocols. Generally speaking, it is impossible to verify the DC specifications using model-checking because of DC's undecidability. H. Dierks (1999) presented an approach to solving the problem. The main contribution of this paper is improving H. Dierks's algorithm so that it can be used to transform the DC specification of multimedia protocols to the input of the model checker. The basic idea behind this work is that we use general DC to specify multimedia protocols, and the improved H. Dierks' algorithm to transform them to PLC-Automata, further to Timed Automata. Using model-checkers developed for TA, we can verify the correctness of protocols. We shall demonstrate it by Adaptive LSP. For convenience, we use more general forms of DC Implementables, but they can be\u00a0\u2026", "num_citations": "1\n", "authors": ["1767"]}
{"title": "A higher-order duration calculus and its completeness\n", "abstract": " \u6b63 This paper studies how to describe the real-time behaviour of programs using duration calculus. Since program variables are interpreted as functions over time in real-time programming, and it is inevitable to introduce quantifications over program variables in order to describe local variable declaration and declare local channel and so on. Therefore to establish a higher-order duration calculus (HDC) is necessary. We first establish HDC, then show some real-time properties of programs in terms of HDC, and then, prove that HDC is complete on abstract domains under the assumption that all program variables vary finitely.", "num_citations": "1\n", "authors": ["1767"]}