{"title": "An industrial case study on requirements volatility measures\n", "abstract": " Requirements volatility is an important risk factor for software projects. Software measures can help in quantifying and predicting this risk. In this paper, we present an industrial case study that investigated measures of volatility for a medium size software project. The goal of the study was twofold: 1) to empirically validate a set of measures associated with the volatility of use case models (UCM); 2) to investigate the correlation between subjective and objective volatility. Measurement data was collected in retrospect for all use case models of the software project. In addition, we determined subjective volatility by interviewing stakeholders of the project. Our data analysis showed a high correlation between our measures of size of UCM and total number of changes, indicating that the measures of size of UCMs are good indicators of requirements volatility. No correlations was found between subjective and objective\u00a0\u2026", "num_citations": "50\n", "authors": ["1999"]}
{"title": "Measuring the requirements management key process area\n", "abstract": " The purpose of this paper is to provide software measurements for implementation of the goals of the Requirements Management Key Process Area (KPA) of the Capability Maturity Model (CMM), and to ease the adoption of the KPA. The paper also provides practical guidance for people trying to implement the Requirements Management KPA. The CMM, developed by the Software Engineering Institute (SEI) is not well supported by software measurement and it is somewhat complex. An application of the Goal/Question/Metric (GQM) paradigm to the Requirements Management KPA is therefore presented. The metrics obtained will help immature companies to satisfy the goals of the Requirements Management KPA.", "num_citations": "42\n", "authors": ["1999"]}
{"title": "Empirical studies on requirement management measures\n", "abstract": " The goal of this research is to demonstrate that a subset of a set of 38 requirements management measures are good predictors of stability and volatility of requirements and change requests. At the time of writing we have theoretically validated ten of these 38 measures. We are currently planning and performing an industrial case study where we want to reach the goal described above.", "num_citations": "29\n", "authors": ["1999"]}
{"title": "Theoretical validation and case study of requirements management measures\n", "abstract": " Requirements management measures can help us to control changing software requirements and estimate the costs of changing requirements. The goal of this paper is twofold. First we describe a set of requirements measures and validate these measures applying two definitions from the literature. After that we describe a case study using these measures to estimate the cost of changes to requirements. Although we were not able to collect sufficient data to draw statistically significant conclusions, we present some lessons learned.", "num_citations": "15\n", "authors": ["1999"]}
{"title": "Definition and validation of requirements management measures\n", "abstract": " The quality of software systems depends on early activities in the software development process, of which the management of requirements is one. When requirements are not managed well, a project can fail or become more costly than intended, and the quality of the software developed can decrease. Among the requirements management practices, it is particularly important to quantify and predict requirements volatility, ie, how much the requirements are likely to change over time. Software measures can help in quantifying and predicting requirements attributes like volatility. However, few measures have yet been defined, due to the fact that the early phases are hard to formalise. Furthermore, very few requirements measures have been validated, which would be needed in order to demonstrate that they are useful. The approach to requirements management in this thesis is quantitative, ie to monitor the requirements management activities and requirements volatility through software measurement. In this thesis, a set of 45 requirements management measures is presented. The measures were defined using the goal question metrics framework for the two predefined goals of the requirements management key process area of the capability maturity model for software. A subset of these measures was validated theoretically and empirically in four case studies. Furthermore, an analysis of validated measures in the literature was performed, showing that there is a lack of validated process, project, and requirements measures in software engineering.The studies presented in this thesis show that size measures are good estimators of requirements\u00a0\u2026", "num_citations": "9\n", "authors": ["1999"]}
{"title": "Construction and validation of prediction models for number of changes to requirements\n", "abstract": " In this paper we present a correlational study in which we assess the ability of five size measures to predict the number of changes to requirements for a medium size software project. The study is explorative, ie we analyse the data collected for our measures to find out the best predictor of number of changes. To our knowledge, no empirical validation of requirements change measures as predictors has been performed in an industrial setting.Based on the data collected from two industrial projects for five measures of size of requirements (number of actors, use cases, words, lines, and revisions), we have built and evaluated prediction models for number of changes to requirements. These models can help project managers to estimate the volatility of requirements and minimize the risks caused by volatile requirements, like schedule and costs overruns. We performed a cross systems validation. For our best model we calculated a pred (0.25)= 0.5, which is better than the accuracy of common effort prediction models like for example COCOMO. Although our models are likely to have only local validity, the general method for constructing the prediction models could be applied in any software development company. In an earlier study, we showed that decisions solely based on developer perception are unreliable. Predictions models, like the one presented here can help to mitigate that risk.", "num_citations": "8\n", "authors": ["1999"]}
{"title": "Are size measures better than expert judgment? An industrial case study on requirements volatility\n", "abstract": " Expert judgment is a common estimation approach in industry. However, there is very little research on the accuracy of expert judgment outside the area of effort estimation. In this paper, we present an industrial case study investigating subjective and objective measures of requirementss volatility. Data was collected in retrospect for all use cases of a medium-size software project. In addition, we determined subjective volatility by interviewing developers and managers of the project. Our data analysis show that structural measures perform better than expert judgment in estimating the total number of changes to use case based requirements. These results confirm results from a previous case study by the authors and suggest that project managers should not rely on expert judgment alone for decision making.", "num_citations": "8\n", "authors": ["1999"]}
{"title": "Non empirical validation of requirements management measures\n", "abstract": " The goal of this position paper is to perform a non-empirical validation of the \u201cnumber of requirements\u201d measure, which can help to control the Requirements Management process. The reason to validate this measure is to contribute to the lack of rigorous measures validation in the literature. The aim has been addressed by applying two definitions of software measure validation to the measure. However the measure is still not validated because of the impossibility to prove that the representation condition is satisfied both theoretically and empirically. Several questions are arisen and discussed and they confirm the immaturity of the measures validation field.", "num_citations": "7\n", "authors": ["1999"]}
{"title": "A correlational study on four measures of requirements volatility\n", "abstract": " Requirements volatility is an important risk factor for software projects. Software measures can help in quantifying and predicting this risk. In this paper, we present the results of a correlational study with the goal of predicting requirements volatility for a medium size software project. Based on the data collected from two industrial software projects for four measures of size of requirements (number of actors, use cases, words, and lines), we have evaluated prediction models for requirements volatility. These models can help project managers to estimate the volatility of requirements and minimize the risks caused by volatile requirements, like schedule and cost overruns. In cross systems validation our best model showed a mean magnitude of relative error (MMRE) of 0.25, which can be considered reliable. In an earlier study, we showed that decisions solely based on developers perception of requirements volatility are, instead unreliable. Predictions models, like the ones presented here, can therefore help taking more reliable decisions.", "num_citations": "6\n", "authors": ["1999"]}
{"title": "M-Health: A Mobile Data Collection Prototype for Monitoring and Evaluation of Public Health Service in the Developing World\n", "abstract": " The rapidly growing use of mobile technologies has increased pressure on the demand for mobile-based data collection solutions to bridge the information gaps in the public health sector. In this paper, a prototype for mobile health data collection (MHDK) is proposed. MHDK is built based on open source data collection frameworks. The proposed prototype offers ways of collecting health data through mobile phones and visualizes the collected data in a web application. The evaluation of the prototype seems to show the feasibility of mobile technologies, particularly open source technologies, in improving the health data collection and reporting systems for the developing world. The use of cellular phones for public health service monitoring and evaluation is therefore one of the most promising developments in the quest to achieve improved public health services.", "num_citations": "5\n", "authors": ["1999"]}
{"title": "A Comparison of two Academic Case Studies on Cost Estimation of Changes to Requirements: Preliminary Results\n", "abstract": " The quality of software systems depends on early activities in the software development process, of which the management of requirements is one. When requirements are not managed well, a project can fail or become more costly than intended, and the quality of the software developed can decrease. Among the requirements management practices, it is particularly important to quantify and predict requirements volatility, ie, how much the requirements are likely to change over time. Software measures can help in quantifying and predicting requirements attributes like volatility. However, few measures have yet been defined, due to the fact that the early phases are hard to formalise. Furthermore, very few requirements measures have been validated, which would be needed in order to demonstrate that they are useful. The approach to requirements management in this thesis is quantitative, ie to monitor the requirements management activities and requirements volatility through software measurement. In this thesis, a set of 45 requirements management measures is presented. The measures were defined using the goal question metrics framework for the two predefined goals of the requirements management key process area of the capability maturity model for software. A subset of these measures was validated theoretically and empirically in four case studies. Furthermore, an analysis of validated measures in the literature was performed, showing that there is a lack of validated process, project, and requirements measures in software engineering. The studies presented in this thesis show that size measures are good estimators of requirements\u00a0\u2026", "num_citations": "5\n", "authors": ["1999"]}
{"title": "A Correlational Study on Four Size Measures as Predictors of Requirements Volatility\n", "abstract": " Requirements volatility is an important risk factor for software projects. Software measures can help in quantifying and predicting this risk. In this paper, we present a correlational study with the goal of predicting requirements volatility for a medium size software project. The study is explorative, ie we analyse the data collected for our measures to find out the best predictor. To our knowledge, no empirical validation of requirements change measures as predictors has been performed in an industrial setting. Based on the data collected from two industrial software projects for four measures of size of requirements (number of actors, use cases, words, and lines), we have built and evaluated prediction models for requirements volatility. These models can help project managers to estimate the volatility of requirements and minimize the risks caused by volatile requirements, like schedule and costs overruns. Performing a cross systems validation, the best model showed a MMRE= 0.25, which can be considered reliable. Although our models are likely to have only local validity, the general method for constructing the prediction models could be applied in any software development company. In an earlier study, we showed that decisions solely based on developers\u2019 perception of requirements volatility are unreliable. Predictions models, like the one presented here, can therefore help taking more reliable decisions.", "num_citations": "3\n", "authors": ["1999"]}
{"title": "Definition and Validation of Requirements Volatility Measures\n", "abstract": " This paper is a summary of a PhD thesis which describes our effort to define and validate requirements volatility measures. These measures have been proven to be reliable predictors of requirements volatility.", "num_citations": "3\n", "authors": ["1999"]}
{"title": "Preliminary results of two academic case studies on cost estimation of changes to requirements\n", "abstract": " Requirements management measures can help us to control changing software requirements and estimate the costs of changing requirements. This paper describes two small case studies, performed in the context of a team-project based software development course. In the first study, we compared intuitive cost estimations of changes to requirements to estimations based on historical data. In the second one, we studied whether even simple tools to support impact analysis affect the accuracy of cost estimations. Although the data we collected in these studies is not suitable for statistical analysis, we can present some interesting results and lessons learned. Our results suggest that estimations based on an impact analysis checklist are better than the intuitive estimations obtained in study one. However, study two is not yet completed therefore we cannot draw further conclusions.", "num_citations": "2\n", "authors": ["1999"]}
{"title": "Towards an Empirical Validation of Requirements Volatility Measures\n", "abstract": " Software measures can help project managers to assess and predict the volatility of requirements. In this paper we describe an industrial case study to validate a set of volatility measures to demonstrate their practical utility. Data was collected in retrospect on fourteen use case models of a small project at a company in Sweden. Values of volatility were obtained by interviewing the stakeholders of the project. Correlation of these two data sets did not support empirical validation of the measures except in one case. By analysing the type and reason of changes, we found that the UCMs with late changes and a detailed description of the changes were those considered highly volatile by the subjects. Our results suggest project manager to measure number of changes to requirements and reasons of change because the subjective volatility is affected by the motivation of changes. However, further investigations are\u00a0\u2026", "num_citations": "1\n", "authors": ["1999"]}