{"title": "Validation of software measures for the functional programming language Erlang\n", "abstract": " Through the use of software measures, relevant properties of the processes and products of software development are to be quantified and objectively assessed. The validation of measures aims at demonstrating that measures actually capture those properties that they are targeted at. In view of the increasing importance of functional programming and the associated expectations, like improved maintainability and other aspects of higher software quality, the present study examines the empirical validation of software measures in the domain of functional programming. The studies published to date on the validation of software measures for functional programming languages are based on data from small or medium-sized experimental software projects with no more than a few thousand lines of code. For this reason, the present study considers a larger software project which contains tens of thousands of lines of code and is in constant professional use: the widespread communication server ejabberd, which is implemented in the functional programming language Erlang. Various software measures are obtained and the relationships to external measures of quality are studied; these measures are derived from a data base of known issues and from code modifications. On this basis, statements are made as to the extent to which specific software measures can be used as indicators for specific properties of a program. Further, comparative values which may be useful for evaluating the measurement values for other systems are determined.", "num_citations": "0\n", "authors": ["2022"]}
{"title": "Validierung von Software-Metriken f\u00fcr die funktionale Programmiersprache Erlang\n", "abstract": " Mittels Softwarema\u00dfen sollen relevante Eigenschaften der Prozesse und Produkte der Softwareentwicklung quantifiziert und objektiv \u00fcberpr\u00fcft werden. Die Validierung von Ma\u00dfen soll zeigen, dass Ma\u00dfe tats\u00e4chlich diejenigen Eigenschaften erfassen, auf die sie abzielen. Angesichts der zunehmenden Bedeutung funktionaler Programmierung und den damit verbundenen Erwartungen, wie bessere Wartbarkeit oder andere Aspekte h\u00f6herer Softwarequalit\u00e4t, besch\u00e4ftigt sich die vorliegende Arbeit mit der empirischen Validierung von Softwarema\u00dfen im Bereich funktionaler Programmierung. Die bisher ver\u00f6ffentlichten Arbeiten zur Validierung von Softwarema\u00dfen f\u00fcr funktionale Programmiersprachen st\u00fctzen sich auf Daten von kleinen bis mittelgro\u00dfen experimentellen Softwareprojekten mit nicht mehr als einigen Tausend Zeilen Code. In der vorliegenden Arbeit wird daher ein gr\u00f6\u00dferes Softwareprojekt betrachtet, das mehrere Zehntausend Zeilen Code enth\u00e4lt und dauerhaft professionell eingesetzt wird: der weit verbreitete Kommunikationsserver ejabberd, der in der funktionalen Programmiersprache Erlang implementiert ist. Verschiedene Softwarema\u00dfe werden erhoben und Zusammenh\u00e4nge mit externen Qualit\u00e4tsmerkmalen untersucht, die sich aus einer Datenbank bekannter Probleme und aus Code\u00e4nderungen ableiten lassen. Auf dieser Grundlage werden Aussagen getroffen, inwiefern bestimmte Softwarema\u00dfe als Indikatoren f\u00fcr bestimmte Eigenschaften eines Programms verwendet werden k\u00f6nnen. Zudem werden Vergleichswerte ermittelt, die bei der Bewertung der Messwerte anderer Systeme helfen k\u00f6nnen.", "num_citations": "0\n", "authors": ["2022"]}