{"title": "Understanding gamification mechanisms for software development\n", "abstract": " In this paper we outline the idea to adopt gamification techniques to engage, train, monitor, and motivate all the players involved in the development of complex software artifacts, from the inception to the deployment and maintenance. The paper introduces the concept of gamification and proposes a research approach to understand how its principles may be successfully applied to the process of software development. Applying gamification to software engineering is not as straightforward as it may appear since it has to be casted to the peculiarities of this domain. Existing literature in the area has already recognized the possible use of such technology in the context of software development, however how to design and use gamification in this context is still an open question. This leads to several research challenges which are organized in a fascinating research agenda that is part of the contribution of this paper\u00a0\u2026", "num_citations": "182\n", "authors": ["713"]}
{"title": "Information exposure from consumer iot devices: A multidimensional, network-informed measurement approach\n", "abstract": " Internet of Things (IoT) devices are increasingly found in everyday homes, providing useful functionality for devices such as TVs, smart speakers, and video doorbells. Along with their benefits come potential privacy risks, since these devices can communicate information about their users to other parties over the Internet. However, understanding these risks in depth and at scale is difficult due to heterogeneity in devices' user interfaces, protocols, and functionality.", "num_citations": "125\n", "authors": ["713"]}
{"title": "DEPAS: a decentralized probabilistic algorithm for auto-scaling\n", "abstract": " The dynamic provisioning of virtualized resources offered by cloud computing infrastructures allows applications deployed in a cloud environment to automatically increase and decrease the amount of used resources. This capability is called auto-scaling and its main purpose is to automatically adjust the scale of the system that is running the application to satisfy the varying workload with minimum resource utilization. The need for auto-scaling is particularly important during workload peaks, in which applications may need to scale up to extremely large-scale systems. Both the research community and the main cloud providers have already developed auto-scaling solutions. However, most research solutions are centralized and not suitable for managing large-scale systems, moreover cloud providers\u2019 solutions are bound to the limitations of a specific provider in terms of resource prices, availability\u00a0\u2026", "num_citations": "65\n", "authors": ["713"]}
{"title": "Bug Fixes, Improvements, ... and Privacy Leaks: A Longitudinal Study of PII Leaks Across Android App Versions\n", "abstract": " A Longitudinal Study of PII Leaks Across Android App Versions Page 1 Bug Fixes, Improvements,... and Privacy Leaks: A Longitudinal Study of PII Leaks Across Android App Versions Jingjing Ren\u2217, Martina Lindorfer\u2020, Daniel J. Dubois\u2217, Ashwin Rao\u2021, David Choffnes\u2217 And Narseo Vallina-Rodriguez\u00a7 \u2217Northeastern University \u2020UC Santa Barbara \u2021University Of Helsinki \u00a7IMDEA Networks Institute And ICSI 1 NDSS 2018 Sponsored by: Page 2 Outline Motivation Threat Model Methodology Macroscopic Trends in Privacy Conclusion 2 Page 3 Motivation Are there any changes in privacy when I update the app? 3 Page 4 The Evolution of Privacy in Mobile Devices How does mobile privacy evolve over time? (\u263a or \u2639) 4 3,545 times in a week 0 35 36 84 50 68 8 0 20 40 60 80 100 Nu mb er o f Times Version Page 5 Outline Motivation Threat Model \u25e6 Privacy definition \u25e6 Leak definition Methodology Macroscopic Trends in \u2026", "num_citations": "57\n", "authors": ["713"]}
{"title": "OptiSpot: minimizing application deployment cost using spot cloud resources\n", "abstract": " The spot instance model is a virtual machine pricing scheme in which some resources of cloud providers are offered to the highest bidder. This leads to the formation of a spot price, whose fluctuations can determine customers to be overbid by other users and lose the virtual machine they rented. In this paper we propose OptiSpot, a heuristic to automate application deployment decisions on cloud providers that offer the spot pricing model. In particular, with our approach it is possible to determine: (i) which and how many resources to rent in order to run a cloud application, (ii) how to map the application components to the rented resources, and (iii) what spot price bids to use to minimize the total cost while maintaining an acceptable level of performance. To drive the decision making, our algorithm combines a multi-class queueing network model of the application with a Markov model that describes the\u00a0\u2026", "num_citations": "37\n", "authors": ["713"]}
{"title": "ShAir: Extensible middleware for mobile peer-to-peer resource sharing\n", "abstract": " ShAir is a middleware infrastructure that allows mobile applications to share resources of their devices (eg, data, storage, connectivity, computation) in a transparent way. The goals of ShAir are:(i) abstracting the creation and maintenance of opportunistic delay-tolerant peer-to-peer networks;(ii) being decoupled from the actual hardware and network platform;(iii) extensibility in terms of supported hardware, protocols, and on the type of resources that can be shared;(iv) being capable of self-adapting at run-time;(v) enabling the development of applications that are easier to design, test, and simulate. In this paper we discuss the design, extensibility, and maintainability of the ShAir middleware, and how to use it as a platform for collaborative resource-sharing applications. Finally we show our experience in designing and testing a file-sharing application.", "num_citations": "29\n", "authors": ["713"]}
{"title": "FlowPrint: Semi-supervised mobile-app fingerprinting on encrypted network traffic\n", "abstract": " Mobile-application fingerprinting of network traffic is valuable for many security solutions as it provides insights into the apps active on a network. Unfortunately, existing techniques require prior knowledge of apps to be able to recognize them. However, mobile environments are constantly evolving, ie, apps are regularly installed, updated, and uninstalled. Therefore, it is infeasible for existing fingerprinting approaches to cover all apps that may appear on a network. Moreover, most mobile traffic is encrypted, shows similarities with other apps, eg, due to common libraries or the use of content delivery networks, and depends on user input, further complicating the fingerprinting process.As a solution, we propose FLOWPRINT, a semi-supervised approach for fingerprinting mobile apps from (encrypted) network traffic. We automatically find temporal correlations among destination-related features of network traffic and use these correlations to generate app fingerprints. Our approach is able to fingerprint previously unseen apps, something that existing techniques fail to achieve. We evaluate our approach for both Android and iOS in the setting of app recognition, where we achieve an accuracy of 89.2%, significantly outperforming stateof-the-art solutions. In addition, we show that our approach can detect previously unseen apps with a precision of 93.5%, detecting 72.3% of apps within the first five minutes of communication.", "num_citations": "28\n", "authors": ["713"]}
{"title": "Lightweight self-organizing reconfiguration of opportunistic infrastructure-mode wifi networks\n", "abstract": " The purpose of this work is to provide a method for exploiting pervasive wireless communication capabilities that are often underutilized on smart devices (e.g., phones, tables, cameras, TVs, etc.) in an opportunistic and collaborative way. This goal can be accomplished by sharing device resources using their built-in WiFi adapter. In this paper we explain why the standard ad-hoc mode for building mobile peer-to-peer networks is not always the best choice and we propose an alternative self-organizing approach in which an opportunistic infrastructure-mode WiFi network is built. The particularity of this network is that each device can either be an access point or a client and change its role and wireless channel over time. This contribution advances the state of the art by using a context-aware approach that considers actual frequency allocation to other devices and monitored traffic. We finally show that our approach\u00a0\u2026", "num_citations": "28\n", "authors": ["713"]}
{"title": "A self-organized load-balancing algorithm for overlay-based decentralized service networks\n", "abstract": " A service network with decentralized ownership is a system where nodes offering a variety of services are administered by different organizations -- or even by a set of individuals. In such a context, nodes hosting services can dynamically enter and exit the system without prior notice, and there is no centralized point of control. If one wants to build into such a system the ability to direct incoming requests for the various hosted services to those nodes that can efficiently fulfill them, one option is to introduce in the system an entity that serves as a gateway to accept service requests, and is an intermediary to re-direct requests as needed. That implies that this intermediary is able to acquire and maintain accurate and up-to-date information on where it can direct incoming requests. Another option, which is the one we pursue in this paper, is to build the system as an overlay network, in which the nodes hosting instances of\u00a0\u2026", "num_citations": "26\n", "authors": ["713"]}
{"title": "When speakers are all ears: Characterizing misactivations of iot smart speakers\n", "abstract": " Internet-connected voice-controlled speakers, also known as smart speakers, are increasingly popular due to their convenience for everyday tasks such as asking about the weather forecast or playing music. However, such convenience comes with privacy risks: smart speakers need to constantly listen in order to activate when the \u201cwake word\u201d is spoken, and are known to transmit audio from their environment and record it on cloud servers. In particular, this paper focuses on the privacy risk from smart speaker misactivations, ie, when they activate, transmit, and/or record audio from their environment when the wake word is not spoken. To enable repeatable, scalable experiments for exposing smart speakers to conversations that do not contain wake words, we turn to playing audio from popular TV shows from diverse genres. After playing two rounds of 134 hours of content from 12 TV shows near popular smart speakers in both the US and in the UK, we observed cases of 0.95 misactivations per hour, or 1.43 times for every 10,000 words spoken, with some devices having 10% of their misactivation durations lasting at least 10 seconds. We characterize the sources of such misactivations and their implications for consumers, and discuss potential mitigations.", "num_citations": "21\n", "authors": ["713"]}
{"title": "Autonomic provisioning and application mapping on spot cloud resources\n", "abstract": " The spot instance model is a virtual machine pricing scheme in which unused resources of cloud providers are offered to the highest bidder. This leads to the formation of a spot price, whose fluctuations can determine customers to be overbid by other users and lose the virtual machine they rented. In this paper we propose a heuristic to automate the decision on: (i) which and how many resources to rent in order to run a cloud application, (ii) how to map the application components to the rented resources, and (iii) what spot price bids to use in order to minimize the total bid price while maintaining an acceptable level of performance. To drive the decision making, our algorithm combines a multi-class queueing network model of the application with a Markov model that describes the stochastic evolution of the spot price and its influence on virtual machine reliability. We show, using a model developed for a real\u00a0\u2026", "num_citations": "20\n", "authors": ["713"]}
{"title": "Sos cloud: Self-organizing services in the cloud\n", "abstract": " Cloud computing is becoming an interesting alternative as a flexible and affordable on-demand environment for deploying custom applications in the form of services. This work proposes a bio-inspired, self-organizing solution to support the allocation and deallocation of virtual machines and the deployment of services on virtual machines in a cloud infrastructure. The goal is twofold: to meet the service level agreements and to minimize the number of required virtual machines.", "num_citations": "19\n", "authors": ["713"]}
{"title": "Mycocloud: Elasticity through self-organized service placement in decentralized clouds\n", "abstract": " We present Mycocloud, a fully self-organized approach to service placement. Mycocloud supports service elasticity within a network of hosts with heterogeneous computational capacity. Mycocloud proposes a completely decentralized algorithm that continuously calculates the dynamic placement of different services on the host nodes, in response to the varying demand for each service, the churn and dynamism of the node set contributing resources to the system, and the changes in the overlay topology. Our simulation results show how Mycocloud provides good performance in terms of convergence rate, response time, system load and network traffic overhead.", "num_citations": "17\n", "authors": ["713"]}
{"title": "A haystack full of needles: Scalable detection of IoT devices in the wild\n", "abstract": " Consumer Internet of Things (IoT) devices are extremely popular, providing users with rich and diverse functionalities, from voice assistants to home appliances. These functionalities often come with significant privacy and security risks, with notable recent large-scale coordinated global attacks disrupting large service providers. Thus, an important first step to address these risks is to know what IoT devices are where in a network. While some limited solutions exist, a key question is whether device discovery can be done by Internet service providers that only see sampled flow statistics. In particular, it is challenging for an ISP to efficiently and effectively track and trace activity from IoT devices deployed by its millions of subscribers---all with sampled network data.", "num_citations": "16\n", "authors": ["713"]}