{"title": "Software tester, we want to hire you! an analysis of the demand for soft skills\n", "abstract": " One important discussion in the software development field is related to the skills that people need to have to build successful software products. This debate is generated on one hand by a large number of failures and delays of software projects. On the other hand, the debate is triggered by the need to build even better-quality software in a rapidly changing world. We will examine to which extent soft skills are relevant when hiring software testers and if there are any specific skills required for agile testers.               We analyzed 400 job advertisements for testers from 33 countries, out of which 64% ask for soft skills. Of the advertisements asking for soft skills, there is, on average, a request for 5 soft skills, 11 testing skills, and 5 technical skills. Only 30% of the companies ask explicitly for agile testers. However, our analysis shows no notable differences in skill demands for agile testers and the rest\u00a0\u2026", "num_citations": "39\n", "authors": ["2238"]}
{"title": "Inter-team coordination mechanisms in large-scale agile\n", "abstract": " Coordination is an important but challenging success factor in large-scale software development. Large-scale is particularly demanding because it involves several teams, and therefore we chose to study coordination between teams. Our aim of this case study was to investigate inter-team coordination mechanisms. By using an established framework from the field of sociology, we found eleven different coordination mechanisms that we mapped into the five different categories. We interviewed four project members and observed 26 meetings in three different teams as part of a larger digitization project. Our results show that even though there are many impersonal mechanisms in the form of various guidelines and rules, the most important mechanism seem to be ad-hoc conversations between two or more project members. The large-scale project had many regularly scheduled meetings. However, the majority of\u00a0\u2026", "num_citations": "32\n", "authors": ["2238"]}
{"title": "The skills that employers look for in software testers\n", "abstract": " Software testing is an integral part of software development that provides better-quality products and user experiences and helps build the reputation of software companies. Though software testers perform a role that requires specific tasks and skills, in-depth studies of software testers lag behind research studies of other roles within software development teams. In this paper, we aim to create a profile of testers by presenting an empirical analysis of the skills the industry currently needs. We analysed data from 400 job adverts in 33 countries. We mapped the skills on a taxonomy comprising test-related, technical, and domain-specific skills. In addition, we looked at the demand for educational attainment, relevant certifications, and previous experience requirements. Our findings show that employers are mostly interested in skills related to test planning and design, test automation, functional testing\u00a0\u2026", "num_citations": "24\n", "authors": ["2238"]}
{"title": "A cost-benefit analysis of accessibility testing in agile software development: results from a multiple case study\n", "abstract": " It is important to include accessibility testing in software development to ensure that the software developed is usable by as many people as possible, independent of their capabilities. Few guidelines exist on how to include accessibility testing in an agile process, and how to select testing methods from a cost-benefit point of view. The end result is that many development teams do not include accessibility testing, since they do not know how to prioritize the different testing methods within a tight budget. In this paper, we present an evaluation of nine accessibility testing methods that fits in an agile software development process. We discuss the cost of each method with regards to resources and knowledge requirements, and based on a cost-benefit analysis, we present an optimal combination of these methods in terms of cost and issues discovered. Finally, we describe how accessibility testing methods can be incorporated into an agile process by using the agile accessibility spiral.", "num_citations": "20\n", "authors": ["2238"]}
{"title": "Agile Digital Transformation: A Case Study of Interdependencies\n", "abstract": " Current digital transformation moves information systems development into larger transformation programs with higher strategic significance and increased complexity in organization. Agile and BizDev are among the practical methods used to practice digital transformation. These methods are characterized by autonomous and diverse teams, and experimental development with the aim of achieving faster time-to-market and customer centric digital offerings. While empirical evidence points to positive effects of such methods in smaller projects, we know less about how key aspects of agile work with increasing interdependencies resulting from larger, more complex organization. Driven by our research question-how are interdependencies addressed in agile digital transformation\u2013we contribute by presenting findings from an empirical case study of a bank practicing agile digital transformation. Applying a theoretical lens of dynamic interactions, our findings sensitize us to the necessity of negotiations, and suggest the need for more research on of the role of divergent evaluative principles in agile digital transformation", "num_citations": "15\n", "authors": ["2238"]}
{"title": "A global view on the hard skills and testing tools in software testing\n", "abstract": " Developing software with high quality is challenging in distributed software development. The purpose of the current study is to investigate the testing skills and tools required in the ever-changing world of global software engineering, according to industrial needs. We analysed 500 job ads from 33 countries. The results show that a quarter of the testers and a fifth of developers are asked to work in distributed projects. The testers are asked to be highly skilled in a variety of test activities and tools, while the testing-skills demand for developers is low and somewhat vague. The profile of testers has a strong technical component in addition to the managerial one. Our findings show that employers need most that testers are competent in automated testing. Furthermore, the industry does not cover all aspects of testing with the demand for testers and developers. Surprisingly, neither role is asked to test the implementation\u00a0\u2026", "num_citations": "13\n", "authors": ["2238"]}
{"title": "How Agile Teams Regard and Practice Universal Design During Software Development\n", "abstract": " It is essential to focus on universal design in agile software development to ensure that the software developed is usable by as many people as possible. This work studies how members of agile teams regard universal design, how the team is organized to focus on universal design, and how the team practices universal design. We have questioned 89 members of agile software projects including developers, tester, designers and project leaders. We present a detailed breakdown of the results based on roles, domains, experience and other factors that explain the differences and similarities among teams. Our findings show that there is a significant difference between what members think, what management think and what members actually do to ensure universal design.", "num_citations": "10\n", "authors": ["2238"]}
{"title": "Planned and unplanned meetings in large-scale projects\n", "abstract": " To succeed with large-scale projects, teams need to coordinate ideas and efforts, which is a core purpose of meetings. We conducted a case study in a large software company where we observed meetings and surveyed 65 members working in large-scale agile projects in Poland, Norway and China. Our results show that employees in the large-scale projects spend, on average, a total of 13.5 hours per week in meetings. The employees spend somewhat more time in ad hoc conversations and unscheduled meetings than they do in scheduled meetings. The majority work in distributed teams, and the size of distributed teams is significantly larger than that of co-located teams. Successful meetings in large-scale projects are critical. We propose a theory of coordination by feedback, which can be used as a basis for future research on meetings in agile software development.", "num_citations": "9\n", "authors": ["2238"]}
{"title": "An empirical investigation of the daily stand-up meeting in agile software development projects\n", "abstract": " Agile methods have in recent years become common in software development projects. The daily stand-up meeting (DSM) is the most used agile practice, but the practice has garnered scant research attention. On the basis of four case studies and one grounded theory study, this thesis explores how the DSM is used and perceived by members of agile software teams.Most views and claims on the DSM are based on only anecdotal evidence; this thesis is the first thorough empirical investigation. DSMs were studied in four companies located in Malaysia, Norway, Poland and the United Kingdom. Qualitative data from 81 interviews and participant observations of 83 DSMs constitute the main data sources.", "num_citations": "8\n", "authors": ["2238"]}
{"title": "Forming and assessing student teams in software engineering courses\n", "abstract": " In software development projects, working in teams is essential. Therefore, software engineering courses often require the students to be working in teams to learn about team work behaviors and practices. The instructors of software engineering courses are presented with several challenges when teaching courses that require teamwork. For example, how to form high-performing student teams, and how to assess their work. The aim of this study is to evaluate whether there are differences in performance whether the students form the teams themselves, or if the teams are formed by the instructor. We evaluated a course involving agile software development by 200 students working in 39 teams. A total of 76% of the students chose to form their own teams, the remaining 24% were placed in teams by the instructors. Our findings indicate that teams formed by the students perform slightly better than the teams formed\u00a0\u2026", "num_citations": "6\n", "authors": ["2238"]}
{"title": "What methods software teams prefer when testing web accessibility\n", "abstract": " Accessibility has become an important focus in software development; the goal is to allow as many people as possible, regardless of their capabilities, to use software. We have investigated the methods that software teams prefer when testing the accessibility of their software. We conducted a large-scale study to evaluate six methods, using a sample of 53 people who work on various software teams. We present a detailed breakdown of the results for each testing method and analyze the differences between the methods. Our findings show that there are statistically significant differences in team members\u2019 preferences, particularly for those with different roles. This implies that a software team should not choose a single method for all team members.", "num_citations": "6\n", "authors": ["2238"]}
{"title": "Characteristic Traits of Software Testers\n", "abstract": " Although there has been extensive research on software testing technicalities-such as testing tools and practices-little research have been conducted within human factors of software testing. In collaboration with Itera, a consultancy company, we begin to fill this research gap. Our current qualitative data-set consists of observation notes, interview transcripts, and conversation logs. Our findings suggest that creativity, being structured, having the ability to see the whole picture, having good interpersonal skills, and eagerness-to-learn are desired traits for a software tester.", "num_citations": "4\n", "authors": ["2238"]}
{"title": "A qualitative study of the background, skill acquisition, and learning preferences of software testers\n", "abstract": " Context: There is an indisputable industrial need for highly skilled individuals in the role of software testers. However, little is known about the educational background of these professionals, their first contact with the role, their preferences in acquiring skills, the impediments they face, and their perception of the software testing role. Objective: In the current paper, we report on the background, skills, learning preferences, and role profiles as described by professionals in software testing, spanning over a significant number of industries, countries, and software development models. Method: We conducted 19 in-depth, semi-structured interviews with software testing practitioners, across eight industries. We performed a content and thematic analysis of the collected data. Results: The practitioners in software testing had diverse educational backgrounds, and their first contact with the testing role was accidental\u00a0\u2026", "num_citations": "4\n", "authors": ["2238"]}
{"title": "Empowering agile project members with accessibility testing tools: a case study\n", "abstract": " There is a growing interest in making software more accessible for everyone, which is emphasized by the numerous suggestions passed into law in many countries. However, many software organizations that use agile methods postpone or neglect accessibility testing. We aimed to understand how accessibility testing can be better integrated into the daily routine of agile projects by conducting a case study in a Norwegian software company. We investigated three accessibility testing tools: automatic checker, simulation glasses, and a dyslexia simulator. We hosted sessions at which agile project members used the tools while thinking out loud, responded to questionnaires, and were interviewed at the end. Additionally, we observed the project members for 18 workdays. Our results show that all three tools are suitable for agile projects. Especially the automatic checker and simulation glasses worked well in finding accessibility issues and were described as easy to use by the project members. Software organizations should empower their agile project members with low-cost and efficient accessibility testing tools to make their products more accessible for all. Doing this early and often in the development cycle may save the project from potential high costs at a later stage.", "num_citations": "4\n", "authors": ["2238"]}
{"title": "A cost-benefit evaluation of accessibility testing in agile software development\n", "abstract": " Accessibility testing in software development is testing the software to ensure that it is usable by as many people as possible, independent of their capabilities. Few guidelines exist on how to include accessibility testing in an agile process, and how to select testing methods from a cost-benefit point of view. The end result is that many development teams do not include accessibility testing, since they do not know how to prioritize the different testing methods within a tight budget. In this paper, we present an evaluation of four accessibility testing methods that fits in an agile software development process. We discuss the cost of each method with regards to resources and knowledge requirements, and based on a cost-benefit analysis, we present the optimal combinations of these methods in terms of cost and issues discovered. Finally, we describe how accessibility testing methods can be incorporated into an agile process by using the agile accessibility spiral.", "num_citations": "4\n", "authors": ["2238"]}
{"title": "A systematic literature review on agile coaching and the role of the agile coach\n", "abstract": " There has been a recent increase in the use of agile coaches in organizations. Although the use of the job title is popular, empirical knowledge about the tasks, responsibilities and skills of an agile coach is lacking. In this paper, we present a systematic literature review on agile coaching and the role of the agile coach. The initial search resulted in a total of 209 studies identified on the topic. Based on our inclusion and exclusion criteria, a total of 67 studies were selected as primary studies. Our findings suggest that agile coaching facilitates the adoption and sustainability of agile methods and deals with agile adoption challenges. Agile coaches help in training and developing software development teams and all the stakeholders involved in the agile adoption process. The primary skills of an agile coach identified herein are leadership qualities, project management skills, technical skills, and expertise in\u00a0\u2026", "num_citations": "3\n", "authors": ["2238"]}
{"title": "Exploring motivation and teamwork in a large software engineering capstone course during the coronavirus pandemic\n", "abstract": " In the spring of 2020, the Department of Informatics covered a 20 ECTS capstone course in Software Engineering, mainly focusing on developing a complex application. The course used active learning methods, and 240 students were working in 42 cross-functional, agile teams. The pandemic caused by the coronavirus had a significant impact on the teaching given by the University of Oslo, as all physical education and collaboration among the teams had to be digital from March 12. At the end of the semester, we conducted a survey that focused on 1) aspects of teamwork (e.g., communication and coordination in the teams) and the relation to team performance (e.g., the application product) and 2), the students' motivation and ability to cooperate through digital platforms. A total of 151 respondents in 41 agile student teams answered the survey. This study aimed to investigate how the teamwork and motivation of the students were affected by having to work virtually. The results are compared to results from the same course in 2019 and a similar survey on 71 professional teams published in 2016. Our results show that the teamwork was evaluated similarly to both the evaluation of survey conducted in 2019 and on the professional teams in 2016. The motivation among the students remained high, even though they had to collaborate virtually.", "num_citations": "2\n", "authors": ["2238"]}
{"title": "Threat Poker: Gamification of Secure Agile\n", "abstract": " Agile software development is practiced in most software development projects around the world. To explicitly consider and include security requirements as part of agile software development is referred to as \u2018secure agile\u2019. To include security will naturally require additional time and effort, with potentially reduced agility as a consequence. To maintain agility, it is important to have efficient methods to include security in the development process. In this study, we describe enhancements to Threat Poker, which is a game designed for the software development team to deal with security threats identified during the agile development project. Games can be valuable educational tools for actively engaging students and practitioners alike. An experiment with students indicates that playing Threat Poker increases security awareness and that it is a fun and simple way to discuss identified security threats and how to remove\u00a0\u2026", "num_citations": "2\n", "authors": ["2238"]}
{"title": "A Review of Factors Promoting IS Project Escalation\n", "abstract": " The objective of this paper is to investigate the tendency to continue a project even when it is obvious that it will not provide the planned benefits, often referred to as \u201cproject escalation\u201d or \u201cescalation of commitment.\u201d The investigation aims to identify factors that empirically have been found to promote IS project escalation. We examined 1163 papers related to the phenomenon of IS project and commitment escalation and found 42 of them to include relevant empirical research. We provide a comprehensive overview of 43 factors that can have important implications for practice, especially for organizations trying to avoid escalation in the first place or uncover already escalated projects.", "num_citations": "2\n", "authors": ["2238"]}
{"title": "Exploring human factors of the agile software tester\n", "abstract": " Although extensive research has been conducted on the characteristics of the agile developer, little attention has been given to the features of the software-testing role. This paper explores the human factors of the software testers working in agile projects through a qualitative study focusing on how these factors are perceived. We interviewed 22 agile software practitioners working in three international companies: 14 testers, five developers, and three designers. Additionally, we observed 11 meetings and daily work of 13 participants in one of the companies. Our findings show that the views on the human factors shaping the agile software tester\u2019s role were crystallized into seven traits, which the agile team members saw as central for the software-testing role: the ability to see the whole picture, good communication skills, detail-orientation, structuredness, creativeness, curiosity, and adaptability. The testers\u00a0\u2026", "num_citations": "1\n", "authors": ["2238"]}
{"title": "The Human Factors of the Agile Software Tester\n", "abstract": " Although there has been extensive research on the technological aspects of the software testers, little investigation has been conducted within human factors determinant for the software testing role. The current paper explores the human factors of the software testers working in agile projects, through a qualitative study focusing on the perception of these factors, in a software service company. We interviewed 13 agile team members; 6 testers, 5 developers, and 2 designers. Additionally, we observed 11 meetings and observed the teams at work. Our results show that the following six traits are pivotal for the software testing role, seen by working agile software professionals: able to see the whole picture, having good communication skills, being detailed-oriented, structured, creative, and adaptable. Based on our results, we propose how organizations may think when recruiting agile software testers, how the\u00a0\u2026", "num_citations": "1\n", "authors": ["2238"]}
{"title": "Strategizing for IT project success in the digital era\n", "abstract": " The objective of this paper is to increase our understanding of how organizations strategize with a view to making their digital investments successful and the impact such digital strategies actually have on business outcomes. We examined 2940 papers related to digital business strategies, of which 31 were included in relevant empirical research. These papers were reviewed and subjected to thematic synthesis. Many organizations appear to initiate scattered digital initiatives without a clear idea of where they are going. Companies can benefit from a deliberate digital strategy that enhances the ability of businesses to quickly adjust to new trends, possibilities, and threats, as well as a constant balancing of new possibilities with the exploitation of current assets.", "num_citations": "1\n", "authors": ["2238"]}
{"title": "Strategizing for Successful IT Projects in the Digital Era\n", "abstract": " The objective of this paper is to increase our understanding of how organizations strategize with a view to making their digital investments successful and the impact such digital strategies actually have on business outcomes. We examined 2940 papers related to digital business strategies, of which 31 were included in relevant empirical research. These papers were reviewed and subjected to thematic synthesis. Many organizations appear to initiate scattered digital initiatives without a clear idea of where they are going. Companies can benefit from a deliberate digital strategy that enhances the ability of businesses to quickly adjust to new trends, possibilities, and threats, as well as a constant balancing of new possibilities with the exploitation of current assets.", "num_citations": "1\n", "authors": ["2238"]}
{"title": "A Comparative Case Study of Teamwork in Norwegian Agile Software Development Projects\n", "abstract": " This paper presents the progress of my research for the 5th International Doctoral Symposium on Empirical Software Engineering (IDoESE 2010) Bolzano-Bozen, Italy. The main focus of my study is effective teamwork and coordination across teams in national and global software development projects. I investigate teamwork in projects doing agile software development (ASD).I want to develop an understanding about human and social factors and the challenges that arise in agile software projects. What makes the teamwork more effective, and what makes it less effective? It is increasingly common to have distributed teams, and this might add challenges to ASD: cultural challenges, communication challenges and knowledge sharing to name a few.", "num_citations": "1\n", "authors": ["2238"]}