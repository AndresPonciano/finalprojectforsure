{"title": "Generalized discrete software reliability modeling with effect of program size\n", "abstract": " Generalized methods for software reliability growth modeling have been proposed so far. But, most of them are on continuous-time software reliability growth modeling. Many discrete software reliability growth models (SRGM) have been proposed to describe a software reliability growth process depending on discrete testing time such as the number of days (or weeks); the number of executed test cases. In this paper, we discuss generalized discrete software reliability growth modeling in which the software failure-occurrence times follow a discrete probability distribution. Our generalized discrete SRGMs enable us to assess software reliability in consideration of the effect of the program size, which is one of the influential factors related to the software reliability growth process. Specifically, we develop discrete SRGMs in which the software failure-occurrence times follow geometric and discrete Rayleigh distributions\u00a0\u2026", "num_citations": "77\n", "authors": ["478"]}
{"title": "Testing-coverage dependent software reliability growth modeling\n", "abstract": " We discuss software reliability growth modeling considering with testing-coverage. There are several testing-coverage evaluation criteria for the testing thoroughness. As one of them, statement (or block) testing-coverage is measured as the fraction of the total number of statements that have been executed at least once by the test-cases. First, an alternative evaluation metric for the testing-coverage is proposed in this paper. And then, we develop a software reliability growth model by formulating the relationship between the alternative testing-coverage evaluation function and the number of detected faults. Finally, we show numerical examples for software reliability analysis based on the proposed model by using an actual data set.", "num_citations": "50\n", "authors": ["478"]}
{"title": "Optimal software release policy with change-point\n", "abstract": " Testing-time when a characteristic of a software failure-occurrence or fault-detection phenomenon is notably changed is ordinarily called change-point. The effect of the change-point on software reliability growth process influences on accuracy of the software reliability assessment based on SRGMs which are mostly developed under the assumption that the stochastic characteristic of the software failure-occurrence or the fault-detection phenomenon does not change throughout the testing. In this paper, we discuss a framework for software reliability growth modeling with change-point as one of the solutions to incorporate the effect of the change-point into software reliability assessment, and also discuss its application to an optimal software release problem with change-point. That is one of the interesting issues for project management of software development. Finally, we show numerical examples of our model\u00a0\u2026", "num_citations": "48\n", "authors": ["478"]}
{"title": "Two-dimensional software reliability assessment with testing-coverage\n", "abstract": " We propose a two-dimensional SRGM describing a software reliability growth process on the two-dimensional time-space which consists of testing-time and testing-coverage. Our two-dimensional SRGM conserves the theoretical means for the effect of such two-types of the reliability growth factors to the software reliability growth process. And we also discuss a parameter estimation method and a software reliability assessment measure of our model. Further, we show numerical examples for software reliability analysis by using actual data. Finally, we conduct goodness-of-fit evaluation of our model to the actual data, and see that our model has a better performance than representative one-dimensional SRGMs in terms of mean squared errors.", "num_citations": "38\n", "authors": ["478"]}
{"title": "Discrete software reliability assessment with discretized NHPP models\n", "abstract": " A software reliability growth model is one of the fundamental technique to assess software reliability quantitatively. The software reliability growth model is required to have a good performance in terms of goodness-of-fit, predictability, and so forth. In this paper, we propose discretized software reliability growth models. As to the software reliability growth modeling, discretized nonhomogeneous Poisson process models are investigated particularly for accurate software reliability assessment. We show that the discrete nonhomogeneous Poisson process models have better performance than discretized deterministic software reliability growth models which have been proposed so far.", "num_citations": "37\n", "authors": ["478"]}
{"title": "Two-dimensional software reliability measurement technologies\n", "abstract": " This paper discusses two-dimensional software reliability measurement technologies, which describe a software reliability growth process depending on two-types of software reliability growth factors: Testing-time and testing-effort factors. From the view point of actual software failure-occurrence mechanism, it is natural to consider that a software reliability growth process depends on not only testing-time factor but also other software reliability growth factors, i.e., testing-effort factors, such as test-execution time, testing-skill of test engineers, testing-coverage. From such reason, the two-dimensional software reliability measurement technologies enable us to conduct more feasible software reliability assessment than the one-dimensional (conventional) software reliability measurement approach, in which it is assumed that the software reliability growth process depends only on testing-time. We discuss two-types of two\u00a0\u2026", "num_citations": "35\n", "authors": ["478"]}
{"title": "Software reliability measurement with change-point\n", "abstract": " CiNii \u8ad6\u6587 - Software reliability measurement with change-point CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853 \u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f \u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 Software reliability measurement with change-point INOUE S. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 INOUE S. \u53ce\u9332\u520a\u884c\u7269 Proc. International Conference on Quality and Reliability (ICQR 2007) Proc. International Conference on Quality and Reliability (ICQR 2007), 170-175, 2007 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u8907\u6570\u56de\u306e\u30c1\u30a7\u30f3\u30b8\u30dd\u30a4\u30f3\u30c8\u3092\u8003\u616e\u3057\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u8a55\u4fa1\u306b\u95a2\u3059\u308b\u4e00\u8003\u5bdf \u4e95\u4e0a \u771f\u4e8c , \u5c71\u7530 \u8302 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u6280\u8853\u7814\u7a76\u5831\u544a. R, \u4fe1\u983c\u6027 111(253), 17-22, 2011-10-14 \u53c2\u8003\u6587\u732e15\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) 10030073660 \u8cc7\u6599\u7a2e\u5225 \u4f1a\u8b70\u8cc7\u6599 \u30c7\u30fc\u30bf\u63d0\u4f9b\u5143 CJP\u5f15\u7528 \u306b/\u2026", "num_citations": "24\n", "authors": ["478"]}
{"title": "Bivariate change-point modeling for software reliability assessment with uncertainty of testing-environment factor\n", "abstract": " We observe a phenomenon that the probabilistic characteristic of software failure-occurrence time-interval change notably in an actual testing-phase of a software development process. Testing-time observing such phenomenon is ordinarily called change-point. This phenomenon is treated as one of the factors affecting the accuracy of software reliability assessment based on a software reliability growth model. And regarding software reliability growth modeling, a bivariate software reliability growth model, which describes a software reliability growth process depending on the software reliability growth factor consists of testing-time and testing-effort factors, has been proposed for improving software reliability assessment accuracy based on the software reliability growth process. In this paper, we develop a bivariate software reliability growth model considering with the uncertainty of the change of software\u00a0\u2026", "num_citations": "20\n", "authors": ["478"]}
{"title": "Software reliability growth modeling frameworks with change of testing-environment\n", "abstract": " We discuss software reliability measurement with change of testing-environment by developing software reliability growth models. It is known that such change influences the accuracy for the software reliability assessment based on a software reliability growth model. This paper additionally shows numerical illustrations for software reliability measurement based on our software reliability growth models by using actual data.", "num_citations": "18\n", "authors": ["478"]}
{"title": "Software reliability measurement with effect of change-point: Modeling and application\n", "abstract": " This paper discusses software reliability growth modeling with effect of changing the software failure-occurrence phenomenon in the testing phase, and checks the software reliability measurement accuracy of our models by using actual data. Especially, our modeling approach in this paper uses a testing-environmental function for describing a relationship between the software failure-occurrence time intervals before the change and those after the change. Further, we discuss a problem for estimating the optimal changing-time and software shipping-time simultaneously from the point of view of the total expected software cost expending in the testing and operational phases. Finally, we show examples of the application of software reliability measurement based on our model and those of the derived optimal policy by using actual data.", "num_citations": "18\n", "authors": ["478"]}
{"title": "Lognormal process software reliability modeling with testing-effort\n", "abstract": " We propose a software reliability growth model with testing-effort based on a continuous-state space stochastic process, such as a lognormal process, and conduct its goodness-of-fit evaluation. We also discuss a parameter estimation method of our model. Then, we derive several software reliability assessment measures by the probability distribution of its solution process, and compare our model with existing continuous-state space software reliability growth models in terms of the mean square error and the Akaike\u2019s information criterion by using actual fault count data.", "num_citations": "16\n", "authors": ["478"]}
{"title": "A software reliability growth modeling based on infinite server queueing theory\n", "abstract": " CiNii \u8ad6\u6587 - A software reliability growth modeling based on infinite server queueing theory CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74 \u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3\u696d\u52d9\u306e\u518d\u958b\u306b\u3064\u3044\u3066 A software reliability growth modeling based on infinite server queueing theory INOUE S. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 INOUE S. \u53ce\u9332\u520a\u884c\u7269 Proc. 9th ISSAT Intern. Conf. Reliab. Quali. Des., 2003 Proc. 9th ISSAT Intern. Conf. Reliab. Quali. Des., 2003, 305-309, 2003 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u8a55\u4fa1\u306e\u305f\u3081\u306e \u96e2\u6563\u578b\u7121\u9650\u30b5\u30fc\u30d0\u5f85\u3061\u884c\u5217\u30e2\u30c7\u30eb \u4e95\u4e0a \u771f\u4e8c , \u5ca9\u672c \u76f4\u6a39 , \u5c71\u7530 \u8302 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u6280\u8853\u7814\u7a76\u5831\u544a . R, \u4fe1\u983c\u6027 109(67), 25-30, 2009-05-22 \u53c2\u8003\u6587\u732e17\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) \u306b/(\u2026", "num_citations": "16\n", "authors": ["478"]}
{"title": "Toward practical software reliability assessment with change-point based on hazard rate models\n", "abstract": " A software hazard rate model is known as one of the important and useful mathematical models for describing a software failure-occurrence phenomenon and conducting quantitative software reliability assessment. It is known that there exists a case that characteristic of the software failure-occurrence or the fault-detection phenomenon is changed notably in a testing-phase or an operational phase due to changes of factors influencing on the software reliability growth process. Taking into consideration of the effect of the change in software reliability growth modeling is expected to conduct more accurate software reliability assessment because it is said that such approach enables us to conduct more plausible software reliability assessment reflecting an actual testing-environment. Especially in this paper, we develop exponential-type software hazard rate models with effect of change-point, and discuss change-point\u00a0\u2026", "num_citations": "15\n", "authors": ["478"]}
{"title": "Two-dimensional change-point modeling for software reliability assessment\n", "abstract": " Most of software reliability growth models (SRGMs) describe a software reliability growth process depending on only testing-time. However, it is said that a software reliability growth process in an actual testing-phase of a software development process depends on not only testing-time but also testing-effort factors. And we often observe a phenomenon that stochastic characteristics of the software failure-occurrence time or the software failure-occurrence time-interval changes notably in an actual testing-phase. The testing-time when such phenomenon is observed is called change-point. It is said that the effect of change-point on the software reliability growth process influences accuracy for software reliability assessment based on conventional SRGMs. This paper discusses a two-dimensional software reliability growth modeling with change-point for describing an actual phenomenon being related to the software\u00a0\u2026", "num_citations": "15\n", "authors": ["478"]}
{"title": "A unified approach for developing software reliability growth model using infinite server queuing model\n", "abstract": " In the past 35 years numerous software reliability growth models (SRGMs) have been proposed under diverse testing and debugging (T&D) environments and applied successfully in many real life software projects but no SRGM can claim to be the best in general as the physical interpretation of the T&D is not general. Unified modeling approach proves to be very successful in this regard and provides an excellent platform for obtaining several existing SRGM following single methodology. It forms the main focus of this paper; here we propose a unification modeling approach applying the infinite server queuing theory based on the basic assumptions of an SRGM defining three level of complexity of faults. Our unification methodology can be used to obtain several existing and new SRGMs which consider testing a one stage process with no fault categorization, two/three stage process with random delay functions\u00a0\u2026", "num_citations": "15\n", "authors": ["478"]}
{"title": "NHPP-based change-point modeling for software reliability assessment and its application to software development management\n", "abstract": " We often observe a phenomenon that the stochastic behavior of software failure-occurrence time-interval changes notably due to the change of the testing-environment during testing activities. Testing-time when such phenomenon is observed is called change-point. We discuss a framework for software reliability growth modeling with the change of the change-point for improving the accuracy of software reliability assessment based on software reliability growth models, and develop specific non-homogeneous Poisson process (NHPP) models based on our modeling framework based on typical NHPP models. Also, we investigate the usefulness of our proposed models by conducting goodness-of-fit comparisons with corresponding existing models by using actual data. Further, we discuss the optimal software release problems, which are interesting issues in software development management, based on\u00a0\u2026", "num_citations": "13\n", "authors": ["478"]}
{"title": "Extended hazard rate models for software reliability assessment with effect at change-point\n", "abstract": " A software hazard rate model is known as one of the important and useful mathematical models for describing the software failure occurrence phenomenon observed in a testing phase. It is difficult to say that the testing environment always constant during a testing phase due to changing the specification and fault target and so forth. Therefore, taking into consideration of the effect of the change in software reliability growth modeling is expected to conduct more accurate software reliability assessment. In this paper, we develop extended software hazard rate models based on well-known Jelinski\u2013Moranda and Moranda models, by considering with a change of testing environment. Especially in this paper, we incorporate the uncertainty of the effect of the change on the software reliability growth process into the software hazard rate modeling. Finally, we show numerical examples for our models and results of model\u00a0\u2026", "num_citations": "13\n", "authors": ["478"]}
{"title": "Performance improvement of hiroshima city children tracking system by correction of wrong registrations on school routes\n", "abstract": " Recently, in Japan, crimes against children become atrocious and brutal. In some cases, children are attacked on the way to and back from school. Many technologies using ubiquitous networks have been developed to prevent crimes against children on their way to and back from school. Existing technologies, however, are not powerful to prevent crimes against children and helpful for parents since it is difficult to take information of children as a group. If the system can provide group information of children on the way to and back from school, it is easy for parents to know their safety level. This paper proposes a new technology for children tracking system based on mobile ad hoc networks and describes outline of children tracking system in Hiroshima City. The field experiments using the children tracking system have been performed and the effectiveness of the system is shown by data analysis for the experimental\u00a0\u2026", "num_citations": "13\n", "authors": ["478"]}
{"title": "A hierarchical routing protocol based on autonomous clustering in ad hoc networks\n", "abstract": " Recently, in wired networks, a hierarchical structure has been introduced to improve management and routing. In ad hoc networks, we introduce a hierarchical structure to achieve the same goal. However, it is difficult to introduce the hierarchical structure because all mobile hosts are always moving around the network. So, we proposed the clustering scheme to construct the hierarchical structure before. In this paper, we propose a new hierarchical routing protocol called Hi-TORA based on the clustering scheme. And we show the experimental evaluation of Hi-TORA with respect to the number of control packets, accuracy of packet delivery and hop counts in comparison with TORA.", "num_citations": "13\n", "authors": ["478"]}
{"title": "Multi-attribute utility theory for estimation of optimal release time and change-point\n", "abstract": " Existing optimal software release problems have been discussed by using an evaluation criterion such as cost, reliability, delivery. When we use the methods by those evaluation criteria, the optimal release time is determined by an evaluation criterion. However, it is more realistic that we determine the optimal release time with multiple attributes. Therefore, in this study, we estimate the optimal release time by using multi-attribute utility theory (MAUT). Since MAUT is one of utility theories, we can estimate an optimal release time and change-point from the perspective of utility by maximizing the multi-attribute utility function. Especially, we consider the both of two attributes: cost and reliability. Then, we apply a software reliability growth model (SRGM) with change-point to represent the cost and reliability attributes. Concretely, we use an exponential SRGM with change-point. That is, we can estimate not only the\u00a0\u2026", "num_citations": "12\n", "authors": ["478"]}
{"title": "A bivariate software reliability model with change-point and its applications\n", "abstract": " Testing-time when a change of a stochastic characteristic of the software failure-occurrence time or software failure-occurrence time-interval is observed is called change-point. It is said that effect of the change-point on the software reliability growth process influences on accuracy for software reliability assessment based on a software reliability growth model (SRGM). We propose an SRGM with the effect of the change-point based on a bivariate SRGM, in which the software reliability growth process is assumed to depend on the testing-time and testing-effort factors simultaneously, for accurate software reliability assessment. And we discuss an optimal software release problem for deriving optimal testing-effort expenditures based on our model. Further, we show numerical examples of software reliability assessment based on our bivariate SRGM and estimation of optimal testing-effort expenditures by using actual data.", "num_citations": "12\n", "authors": ["478"]}
{"title": "Integrable difference equations for software reliability assessment and their applications\n", "abstract": " This paper discusses software reliability growth models (SRGMs) based on integrable difference equations, which are derived from the original nonhomogeneous Poisson process models by using Hirota\u2019s bilinearization methods. After that, goodness-of-fit comparisons of our discrete models with existing deterministic discrete models are performed by using actual data sets. Further, we disucss discrete optimal software release problems under simultaneous cost and reliability requirements based on our discrete SRGMs.", "num_citations": "12\n", "authors": ["478"]}
{"title": "Discrete program-size dependent software reliability assessment: Modeling, estimation, and goodness-of-fit comparisons\n", "abstract": " In this paper we propose a discrete program-size dependent software reliability growth model flexibly describing the software failure-occurrence phenomenon based on a discrete Weibull distribution. We also conduct model comparisons of our discrete SRGM with existing discrete SRGMs by using actual data sets. The program size is one of the important metrics of software complexity. It is known that flexible discrete software reliability growth modeling is difficult due to the mathematical manipulation under a conventional modeling-framework in which the time-dependent behavior of the cumulative number of detected faults is formulated by a difference equation. Our discrete SRGM is developed under an existing unified modeling-framework based on the concept of general order-statistics, and can incorporate the effect of the program size into software reliability assessment. Further, we discuss the method of\u00a0\u2026", "num_citations": "12\n", "authors": ["478"]}
{"title": "An adaptive automobile control system using scheduling by imprecise computation and multiagent-based traffic information exchange and its experimental evaluation\n", "abstract": " Recently, it is expected that traffic congestion in expressways is dissolved, and that safe and smooth traffic is realized. In this paper we propose an automobile control system based on imprecise computation and multiagents. The automobile control system consists of sensors, mobile stations and automobiles. Each mobile station gathers traffic information through sensors in an expressway, exchanges the traffic information with other mobile stations through a network, and gives driving directions to every automobile in the expressway. Also we evaluate effects on traffic information exchange in the automobile control of the proposed system by simulation experiments. Simulation results show that the traffic information exchange in the proposed system improves performance, that is, the average speed of automobiles and the number of automobiles that arrive at their destinations.", "num_citations": "12\n", "authors": ["478"]}
{"title": "Implementation and evaluation of dual-purpose normal and disaster situations system based on delay and disruption tolerant Bluetooth MANETs\n", "abstract": " Dual-purpose systems for both normal and disaster situations are necessary for providing continuous services from normal situations to disaster situations. We have been developing the dual-purposed systems based on the assurance network design principle. The assurance network design principle makes the dual-purpose systems work stably in both normal and disaster situations. This paper proposes a connectivity-dependent data propagation scheme, in which each terminal transfers data adaptively by wireless multi-hop data transfer or store-and-forward data transfer depending on whether the terminal has connections to its neighboring terminals. To verify the resilience against disconnection among neighboring terminals, we show field experimental results on data propagation time. Also we propose the dual-purpose system, in which there are two types of graphical user interface (GUI) for both situations. Whenever each terminal receives a special packet in disaster situations, the GUI automatically switches from one type for normal situations to another type for disaster situations. We have unified these two types of GUI so that users can understand how to use them even when GUI is automatically switched. To validate feasibility of the dual-purpose normal and disaster situations system, we show experimental results on dissemination of assessment information and automatical switching of GUIs.", "num_citations": "11\n", "authors": ["478"]}
{"title": "Change-point modeling for software reliability assessment depending on two-types of reliability growth factors\n", "abstract": " We often observe a phenomenon that stochastic characteristics of the software failure-occurrence time or software failure-occurrence time-interval changes notably in an actual testing-phase of a software development process. The testing-time when such phenomenon is observed is called change-point. It is said that the effect of change-point on the software reliability growth process influences accuracy for software reliability assessment based on a software reliability growth model (SRGM). This paper discusses a two-dimensional software reliability growth modeling framework with change-point, in which the software reliability growth process is assumed to depend on the testing-time and testing-effort factors simultaneously. Further, we show examples of the applications of software reliability assessment based on a two-dimensional SRGM developed under our modeling framework by using actual data.", "num_citations": "11\n", "authors": ["478"]}
{"title": "A proposal of grass-roots information delivery systems for protecting oneself from land disasters\n", "abstract": " (in English) In order to minimize damages due to landslide disasters caused by heavy rain and so on, it is quite important for residents to quickly take refuge from the disasters before being serious about their lives. Therefore it is necessary to develop the environment that the residents are able to judge the appropriate timing for evacuation. In this study, we newly propose the Grass-roots Information Distribution System using MANET (Mobile Ad-hoc Network) connected with mobile terminals such as smart phones, for the purpose of sharing the disaster information among the residents with grass-roots approach. In this system, the concept of assurance network is adopted and the MANET technologies are developed with high durability and reliability. Also we are developing mobile sensing technologies using mobile terminal for distributing and sharing the disaster information such as camera images and precursor\u00a0\u2026", "num_citations": "9\n", "authors": ["478"]}
{"title": "Software reliability assessment with multiple changes of testing-environment\n", "abstract": " We discuss software reliability assessment considering multiple changes of software fault-detection phenomenon. The testingtime when the characteristic of the software failure-occurrence or faultdetection phenomenon changes notably in the testing-phase of a software development process is called change-point. It is known that the occurrence of the change-point influences the accuracy for the software reliability assessment based on a software reliability growth models, which are mainly divided into software failure-occurrence time and fault counting models. This paper discusses software reliability growth modeling frameworks considering with the effect of the multiple change-point occurrence on the software reliability growth process in software failure-occurrence time and fault counting modeling. And we show numerical illustrations for the software reliability analyses based on our models by using actual data.", "num_citations": "9\n", "authors": ["478"]}
{"title": "Change of surface composition of B4C single crystal due to heat treatment\n", "abstract": " For a single crystal of B4C, change of the surface composition due to a heat treatment with temperature range from 600 to 1300\u2009\u00b0C was studied by Auger electron spectroscopy analysis. The boron concentration of the surface was continuously measured after the heating temperature became constant. The boron concentration decreased with the heating time and became a steady\u2010state value. The decreasing rate increased as the heating temperature. As the increase of the heating temperature, the boron concentration in the steady state became larger. At 1200\u2009\u00b0C, the boron concentration became close to the bulk concentration. Evaporated particles from the surface of B4C were measured by a collector probe to examine the process of the change in boron concentration. It was found that only boron atoms evaporated from the surface. A simple model was applied to explain the change in composition. Estimated\u00a0\u2026", "num_citations": "8\n", "authors": ["478"]}
{"title": "Markovian software reliability modeling with change-point\n", "abstract": " We discuss a Markovian modeling approach for software reliability assessment with the effects of change-point and imperfect debugging environment. Testing-time when the characteristic of the software failure-occurrence or fault-detection phenomenon changes notably is called change-point. Taking into account the effect at change-point in software reliability growth modeling is important to improve the accuracy of software reliability assessment. Our modeling approach describes a software reliability growth process with not only the effect of change-point but also the imperfect debugging activities based on a semi-Markov process for reflecting actual situation of debugging activities. Finally, we show numerical examples of our model for software reliability analysis and check the performance of our model with an existing Markovian software reliability growth model by using actual data.", "num_citations": "7\n", "authors": ["478"]}
{"title": "An all-stage truncated multiple change point model for software reliability assessment\n", "abstract": " We propose a software reliability growth modeling framework with multiple change point occurrence environment. Especially in our modeling framework, the probability distribution of the initial fault content follows a zero-truncated Poisson distribution. Therefore, our modeling approach in this paper can derive the proper mean time between software failures (MTBF), which is one of the important reliability assessment measures and is not able to derive in the usual nonhomogeneous Poisson process modeling, which is one of the well-known software reliability modeling approach. This paper also show numerical examples of application of our proposed multiple change point model to software reliability assessment by using actual fault counting data.", "num_citations": "7\n", "authors": ["478"]}
{"title": "A framework for two-dimensional software reliability modeling with program size\n", "abstract": " CiNii \u8ad6\u6587 - A framework for two-dimensional software reliability modeling with program size CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 [\u6a5f\u95a2\u8a8d\u8a3c] \u5229\u7528\u7d99\u7d9a\u624b\u7d9a\u304d\u306e\u3054\u6848\u5185 \u5b66\u8a8d\u8a8d\u8a3c\u306e\u4e0d\u5177\u5408\u306b\u3064\u3044\u3066 A framework for two-dimensional software reliability modeling with program size INOUE S. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 INOUE S. \u53ce\u9332\u520a\u884c\u7269 Proc. 14th ISSAT Intern. Conf. Reliability and Quality in Design, 2008 Proc. 14th ISSAT Intern. Conf. Reliability and Quality in Design, 2008, 198-202, 2008 \u88ab\u5f15\u7528 \u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u30c1\u30a7\u30f3\u30b8\u30dd\u30a4\u30f3\u30c8\u3092\u8003\u616e\u3057\u305f2\u5909\u91cf\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u30e2\u30c7\u30eb\u306b\u95a2\u3059\u308b\u4e00 \u8003\u5bdf \u4e95\u4e0a \u771f\u4e8c , \u798f\u9593 \u656c\u4ecb , \u5c71\u7530 \u8302 \u96fb\u5b50\u60c5\u5831\u901a\u4fe1\u5b66\u4f1a\u6280\u8853\u7814\u7a76\u5831\u544a. R, \u4fe1\u983c\u6027 110(159)-\u2026", "num_citations": "7\n", "authors": ["478"]}
{"title": "Adaptable load balancing using network transferable computer associated with mobile IP\n", "abstract": " \"Network Transferable Computer (NTC)\" is a system, which transports a running image of OS to other computers using Virtual Machine. We propose a new load balancing method that uses NTC system associated with Mobile IP for building a server. In this method, the system analyzes the information gathered from the local network to which the target server is attached and it moves the server itself to an another network so that considerable access traffics do not pass the particular path. As soon as analysis of the local information is done, the system can decide whether the server moves or not, and, if it does, where the server will move. After moving to another network, it is possible to get more information from the network and to modify the decision criteria. Thus this method realizes an adaptable load balancing on network traffic.", "num_citations": "7\n", "authors": ["478"]}
{"title": "Software reliability assessment using exponential-type change-point hazard rate models\n", "abstract": " We discuss software hazard rate modeling with a change of testing-environment and a software reliability assessment method based on the proposed software hazard rate models. A software hazard rate model is known as one of the important and useful mathematical models for describing the software failure-occurrence phenomenon and conducting quantitative software reliability assessment. Taking into consideration of the effect of the change in software reliability growth modeling is expected to conduct more accurate software reliability assessment because it is said that such approach enables us to conduct more plausible software reliability assessment reflecting the actual testing-environment. Especially in this paper, we develop exponential-type software hazard rate models with effect of change-point and a software reliability assessment method based on our models. Finally, we show numerical examples\u00a0\u2026", "num_citations": "6\n", "authors": ["478"]}
{"title": "Safety Support System on School Routes Based on Grouping of Childlen in Mobile Ad Hoc Networks\n", "abstract": " In 2007, the Ministry of Internal Affairs and Communications of Japan tested 16 different models of a safety support system for children on school routes. One of the models was constructed and tested at a school in an area of the city of Hiroshima from September to December of 2007. For the model project, we developed a new safety support system for children on school routes by using a mobile ad hoc network constructed from mobile phones with the Bluetooth function. The support system provided good performance and accuracy in maintaining the safety of students on the way to school. The basic idea of the safety support system is the grouping of children and volunteers using a mobile ad hoc network. In this paper, we present an outline of this system and evaluate the performance of grouping and the effectiveness of our approach.", "num_citations": "6\n", "authors": ["478"]}
{"title": "Dynamic load balancing using network transferable computer\n", "abstract": " This paper proposes a new dynamic load balancing (DLB) method for network traffic. In client-server systems, intense access to a particular server host often causes excessive traffic on a path connected to the server. Although mirror servers are used for load balancing of host performance, this may not be sufficient to balance the load of network traffic. In the DLB method a server has the capability to move to another network, so that flows of packets toward/from the server change and a part of packets avoid going through the crowded path. This reduction of the traffic on the congested path achieves load balancing of network traffic. The DLB method is based on network transferable computer (NTC) and mobile IP. Also a management system is provided. The management system has the following responsibilities. (1) Analyzing packets for the server. (2) Calculating the fluctuation rate of the amount of packets toward\u00a0\u2026", "num_citations": "6\n", "authors": ["478"]}
{"title": "A flexible scheduling for automobile control using imprecise computation and its fundamental evaluation\n", "abstract": " Imprecise computation is one of the promising schemes in real time systems to adapt the quality of computations to the change of load, keeping the deadlines of tasks in the systems. When overload occurs in the systems, the minimum requirements on the deadline are assured by decreasing the quality of the computation. This paper describes how to apply the concept of imprecise computation to automobile control in the expressway assuming the intelligent transportation system (ITS). The deadline violation of tasks for automobile control in the expressway induces collision of automobiles. Regardless of whether the expressway is congested or not, collision of automobiles must be avoided. To satisfy such requirement, the concept of imprecise computation is effective. This paper proposes a flexible scheduling using imprecise computation to avoid collision of automobiles and increase throughput.", "num_citations": "6\n", "authors": ["478"]}
{"title": "Nonparametric bootstrapping interval estimations for software release planning with reliability objective\n", "abstract": " We discuss a bootstrap method for estimating software reliability and cost-reliability-optimal software release time via a discretized software reliability growth model, which conserves the properties of the continuous analog of the discretized model. And then, we conduct interval estimations of them by three types of bootstrap confidence interval estimation methods, such as basic, standard normal, and percentile bootstrap confidence intervals. In our numerical examples, we confirm that our bootstrap approach yields simulation-based probability distributions of model parameters, software reliability assessment measures, and cost-reliability-optimal software release time without deriving these probability distributions analytically.", "num_citations": "5\n", "authors": ["478"]}
{"title": "Software reliability growth modeling with change-point and its goodness-of-fit comparisons\n", "abstract": " In an actual testing-phase, software testing manager usually observes a change of the software failure-occurrence phenomenon due to some factors being related to the software reliability growth process. Testing-time when behavior of the software failure-occurrence time interval notably changes is called change-point. Such change influences accuracy of software reliability assessment based on a software reliability growth model. This paper discusses software reliability growth modeling with the influence of the change-point by using the environmental function. Then, we check goodness-of-fit of our change-point models to actual data by comparing with the existing non-change-point models.", "num_citations": "5\n", "authors": ["478"]}
{"title": "Stochastic differential equation based SRGM for errors of different severity with testing-effort\n", "abstract": " Models that describe the failure phenomenon and consequent enhancement in reliability due to fault removal are termed as Software Reliability Growth Models (SRGM). As the size of software system is large and the number of faults detected during the testing phase becomes large, so the change of the number of faults that are detected and removed through each debugging becomes sufficiently small compared with the initial fault content at the beginning of the testing phase. In such a situation, we can model the software fault detection process as a stochastic process with continuous-state space. Several continuous-state space SRGM based on stochastic differential equations of  type to assess software reliability for large scale software systems have been proposed in the literature so far. However these continuous-state space SRGM have seldom taken the effect of testing-effort into consideration. The resources\u00a0\u2026", "num_citations": "5\n", "authors": ["478"]}
{"title": "Debugging process-oriented discrete software reliability modeling\n", "abstract": " This paper discusses an new approach for discrete-time software reliability growth modeling based on an discrete-time infinite server queueing model, which describes a debugging process in a testing phase. Our approach enables us to develop discrete-time software reliability growth models (SRGMs) which could not be developed under conventional discrete-time modeling approaches. This paper also discuss goodness-of-fit comparisons of our discrete-time SRGMs with conventional continuous-time SRGMs in terms of the criterion of the mean squared errors, and show numerical examples for software reliability analysis of our models by using actual data.", "num_citations": "5\n", "authors": ["478"]}
{"title": "Software hazard rate modeling with multiple change-point occurrences\n", "abstract": " We propose a software hazard rate modeling framework with the effect of multiple change-point occurrences for developing more plausible software reliability growth models reflecting actual environment in the testing-phase of a software development process. Especially, our modeling approach enables us to develop a software hazard rate model with the effect of multiple change-point occurrences by assuming the hazard rate before the first change-point occurrence. And we check that our multiple change-point model has better fitting and predictive performance than the corresponding non and single change-point models by conducting goodness-of-fit comparisons applying using actual data.", "num_citations": "4\n", "authors": ["478"]}
{"title": "Bootstrap interval estimation methods for cost-optimal software release planning\n", "abstract": " We discuss interval estimation methods for cost-optimal software release time based on a discretized software reliability growth model. In our approach, we use a bootstrap method, in which we do not need to derive probability distributions of model parameters and optimal software release time analytically by using an asymptotic theory assuming a large number of samples. Then we estimate bootstrap confidence intervals of cost-optimal software release time based on two kinds of bootstrap confidence interval methods. Our numerical examples confirm that our bootstrap approach yields a simulation-based probability distribution of cost-optimal software release time from software fault-count data.", "num_citations": "4\n", "authors": ["478"]}
{"title": "Security system for children on school route\n", "abstract": " To keep safety is one of the most important duties of government. In 2007, Ministry of Internal Affairs and Communications of Japan tested 16 different models of security system for children on school route. One of the models was constructed and tested at an area of a school in Hiroshima City from September to December of 2007. A consortium was established by Hiroshima City, Hiroshima City University, Chugoku Electric Power Co., Inc, KDDI Corporation, etc. to conduct this project. For this model project, we developed new security system for children on school route by using mobile ad hoc network that is constructed based on mobile phone with Bluetooth function. About 700 students used this system for four months. In this paper, we present the outline of this system and the result of the trial. We also describe that this system has good performance and accuracy to keep safety of students on the way to school.", "num_citations": "4\n", "authors": ["478"]}
{"title": "Software reliability growth models based on component characteristics\n", "abstract": " It is one of the important issues in modern software development to make a highly reliable software system by efficient and economical testing. As one of these solutions, many companies have taken in testing-progress management and quality/reliability assessment based on software reliability growth models. Consequently, many software reliability growth models reflecting various development factors and operational environment of the software system have been proposed. Most of these models have assumed the software system as one domain. That is, the models have assumed that the set of the testing-paths influenced by execution of test-cases is extended with testing-progress and it expands to whole software system finally. However, a software system has the structure that the main-component calls plural sub-components ordinarily. Therefore, unless the main-component is tested, the sub\u00a0\u2026", "num_citations": "4\n", "authors": ["478"]}
{"title": "An Autonomous Method for Aggregating and Repairing Paths in Sensor Networks\n", "abstract": " In a sensor network, saving electronic power is an important issue. This is because sensor nodes would be battery-driven and it is not practical to exchange or recharge a battery for hundreds or more sensor nodes. Therefore many studies on expanding sensor network's lifetime have been performed. We focus on autonomous/adaptive routing for sensor networks to expand the networks lifetime. In this paper, we propose an autonomous method for aggregating and repairing paths in sensor networks. In the proposed method, a sensor node broadcasts a special message when the sensor node's battery has run out. The special message is a trigger of repairing path process bypassing the node whose battery has run out. We have evaluated the proposed method and simulation results show expanding sensor network's lifetime with small overhead, i.e. more than twenty data packets are obtained for a control packet", "num_citations": "4\n", "authors": ["478"]}
{"title": "A multiagent-based path rerouting method in MPLS networks\n", "abstract": " The constraint-based routed label distribution protocol (CR-LDP) is a well-known traffic engineering technologies in MPLS networks. CR-LDP is a signaling protocol for establishing a label switching path (LSP) and has a function such that CR-LDP coordinates LSPs that conflict (for example, the LSPs share a link). However CR-LDP coordinates such LSPs only. Therefore such coordination (i.e. rerouting a LSP) would result in other conflicts (i.e. the rerouted LSP would share a link with other LSPs). This paper proposes a new traffic engineering method which is called the \"multiagent-based path rerouting method (MPRM)\". When a conflict occurs, MPRM coordinates all LSPs without concerning the conflict in order to avoid new conflicts caused by dissolving the conflict. For avoidance of new conflicts, MPRM performs not only rerouting of LSPs that make the conflict but also rerouting some LSPs that result in no\u00a0\u2026", "num_citations": "4\n", "authors": ["478"]}
{"title": "Reliability modeling of multi-version software system incorporating the impact of infected patching\n", "abstract": " PurposeThe purpose of the present work is to mathematically model the reliability growth of a multi-version software system that is affected by infected patches.Design/methodology/approachThe work presents a mathematical model that studies the reliability change due to the insertion of an infected patch in multi-version software. Various distribution functions have been considered to highlight the varied aspects of the model. Furthermore, weighted criteria approach has been discussed to facilitate the choice of the model.FindingsThe model presented here is able to quantify the effect of an infected patch on multi-version software. The model captures the hike in bug content due to an infected patch.Originality/valueMulti-version systems have been studied widely, but the role of an infected patch has not been yet explored. The effect of an infected patch has been quantified by modeling the extra bugs generated in\u00a0\u2026", "num_citations": "3\n", "authors": ["478"]}
{"title": "Change-point\u2013based software reliability modeling and its application for software development management\n", "abstract": " Quality, cost, and delivery are important software development management factors that software development managers control during the testing phase of the software development process. In particular, the software development management techniques based on software reliability growth models (SRGM) are often used. The majority of SRGMs are developed by treating the software failure-occurrence time or the fault-detection time intervals as random variables, and they assume that the stochastic characteristics of these quantities are the same throughout the testing phase. However, researchers often observe that stochastic characteristics of software failure-occurrence time intervals change because of a change in the testing environment. The chapter discusses the optimal software release problem based on the change-point model as an application. It describes the optimal software release problem based on\u00a0\u2026", "num_citations": "3\n", "authors": ["478"]}
{"title": "Two-dimensional software reliability growth modeling based on a CES type time function\n", "abstract": " Basically, existing SRGMs (software reliability growth models) assume that the software reliability growth process in the testing-phase depends only on the testing-time. It is suggested that the number of detected faults increases unconditionally if only the testing-period is ensured. That is, most of the existing models are not considered the expenditure process of devoted resources, simultaneously. In this paper, we develop new bivariate NHPP (nonhomogeneous Poisson process) models based on a CES (constant elasticity of substitution) type time function. The CES type function is a generalized function of a Cobb-Douglas function, and has a constraint eased for the elasticity of substitution. Concretely, we assume that the testing-time as a software reliability growth factor is expressed by the testing-time and testing-effort factors based on the CES type function. Finally, we show numerical examples by using actual\u00a0\u2026", "num_citations": "3\n", "authors": ["478"]}
{"title": "An Alleviating Traffic Congestion Scheme Based on VANET with a Function to Dynamical Change Size of Area for Traffic Information in Urban Transportations\n", "abstract": " The traffic congestion frequently occurs in urban transportations. Network services for alleviating the traffic congestion based on vehicle networks have been studied currently. Vehicle Information and Communication System (VICS) is one of the network services. It has been developed in Japan. However, since each vehicle can obtain global information on traffic congestion using VICS, all vehicles in the congested areas tend to move to non-congested areas. As a result, the non-congested areas become congested areas. To avoid such an oscillation between the congested and noncongested areas, we have proposed an Alleviating Traffic Congestion method (ATC). In the ATC method, each vehicle gathers traffic information in a limited area where the vehicle exists by using a Vehicle Ad hoc Network (VANET). The size of limited area is constant in the original ATC method. However, we consider that the size of the limited area should be adaptive depending on traffic condition. This paper proposes a modified ATC method, which can change the size of the limited area depending traffic condition. Through simulation experiments, this paper shows that the proposed method provides faster velocity and shorter trip time than VICS in the environments that traffic varies temporally and spatially, which occur in urban transportations.", "num_citations": "3\n", "authors": ["478"]}
{"title": "Interval estimations of software reliability and optimal release time based on better bootstrap confidence intervals\n", "abstract": " We discuss a bootstrap method for estimating software reliability and cost-optimal software release time by using a discretized software reliability growth model. And then, we conduct interval estimations of them by five types of bootstrap confidence interval estimation methods including so-called better bootstrap confidence intervals, such as a bootstrap-t and a bias-corrected and the accelerated confidence interval (BCa) method. In our numerical examples, we confirm that our bootstrap approach yields simulation-based probability distributions of model parameters, software reliability assessment measures, and cost-optimal software release time without deriving these probability distributions analytically.", "num_citations": "3\n", "authors": ["478"]}
{"title": "A self-organized clustering for transmission power control adapting to change of node density in MANETs\n", "abstract": " Assurance network technologies, which can make their own performance stable when various network complexities exists in the network, have been proposed to realize trustable terminal/infrastructure service applications. So far, autonomous clustering and hierarchical routing protocol Hi-AODV, to which the assurance network technologies are applied, have been also proposed as efficient network management methods for dynamic change of the number of nodes in MANETs. However, these methods do not have capability for adapting to frequent change of distribution of nodes. When distribution of nodes in a network changes, it is considered that dense and sparse areas may occur in the network as time proceeds. In particular, nodes in the dense area induce radio wave interference because each node usually communicates with other nodes using constant transmission power. Moreover, radio wave\u00a0\u2026", "num_citations": "3\n", "authors": ["478"]}
{"title": "A Bootstrap Method for Software Reliability Assessment Based on a Discretized NHPP Model\n", "abstract": " We discuss a bootstrap method for software reliability assessment based on a discretized no homogeneous Poisson process (NHPP) model. Ordinarily, model parameters of the discretized NHPP model are estimated by using the regression analysis based on the regression equation derived from a difference equation of the discretized NHPP model. However, it is not so easy to derive some information for the statistical inference on software reliability assessment by the existing estimation approach for the model parameters because it is very difficult to identify the probability distribution function for the parameter estimates analytically. In this paper, we discuss a method for statistical inference on software reliability assessment based on the discretized NHPP model by applying a bootstrap method to the regression analysis, and show numerical examples of interval estimations for the several software reliability\u00a0\u2026", "num_citations": "3\n", "authors": ["478"]}
{"title": "An autonomous method for aggregating primary paths and reserving backup paths in sensor networks\n", "abstract": " In a sensor network, saving electronic power is an important issue. This is because sensor nodes would be batterydriven and it is not practical to exchange or recharge a battery for hundreds or more sensor nodes. Therefore many studies on expanding sensor network's lifetime have been performed. We focus on autonomous/adaptive routing for sensor networks to expand the networks lifetime. In this paper, we propose an autonomous method for aggregating primary paths and reserving backup paths in sensor networks. In the proposed method, primary paths and backup paths such that they are not overlapped with each other as much as possible are simultaneously reserved at first. When a battery of a node in a primary path has run out, switching a primary path to one of backup paths is rapidly performed with smallest control packets.", "num_citations": "3\n", "authors": ["478"]}
{"title": "A case of biloma: complication of percutaneous ethanol injection therapy for hepatocellular carcinoma\n", "abstract": " [A case of biloma: complication of percutaneous ethanol injection therapy for hepatocellular carcinoma] [A case of biloma: complication of percutaneous ethanol injection therapy for hepatocellular carcinoma] Nihon Shokakibyo Gakkai Zasshi. 1992 Nov;89(11):2719-24. [Article in Japanese] Authors E Kohno 1 , S Chen, K Numata, S Nakamura, K Tanaka, O Endo, S Inoue, Y Takamura Affiliation 1 Third Department of Internal Medicine, Yokohama City University School of Medicine. PMID: 1334166 No abstract available Publication types Case Reports MeSH terms Bile Duct Diseases / diagnostic imaging Bile Duct Diseases / etiology Bile Ducts, Intrahepatic* Bile* Carcinoma, Hepatocellular / drug therapy* Cholangiopancreatography, Endoscopic Retrograde Ethanol / adverse effects* Humans Injections, Intralesional Liver Neoplasms / drug therapy* Male Middle Aged Ultrasonography Substances Ethanol \u2026", "num_citations": "3\n", "authors": ["478"]}
{"title": "Two-Dimensional NHPP Models Based on Several Testing-Time Functions and Their Applications\n", "abstract": " Enormous testing-time and testing-effort (central processing unit (CPU) time, execution time, man-hour, test coverage, executed test case, and so forth) are invested in testing-phase for enhancing software reliability. Although they are software reliability growth factors, existing software reliability growth models (SRGMs) are not introduced simultaneously. Also, the software reliability growth factors enable to substitute each other partly. Therefore, we develop new bivariate nonhomogeneous Poisson process (NHPP) models based on two types of testing-time functions in this paper. Concretely, we assume that the testing-time as a software reliability growth factor is composed of the testing-time and testing-effort factors. Then, the testing-time as the software reliability growth factor is expressed by the Cobb\u2013Douglas and constant elasticity of substitution (CES) type testing-time functions. We conduct goodness-of-fit\u00a0\u2026", "num_citations": "2\n", "authors": ["478"]}
{"title": "Interval Estimation for Software Reliability Assessment based on MCMC Method\n", "abstract": " Interval estimation in assessment in software systems must be useful because it is hard to obtain a sufficient amount of software reliability data for conducting point estimation and the software reliability data is essentially incomplete. We discuss flexible software reliability measurement considering the uncertainty of model parameters in a reliability model. Concretely, applying a discrete-time domain model, we analyze the Bayesian inference of the parameters in the model by using the Markov chain Monte Carlo method. Furthermore, numerical illustrations of the approach for our method are also shown in this paper.", "num_citations": "2\n", "authors": ["478"]}
{"title": "Test environment-dependent discrete binomial-type software reliability models\n", "abstract": " We have no doubt that the software reliability growth process in the testing phase depends on the test environment factors, such as the attained testing coverage, the number of test-runs and the debugging skills, which affect the software failure occurrence or fault detection phenomenon in the testing phase. In this paper, we propose software reliability models that consider the effects of the testing environment factors. Our models are developed by a program size-dependent discrete binomial-type software reliability modeling approach. This modeling approach is also consistent with software reliability data collection and enables us to consider the effect of the program size. Finally, we compare the accuracy of our models in terms of mean square errors (MSE) and Akaike\u2019s information criterion (AIC) with the existing corresponding model by using actual data.", "num_citations": "2\n", "authors": ["478"]}
{"title": "Design and implementation of dual-purpose normal and disaster situations systems based on delay and disruption tolerant Bluetooth MANETs\n", "abstract": " We have been studying and developing dual-purpose systems, which are available in both normal and disaster situations, and which are based on the assurance network design principle. The assurance network design principle makes the dual-purpose systems work stably in both normal and disaster situations. Also we have developed a prototype of network applications for such systems. The prototype has two types of graphical user interface (GUI) for both situations. The GUI automatically switches to another type whenever each mobile terminal receives a special packet in disaster situations. We have unified such systems and their GUI so that users can understand how to use them even when GUI is automatically switched. To validate feasibility of the dual-purpose normal and disaster situations system, we show experimental results on dissemination of evaluation information and automatical switching of GUIs.", "num_citations": "2\n", "authors": ["478"]}
{"title": "Optimal software shipping time estimation based on a change-point hazard rate model\n", "abstract": " Software failure-occurrence or the fault-detection phenomenon is changed notably in an actual testing phase or an operational phase due to the changes of factors influencing the software reliability growth process. Taking into consideration of the effect of the change in software reliability growth modeling is expected to conduct more accurate software reliability assessment because it is said that such approach enables us to conduct more plausible software reliability assessment reflecting an actual testing-environment. We develop a framework for developing software hazard rate models with effect of change-point, and discuss change-point detection methods for applying our model to quantitative software reliability assessment. Additionally, we discuss an optimal software release problem for estimating optimal shipping time with the effect of the change as one of the application problems of our model in software\u00a0\u2026", "num_citations": "2\n", "authors": ["478"]}
{"title": "A bootstrapping approach for software reliability measurement based on a discretized NHPP model\n", "abstract": " Discrete software reliability measurement has a proper characteristic for describing a software reliability growth process which depends on a unit of the software fault-detection period, such as the number of test runs, the number of executed test cases. This paper discusses discrete software reliability measurement based on a discretized nonhomogeneous Poisson process (NHPP) model. Especially, we use a bootstrapping method in our discrete software reliability measurement for discussing the statistical inference on parameters and software reliability assessment measures of our model. Finally we show numerical examples of interval estimations based on our bootstrapping method for the several software reliability assessment measures by using actual data.", "num_citations": "2\n", "authors": ["478"]}
{"title": "\u30c1\u30a7\u30f3\u30b8\u30dd\u30a4\u30f3\u30c8\u3092\u8003\u616e\u3057\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u8a55\u4fa1\u6cd5\u306b\u95a2\u3059\u308b\u4e00\u8003\u5bdf\n", "abstract": " \u3053\u308c\u307e\u3067\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u30e2\u30c7\u30eb\u306e\u307b\u3068\u3093\u3069\u306f, \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u6545\u969c\u767a\u751f\u73fe\u8c61\u306e\u78ba\u7387\u7684\u6027\u8cea\u304c\u30c6\u30b9\u30c8\u671f\u9593\u4e2d\u3092\u901a\u3058\u3066\u57fa\u672c\u7684\u306b\u540c\u4e00\u3067\u3042\u308b\u3068\u3044\u3046\u4eee\u5b9a\u306b\u57fa\u3065\u3044\u3066\u69cb\u7bc9\u3055\u308c\u3066\u3044\u308b. \u5b9f\u969b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u306e\u30c6\u30b9\u30c8\u5de5\u7a0b\u3067\u306f, \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u6545\u969c\u767a\u751f\u73fe\u8c61\u306e\u7d71\u8a08\u7684\u6027\u8cea\u304c\u8457\u3057\u304f\u5909\u5316\u3059\u308b\u73fe\u8c61\u304c\u3057\u3070\u3057\u3070\u89b3\u6e2c\u3055\u308c\u308b. \u3053\u306e\u3088\u3046\u306a\u73fe\u8c61\u304c\u767a\u751f\u3059\u308b\u30c6\u30b9\u30c8\u6642\u523b\u306f\u30c1\u30a7\u30f3\u30b8\u30dd\u30a4\u30f3\u30c8 (change-point) \u3068\u547c\u3070\u308c, \u3053\u308c\u307e\u3067\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u3044\u305f\u4fe1\u983c\u6027\u8a55\u4fa1\u306e\u7cbe\u5ea6\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u8981\u56e0\u306e 1 \u3064\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u308b. \u672c\u7814\u7a76\u3067\u306f, \u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e 1 \u3064\u306e\u56de\u7b54\u3068\u3057\u3066, \u30c6\u30b9\u30c8\u5de5\u7a0b\u306b\u304a\u3051\u308b\u30c1\u30a7\u30f3\u30b8\u30dd\u30a4\u30f3\u30c8\u3092\u8003\u616e\u3057\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3066, \u5b9f\u6e2c\u30c7\u30fc\u30bf\u3092\u7528\u3044\u305f\u63d0\u6848\u30e2\u30c7\u30eb\u306e\u9069\u7528\u4f8b\u3092\u793a\u3059.", "num_citations": "2\n", "authors": ["478"]}
{"title": "An adaptive scheduling for automobile control using imprecise computation and its experimental evaluation\n", "abstract": " The imprecise computation is one of the promising schemes in the real time systems to adapt quality of computations to change of load with keeping the deadlines of tasks in the systems. When overload occurs in the systems, the minimum requirements on the deadline are assured by decreasing quality of the computation. This paper describes how to apply the concept of the imprecise computation to automobile control in the expressway assuming the intelligent transportation system (shortly, ITS). The deadline violation of tasks for automobile control in the expressway induces collision of automobiles. Regardless of whether the expressway is congested or not, collision of automobiles must be avoided. To satisfy such requirement, the concept of the imprecise computation is effective. This paper proposes an adaptive scheduling using the imprecise computation to avoid collision of automobiles and increase\u00a0\u2026", "num_citations": "2\n", "authors": ["478"]}
{"title": "Resource reservation for multicast trees using multiagents\n", "abstract": " Multicast is a message delivery scheme from a source node to all nodes that belong to the given membership through a multicast tree. The paper discusses how source based multicast trees are set up such that the maximum damage due to failure of any link to the multicast trees is minimized. Then, the paper proposes a multiagent based method for finding such multiple source based multicast trees. The proposed method assumes that candidates of multicast tree rooted at each source node are given according to some criteria. Under this assumption, first, shared links in multiple multicast trees whose source nodes are different are recognized. Then, a multicast tree rooted at each source node is determined such that damage due to failure of a shared link is minimized. The proposed method has a potentially good adaptability for change of both network resources such as topology and link capacity and resource\u00a0\u2026", "num_citations": "2\n", "authors": ["478"]}
{"title": "IHI ash melting furnace using residual carbon combustion\n", "abstract": " Pascal 001 Exact sciences and technology/001D Applied sciences/001D06 Energy/001D06D Energy. Thermal use of fuels/001D06D04 Installations for energy generation and conversion: thermal and electrical energy./001D06D04C Thermal power plants", "num_citations": "2\n", "authors": ["478"]}
{"title": "A unified expression of Gompertz and logistic curves and its discretization\n", "abstract": " In this study, we newly propose a generalized growth curve model of discrete type, which is based on the property of the Gompertz and logistic curve models. In particular, the bi-linearization technique is applied to the basic differential equation, and we discretize it to the difference equations so as to hold the property of integrable systems. These models can be used to predict the future behavior of the time series data by estimating the constant parameters included in the model. In the numerical examples, we analyze the actual data sets by using our model, and also we show the confidence intervals of the estimated growth curve via the bootstrap method.", "num_citations": "1\n", "authors": ["478"]}
{"title": "On estimation of number of detectable software faults under budget constraint\n", "abstract": " Checking software quality and reliability of developed software system is one of the important activities for developing highly-reliable software system. In software testing phase, which is located in the final stage of software development process, software faults remaining the developed software system must be eliminated as possible as the testing manager could. Further, it is also important to develop testing plan to conduct testing activities efficiently under the certain constraints because there are some constraints, such as cost and delivery, in the actual testing phase. This paper discusses method to estimate the number of detectable faults under constant budget constraint by applying a two-dimensional Weibull type software reliability model, in which the software reliability growth process depends on testing time and testing effort factors. We finally show numerical examples of our method by using actual data.", "num_citations": "1\n", "authors": ["478"]}
{"title": "Simulation-based interval estimation approach in software reliability assessment\n", "abstract": " It is known that it is almost impossible to derive a probability distribution for parameters in nonhomogeneous Poisson process software reliability growth models and the conventional point estimation method leads mismatched estimation when the number of sampling data is not sufficiently large. For overcoming this problems, we discuss a nonparametric bootstrap method for interval estimations of software reliability and cost-optimal software release time by using a discretized software reliability growth model. And we discuss three types of bootstrap confidence interval estimation methods, such as basic, standard normal, and percentile bootstrap confidence interval estimation methods, for interval estimations of model parameters, several software reliability assessment measures, and cost-optimal software release time.", "num_citations": "1\n", "authors": ["478"]}
{"title": "A nonparametric Bootstrap method for software reliability assessment and release planning\n", "abstract": " In fact, it is known that it is almost impossible to derive a probability distribution for parameters in nonhomogeneous Poisson process software reliability growth models and the conventional point estimation method leads mismatched estimation when the number of sampling data is not sufficiently large. For overcoming this problem, we discuss a nonparametric bootstrap method for interval estimations of software reliability and cost-optimal software release time by using a discretized software reliability growth model. We also discuss three types of bootstrap confidence interval estimation methods, such as basic, standard normal, and percentile bootstrap confidence interval estimation methods, for interval estimations of model parameters, several software reliability assessment measures, and cost-optimal software release time.", "num_citations": "1\n", "authors": ["478"]}
{"title": "Two-dimensional software reliability growth models\n", "abstract": " Software reliability assessment in a testing-phase located in a final stage of the software development process is one of the important activities in developing a highly-reliable software system. In the testing-phase, an implemented software system is tested to detect and correct software faults latent in the software system. The software development manager has to assess the software reliability of the final software product especially in the final phase of the software development process for shipping a reliable software system to the user. A software reliability growth model (abbreviated as SRGM)[Musa (1972); Yamada and Osaki (1985); Pham (2003)] is known as one of the fundamental technologies for quantitative software reliability assessment, and plays an important role in software project management for producing a highly-reliable software system. The SRGM is a mathematical model, which describes a software reliability growth process in a testing phase of the software development process and the operational phase by regarding the number of software faults detected during a certain time-interval or the software failure-occurrence time interval as the random variables. After describing the software reliability growth process by using the SRGM, we assess software reliability quantitatively based on the software reliability assessment measures, which are derived from the SRGM applied for the software reliability analysis.", "num_citations": "1\n", "authors": ["478"]}
{"title": "Nonparametric Bootstrap Interval Estimation of Software Reliability and its Application to an Optimal Release Problem based on a Discretized Model\n", "abstract": " We discuss a simulation-based interval estimation method of software reliability and cost-optimal software release time based on a nonparametric bootstrap method via a discretized software reliability growth model. In general, it is very difficult to derive probability distributions of model parameters, software reliability assessment measures, and optimal software release time analytically even if we assume an asymptotic theory assuming a large number of samples. The bootstrap method overcomes the problem above by obtaining the probability distributions of the parameter based on the simulation-based approach. This paper includes numerical examples for confirming that our bootstrap approach yields simulation-based probability distributions of model parameters, software reliability assessment measures, and cost-optimal software release time from actual software fault-count data.", "num_citations": "1\n", "authors": ["478"]}
{"title": "Multiple Change-Point Modeling for Software Reliability Assessment and Goodness-of-Fit Comparisons\n", "abstract": " This paper discusses software reliability growth modeling with multiple occurrence of change-point in a testing-phase. We assume that there exist some relationships between the software failure-occurrence time intervals before and the those after change-point in our modeling framework. And we conduct goodness-of-fit comparisons with corresponding non-change-point and single-change-point models by using actual data.", "num_citations": "1\n", "authors": ["478"]}
{"title": "\u30ef\u30a4\u30d6\u30eb\u904e\u7a0b\u306b\u57fa\u3065\u3044\u305f 2 \u6b21\u5143\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u30e2\u30c7\u30eb\n", "abstract": " \u6284\u9332 (\u548c) \u3053\u308c\u307e\u3067\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u30e2\u30c7\u30eb (SRGM) \u306e\u307b\u3068\u3093\u3069\u306f, \u672c\u8cea\u7684\u306b, \u30c6\u30b9\u30c8\u5de5\u7a0b\u306b\u304a\u3051\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u904e\u7a0b\u304c\u30c6\u30b9\u30c8\u6642\u9593\u306e\u307f\u306b\u4f9d\u5b58\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u8b70\u8ad6\u3055\u308c\u3066\u3044\u308b. \u3057\u304b\u3057\u306a\u304c\u3089, \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u6545\u969c\u306e\u767a\u751f\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u8003\u3048\u305f\u5834\u5408, \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u904e\u7a0b\u3092\u4e8b\u5b9f\u4e0a, \u30c6\u30b9\u30c8\u6642\u9593\u306e\u307f\u306b\u4f9d\u5b58\u3057\u3066\u8a18\u8ff0\u3059\u308b\u591a\u304f\u306e SRGM \u306f, \u73fe\u5b9f\u7684\u5074\u9762\u306b\u6b20\u3051\u308b\u3082\u306e\u3068\u8003\u3048\u3089\u308c\u308b. \u672c\u7814\u7a76\u3067\u306f, \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u5ea6\u6210\u9577\u904e\u7a0b\u3092\u30c6\u30b9\u30c8\u6642\u9593\u3068\u305d\u306e\u4ed6\u306e\u4fe1\u983c\u5ea6\u6210\u9577\u8981\u56e0\u3092\u8003\u616e\u3057\u305f 2 \u6b21\u5143\u6642\u9593\u7a7a\u9593\u4e0a\u3067\u8868\u73fe\u3059\u308b 2 \u6b21\u5143 SRGM \u306e\u69cb\u7bc9\u3092\u884c\u3046. \u7279\u306b, \u672c\u7814\u7a76\u3067\u306f, \u65e2\u5b58\u306e 1 \u6b21\u5143\u30ef\u30a4\u30d6\u30eb\u904e\u7a0b\u30e2\u30c7\u30eb\u3092\u53d6\u308a\u4e0a\u3052, \u3053\u306e SRGM \u306e\u6642\u9593\u7a7a\u9593\u3092\u30b3\u30d6\u30fb\u30c0\u30b0\u30e9\u30b9\u578b\u52b9\u7528\u95a2\u6570\u306e\u8003\u3048\u65b9\u3092\u7528\u3044\u3066, 2 \u6b21\u5143\u6642\u9593\u7a7a\u9593\u3078\u62e1\u5f35\u3057, \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u8a55\u4fa1\u306e\u305f\u3081\u306e 2 \u6b21\u5143\u30ef\u30a4\u30d6\u30eb\u904e\u7a0b\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b. \u307e\u305f, \u63d0\u6848\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u624b\u6cd5\u3084\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u4fe1\u983c\u6027\u8a55\u4fa1\u5c3a\u5ea6\u306b\u3064\u3044\u3066\u3082\u8b70\u8ad6\u3059\u308b\u3068\u5171\u306b, \u5b9f\u6e2c\u30c7\u30fc\u30bf\u3092\u7528\u3044\u305f\u63d0\u6848\u30e2\u30c7\u30eb\u306e\u9069\u7528\u4f8b\u3082\u793a\u3059.(\u82f1) Almost all of the software reliability growth\u00a0\u2026", "num_citations": "1\n", "authors": ["478"]}
{"title": "An Extended Delayed S-Shaped Software Reliability Growth Model Based on Infinite Server Queuing Theory\n", "abstract": " Quantitative assessment of software reliability in the testing phase is important to provide a software system keeping high degree of reliability for the user because the testing phase is the final stage of software development process. Up to now, as a mathematical model to assess software reliability, several SRGMs have been utilized for assessing the degree of the achievement of software quality, deciding the time to release for operational use, and evaluating the maintenance cost for faults undetected during the testing phase. Most of SRGMs have been modeled by any stochastic process to describe the software fault-detection phenomenon or the software failure-occurrence phenomenon, especially, it is known that an NHPP model can describe", "num_citations": "1\n", "authors": ["478"]}
{"title": "Continuous-state software reliability growth modeling with testing-effort and its goodness-of-fit\n", "abstract": " We propose a continuous-state software reliability growth model with testing-effort and conduct its goodness-of-fit evaluation. A testing-effort is well-known as a key factor being related to the software reliability growth process. We also discuss a parameter estimation method for our model. Then, several software reliability assessment measures are derived from the probability distribution of its solution process, and we compare our model with existing continuous-state software reliability growth models in terms of goodness-of-fit by using actual fault count data.", "num_citations": "1\n", "authors": ["478"]}
{"title": "Multiagent-based reservation of backup virtual paths in ATM networks\n", "abstract": " In order to make the ATM network fault-tolerant and the network service flexible, a method for the setting up of backup virtual paths (VP's for short) using multiagents is effective with respect to adaptability to change of network resource and user requirements, examples of which are failure of nodes and links and addition of VP's, respectively. In this method, under the assumption that candidates of backup VP's between different pairs of source and destination nodes are given, the optimum backup VP's are obtained by exchanging information among agents autonomously. First, this paper proposes measures for determining backup VP's between different pairs of source and destination nodes. Next, this paper presents simulation results to evaluate the adaptability of the method. The results show that the method efficiently obtains the optimum backup VP's even when the number of backup VP's increases and that\u00a0\u2026", "num_citations": "1\n", "authors": ["478"]}
{"title": "Experimental evaluation on optimality of multiagent-based backup VP reservation method\n", "abstract": " In order to enhance the reliability of ATM networks, recently (Y. Kakuda, 1998), the virtual path (VP) reservation method using multiple agents (MA) has been proposed. In this MA method, given a primary VP and multiple backup VP candidates between each source node/destination node pair, then for each such pair, a backup VP is selected from the given multiple backup VP candidates, and a primary VP and a backup VP are reserved so that, when some nodes and links in the primary VPs fail, the primary VPs are able to be changed to the corresponding backup VPs rapidly. This paper describes an experimental evaluation of the MA method with respect to optimality. The experimental results show that the MA method has good optimality, along with an increase in the number of backup VP candidates.", "num_citations": "1\n", "authors": ["478"]}
{"title": "Multiple backup virtual paths reservation problem and its solution\n", "abstract": " A method of preparing a backup virtual path (VP) for each primary VP is popular for establishing a reliable computer network. In the case of multiple failures, however, it is possible that multiple failures happen on both a primary VP and a pairwise backup VP. In order to solve the above problem, the paper proposes a new multiagent based method where more than one backup VP is prepared for each primary VP.", "num_citations": "1\n", "authors": ["478"]}
{"title": "New measure and experimental evaluation for multiagent-based reservation of backup virtual paths in ATM networks\n", "abstract": " In order to make the ATM network fault-tolerant and the network service flexible, a method for setting up backup virtual paths (VPs for short) using multiagents is effective with respect to adaptability to the change of network resource and user requirements, examples of which are failure of nodes and links and addition of VPs, respectively. In the method, under the assumption that candidates of backup VPs between different pairs of source and destination nodes are given, the optimum backup VPs are obtained by exchanging information among agents autonomously. First, this paper proposes a new measure for determining backup VPs between different pairs of source and destination nodes. The measure shows a degree of fault-tolerance for backup VPs and addition of VPs. Next, this paper presents simulation results to evaluate the adaptability of the method. The results show that the method efficiently obtains the\u00a0\u2026", "num_citations": "1\n", "authors": ["478"]}
{"title": "Development of Municipal Solid Waste (MS W) Ash Melting System of IHI Rotary Stoker Type Incinerator\n", "abstract": " CiNii \u8ad6\u6587 - Development of Municipal Solid Waste (MS W) Ash Melting System of IHI Rotary Stoker Type Incinerator CiNii \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092\u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003 \u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u7a93\u53e3\u696d\u52d9\u306e\u518d\u958b\u306b\u3064\u3044\u3066 Development of Municipal Solid Waste (MS W) Ash Melting System of IHI Rotary Stoker Type Incinerator INOUE S. \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6 \u8457\u8005 INOUE S. \u53ce\u9332\u520a\u884c\u7269 IHI Tech. Bull. IHI Tech. Bull. 29, 366-370, 1989 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u7070\u4e2d\u672a\u71c3\u70ad\u7d20\u3092\u5229\u7528\u3059\u308b\u81ea\u5df1\u71c3\u713c\u5f0f\u6eb6\u878d\u7089\u306e\u958b\u767a \u4e95\u4e0a \u91cc\u5fd7 , \u6210\u6fa4 \u9053\u5247 \u5316\u5b66\u5de5\u5b66\u8ad6\u6587\u96c6 31(3), 211-216, 2005-05-20 \u53c2\u8003\u6587\u732e9\u4ef6 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587 ID(NAID) 10015675955 \u8cc7\u6599\u7a2e\u5225 \u96d1\u8a8c\u8ad6\u6587 \u30c7\u30fc\u30bf\u63d0\u4f9b\u5143 CJP\u5f15\u7528 \u66f8\u304d\u51fa\u3057 RefWorks\u306b\u306b\u306b/(\u2026", "num_citations": "1\n", "authors": ["478"]}