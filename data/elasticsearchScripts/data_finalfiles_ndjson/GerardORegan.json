{"title": "A brief history of computing\n", "abstract": " Overview The objective of this book is to provide an introduction into some of the key topics in the history of computing. The computing eld is a vast area and a truly comp-hensive account of its history would require several volumes. The aims of this book are more modest, and its goals are to give the reader a avour of some of the key topics and events in the history of computing. It is hoped that this will stimulate the interested reader to study the more advanced books and articles available. The history of computing has its origins in the dawn of civilization. Early hunter gatherer societies needed to be able to perform elementary calculations such as counting and arithmetic. As societies evolved into towns and communities there was a need for more sophisticated calculations. This included primitive accounting to determine the appropriate taxation to be levied as well as the development of geometry to enable buildings, templates and bridges to be constructed. Our account commences with the contributions of the Egyptians, and Babylonians. It moves on to the foundationalwork done by Boole and Babbage in the nineteenth century, and to the importantwork on Boolean Logicand circuit design doneby Claude Shannon in the 1930s. The theoretical work done by Turing on computability is considered as well as work done by von Neumann and others on the fundamental architecture for computers.", "num_citations": "235\n", "authors": ["1371"]}
{"title": "A practical approach to software quality\n", "abstract": " Overview The aim of this book is to provide a practical introduction to software quality in an industrial environment and is based on the author's experience in working in software engineering and software quality improvement with leading indus trial companies. The book is written from a practitioner's viewpoint, and the objective is to include both theory and practice. The reader will gain a grasp of the fundamentals as well as guidance on the practical application of the theory. The principles of software quality management and software process im provement are discussed, and guidance on the implementation of maturity mod els such as the CMM, SPICE, or the ISO 9000: 2000 standard is included. Organization and Features The first chapter provides an introduction to the fundamentals of quality man agement. Later chapters consider software inspections and testing, ISO 9000, the CMM, the evolving SPICE standard, metrics and problem solving, and the final chapter on formal methods and design considers some advanced topics, includ ing configuration management, UML, software usability, and formal methods. The reader may find the material heavy going in places, especially in the section on formal methods, and this section may be skipped. The book includes a chapter on software inspections and testing, and this in cludes material on Fagan inspections to build quality into the software product.", "num_citations": "96\n", "authors": ["1371"]}
{"title": "Introduction to software process improvement\n", "abstract": " Capability Maturity Model Integration (CMMI) is the de facto standard for implementing best practice in software engineering. Many experts believe that there is a close relationship between the quality and maturity of the underlying software processes on the one hand, and the quality of the delivered software product. Implementation of the CMMI enables an organization to design and develop software following sound software engineering principles. Introduction to Software Process Improvement is a systematic textbook and guide to the various steps in setting up a CMMI improvement initiative. Students and independent readers will learn the project management practices necessary to deliver high-quality software solutions to the customer on time and on budget. The text also highlights how software process improvement can achieve specific business goals to provide a tangible return on investment. Topics and features: Supplies review questions, summaries and key topics for each chapter, as well as a glossary of acronyms used in the book Describes the CMMI model thoroughly, detailing the five maturity levels and their constituent process areas Provides a broad overview of software engineering, including a discussion of requirements elicitation, software design, implementation, testing and maintenance Reviews the activities and teams required to set up a CMMI improvement initiative, describing the process as a continuous improvement cycle Examines in detail the implementation of CMMI in a typical organization at each of the maturity levels Investigates the various tools that support organizations in improving their software engineering\u00a0\u2026", "num_citations": "77\n", "authors": ["1371"]}
{"title": "Introduction to the history of computing: a computing history primer\n", "abstract": " Tracing the story of computing from Babylonian counting boards to smartphones, this inspiring textbook provides a concise overview of the key events in the history of computing, together with discussion exercises to stimulate deeper investigation into this fascinating area. Features: provides chapter introductions, summaries, key topics, and review questions; includes an introduction to analogue and digital computers, and to the foundations of computing; examines the contributions of ancient civilisations to the field of computing; covers the first digital computers, and the earliest commercial computers, mainframes and minicomputers; describes the early development of the integrated circuit and the microprocessor; reviews the emergence of home computers; discusses the creation of the Internet, the invention of the smartphone, and the rise of social media; presents a short history of telecommunications, programming languages, operating systems, software engineering, artificial intelligence, and databases.", "num_citations": "54\n", "authors": ["1371"]}
{"title": "Introduction to software quality\n", "abstract": " The mission of a software company is to provide innovative products or services at a competitive price to its customers and to do so ahead of its competitors. This requires a clear vision of the business, a culture of innovation, detailed knowledge of the business domain, and a sound product development strategy.", "num_citations": "46\n", "authors": ["1371"]}
{"title": "Mathematical approaches to software quality\n", "abstract": " This book provides a comprehensive introduction to various mathematical approaches to achieving high-quality software. An introduction to mathematics that is essential for sound software engineering is provided as well as a discussion of various mathematical methods that are used both in academia and industry. The mathematical approaches considered include: Z specification language Vienna Development Methods (VDM) Irish school of VDM (VDM) approach of Dijkstra and Hoare classical engineering approach of Parnas Cleanroom approach developed at IBM software reliability, and unified modelling language (UML). Additionally, technology transfer of the mathematical methods to industry is considered. The book explains the main features of these approaches and applies mathematical methods to solve practical problems. Written with both student and professional in mind, this book assists the reader in applying mathematical methods to solve practical problems that are relevant to software engineers.", "num_citations": "44\n", "authors": ["1371"]}
{"title": "Mathematics in computing\n", "abstract": " The objective of this book is to give the reader a flavour of mathematics used in the computing field. We emphasize the applicability of mathematics rather than the study of mathematics for its own sake, and the goal is that the reader will appreciate the rich applications of mathematics to the computing field. This includes applications to the foundations of computing; to error detection and correcting codes with finite field theory; to the field of cryptography with the results of number theory; to the modelling of telecommunication networks with graph theory; to the application of discrete mathematics and proof techniques to the software correctness field (especially safety-critical systems using formal methods and model checking); to language theory and semantics; and to computability and decidability.", "num_citations": "31\n", "authors": ["1371"]}
{"title": "Giants of computing\n", "abstract": " The objective of this book is to consider a selection of men and women who have made important contributions to the computing field. The goal is to provide brief biographical information on each selected pioneer and to give a concise account of their key contributions to the computing field. It is clearly not feasible, due to space constraints, to consider all of those who merit inclusion, and the selection chosen inevitably reflects the bias of the author. It is the author\u2019s aspiration that the reader will find the selection interesting and will gain an insight into the work and contributions of several pivotal pioneers.", "num_citations": "31\n", "authors": ["1371"]}
{"title": "Concise guide to software engineering\n", "abstract": " The objective of this book was to provide a concise introduction to the software engineering field to students and practitioners. The principles of software engineering are discussed, and the goal is to give the reader a grasp of the fundamentals of the software engineering field, as well as guidance on how to apply the theory in an industrial environment.", "num_citations": "25\n", "authors": ["1371"]}
{"title": "Pillars of computing\n", "abstract": " The objective of this book is to consider a selection of technology firms that have made important contributions to the computing field. The goal is to provide a brief introduction to each selected company and to give a concise account of its key contributions.It is not feasible, due to space constraints, to consider all of those technology firms that merit inclusion, and the selection chosen inevitably reflects the bias of the author. It is the author\u2019s aspiration that the reader will be stimulated by the selection and will gain an insight into the work done by these important technology firms.", "num_citations": "20\n", "authors": ["1371"]}
{"title": "Guide to Discrete Mathematics: An Accessible Introduction to the History, Theory, Logic and Applications\n", "abstract": " The objective of this book is to give the reader a flavor of discrete mathematics and its applications to the computing field. The goal is provide a broad and accessible guide to the fundamentals of discrete mathematics, and to show how it may be applied to various areas in computing such as cryptography, coding theory, formal methods, language theory, computability, artificial intelligence, theory of databases, and software reliability. The emphasis is on both theory and applications, rather than on the study of mathematics for its own sake. There are many existing books on discrete mathematics, and while many of these provide more in-depth coverage on selected topics, this book is different in that it aims to provide a broad and accessible guide to the reader, and to show the rich applications of discrete mathematics in a wide number of areas in the computing field.Each chapter of this book could potentially be a book\u00a0\u2026", "num_citations": "18\n", "authors": ["1371"]}
{"title": "Concise guide to software testing\n", "abstract": " The objective of this book is to provide a concise introduction to the software testing field to students and practitioners. The principles of software testing are discussed, and the goal is to give the reader a grasp of its fundamentals, as well as guidance on applying the theory in an industrial environment.", "num_citations": "16\n", "authors": ["1371"]}
{"title": "Concise guide to formal methods\n", "abstract": " The objective of this book is to give the reader a flavour of the formal methods field. The goal is to provide a broad and accessible guide to the fundamentals of formal methods, and to show how they may be applied to various areas in computing.There are many existing books on formal methods, and while many of these provide more in-depth coverage on selected topics, this book is different in that it aims to provide a broad and accessible guide to the reader, as well as showing some of the rich applications of formal methods. Each chapter of this book could potentially be a book in its own right, and so there are limits to the depth of coverage. However, the author hopes that this book will motivate and stimulate the reader, and encourage further study of the more advanced texts.", "num_citations": "16\n", "authors": ["1371"]}
{"title": "Early Civilisations\n", "abstract": " It is difficult to think of western society today without modern technology. The last decades of the twentieth century have witnessed a proliferation of high-tech computers, mobile phones, text-messaging, the internet and the world-wide web. Software is now pervasive and it is an integral part of automobiles, airplanes, televisions, and mobile communication. The pace of change as a result of all this new technology has been extraordinary. Today consumers may book flights over the world-wide web as well as keeping in contact with family members in any part of the world via email or mobile phone. In previous generations, communication often involved writing letters that took months to reach the recipient. Communication improved with the telegrams and the telephone in the late nineteenth century. Communication today is instantaneous with text-messaging, mobile phones and email, and the new generation probably\u00a0\u2026", "num_citations": "13\n", "authors": ["1371"]}
{"title": "Z formal specification language\n", "abstract": " This chapter presents the Z specification language, which is one of the most widely used formal methods. Z is a formal specification language based on Zermelo set theory. It was developed at the Programming Research Group at Oxford University in the early 1980s. Z specifications are mathematical and employ a classical two-valued logic. The use of mathematics ensures precision and allows inconsistencies and gaps in the specification to be identified. Theorem provers may be employed to demonstrate that the software implementation meets its specification.", "num_citations": "12\n", "authors": ["1371"]}
{"title": "Capability maturity model integration\n", "abstract": " The SEI was founded by the US Congress in 1984 and has worked successfully in advancing software engineering practices in the USA and worldwide. It performs research to find solutions to key software engineering problems, and its proposed solutions are validated through pilots. These solutions are then disseminated to the wider software engineering community through its training programme. The SEI\u2019s research and maturity models have played an important role in helping companies to deliver high-quality software consistently on-time and on-budget.", "num_citations": "11\n", "authors": ["1371"]}
{"title": "Formal methods & service specification\n", "abstract": " There is still clearly widespread resistance to the deployment of formal methods in industry. On the other hand, certain fields of application, viz. VLSI design, protocol specification, and certain kinds of system, viz. safety-critical, real-time, have of necessity already deployed some form of well-defined engineering methods to ensure a high degree of robustness and reliability in delivered products. In the telecommunications field there is currently a sense of the inevitable in the absolute necessity for the ultimate deployment of formal methods for service specification.             In this paper we begin by establishing our universe of discourse in order to de-mystify the term \u2018formal methods\u2019. Then, recognising the real need to justify yet again the use of \u2018formal methods\u2019 in industry, we set forth those principles by which management may be guided. Finally, we indicate exactly in what manner \u2018formal methods\u2019 may be\u00a0\u2026", "num_citations": "8\n", "authors": ["1371"]}
{"title": "World of computing\n", "abstract": " The objective of this book is to provide a concise introduction to the world of computing to students and general readers. The computing field is a vast area and so it is not possible to cover every area of computing, or to cover every topic in detail. Therefore, the goal is to give the reader a flavour of some of the important areas of computing, and to stimulate the reader to study the more advanced articles and books that are available.", "num_citations": "7\n", "authors": ["1371"]}
{"title": "The Innovation in Computing Companion\n", "abstract": " The objective of this book is to consider a selection of pivotal innovations that have shaped the computing field. The goal is to provide a brief account of each invention, as well as short biographical information on the inventor. It is not feasible, due to space constraints, to consider all innovations that merit inclusion, and the selection inevitably reflects the bias of the author. It is hoped that that the reader will find the topics interesting and that she will gain an appreciation of some of the key inventions that have shaped the computing field.", "num_citations": "6\n", "authors": ["1371"]}
{"title": "Marvin Minsky\n", "abstract": " Marvin Minsky is an American cognitive scientist, a pioneer of robotics and neural networks, author, inventor and one of the founders of the artificial intelligence field. He is Toshiba professor of media arts and sciences and professor of electrical engineering and computer science at the Massachusetts Institute of Technology.", "num_citations": "6\n", "authors": ["1371"]}
{"title": "Unified Modeling Language\n", "abstract": " The unified modeling language (UML) is a visual modeling language for software systems. It was developed by Jim Rumbaugh, Grady Booch, and Ivar Jacobson [Jac: 99a] as a notation for modeling object-oriented systems. It provides a visual means of specifying, constructing, and documenting the object-oriented system, and facilitates the understanding of the architecture of the system and", "num_citations": "6\n", "authors": ["1371"]}
{"title": "Overview of formal methods\n", "abstract": " This chapter discusses formal methods, which consist of a set of mathematic techniques that provide an extra level of confidence in the correctness of the software. They consist of a formal specification language and employ a collection of tools to support the syntax checking of the specification, as well as the proof of properties of the specification. They allow questions to be asked about what the system does independently of the implementation, and they may be employed to formally state the requirements of the proposed system, and to derive a program from its mathematical specification. They may be used to provide a rigorous proof that the implemented program satisfies its specification, and they have been applied mainly to the safety critical field.", "num_citations": "5\n", "authors": ["1371"]}
{"title": "Software process improvement\n", "abstract": " This chapter discusses software process improvement. It begins with a discussion of a software process and discusses the benefits that may be gained from a software process improvement initiative. Various models that support software process improvement are discussed, and these include the Capability Maturity Model Integration (CMMI), ISO 9000, Personal Software Process (PSP) and Team Software Process (TSP).", "num_citations": "5\n", "authors": ["1371"]}
{"title": "Motivation for Software Process Improvement\n", "abstract": " The information society and knowledge economy is an integral part of the world we live in, and software is at the heart of modern business and is pervasive throughout society. New technologies such as the World Wide Web and mobile phones have transformed our lives, and software is an integral part of these technologies. Companies have changed their way of doing business to take advantage of new technologies, and major changes have been made to the business processes in banks, insurance companies, and the travel industry.", "num_citations": "5\n", "authors": ["1371"]}
{"title": "Software engineering institute (sei)\n", "abstract": " The Software Engineering Institute (SEI) is a federally funded research and development centre located at Carnegie Mellon University (CMU) in the United States. It was founded by the United States Congress in 1984, and it has worked closely with industry and academia in advancing software engineering practices around the world. It opened a European office in Germany in 2004.           It performs research to find solutions to key software engineering problems, and its proposed solutions are then validated through industrial pilots. These solutions are then disseminated to the wider software engineering community through its training programme. The SEI\u2019s research and maturity models have played an important role in helping companies to deliver high-quality software consistently on time and on budget.", "num_citations": "4\n", "authors": ["1371"]}
{"title": "Unimation\n", "abstract": " Joseph Engelberger and George Devol founded the first robotics company, Unimation Inc., in 1956. Engelberger was the entrepreneur and Devol the inventor, and their goal was to develop industrial robots. Unimation was to become the largest robotics company in the world, and it pioneered the worldwide growth of industrial robots.           Devol and Engelberger initially developed a prototype hydraulically driven robot arm that was programmable. It could pick up small metal letters and spell out small phrases. The prototype was introduced at a trade show in Chicago in 1961, and the era of industrial robots was born.", "num_citations": "4\n", "authors": ["1371"]}
{"title": "The First Digital Computers\n", "abstract": " The Second World War motivated researchers to investigate faster ways to perform calculation to solve practical problems. This led to research into the development of digital computers to determine if they could provide faster methods of computation. The Atanasoff-Berry computer was developed at Iowa State University in the United States; the ENIAC and EDVAC computers were developed at the University of Pennsylvania in the United States; the Colossus computer was developed as part of the code-breaking work at Bletchley Park in England; Zuse\u2019s computers were developed in Germany; and the Manchester Mark I computer was developed at the University of Manchester in England.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "The smartphone and social media\n", "abstract": " A smartphone contains advanced computing capabilities that are attractive to users, and it arose as the outcome of the marriage of the existing mobile phone technology and PDA technology. A smartphone is more than a mobile device for making and receiving calls, and it is essentially a touch-based computer on a phone, which comes with its own keyboard, operating system, Internet access and third-party applications. It provides many other features such as a camera, maps, calendar, alarm clock and games. Today, the smartphone is ubiquitous. We discuss the impact of Facebook and Twitter in social networking. Facebook is the leading social media site in the world, and it has become a way for young people to discuss their hopes and aspirations as well as a tool for social protest and revolution. Twitter has become a popular tool in political communication, and it is also an effective way for businesses to\u00a0\u2026", "num_citations": "3\n", "authors": ["1371"]}
{"title": "Software project management\n", "abstract": " This chapter provides an introduction to project management for traditional software engineering, and we discuss project estimation, project planning and scheduling, project monitoring and control, risk management, managing communication and change and managing project quality.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "Agile Methodology\n", "abstract": " This chapter discusses the Agile methodology which is a popular lightweight approach to software development. Agile provides opportunities to assess the direction of a project throughout the development lifecycle, and ongoing changes to requirements are considered normal in the Agile world. It has a strong collaborative style of working, and it advocates adaptive planning and evolutionary development.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "Software Reliability and Dependability\n", "abstract": " This chapter discusses software reliability and dependability and covers topics such as software reliability and software reliability models, the Cleanroom methodology, system availability, safety and security critical systems and dependability engineering.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "History of Databases\n", "abstract": " We present a short history of databases including the hierarchical model, the network model and the relational model. We discuss the relational model as developed by Codd at IBM in more detail, as most databases used today are relational. There is a short discussion on the SQL and on the Oracle database.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "Charles Babbage\n", "abstract": " Charles Babbage is considered (along with George Boole) to be one of the grandfathers of computing. He made contributions to several areas including mathematics, statistics, astronomy, philosophy, railways and lighthouses. He founded the British Statistical Society and the Royal Astronomical Society.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "Early computers\n", "abstract": " This chapter considers some of the early computers developed in the United States, Britain, Germany and Australia. The Second World War motivated researchers to investigate faster ways to perform calculation to solve practical problems. This led to research into the development of machines to provide faster methods of computation.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "History of programming languages\n", "abstract": " Hardware is physical and may be seen and touched, whereas software is intangible and is an intellectual undertaking by a team of programmers. Software is written in a particular programming language, and hundreds of languages have been developed. Programming languages have evolved over time with the earliest languages using machine code to program the computer. The next development was the use of assembly languages to represent machine language instructions. These were then translated into machine code by an assembler. The next step was the development of high-level programming languages such as FORTRAN and COBOL. These were easier to use than assembly languages and machine code and helped to improve quality and productivity.", "num_citations": "3\n", "authors": ["1371"]}
{"title": "The Internet Revolution\n", "abstract": " The origins of what has developed to become the internet and world wide web goes back to work done in the early 1940s by Vanevar Bush (Fig. 6.1). Bush was an American scientist who had done work on submarine detection for the United States Navy, He later did work with others did work on an automated network analyser to solve differential equations at MIT. He became director of the office of Scientific Research and Development which was concerned with weapons research and development. This organisation employed several thousand scientists, and was responsible for supervising the development of the atomic bomb. Bush developed a close win-win relationship between the United States military and universities. He arranged large research funding for universities to carry out research related to the needs of the United States military. This allowed the military to benefit from the early exploitation of\u00a0\u2026", "num_citations": "3\n", "authors": ["1371"]}
{"title": "Fundamentals of software quality\n", "abstract": " The goal of a software company is to develop high-quality innovative products and services at a competitive price to its customers, and this requires a focus on software quality and customer satisfaction. It is more effective to build quality into the software product rather than addressing quality issues late in the project. Customers have very high expectations on quality and expect high-quality software products to be consistently delivered on time and on budget. The focus on quality requires effective software processes to be in place so that quality software may be consistently produced.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Human\u2013Computer Interaction\n", "abstract": " This chapter discusses human\u2013computer interaction (HCI), which is a branch of computer science that is concerned with the design, evaluation and implementation of interactive computing systems for human use. It is focused on the interfaces between people and computers, and involves several different fields including computer science, cognitive psychology, design and communication.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Foundations of Computing\n", "abstract": " This chapter two discusses the foundations of computing, including the binary number system and the step reckoner calculating machine, which were invented by Leibniz. The difference engine was designed by Babbage to evaluate polynomials, and to produce accurate mathematical tables. Babbage\u2019s design of the analytic engine provided the vision of a modern computer, and he envisaged that it would be analogous to the operation of the Jacquard loom, which is designed to weave (i.e., execute on the loom) a design pattern represented by a set of cards. Boole\u2019s symbolic logic provides the foundation for digital computing.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Sets, relations and functions\n", "abstract": " This chapter provides an introduction to fundamental building blocks in mathematics such as sets, relations and functions. Sets are collections of well-defined objects; relations indicate relationships between members of two sets A and B; and functions are a special type of relation where there is exactly (or at most) one relationship for each element a \u03f5 A with an element in B. A set is a collection of well-defined objects that contains no duplicates. A binary relation  R (A, B) where A and B are sets is a subset of the Cartesian product (A \u00d7 B) of A and B. A total function f: A \u2192 B is a special relation such that for each element a \u03f5 A there is exactly one element b \u03f5 B. This is written as f(a)\u00a0=\u00a0b. A partial function differs from a total function in that the function may be undefined for one or more values of A.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "The Invention of the Integrated Circuit and the Birth of Silicon Valley\n", "abstract": " The invention of the integrated circuit allowed many transistors to be combined on a single chip, and it was another revolution in computing. The integrated circuit placed the previously separated transistors, resistors, capacitors and wiring circuitry onto a single chip made of silicon or germanium. The integrated circuit shrunk the size and cost of making electronics, and it had a major influence on the design of later computers leading to faster and more powerful machines. The germanium-based integrated circuit was invented by Jack Kilby at Texas Instruments, and Robert Noyce of Fairchild Semiconductor did subsequent work on silicon-based integrated circuits. Moore\u2019s law on the exponential growth of transistor density on an integrated circuit is discussed, as well as its relevance to the computing power of electronic devices.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Twitter\n", "abstract": " Twitter is a social communication tool that allows people to broadcast short messages. It is often described as the SMS of the Internet, and it is an online social media and microblogging site that allows its users to send and receive short 140-character messages called tweets. The restriction to 140 characters is to allow Twitter to be used on non-smartphone mobile devices.           Twitter has over 500 million users (with approximately 300 million of these are active users), and it is one of the most visited websites in the world. Users may access Twitter through its website interface, a mobile device app or SMS.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Software Inspections\n", "abstract": " The objective of software inspections is to build quality into the software product, rather than adding quality later. There is clear evidence that the cost of correction of a defect increases the later that it is detected, and it is therefore more cost effective to build quality in rather than adding it later in the development cycle. Software inspections are an effective way of doing this. There are several approaches to software inspections, and these vary in the level of formality employed. A simple informal approach consists of a walkthrough of the document or code by an individual other than the author. The meeting usually takes place at the author\u2019s desk or in a meeting room, and the reviewer and author discuss the document or code informally.             The well-known Fagan inspection process was developed at IBM in the 1970s, and it provides a rigorous approach to building quality into the software. The majority of\u00a0\u2026", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Joseph Weizenbaum\n", "abstract": " Joseph Weizenbaum was a German-American computer scientist who is famous for his development of the Eliza program in 1966 and for his views on the ethics of artificial intelligence. He became sceptical of artificial intelligence and a leading critic of the AI field following the response of users to the Eliza program. Many users felt that they were communicating with an empathic psychologist rather than a machine. He was professor emeritus of computer science at MIT, and he also held academic positions at several other universities including Harvard, Stanford, the Technical University of Berlin and the University of Hamburg.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Larry Ellison\n", "abstract": " Larry Ellison is an American entrepreneur and the co-founder and chief executive officer (CEO) of Oracle Corporation. This is one of the leading enterprise software companies in the world and is well-known for its database management products. It also produces enterprise resource planning (ERP) and customer relationship management (CRM) software.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "What Is a Computer?\n", "abstract": " Computers are an integral part of modern society, and new technology has transformed the world into a global village. Communication is now conducted using text messaging, e-mail, mobile phones, video calls over the Internet using Skype and social media sites such as Facebook. The new technology makes it easier for people to keep in touch with friends and family around the world and allows business to be conducted in a global market.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Revolutions in the 1980s and 1990s\n", "abstract": " The 1980s and 1990s were a time of fundamental change in the computing field. The industry moved from a world dominated by mainframe computers to a brave new world dominated by networks of personal computers. The invention of the World Wide Web was a revolution in computing, and it has altered consumer and business behaviour. The speed of microprocessors improved dramatically during the period, and there were large increases in memory and storage in personal computers. This increase in processing power has transformed computers from machines dedicated to business or scientific use to sophisticated machines that may play music or videos or engage in multimedia communication.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Cleanroom and Software Reliability\n", "abstract": " The Cleanroom approach to software development employs mathematical and statistical techniques to produce high-quality software. The approach was developed by Harlan Mills and others and has been used successfully at IBM. The approach uses mathematical techniques to build quality into the software, and to demonstrate that the program is correct with respect to its specification. Cleanroom also provides certification of the quality of the software based on the expected usage profile of the software.Software reliability is the probability that the program works without failure for a specified length of time, and is a statement on the future behavior of the software. It is generally expressed in terms of the mean time to failure (MTTF) or the mean time between failure (MTBF). The release of an unreliable software product at best causes inconvenience to customers, and at worst can result in damage to property or injury\u00a0\u2026", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Applying formal methods to model organizations and structures in the real world\n", "abstract": " Formal methods are generally employed for the formal specification of computer systems. The formal specification of such a system is an unambiguous statement of the requirements of the system, and is expressed in a formal mathematical notation. The objective of this thesis is to demonstrate that formal methods may be successfully employed to build mathematical models of aspects of the real world. In particular, this thesis uses the method and notation of the Irish school of VDM to construct various models of the real world. The actual method of construction and evaluation of the models is considered.This thesis aims to model aspects of organizations and beliefs in a formal way. In particular, this involves the construction of formal models of organizations, hierarchies and belief systems. The model itself then serves as a formal means of testing hypotheses or ideas about some aspects of the world. The modeller employs mathematical techniques to assist in model construction and evaluation.", "num_citations": "2\n", "authors": ["1371"]}
{"title": "Automata theory\n", "abstract": " Automata Theory is the branch of computer science that is concerned with the study of abstract machines and automata. These include finite-state machines, pushdown automata and Turing machines. Finite-state machines are abstract machines that may be in one state at a time (current state), and the input symbol causes a transition from the current state to the next state. They have limited computational power due to memory and state constraints. Pushdown automata have greater computational power, and they contain extra memory in the form of a stack from which symbols may be pushed or popped. The Turing machine is the most powerful model for computation, and this theoretical machine is equivalent to an actual computer in the sense that it can compute exactly the same set of functions. The memory of the Turing machine is a tape that consists of a potentially infinite number of one-dimensional cells.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Matrix theory\n", "abstract": " A matrix is a rectangular array of numbers that consists of horizontal rows and vertical columns. A matrix with m rows and n columns is termed an m \u00d7 n matrix, where m and n are its dimensions. A matrix with an equal number of rows and columns is termed a square matrix. Various operations such as the addition and multiplication of matrices are considered, and the determinant and inverse of a square matrix is discussed. The application of matrices to solving a set of linear equations using Gaussian elimination is considered.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Verification of Safety-Critical Systems\n", "abstract": " A safety-critical system is a system whose failure could result in significant economic damage or loss of life. There are many examples of safety-critical systems such as aircraft flight control systems, nuclear power stations, and missile systems. It is essential to employ rigorous processes in their design and development, and software testing alone is usually insufficient in verifying the correctness of such systems.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "EDVAC and ENIAC Computers\n", "abstract": " The Electronic Numerical Integrator and Computer (ENIAC) was one of the first general-purpose electronic digital computers, and it was used to integrate ballistic equations and to calculate the trajectories of naval shells. It was completed in 1946 and remained in use until 1955. The EDVAC (Electronic Discrete Variable Automatic Computer) was the successor to ENIAC, and it was one of the earliest stored-program computers, with the program instructions held in memory.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Boolean Algebra and Digital Computing\n", "abstract": " Claude Shannon showed that Boole\u2019s symbolic logic provided the perfect mathematical model for switching theory and for the subsequent design of digital circuits and computers. His influential master\u2019s thesis is a key milestone in computing, and it shows how to lay out circuits according to Boolean principles. Shannon\u2019s insight of using the properties of electric switches to do Boolean logic is the basic concept that underlies all electronic digital computers. This was the birth of digital logic and the digital computing age.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "World Wide Web\n", "abstract": " The World Wide Web creates a space in which users can access information easily in any part of the world. This is done using only a web browser and simple web addresses. The user can then click on hyperlinks on web pages to access further relevant information that may be on an entirely different continent. The invention of the World Wide Web was a revolutionary milestone in computing, and it transformed the Internet from mainly academic use to where it is now an integral part of people\u2019s lives. Users may surf the web, i.e., hyperlink among the millions of computers in the world and obtain information easily.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Software Life Cycles\n", "abstract": " The software development process has an associated life cycle that consists of various phases. There are several well-known life cycles employed such as the waterfall model, the spiral model, the Rational Unified Process, and the Agile methodology. The choice of the software development life cycle is determined from the needs of the project.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Java Programming Language\n", "abstract": " Java is a general-purpose object-oriented programming language created by James Gosling and others at Sun Microsystems in the mid-1990s. It has played a key role in transforming the Internet, and it has fundamentally changed the way in which people program. It supports application programming in a distributed computing environment, and it was designed with portability in mind. The objective is to create a computing environment that allows a program to be written once and executed anywhere, and platform independence is achieved by compiling the Java code into Java bytecode, where the bytecode is an optimized set of instructions that may be executed on a Java Virtual Machine.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "C and C++ Programming Languages\n", "abstract": " Dennis Ritchie developed the C programming language at Bell Labs in the late 1960s/early 1970s, and it became a popular general-purpose programming language. It is used for both systems programming and in application development and is widely used in industry. The language provides high-level and low-level capabilities, and the language is portable in that a C program written in ANSI C may be compiled for a very wide variety of computer platforms and operating systems (with minimal changes to the source code). C++ is an object-oriented extension of the C programming language, and it was designed to use the power of object-oriented programming and to maintain the speed and portability of C. It provides a significant extension of C\u2019s capabilities, but it does not force the programmer to use the object-oriented features of the language.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Wi-Fi Technology\n", "abstract": " WiFi is a popular short-range wireless broadband technology based on the IEEE 802.11 standard, and it is the wireless equivalent of Ethernet. It uses 2.4\u20135 gigahertz (GHz) radio frequencies, and it can transfer data at rates of up to a maximum of 600 Mbps. The technology is used for most home networks, business local area networks, and pubic hotspot networks.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "E-Commerce\n", "abstract": " E-commerce involves the buying or selling of products and services over the Internet. The success of the World Wide Web led to modern electronic commerce, and the required technologies (e.g., electronic funds transfer, secure socket layer, electronic data interchange, online transaction processing) were later developed.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Artificial Intelligence and Applications\n", "abstract": " The long-term goal of artificial intelligence is to create a thinking machine that is intelligent, has consciousness, has the ability to learn, has free will, and is ethical. It is a multidisciplinary field including disciplines such as philosophy, psychology, linguistics, machine vision, cognitive science, logic, and ethics. Some researchers (e.g., Hubert Dreyfus and John Searle) believe that its goals are impossible or incoherent, and others (e.g., Joseph Weizenbaum) argue that the field is unethical.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Graphical User Interface and Human-Computer Interaction\n", "abstract": " Human-computer interaction (HCI) is a branch of computer science that is concerned with the design, evaluation, and implementation of interactive computing systems for human use. It is focused on the interfaces between people and computers and involves several fields including computer science, cognitive psychology, design, and communication. It has grown over the decades to include text-based interaction systems, graphical user interfaces (GUI), and voice user interfaces (VUI) for speech recognition and speech synthesis.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Atari Video Games\n", "abstract": " Atari Inc. is a name that is legendary in the world of video games, and the company also designed and manufactured home computers. Atari laid the foundation for the modern video game industry, and it developed video games such as Pong, Asteroids, Tempest, Centipede, and Star Wars.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "The Internet and World Wide Web\n", "abstract": " Chapter 13 describes the Internet revolution starting from ARPANET, which was a packet-switched network, to TCP/IP, which is a set of network standards for interconnecting networks and computers. These developments led to the birth of the Internet, and Tim Berners-Lee\u2019s work at CERN led to the birth of the World Wide Web. Berners-Lee built on several existing inventions such as the Internet, hypertext and the mouse to form the World Wide Web. Applications of the World Wide Web are discussed, as well as successful and unsuccessful new economy companies. The dot-com bubble and subsequent burst of the late 1990s/early 2000 is discussed, and we briefly discuss the Internet of Things and the Internet of Money.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "A Concise History of Computing\n", "abstract": " This chapter presents a brief history of computing including a discussion of the first digital computers, the first commercial computers, the SAGE air defence system, the invention of the transistor by William Shockley and others at Bell Labs, and early transistor computers, the invention of the integrated circuit by Jack Kirby at Texas Instruments, the development of the IBM System/360, and its influence on later computer development, later mainframes and minicomputers, including DEC\u2019s minicomputers. We discuss the revolutionary invention of the microprocessor, and how it led to home computers such as the Apple I and II home computers, Commodore computers, Atari computers, the Sinclair ZX 81 and ZX spectrum computers, and the Apple Macintosh, which was released in 1984. Finally, we discuss the introduction of the IBM personal computer.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Overview of Telecommunications\n", "abstract": " Telecommunications is a branch of technology concerned with the transmission of information over a distance, where the transmitter sends the information to a receiver. We present a short history of telecommunications and focus on the development of mobile phone technology. We discuss the development of the AXE system by Ericsson, and this was the first fully automated digital switching system. We discuss the concept of a cellular system, which was introduced by Bell Labs, as well as the introduction of the first mobile phone, the DynaTAC, by Motorola. We discuss the Iridium system, which was launched in late 1998 to provide worldwide wireless coverage to its customers, where the coverage included the oceans, airways and polar regions. The concept of global coverage as provided by Iridium was potentially very useful, but, in many ways, Iridium was an engineering triumph over common sense, and\u00a0\u2026", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Overview of software engineering\n", "abstract": " This chapter presents a short history of software engineering from its birth at the Garmisch conference in Germany in the late 1960s. The IEEE definition of software engineering is discussed, and it is emphasised that software engineering is a lot more than just programming. We discuss key challenges in software engineering, as well as several high-profile software failures. The waterfall and spiral life cycles are discussed, as well as a brief discussion of the rational unified process and the popular Agile methodology. We discuss the key activities in the waterfall model such as requirements, design, implementation, unit, system and acceptance testing.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Propositional and Predicate Logic\n", "abstract": " Propositional logic is the study of propositions, where a proposition is a statement that is either true or false. Propositional logic  may be used to encode simple arguments that are expressed in natural language, and to determine their validity. The validity of an argument may be determined from truth tables, or using inference rules such as modus ponens to establish the conclusion via deductive steps. Predicate logic  allows complex facts about the world to be represented, and new facts may be determined via deductive reasoning. Predicate calculus includes predicates, variables and quantifiers, and a predicate is a characteristic or property that the subject of a statement can have. The universal quantifier  is used to express a statement such as that all members of the domain of discourse have property P, and the existential quantifier  states that there is at least one value of x has property P.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Technology Transfer to Industry\n", "abstract": " This chapter discusses technology transfer which is concerned with the practical exploitation of new technology developed by an academic or industrial research group, and the objective is to facilitate the use of the technology in an industrial environment. Technology transfer needs to take place in a controlled manner, and it is important to conduct a pilot of the technology prior to a decision on general deployment.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Model Checking\n", "abstract": " Model checking is an automated technique such that given a finite state model of a system and a formal property (expressed in temporal logic), then it systematically checks whether the property is true of false in a given state in the model.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Software Metrics and Problem-Solving\n", "abstract": " This chapter is concerned with metrics and problem-solving, and this includes a discussion of the Balanced Scorecard which assists in identifying appropriate metrics for the organization. The Goal, Question, Metrics (GQM) approach is discussed, and this allows metrics related to the organization goals to be defined. A selection of sample metrics for an organization is presented, and problem-solving tools such as fishbone diagrams, Pareto charts, trend charts are discussed.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "A Short History of Logic\n", "abstract": " Logic is concerned with reasoning and with establishing the validity of arguments. It allows conclusions to be deduced from premises according to logical rules, and the logical argument establishes the truth of the conclusion provided that the premises are true. The origins of logic are with the Greeks who were interested in the nature of truth. Aristotle developed syllogistic logic, where a syllogism consists of two premises and a conclusion. The Stoics developed an early form of propositional logic, where the assertibles (propositions) have a truth-value such that at any time they are either true or false. Boole\u2019s symbolic logic and its application to digital computing are discussed, and we consider Frege\u2019s work on predicate logic.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Computability and decidability\n", "abstract": " A function f is computable if there exist an algorithm that produces the value of f correctly for each possible argument of f. The computation of f for a particular argument x just involves following the instructions in the algorithm, and it produces the result f(x) in a finite number of steps if x is in the domain of f. If x is not in the domain of f then the algorithm may produce an answer saying so or it might run forever never halting. The concept of computability may be made precise in several equivalent ways such as Church\u2019s lambda calculus, recursive function theory or by the theoretical Turing machines. Church and Turing independently showed in 1936 that mathematics is not decidable: i.e. there is no mechanical procedure (i.e. algorithm) to determine whether an arbitrary mathematical proposition is true or false, and so the only way is to determine the truth or falsity of a statement is, try to solve the problem.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Xerox PARC\n", "abstract": " Xerox Palo Alto Research Center (PARC) was founded as the research and development division of Xerox in 1970. It has made important contributions to the computing field, and its inventions include laser printing; Ethernet technology for local area networks; the Xerox Alto which was one of the earliest personal computers and which had a major influence on the design of the Apple Macintosh computer; the graphical user interface (GUI) which included icons and windows for personal computers; Bravo and Gypsy which were the first text formatting WYSIWYG editors; and object-oriented programming with the Smalltalk programming language.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Oracle Corporation\n", "abstract": " Oracle is an American multinational corporation with headquarters in Redwood City, California. It is recognised as a world leader in relational database technology, and its software products have changed the face of business computing. Oracle is also involved in the enterprise application market including enterprise resource planning (ERP), customer relationship management (CRM), and supply chain management (SCM).           It is one of the largest software companies in the world with annual revenue of approximately $37 billion and over 120,000 employees around the world.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Netscape Communications\n", "abstract": " Netscape\u2019s significance to the computer industry is that it developed the Netscape Navigator web browser which dominated the web browser market in the mid-1990s. The decline in the usage of Netscape from over a 90 % market share in the mid-1990s to less than 1 % of the market share in 2006 was due to the browser wars with Microsoft\u2019s Internet Explorer.           Netscape also developed important Internet technologies such as secure sockets layer technology (SSL) used for secure payments and the JavaScript scripting language for web pages.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Facebook\n", "abstract": " Facebook is the leading social networking site in the world, and its mission is to make the world more open and connected. It helps its users to keep in touch with friends and family and to share their opinions on what is happening around the world.           Users may upload photos and videos, express opinions and ideas and exchange messages. Facebook is very popular with advertisers as it allows them to easily reach a large audience. The company was founded by Mark Zuckerberg in 2004 while he was a student studying psychology at Harvard University.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "SAP SE\n", "abstract": " Systems Applications and Products in Data Processing (SAP SE) is a German multinational corporation that creates enterprise software that is used by its customers to manage their business operations and customer relations. It is one of the largest European software companies, and it has annual revenues of over \u20ac16 billion and net income of approximately \u20ac3 billion. Its headquarters are in Walldorf, Baden-W\u00fcrttemberg, in Germany, and it employs over 70,000 people around the world.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Software Quality Assurance\n", "abstract": " The purpose of software quality assurance is to provide visibility to management on the processes being followed and the work products being produced in the organization. It is a systematic enquiry into the way that things are done in the organization, and involves conducting audits of projects, suppliers and departments.             It provides visibility into the processes and standards in use in the organization, and the extent of compliance to the defined processes and standards. Software quality assurance involves planning and conducting audits; reporting the results to the affected groups; tracking the assigned audit actions to completion; and conducting follow up audits, as appropriate. It is generally conducted by the SQA group and this group is independent of the groups being audited.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Software Metrics\n", "abstract": " Measurement is an essential part of mathematics and the physical sciences, and in recent years it has been successfully applied to the software engineering discipline. The purpose of a measurement program is to establish and use quantitative measurements to manage the software development environment in the organization, to assist the organization in understanding its current software process maturity, and to provide an objective indication that improvements have been successful.             Measurements provide visibility into the various functional areas in the organization, and the actual quantitative data allow trends to be seen over time. The analysis of the trends and quantitative data allow action plans to be derived for continuous improvement. Measurements may be employed to track the quality, timeliness, cost, schedule, and effort of software projects. The term \u201cmetric\u201d and \u201cmeasurement\u201d are used\u00a0\u2026", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Gene Amdahl\n", "abstract": " Gene Amdahl is an American computer scientist and entrepreneur. He was the founder of Amdahl Corporation, which became a major rival to IBM in the mainframe market during the 1970s and 1980s.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Gordon Moore\n", "abstract": " Gordon Moore is an American computer scientist, entrepreneur and philanthropist. He was a co-founder (with Robert Noyce) of Intel Corporation in 1968, and he served initially as the executive vice president of the company. He was chief executive officer (CEO) of Intel from 1975 to 1987. He has made important contributions to the semiconductor field and is famous for his articulation of Moore\u2019s law in 1965. His initial formulation of the law predicted that the number of transistors that could be placed on a computer chip (i.e. the transistor density) would double every year. He revised his law in 1975 to state that the transistor density will double roughly every 2 years. His law has proved to be quite accurate, as the semiconductor industry has developed more and more powerful chips at lower costs.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Tim Berners-Lee\n", "abstract": " Tim Berners-Lee is a British computer scientist and the inventor of the World Wide Web. He was born in London in 1955 and obtained a degree in physics in 1976 from Oxford University. Both his parents had been involved in the programming of the Ferranti Mark I computer in the 1950s.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Developments in the 1950s\u20131970s\n", "abstract": " This chapter considers a selection of computers developed during the 1950s\u20131970s. The initial driver for the design and development of more powerful computers was the perceived threat of the Soviet Union. This led to an arms race between the two superpowers, and it was clear that computing technology would play an important role in developing sophisticated weapon and defence systems. The SAGE air defence system developed for the United States and Canada was an early example of the use of computer technology for the military.", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Computer Programming Languages\n", "abstract": " Computer programming languages have evolved from the early days of computing. The earliest programming languages used machine code to instruct the computer, and the next development was to use low-level assembly languages to represent machine language instructions. These were then translated to the machine code by an assembler. The next step was to develop high-level programming languages such as Fortran and Cobol.A first-generation programming language (or 1GL) is a machine-level programming language that consists of 1s and 0s. Their main advantage was execution speed and efficiency. They could be directly executed on the central processing unit (CPU) if the computer, and there is no need to employ a compiler or assembler to translate from a high-level language or assembly language to the machine code. However, writing in a machine language was difficult and error prone as it\u00a0\u2026", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Vienna Development Method\n", "abstract": " VDM dates from work done by the IBM research laboratory in Vienna in the 1960s. Their aim was to specify the semantics of the PL/1 programming language. This was achieved by employing the Vienna Definition Language (VDL), taking an operational semantic approach; ie the semantics of a language are determined in terms of a hypothetical machine which interprets the programs of that language [BjJ: 82]. Later work led to the Vienna Development Method (VDM) with its specification language, Meta IV. 1 This concerned itself with the denotational semantics of programming languages; ie, a mathematical object (set, function, etc.) is associated with each phrase of the language [BjJ: 82]. The mathematical object is the denotation of the phrase. The initial application of VDM was to programming language semantics. Today, VDM is mainly employed to formally specify software and includes a development method\u00a0\u2026", "num_citations": "1\n", "authors": ["1371"]}
{"title": "Capability Maturity Model IntegrationCapability Maturity Model Integration\n", "abstract": " The SEI was founded by the US Congress in 1984 and has worked successfully in advancing software engineering practices in the USA and worldwide. It performs research to find solutions to key software engineering problems, and its proposed solutions are validated through pilots. These solutions are then disseminated to the wider software engineering community through its training programme. The SEI\u2019s research and maturity models have played an important role in helping companies to deliver high-quality software consistently on-time and on-budget.", "num_citations": "1\n", "authors": ["1371"]}