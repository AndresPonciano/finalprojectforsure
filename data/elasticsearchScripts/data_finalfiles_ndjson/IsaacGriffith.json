{"title": "Design Pattern Decay A Study of Design Pattern Grime and its Impact on Quality and Technical Debt\n", "abstract": " Technical debt is a financial metaphor describing the tradeoff between the short term benefits gained and long term consequences of design and implementation shortcuts taken over the evolution of a software product. These shortcuts typically manifest as design disharmonies such as code smells, anti-patterns, design pattern grime, modularity violations, or violations of good coding rules. Currently little is known about the relationships between these design disharmonies and current technical debt metrics, between design disharmonies and quality attributes (eg, maintainability or security), and technical debt metrics and quality attributes. The focus of this proposal is on evolution and effects of a type of design disharmony called design pattern grime. Design pattern grime is the accumulation of unnecessary or unrelated software artifacts within the classes of a design pattern instance. Since design patterns represent agreed upon methods to solve common problems and are based upon sound principles of good design, the decay of these patterns implies an evolution away from good design. This research will expand the knowledge base of design pattern grime through systematic and empirical evaluation of its effects on quality and technical debt. Initially, we define an extended taxonomy of design pattern grime based on design principles in conjunction with metrics. Using this taxonomy as a guide we intend to experiment with open source software to evaluate the effect of design pattern grime on software product quality and technical debt. We also propose three case studies in the context of both open source and industry grade software to study\u00a0\u2026", "num_citations": "2\n", "authors": ["1328"]}
{"title": "HeyLo: Visualizing User Interests from Twitter Using Emoji in Mixed Reality\n", "abstract": " We tackle the problem of analyzing a user's interests from social media content and subsequently visualizing these interests in an extended reality environment. We compare five models for extracting interests from Twitter users and how we can measure the effectiveness of these models. We also look at how these interest extraction models fit in the context of HeyLo, an extended reality computational creativity (XRCC) framework for visualizing potential conversational topics. The chosen interests for a particular person are visualized using emoji. We accomplish this by using an emoji2vector model to find the closest related emoji to a given interest. We perform a comparative analysis between the five interest extraction models on real-world users and their tweets, evaluating specificity, variance, and relevance.", "num_citations": "1\n", "authors": ["1328"]}
{"title": "Technical debt management in release planning: a decision support framework\n", "abstract": " Technical debt is a financial metaphor used to describe the tradeoff between the short term benefit of taking a shortcut during the design or implementation phase of a software product (e.g., in order to meet a deadline) and the long term consequences of taking said shortcut, which may affect the quality of the software product. Recently, academics and industry practitioners have offered several models and methods which purport to explain or manage this phenomenon. Unfortunately, to date, there has yet to be a framework which supports managers in making decisions regarding technical debt. Although similar solutions exist to support the release planning phase of software development, they focus on the management of new features and do not take into account issues relating to technical debt and its effects on the development process. This thesis describes a software engineering decision support system focusing on three key components:  analysis and decision, intelligence, and simulation. Supporting each of these components is a meta-model which bridges the gap between technical debt management and software release planning. To investigate the development of the analysis and decision and intelligence components we used a reduced form of this meta-model in conjunction with a coalition formation games approach. This approach served to evaluate the technical debt management and release planning issues, and was found superior, using simulation, in comparison to a first-come, first-served method (representative of typical agile planning processes). To investigate the development of the simulation component we conducted a\u00a0\u2026", "num_citations": "1\n", "authors": ["1328"]}