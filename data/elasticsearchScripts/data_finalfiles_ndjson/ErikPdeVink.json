{"title": "Control flow semantics\n", "abstract": " I have to admit, I was looking forward to reviewing this book. It answered what was for me a 6-year old question. Six years ago, I was pursuing a Master\u2019s degree at McGill University. working on programming language semantics. My training in semantics was rather traditional: lambda calculus, functional programming languages, denotational semantics based on complete partial orders, etc. At the time, Franck van Breugel was visiting McGill, and I came across the fact that Franck was also working on semantics of programming languages, but on semantics based on metric spaces. For someone with an undergraduate background in mathematics, this was seriously intriguing. Unfortunately, I never got around to asking Franck about his work. This book is an answer to that question that never was. The purpose of the book is to describe an approach to provide semantics to imperative languages with various types of control flow models, including concurrency. The approach handles both operational semantics and denotational semantics, all in a topological setting.(We will come back to this later.) The issue of relating the two semantics for any given language is a central theme of the approach. I will provide in the next section an introduction to topological semantics. For now, let me say a word on the applicability of the approach. As stated, the main interest is in providing semantics to imperative languages. Imperative programs can be thought of, for our purposes, as sequences of actions performed on a state. Typically, states are sets of variables, and actions include modifying the value of a variable in a state. An important characteristic of imperative\u00a0\u2026", "num_citations": "234\n", "authors": ["1515"]}
{"title": "An overview of the mCRL2 toolset and its recent advances\n", "abstract": " The analysis of complex distributed systems requires dedicated software tools. The mCRL language and toolset have been developed to support such analysis. We highlight changes and improvements made to the toolset in recent years. On the one hand, these affect the scope of application, which has been broadened with extended support for data structures like infinite sets and functions. On the other hand, considerable progress has been made regarding the performance of our tools for state space generation and model checking, due to improvements in symbolic reduction techniques and due to a shift towards parity game-based solving. We also discuss the software architecture of the toolset, which was well suited to accommodate the above changes, and we address a number of case studies to illustrate the approach.", "num_citations": "180\n", "authors": ["1515"]}
{"title": "Bisimulation for probabilistic transition systems: a coalgebraic approach\n", "abstract": " The notion of bisimulation as proposed by Larsen and Skou for discrete probabilistic transition systems is shown to coincide with a coalgebraic definition in the sense of Aczel and Mendler in terms of a set functor, which associates to a set its collection of simple probability distributions. This coalgebraic formulation makes it possible to generalize the concepts of discrete probabilistic transition system and probabilistic bisimulation to a continuous setting involving Borel probability measures. A functor \u21331 is introduced that yields for a metric space its collection of Borel probability measures. Under reasonable conditions, this functor exactly captures generalized probabilistic bisimilarity. Application of the final coalgebra paradigm to a functor based on \u21331 then yields an internally fully abstract semantical domain with respect to probabilistic bisimulation, which is therefore well suited for the interpretation of probabilistic\u00a0\u2026", "num_citations": "171\n", "authors": ["1515"]}
{"title": "Probabilistic automata: system types, parallel composition and comparison\n", "abstract": " We survey various notions of probabilistic automata and probabilistic bisimulation, accumulating in an expressiveness hierarchy of probabilistic system types. The aim of this paper is twofold: On the one hand it provides an overview of existing types of probabilistic systems and, on the other hand, it explains the relationship between these models. We overview probabilistic systems with discrete probabilities only. The expressiveness order used to built the hierarchy is defined via the existence of mappings between the corresponding system types that preserve and reflect bisimilarity. Additionally, we discuss parallel composition for the presented types of systems, augmenting the map of probabilistic automata with closedness under this compositional operator.", "num_citations": "135\n", "authors": ["1515"]}
{"title": "A formalization of anonymity and onion routing\n", "abstract": " The use of formal methods to verify security protocols with respect to secrecy and authentication has become standard practice. In contrast, the formalization of other security goals, such as privacy, has received less attention. Due to the increasing importance of privacy in the current society, formal methods will also become indispensable in this area. Therefore, we propose a formal definition of the notion of anonymity in presence of an observing intruder. We validate this definition by analyzing a well-known anonymity preserving protocol, viz. onion routing.", "num_citations": "102\n", "authors": ["1515"]}
{"title": "A hierarchy of probabilistic system types\n", "abstract": " We arrange various classes of probabilistic systems studied in the literature in an expressiveness hierarchy. Our expressiveness criterion is the existence of a system translation, from the less expressive type into the more expressive type, that preserves and reflects probabilistic bisimilarity. We model the different system types as coalgebras of suitable behaviour functors and argue that the corresponding coalgebraic bisimilarity coincides with probabilistic bisimilarity for the classes for which the latter notion has been proposed in the literature. The theory of coalgebras provides a unified framework for the presentation of the different classes and the system translations we needed to establish the hierarchy. All these translations arise in a standard way from natural transformations between the two behaviour functors involved. Such a translation generally preserves coalgebraic bisimilarity. We exploit a new result that\u00a0\u2026", "num_citations": "92\n", "authors": ["1515"]}
{"title": "Verification and improvement of the sliding window protocol\n", "abstract": " The well-known Sliding Window protocol caters for the reliable and efficient transmission of data over unreliable channels that can lose, reorder and duplicate messages. Despite the practical importance of the protocol and its high potential for errors, it has never been formally verified for the general setting. We try to fill this gap by giving a fully formal specification and verification of an improved version of the protocol. The protocol is specified by a timed state machine in the language of the verification system PVS. This allows a mechanical check of the proof by the interactive proof checker of PVS. Our modelling is very general and includes such important features of the protocol as sending and receiving windows of arbitrary size, bounded sequence numbers and channels that may lose, reorder and duplicate messages.", "num_citations": "80\n", "authors": ["1515"]}
{"title": "The mCRL2 toolset for analysing concurrent systems: improvements in expressivity and usability\n", "abstract": " Reasoning about the correctness of parallel and distributed systems requires automated tools. By now, the mCRL2 toolset and language have been developed over a course of more than fifteen years. In this paper, we report on the progress and advancements over the past six years. Firstly, the mCRL2 language has been extended to support the modelling of probabilistic behaviour. Furthermore, the usability has been improved with the addition of refinement checking, counterexample generation and a user-friendly GUI. Finally, several performance improvements have been made in the treatment of behavioural equivalences. Besides the changes to the toolset itself, we cover recent applications of mCRL2 in software product line engineering and the use of domain specific languages (DSLs).", "num_citations": "78\n", "authors": ["1515"]}
{"title": "Reo+ mCRL2: A framework for model-checking dataflow in service compositions\n", "abstract": " The paradigm of service-oriented computing revolutionized the field of software engineering. According to this paradigm, new systems are composed of existing stand-alone services to support complex cross-organizational business processes. Correct communication of these services is not possible without a proper coordination mechanism. The Reo coordination language is a channel-based modeling language that introduces various types of channels and their composition rules. By composing Reo channels, one can specify Reo connectors that realize arbitrary complex behavioral protocols. Several formalisms have been introduced to give semantics to Reo. In their most basic form, they reflect service synchronization and dataflow constraints imposed by connectors. To ensure that the composed system behaves as intended, we need a wide range of automated verification tools to assist service\u00a0\u2026", "num_citations": "76\n", "authors": ["1515"]}
{"title": "Injective synchronisation: an extension of the authentication hierarchy\n", "abstract": " Authentication is one of the foremost goals of many security protocols. It is most often formalised as a form of agreement, which expresses that the communicating partners agree on the values of a number of variables. In this paper we formalise and study an intensional form of authentication which we call synchronisation. Synchronisation expresses that the messages are transmitted exactly as prescribed by the protocol description. Synchronisation is a strictly stronger property than agreement for the standard intruder model, because it can be used to detect preplay attacks. In order to prevent replay attacks on simple protocols, we also define injective synchronisation. Given a synchronising protocol, we show that a sufficient syntactic criterion exists that guarantees that the protocol is injective as well.", "num_citations": "71\n", "authors": ["1515"]}
{"title": "Verifying probabilistic programs using a Hoare like logic\n", "abstract": " Probability, be it inherent or explicitly introduced, has become an important issue in the verification of programs. In this paper we study a formalism which allows reasoning about programs which can act probabilistically. To describe probabilistic programs, a basic programming language with an operator for probabilistic choice is introduced and a denotational semantics is given for this language. To specify propertics of probabilistic programs, standard first order logic predicates are insufficient, so a notion of probabilistic predicates is introduced. A Hoare-style proof system to check properties of probabilistic programs is given. The proof system for a sublanguage is shown to be sound and complete; the properties that can be derived are exactly the valid properties. Finally some typical examples illustrate the use of the probabilistic predicates and the proof system.", "num_citations": "69\n", "authors": ["1515"]}
{"title": "Bisimulation for probabilistic transition systems: a coalgebraic approach\n", "abstract": " The notion of bisimulation as proposed by Larsen and Skou for discrete probabilistic transition systems is shown to coincide with a coalgebraic definition in the sense of Aczel and Mendier in terms of a set functor. This coalgebraic formulation makes it possible to generalize the concepts to a continuous setting involving Borel probability measures. Under reasonable conditions, generalized probabilistic bisimilarity can be characterized categorically. Application of the final coalgebra paradigm then yields an internally fully abstract semantical domain with respect to probabilistic bisimulation.", "num_citations": "67\n", "authors": ["1515"]}
{"title": "Continuation semantics for Prolog with cut\n", "abstract": " We present a denotational continuation semantics for PROLOG with cut. First a uniform language \u212c is studied, which captures the control flow aspects of PROLOG. The denotational semantics for \u212c is proven equivalent to a transition system based operational semantics. The congruence proof relies on the representation of the operational semantics as a chain of approximations and on a convenient induction principle. Finally, we interpret the abstract language \u212c such that we obtain equivalent denotational and operational models for PROLOG itself.", "num_citations": "62\n", "authors": ["1515"]}
{"title": "Formalising receipt-freeness\n", "abstract": " Receipt-freeness is the property of voting protocols that a voter cannot create a receipt which proves how she voted. Since Benaloh and Tuinstra introduced this property, there has been a large amount of work devoted to the construction of receipt-free voting protocols. This paper provides a generic and uniform formalism that captures the notion of a receipt. The formalism is then applied to analyse the receipt-freeness of a number of voting protocols.", "num_citations": "55\n", "authors": ["1515"]}
{"title": "Time and data-aware analysis of graphical service models in Reo\n", "abstract": " Reo is a graphical channel-based coordination language that enables the modeling of complex behavioral protocols using a small set of channel types with well-de ned behavior. Reo has been developed for the coordination of standalone components and services, which makes it suitable for the modeling of service-based business processes. The formal semantic models for Reo lay the grounds for computer-aided analysis of different aspects of Reo diagrams, including their animation, simulation and veri cation of control ow and data ow by means of model checking techniques. In this paper, we discuss the veri cation of data aware Reo process models using the mCRL2 model checking toolset including time analysis. We also show how behavior abstraction can be used to minimize Reo process models and generate smaller mCRL2 speci cations. A detailed auction example illustrates our approach to timeaware\u00a0\u2026", "num_citations": "52\n", "authors": ["1515"]}
{"title": "Dreams: a framework for distributed synchronous coordination\n", "abstract": " Synchronous coordination systems, such as Reo, exchange data via indivisible actions, while distributed systems are typically asynchronous and assume that messages can be delayed or get lost. To combine these seemingly contradictory notions, we introduce the Dreams framework. Coordination patterns in Dreams are described using a synchronous model based on the Reo language, whereas global system behaviour is given by the runtime composition of autonomous actors communicating asynchronously. Dreams also exploits the use of actors in the composition of synchronous coordination patterns to allow communication whenever possible, increasing the scalability of the implementation.", "num_citations": "48\n", "authors": ["1515"]}
{"title": "A hierarchy of probabilistic system types\n", "abstract": " We arrange various types of probabilistic transition systems studied in the literature in an expressiveness hierarchy. The expressiveness criterion is the existence of an embedding of systems of the one class into those of the other. An embedding here is a system transformation which preserves and reflects bisimilarity. To facilitate the task, we define the classes of systems and the corresponding notion of bisimilarity coalgebraically and use the new technical result that an embedding arises from a natural transformation with injective components between the two coalgebra functors under consideration. Moreover, we argue that coalgebraic bisimilarity, on which we base our results, coincides with the concrete notions proposed in the literature for the different system classes, exemplified by a detailed proof for the case of general Segala-type systems.", "num_citations": "48\n", "authors": ["1515"]}
{"title": "Denotational models for programming languages: applications of Banach's Fixed Point Theorem\n", "abstract": " For an abstract programming language both a linear and a branching denotational semantics are developed. The main instrument for the construction of the two models and for the semantical operators involved is the classical Banach Fixed Point Theorem. Via higher-order transformations the various semantical definitions are justified by their characterization as\u2014necessarily unique\u2014fixed points of contractions on a complete metric space. Additionally the Banach Theorem proves itself useful in relating the two models presented.", "num_citations": "47\n", "authors": ["1515"]}
{"title": "On BAN logics for industrial security protocols\n", "abstract": " This paper reports on two case-studies of applying BAN logic to industrial strength security protocols. These studies demonstrate the flexibility of the BAN language, as it caters for the addition of appropriate constructs and rules. We argue that, although a semantical foundation of the formalism is lacking, BAN logic provides an intuitive and powerful technique for security analysis.", "num_citations": "44\n", "authors": ["1515"]}
{"title": "Defining authentication in a trace model\n", "abstract": " In this paper we define a general trace model for security protocols which allows to reason about various formal definitions of authentication. In the model, we define a strong form of authentication which we call synchronization. We present both an injective and a noninjective version. We relate synchronization to a formulation of agreement in our trace model and contribute to the discussion on intensional vs. extensional specifications.", "num_citations": "35\n", "authors": ["1515"]}
{"title": "Data-aware design and verification of service compositions with Reo and mCRL2\n", "abstract": " Service-based systems can be modeled as stand-alone services coordinated by external connectors. Reo is a channel-based coordination language with well-defined semantics that enables a compositional construction of complex connectors from a set of primitive channels. It has been successfully applied in the area of web service composition specification as well as in business process modeling. In this paper, we present a mapping from Reo to mCRL2, a specification language based on the process algebra ACP, extended with data and time. The mapping enables verification of Reo process models and service compositions using the mCRL2 model checking facilities. The supporting Eclipse Coordination Tools suite provides a user-friendly environment for the modeling and verification process.", "num_citations": "33\n", "authors": ["1515"]}
{"title": "Data anonymity in the FOO voting scheme\n", "abstract": " We study one of the many aspects of privacy, which is referred to as data anonymity, in a formal context. Data anonymity expresses whether some piece of observed data, such as a vote, can be attributed to a user, in this case a voter. We validate the formal treatment of data anonymity by analyzing a well-known electronic voting protocol.", "num_citations": "33\n", "authors": ["1515"]}
{"title": "PINPAS: a tool for power analysis of smartcards\n", "abstract": " This paper describes the PINPAS tool, a tool for the simulation of power analysis and other side-channel attacks on smartcards. The PINPAS tool supports the testing of algorithms for vulnerability to SPA, DPA, etc. at the software level. Exploitation of the PINPAS tool allows for the identification of weaknesses in the implementation in an early stage of development. A toy algorithm is discussed to illustrate the usage of the tool.", "num_citations": "30\n", "authors": ["1515"]}
{"title": "Mixing up nondeterminism and probability: A preliminary report\n", "abstract": " For a process language with both nondeterministic and probabilistic choice, and a form of failure a transition system is given from which, in a modular way, various operational models corresponding to various interpretations of nondeterminism and probability can be obtained. The effect of failure of one component for the system as a whole is treated differently in each interpretation. The same approach is followed for an extension of the language with a parallel operator. The adopted concurrency model is of a distributed nature and assumes that progress is guaranteed if nonfailing components exist. To this end the notion of a take-over of a failing component is incorporated in the transition system. It is shown that the modular way in which the transition system can yield different semantical models applies to this setting as well.", "num_citations": "29\n", "authors": ["1515"]}
{"title": "Update semantics of security protocols\n", "abstract": " We present a model-theoretic approach for reasoning about security protocols, applying recent insights from dynamic epistemic logics. This enables us to describe exactly the subsequent epistemic states of the agents participating in the protocol, using Kripke models and transitions between these based on updates of the agents\u2019 beliefs associated with steps in the protocol. As a case study we will consider the SRA Three Pass protocol and discuss the Wide-Mouthed Frog protocol.", "num_citations": "28\n", "authors": ["1515"]}
{"title": "Comparative semantics for Prolog with cut\n", "abstract": " An abstract language B embodying the flow of control component of PROLOG including the cut operator is considered. Both a denotational and operational model for B are developed and related by studying approximations of an intermediate semantics based on terminating transition systems. Interpretation and refinement of the models of B lead to a Plotkin-style operational semantics and an equivalent denotational semantics for prolog with cut.", "num_citations": "26\n", "authors": ["1515"]}
{"title": "Axiomatizing GSOS with termination\n", "abstract": " We discuss a combination of GSOS-type structural operational semantics with explicit termination, that we call the tagh-format (tagh being short for termination and GSOS hybrid). The tagh-format distinguishes between transition and termination rules, but, besides active and negative premises as in GSOS, also allows for what we call terminating and passive arguments. We extend the result of Aceto, Bloom and Vaandrager on the automatic generation of sound and complete axiomatizations for GSOS to the setting of tagh-transition systems. The construction of the equational theory is based upon the notion of a smooth and distinctive operation, which have been generalized from GSOS to tagh. We prove the soundness of the synthesized laws and show their completeness modulo bisimulation. The examples provided indicate a significant, though yet not ideal, improvement over the axiomatization techniques known\u00a0\u2026", "num_citations": "24\n", "authors": ["1515"]}
{"title": "Verification of context-dependent channel-based service models\n", "abstract": " The paradigms of service-oriented computing and model-driven development are becoming of increasing importance in the field of software engineering. According to these paradigms, new systems are composed with added value from existing stand-alone services to support business processes across organizations. Services comprising a system but originating from various sources need to be coordinated. The Reo coordination language is a state-of-the-art tool supported approach to channel-based coordination. Reo introduces various types of channels which can be composed to build complex connectors to represent various behavioral protocols. This makes Reo suitable for the modeling of service-based business processes. In previous work we presented a framework for model checking data-aware Reo connectors using the mCRL2 toolset. In this paper, we extend this result with a proof of\u00a0\u2026", "num_citations": "23\n", "authors": ["1515"]}
{"title": "Operational semantics for coordination in Paradigm\n", "abstract": " Paradigm is the modeling language of SOCCA regarding communication, coordination and cooperation. A transition system or STD-based operational semantics for Paradigm is proposed and illustrated with basic producer-consumer examples. The proposed semantics for Paradigm, in contrast to other approaches, provides a sound basis for reasoningab out system dynamics and system comparison.", "num_citations": "22\n", "authors": ["1515"]}
{"title": "Bisimulation semantics for concurrency with atomicity and action refinement\n", "abstract": " A comparative semantic study is made of two notions in concurrency, viz. atomicity and action refinement. Parallel composition is modeled by interleaving, and refinement is taken in the version where actions are refined by atomized statements. The bisimulation domain used in the semantic definitions is obtained as solution of a system of domain equations over complete metric spaces. Both operational and denotational models are developed, and their equivalence is established using higher-order techniques and Banach\u2019s fixed point theorem. The operational semantics for refinement is based on transition rules rather than on some form of syntactic substitution.", "num_citations": "22\n", "authors": ["1515"]}
{"title": "Decoupled execution of synchronous coordination models via behavioural automata\n", "abstract": " Synchronous coordination systems allow the exchange of data by logically indivisible actions involving all coordinated entities. This paper introduces behavioural automata, a logically synchronous coordination model based on the Reo coordination language, which focuses on relevant aspects for the concurrent evolution of these systems. We show how our automata model encodes the Reo and Linda coordination models and how it introduces an explicit predicate that captures the concurrent evolution, distinguishing local from global actions, and lifting the need of most synchronous models to involve all entities at each coordination step, paving the way to more scalable implementations.", "num_citations": "21\n", "authors": ["1515"]}
{"title": "Performance evaluation of distributed systems based on a discrete real-and stochastic-time process algebra\n", "abstract": " We present a process-algebraic framework for performance evaluation of discrete-time discrete-event systems. The modeling of the system builds on a process algebra with conditionallydistributed discrete-time delays and generally-distributed stochastic delays. In the general case, the performance analysis is done with the toolset of the modeling language \u03c7 by means of discrete-event simulation. The process-algebraic setting allows for expansion laws for the parallel composition and the maximal progress operator, so one can directly manipulate the process terms and transform the specification in a required form. This approach is illustrated by specifying and solving the recursive specification of the G/G/1/\u221e queue, as well as by specifying a variant of the concurrent alternating bit protocol with generally-distributed unreliable channels. In a specific situation when all delays are assumed deterministic, we turn to\u00a0\u2026", "num_citations": "20\n", "authors": ["1515"]}
{"title": "Evolution on-the-fly with Paradigm\n", "abstract": " The coordination language Paradigm allows for a flexible and orthogonal modeling of interprocess relationships at the architectural level. It is shown how dynamic system adaptation can be captured in Paradigm by means of a special evolution component and associated evolution coordination scheme. The component, called McPal, drives the migration following a just-in-time strategy in its own view of the system, independent of other coordination relations. During migration, dynamic consistency between components remains assured, even for mixtures of old, intermediate and new behaviour. A restricted scheme of McPal that supports various forms of self-adaptation is presented. A simple but generic example of a scheduler and workers illustrates on-the-fly updating of coordination and run-time adaptation of scheduling policies using McPal.", "num_citations": "20\n", "authors": ["1515"]}
{"title": "A metric approach to control flow semantics\n", "abstract": " The authors' monograph \u201cControl Flow Semantics\u201d (MIT Press 1996) gives an extensive exposition of comparative programming language semantics using techniques from metric topology. In the book Banach's fixed\u2010point theorem for complete metric spaces plays a prominent role in the construction and comparison of semantical models. Here we present the basic idea of exploiting Banach's theorem. The approach is illustrated with the definition of an operational and a denotational model for an abstract programming language with parallelism. Note: The work reported here is not novel, but intended to provide an introduction of the metric approach to programming language semantics for a nonspecialist audience.", "num_citations": "19\n", "authors": ["1515"]}
{"title": "Comparison of the molecular topologies of stress-activated transcription factors HSF1, AP-1, NRF2, and NF-\u03baB in their induction kinetics of HMOX1\n", "abstract": " For cells, reacting aptly to changes in their environment is of critical importance. The protein Heme oxygenase-1 (HMOX1) plays a critical role as a guard of cellular homeostasis and is considered as a reliable indicator of cellular oxidative stress. A better insight in the regulation of HMOX1 would assist in understanding the physiological role of HMOX1 as well as improving functional interpretation of the gene as a biomarker in toxicogenomics. Remarkably, as many as four transcription factors are known to regulate the HMOX1 gene: HSF1, AP-1, NRF2, and NF-\u03baB. To investigate induction kinetics of these transcription factors, we constructed mathematical simulation models for each of them. We included the topology of the known interactions of molecules involved in the activation of the transcription factors, and the feedback loops resulting in their down-regulation. We evaluate how the molecular circuitries associated\u00a0\u2026", "num_citations": "18\n", "authors": ["1515"]}
{"title": "Coalgebraic weak bisimulation for action-type systems\n", "abstract": " We propose a coalgebraic definition of weak bisimulation for classes of coalgebras obtained from bifunctors in the category Set. Weak bisimilarity for a system is obtained as strong bisimilarity of a transformed system. The particular transformation consists of two steps: First, the behavior on actions is lifted to behavior on finite words. Second, the behavior on finite words is taken modulo the hiding of internal or invisible actions, yielding behavior on equivalence classes of words closed under silent steps. The coalgebraic definition is validated by two correspondence results: one for the classical notion of weak bisimulation of Milner, another for the notion of weak bisimulation for generative probabilistic transition systems as advocated by Baier and Hermanns.", "num_citations": "18\n", "authors": ["1515"]}
{"title": "Extending timed process algebra with discrete stochastic time\n", "abstract": " When extending timed process algebra with discrete stochastic time, typical standard notions like time additivity are hard to preserve in the presence of the race condition. We propose context-sensitive interpolation as a restricted form of time additivity to accommodate the extension with stochastic time. We also present a stochastic process algebra featuring an explicit account of two types of race conditions in terms of conditional random variables. The approach enables compositional modeling, a non-trivial expansion law, and explicit manipulation of maximal progress.", "num_citations": "18\n", "authors": ["1515"]}
{"title": "Delegation modeling with paradigm\n", "abstract": " Within one model, behavioural consistency of its constituents is often problematic. Within UML such horizontal behavioural consistency between the objects of a concrete model, is particularly needed in the context of dynamic patterns. Here, we investigate delegation, which is fundamental to patterns that separate the locality of receiving a request, and one or more localities actually handling it. We specify delegation by means of the coordination language Paradigm. In particular, we present some variants of delegation in the context of a broker pattern and clarify how the Paradigm notions are the basis for understanding a solution as well as for adapting it to deal with other dynamic features.", "num_citations": "18\n", "authors": ["1515"]}
{"title": "Virtual analysis and reduction of side-channel vulnerabilities of smartcards\n", "abstract": " This paper focuses on the usability of the PINPAS tool. The PINPAS tool is an instruction-level interpreter for smartcard assembler languages, augmented with facilities to study side-channel vulnerabilities. The tool can simulate side-channel leakage and has a suite of utilities to analyze this. The usage of the tool, for the analysis of a cryptographic algorithm is illustrated using the standard AES and RSA. Vulnerabilities of the implementations are identified and protective measures added. It is argued, that the tool can be instrumental for the design and realization of secure smartcard implementations in a systematic way.", "num_citations": "18\n", "authors": ["1515"]}
{"title": "Formal methods for security protocols: Three examples of the black-box approach\n", "abstract": " Security protocols are hard to design, even under the assumption of perfect cryptography. With the \u2018classical\u2019Needham-Schr\u00f6der protocol as leading example, three so-called black-box approaches to the formal verification of security protocols are sketched. BAN-logic is a light-weight method under the assumption of honest agents and a passive intruder. The Casper/FDR approach translates a high-level description of a security protocol, together with its security requirements and a particular instantiation into CSP, that can be machine-verified using the FDR model checker. In this approach the intruder is in control of the network and is allowed to participate as one of the agents. The same holds for the strand space approach. By focusing on the causal dependency of actions and message passing, one aims to prove security properties of general class of protocols instantiations at the same time.", "num_citations": "18\n", "authors": ["1515"]}
{"title": "Reconfiguring distributed Reo connectors\n", "abstract": " The coordination language Reo defines circuit-like connectors to steer the collaboration of independent components. In this paper, we present a framework for the modeling of distributed, self-reconfigurable connectors based on algebraic graph transformations. Reconfiguring a connector that is composed with others, may involve a change of shared interfaces and may therefore require a reconfiguration of the surrounding connectors as well. We present a method of synchronized local reconfigurations in this setting and discuss a bottom-up strategy for coordinating synchronized reconfigurations in a connector network. We exploit the double-pushout approach for the modeling of reconfigurations, and propose an adaptation of the concept of amalgamation for synchronizing reconfigurations. We use a nondeterministic scheduler as our running example.", "num_citations": "17\n", "authors": ["1515"]}
{"title": "Compositionality for Markov reward chains with fast and silent transitions\n", "abstract": " A parallel composition is defined for Markov reward chains with stochastic discontinuity, and with fast and silent transitions. In this setting, compositionality with respect to the relevant aggregation preorders is established. For Markov reward chains with fast transitions the preorders are \u03c4-lumping and \u03c4-reduction. Discontinuous Markov reward chains are \u2018limits\u2019 of Markov reward chains with fast transitions, and have related notions of lumping and reduction. Markov reward chains with silent transitions are equivalence classes of Markov reward chains with fast transitions and come equipped with the lifted preorders \u03c4\u223c-lumping and \u03c4\u223c-reduction. In total, six compositionality results are presented. Additionally, the parallel operators involved are related by a continuity result.", "num_citations": "16\n", "authors": ["1515"]}
{"title": "Weak bisimulation for action-type coalgebras\n", "abstract": " We propose a coalgebraic definition of weak bisimulation for a class of coalgebras obtained from bifunctors over the category Set. Weak bisimilarity for a system is obtained as strong bisimilarity of a transformed system. The transformation consists of two steps: First, the behaviour on actions is expanded to behaviour on finite words. Second, the behaviour on finite words is taken modulo the hiding of invisible actions, yielding behaviour on equivalence classes of words closed under silent steps. The coalgebraic definition is justified by two correspondence results, one for the classical notion of weak bisimulation of Milner and another for the notion of weak bisimulation for generative probabilistic transition systems as advocated by Baier and Hermanns.", "num_citations": "16\n", "authors": ["1515"]}
{"title": "Reconciling real and stochastic time: the need for probabilistic refinement\n", "abstract": " We conservatively extend an ACP-style discrete-time process theory with discrete stochastic delays. The semantics of the timed delays relies on time additivity and time determinism, which are properties that enable us to merge subsequent timed delays and to impose their synchronous expiration. Stochastic delays, however, interact with respect to a so-called race condition that determines the set of delays that expire first, which is guided by an (implicit) probabilistic choice. The race condition precludes the property of time additivity as the merger of stochastic delays alters this probabilistic behavior. To this end, we resolve the race condition using conditionally-distributed unit delays. We give a sound and ground-complete axiomatization of the process theory comprising the standard set of ACP-style operators. In this generalized setting, the alternative composition is no longer associative, so we have to\u00a0\u2026", "num_citations": "15\n", "authors": ["1515"]}
{"title": "Metric semantics and full abstractness for action refinement and probabilistic choice\n", "abstract": " This paper provides a case-study in the field of metric semantics for probabilistic programming. Both an operational and a denotational semantics are presented for an abstract process language Lpr, which features action refinement and probabilistic choice. The two models are constructed in the setting of complete ultrametric spaces, here based on probability measures of compact support over sequences of actions. It is shown that the standard toolkit for metric semantics works well in the probabilistic context of Lpr, eg in establishing the correctness of the denotational semantics with respect to the operational one. In addition, it is shown how the method of proving full abstraction\u2014as proposed recently by the authors for a nondeterministic language with action refinement\u2014can be adapted to deal with the probabilistic language Lpr as well.", "num_citations": "15\n", "authors": ["1515"]}
{"title": "Bisimulation of labelled state-to-function transition systems coalgebraically\n", "abstract": " Labeled state-to-function transition systems, FuTS for short, are characterized by transitions which relate states to functions of states over general semirings, equipped with a rich set of higher-order operators. As such, FuTS constitute a convenient modeling instrument to deal with process languages and their quantitative extensions in particular. In this paper, the notion of bisimulation induced by a FuTS is addressed from a coalgebraic point of view. A correspondence result is established stating that FuTS-bisimilarity coincides with behavioural equivalence of the associated functor. As generic examples, the equivalences underlying substantial fragments of major examples of quantitative process algebras are related to the bisimilarity of specific FuTS. The examples range from a stochastic process language, PEPA, to a language for Interactive Markov Chains, IML, a (discrete) timed process language, TPC, and a language for Markov Automata, MAL. The equivalences underlying these languages are related to the bisimilarity of their specific FuTS. By the correspondence result coalgebraic justification of the equivalences of these calculi is obtained. The specific selection of languages, besides covering a large variety of process interaction models and modelling choices involving quantities, allows us to show different classes of FuTS, namely so-called simple FuTS, combined FuTS, nested FuTS, and general FuTS.", "num_citations": "14\n", "authors": ["1515"]}
{"title": "Formalizing adaptation on-the-fly\n", "abstract": " Paradigm models specify coordination of collaborating components via constraint control. Component McPal allows for later addition of new constraints and new control in view of unforeseen adaptation. After addition McPal starts coordinating migration accordingly, adapting the system towards to-be collaboration. Once done, McPal removes obsolete control and constraints. All coordination remains ongoing while migrating on-the-fly, being deflected without any quiescence. Through translation into process algebra, supporting formal analysis is arranged carefully, showing that as-is and to-be processes are proper abstractions of the migrating process. A canonical critical section problem illustrates the approach.", "num_citations": "14\n", "authors": ["1515"]}
{"title": "Dynamic consistency in process algebra: From Paradigm to ACP\n", "abstract": " The coordination modelling language Paradigm addresses collaboration between components in terms of dynamic constraints. Within a Paradigm model, component dynamics are consistently specified at various levels of abstraction. The operational semantics of Paradigm is given. For a large, general subclass of Paradigm models a translation into process algebra is provided. Once expressed in process algebra, relying on a correctness result, Paradigm models are amenable to process algebraic reasoning and to verification via the mCRL2 toolset. Examples of a scheduling problem illustrate the approach.", "num_citations": "13\n", "authors": ["1515"]}
{"title": "Stochastic analysis of amino acid substitution in protein synthesis\n", "abstract": " We present a formal analysis of amino acid replacement during mRNA translation. Building on an abstract stochastic model of arrival of tRNAs and their processing at the ribosome, we compute probabilities of the insertion of amino acids into the nascent polypeptide chain. To this end, we integrate the probabilistic model checker Prism in the Matlab environment. We construct the substitution matrix containing the probabilities of an amino acid replacing another. The resulting matrix depends on various parameters, including availability and concentration of tRNA species, as well as their assignment to individual codons. We draw a parallel with the standard mutation matrices like Dayhoff and PET91, and analyze the mutual replacement of biologically similar amino acids.", "num_citations": "13\n", "authors": ["1515"]}
{"title": "Paradigm as organization-oriented coordination language\n", "abstract": " Global component behaviours as distinguished in Paradigm, offer the ingredients for specifying inter-component coordination in separation from and consistent with detailed component behaviour. The paper discusses how global behaviours provide great flexibility in arranging computation as well as coordination. In the context of a mediating example we plea for taking such flexibility as an organizational, organic, human-like characteristic; good to have, but usually absent in system specification. In addition, we point out how Paradigm's flexibility fits well in the historical perspective of discrete event simulation, modeling, object-orientation and patterns.", "num_citations": "13\n", "authors": ["1515"]}
{"title": "On relational properties of lumpability\n", "abstract": " The technique of lumping of Markov chains is one of the main tools for recovering from state explosion in the quantitative analysis of large probabilistic systems. Useful results regarding relational properties of general, ordinary and exact lumpability, in particular transitivity and strict confluence, are rather scattered or implicit in the literature. These are collected and reformulated here from a process-theoretic point of view. Additionally, counterexamples are provided that complete the picture.", "num_citations": "13\n", "authors": ["1515"]}
{"title": "CCS for OO and LP\n", "abstract": " We illustrate the design of comparative continuation semantics for object-oriented and logic programming languages by three case studies dealing with process creation, backtracking and rendez-vous. Operational and denotational semantics involving syntactic and semantic continuations are proposed, and their equivalence is shown. For the rendez-vous concept, we present a somewhat streamlined version of our earlier work on the semantics of the parallel object-oriented language POOL. Throughout, the metric framework is exploited, and (unique fixed points of) contracting functions are used pervasively.", "num_citations": "13\n", "authors": ["1515"]}
{"title": "Applications of compactness in the Smyth powerdomain of streams\n", "abstract": " We show in a uniform setting the crucial role of compactness in the theory of the Smyth powerdomain of streams. The topological notion of compactness is characterized in an order- theoretical manner, involving a notion of bounded sets. We obtain general results on the continuity of operators, and consider applications as diverse as interleaving, hiding and stream programming operators.", "num_citations": "13\n", "authors": ["1515"]}
{"title": "Bisimulation of labeled state-to-function transition systems of stochastic process languages\n", "abstract": " Labeled state-to-function transition systems, FuTS for short, admit multiple transition schemes from states to functions of finite support over general semirings. As such they constitute a convenient modeling instrument to deal with stochastic process languages. In this paper, the notion of bisimulation induced by a FuTS is proposed and a correspondence result is proven stating that FuTS-bisimulation coincides with the behavioral equivalence of the associated functor. As generic examples, the concrete existing equivalences for the core of the process algebras ACP, PEPA and IMC are related to the bisimulation of specific FuTS, providing via the correspondence result coalgebraic justification of the equivalences of these calculi.", "num_citations": "12\n", "authors": ["1515"]}
{"title": "An efficient algorithm to determine probabilistic bisimulation\n", "abstract": " We provide an algorithm to efficiently compute bisimulation for probabilistic labeled transition systems, featuring non-deterministic choice as well as discrete probabilistic choice. The algorithm is linear in the number of transitions and logarithmic in the number of states, distinguishing both action states and probabilistic states, and the transitions between them. The algorithm improves upon the proposed complexity bounds of the best algorithm addressing the same purpose so far by Baier, Engelen and Majster-Cederbaum (Journal of Computer and System Sciences 60: 187\u2013231, 2000). In addition, experimentally, on various benchmarks, our algorithm performs rather well; even on relatively small transition systems, a performance gain of a factor 10,000 can be achieved. View Full-Text", "num_citations": "11\n", "authors": ["1515"]}
{"title": "Stochastic modeling of Codon bias with PRISM\n", "abstract": " We present a biological case study of codon bias with the probabilistic model checker PRISM with which we perform a quantitative analysis of expression speeds of genes. The variability in this setting concerns the matching of codons and anticodons. We distinguish between iso-acceptance (one codon matches exactly one anticodon) and wobble matching (multiple codons are matched by one anticodon). Our modeling confirms a recent result by Lavner and Kotlar, stating that at low and high expression speeds high codon bias prevails, whereas at moderate expression speeds low codon bias is more advantageous. Although the approach needs further validation, our preliminary investigation shows that probabilistic model checking with PRISM is promising in obtaining further insight in codon bias.", "num_citations": "11\n", "authors": ["1515"]}
{"title": "Pomset semantics for true concurrency with synchronization and recursion\n", "abstract": " In this paper we present a denotational semantics based on pomsets for a simple language with true concurrency, synchronization and recursion. In particular, we show how we can generalize standard techniques for stream-based linear-time interleaving models to yield continuous functions associated with the syntactic operators on the domain of sets of pomsets.", "num_citations": "11\n", "authors": ["1515"]}
{"title": "A syntactic criterion for injectivity of authentication protocols\n", "abstract": " Injectivity is essential when studying the correctness of authentication protocols, because noninjective protocols may suffer from replay attacks. The standard ways of verifying injectivity either make use of a counting argument, which only seems to be applicable in a verification methodology based on model-checking, or draw conclusions on the basis of the details of the data-model used. We propose and study a property, the loop property, that can be syntactically verified and is sufficient to guarantee injectivity. Our result is generic in the sense that it holds for a wide range of security protocol models, and does not depend on the details of message contents or nonce freshness.", "num_citations": "10\n", "authors": ["1515"]}
{"title": "Building metric structures with the meas-functor\n", "abstract": " We introduce the functor Meas in the category of complete ultra metric spaces and nonexpansive mapping. The main result of this paper is that Meas is a wellde ned and locally nonexpansive endofunctor. Therefore the functor ts naturally in the metric approach to programming language semantics. The use of Meas in the construction of probabilistic powerdomains, either directly or through the use of domain equations, is illustrated with two examples.", "num_citations": "10\n", "authors": ["1515"]}
{"title": "Compositional and behavior-preserving reconfiguration of component connectors in Reo\n", "abstract": " It is generally accepted that building software out of loosely coupled components, such as in service-oriented systems or mobile networks, yields applications that are more robust against changes and failure of single components than monolithic systems. In order to accommodate for changes in the environment or in the requirements, and anticipate to a component failure, applications are often dynamically adapted by means of a reconfiguration. In this paper, we target the visual channel-based coordination language Reo and introduce a combined structural and behavioral model for graph-based component connectors in Reo. Exploiting concepts from category theory, we model reconfigurations of connectors as transformations of the underlying connector graphs. We show that our connector model has a compositional semantics and lift structural reconfigurations to the semantical level. As a concrete application of\u00a0\u2026", "num_citations": "9\n", "authors": ["1515"]}
{"title": "Embedding real time in stochastic process algebras\n", "abstract": " We present a stochastic process algebra including immediate actions, deadlock and termination, and explicit stochastic delays, in the setting of weak choice between immediate actions and passage of time. The operational semantics is a spent time semantics, avoiding explicit clocks. We discuss the embedding of weak-choice real-time process theories and analyze the behavior of parallel composition in the weak choice framework.", "num_citations": "9\n", "authors": ["1515"]}
{"title": "Rooted branching bisimulation as a congruence for probabilistic transition systems\n", "abstract": " We propose a probabilistic transition system specification format, referred to as probabilistic RBB safe, for which rooted branching bisimulation is a congruence. The congruence theorem is based on the approach of Fokkink for the qualitative case. For this to work, the theory of transition system specifications in the setting of labeled transition systems needs to be extended to deal with probability distributions, both syntactically and semantically. We provide a scheduler-free characterization of probabilistic branching bisimulation as adapted from work of Andova et al. for the alternating model. Counter examples are given to justify the various conditions required by the format.", "num_citations": "8\n", "authors": ["1515"]}
{"title": "Dynamic consistency in process algebra: From Paradigm to ACP\n", "abstract": " The coordination modelling language Paradigm addresses collaboration between components in terms of dynamic constraints. Within a Paradigm model, component dynamics are consistently specified at various levels of abstraction. To enable automated verification of Paradigm models, a translation of Paradigm into process algebra is provided. Examples are given and guidelines for a systematic translation into the process algebra ACP are discussed. Verification results building on the mCRL2 toolset are presented as well.", "num_citations": "8\n", "authors": ["1515"]}
{"title": "In Silico Modelling and Analysis of Ribosome Kinetics and aa-tRNA Competition\n", "abstract": " We present a formal analysis of ribosome kinetics using probabilistic model checking and the tool Prism. We compute different parameters of the model, like probabilities of translation errors and average insertion times per codon. The model predicts strong correlation to the quotient of the concentrations of the so-called cognate and near-cognate tRNAs, in accord with experimental findings and other studies. Using piecewise analysis of the model, we are able to give an analytical explanation of this observation.", "num_citations": "8\n", "authors": ["1515"]}
{"title": "Axiomatizing GSOS with termination\n", "abstract": " We discuss a combination of GSOS-type structural operational semantics with explicit termination, that we call the tagh-format (tagh being short for termination and GSOS hybrid).The tagh-format distinguishes between transition and termination rules, but allows besides active and negative premises as in GSOS, also for, what is called terminating and passive arguments. We extend the result of Aceto, Bloom and Vaandrager on the automatic generation of sound and complete axiomatizations for GSOSto the setting of tagh-transition system specifications.The construction of the equational theory is based upon the notion of a smooth and distinctive operation, which have been generalized from GSOS to tagh.The examples provided indicate a signifi- cant improvement over the mechanical axiomatization techniques known so far.", "num_citations": "8\n", "authors": ["1515"]}
{"title": "Problem solving using process algebra considered insightful\n", "abstract": " Process algebras with data, such as LOTOS, PSF, FDR, and mCRL2, are very suitable to model and analyse combinatorial problems. Contrary to more traditional mathematics, many of these problems can very directly be formulated in process algebra. Using a wide range of techniques, such as behavioural reductions, model checking, and visualisation, the problems can subsequently be easily solved. With the advent of probabilistic process algebras this also extends to problems where probabilities play a role. In this paper we model and analyse a number of very well-known \u2013 yet tricky \u2013 problems and show the elegance of behavioural analysis.", "num_citations": "7\n", "authors": ["1515"]}
{"title": "A definition scheme for quantitative bisimulation\n", "abstract": " FuTS, state-to-function transition systems are generalizations of labeled transition systems and of familiar notions of quantitative semantical models as continuous-time Markov chains, interactive Markov chains, and Markov automata. A general scheme for the definition of a notion of strong bisimulation associated with a FuTS is proposed. It is shown that this notion of bisimulation for a FuTS coincides with the coalgebraic notion of behavioral equivalence associated to the functor on Set given by the type of the FuTS. For a series of concrete quantitative semantical models the notion of bisimulation as reported in the literature is proven to coincide with the notion of quantitative bisimulation obtained from the scheme. The comparison includes models with orthogonal behaviour, like interactive Markov chains, and with multiple levels of behavior, like Markov automata. As a consequence of the general result relating FuTS bisimulation and behavioral equivalence we obtain, in a systematic way, a coalgebraic underpinning of all quantitative bisimulations discussed.", "num_citations": "7\n", "authors": ["1515"]}
{"title": "Dynamic adaptation with distributed control in Paradigm\n", "abstract": " Adaptation of a component-based system can be achieved in the coordination modeling language Paradigm through the special component McPal. McPal regulates the propagation of new behavior and guides the changes in the components and in their coordination. Here we show how McPal may delegate part of its control to local adaptation managers, created on-the-fly, allowing for distribution of the adaptation indeed. We illustrate the approach for the well-known example of the dining philosophers problem, by modeling migration from a deadlock-prone solution to a deadlock-free and starvation-free solution without any system quiescence. The system migration goes through various stages, exhibiting a shift of control among McPal and its helpers, and changing degrees of orchestrated and choreographic collaboration. The distributed system adaptation is formally verified using the mCRL2 model checker.", "num_citations": "7\n", "authors": ["1515"]}
{"title": "Architecting security with Paradigm\n", "abstract": " For large security systems a clear separation of concerns is achieved through architecting. Particularly the dynamic consistency between the architectural components should be addressed, in addition to individual component behaviour. In this paper, relevant dynamic consistency is specified through Paradigm, a coordination modeling language based on dynamic constraints. As it is argued, this fits well with security issues. A smaller example introduces the architectural approach towards implementing security policies. A larger casestudy illustrates the use of Paradigm in analyzing the FOO voting scheme. In addition, translating the Paradigm models into process algebra brings model checking within reach. Security properties of the examples discussed, are formally verified with the model checker mCRL2.", "num_citations": "7\n", "authors": ["1515"]}
{"title": "Dynamic system adaptation by constraint orchestration\n", "abstract": " For Paradigm models, evolution is just-in-time specified coordination conducted by a special reusable component McPal. Evolution can be treated consistently and on-the-fly through Paradigm's constraint orchestration, also for originally unforeseen evolution. UML-like diagrams visually supplement such migration, as is illustrated for the case of a critical section solution evolving into a pipeline architecture.", "num_citations": "7\n", "authors": ["1515"]}
{"title": "Distributed adaption of dining philosophers\n", "abstract": " Adaptation of a component-based system can be achieved in the coordination modelling language Paradigm through the special component McPal. McPal regulates the propagation of new behaviour and guides the changes in the components and in their coordination. Here we show how McPal may delegate part of its control to local adaptation managers, created on-the-fly, allowing for distribution of the adaptation indeed. We illustrate the approach for the well-known example of the dining philosophers problem, by modelling the migration from a deadlock-prone solution to a deadlock-free starvation-free solution without any system quiescence. The adaptation goes through various stages, exhibiting shifting control among McPal and its helpers, and changing degrees of orchestrated and choreographic collaboration.", "num_citations": "6\n", "authors": ["1515"]}
{"title": "An operation-based metric for CPA resistance\n", "abstract": " Differential power analysis (DPA) is a strong attack upon cryptographic devices such as smartcards. Correlation power analysis (CPA) is a specific form of DPA where the Hamming-weight and the correlation coefficient are employed. In this paper we investigate the intrinsic vulnerability of the individual operations that are targeted in DPA attacks. We find that under the typical circumstances, there is a difference in resistance to the attack between the operations. We then provide a precise definition of CPA resistance and capture it in a simple yet effective metric to rank operations. The metric is validated with both simulations and experiments on actual hardware.", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Compositionality for Markov reward chains with fast transitions\n", "abstract": " A parallel composition is defined for Markov reward chains with fast transitions and for discontinuous Markov reward chains. In this setting, compositionality with respect to the relevant aggregation preorders is established. For Markov reward chains with fast transitions the preorders are \u03c4-lumping and \u03c4-reduction. Discontinuous Markov reward chains are \u2018limits\u2019 of Markov reward chains with fast transitions, and have related notions of lumping and reduction. In total, four compositionality results are shown. In addition, the two parallel operators are related by a continuity property.", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Real-time process algebra with stochastic delays\n", "abstract": " A real-time process algebra is presented that features stochastic delays governed by general distributions. In a setting of weak choice, dependent and independent alternative and parallel composition are distinguished. This enables an expansion law for the parallel operator, as well as modular process definitions. The interplay of real-time, stochastic delays and immediate actions is illustrated by a modeling of the G/G/1/infin queue.", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Asynchronous rendez-vous in distributed logic programming\n", "abstract": " In this paper the semantics of the communication mechanism of the distributed logic programming language DLP is studied. DLP combines logic programming with object oriented features and parallelism. For an abstract subset of DLP both an operational and denotational semantics is given. The language DLP supports active objects, method call by rendez-vous and moreover (distributed) backtracking over the results of such a rendez-vous. To enable further exploitation of parallelism, the rendez-vous provided is asynchronous. A distinction is made between the creation of a process for evaluating the method call on the one hand, and the request for an answer on the other hand. To model this communication mechanism (syntactic) resumptions are employed. The notion of a resumption explains the backtracking taking place in the asynchronous rendez-vous. In addition, resumptions facilitate the systematic\u00a0\u2026", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Rendez-vous with metric semantics\n", "abstract": " A comparative semantic study is made of an element of the family of concurrent object-oriented programming languages. Particular attention is paid to two notions: (i) dynamically evolving process structures, including a mechanism to name and refer to processes and a means to create new processes, and (ii) rendez-vous between processes involving the sending and answering of messages and the induced execution of method calls The methodology of metric semantics is applied in the design of operational and denotational semantics, as well as in the proof of their equivalence. Both semantics employ domains which are determined as fixed points of a contracting functor in the category of complete metric spaces. Moreover, fruitful use is made of the technique of defining semantic meaning functions as fixed points of contracting higher-order mappings. Finally, syntactic and semantics continuations play a\u00a0\u2026", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Retractions in comparing Prolog semantics\n", "abstract": " We present an operational model O and a continuation based denotational model D for a uniform variant of Prolog, including the cut operator. The two semantical definitions make use of higher order transformations \u03a6 and \u03a8, respectively. We prove O and D equivalent in a novel way by comparing yet another pair of higher order transformations \u03a6 and \u03a8, that yield \u03a6 and \u03a8, respectively, by application of a suitable abstraction operator.", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Step semantics for \u201ctrue\u201d concurrency with recursion\n", "abstract": " We present a variety of denotational linear time semantics for a language with recursion and \u201ctrue\u201d concurrency in a form of synchronous co-operation, which in the literature is known as step semantics. We show that this can be done by a generalization of known results for interleaving semantics. A general method is presented to define semantical operators and denotational semantics in the Smyth powerdomain of streams. With this method, first a naive and then more sophisticated semantics for synchronous co-operation are developed, which include such features as interleaving and synchronization. Then we refine the semantics to deal with a bounded number of processors, subatomic actions, maximal parallelism and a real-time operator. Finally, it is indicated how to apply these ideas to branching-time models, where it becomes possible to analyze deadlock behaviour as well as a form of \u201ctrue\u00a0\u2026", "num_citations": "6\n", "authors": ["1515"]}
{"title": "Modelling and analysing software in mCRL2\n", "abstract": " Model checking is an effective way to design correct software. Making behavioural models of software, formulating correctness properties using modal formulas, and verifying these using finite state analysis techniques, is a very efficient way to obtain the required insight in the software. We illustrate this on four common but tricky examples.", "num_citations": "5\n", "authors": ["1515"]}
{"title": "A comparison of Java Cards: state-of-affairs 2006\n", "abstract": " This document presents the results of a comparative study of some popular Java Cards on the market. Eight different cards from four manufacturers have been con sidered. The analysis has been done at two levels-(i) a documentation-based com parison, also taking other publicly available resources into account,(ii) an actual hands-on testing with software developed specifically for this purpose by the PinpasJC research team. The investigations focus on basic functionality, secure chan nels, the transaction mechanism, support symmetric and asymmetric cryptography, Global Platform and Open Platform compliance, and garbage and memory manage ment.", "num_citations": "5\n", "authors": ["1515"]}
{"title": "Formal verification of an improved sliding window protocol\n", "abstract": " The well-known Sliding Window protocol caters for the reliable and efficient transmission of data over unreliable channels that can lose, reorder and duplicate messages. Despite the practical importance of the protocol and its high potential for errors, it has never been formally verified for the general setting. We try to fill this gap by giving a fully formal specification and verification of an improved version of the protocol. The protocol is specified by a timed state machine in the language of the verification system PVS. This allows a mechanical check of the proof by the interactive proof checker of PVS. Our modelling is very general and includes such important features of the protocol as sending and receiving windows of arbitrary size, bounded sequence numbers and the three types of channel faults mentioned above.", "num_citations": "5\n", "authors": ["1515"]}
{"title": "Rendez-vous with metric semantics\n", "abstract": " A comparative semantic study is made of an element of the family of concurrent object-oriented programming languages. Particular attention is paid to two notions: (i) dynamically evolving process structures, including a mechanism to name and refer to processes and a means to create new processes, and (ii) rendez-vous between processes involving the sending and answering of messages and the induced execution of method calls. The methodology of metric semantics is applied in the design of operational and denotational semantics, as well as in the proof of their equivalence. Both semantics employ domains which are determined as fixed points of a contracting functor in the category of complete metric spaces. Moreover, fruitful use is made of the technique of defining semantic meaning functions as fixed points of contracting higher-order mappings. Finally. syntactic and semantic continuations play a\u00a0\u2026", "num_citations": "5\n", "authors": ["1515"]}
{"title": "Logical characterization of bisimulation for transition relations over probability distributions with internal actions\n", "abstract": " In recent years the study of probabilistic transition systems has shifted to transition relations over distributions to allow for a smooth adaptation of the standard non-probabilistic apparatus. In this paper we study transition relations over probability distributions in a setting with internal actions. We provide new logics that characterize probabilistic strong, weak and branching bisimulation. Because these semantics may be considered too strong in the probabilistic context, Eisentraut et al. recently proposed weak distribution bisimulation. To show the flexibility of our approach based on the framework of van Glabbeek for the non-deterministic setting, we provide a novel logical characterization for the latter probabilistic equivalence as well.", "num_citations": "4\n", "authors": ["1515"]}
{"title": "Towards dynamic adaptation of probabilistic systems\n", "abstract": " Dynamic system adaptation is modeled in the coordination language Paradigm as coordination of collaborating components. A special component McPal allows for addition of new behavior, of new constraints and of new control in view of a new collaboration.McPal gradually adapts the system dynamics. It is shown that the approach also applies to the probabilistic setting. For a client-server example, where McPal adds, step-by-step, probabilistic behavior to deterministic components, precise modeling of changing system dynamics is achieved. This modeling of the transient behavior, spanning the complete migration range from as-is collaboration to to-be collaboration, serves as a stepping stone to quantitative analysis of the system during adaptation.", "num_citations": "4\n", "authors": ["1515"]}
{"title": "Action-based analysis of discrete regulatory networks with short-term stimuli\n", "abstract": " To incorporate instant effects and different timescales within a single biological system, an extension of discrete regulatory networks with short-term stimuli is proposed. By maintaining a vector of recent changes, activities initiated by a steep increase or decrease can be captured in a qualitative setting. In order to compensate for the blow-up due to enhanced states, we focus on observable behavior. Identification of bisimilar states yields a compact system representation truthfully expressing the information relevant for deciding logical properties. The approach is implemented by means of a front-end to the mCRL2 tool set and illustrated for the switching of bacteriophage lambda and a bio-medical case study related to TGF\u03b2 driven fibrotic conditions.", "num_citations": "4\n", "authors": ["1515"]}
{"title": "Performance analysis of \u03c7 models using discrete-time probabilistic reward graphs\n", "abstract": " We propose the model of discrete-time probabilistic reward graphs (DTPRGs) for performance analysis of systems exhibiting discrete deterministic time delays and probabilistic behavior, via their interpretation as discrete-time Markov reward chains, full-fledged platform for qualitative and quantitative analysis of timed systems based on the modeling language chi. The extension proposed in this paper is based on timed branching bisimulation reduction followed by a tailored inclusion of probabilities and rewards. The approach is applied in an industrial case study of a turntable drill. The resulting performance measures are shown to be comparable to those obtained by existent methods of the chi environment, viz. simulation and continuous-time Markovian analysis.", "num_citations": "4\n", "authors": ["1515"]}
{"title": "Fault attacks on java card\n", "abstract": " This thesis gives a wide overview of the problems of the Java Card technology regarding fault attacks. It uses fault attacks on RSA as an example, and shows how RSA can be broken in various ways. It then gives an overview of the different defense strategies against fault attacks, and how these are applicable against the various means of fault injection.", "num_citations": "4\n", "authors": ["1515"]}
{"title": "On a functor for probabilistic bisimulation and preservation of weak pullbacks\n", "abstract": " The preservation of weak pullbacks is studied for a functor M1 on the category UMS of ultrametric spaces and nonexpansive mappings. The functor M1 associates with an ultrametric space its collection of Borel probability measures with compact support. By application of the Max-ow Min-cut Theorem of graph theory a mediating morphism for a weak pullback diagram can be constructed in SET. It is shown that the functor M1 as functor from UMS to SET preserves weak pullbacks. A possible solution for the preservation of weak pullbacks by M1 as UMS-functor is indicated.", "num_citations": "4\n", "authors": ["1515"]}
{"title": "On Relating Denotational and Operational Semantics for Programming Languages with Recursion and Concurrency, chapter 24\n", "abstract": " CiteSeerX \u2014 On Relating Denotational and Operational Semantics for Programming Languages with Recursion and Concurrency, chapter 24 Documents Authors Tables Log in Sign up MetaCart DMCA Donate CiteSeerX logo Documents: Advanced Search Include Citations Authors: Advanced Search Include Citations Tables: DMCA On Relating Denotational and Operational Semantics for Programming Languages with Recursion and Concurrency, chapter 24 (1990) Cached Download as a PDF Download Links [www1.elsevier.com] Save to List Add to Collection Correct Errors Monitor Changes by J. -j. Ch. Meyer , EP De Vink , Faculteit Wiskunde En Informatica Citations: 2 - 0 self Summary Citations Active Bibliography Co-citation Clustered Documents Version History Share Facebook Twitter Reddit Bibsonomy OpenURL Abstract Keyphrases operational semantics relating denotational Powered by: Apache Solr \u2026", "num_citations": "4\n", "authors": ["1515"]}
{"title": "A formal actor-based model for streaming the future\n", "abstract": " Asynchronous Actor-based programming has gained increasing attention as a model of concurrency and distribution. The Abstract Behavioral Specification (ABS) language is an actor-based programming language that has been developed for both the modeling and formal analysis of distributed systems. In ABS, actors are modeled as concurrent objects that communicate by asynchronous method calls. Return values are also communicated asynchronously via return statements and so-called futures.Many modern distributed software applications require a form of continuous interaction between their components which consists of streaming data from a server to its clients. In this paper, we extend the ABS language in order to support the streaming of data. We introduce the notion of \u201cfuture-based data streams\u201d by augmenting the syntax, type system, and operational semantics of ABS. As a proof of concept, we\u00a0\u2026", "num_citations": "3\n", "authors": ["1515"]}
{"title": "Formal Methods for Dynamical Systems\n", "abstract": " \u00a9 Springer-Verlag Berlin Heidelberg 2013", "num_citations": "3\n", "authors": ["1515"]}
{"title": "Modeling and analysis of biological networks with model checking\n", "abstract": " During last decades, biological networks, like signal transduction pathways, metabolic pathways, and genetic networks, have received increasing attention in biochemistry. In each living organism, a growing plethora of such networks have been identified. It has become clear that the understanding of the mechanisms and their functioning is crucial for elucidating the functioning of the cell and the organism as a whole.Different formalisms and approaches exist for the modeling of biological networks. In this chapter we focus on model checking as a method that exploits executable models. Its main advantage is that they lend themselves to formal verification. Standard simulation on the model can only yield predictions regarding model properties with certain probability. The advantage of model checking over standard simulation is that it considers all possible behaviors of the systems, not just some subset of it and therefore yields conclusions with certainty. After intrducing the basic concepts in the next section, in Section 39.3, we show how standard model checking can be used to model and analyze biological systems. To this end we use as the modeling language Promela, the specification language of", "num_citations": "3\n", "authors": ["1515"]}
{"title": "System evolution by migration coordination\n", "abstract": " Collaborations between components can be modeled in the coordination language Paradigm [3]. A collaboration solution is specified by loosely coupling component dynamics to a protocol via their roles. Not only regular, foreseen collaboration can be specified, originally unforeseen collaboration can be modeled too [4]. To explain how, we first look very briefly at Paradigm\u2019s regular coordination specification.", "num_citations": "3\n", "authors": ["1515"]}
{"title": "Full abstractness of a metric semantics for action refinement\n", "abstract": " For a process language with action refinement and synchronization both an operational and a denotational semantics are given. The operational semantics is based on an SOS-style transition system specification involving syntactical refinement sequences. The denotational semantics is an interleaving model which uses semantical refinement \u2018environments'. It identifies those statements which are equal under all refinements. The denotational model is shown to be fully abstract with respect to the operational one. The underlying metric machinery is exploited to obtain this full abstractness result. Usually, action refinement is treated either in a model with some form of true concurrency, or, when an interleaving model is applied, by assuming that the refining statements are atomized. We argue that an interleaving model without such atomization is attractive as well.", "num_citations": "3\n", "authors": ["1515"]}
{"title": "Comparative Metric Semantics for Commit in OR-Parallel Logic Programming.\n", "abstract": " For the control ow kernel of or-parallel Prolog with commit an operational and a denotational model are constructed and related using techniques from metric semantics. By maintaining explicit scope information a compositional handling of the commit for the denotational model is established. By application of an abstraction function, which deletes this extra information, the operational semantics is recovered.", "num_citations": "3\n", "authors": ["1515"]}
{"title": "Towards spatial bisimilarity for closure models: Logical and coalgebraic characterisations\n", "abstract": " The topological interpretation of modal logics provides descriptive languages and proof systems for reasoning about points of topological spaces. Recent work has been devoted to model checking of spatial logics on discrete spatial structures, such as finite graphs and digital images, with applications in various case studies including medical image analysis. These recent developments required a generalisation step, from topological spaces to closure spaces. In this work we initiate the study of bisimilarity and minimisation algorithms that are consistent with the closure spaces semantics. For this purpose we employ coalgebraic models. We present a coalgebraic definition of bisimilarity for quasi-discrete models, which is adequate with respect to a spatial logic with reachability operators, complemented by a free and open-source minimisation tool for finite models. We also discuss the non-quasi-discrete case, by providing a generalisation of the well-known set-theoretical notion of topo-bisimilarity, and a categorical definition, in the same spirit as the coalgebraic rendition of neighbourhood frames, but employing the covariant power set functor, instead of the contravariant one. We prove its adequacy with respect to infinitary modal logic.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Deadlock detection for actor-based coroutines\n", "abstract": " The actor-based language studied in this paper features asynchronous method calls and supports coroutines which allow for the cooperative scheduling of the method invocations belonging to an actor. We model the local behavior of an actor as a well-structured transition system by means of predicate abstraction and derive the decidability of the occurrence of deadlocks caused by the coroutine mode of method execution.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Family-based model checking of SPL based on mCRL2\n", "abstract": " We discuss how the general-purpose model checker mCRL2 can be used for family-based verification of behavioral properties of software product lines. This is achieved by exploiting a feature-oriented extension of the modal \u03bc-calculus for the specification of SPL properties, and for its model checking by encoding it back into the logic of mCRL2. Using the example of the well-known minepump SPL an illustration of the possibilities of the approach is given.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Towards reduction of Paradigm coordination models\n", "abstract": " The coordination modelling language Paradigm addresses collaboration between components in terms of dynamic constraints. Within a Paradigm model, component dynamics are consistently specified at a detailed and a global level of abstraction. To enable automated verification of Paradigm models, a translation of Paradigm into process algebra has been defined in previous work. In this paper we investigate, guided by a client-server example, reduction of Paradigm models based on a notion of global inertness. Representation of Paradigm models as process algebraic specifications helps to establish a property-preserving equivalence relation between the original and the reduced Paradigm model. Experiments indicate that in this way larger Paradigm models can be analyzed.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Discrete real-time and stochastic-time process algebra for performance analysis of distributed systems\n", "abstract": " We present a process algebra with conditionally distributed discrete-time delays and generally-distributed stochastic delays. The treatment allows for expansion laws for the parallel composition and the maximal progress operator. The approach is illustrated by a specification of the concurrent alternating bit protocol with generally-distributed unreliable channels in the language chi. We compare performance analysis using timed probabilistic reward graphs and discrete-event simulation.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "A companion to coalgebraic weak bisimulation for action-type systems\n", "abstract": " We propose a coalgebraic definition of weak bisimulation for classes of coalgebras obtained from bifunctors in the category Set. Weak bisimilarity for a system is obtained as strong bisimilarity of a transformed system. The particular transformation consists of two steps: First, the behavior on actions is lifted to behavior on finite words. Second, the behavior on finite words is taken modulo the hiding of internal or invisible actions, yielding behavior on equivalence classes of words closed under silent steps. The coalgebraic definition is validated by two correspondence results: one for the classical notion of weak bisimulation of Milner, another for the notion of weak bisimulation for generative probabilistic transition systems as advocated by Baier and Hermanns.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Real-time in stochastic process algebra: Keeping track of winners and losers\n", "abstract": " A stochastic time process algebra that deals with generally distributed delays in the style of real-time process theories is presented. Two types of race condition are distinguished to enable a compositional modeling as well as a non-trivial expansion law. The interplay of real-time and stochastic time is analyzed for the standard bisimulation definitions and for the race condition. Finally, a new notion of context-sensitive interpolation is proposed that captures time-additivity as induced by the race condition.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Coordination in networked organizations: the Paradigm approach\n", "abstract": " An extension of the coordination specification language Paradigm is presented. In this set-up Paradigm models cater for multiple managers sharing the coordination of a set of common employees. A transition system semantics for the language is provided, that allows for reasoning about such constructions as delegation and selfmanagement in matrix and general network organizations. An elaborated example illustrates the expressiveness of the proposed version of Paradigm.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Taking chances on and fail: Extending strong and probabilistic bisimulation\n", "abstract": " For a process language, featuring nondeterministic and probabilistic choice, a parallel operator and a failure construct, a notion of bisimulation is proposed. As one can interpret recovery from failure with respect to nondeterministic and probabilistic choice in various ways, a single transition system gives rise to several operational models. A uniform way to abstract therst steps' underlies, for each of these models, the de nition of the proposed bisimulation. This bisimulation specializes to Park-Milner bisimulation for the non-probabilistic fragment of the language on the one hand, and to Larsen-Skou bisimulation for the deterministic/probabilistic part of the language, on the other hand. Furthermore, a conditional congruence result is obtained.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Metric predicate transformers: Towards a notion of refinement for concurrency\n", "abstract": " A compositional weakest precondition semantics is given for a parallel language with recursion using a new metric resumption domain. By extending the classical duality of predicate vs. state transformers, the weakest precondition semantics for the parallel language is shown to be isomorphic to the standard metric state transformer semantics. Moreover, a notion of refinement for predicate transformers is proposed which corresponds to the familiar notion of simulation for state transformers.", "num_citations": "2\n", "authors": ["1515"]}
{"title": "Bisimulation by Partitioning Is \u2126 ((m+ n) log n)\n", "abstract": " An asymptotic lowerbound of \u03a9 ((m+ n) log n) is established for partition refinement algorithms that decide bisimilarity on labeled transition systems. The lowerbound is obtained by subsequently analysing two families of deterministic transition systems-one with a growing action set and another with a fixed action set.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "A complete axiomatization of branching bisimilarity for a simple process language with probabilistic choice\n", "abstract": " This paper proposes a notion of branching bisimilarity for non-deterministic probabilistic processes. In order to characterize the corresponding notion of rooted branching probabilistic bisimilarity, an equational theory is proposed for a basic, recursion-free process language with non-deterministic as well as probabilistic choice. The proof of completeness of the axiomatization builds on the completeness of strong probabilistic bisimilarity on the one hand and on the notion of a concrete process, i.e. a process that does not display (partially) inert -moves, on the other hand. The approach is first presented for the non-deterministic fragment of the calculus and next generalized to incorporate probabilistic choice, too.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "An axiomatization of strong distribution bisimulation for a language with a parallel operator and probabilistic choice\n", "abstract": " In the setting of a simple process language featuring non-deterministic choice and a parallel operator on the one hand and probabilistic choice on the other hand, we propose an axiomatization capturing strong distribution bisimulation. Contrary to other process equivalences for probabilistic process languages, in this paper distributions rather than states are the leading ingredients for building the semantics and the accompanying equational theory, for which we establish soundness and completeness.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Splat 2014: First international workshop on software product line analysis tools\n", "abstract": " The SPLat 2014 workshop aims to provide a platform for the presentation and positioning of formal analysis tools as used in Software Product Line Engineering for the identification of commonalities and differences of these tools as well as for the inventorying of challenges for their application. SPLat 2014 focuses on the underlying concepts and overall approach, in particular how to mitigate combinatorial explosion.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "RNA-editing with combined insertion and deletion preserves regularity\n", "abstract": " We consider two elementary forms of string rewriting called guided insertion/deletion and guided rewriting. The original strings are modified depending on the match with a given set of auxiliary strings, called guides. Guided insertion/deletion considers matching of a string and a guide with respect to a specific correspondence of strings. Guided rewriting considers matching of a string and a guide with respect to an equivalence relation on the alphabet. Guided insertion/deletion is inspired by RNA-editing, a biological process by which the original genetic information stored in DNA is modified before its final expression. The formalism here allows for simultaneous insertion and deletion of string elements. Guided rewriting, based on a letter-to-letter relation, is technically more appealing than guided insertion/deletion. We prove that guided rewriting preserves regularity: for every regular language its closure under guided rewriting is regular too. In the proof we will rely on the auxiliary notion of a slice sequence. We establish a correspondence of slice sequences and guide rewrite sequences. Because of their left-to-right nature, slice sequences are more convenient to deal with than guided rewrite sequences in the construction of the finite automata that we encounter in the proofs of regularity. Based on the result for guided rewriting we establish that guided insertion/deletion preserves regularity as well.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Towards dynamic adaptation of the majority rule scheme\n", "abstract": " The majority rule scheme has been applied in the setting of robot swarms as a mechanism to reach consensus among a population of robots regarding the optimality of one out of two options. In the context of distributed decision making for agents, we consider two schemes of combining the majority rule scheme with dynamic adaptation for the well-known double bridge problem to cater for a situation where the shortest path changes over time. By modeling the systems as Markov chains, initial results regarding the quality and the trade-off of efficiency and adaptation time can be obtained.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Combining insertion and deletion in rna-editing preserves regularity\n", "abstract": " Inspired by RNA-editing as occurs in transcriptional processes in the living cell, we introduce an abstract notion of string adjustment, called guided rewriting. This formalism allows simultaneously inserting and deleting elements. We prove that guided rewriting preserves regularity: for every regular language its closure under guided rewriting is regular too. This contrasts an earlier abstraction of RNA-editing separating insertion and deletion for which it was proved that regularity is not preserved. The particular automaton construction here relies on an auxiliary notion of slice sequence which enables to sweep from left to right through a completed rewrite sequence.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Transactions on Computational Systems Biology XIV: Special Issue on Computational Models for Cell Processes\n", "abstract": " The LNCS journal Transactions on Computational Systems Biology is devoted to inter-and multidisciplinary research in the fields of computer science and life sciences and supports a paradigmatic shift in the techniques from computer and information science to cope with the new challenges arising from the systems oriented point of view of biological phenomena. This, the 14th Transactions on Computational Systems Biology volume, guest edited by Ion Petre and Erik de Vink, focuses on Computational Models for Cell Processes and features a number of carefully selected and enhanced contributions, initially presented at the CompMod workshop, which took place in Aachen, Germany, in September 2011. The papers, written from different points of view and following various approaches, cover a wide range of topics within the field of modeling and analysis of biological systems. In addition, two regular submissions deal with models of self-assembling systems and metabolic constraints on the evolution of genetic codes.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Transactions on Computational Systems Biology XI\n", "abstract": " Biology is witnessing a transformation towards a more quantitative science, based on the major technological breakthroughs of the past decade. In this transformation, biology is incorporating mathematical modeling techniques and computational approaches towards numerical simulations, model analysis, and quantitative predictions. An important goal is to formalize and analyze the everchanging inter-connections between components (often on different time and space scales), their influence on one another, regulatory patterns, alternative pathways, etc. Formal reasoning rather than empirical observations is the main driving force in this new type of biological research. At the same time, computer science and applied mathematics are faced with considerable methodological challenges in handling an unprecedented level of concurrency, stochastic effects, a mix of large and small populations, combinatorial\u00a0\u2026", "num_citations": "1\n", "authors": ["1515"]}
{"title": "On hierarchical reconfiguration of Reo connectors\n", "abstract": " To adapt a software system to new requirements or goals, reconfiguration can be used to restructure the architecture of the system, thereby changing its overall behaviour. In major contrast to conventional approaches that usually involve a complete redeployment, reconfigurations are performed in-place. Algebraic graph transformation [1] describes such structural changes of a system in a concise way and provide a powerful theoretical framework to study reconfigurations. The coordination paradigm distinguishes between components, which perform the actual computation, and connectors, which coordinate the components [2]. The coordination language Reo [3] uses channels and nodes to construct connectors compositionally. The inherent graph structure of Reo connectors makes graph transformation perfectly suited to model reconfiguration. Fig. 1 shows an example of a reconfiguration rule for a scheduler modeled with Reo. Levels of abstraction can be achieved in Reo via nesting and black-boxing. For example, in Fig. 1, the inner structure of the scheduler and counter are encapsulated, leaving their ports as their interfaces; the three tasks may be considered as atomic components.We consider to exploit the hierarchical structure of a system\u2019s layout to drive the graph transformation. Fig. 1 depicts a system with two active tasks that migrates to a three-task system once the counter reaches a certain value. A lowerlevel graph transformation adds ports to the scheduler component; a subsequent transformation of the system restores a consistent wiring of the update interface. Thus, driven by the hierarchy, a system reconfiguration decomposes\u00a0\u2026", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Multiparty contract signing over a reliable network\n", "abstract": " Most contract signing protocols make use of a trusted third party (TTP) to ensure fairness. It has been shown that in the crash network model, this is inevitable. However, for stronger networks, where misbehavior is allowed but failure excluded, the necessity of a TTP has not yet been debated. We consider a strong network model, that includes reliable broadcast, bounded delays and timestamps and use it to describe a simple multiparty contract signing protocol that does not rely on a TTP. This shows that by strengthening the assumptions on the network, the transfer of trust from one dedicated server to the network is feasible. The result is commented in a more general setting of multiparty protocols and problems. The correctness of the proposed protocol for any number of participants is proven using process algebra techniques.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Restructuring Paradigm models for the ToolBus architecture: a case study\n", "abstract": " In this paper we report on an implementation case study regarding the coordination description language Paradigm. We show how to restructure existing Paradigm models to facilitate their efficient implementation on a software coordination architecture like the ToolBus. The restructuring is in part achieved by transforming hierarchical manager-employee relations into symmetric mutual control and by exploiting structural component similarities. On top of this, we introduce the coordinator-weaver-performer pattern, which combines local separation of coordination and computation with a globally endogenous coordination strategy. The approach is illustrated for a generic servicing example.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Probabilistic automata based models\n", "abstract": " We survey various notions of probabilistic automata and probabilistic bisimulation, accumulating in an expressiveness hierarchy of probabilistic system types. The aim of this paper is twofold, on the one hand it provides an overview of existing types of probabilistic systems and important results known about them and, on the other hand, it clarifies the relationship between these models. Deviating from the standard presentation, we use a coalgebraic setting to uniformly define and compare the different system types. This approach automatically equips each kind with a notion of a bisimulation, which turns out to correspond to the concrete definition of a probabilistic bisimulation proposed in the literature in several cases, as we illustrate. The expressiveness order used to built the hierarchy is defined via the existence of mappings between the corresponding system types that preserve and reflect bisimilarity. We exploit\u00a0\u2026", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Taking chances on merge and fail: Extending strong and probabilistic bisimulation\n", "abstract": " For a process language, featuring nondeterministic and probabilistic choice, a parallel operator and a failure construct, a notion of bisimulation is proposed. As one can interpret recovery from failure with respect to nondeterministic and probabilistic choice in various ways, a single transition system gives rise to several operational models. A uniform way to abstract thefirst steps' underlies, for each of these models, the definition of the proposed bisimulation. This bisimulation specializes to Park-Milner bisimulation for the non-probabilistic fragment of the language on the one hand, and to Larsen-Skou bisimulation for the deterministic/probabilistic part of the language, on the other hand. Furthermore, a conditional congruence result is obtained.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Full abstractness of an interleaving semantics for action refinement\n", "abstract": " For an abstract programming language with action re nement both an operational and a denotational semantics are given. The operational semantics is based on an SOS-style transition system speci cation involving syntactical re nement sequences. The denotational semantics is an interleaving model which uses semantical re nementenvironments'. It identi es those statements which are equal under all re nements. The denotational model is shown to be fully abstract with respect to the operational one. The underlying metric machinery is exploited to obtain this full abstractness result. Usually, action re nement is treated either in a model with some form of true concurrency, or, when an interleaving model is applied, by assuming that the re ning statements are atomized. We argue that an interleaving model without such atomization is attractive as well.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Transition system specifications in stalk format with bisimulation as a congruence\n", "abstract": " A many-sorted variant, called stalk format, of the single sorted tyft-format for transition system specifications, introduced by Groote and Vaandrager, is proposed. The stalk format is shown to be a convenient formalism to express continuation-style transition systems for which the existing formats seem less adequate. Extending a similar result for the single sorted case, it holds that for an appropriate generalization of strong bisimilarity for the present many-sorted setting, bisimulation with respect to a transition system specification in stalk format, is a congruence. The present format is compared with several existing ones in the literature, viz. De Simone-, GSOS- and pure tyft-format.", "num_citations": "1\n", "authors": ["1515"]}
{"title": "Denotational semantics for unguarded recursion: the demonic case\n", "abstract": " We show that the technique to prove equivalence of operational and denotational cpo based semantics using retractions, as introduced in de Bruin & Vink [1989] for a sequential backtracking language, can be applied to parallel languages as well. We prove equivalence for a uniform language in which procedure calls need not be guarded. The unguardedness is taken care of by giving a semantics in which the nondeterminism is demonic.", "num_citations": "1\n", "authors": ["1515"]}