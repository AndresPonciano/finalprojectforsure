{"title": "Tool support for geographically dispersed inspection teams\n", "abstract": " Software inspection is one of software engineering's best practices for detecting and removing defects early in the development process. However, the prevalence of manual activities and face\u2010to\u2010face meetings within software inspections hinder their applicability in the context of global software development, where software engineering activities are spread across multiple sites and even multiple countries. In this article, we describe a web\u2010based tool, called the Internet\u2010Based Inspection System (IBIS), that aims to support geographically dispersed inspection teams. On the basis of findings from empirical studies of software inspections, the IBIS tool adopts a reengineered inspection process to minimize synchronous activities and coordination problems. We present the underlying process model, how the tool is used within the inspection stages, and experiences using the IBIS tool as the enabling infrastructure for\u00a0\u2026", "num_citations": "113\n", "authors": ["214"]}
{"title": "Function clone detection in web applications: a semiautomated approach\n", "abstract": " This paper describes how a semiautomated approach can be used to identify cloned functions within scripting code of web applications. The approach is based on the automatic selection of potential function clones and the visual inspection of selected script functions. The results obtained from the clone analysis of four web applications show that the semiautomated approach is both effective and efficient at identifying function clones in web applications, and can be applied to prevent clone from spreading or to remove redundant scripting code.", "num_citations": "78\n", "authors": ["214"]}
{"title": "Incorporating social software into distributed agile development environments\n", "abstract": " The use of social software applications, such as wikis and blogs, has emerged as a practical and economical option to consider as global teams may use them to organize, track, publish their work, and then, share knowledge. We intend to push further the application of social software principles and technologies into collaborative development environments for agile and distributed projects. As a first step, in this paper we first present a survey of social software, as well as tools and environments for collaborative development. Then, we present some opportunities and challenges of incorporating social software aspects in agile distributed development.", "num_citations": "42\n", "authors": ["214"]}
{"title": "Group awareness in global software engineering\n", "abstract": " Insufficient team collaboration often challenges global software engineering projects. Group awareness can improve teams' trust, relationships, and efficiency. This article surveys the key technologies and tools that support group awareness and collaboration. The insights on technologies derive from discussions and presentations at related conferences, including the IEEE-sponsored International Conference on Global Software Engineering (ICGSE).", "num_citations": "33\n", "authors": ["214"]}
{"title": "Augmenting social awareness in a collaborative development environment\n", "abstract": " Adequate tool support is paramount to enable distributed teamwork, and thus global software teams usually rely on a Collaborative Development Environment (CDE) to cope with geographical distance. The most recent and full-featured CDEs typically provide presence and workspace awareness in one place, but lack any support to social awareness for reducing the sociocultural distance. We argue that disseminating social awareness information within a CDE can both speed up the establishment of a cross-organizational shared context and help developers who have little or no chances to meet and, then, develop trust-based inter-personal connections. For this reason, we propose to extend a commercial CDE in order to provide members of global software teams with information collected from corporate microblogging and professional social networks.", "num_citations": "27\n", "authors": ["214"]}
{"title": "Can real-time machine translation overcome language barriers in distributed requirements engineering?\n", "abstract": " In global software projects work takes place over long distances, meaning that communication will often involve distant cultures with different languages and communication styles that, in turn, exacerbate communication problems. However, being aware of cultural distance is not sufficient to overcome many of the barriers that language differences bring in the way of global project success. In this paper, we investigate the adoption of machine translation (MT) services in synchronous text-based chat in order to overcome any language barrier existing among groups of stakeholders who are remotely negotiating software requirements. We report our findings from a simulated study that compares the efficiency and the effectiveness of two MT services, Google Translate and apertium-service, in translating the messages exchanged during four distributed requirements engineering workshops. The results show that (a\u00a0\u2026", "num_citations": "27\n", "authors": ["214"]}