{"title": "Integrating legacy software into a service oriented architecture\n", "abstract": " Legacy programs, i. e. programs which have been developed with an outdated technology make-up for the vast majority of programs in many user application environments. It is these programs which actually run the information systems of the business world. Moving to a new technology such as service oriented architecture is impossible without taking these programs along. This contribution presents a tool supported method for achieving that goal. Legacy code is wrapped behind an XML shell which allows individual functions within the programs, to be offered as Web services to any external user. By means of this wrapping technology, a significant part of the company software assets can be preserved within the framework of a service oriented architecture", "num_citations": "261\n", "authors": ["653"]}
{"title": "The role of cloudlets in hostile environments\n", "abstract": " The convergence of mobile computing and cloud computing is predicated on a reliable, high-bandwidth end-to-end network. This basic requirement is hard to guarantee in hostile environments such as military operations and disaster recovery. In this article, the authors examine how VM-based cloudlets that are located in close proximity to associated mobile devices can overcome this challenge. This article is part of a special issue on the edge of the cloud.", "num_citations": "229\n", "authors": ["653"]}
{"title": "Service-oriented migration and reuse technique (smart)\n", "abstract": " This report describes the service-oriented migration and reuse technique (SMART). SMART is a technique that helps organizations analyze legacy systems to determine whether their functionality, or subsets of it, can be reasonably exposed as services in a service-oriented architecture (SOA), and thus to achieve greater interoperability. Converting legacy components to services allows systems to remain largely unchanged while exposing functionality to a large number of clients through well-defined service interfaces. A number of organizations are adopting this approach by defining SOAs that include a set of infrastructure common services on which organizations can build additional domain services or applications. SMART considers the specific interactions that will be required by the target SOA and any changes that must be made to the legacy components. An early version of SMART was applied with good\u00a0\u2026", "num_citations": "208\n", "authors": ["653"]}
{"title": "The impact of mobile multimedia applications on data center consolidation\n", "abstract": " The convergence of mobile computing and cloud computing enables new multimedia applications that are both resource-intensive and interaction-intensive. For these applications, end-to-end network bandwidth and latency matter greatly when cloud resources are used to augment the computational power and battery life of a mobile device. We first present quantitative evidence that this crucial design consideration to meet interactive performance criteria limits data center consolidation. We then describe an architectural solution that is a seamless extension of today's cloud computing infrastructure.", "num_citations": "168\n", "authors": ["653"]}
{"title": "Role of standards in cloud-computing interoperability\n", "abstract": " In cloud computing, interoperability typically refers to the ability to easily move workloads and data from one cloud provider to another or between private and public clouds. A common tactic for enabling interoperability is the use of open standards, so there is currently a large amount of active work in standards development for the Cloud. This paper explores the role of standards in cloud-computing interoperability. It covers standard-related efforts, discusses several cloud interoperability use cases, and provides some recommendations for moving forward with cloud-computing adoption regardless of the maturity of standards for the cloud.", "num_citations": "155\n", "authors": ["653"]}
{"title": "Service level agreements in service-oriented architecture environments\n", "abstract": " Quality attribute requirements play an important role in service selection in a service-oriented architecture environment. It is easy to envision finding several services that fulfill the functional requirements but fail to meet important quality attribute measures. Service level agreements provide the architect with a specification of the verifiable quality characteristics that the service will provide. Such a specification allows the architect to select the service that best supports the systems quality attribute requirements. This report surveys the state of practice in service level agreement specification and offers guidelines on how to assure that services are provided with high availability, security, performance, and other required qualities. In addition, this report discusses the quality properties that have been expressed in service level agreements, and it considers the mechanisms used to assure service quality by contract and those used by service providers to achieve and monitor quality properties. Also, this report examines the support for expressing service quality requirements in existing service technologies and describes areas where more research is needed.Descriptors:", "num_citations": "129\n", "authors": ["653"]}
{"title": "Basics about cloud computing\n", "abstract": " What is cloud computing and how can an organization decide whether to adopt it? Cloud computing is a distributed computing paradigm that focuses on providing a wide range of users with distributed access to scalable, virtualized hardware and/or software infrastructure over the internet. Despite this rather technical definition, cloud computing is in essence an economic model for a different way to acquire and manage IT resources. An organization needs to weigh the cost, benefits, and risks of cloud computing in determining whether to adopt it as an IT strategy. This paper seeks to help organizations understand cloud computing essentials, including drivers for and barriers to adoption, in support of making decisions about adopting the approach.Cloud computing is a paradigm for large-scale distributed computing that makes use of existing technologies such as virtualization, service-orientation, and grid computing. It offers a different way to acquire and manage IT resources on a large scale. A simple example of cloud computing is webmail. The webmail provider maintains the server space and provides access; the webmail user just plugs a web address into a browser and submits user information to access an account.", "num_citations": "116\n", "authors": ["653"]}
{"title": "Tactical cloudlets: Moving cloud computing to the edge\n", "abstract": " Soldiers and front-line personnel operating in tactical environments increasingly make use of handheld devices to help with tasks such as face recognition, language translation, decision-making, and mission planning. These resource constrained edge environments are characterized by dynamic context, limited computing resources, high levels of stress, and intermittent network connectivity. Cyber-foraging is the leverage of external resource-rich surrogates to augment the capabilities of resource-limited devices. In cloudlet-based cyber-foraging, resource-intensive computation and data is offloaded to cloudlets. Forward-deployed, discoverable, virtual-machine-based tactical cloudlets can be hosted on vehicles or other platforms to provide infrastructure to offload computation, provide forward data staging for a mission, perform data filtering to remove unnecessary data from streams intended for dismounted users\u00a0\u2026", "num_citations": "115\n", "authors": ["653"]}
{"title": "Common misconceptions about service-oriented architecture\n", "abstract": " You don't have to look far to become aware of the effect that service-oriented architecture (SOA) is having on software systems. Vendors are aggressively marketing hardware, software, tools, and services that support SOA implementation within organizations as diverse as the Department of Defense, banks, federal agencies, manufacturing companies, and health care providers. Even more significantly, customers are embracing SOA as a way to successfully achieve business agility and interoperability among systems. However, our experience from working with current and potential adopters of SOA is that they often have a variety of misconceptions that lead them to oversimplify the effort required to implement SOA. Chief among these misconceptions is the belief that simply by adopting an SOA strategy for the enterprise, an organization has established a well-crafted architecture that will help the organization\u00a0\u2026", "num_citations": "99\n", "authors": ["653"]}
{"title": "Analyzing the reuse potential of migrating legacy components to a service-oriented architecture\n", "abstract": " An effective way of leveraging the value of legacy systems is to expose their functionality, or subsets of it, as services. In the business world, this has become a very popular approach because it allows underlying systems to remain largely unchanged, while exposing functionality to a larger number of clients through well-defined service interfaces. The U.S. Department of Defense (DoD) is also adopting this approach by defining service-oriented architectures (SOAs) that include a set of infrastructure common services on which organizations can build additional domain services or applications. When legacy systems or components are to be used as the foundation for domain services, there must be an analysis of how to convert the functionality in existing systems into services. This analysis should consider the specific interactions that is required by the SOA and any changes that need to be made to the legacy\u00a0\u2026", "num_citations": "99\n", "authors": ["653"]}
{"title": "Why standards are not enough to guarantee end-to-end interoperability\n", "abstract": " Standards have been instrumental in achieving the significant level of systems interoperability we rely on in almost every domain. Many organizations are betting on the ability of standards to provide unprecedented end-to-end systems interoperability with partner organizations. Our experience suggests that the expectation of what can be achieved with standards is too high. For example, many large health care providers assume that moving to a new version of a major health care standard (HL7 3.0 and the associated reference information models) will guarantee \"seamless\" interoperability across all health care systems inside the enterprise. However, this new standard does not take into account clinical workflows and operational contexts that differ across point-of care systems and have a large effect on how accurately clinicians interpret data. This paper offers a caution, not that standards are not useful but that\u00a0\u2026", "num_citations": "97\n", "authors": ["653"]}
{"title": "A reference architecture for mobile code offload in hostile environments\n", "abstract": " Handheld mobile technology is reaching first responders and soldiers in the field to aid in various tasks such as speech and image recognition, natural language processing, decision making, and mission planning. However, these applications are computation-intensive and we must consider that 1) mobile devices offer less computational power than a conventional desktop or server computer, 2) computation-intensive tasks take a heavy toll on battery power, and 3) networks in hostile environments such as those experienced by first responders and soldiers in the field are often unreliable and bandwidth is limited and inconsistent. While there has been considerable research in code offload to the cloud to enhance computation and battery life, most of this work assumes reliable connectivity between the mobile device and the cloud\u2014an invalid assumption in hostile environments. This paper presents a\u00a0\u2026", "num_citations": "79\n", "authors": ["653"]}
{"title": "A framework for roles for development, evolution and maintenance of SOA-based systems\n", "abstract": " Development, evolution and maintenance of SOA-based systems demands rethinking of the traditional roles for performing these activities. The key objective of this paper is to present preliminary ideas on the roles required for developing, evolving and maintaining SOA-based systems and to suggest a framework for areas of needed research.", "num_citations": "71\n", "authors": ["653"]}
{"title": "Service-oriented architecture and its implications for software maintenance and evolution\n", "abstract": " It is clear that service-oriented architecture (SOA) is having a substantial impact on the way software systems are developed. According to a 2007 Gartner Group report, 50% of new mission-critical operational applications and business processes were designed in 2007 around SOA, and that number will be more than 80% by 2010. This means that as service-oriented systems are deployed and legacy systems are migrated to this environment, a main concern is now their maintenance and evolution. This paper provides an overview of SOA concepts, best practices for implementation of service-oriented systems, the implications that SOA environments have on software maintenance and evolution activities, and finally some research challenges for the software maintenance and evolution research community.", "num_citations": "64\n", "authors": ["653"]}
{"title": "Situated software: Concepts, motivation, technology, and the future\n", "abstract": " Situated software, a type of opportunistic software, is created by a small subset of users to fulfill a specific purpose. For example, business users have been creating situated software through mashups, which combine data from multiple sources on internal systems or the Internet. Situated software can change the way users access, perceive, and consume information, and can allow users to finally focus on what to do with information, rather than where to find it or how to get to it. However, situated software also has limitations. This article identifies situated software's role, provides examples of its use, traces the Internet's role in its rapid evolution, outlines areas where it is appropriate, describes its limitations, and presents enablers for adopting situated software in an enterprise.", "num_citations": "60\n", "authors": ["653"]}
{"title": "Interoperability in the e-Government Context\n", "abstract": " Achieving interoperability in an e-government context is difficult. Although the benefits of enabling e-government systems to interoperate are significant, repeated failures to build working systems provide evidence that the tasks necessary to gain those benefits are poorly understood. Many governments have addressed interoperability as primarily a technical issue. However, to address the entirety of the interoperability challenge, development teams must also consider nontechnical factors that influence their efforts to meet interoperability goals. This report describes a proposed model through which to understand interoperability in the e-government context. With this model, system developers should characterize interoperability in six dimensions Developers need to analyze e-government interoperability requirements at the technical, semantic, and organizational levels, but they should also consider the legal, political, and sociocultural issues with which the e-government system must also interoperate. This report explains some of the challenges associated with achieving interoperability in e-government systems and presents some guidance on how to address interoperability requirements, with the goal of making both policy makers and system developers aware of the depth and breadth of these challenges.Descriptors:", "num_citations": "58\n", "authors": ["653"]}
{"title": "Requirements engineering for systems of systems\n", "abstract": " Traditional requirements engineering for single systems, while remaining a large challenge for engineers, has been extensively researched and many techniques have been proposed and used with varying degree of success. However, many modern systems of systems are being developed to support interaction across multiple controlling authorities and existing techniques are proving to be inadequate for meeting the challenges of requirements engineering for systems of systems. This paper discusses some of these challenges, examines several existing techniques, and discusses how these techniques could be applied to engineer requirements for systems of systems.", "num_citations": "58\n", "authors": ["653"]}
{"title": "Smart: Analyzing the reuse potential of legacy components in a service-oriented architecture environment\n", "abstract": " Service-oriented architecture (SOA) has become an increasingly popular mechanism for achieving interoperability between systems. Because it has characteristics of loose coupling, published interfaces, and a standard communication model, SOA enables existing legacy systems to expose their functionality as services, presumably without making significant changes to the legacy systems. Migration of legacy assets to services has been achieved within a number of domains, including banking, electronic payment, and development tools, showing that the promise is beginning to be fulfilled. While migration can have significant value, any specific migration requires a concrete analysis of the feasibility, risk and cost involved. The Service Migration and Reuse Technique (SMART) is a technique to help organizations make initial decisions about the feasibility of reusing legacy components as services within a SOA\u00a0\u2026", "num_citations": "52\n", "authors": ["653"]}
{"title": "Supporting migration to services using software architecture reconstruction\n", "abstract": " There are many good reasons why organizations should perform software architecture reconstructions. However, few organizations are willing to pay for the effort. Software architecture reconstruction must be viewed not as an effort on its own but as a contribution in a broader technical context, such as the streamlining of products into a product line or the modernization of systems that hit their architectural borders, that is require major restructuring. In this paper we propose the use of architecture reconstruction to support system modernization through the identification and reuse of legacy components as services in a service-oriented architecture (SOA). A case study showing how architecture reconstruction was used on a system to support an organization's decision-making process is presented", "num_citations": "52\n", "authors": ["653"]}
{"title": "Cloudlet-based cyber-foraging for mobile systems in resource-constrained edge environments\n", "abstract": " First responders and others operating in crisis environments increasingly make use of handheld devices to help with tasks such as face recognition, language translation, decision-making and mission planning. These resource-constrained edge environments are characterized by dynamic context, limited computing resources, high levels of stress, and intermittent network connectivity. Cyber-foraging is the leverage of external resource-rich surrogates to augment the capabilities of resource-limited devices. In cloudlet-based cyber-foraging, resource-intensive computation is offloaded to cloudlets\u2013discoverable, generic servers located in single-hop proximity of mobile devices. This paper presents several strategies for cloudlet-based cyber-foraging and encourages research in this area to consider a tradeoff space beyond energy, performance and fidelity of results.", "num_citations": "44\n", "authors": ["653"]}
{"title": "Service orientation and systems of systems\n", "abstract": " Interconnected systems of systems provide capabilities that aren't available in any single system. Fundamental service-oriented principles can help in engineering them, regardless of the implementation technologies used.", "num_citations": "44\n", "authors": ["653"]}
{"title": "Current perspectives on interoperability\n", "abstract": " This report describes current research within the software engineering community on the topic of interoperability between software systems. That research includes analyses of the different types of interoperability problems and issues and efforts to define models of interoperability that will aid in creating solutions to those problems. The report also describes work that is currently underway at the Software Engineering Institute SEI in this area. That work originated in an independent research effort and now has grown into a separate technical initiative in the area of interoperability. The SEI initiative is currently focused on analyzing several aspects of interoperability how it is manifest in different kinds of activities ie, programmatic vs. constructive vs. operational activities, the essential characteristics of interoperability, and the key principles on which solutions will depend.Descriptors:", "num_citations": "43\n", "authors": ["653"]}
{"title": "Assumptions management in software development\n", "abstract": " Software developers constantly make assumptions about the interpretation of requirements, design decisions, operational domain, environment, characteristics of input data, and other factors during system implementation. These assumptions are seldom documented and less frequently validated by the people who have the knowledge to verify their appropriateness. Additionally, the business, legal, and operating environments are always changing, as well as the software itself, rendering previously valid assumptions invalid. This technical note explores assumptions management as a method for improving software quality. This exploration covers assumptions management concepts, results of work on a prototype Assumptions Management System, conclusions, lessons learned, and potential work in this area.Descriptors:", "num_citations": "40\n", "authors": ["653"]}
{"title": "Approaches to constructive interoperability\n", "abstract": " Interoperability between systems requires the capability for users to exchange information syntactic interoperability and a common understanding of its meaning or how to act upon it semantic interoperability. This report will discuss several current approaches to constructing systems of systems that have interoperability requirements, with respect to syntactic and semantic interoperability. The areas examined include Model-Driven Architecture, Service-Oriented Architecture, Web services, Open Grid Services Architecture, and Component Frameworks. These initial discussions assume that the interoperating systems agree on a common approach. Reaching an agreement can be challenging, especially when legacy systems are involved. Technical techniques and recommendations for reaching an agreement between systems that use differing technologies are also briefly explored.Descriptors:", "num_citations": "38\n", "authors": ["653"]}
{"title": "Engineering systems of systems\n", "abstract": " Over the past decade, the focus of much effort in systems development has evolved from the development of individual self- contained systems to the integration of large-scale systems of systems (SoS) that are constantly evolving to address new user needs. Because these types of systems of systems no longer have a single controlling authority, have components that are developed and evolve independently, and as a result cannot be specified by a top-down set of requirements, the methods for engineering them need to be modified from the methods for engineering traditional systems. This paper identifies the characteristics of SoS, proposes a SoS life cycle, and identifies some considerations for requirements engineering in an SoS environment.", "num_citations": "35\n", "authors": ["653"]}
{"title": "Architecting service-oriented systems\n", "abstract": " Service orientation is an approach to software systems development that has become a popular way to implement distributed, loosely coupled systems, because it offers such features as standardization, platform independence, well-defined interfaces, and tool support that enables legacy system integration. From a quality attribute point of view, the primary drivers for service orientation adoption are interoperability and modifiability. However, a common misconception is that an architecture that uses a service-oriented approach can achieve these qualities by simply putting together a set of vendor products that provide an infrastructure and then using this infrastructure to expose a set of reusable services to build systems. In reality, there are many architectural decisions that need to be made. An architectural decision that promotes interoperability or modifiability can negatively impact other qualities, such as availability, reliability, security and performance. The goal of this report is to present general guidelines for architecting service-oriented systems, how common service-oriented system components support these principles, and the effect that these principles and their implementation have on system quality attributes.Descriptors:", "num_citations": "27\n", "authors": ["653"]}
{"title": "Identity management and its impact on federation in a system-of-systems context\n", "abstract": " In its simplest form, identity management deals with how users are identified and authorized across networks. In the case of federated identity management, these networks cross system and organizational boundaries. To manage identity in this context, a cooperative contract is set up between multiple identity providers, using a decentralized approach. Establishing an identity management strategy within a single entity is straightforward. However, implementing identity management in a system of systems context presents unique challenges. This paper explains identity management in a federated context, presents the challenges of federated identity management, and provides some guidelines for successful federated identity management.", "num_citations": "27\n", "authors": ["653"]}
{"title": "T-check in system-of-systems technologies: Cloud computing\n", "abstract": " This technical note presents the results of applying the T-Check method in an initial investigation of cloud computing. In this report, three hypotheses are examined 1 an organization can use its existing infrastructure simultaneously with cloud resources with relative ease 2 cloud computing environments provide ways to continuously update the amount of resources allocated to an organization and 3 it is possible to move an applications resources between cloud computing providers, with varying levels of effort required. From the T-Check investigation, the first hypothesis is partially sustained and the last two hypotheses are fully sustained within the context specified for the investigation. From an engineering perspective, cloud computing is a distributed computing paradigm that focuses on providing a wide range of users with distributed access to virtualized hardware andor software infrastructure over the internet. From a business perspective, it is the availability of computing resources that are scalable and billed on a usage basis. While scalability is the primary tenet of cloud computing, a host of other advantages are advertised as being inherently obtained through cloud computing.Descriptors:", "num_citations": "23\n", "authors": ["653"]}
{"title": "Evolution and maintenance of soa-based systems at sas\n", "abstract": " As SOA-based systems are becoming more common, there is a need to consider how traditional IT roles and responsibilities need to change. This paper proposes a framework for roles that are required for evolving and maintaining SOA-based systems. It builds on work on traditional IT roles, as well as insights emerging from current research on SOA. The paper also presents a questionnaire for collecting data from organizations on roles that they use for SOA-based systems maintenance and evolution. Results from a pilot use of the questionnaire with Scandinavian Airline Systems (SAS) are presented.", "num_citations": "23\n", "authors": ["653"]}
{"title": "Challenges for assuring quality of service in a service-oriented environment\n", "abstract": " Service-oriented architecture (SOA) has become an increasingly popular mechanism for achieving business agility and reuse. However, organizations implementing SOA-based solutions are facing new implementation challenges related to validation and verification activities in an SOA environment, especially of runtime system quality attributes such as interoperability, security, reliability, and performance. This position paper presents some of these challenges.", "num_citations": "21\n", "authors": ["653"]}
{"title": "Establishing trusted identities in disconnected edge environments\n", "abstract": " When establishing communication between two nodes, identification, authentication, and authorization provide the information and assurances necessary for the nodes to trust each other. A common solution for establishing trust between two nodes is to create and share credentials in advance, and then use a third-party, online trusted authority to validate the credentials of the nodes. However, the characteristics of tactical environments - such as those in which first responders, search and rescue teams, and military personnel operate - do not consistently provide access to that third-party authority or certificate repository because they are DIL environments (disconnected, intermittent, limited). The goal of this paper is to present a solution for establishing trusted identities in disconnected environments based on secure key generation and exchange in the field. For the implementation and evaluation of the solution we\u00a0\u2026", "num_citations": "20\n", "authors": ["653"]}
{"title": "Migrating Legacy Applications: Challenges in Service Oriented Architecture and Cloud Computing Environments: Challenges in Service Oriented Architecture and Cloud Computing\u00a0\u2026\n", "abstract": " As the future of software development in a global environment continues to be influenced by the areas of service oriented architecture (SOA) and cloud computing, many legacy applications will need to migrate these environments to take advantage of the benefits offered by the service environment. Migrating Legacy Applications: Challenges in Service Oriented Architecture and Cloud Computing Environments presents a closer look at the partnership between service oriented architecture and cloud computing environments while analyzing potential solutions to challenges related to the migration of legacy applications. This reference is essential for students and university scholars alike.", "num_citations": "20\n", "authors": ["653"]}
{"title": "A process for context-based technology evaluation\n", "abstract": " To determine a fit between systems and technology, it is necessary to evaluate technologies within the contexts that they will be used. This report describes a process called context-based evaluation that determines the fitness of a technology within a specific context. It includes hands-on experimentation with the technology for a greater understanding of its implications, as well as early competence development of the people conducting the experiments. An integral part of the process is the development of model problems these are prototypes, situated in a specific context, with the goal of satisfying evaluation criteria. The focus of this report is on evaluation of software technologies, such as Web services, database systems, or architectural frameworks and development tools. The report also includes a case study of the use of this process for the evaluation of Web service technology.Descriptors:", "num_citations": "20\n", "authors": ["653"]}
{"title": "Best practices for artifact versioning in service-oriented systems\n", "abstract": " This report describes some of the challenges of software versioning in an SOA environment and provides guidance on how to meet these challenges by following industry guidelines and recommended practices. Managing change in software systems becomes more difficult as the software increases in size, complexity, and dependencies. Part of this task is software versioning, in which version identifiers are assigned to software artifacts for the purpose of managing their evolution. However, software versioning is not a self-contained task. Versioning decisions affect a wide range of processes that fall under the broad heading of change management. With the advent of service-oriented architecture SOA as a software-development paradigm, software versioning has become even more entwined with the software life cycle, mainly due to the highly distributed nature, multiproduct outcome, and multilayer implementation of service-oriented systems. The report describes typical items that a versioning policy for a service-oriented system should contain, including which artifacts to version, how to apply version control, and the impact of versioning on each phase of the life cycle within an SOA infrastructure.Descriptors:", "num_citations": "19\n", "authors": ["653"]}
{"title": "Cloud offload in hostile environments\n", "abstract": " Selective offloading of resource-intensive execution from a mobile device to the cloud can extend battery life and broaden the range of supported applications. Unfortunately, the success of this approach is critically dependent on a reliable end-to-end network. This dependence is a serious vulnerability in hostile environments especially those involving wireless components in their long-haul network segments. We describe an architectural approach to reducing this vulnerability. Using a hierarchical cloud structure, offload is performed on stateless elements that are typically one wireless hop away from a mobile device. The proximity of offload reduces synchronous dependence on vulnerable long-haul network segments. We present experimental results that reflect on key design tradeoffs from a prototype implementation of this architecture.Descriptors:", "num_citations": "19\n", "authors": ["653"]}
{"title": "Engineering lessons for systems of systems learned from service-oriented systems\n", "abstract": " In today's rapidly changing environment it is no longer possible for isolated systems to provide all the capabilities that are necessary to fulfill a mission. Therefore, there is an increasing trend towards interconnected systems of systems that provide capabilities not available in a single system. However, existing software and system engineering practices do not scale well to SoS-engineering a system of systems (SoS) is still an open problem with significant challenges. Understanding these challenges and providing engineering solutions will require a two-pronged approach. First, a top-down approach that models an SoS at an abstract level is essential to understand key concerns that exist independent of the technologies used to implement the SoS. SoS research challenges about these concerns are well understood now. Second, a bottom-up approach that focuses on abstracting the concepts and lessons learned\u00a0\u2026", "num_citations": "19\n", "authors": ["653"]}
{"title": "SMART: Application of a method for migration of legacy systems to SOA environments\n", "abstract": " Migration of legacy systems to service-oriented environments has been achieved within a number of domains, including banking, insurance, manufacturing, and development tools, showing that the promise is beginning to be fulfilled. While migration to Service-Oriented Architecture (SOA) environments can have significant value, any specific migration requires a concrete analysis of the feasibility, risk and cost involved. The Service Migration and Reuse Technique (SMART) is a family of processes to help organizations in making initial decisions about the feasibility of exposing legacy systems as services within a SOA environment. This paper summarizes the SMART-MP (SMART \u2013 Migration Planning) process which provides a plan for the migration of selected components to services and identifies the scope for a pilot effort. It presents an application of SMART-MP and also outlines emerging new SMART\u00a0\u2026", "num_citations": "19\n", "authors": ["653"]}
{"title": "Effects of service\u2010oriented architecture on software development lifecycle activities\n", "abstract": " Service\u2010Oriented Architecture (SOA) is having a major impact on the development of software systems because of its potential for increased business agility, adaptability of applications, interoperability between systems, and reuse of legacy assets. However, organizations often make decisions on SOA adoption without carefully analyzing the implications of their decisions. This article outlines a set of common misconceptions about SOA and suggests ways in which software development lifecycle activities can be adapted to account for the characteristics of SOA\u2010based systems. Copyright \u00a9 2008 John Wiley & Sons, Ltd.", "num_citations": "19\n", "authors": ["653"]}
{"title": "Long-term life cycle impact of agile methodologies\n", "abstract": " Dissatisfaction with heavyweight development approaches has lead to a proposal of agile methodologies. While heavyweight approaches are geared towards careful project planning, formalized quality assurance, and controlled and rigorous software development processes, the agile approaches focus on quick adaptation to change, and flexibility. Today, there are a number of different agile methods available, such as Scrum, Crystal, Adaptive Software Development, Feature Driven Development, and extreme programming. Although different, they share the same principles. Some of them are: (1) individuals and interactions over processes and tools, (2) working code over comprehensive documentation, (3) customer collaboration over contract negotiation, and (4) responding to change over following a plan. The proponents claim that agile methodologies lead to more effective and efficient development. The\u00a0\u2026", "num_citations": "19\n", "authors": ["653"]}
{"title": "On-demand VM provisioning for cloudlet-based cyber-foraging in resource-constrained environments\n", "abstract": " Mobile applications are increasingly used by first responders, medics, researchers and other people in the field support of their missions and tasks. These environments have very limited connectivity and computing resources. Cloudlet-based cyber-foraging is a method of opportunistically discovering nearby resource-rich nodes that can increase the computing power of mobile devices and enhance the mobile applications running on them. In this paper we present On-Demand VM Provisioning, a mechanism for provisioning cloudlets at runtime by leveraging the advantages of enterprise provisioning tools commonly used to maintain configurations in enterprise environments. We present details of a prototype for On-Demand VM Provisioning and the results of a quantitative and qualitative evaluation of the prototype compared to other cloudlet provisioning mechanisms. The evaluation shows that On-Demand VM\u00a0\u2026", "num_citations": "18\n", "authors": ["653"]}
{"title": "Is SOA being pushed beyond its limits?\n", "abstract": " This article presents some of the characteristics of future service-oriented systems. Also, it focuses on a set of architecture and design drivers for these future service-oriented systems that can help meet new expectations without sacrificing the loosely coupled, stateless, standards-based characteristics that have driven SOA adoption in many contexts. The article concludes with thoughts on the key role of the architect in the serviceoriented systems-development process.", "num_citations": "18\n", "authors": ["653"]}
{"title": "A reference architecture for group-context-aware mobile applications\n", "abstract": " Handheld mobile technology is reaching first responders and soldiers in the field to help with mission execution. A characteristic of mission execution environments is that people are typically deployed in teams or groups to execute the mission. Most commercially-available context-aware mobile applications are based on context expressed mainly as location and time of an individual device plus the device user\u2019s preferences or history. This work extends context to consider the group that the individual is a part of and presents a reference architecture for group-context-aware mobile applications that integrates contextual information from individuals and nearby team members operating to execute a mission. The architecture is highly extensible to support changes in context data models, context data storage mechanisms, context reasoning engines and rules, sensors, communication mechanisms and context\u00a0\u2026", "num_citations": "16\n", "authors": ["653"]}
{"title": "Developing realistic approaches for the migration of legacy components to service-oriented architecture environments\n", "abstract": " This article addresses the problem of the migration of legacy components to Service-Oriented Architecture (SOA) environments. It focuses on the development of a realistic strategy for performing such a migration, taking into account the business needs of the organization and the technical content of the organization\u2019s existing systems portfolio. It highlights the challenges of building an SOA-based system and presents development issues from three perspectives: the application developer, the infrastructure developer, and the service provider. Because there is a current trend of organizations that are leveraging the value of their legacy systems by exposing all or parts of it as services within an SOA environment, the concerns and needs of the service provider are presented in greater detail. SMART, a method for making decisions on the migration of legacy assets as services within SOA environments is\u00a0\u2026", "num_citations": "16\n", "authors": ["653"]}
{"title": "Model Problems in Technologies for Interoperability: OWL Web Ontology Language for Services (OWL-S)\n", "abstract": " In a services-oriented environment, services are constantly being added and removed. Application developers often do not have control over the services they utilize. What would happen if a service required by an application were removed from the environment or had its interface changed What if a new and better service were introduced that an application might be able to utilize Existing services-oriented frameworks do not protect application developers against these contingencies. The OWL Web Ontology Language for Services OWL-S is a language to describe the properties and capabilities of Web Services in such a way that the descriptions can be interpreted by a computer system in an automated manner. This technical note presents the results of applying the model problem approach to examine the feasibility of using OWL-S to allow applications to automatically discover, compose, and invoke services in a dynamic services-oriented environment.Descriptors:", "num_citations": "15\n", "authors": ["653"]}
{"title": "Thirteen knights and the seven-headed dragon: an interdisciplinary software engineering framework\n", "abstract": " This paper summarizes the findings of the STEP2002 workshop on Interdisciplinary Software Engineering, which took place on the 6th and 7th of October 2002 in Montreal, Canada. The workshop considered the future of software engineering as an interdisciplinary activity by identifying ideas, models and techniques which are already used in cognate disciplines, and are deemed applicable to software engineering, with the aim of breaking down rigid barriers between disciplines, representations and processes.", "num_citations": "15\n", "authors": ["653"]}
{"title": "Application virtualization as a strategy for cyber foraging in resource-constrained environments\n", "abstract": " Mobile computing is now commonplace in our society, and its impact on our everyday lives is steadily growing. With smartphones having had their commercial breakthrough in recent years [Mobithink 2011, Infographic 2012], a whole ecosystem of applications has evolved that today shapes the way its users interact with the world surrounding them. Context-aware services such as localization help to find nearby venues or find where friends are currently located. Built-in cameras enable users to share visual impressions immediately as well as to scan and process information in the direct environment.", "num_citations": "14\n", "authors": ["653"]}
{"title": "Model problems in technologies for interoperability: Model-driven architecture\n", "abstract": " Model-driven architecture MDA is a technology produced and maintained by the Object Management Group OMG, an open membership, not-for-profit consortium that produces and maintains computer industry specifications for interoperable enterprise applications. This technical note examines two claims regarding the benefits of MDA that it 1 reduces development time, and 2 allows the developer to focus on business logic rather than on details about target platform and architecture. Such advantages would greatly benefit interoperability as target platforms and underlying infrastructure change, deployment of applications would be quick and easy. This note presents the results of applying the model problem approach to verify these claims.Descriptors:", "num_citations": "14\n", "authors": ["653"]}
{"title": "A plug-in architecture for connecting to new data sources on mobile devices\n", "abstract": " A key use for mobile devices is to search and view online information while on the go. As a result, many mobile applications serve as front ends for online databases. While there are many thousands of data sources that provide web service APIs giving access to their databases, creating mobile applications to use those sources requires significant mobile programming knowledge and a significant amount of time. We introduce Spinel, a plug-in architecture for Android, and a set of web-based configuration tools that together enable users to connect mobile applications to new data sources without programming. Spinel also provides APIs that make it easy for developers to create new applications that use those data sources. We provide three demonstration Android applications that use such data: Listpad for entering personal lists, Listviewer for viewing results of data queries, and Mapviewer for displaying query\u00a0\u2026", "num_citations": "13\n", "authors": ["653"]}
{"title": "Getting started with service-oriented architecture (SOA) terminology\n", "abstract": " From a more technical point of view, SOA is an architectural style or design paradigm; it is neither a system architecture nor a complete system. Systems that are built based on the SOA characteristics listed above are called serviceoriented systems. A high-level view of a service-oriented system is presented in Figure 1.", "num_citations": "13\n", "authors": ["653"]}
{"title": "Four pillars of service-oriented architecture\n", "abstract": " A cornerstone of DoD policy for future software and systems policy is the migration of systems to net-centric operations. The net-centric vision requires the leveraging of a highly flexible set of capabilities that can be composed quickly and flexibly into applications that take advantage of the interoperable aspects of the web and provide effective mission value. Among current technologies, SOA has the greatest potential for implementing this vision. However, there is a great deal of con-fusion a bout what SOA is, whether it is real, and what it takes to implement a SO A-based system. This artic le provides a high-level introduction to SOA, and then outlines how a DoD organization can develop an effective strategy for implementing the vision.Descriptors:", "num_citations": "13\n", "authors": ["653"]}
{"title": "Cloud computing.\n", "abstract": " Getting the Deal Through is delighted to publish the second edition of Cloud Computing, which is available in print, as an e-book and online at www. gettingthedealthrough. com.", "num_citations": "12\n", "authors": ["653"]}
{"title": "Software architecture strategies for cyber-foraging systems\n", "abstract": " VU Research Portal Page 1 VU Research Portal Software Architecture Strategies for Cyber-Foraging Systems Lewis, GA 2016 document version Publisher's PDF, also known as Version of record Link to publication in VU Research Portal citation for published version (APA) Lewis, GA (2016). Software Architecture Strategies for Cyber-Foraging Systems. General rights Copyright and moral rights for the publications made accessible in the public portal are retained by the authors and/or other copyright owners and it is a condition of accessing publications that users recognise and abide by the legal requirements associated with these rights. \u2022 Users may download and print one copy of any publication from the public portal for the purpose of private study or research. \u2022 You may not further distribute the material or use it for any profit-making activity or commercial gain \u2022 You may freely distribute the URL identifying the \u2026", "num_citations": "12\n", "authors": ["653"]}
{"title": "Environmental metabolites of fluoroquinolones: synthesis, fractionation and toxicological assessment of some biologically active metabolites of ciprofloxacin\n", "abstract": " Background, aim, and scope                 Biowastes produced by humans and animals are routinely disposed of on land, and concern is now growing that such practices provide a pathway for fluoroquinolone (FQs) antibacterial agents and their environmental metabolites (FQEMs) to contaminate the terrestrial environment. The focus of concern is that FQs and FQEMs may accumulate in amended soils to then adversely impact on the terrestrial environment. One postulated impact is the development of a selective environment in which FQ-resistant bacteria may grow. To find evidence in support of an accumulation of antibacterial-like activity, it was first necessary to establish whether any biologically active FQEMs could be synthesized by physicochemical factors that are normally present in the environment. However, many FQEMs are not commercially available to be used as standards in such studies\u00a0\u2026", "num_citations": "12\n", "authors": ["653"]}
{"title": "From system requirements to cots evaluation criteria\n", "abstract": " Perhaps the most common question asked by organizations new to constructing COTS-based systems is how to choose the right product. In particular, they want to know how, starting from system requirements, an efficient and effective set of criteria for COTS selection can be developed. This paper focuses on recommendations and techniques for transforming a set of requirements into a set of product evaluation criteria that capture the facts and standards by which the fitness of COTS products can be judged.", "num_citations": "12\n", "authors": ["653"]}
{"title": "Cyber-foraging for improving survivability of mobile systems\n", "abstract": " Cyber-foraging is a technique for dynamically augmenting the computing power of resource-limited mobile devices by opportunistically exploiting nearby fixed computing infrastructure. Cloudlet-based cyber-foraging relies on discoverable, generic, forward-deployed servers located in single-hop proximity of mobile devices. In particular, we define tactical cloudlets as the infrastructure to support computation offload and data staging at the tactical edge. However, the characteristics of tactical environments, such as dynamic context, limited computing resources, disconnected-intermittent-limited (DIL) network connectivity, and high levels of stress pose a challenge for the continued operations of mobile systems that leverage cloudlets in tactical environments. This paper presents an architecture and experimental results that demonstrate that cyber-foraging using tactical cloudlets increases the survivability of mobile\u00a0\u2026", "num_citations": "11\n", "authors": ["653"]}
{"title": "Model Problems in Technologies for Interoperability: Web Services\n", "abstract": " Web service technologies or Web services are experiencing a growing popularity in US Department of Defense, industry, and non-defense government organizations due to their potential to enable interoperability between applications implemented on different platforms. This potential stems from Web services being based on standards that have been widely accepted and implemented, such as the Simple Object Access Protocol and the Web Services Description Language. The large number of products and tools created to facilitate the development of Web services has also contributed to their popularity. This technical note presents the results of applying the model problem approach in an initial investigation of the potential of Web services to enable interoperability.Descriptors:", "num_citations": "11\n", "authors": ["653"]}
{"title": "Model-Based Verification-Scope, Formalism, and Perspective Guidelines\n", "abstract": " The goal of model-based verification MBV is to reduce the number of defects. Like any other quality assurance QA technique, it is not equally efficient in every situation. It is critical to determine where and how to use MBV to achieve the largest impact in terms of the number and criticality of defects found with a reasonable amount of effort. This document provides guidance for defining the scope, formalism approach and tools, and perspective for applying MBV. The critical important or risky aspects of the system and its development, including both programmatic and technical issues, drive these choices and form the basis for these guidelines.Descriptors:", "num_citations": "11\n", "authors": ["653"]}
{"title": "Control Encapsulation: A Calculus for Exogenous Composition of Software Components\n", "abstract": " In current software components models, components do not encapsulate control, and are composed by connection mechanisms which pass control from component to component. Connection mechanisms are not hierarchical in general, and therefore current component models do not support hierarchical system construction. In this paper we argue that control encapsulation by components, together with suitable composition mechanisms, can lead to a component model that supports hierarchical system construction. We show an example of such a model and present a calculus for its hierarchical composition mechanisms.", "num_citations": "10\n", "authors": ["653"]}
{"title": "Systems of Systems: New challenges for maintenance and evolution\n", "abstract": " Over the past decade, there has been a shift in software engineering practice away from the development of traditional stand-alone systems and toward large scale systems of systems (SoS). The movement toward SoS, in which there is often not a single organization in control, requires a change in a number of maintenance and evolution practices. This paper outlines the basic dimensions of a SoS, and traces its implications for software evolution and maintenance.", "num_citations": "10\n", "authors": ["653"]}
{"title": "Towards an architecture for trusted edge iot security gateways\n", "abstract": " Today's edge networks continue to see an increasing number of deployed IoT devices. These IoT devices aim to increase productivity and efficiency; however, they are plagued by a myriad of vulnerabilities. Industry and academia have proposed protecting these devices by deploying a\" bolt-on\" security gateway to these edge networks. The gateway applies security protections at the network level. While security gateways are an attractive solution, they raise a fundamental concern: Can the bolt-on security gateway be trusted?", "num_citations": "9\n", "authors": ["653"]}
{"title": "Cloud computing at the tactical edge\n", "abstract": " Handheld mobile technology is reaching first responders, disaster relief workers, and soldiers in the field to aid in various tasks, such as speech and image recognition, natural language processing, decision making, and mission planning. However, these applications are computation intensive, so it is necessary to consider that 1 mobile devices offer less computational power than conventional desktop or server computers, 2 computation-intensive tasks consume large amounts of battery power, and 3 networks in hostile environments, such as those experienced by first responders and soldiers in the field, are often unreliable, and bandwidth is limited and inconsistent. While there has been considerable research in code offload to the cloud to enhance computation and battery life, most of this work assumes reliable connectivity between the mobile device and the cloud an invalid assumption in hostile environments. This technical note presents a reference architecture for mobile devices that exploits cloudletsvirtual-machine-based, code-offload elementsthat are in single-hop proximity to the mobile devices that they serve. Two implementations of this reference architecture are presented, along with an analysis of architecture tradeoffs.Descriptors:", "num_citations": "9\n", "authors": ["653"]}
{"title": "Performance analysis of ws-security mechanisms in soap-based web services\n", "abstract": " Identity management IdM solutions in web services environments are often compared on the levels of performance and security they provide. Selecting the appropriate IdM solution for a given system or application often requires making tradeoffs between security and performance, while also considering the systems contextual and environmental requirements and constraints. This paper presents the results of a series of experiments targeted at analyzing the performance impact of adding WS-Security, a common security standard used in IdM frameworks, to SOAP-based web services. The goal of this work is to establish a baseline of performance data that can be used to explore performancesecurity tradeoffs in environments with complex attributes, such as resource or bandwidth limitations.Descriptors:", "num_citations": "9\n", "authors": ["653"]}
{"title": "Model-based verification: Abstraction guidelines\n", "abstract": " Model-Based Verification MBV is a systematic approach to finding defects errors in software requirements, designs, or code. The approach judiciously incorporates mathematical formalism, in the form of models, to provide a disciplined and logical analysis practice, rather than a proof of correctness strategy. This technical note presents a number of abstraction techniques that can be used to build essential models of system behavior in the context of MBV and details a methodology for creating state machine models using those techniques. In building essential models, abstraction is used to hide details and expose the entities, variables, states, and transitions needed to construct a state machine model. Through illustrative examples, this technical note identifies the types of simplifications that are useful and effective, and highlights the importance of the perspective in determining what important elements to include in an abstracted model.Descriptors:", "num_citations": "9\n", "authors": ["653"]}
{"title": "Model-based verification: Analysis guidelines\n", "abstract": " This technical note provides guidance for the analysis activity that occurs during the interpretation of results produced by model-checking tools. In the model-checking analysis activity, the main question is, Does the system behave correctly To answer this question, a model and a set of expected properties are used as input to a model checker. The expected output is a confirmation or refutation of the specified expected properties. In most cases, if the model checker does not confirm the property, it provides a counterexample. Counterexamples are executions of the model showing the sequence of steps that refutes the expected property. Sometimes the state space to be explored in order to find this counterexample is so large that it cannot be completely covered. This is the state explosion problem. Models must be tuned to reduce the state space this is a manual and intuitive task. Interpreting the model checkers output can also be difficult. The significance of the output must be assessed its interpretation may suggest an error in the claims or the model, or a defect in the actual system. This document presents the problems related to interpreting results. It provides strategies to overcome state explosion, analyze results, and provide feedback to the system designers and developers.Descriptors:", "num_citations": "9\n", "authors": ["653"]}
{"title": "Detection of antibacterial-like activity on a silica surface: fluoroquinolones and their environmental metabolites\n", "abstract": " Background, scope, and aims                 Antibacterial fluoroquinolones (FQs) are third-generation antibiotics that are commonly used as therapeutic treatments of respiratory and urinary tract infections. They are used far less in intensively farmed animal production systems, though their use may be permitted in the veterinary treatments of flocks or in medicated feeds. When used, only a fraction of ingested parent FQ actually reaches the in vivo target site of infection, while the remainder is excreted as the parent FQ and its metabolized products. In many species\u2019 metabolism, enrofloxacin (EF) is converted into ciprofloxacin (CF) while both FQs are classified as parent FQs in human treatments. It is therefore likely that both FQs and their metabolic products will contribute to a common pool of metabolites in biological wastes. Wastes from intensive farming practices are either directly applied to agricultural\u00a0\u2026", "num_citations": "8\n", "authors": ["653"]}
{"title": "A Scenario-Based Technique for Developing SOA Technical Governance\n", "abstract": " A well-known problem within the service-oriented architecture SOA community is the need to establish effective SOA governance procedures to enable an organization-wide SOA initiative. A number of organizations and vendors address this problem through SOA governance frameworks that provide models, procedures, and tools for SOA governance. Many of these SOA frameworks are general purpose because they are intended to be useful for a diverse customer base. However, while designed for a wide customer base, vendor SOA frameworks tend to be narrowly focused to work with the specific tools of the vendor. A critical problem for an organization when implementing SOA governance is to customize vendors offerings to its specific technological and management context. In this technical note, a lightweight and extensible technique is proposed, one that employs scenarios to tailor existing SOA governance frameworks to the specific needs of an organization.Descriptors:", "num_citations": "8\n", "authors": ["653"]}
{"title": "Developing realistic approaches for migration of legacy assets to soa environments\n", "abstract": " Summary form only given. This tutorial outlines the basic principles of SOA based systems and discusses their potentials and challenges. The basic operations of service discovery, service composition and service invocation are outlined. The OASIS SOA-based systems development reference model is also presented. The tutorial also identifies common misconceptions that users have experienced in migrating to SOAs. SOA systems are analyzed from three perspectives: the application developer, the infrastructure developer, and the service provider. The needs and concerns of each of these participants, as well as the types of cross organizational communication patterns required for success are outlined. While there is often an emphasis on technical SOA issues, organizations need to address a far broader set of issues. These are outlined as the four pillars of SOA-based systems development. The four pillars\u00a0\u2026", "num_citations": "8\n", "authors": ["653"]}
{"title": "Roles for maintenance and evolution of soa-based systems\n", "abstract": " Development, evolution and maintenance of SOA-based systems demands rethinking of the traditional system evolution and maintenance roles. The key objective of this paper is to present preliminary ideas on the roles required for maintenance and evolution of SOA-based systems and to suggest areas of needed research.", "num_citations": "8\n", "authors": ["653"]}
{"title": "Interdisciplinary influences in software engineering practices\n", "abstract": " In consideration of the future of software engineering as an interdisciplinary activity, this paper explores the existing coverage of interdisciplinary software engineering areas in established or emerging software engineering frameworks. In particular we investigate the Software Engineering Body of Knowledge (SWEBOK), the Capability Maturity Model (CMM) and related Capability Maturity Model Integration (CMMI), and the Rational Unified Process (RUP). Following the investigation of the interdisciplinary elements of these frameworks we explore potential areas of advancement and opportunities, that is, where and how future body of knowledge, process, and framework revisions might benefit from the interdisciplinary approach.", "num_citations": "8\n", "authors": ["653"]}
{"title": "Mobile computing at the edge (keynote)\n", "abstract": " As sales of mobile devices grow and smartphones and tablets become for many the preferred way of interacting with the Internet, social media and the enterprise, organizations are striving to push content and functionality out to mobile users. However, mobile devices still do not have the computing power and battery life that will allow them to perform effectively. This keynote explores current and future options for mobile devices to leverage edge networks and servers to extend their computing power and battery life, along with the software engineering challenges and opportunities that this movement brings.", "num_citations": "7\n", "authors": ["653"]}
{"title": "Architecture patterns for mobile systems in resource-constrained environments\n", "abstract": " Soldiers, first responders and other personnel operating at the tactical edge increasingly make use of mobile devices to help with tasks such as face recognition, language translation, decision-making and mission planning. Tactical-edge environments are characterized by limited resources, dynamic context, high stress and poor connectivity. This paper focuses on three architecture patterns that address these conditions. The Data Source Integration pattern uses server-side standardized definitions of live or cached geo-located data feeds that can be customized and filtered on a single, map-based user interface on a mobile device. The Group Context Awareness pattern uses context obtained from groups of handheld devices operating as part of a team to make sure that the right information is displayed to the right soldier at the right time. The Cloudlet-Based Cyber-Foraging pattern uses cloudlets as code-offload\u00a0\u2026", "num_citations": "7\n", "authors": ["653"]}
{"title": "Service-oriented architecture (soa) and software product lines: Pre-implementation decisions\n", "abstract": " \u2022 Do the external services meet the functionality and quality of service requirements of the software product line\u2022 What type of testing has been performed on the services, at what level\u2022 How appropriate and effective is the service level agreement\u2022 What types of mechanisms are built into the services to handle variations\u2022 Do the external services have an option to establish variability points\u2022 Can variability be handled by the infrastructure or by consumers of services", "num_citations": "7\n", "authors": ["653"]}
{"title": "T-Check in Technologies for Interoperability: Business Process Management in a Web Services Context\n", "abstract": " In Business Process Management BPM, many technologies are available to describe, analyze, execute, and monitor business processes. Composition languages are one type of BPM technology. Through the use of composition languages, business processes that are implemented through software and available as web services can be combined into new processes. The most popular language in this field is the Business Process Execution Language BPEL. BPEL allows a user to declaratively combine existing services within and outside an organization to implement a full business process. This technical note presents the results of applying the T-Check approach in an initial investigation of BPEL and related technologies for the implementation of BPM. This approach involves 1 formulating hypotheses about the technology and 2 examining these hypotheses against specific criteria through hands-on experimentation. The outcome of this two-stage approach is that the hypotheses are either fully or partially sustained or refuted. In this report, three hypotheses are examined 1 business process descriptions can be exchanged between different design tools and runtime engines 2 the development effort for integration is reduced through the use of a BPM tool and 3 business processes can be changed dynamically at runtime. From the T-Check investigation, the first two hypotheses are partially sustained and the last hypothesis is fully sustained.Descriptors:", "num_citations": "7\n", "authors": ["653"]}
{"title": "Promising Technologies for Future Systems\n", "abstract": " Joint Vision 2020, set forth by the Department of Defense, places a number of non-trivial, challenging requirements on future systems data integration from distributed, dynamic, heterogeneous sources on the fly, and networks robust and fast enough to support secure real-time manipulation, fusion, and presentation of all this data. This technical note presents a few of the many programs, technologies, and research efforts that are addressing the challenges faced by future systems.Descriptors:", "num_citations": "7\n", "authors": ["653"]}
{"title": "Model-Based Verification: Claim Creation Guidelines\n", "abstract": " Model Based Verification MBV is a systematic approach to finding defects errors in software requirements, designs, or code. MBV involves creating essential models of system behavior and analyzing these models against formal representations of expected properties, known as claims. Claim generation has been identified as a particularly complex activity within model-based verification. This technical note describes a pattern-based approach to facilitate claim generation. The report includes a list of directly usable patterns for the most frequent expected properties found in system specifications.Descriptors:", "num_citations": "7\n", "authors": ["653"]}
{"title": "Trends and challenges for software engineering in the mobile domain\n", "abstract": " Mobile computing is becoming a key aspect of our lives. This article builds on conversations held during the 2018 IEEE/ACM International Conference on Mobile Software Engineering and Systems, highlighting mobile computing's impact on software engineering practices, the transition from research to industry, and related areas.", "num_citations": "6\n", "authors": ["653"]}
{"title": "A framework for assurance in service-oriented environments\n", "abstract": " Assurance is an essential part of building any software system because it provides confidence and reduces the risks associated with system implementation. Assurance of service-oriented systems is similar to assurance of any distributed system. However, service-oriented environments have additional challenges because of their unique characteristics-reduced control, observability, visibility, and trust; and increased coordination and collaboration. Therefore, assuring service-oriented systems requires a new mindset; modification of existing assurance methods, techniques, and tools; new methods; and most importantly, successful collaboration and coordination between the broad set of participants in a service-oriented environment. This paper introduces a framework for assurance in a web-services-based, service-oriented environment. The paper discusses the challenges and implications of the characteristics of\u00a0\u2026", "num_citations": "6\n", "authors": ["653"]}
{"title": "Workshop on Model-Driven Architecture and Program Generation\n", "abstract": " This technical note summarizes the results of a workshop held on June 2, 2006, at the Software Engineering Institute in Pittsburgh, Pennsylvania USA. The workshop explored business and technical aspects of program generation in the context of the Object Management Groups model-driven architecture development approach. The workshop was structured around consideration of the perspectives of five different communities standards body, vendor, acquisition, development, and research. This note recapitulates these individual perspectives and highlights important themes.Descriptors:", "num_citations": "6\n", "authors": ["653"]}
{"title": "An approach to analysis and design for cots-based systems\n", "abstract": " From an analysis and design perspective, developers of COTS-based systems face many challenges driven by built-in product paradigms as well as the volatility of the marketplace. One way to deal with these challenges is to adopt a spiral development process that allows for concurrent discovery and negotiation of user needs and business processes, applicable technology and components, the target architecture, and organizational constraints. This paper outlines a workflow for Analysis and Design that can be used within spiral-based development processes for building systems from commercial components.", "num_citations": "6\n", "authors": ["653"]}
{"title": "Beyond the black box: a case study in c to java conversion and product extensibility\n", "abstract": " This case study describes the experience of converting and enhancing NDBS 1.0 Netscape Database Keystore, a programmatic library to extract private keys and digital certificates from a Netscape database written in C and Java. The result of this work is NDBS 2.0, a 100 Java version of NDBS 1.0 designed to support other keystores easily. NDBS 2.0 also includes write and delete capabilities, features that were not present in NDBS 1.0. The case study describes the experience of the conversion and development process, difficulties, and lessons learned.Descriptors:", "num_citations": "6\n", "authors": ["653"]}
{"title": "Authentication and authorization for IoT devices in disadvantaged environments\n", "abstract": " Internet of Things (IoT) devices are increasingly being used to support operations in disadvantaged environments, such as those experienced by first responders, military, medics, and other field personnel. However, current IoT security efforts are mainly targeted at stable and connected environments such as home and industry. This paper presents an implementation for authentication and authorization of IoT devices in disadvantaged environments, based on an IETF proposal for authentication and authorization in resource-constrained environments (ACE). It includes capabilities for bootstrapping of credentials and token revocation to account for high-priority threats of node impersonation and theft, as well as limited connectivity.", "num_citations": "5\n", "authors": ["653"]}
{"title": "Architectural Implications of Cloud Computing\n", "abstract": " Architectural Implications of Cloud Computing Page 1 SEI Technologies Forum Twitter #SEIVirtualForum \u00a9 2011 Carnegie Mellon University Architectural Implications of Cloud Computing Grace Lewis Research, Technology and Systems Solutions (RTSS) Program Lewis is a senior member of the technical staff at the SEI in the Research, Technology, and System Solutions (RTSS) Program. Her current interests and projects are in service-oriented architecture (SOA), cloud computing, and context-aware mobile applications. Page 2 Report Documentation Page Form Approved OMB No. 0704-0188 Public reporting burden for the collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, gathering and maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden \u2026", "num_citations": "5\n", "authors": ["653"]}
{"title": "Emerging technologies for software-reliant systems of systems\n", "abstract": " This report presents general computation trends and a particular set of emerging technologies to support the trends for software-reliant systems of systems SoSs. Software-reliant SoSs now tend to be highly distributed software systems, formed from constituent software systems that are operated and managed by different organizations. These SoSs are moving from a directed management structure in which constituent systems are integrated and built for a specific purpose to a virtual one in which there is no central authority or centrally agreed purpose. This shift is introducing a need for new technologies to deal with the lack of central authority or centrally agreed purpose.Descriptors:", "num_citations": "5\n", "authors": ["653"]}
{"title": "First international workshop on service-oriented architecture testing (soat 2009)\n", "abstract": " Service-Oriented Architecture (SOA) is a way of designing, developing, deploying, and managing enterprise systems where business needs and technical solutions are closely aligned. SOA offers a number of potential benefits, such as cost-efficiency and agility. However, adopting SOA is not without considerable challenges. For example, the most common way to implement a SOA-based system is with Web services, but the standards that define Web services are evolving rapidly and many of the Web services tools are still somewhat immature. There is also the question of how to leverage existing legacy assets within a SOA context. Perhaps most importantly, there are serious challenges related to the testing of SOA-based systems that must be addressed before the SOA paradigm will enjoy broadbased success.", "num_citations": "5\n", "authors": ["653"]}
{"title": "SMART: Analyzing the Reuse Potential of Legacy Systems in Service-Oriented Architecture (SOA) Environments\n", "abstract": " Grace Lewis is a Senior Member of the Technical Staff at the Software Engineering Institute. She is currently the lead for the System of Systems Engineering team within the System of Systems Practice (SoSP) initiative. Her current interests and projects are in service-oriented architecture, technologies for systems interoperability, modernization of legacy systems, and characterization of software development life cycle activities in systems of systems environments. Her latest publications include several reports published by Carnegie Mellon on these subjects and a book in the SEI Software Engineering Series. She is also a member of the technical faculty for the Master in Software Engineering program at CMU. Grace holds a B. Sc. in Systems Engineering and an Executive MBA from Icesi University in Cali, Colombia; and a Master in Software Engineering from Carnegie Mellon University.", "num_citations": "5\n", "authors": ["653"]}
{"title": "SMART tool demonstration\n", "abstract": " Service-oriented architecture (SOA) has become an increasingly popular mechanism for achieving interoperability between systems. An attractive benefit of SOA adoption is that it enables existing legacy systems to expose their functionality as services. The Service Migration and Reuse Technique (SMART) is a technique to help organizations make initial decisions about the feasibility of reusing legacy components as services within a SOA environment. This session will demonstrate the SMART Tool which supports the collection and analysis of data obtained during a SMART engagement.", "num_citations": "5\n", "authors": ["653"]}
{"title": "Service-Oriented Architecture and its Implications for Software Life Cycle Activities\n", "abstract": " Service-Oriented Architecture and its Implications for Software Life Cycle Activities Page 1 \u00a9 2008 Carnegie Mellon University Service-Oriented Architecture and its Implications for Software Life Cycle Activities Grace A. Lewis Software Engineering Institute Integration of Software-Intensive Systems (ISIS) Initiative Page 2 2 Version 1.7.1 \u00a9 2008 Carnegie Mellon University Agenda SOA: Basic Concepts Pillars of Service-Oriented Systems Development Implications of SOA for Software Life Cycle Activities Conclusions SOA: Basic Concepts Page 3 3 Version 1.7.1 \u00a9 2008 Carnegie Mellon University What is SOA? Service-oriented architecture is a way of designing, developing, deploying and managing systems, in which \u2022 Services provide reusable business functionality. \u2022 Service consumers are built using functionality from available services. \u2022 Service interface definitions are first-class artifacts. \u2022 An SOA infrastructure \u2026", "num_citations": "5\n", "authors": ["653"]}
{"title": "A process for context-based technology evaluation: Examples for the evaluation of web services technology\n", "abstract": " This paper describes a process for evaluating the fitness of a technology within its anticipated specific context. The process includes hands-on experimentation with the technology to achieve a greater understanding of its implications as well as early competence development of the people conducting the experiments. Experiments use narrowly focused model problems to sustain or refute hypotheses about the examined technologies. This paper also includes examples of process elements for the evaluation of Web services technology.", "num_citations": "5\n", "authors": ["653"]}
{"title": "Improving structured data entry on mobile devices\n", "abstract": " Structure makes data more useful, but also makes data entry more cumbersome. Studies have found that this is especially true on mobile devices, as mobile users often reject structured personal information management tools because the structure is too restrictive and makes entering data slower. To overcome these problems, we introduce a new data entry technique that lets users create customized structured data in an unstructured manner. We use a novel notepad-like editing interface with built-in data detectors that allow users to specify structured data implicitly and reuse the structures when desired. To minimize the amount of typing, it provides intelligent, context-sensitive autocomplete suggestions using personal and public databases that contain candidate information to be entered. We implemented these mechanisms in an example application called Listpad. Our evaluation shows that people using Listpad\u00a0\u2026", "num_citations": "4\n", "authors": ["653"]}
{"title": "T-Check in Technologies for Interoperability: Web Services and Security--Single Sign-On\n", "abstract": " A single sign-on SSO solution is intended to provide a single authentication point for a set of Web services. The SSO solution forwards the necessary authentication information to the Web services, which in turn authenticate the end user to legacy systems that implement the Web services functionality. This technical note presents the results of applying the T-Check approach in an initial investigation of two Web services standards, WS-Security and SAML, to create an SSO solution that works inside a single organization. This approach involves 1 formulating hypotheses about the technology and 2 examining these hypotheses against specific criteria through hands-on experimentation. The outcome of this two-stage approach is that the hypotheses are either fully or partially sustained or refuted. In this report, four hypotheses based on claims found in experience reports and on vendor Web sites are examined 1 it is possible to implement SSO for the two Web services using SAML and WS-Security 2 it is fairly easy to implement a basic SSO solution 3 the SSO solution will not have a major impact on the runtime behavior of the system and 4 the SSO solution can provide the required access control. The first three hypotheses were sustained it was not necessary to implement the fourth one to list options for adding access control.Descriptors:", "num_citations": "4\n", "authors": ["653"]}
{"title": "Migration of legacy components to service-oriented architectures\n", "abstract": " Software archaeology investigates and rehabilitates legacy systems so that their architecture can be discovered and their code reused. An increasingly popular approach to software archaeology has been to leverage the value of legacy systems by exposing all or parts of it as services within a service-oriented architecture (SOA). A service-oriented architecture is a collection of services with well-defined interfaces and a shared communications model. A service is a coarse-grained, discoverable, and self-contained software entity that interacts with applications and other services through this loosely coupled, often asynchronous, message-based communication model [2, 4]. Systems or applications that are called\" service-based\" use the functionality provided by these services as part of their mission. For example, when a person makes a reservation through Travelocity, what appears to be a single web-based\u00a0\u2026", "num_citations": "4\n", "authors": ["653"]}
{"title": "A case study in COTS product integration using XML\n", "abstract": " The increased adoption and support for XML, as well as its clarity, extensibility, platform independence, easy validation, and support for internalization have made it an option for COTS product integration. This paper presents options for COTS product integration using XML, an XML Integration Architecture, and a real case study of how a set of COTS products were successfully integrated using the proposed XML Integration Architecture.", "num_citations": "4\n", "authors": ["653"]}
{"title": "The Role of Edge Offload for Hardware-Accelerated Mobile Devices\n", "abstract": " This position paper examines a spectrum of approaches to overcoming the limited computing power of mobile devices caused by their need to be small, lightweight and energy efficient. At one extreme is offloading of compute-intensive operations to a cloudlet nearby. At the other extreme is the use of fixed-function hardware accelerators on mobile devices. Between these endpoints lie various configurations of programmable hardware accelerators. We explore the strengths and weaknesses of these approaches and conclude that they are, in fact, complementary. Based on this insight, we advocate a software-hardware co-evolution path that combines their strengths.", "num_citations": "3\n", "authors": ["653"]}
{"title": "Secure VM migration in tactical cloudlets\n", "abstract": " Tactical cloudlets are forward-deployed, discoverable, virtual-machine-based servers that can be hosted on vehicles or other platforms to provide a computation offload and data staging infrastructure for mobile devices in the field. Because of the mobility of cloudlets in the field, as well as dynamic missions, a mobile user of a cloudlet might need to migrate active capabilities (computation and data) to another trusted cloudlet. A common solution for establishing trust between two nodes is to create and share credentials in advance, and then use a third-party, online trusted authority to validate the credentials of the nodes. However, the characteristics of tactical environments do not consistently provide access to that third-party authority or certificate repository because they are DIL environments (disconnected, intermittent, limited). The goal of this paper is to present a solution for secure VM migration between tactical\u00a0\u2026", "num_citations": "3\n", "authors": ["653"]}
{"title": "Cloudlet-based cyber-foraging in resource-limited environments\n", "abstract": " First responders and others operating in crisis environments increasingly make use of handheld devices to help with tasks such as face recognition, language translation, decision making, and mission planning. These resource-limited environments are characterized by dynamic context, limited computing resources, high levels of stress, and intermittent network connectivity. Cyber-foraging is the leverage of external resource-rich surrogates to augment the capabilities of resource-limited devices. In cloudlet-based cyber-foraging, resource-intensive computation is offloaded to cloudlets: discoverable, generic servers located in single-hop proximity of mobile devices. This chapter presents several mechanisms for cloudlet-based cyber-foraging that consider a tradeoff space beyond energy, performance, and fidelity of results. It demonstrates that cyber-foraging in resource-limited environments can greatly benefit from\u00a0\u2026", "num_citations": "3\n", "authors": ["653"]}
{"title": "Research challenges in the maintenance and evolution of service-oriented systems\n", "abstract": " Service-Oriented Architecture (SOA) is a viable option for systems development, systems integration, and leverage of legacy systems. Despite its positive contributions and potential, SOA has been subjected to significant hype and inflated expectations, and past research efforts in this area have been unfocused. As a result, there is a strong need for systematic and unbiased research. Based on a synthesis of two leading efforts, this chapter presents a framework of research challenges for service orientation and focuses on the topics related to the migration and evolution of service-oriented systems. The chapter reviews current progress as well as gaps in addressing challenges that are derived from the framework.", "num_citations": "3\n", "authors": ["653"]}
{"title": "Component-based software engineering\n", "abstract": " Our web service was released with a hope to work as a total on the web electronic digital catalogue that o ers access to great number of PDF guide catalog. You might find many di erent types of ebook and other literatures from our documents data source. Particular well-liked issues that spread out on our catalog are popular books, answer key, test test questions and answer, guideline paper, exercise guideline, test sample, end user guidebook, user guideline, services instructions, maintenance guidebook, and so forth.", "num_citations": "3\n", "authors": ["653"]}
{"title": "Model-Based Verification: Guidelines for Generating Expected Properties\n", "abstract": " This report presents a basic set of guidelines to facilitate the generation of expected properties in the context of Model-Based Verification. Expected properties are natural language statements that express characteristics of the behavior of a system-characteristics that are consistent with user expectations. Through model checking, expected properties of a system, formally expressed as claims, are analyzed against the model. This analysis can detect inconsistencies between models of the system and their expected properties and identify potential system defects.Descriptors:", "num_citations": "3\n", "authors": ["653"]}
{"title": "Component mismatches are a critical bottleneck to fielding AI-enabled systems in the public sector\n", "abstract": " The use of machine learning or artificial intelligence (ML/AI) holds substantial potential toward improving many functions and needs of the public sector. In practice however, integrating ML/AI components into public sector applications is severely limited not only by the fragility of these components and their algorithms, but also because of mismatches between components of ML-enabled systems. For example, if an ML model is trained on data that is different from data in the operational environment, field performance of the ML component will be dramatically reduced. Separate from software engineering considerations, the expertise needed to field an ML/AI component within a system frequently comes from outside software engineering. As a result, assumptions and even descriptive language used by practitioners from these different disciplines can exacerbate other challenges to integrating ML/AI components into larger systems. We are investigating classes of mismatches in ML/AI systems integration, to identify the implicit assumptions made by practitioners in different fields (data scientists, software engineers, operations staff) and find ways to communicate the appropriate information explicitly. We will discuss a few categories of mismatch, and provide examples from each class. To enable ML/AI components to be fielded in a meaningful way, we will need to understand the mismatches that exist and develop practices to mitigate the impacts of these mismatches.", "num_citations": "2\n", "authors": ["653"]}
{"title": "Architecture and design of service-oriented systems: Goals\n", "abstract": " Before joining the SEI, Lewis was Chief of Systems Development for Icesi University, where she served as project manager and technical lead for the university-wide administrative systems. Other work experience includes Design and Development Engineer for the Electronics Division of Carvajal SA where she developed software for communication between PCs and electronic devices; developed embedded software on the microcontroller that was used on the devices; and provided technical assistance to sales personnel during on-site visits to potential and actual clients.", "num_citations": "2\n", "authors": ["653"]}
{"title": "Standards in cloud computing interoperability\n", "abstract": " Bill Pollak: Welcome to the SEI Podcast Series, a production of the Carnegie Mellon Software Engineering Institute. The SEI is a federally-funded research and development center at Carnegie Mellon University in Pittsburgh, Pennsylvania. A transcript of today\u2019s podcast is posted on the SEI website at sei. cmu. edu/podcasts. My name is Bill Pollak, and today I am pleased to introduce you to Grace Lewis, deputy lead for the SEI\u2019s Advanced Mobile Systems Initiative and technical lead for the Edge-Enabled Tactical Systems Research Team. Her main interests are mobile computing, service-oriented architecture, and cloud computing. Grace has more than 20 years of professional software development experience, mainly in industry. Before joining the SEI, she was chief of systems development for Icesi University where she served as project manager and technical lead for the university-wide administrative systems. Welcome, Grace.", "num_citations": "2\n", "authors": ["653"]}
{"title": "Report of the 2nd international workshop on principles of engineering service-oriented systems (PESOS 2010)\n", "abstract": " The Second International Workshop on Principles of Engineering Service-Oriented Systems (PESOS 2010) was held at the International Conference on Software Engineering, ICSE 2010 on May 1 and 2, 2010. PESOS 2010 provided a forum for presenting and discussing current work and research topics related to serviceoriented systems. The workshop had keynotes on SOA testing challenges and adaptive service-oriented systems. There were four paper sessions on the topics of service development, testing and evolution of service-oriented systems, service adaptation, and quality of service (QoS) and Service-Level Agreements (SLAs) in service-oriented environments. General discussions focused on these overall themes. These discussions resulted in the identification of research challenges for the future.", "num_citations": "2\n", "authors": ["653"]}
{"title": "Cloud Computing\n", "abstract": " Cost The pay-per-usage model allows an organization to only pay for the resources they need with basically no investment in the physical resources available in the cloud. There are no infrastructure maintenance or upgrade costs Mobility Users have the ability for the user to access data and applications from around the globe", "num_citations": "2\n", "authors": ["653"]}
{"title": "An interdisciplinary communications format for museums in the UK\n", "abstract": " CiNii \u8ad6\u6587 - An interdisciplinary communications format for museums in the UK CiNii \u56fd\u7acb\u60c5\u5831\u5b66 \u7814\u7a76\u6240 \u5b66\u8853\u60c5\u5831\u30ca\u30d3\u30b2\u30fc\u30bf[\u30b5\u30a4\u30cb\u30a3] \u65e5\u672c\u306e\u8ad6\u6587\u3092\u3055\u304c\u3059 \u5927\u5b66\u56f3\u66f8\u9928\u306e\u672c\u3092\u3055\u304c\u3059 \u65e5\u672c\u306e\u535a\u58eb\u8ad6\u6587\u3092 \u3055\u304c\u3059 \u65b0\u898f\u767b\u9332 \u30ed\u30b0\u30a4\u30f3 English \u691c\u7d22 \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u3059\u3079\u3066 \u672c\u6587\u3042\u308a \u9589\u3058\u308b \u30bf\u30a4\u30c8\u30eb \u8457\u8005\u540d \u8457\u8005 ID \u8457\u8005\u6240\u5c5e \u520a\u884c\u7269\u540d ISSN \u5dfb\u53f7\u30da\u30fc\u30b8 \u51fa\u7248\u8005 \u53c2\u8003\u6587\u732e \u51fa\u7248\u5e74 \u5e74\u304b\u3089 \u5e74\u307e\u3067 \u691c\u7d22 \u691c\u7d22 \u691c\u7d22 CiNii\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u95a2\u3059\u308b\u30a2\u30f3\u30b1\u30fc\u30c8\u3092\u5b9f\u65bd\u4e2d\u3067\u3059\uff0811/11(\u6c34)-12/23(\u6c34)\uff09 CiNii Research\u30d7\u30ec\u7248\u306e\u516c\u958b \u306b\u3064\u3044\u3066 An interdisciplinary communications format for museums in the UK LEWIS G. \u88ab\u5f15\u7528 \u6587\u732e: 1\u4ef6 \u8457\u8005 LEWIS G. \u53ce\u9332\u520a\u884c\u7269 Museum Museum 22(1), 1970 \u88ab\u5f15\u7528\u6587\u732e: 1\u4ef6\u4e2d 1-1\u4ef6\u3092 \u8868\u793a 1 \u7f8e\u8853\u9928\u306b\u304a\u3051\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ab2\u984c (<\u7279\u96c6>\u7f8e\u8853\u9928\u30fb\u535a\u7269\u9928\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 II) \u9be8\u4e95 \u79c0\u4f38 \u60c5\u5831\u306e\u79d1\u5b66\u3068\u6280\u8853 48(2), 74-80, 1998 \u53c2\u8003\u6587\u732e15\u4ef6 \u56fd\u7acb\u60c5\u5831\u5b66\u7814\u7a76\u6240 \u8a2d\u7acb 20\u5468\u5e74 Tweet \u5404\u7a2e\u30b3\u30fc\u30c9 NII\u8ad6\u6587ID(NAID) 10000065573 \u8cc7\u6599\u7a2e\u5225 \u96d1\u8a8c\u8ad6\u6587 \u30c7\u30fc\u30bf\u63d0\u4f9b\u5143 \u2026", "num_citations": "2\n", "authors": ["653"]}
{"title": "Characterizing and Detecting Mismatch in Machine-Learning-Enabled Systems\n", "abstract": " Increasing availability of machine learning (ML) frameworks and tools, as well as their promise to improve solutions to data-driven decision problems, has resulted in popularity of using ML techniques in software systems. However, end-to-end development of ML-enabled systems, as well as their seamless deployment and operations, remain a challenge. One reason is that development and deployment of ML-enabled systems involves three distinct workflows, perspectives, and roles, which include data science, software engineering, and operations. These three distinct perspectives, when misaligned due to incorrect assumptions, cause ML mismatches which can result in failed systems. We conducted an interview and survey study where we collected and validated common types of mismatches that occur in end-to-end development of ML-enabled systems. Our analysis shows that how each role prioritizes the importance of relevant mismatches varies, potentially contributing to these mismatched assumptions. In addition, the mismatch categories we identified can be specified as machine readable descriptors contributing to improved ML-enabled system development. In this paper, we report our findings and their implications for improving end-to-end ML-enabled system development.", "num_citations": "1\n", "authors": ["653"]}
{"title": "KalKi: A Software-Defined IoT Security Platform\n", "abstract": " Commercial IoT devices are increasingly being integrated into software systems. However, given the also increasing number of IoT vulnerability reports, there is a pressing need to enable organizations to achieve such integration with high assurance, especially for systems with high security and safety requirements. We present KalKi, a software-defined IoT security platform that moves security enforcement to the network to enable safe integration of IoT devices, even if the devices are not fully trusted or configurable. KalKi leverages software-defined networking (SDN) concepts and constructs, combined with a rich policy model that specifies both cyber and kinetic attacks, to create a safe, highly-dynamic and extensible IoT integration platform. Our experiments demonstrate high performance, scalability and resilience, even in the presence of a powerful attacker.", "num_citations": "1\n", "authors": ["653"]}
{"title": "Characterizing and Detecting Mismatch in ML Enabled Systems\n", "abstract": " Problem. Development, deployment, and operation of ML systems involves three perspectives, often with three completely separate workflows and people data scientists build the model software engineers integrate the model into a larger system and then operations staff deploy, operate, and monitor the system.Descriptors:", "num_citations": "1\n", "authors": ["653"]}
{"title": "Trustless IoT: A Logic-Driven Architecture for IoT Hubs\n", "abstract": " The proliferation of smart devices has led to a de-facto IoT architecture where devices are controlled by cloud operators. This, in turn, leads to a central point of failure where a hacked hub can lead to the failure of the entire system. In this paper, we outline OrbanHub, an alternate IoT architecture which rules out Byzantine behavior by centralized IoT controllers. OrbanHub works the same way as most IoT hubs, but instead of issuing commands to devices to perform their operations, OrbanHub issues proof-carrying statements that devices verify. To ensure that the hub cannot reissue valid commands, OrbanHub leverages hashchains to prove freshness. We demonstrate that, through the two techniques, OrbanHub cannot force devices to execute commands that are not authorized by the user\u2019s control policies and provide a feasibility study of the architecture.", "num_citations": "1\n", "authors": ["653"]}
{"title": "Delay-tolerant data sharing in tactical environments\n", "abstract": " Personnel operating in tactical environments heavily rely on information sharing to perform their missions. Solutions deployed in these environments need to focus on reliability and performance, in addition to usability to work as unattended as possible due to the often chaotic nature of operations. In this paper we propose a solution for delay-tolerant data sharing, in particular file sharing, using well supported, common networking protocols. The solution is based on the concept of broadcatching, which combines a delay-tolerant protocol such as BitTorrent with a publish/subscribe mechanism such as RSS to enable \u201cmany to one\u201d information sharing. Experimental data shows that it is a promising approach for enabling reliable, mostly unattended data sharing on tactical networks in tactical environments.", "num_citations": "1\n", "authors": ["653"]}
{"title": "Evaluation of the Applicability of HTML5 for Mobile Applications in Resource-Constrained Edge Environments\n", "abstract": " Mobile applications increasingly are being used by first responders and soldiers to support their missions. These users operate in resource-constrained, edge environments characterized by dynamic context, limited computing resources, intermittent network connectivity, and high levels of stress. In addition to efficient battery management, mobile applications operating in edge environments require efficient resource usage of onboard sensors to capture, store, and send data across networks that may be intermittent. The traditional method for building mobile applications is to use native software development kits SDKs on a particular mobile platform, such as Android or iOS. However, HTML5 has recently evolved to a stage where it supports many of the development features that native SDKs support. The advantages of using HTML5 not only include cross-platform development and deployment, but also that mobile edge applications would not have to be deployed on mobile devices, potentially leading to an easier distribution and testing process. This technical note presents an analysis of the feasibility of using HTML5 for developing mobile edge applications, as well as the use of bridging frameworks for filling in gaps in HTML5 development features. This note also provides a discussion of the software architecture implications of HTML5 mobile application development. The work presented in this note is the result of an independent study in Carnegie Mellon Universitys Master of Information Technology-Embedded Software Engineering MSIT-ESE program.Descriptors:", "num_citations": "1\n", "authors": ["653"]}
{"title": "SOA: A Quality Attribute Perspective\n", "abstract": " Grace Lewis is a senior member of the SEI technical staff within the Systems of Systems Practice (SoSP) Initiative in the Research, Technology, and Systems Solutions (RTSS) Program. Her current interests and projects are in service-oriented architecture (SOA), cloud computing, context-aware applications, and technologies for systems interoperability. Her latest publications include multiple reports and articles on these subjects and a book in the SEI Software Engineering Series to be published later in 2011. She is also a member of the technical faculty for the Master in Software Engineering Program at Carnegie Mellon University (CMU). Lewis holds a bachelor\u201f s degree in systems engineering and an Executive MBA from Icesi University in Cali, Colombia; and a master\u201f s degree in software engineering from CMU.", "num_citations": "1\n", "authors": ["653"]}
{"title": "Third international workshop on principles of engineering service-oriented systems (PESOS 2011)\n", "abstract": " Service-oriented systems have attracted great interest from industry and research communities worldwide. Service integrators, developers, and providers are collaborating to address the various challenges in the field. PESOS 2011 is a forum for all these communities to present and discuss a wide range of topics related to service-oriented systems. The goal of PESOS is to bring together researchers from academia and industry, as well as practitioners working in the areas of software engineering and service-oriented systems to discuss research challenges, recent developments, novel applications, as well as methods, techniques, experiences, and tools to support the engineering of service-oriented systems.", "num_citations": "1\n", "authors": ["653"]}
{"title": "2010 ICSE 2nd International Workshop on Principles of Engineering Service-Oriented Systems (PESOS 2010)\n", "abstract": " Service-oriented systems have attracted great interest from industry and research communities worldwide. Service integrators, developers, and providers are collaborating to address the various challenges in the field. PESOS 2010 is a forum for all these communities to present and discuss a wide range of topics related to service-oriented systems. The goal of PESOS was to bring together researchers from academia and industry, as well as practitioners working in the areas of software engineering and service-oriented systems to discuss research challenges, recent developments, novel applications, as well as methods, techniques, experiences, and tools to support the engineering and use of service-oriented systems.", "num_citations": "1\n", "authors": ["653"]}
{"title": "SOAME 2010: International Workshop on SOA Migration and Evolution\n", "abstract": " For many enterprises, introduction and maintenance of service orientation is still a daunting task and there is often no distinct idea of how to approach respective projects. Especially the migration of legacy systems functionality into a new service-oriented environment - the SOA enabling - is key to the success of SOA projects. Another challenge arises for enterprises having SOA already introduced. Here, the focus lies on maintaining and evolving existing SOA environments - SOA maintenance. The SOAME workshop (soame2010.eu) brought together researchers and practitioners in these areas to present and discuss state-of-the-art techniques as well as real-world experiences.", "num_citations": "1\n", "authors": ["653"]}
{"title": "Tutorial 3: engineering systems of systems\n", "abstract": " Over the past decade, the complexity of new and acquired systems of systems has increased dramatically. Until now, research has mainly focused on the properties of systems of systems. Recently, paradigms such as service oriented\u00a0\u00a0architecture (SOA) and Grid computing are being adopted to implement systems of systems. Additionally, techniques such as SoS Navigator are being developed to identify complexrelationships among organizations participating insuch systems of systems. However, there is no unifiedbody of knowledge that captures the engineeringpractices necessary for creating and managing systemsof systems. Further research is required to build this body of knowledge, but two main challenges must be addressed.", "num_citations": "1\n", "authors": ["653"]}
{"title": "Migrating Legacy Assets to Service Oriented Architecture (SOA): a DoD Example\n", "abstract": " SOA Service Oriented Architecture offers significant potential for leveraging investments in legacy systems by providing a modern interface to existing capabilities, as well as exposing legacy functionality to a greater number of users. SMART Service Migration and Reuse Technique analyzes the viability of reusing legacy components as the basis for services by answering these questions Does it make sense to migrate the legacy system to services What services make sense to develop What components can be mined to derive these services What changes are needed to accomplish the migration What migration strategies are most appropriate What are the preliminary estimates of cost and riskDescriptors:Subject Categories:Distribution Statement:APPROVED FOR PUBLIC RELEASE", "num_citations": "1\n", "authors": ["653"]}
{"title": "T-Check for Technologies for Interoperability: Open Grid Services Architecture (OGSA): Part 1\n", "abstract": " Many current technology approaches exist for building systems that have interoperability requirements. This report investigates Open Grid Services Architecture (OGSA), one of the many technologies for accomplishing interoperability, using the T-Check technique. A T-Check is a simple and cost-efficient way to understand what a technology can and cannot do in a specific context. This report describes a T-Check exploration of the feasibility of using OGSA in the context of data management, finding that OGSA (a) provides data storage and retrieval where the specific implementation of the data store implementation is transparent and (b) allows addition or removal of data stores at runtime without affecting system operation. This report is part one of a two-part investigation; part two will look at OGSA in the context of load distribution.", "num_citations": "1\n", "authors": ["653"]}