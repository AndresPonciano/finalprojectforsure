{"title": "DAOP-ADL: an architecture description language for dynamic component and aspect-based development\n", "abstract": " Architecture description languages deal with the description, analysis and reuse of software architectures. This paper describes DAOP-ADL, a component- and aspect-based language to specify the architecture of an application in terms of components, aspects and a set of plug-compatibility rules between them. With the aim of connecting the specification of the application architecture to the implementation, we describe our language using XML and XML Schemas. The DAOP-ADL language was designed to be interpreted by DAOP, our own dynamic component- and aspect-oriented platform. DAOP provides a composition mechanism that plugs aspects into components dynamically at runtime. The software architect will use the DAOP-ADL language at design time to describe the architecture of the application. Later this architectural information is loaded into the DAOP platform, which needs it to establish the\u00a0\u2026", "num_citations": "174\n", "authors": ["1136"]}
{"title": "A dynamic component and aspect-oriented platform\n", "abstract": " Component-based software development (CBSD) represents a significant advance towards assembling systems by plugging in independent and (re)usable components. On the other hand, aspect-oriented software development (AOSD) is presently considered as a possible technology to improve the modularity and adaptability of complex and large-scale distributed systems. Both are complementary technologies, so it would be helpful to have models that combine them to take advantage of all their mutual benefits. Thus recent research has tried to combine CBSD and AOSD by considering aspects as reusable parts that can be woven and then attached to the individual components. Our contribution to the integration of these technologies is CAM, a new component and aspect model that defines components and aspects as first-order entities, together with a non-intrusive composition mechanism to plug aspects into\u00a0\u2026", "num_citations": "125\n", "authors": ["1136"]}
{"title": "Separation of coordination in a dynamic aspect oriented framework\n", "abstract": " Aspect-Oriented Programming separates in a new dimension, named aspect, those features that are spread over different components in a system. In this paper we present a Dynamic AO Framework where software components and aspects are first-order entities composed dynamically at runtime according to the architectural information stored in middleware layer. As an example we describe the coordination aspect, one of the most relevant and useful aspects our approach, essential to develop open distributed systems The main functionality of this aspect is to encapsulate interaction protocol among a set of components.", "num_citations": "80\n", "authors": ["1136"]}
{"title": "AO-ADL: An ADL for describing aspect-oriented architectures\n", "abstract": " Architecture description languages are a sound and convenient approach to software architecture representation. The majority of well-known ADLs provide separation of computation and communication in components and connectors, respectively. However, computation and communication are not the only crosscutting concerns that may appear in a software architecture description. Traditional ADLs do not normally provide appropriate support to separate any kind of crosscutting concerns, which frequently result in poor architectures descriptions with highly coupled components. In this paper we present the AO-ADL language, based on a symmetric decomposition model that considers components and connectors as the basic structural elements (similar to traditional ADLs). We will show how aspects are treated as specific types of components that are composed by means of connectors. In order to cope\u00a0\u2026", "num_citations": "71\n", "authors": ["1136"]}
{"title": "A software product line process to develop agents for the iot\n", "abstract": " One of the most important challenges of this decade is the Internet of Things (IoT), which aims to enable things to be connected anytime, anyplace, with anything and anyone, ideally using any path/network and any service. IoT systems are usually composed of heterogeneous and interconnected lightweight devices that support applications that are subject to change in their external environment and in the functioning of these devices. The management of the variability of these changes, autonomously, is a challenge in the development of these systems. Agents are a good option for developing self-managed IoT systems due to their distributed nature, context-awareness and self-adaptation. Our goal is to enhance the development of IoT applications using agents and software product lines (SPL). Specifically, we propose to use Self-StarMASMAS, multi-agent system) agents and to define an SPL process using the Common Variability Language. In this contribution, we propose an SPL process for Self-StarMAS, paying particular attention to agents embedded in sensor motes. View Full-Text", "num_citations": "62\n", "authors": ["1136"]}
{"title": "Designing and Weaving Aspect-Oriented Executable UML Models.\n", "abstract": " Aspect-Oriented technologies, including Aspect-Oriented Modelling, provide a set of new constructs (eg, advices or pointcuts), that help to improve the modularisation of crosscutting concerns. However, these new constructions can make it more difficult to understand how a system works as a whole, once all design modules are composed together, because:(1) designers may not be familiar with the new aspect-oriented constructions; and/or (2) aspect-orientation may cause new problems, such as the handling of aspect interactions. A straightforward and simple solution to check how a system works is to execute it. UML and its Action Semantics provide the foundations for modelling and executing object-oriented software systems. This paper presents as UML 2.0 Profile which extends the UML and its Action Semantics for the construction of aspect-oriented executable models and also a model weaver which makes the execution of such models possible. Our approach is illustrated using an Online Book Store system taken from the literature.", "num_citations": "60\n", "authors": ["1136"]}
{"title": "FamiWare: a family of event-based middleware for ambient intelligence\n", "abstract": " Most of the middlewares currently available focus on one type of device (e.g., TinyOS sensors) and/or are designed with one requirement in mind (e.g., data management). This is an important limitation since most of the AmI applications work with several devices (such as sensors, smartphones or PDAs) and use a high diversity of low-level services. Ideally, the middleware should provide a single interface for accessing all those services able to work in heterogeneous devices. To address this issue, we propose a family of configurable middleware (FamiWare) with a really flexible architecture, instead of building a single version of a middleware with a rigid structure. In this work, we present the architecture of our middleware that can be configured, following a Software Product Line approach, in order to be instantiated in a particular device fulfilling specific application requirements. Furthermore, we evaluate\u00a0\u2026", "num_citations": "59\n", "authors": ["1136"]}
{"title": "Self-adaptation of mobile systems driven by the common variability language\n", "abstract": " The execution context in which pervasive systems or mobile computing run changes continually. Hence, applications for these systems require support for self-adaptation to the continual context changes. Most of the approaches for self-adaptive systems implement a reconfiguration service that receives as input the list of all possible configurations and the plans to switch between them. In this paper we present an alternative approach for the automatic generation of application configurations and the reconfiguration plans at runtime. With our approach, the generated configurations are optimal as regards different criteria, such as functionality or resource consumption (e.g. battery or memory). This is achieved by: (1) modelling architectural variability at design-time using the Common Variability Language (CVL), and (2) using a genetic algorithm that finds nearly-optimal configurations at run-time using the information\u00a0\u2026", "num_citations": "49\n", "authors": ["1136"]}
{"title": "Architectural evolution of FamiWare using cardinality-based feature models\n", "abstract": " ContextAmbient Intelligence systems domain is an outstanding example of modern systems that are in permanent evolution, as new devices, technologies or facilities are continuously appearing. This means it would be desirable to have a mechanism that helps with the propagation of evolution changes in deployed systems.ObjectiveWe present a software product line engineering process to manage the evolution of FamiWare, a family of middleware for ambient intelligence environments. This process drives the evolution of FamiWare middleware configurations using cardinality-based feature models, which are especially well suited to express the structural variability of ambient intelligence systems.MethodFamiWare uses cardinality-based feature models and clonable features to model the structural variability present in ambient intelligence systems, composed of a large variety of heterogeneous devices. Since\u00a0\u2026", "num_citations": "43\n", "authors": ["1136"]}
{"title": "Self-configuring agents for ambient assisted living applications\n", "abstract": " Ambient assisted living (AAL) is advocated as the technological solution that will enable the elderly population to maintain their independence for a longer period of time than would otherwise be the case. The inherently heterogeneous nature of AmI environments and special requirements of the elderly population pose new challenges for the design and implementation of AAL systems. Thus, the development of these systems demands a context-aware, open, scalable, and distributed software technology that incorporates both intelligent and autonomic reconfiguration techniques. In this contribution, we focus on the design and implementation challenges of an agent-based AAL system that incorporates self-configuring tasks, by means of applying autonomic computing to software agents\u2019 internal architecture. We use an agent-based system for tracking elderly people\u2019s activity using common commercially\u00a0\u2026", "num_citations": "41\n", "authors": ["1136"]}
{"title": "Run-time adaptation of mobile applications using genetic algorithms\n", "abstract": " Mobile applications run in environments where the context is continuously changing. Therefore, it is necessary to provide support for the run-time adaptation of these applications. This support is usually achieved by middleware platforms that offer a context-aware dynamic reconfiguration service. However, the main shortcoming of existing approaches is that both the list of possible configurations and the plans to adapt the application to a new configuration are usually specified at design-time. In this paper we present an approach that allows the automatic generation at run-time of application configurations and of reconfiguration plans. Moreover, the generated configurations are optimal regarding the provided functionality and, more importantly, without exceeding the available resources (e.g. battery). This is performed by: (1) having the information about the application variability available at runtime using feature\u00a0\u2026", "num_citations": "40\n", "authors": ["1136"]}
{"title": "Compass: Composition-centric mapping of aspectual requirements to architecture\n", "abstract": " Currently there are several approaches available for aspect-oriented requirements engineering and architecture design. However, the relationship between aspectual requirements and architectural aspects is poorly understood. This is because aspect-oriented requirements engineering approaches normally extend existing requirements engineering techniques. Although this provides backward compatibility, the composition semantics of the aspect-oriented extension are limited by those of the approaches being extended. Consequently, there is limited or no knowledge about how requirements-level aspects and their compositions map on to architecture-level aspects and architectural composition. In this paper, we present COMPASS, an approach that offers a systematic means to derive an aspect-oriented architecture from a given aspect-oriented requirements specification. COMPASS is centred on an\u00a0\u2026", "num_citations": "39\n", "authors": ["1136"]}
{"title": "Specifying aspect-oriented architectures in AO-ADL\n", "abstract": " ContextArchitecture description languages (ADLs) are a well-accepted approach to software architecture representation. The majority of well-known ADLs are defined by means of components and connectors. Architectural connectors are mainly used to model interactions among components, specifying component communication and coordination separately. However, there are other properties that cut across several components and also affect component interactions (e.g. security).ObjectiveIt seems reasonable therefore to model how such crosscutting properties affect component interactions as part of connectors.MethodUsing an aspect-oriented approach, the AO-ADL architecture description language extends the classical connector semantics with enough expressiveness to model the influences of such crosscutting properties on component interactions (defined as \u2018aspectual compositions\u2019 in connectors\u00a0\u2026", "num_citations": "38\n", "authors": ["1136"]}
{"title": "Autonomic computing driven by feature models and architecture in famiware\n", "abstract": " A wireless sensor network is an example of a system that should be able to adapt its sensor nodes to some context changes with minimum human intervention. This means that the architecture of the middleware for sensors must encapsulate a dynamic mechanism to allow reconfiguration. We present a novel approach to achieve self-adaptation based on software product lines and on the autonomic computing paradigm for the FamiWare middleware. FamiWare uses feature models to represent the potential middleware configurations at runtime. Each configuration is automatically mapped to the corresponding architectural representation of a specific middleware product. Following the autonomic computing principles, FamiWare defines a reconfiguration mechanism that switches from one architectural configuration to another by means of executing a plan. This is possible thanks to the loosely coupled\u00a0\u2026", "num_citations": "38\n", "authors": ["1136"]}
{"title": "Theme issue:\u201cUbiquitous computing and ambient intelligence\u201d\n", "abstract": " The ubiquitous computing (UC) idea envisioned by Weiser in 1991 has recently evolved to a more general paradigm known as Ambient Intelligence (AmI). This vision represents a new generation of user-centred computing environments aiming to find new ways to obtain a better integration of the information technology in everyday life devices and activities. AmI environments are integrated by several autonomous computational devices of modern life ranging from consumer electronics to mobile phones. Ideally, people in an AmI environment will not notice these devices, but they will benefit from the services they provide them. Such devices are aware of the people present in those environments by reacting to their gestures, actions and context. Recently, the interest in Ambient Intelligence Environments has grown considerably due to new challenges posed by society, giving place to new interesting associated\u00a0\u2026", "num_citations": "38\n", "authors": ["1136"]}
{"title": "An automatic process for weaving functional quality attributes using a software product line approach\n", "abstract": " Some quality attributes can be modelled using software components, and are normally known as Functional Quality Attributes (FQAs). Applications may require different FQAs, and each FQA (e.g., security) can be composed of many concerns (e.g., access control or authentication). They normally have dependencies between them and crosscut the system architecture. The goal of the work presented here is to provide the means for software architects to focus only on application functionality, without having to worry about FQAs. The idea is to model FQAs separately from application functionality following a Software Product Line (SPL) approach. By combining SPL and aspect-oriented mechanisms, we will define a generic process to model and automatically inject FQAs into the application without breaking the base architecture. We will provide and compare two implementations of our generic approach using\u00a0\u2026", "num_citations": "37\n", "authors": ["1136"]}
{"title": "A java framework for web-based multimedia and collaborative applications\n", "abstract": " MultiTel is a compositional framework for developing collaborative multimedia applications, and also designates a Web-based distributed platform that supports intercomponent communication. This article shows how compositional and coordination paradigms can be successfully applied to design cooperative Java applications with multimedia data exchange. The focus is on multimedia and network architectures, which define generic and specific components coordinated by connectors for resolving the resource management needs of collaborative applications. The MultiTel platform composes application components dynamically, providing mechanisms for building services with plug-and-play transport and multimedia resources.", "num_citations": "35\n", "authors": ["1136"]}
{"title": "Malaca: A component and aspect-oriented agent architecture\n", "abstract": " The production of maintainable and reusable agents depends largely on how well the agent architecture is modularized. Most commercial agent toolkits provide an Object-Oriented (OO) framework, whose agent architecture does not facilitate separate (re)use of the domain-specific functionality of an agent from other concerns. This paper presents Malaca, an agent architecture that combines the use of Component-based Software Engineering and Aspect-Oriented Software Development, both of which promote better modularization of the agent architecture while increase at the architectural level. Malaca supports the separate (re)use of the domain-specific functionality of an agent from other communication concerns, providing explicit support for the design and configuration of agent architectures and allows the development of agent-based software so that it is easy to understand, maintain and reuse.", "num_citations": "34\n", "authors": ["1136"]}
{"title": "An agent platform for self-configuring agents in the internet of things\n", "abstract": " The Internet of Things (IoT) envisions a world in which an heterogeneous set of devices are interconnected and collaborate using the Internet in order to provide valuable services for users. For the developer, the deployment of applications and services for the IoT requires managing an heterogeneous set of devices, communication protocols and underlying networks, in order to resolve interoperability issues due to the heterogeneity of the IoT nodes. Agent technology offers the necessary means to manage distribution and many other requirements of the IoT satisfactorily, however current agent platforms neither deal adequately with the heterogeneity of these environments, nor provide support for a self-configuring communication in Multi-Agent Systems. In this contribution we present Sol, an agent platform to develop IoT applications deployed as a family of self-configuring agents for heterogenous devices. We illustrate the benefits of our approach for several scenarios of an Intelligent Museum, and show its feasibility in terms of the response time of reconfiguration, and wireless data exchange, so important in the IoT.", "num_citations": "30\n", "authors": ["1136"]}
{"title": "Putting together web services and compositional software agents\n", "abstract": " Web services are the newest trend in information technology, being considered the most used alternative for building distributed open systems. Although currently Web services involve a single client-server access, the market is demanding cooperative Web services to provide a global solution. Recently software agents appear as a good option that can cope with the control of Web services composition, obtaining an integral solution. This paper presents an approach to integrate Web services and software agent technologies. The basis of our approach is the use of the component technology for the development of adaptive software agents. Our compositional software agent performs automated software composition based on the flexibility provided by the component orientation, which makes possible to plug Web services into the agent functionality and compose them during the agent interaction.", "num_citations": "29\n", "authors": ["1136"]}
{"title": "The Sol agent platform: Enabling group communication and interoperability of self-configuring agents in the Internet of Things\n", "abstract": " The Internet of Things (IoT for short) envisions a world in which a set of heterogeneous devices are interconnected and using the Internet, work together to provide valuable services for users. The deployment of applications in the IoT requires managing a high diversity of devices, achieving their communication through different communication protocols, dealing with the incompatibilities between underlying networks, even at runtime. So, the main goal of the IoT is to cope with these interoperability issues adequately. Agent technology offers the necessary means to manage distribution and many other requirements of the IoT satisfactorily, however current agent platforms neither deal adequately with the heterogeneity of these environments, nor provide explicit support for the dissemination of data to a group of related IoT nodes. In addition, current agent architectures are normally implemented and deployed for a\u00a0\u2026", "num_citations": "28\n", "authors": ["1136"]}
{"title": "Autonomic wireless sensor networks: a systematic literature review\n", "abstract": " Autonomic computing (AC) is a promising approach to meet basic requirements in the design of wireless sensor networks (WSNs), and its principles can be applied to efficiently manage nodes operation and optimize network resources. Middleware for WSNs supports the implementation and basic operation of such networks. In this systematic literature review (SLR) we aim to provide an overview of existing WSN middleware systems that address autonomic properties. The main goal is to identify which development approaches of AC are used for designing WSN middleware system, which allow the self-management of WSN. Another goal is finding out which interactions and behavior can be automated in WSN components. We drew the following main conclusions from the SLR results: (i) the selected studies address WSN concerns according to the self- properties of AC, namely, self-configuration, self-healing, self-optimization, and self-protection; (ii) the selected studies use different approaches for managing the dynamic behavior of middleware systems for WSN, such as policy-based reasoning, context-based reasoning, feedback control loops, mobile agents, model transformations, and code generation. Finally, we identified a lack of comprehensive system architecture designs that support the autonomy of sensor networking.", "num_citations": "28\n", "authors": ["1136"]}
{"title": "Creating self-adapting mobile systems with dynamic software product lines\n", "abstract": " Mobile systems must cope with continuous context changes, making them an ideal fit with dynamic software product lines (DSPLs), which enable product adaptation at run time. In this DSPL-based process, devices upload only a small reconfiguration plan rather than the entire variability model, and providers manage diversity without disrupting the base model.", "num_citations": "26\n", "authors": ["1136"]}
{"title": "Software product line engineering: a practical experience\n", "abstract": " The lack of mature tool support is one of the main reasons that make the industry to be reluctant to adopt Software Product Line (SPL) approaches. A number of systematic literature reviews exist that identify the main characteristics offered by existing tools and the SPL phases in which they can be applied. However, these reviews do not really help to understand if those tools are offering what is really needed to apply SPLs to complex projects. These studies are mainly based on information extracted from the tool documentation or published papers. In this paper, we follow a different approach, in which we firstly identify those characteristics that are currently essential for the development of an SPL, and secondly analyze whether the tools provide or not support for those characteristics. We focus on those tools that satisfy certain selection criteria (eg, they can be downloaded and are ready to be used). The paper\u00a0\u2026", "num_citations": "25\n", "authors": ["1136"]}
{"title": "Composition and self-adaptation of service-based systems with feature models\n", "abstract": " The adoption of mechanisms for reusing software in pervasive systems has not yet become standard practice. This is because the use of pre-existing software requires the selection, composition and adaptation of prefabricated software parts, as well as the management of some complex problems such as guaranteeing high levels of efficiency and safety in critical domains. In addition to the wide variety of services, pervasive systems are composed of many networked heterogeneous devices with embedded software. In this work, we promote the safe reuse of services in service-based systems using two complementary technologies, Service-Oriented Architecture and Software Product Lines. In order to do this, we extend both the service discovery and composition processes defined in the DAMASCo framework, which currently does not deal with the service variability that constitutes pervasive systems. We\u00a0\u2026", "num_citations": "25\n", "authors": ["1136"]}
{"title": "Software product line evolution with cardinality-based feature models\n", "abstract": " Feature models are widely used for modelling variability present in a Software Product Line family. We propose using cardinality-based feature models and clonable features to model and manage the evolution of the structural variability present in pervasive systems, composed by a large variety of heterogeneous devices. The use of clonable features increases the expressiveness of feature models, but also greatly increases the complexity of the resulting configurations. So, supporting the evolution of product configurations becomes an intractable task to do it manually. In this paper, we propose a model driven development process to propagate changes made in an evolved feature model, into existing configurations. Furthermore, our process allows us to calculate the effort needed to perform the evolution changes in the customized products. To do this, we have defined two operators, one to calculate the\u00a0\u2026", "num_citations": "25\n", "authors": ["1136"]}
{"title": "Feature-Oriented Model-Driven Software Product Lines: The TENTE Approach.\n", "abstract": " In recent years, modern techniques for advanced separation of concerns and Model-Driven Development (MDD) have provided new means for improving the current methods of Software Product Line (SPL) Engineering. Mechanisms such as family polymorphism and mixin composition can be used to improve the separation and composition of features of an SPL. Using MDD repetitive, laborious and time consuming tasks of SPL processes can be automated. Nevertheless, there is a general lack of SPL processes that integrate advanced mechanisms for separation of concerns with MDD techniques. This paper presents an innovative process, called TENTE, which combines both technologies. The result is a model-driven process that maintains the separation of features both at the architectural design and implementation stages, improving separation of variants; at the same time repetitive, laborious and time consuming tasks are automated.", "num_citations": "25\n", "authors": ["1136"]}
{"title": "Configuring a context-aware middleware for wireless sensor networks\n", "abstract": " In the Future Internet, applications based on Wireless Sensor Networks will have to support reconfiguration with minimum human intervention, depending on dynamic context changes in their environment. These situations create a need for building these applications as adaptive software and including techniques that allow the context acquisition and decisions about adaptation. However, contexts use to be made up of complex information acquired from heterogeneous devices and user characteristics, making them difficult to manage. So, instead of building context-aware applications from scratch, we propose to use FamiWare, a family of middleware for Ambient Intelligence specifically designed to be aware of contexts in sensor and smartphone devices. It provides both, several monitoring services to acquire contexts from devices and users, and a context-awareness service to analyze and detect context changes. However, the current version of FamiWare does not allow the automatic incorporation related to the management of new contexts into the FamiWare family. To overcome this shortcoming, in this work, we first present how to model the context using a metamodel to define the contexts that must to be taken into account in an instantiation of FamiWare for a certain Ambient Intelligence system. Then, to configure a new context-aware version of FamiWare and to generate code ready-to-install within heterogeneous devices, we define a mapping that automatically transforms metamodel elements defining contexts into elements of the FamiWare family, and we also use the FamiWare configuration process to customize the new context-aware\u00a0\u2026", "num_citations": "24\n", "authors": ["1136"]}
{"title": "An aspect-oriented ambient intelligence middleware platform\n", "abstract": " Currently, the interest in Ambient Intelligence (or AmI) has increased exponentially due to the widespread use of portable devices. Users demand more and more functionality from these devices, especially in order to perform collaborative tasks and interchange information. As a result, this technology proposes new challenges that must be addressed by both the hardware manufacturers and Software Engineers. The first challenge is to provide a middleware platform providing specific AmI services like communication or device discovery and able to cope with several challenges posed by AmI applications. One of these challenges is to manage heterogeneity of devices that are present in AmI environments in a transparent way, and in particular to manage the evolution of such devices without breaking the code of already developed applications. Moreover, an AmI middleware platform has to support the evolution of\u00a0\u2026", "num_citations": "24\n", "authors": ["1136"]}
{"title": "Collaborative virtual environment development: An aspect-oriented approach\n", "abstract": " Nowadays, the interest in collaborative environments has increased considerably, probably due to current technological advances, especially in Internet computing. However, the lack of a standard reference architecture for the development of these systems makes the development of useful collaborative environments, that can be used in real work, difficult. Our goal is the development of a framework for the construction of collaborative virtual environments. We consider aspect-oriented programming to be very suitable for both the design and implementation of these systems. Thus, we present an aspect-oriented approach for the development of collaborative virtual environments.", "num_citations": "24\n", "authors": ["1136"]}
{"title": "Variabilities of wireless and actuators sensor network middleware for ambient assisted living\n", "abstract": " Wireless and Actuators Sensor Networks (WSANs) are one of the key technologies for supporting many Ambient Assisted Living applications. WSAN applications development poses new challenges like dealing with diverse low-level programming abstractions and the heterogeneity of nodes with critical resource limitations. Middleware platforms can hide from final developers the complexity of managing different types of hardware and software variability by applying a Software Product Line approach. This paper proposes a family of middleware for WSANs that can be customized according to the constraints imposed by the particular device, network and applications.", "num_citations": "23\n", "authors": ["1136"]}
{"title": "Uniform random sampling product configurations of feature models that have numerical features\n", "abstract": " Analyses of Software Product Lines (SPLs) rely on automated solvers to navigate complex dependencies among features and find legal configurations. Often these analyses do not support numerical features with constraints because propositional formulas use only Boolean variables. Some automated solvers can represent numerical features natively, but are limited in their ability to count and Uniform Random Sample (URS) configurations, which are key operations to derive unbiased statistics on configuration spaces.", "num_citations": "22\n", "authors": ["1136"]}
{"title": "Variability models for generating efficient configurations of functional quality attributes\n", "abstract": " Context: Quality attributes play a critical role in the architecture elicitation phase. Software Sustainability and energy efficiency is becoming a critical quality attribute that can be used as a selection criteria to choose from among different design or implementation alternatives. Energy efficiency usually competes with other non-functional requirements, like for instance, performance.Objective: This paper presents a process that helps developers to automatically generate optimum configurations of functional quality attributes in terms of energy efficiency and performance. Functional quality attributes refer to the behavioral properties that need to be incorporated inside a software architecture to fulfill a particular quality attribute (e.g., encryption and authentication for the security quality attribute, logging for the usability quality attribute).Method: Quality attributes are characterized to identify their design and implementation\u00a0\u2026", "num_citations": "22\n", "authors": ["1136"]}
{"title": "Development of Ambient Intelligence Applications using Components and Aspects.\n", "abstract": " In recent times, interest in Ambient Intelligence (or AmI) has increased considerably. One of the main challenges in the development of these systems is to improve their modularization in order to achieve a high degree of reusability, adaptability and extensibility. This will help us to deal with the heterogeneity and evolution of the environments in which AmI devices exit. An example would be to easily adapt existing applications when new communication technologies appear. Current approaches apply component technologies to achieve these goals, but more should be done. Our research focuses on applying aspect technologies to components in order to improve AmI application modularization. We present the benefits of aspect technologies with regard to reusability and adaptability, by showing the limitations of PCOM, a component-based AmI middleware platform. We will show a study comparing DAOPAmI, our\u00a0\u2026", "num_citations": "22\n", "authors": ["1136"]}
{"title": "Training compositional agents in negotiation protocols using ontologies\n", "abstract": " The Internet facilitates the creation of new markets, which has motivated the development of new technologies for e-commerce. The increasing number of e-markets poses a big challenge to designers of e-commerce services. Agent-based applications are the most appropriate for merchandising because software agents are suitable for automating tedious tasks that the user may have to perform, such as, searching for goods. Furthermore, software agents are able to negotiate on the user's behalf according to negotiation protocols. However, new challenges arise from the evolution of negotiation mechanisms. The lack of protocol interoperability at the application level is preventing the evolution of negotiation since the set of interaction protocols supported by a software agent is usually fixed once the agent is created, and any protocol adaptation needs agent replacement. Thus, new software technologies for the\u00a0\u2026", "num_citations": "22\n", "authors": ["1136"]}
{"title": "Context-aware energy-efficient applications for cyber-physical systems\n", "abstract": " Software systems have a strong impact on the energy consumption of the hardware they use. This is especially important for cyber-physical systems where power consumption strongly influences the battery life. For this reason, software developers should be more aware of the energy consumed by their systems. Moreover, software systems should be developed to adapt their behavior to minimize the energy consumed during their execution. This can be done by monitoring the usage context of the system and having runtime support to react to those changes that impact the energy footprint negatively. Although both the hardware and the software parts of cyber-physical systems can be adapted to reduce its energy consumption, this paper focuses on software adaptation. Concretely, the paper illustrates how to address the problem of developing context-aware energy-efficient applications using a Green Eco-Assistant\u00a0\u2026", "num_citations": "21\n", "authors": ["1136"]}
{"title": "Deriving detailed design models from an aspect-oriented ADL using MDD\n", "abstract": " Software architects can separate crosscutting concerns more appropriately by using an aspect-oriented ADL, concretely AO-ADL. This paper illustrates how aspect-orientation and model-driven development technologies can be used to enhance the system design phase; by automatically deriving detailed designs that take into account the \u201caspects\u201d identified at the architectural level. Specifically, we have defined model-to-model transformation rules to automatically generate either aspect-oriented or object-oriented UML 2.0 models, closing the gap between ADLs and the notations used at the detailed design phase. By using AO-ADL it is possible to specify separately crosscutting concerns and base functionality. Another advantage of using AO-ADL is that it allows the specification of parameterizable architectures, promoting the definition of architectural templates. AO-ADL, then, enforces the specification of\u00a0\u2026", "num_citations": "20\n", "authors": ["1136"]}
{"title": "A model driven engineering process of platform neutral agents for ambient intelligence devices\n", "abstract": " Ambient intelligence (AmI) systems are now considered a promising approach to assist people in their daily life. AmI proposes the development of context aware systems equipped with devices that can recognize your context and act accordingly. Agents provide an effective way to develop such systems since agents are reactive, proactive and exhibit an intelligent and autonomous behavior. However, current agent approaches do not adequately fulfill the requirements posed by AmI systems. From a modeling point of view, the aim should be to help in the design by providing adequate tools that assist in the development of important properties of AmI systems, such as context-awareness; and from an implementation point of view, agent technologies must be adapted to the diversity of AmI devices and communication technologies. As a solution to these issues we propose a Model driven engineering process\u00a0\u2026", "num_citations": "19\n", "authors": ["1136"]}
{"title": "Supporting the development of CAM/DAOP applications: an integrated development process\n", "abstract": " The increasing complexity of large\u2010scale distributed applications is driving the Software Engineering community to adopt new software technologies for the development of distributed systems. In this sense, the emergence of component\u2010based software engineering represents a significant advance towards assembling applications by plugging in pre\u2010fabricated components. Additionally, the principle of \u2018advanced\u2019 separation of concerns is nowadays widely applied to improve modularity, reusability and adaptability of software components. In this way, the aspect\u2010oriented software development paradigm separates into a new dimension, named aspect, those properties that crosscut the system \u2018objects\u2019 or \u2018components\u2019, reducing their dependencies. However, the development of software based on the composition of components and aspects is still in its early stages. Part of the reason for this is the lack of well\u00a0\u2026", "num_citations": "18\n", "authors": ["1136"]}
{"title": "Dynamic reconfiguration of security policies in wireless sensor networks\n", "abstract": " Providing security and privacy to wireless sensor nodes (WSNs) is very challenging, due to the heterogeneity of sensor nodes and their limited capabilities in terms of energy, processing power and memory. The applications for these systems run in a myriad of sensors with different low-level programming abstractions, limited capabilities and different routing protocols. This means that applications for WSNs need mechanisms for self-adaptation and for self-protection based on the dynamic adaptation of the algorithms used to provide security. Dynamic software product lines (DSPLs) allow managing both variability and dynamic software adaptation, so they can be considered a key technology in successfully developing self-protected WSN applications. In this paper, we propose a self-protection solution for WSNs based on the combination of the INTER-TRUST security framework (a solution for the dynamic negotiation and deployment of security policies) and the FamiWare middleware (a DSPL approach to automatically configure and reconfigure instances of a middleware for WSNs). We evaluate our approach using a case study from the intelligent transportation system domain. View Full-Text", "num_citations": "17\n", "authors": ["1136"]}
{"title": "Security aspects: a framework for enforcement of security policies using AOP\n", "abstract": " The secure deployment of an application requires the definition of the security properties that it should meet. This is typically performed on the basis of a security policy, which aims at providing a concrete view of security requirements to the application developer. In this paper, we propose a framework to manage security policies that could be associated with applications based on an AOP approach. The paper shows mainly how different aspects types can be generated using the knowledge defined within the security policies. Besides, it proposes an approach to weave the generated aspects within application code.", "num_citations": "17\n", "authors": ["1136"]}
{"title": "Configuration Process of a Software Product Line for AmI Middleware.\n", "abstract": " Developing Ambient Intelligence applications is a very complex task since it implies dealing with low-level software and hardware resources. The use of a middleware platform may alleviate this task by providing a set of high-level and platform-independent services to these kinds of applications. Nevertheless, the tendency is that the middleware deployed in each device has a flat and homogeneous architecture, although these devices and the requirements of intelligence environments are heterogeneous. This implies the middleware software deployed in each device normally contains more functionality than strictly required, leading to waste resources so scarce in lightweight devices. But the configuration and deployment of a minimal middleware customized to a target platform is a complex task, due to the diversity of hardware and software present in devices and the variable requirements of ambient intelligence\u00a0\u2026", "num_citations": "17\n", "authors": ["1136"]}
{"title": "A feature model of an aspect-oriented middleware family for pervasive systems\n", "abstract": " Pervasive applications will be naturally integrated as part of our environment. On the one hand, they will be deployed into a diversity of small devices and appliances, and on the other hand, they must be aware of highly changing execution contexts. Therefore pervasive computing requires the definition of advance mechanisms that support,(1) the deployment of pervasive applications through various devices with different capacities, and (2) the runtime reconfiguration for dealing with context changes. A software product line approach would be very useful to express the different requirements of devices in terms of commonalities and variabilities of a middleware platforms family. A feature model for pervasive applications will help both to deploy various configurations of the middleware tailored to each device, and to support the dynamic reconfiguration according to context. But, several crosscutting variable features\u00a0\u2026", "num_citations": "17\n", "authors": ["1136"]}
{"title": "Towards the architectural definition of the health watcher system with AO-ADL\n", "abstract": " AO-ADL is an aspect-oriented architecture description language. The main contributions of AO-ADL are two. First contribution is the definition of a symmetric composition model, where functional and non-functional concerns are modeled by the same architectural block. Second contribution is the extension of the semantic of connectors with aspectual composition information. In this paper we describe the software architecture of the Health Watcher system using AO-ADL. We present a subset of the functional and extra-functional concerns identified for this system, as well as the compositions among the components modeling them. We specially focus on aspectual compositions to illustrate how the extensions that AO-ADL introduces into connectors provide appropriate support for representing separation of concerns at the architectural level.", "num_citations": "17\n", "authors": ["1136"]}
{"title": "Run-time support to manage architectural variability specified with cvl\n", "abstract": " The execution context in which pervasive systems or mobile computing run changes continuously. Hence, applications for these systems should be adapted at run-time according to the current context. In order to implement a context-aware dynamic reconfiguration service, most approaches usually require to model at design-time both the list of all possible configurations and the plans to switch among them. In this paper we present an alternative approach for the automatic run-time generation of application configurations and the reconfiguration plans. The generated configurations are optimal regarding different criteria, such as functionality or resource consumption (e.g. battery or memory). This is achieved by: (1) modelling architectural variability at design-time using Common Variability Language (CVL), and (2) using a genetic algorithm that finds at run-time nearly-optimal configurations using the\u00a0\u2026", "num_citations": "16\n", "authors": ["1136"]}
{"title": "Run-time coordination of components: Design patterns vs. Component & aspect based platforms\n", "abstract": " Describing software architectures in terms of the interaction relationships between components brings us nearer to a compositional view. Although everybody agrees in that component oriented design represents a significant advance towards assembling systems by plugging off-the-shelf components (COTS), reducing application complexity, there is a lack of programming languages that support components and composition rules as language primitives.As an alternative, component platforms (CPs)(eg CORBA, .NET, EJB,\u2026) provide a component abstraction and a composition mechanism, more or less dynamic, that support the coordination of distributed components. However, they do not care about the global configuration of the application, that is, the application architecture definition is not explicitly stated anywhere, but usually spread throughout component implementation modules.", "num_citations": "16\n", "authors": ["1136"]}
{"title": "imuseuma: An agent-based context-aware intelligent museum system\n", "abstract": " Currently, museums provide their visitors with interactive tour guide applications that can be installed in mobile devices and provide timely tailor-made multimedia information about exhibits on display. In this paper, we argue that mobile devices not only could provide help to visitors, but also to museum staff. Our goal is to integrate, within the same system, multimedia tour guides with the management facilities required by museums. In this paper, we present iMuseumA (intelligent museum with agents), a mobile-based solution to customize visits and perform context-aware management tasks. iMuseumA follows an agent-based approach, which makes it possible to interact easily with the museum environment and make decisions based on its current status. This system is currently deployed in the Museum of Informatics at the Informatics School of the University of M\u00e1laga, and its main contributions are:(i) a mobile application that provides management facilities to museum staff by means of sensing and processing environmental data;(ii) providing an integrated solution for visitors, tour guides and museum staff that allows coordination and communication enrichment among different groups of users;(iii) using and benefiting from group communication for heterogeneous groups of users that can be created on demand. View Full-Text", "num_citations": "15\n", "authors": ["1136"]}
{"title": "Quality attributes and variability in AO-ADL software architectures\n", "abstract": " The quality attributes of a system are determined, to a large extend, by the decisions taken early on in the development process, noticeably affecting the specification of its software architecture. This is especially true for attributes such as security, usability, context awareness, etc., that have strong functional implications--ie they require the incorporation of Specific functionality to the application architecture in order to satisfy them. Our approach models functional quality attributes considering that:(1) they are complex enough so as to be modeled by a large set of related concerns and the compositions among them. For instance, security includes authentication, access control, privacy, encryption, auditing, etc;(2) the same quality attributes are required by several applications, and thus should be modeled as separate, ready-to-use (re) usable architectural solutions that final applications can incorporate without\" being\u00a0\u2026", "num_citations": "15\n", "authors": ["1136"]}
{"title": "Towards an aspect-oriented framework in the design of collaborative virtual environments\n", "abstract": " The increasing complexity in the development of distributed systems has promoted the appearance of new software technologies that complements compositional framework technology providing a high degree of separation of concerns. One of these approaches is aspect-oriented-programming that introduces a new entity, the aspect, to model those features that cut across different components in the system, increasing its extensibility and configurability. Our goal is the application of this new technology to develop an aspect-oriented application framework to construct highly reusable collaborative virtual environments in short time.", "num_citations": "15\n", "authors": ["1136"]}
{"title": "Clinicappchain: A low-cost blockchain hyperledger solution for healthcare\n", "abstract": " Unified access to anonymous records through a trustworthy system is needed in our increasingly globalised world that still suffers from profoundly disconnected health care services. Emergencies are followed by redundant, costly and slow medical examinations without a global health data sharing mechanism. We establish the foundations of a decentralised healthcare ledger where patients decide what to share, with who, and with minimal costs. We review the state-of-the-art of transparent, auditable and interactive Blockchain-based healthcare studies, developing ClinicAppChain. Our solution features authentication, confidentiality and permissioned data sharing, considering the EU data protection regulation of 2018. ClinicAppChain is a cross-platform low-cost Blockchain prototype that empowers patients, hospitals, researchers, pharmaceuticals and insurance industries without crypto-currencies involved\u00a0\u2026", "num_citations": "14\n", "authors": ["1136"]}
{"title": "An aspect-oriented model transformation to weave security using CVL\n", "abstract": " In this paper, we combine the Common Variability Language (CVL) and the ATL Transformation Language to customize and incorporate a generic security model into any application that requires security. Security spans a large set of concerns such as integrity, encryption or authentication, among others, and each concern needs to be incorporated into the base application in a different way and at different points of the application. We propose a set of weaving patterns using model transformations in ATL to automatically weave the security concerns with the base application in an aspect-oriented way. Since different applications require different security requirements, the security model needs to be customized before its incorporation into the application. We resolve the variability of the security properties and implement the weaving process in CVL. We use an e-voting case study to illustrate our proposal using the\u00a0\u2026", "num_citations": "14\n", "authors": ["1136"]}
{"title": "Energy-aware environments for the development of green applications for cyber\u2013physical systems\n", "abstract": " Cyber\u2013physical Systems are usually composed by a myriad of battery-powered devices. Therefore, developers should pay attention to the energy consumption of the global system so as not to compromise the system lifetime. There are plenty of experimental studies that give hints about how to reduce the energy consumption. However, this knowledge is not readily available for the software developers of cyber\u2013physical systems. They normally use software development environments that do not provide useful advice about the energy consumption of the software solutions being implemented. In this paper, we propose a Developer Eco-Assistant to integrate the experimental results obtained by researchers into the software development environments, so as to increase the energy-awareness of cyber\u2013physical systems developers. In our solution, the energy information is obtained in real-time from a repository of\u00a0\u2026", "num_citations": "13\n", "authors": ["1136"]}
{"title": "Extending the common variability language (CVL) engine: A practical tool\n", "abstract": " The Common Variability Language (CVL) has become a reference in the specification and resolution of variability in the last few years. Despite the multiple advantages of CVL (orthogonal variability, architecture variability resolution, MOF-compliant, standard proposed,...), several approaches require extending and/or modifying the CVL approach in different ways in order to fulfill the industrial needs for variability modeling in Software Product Lines. However, the community lacks a tool that would enable proposed extensions and the integration of novel approaches to be put into practice. Existing tools that provide support for CVL are incomplete or are mainly focused on the variability model's editor, instead of executing the resolution of the variability over the base models. Moreover, there is no API that allows direct interaction with the CVL engine to extend or use it in an independent application. In this paper, we\u00a0\u2026", "num_citations": "13\n", "authors": ["1136"]}
{"title": "SPL-TQSSS: a software product line approach for stateful service selection\n", "abstract": " An important problem in Web services composition process is optimal selection of services meeting the user functional requirements (tasks of a workflow) and ensuring a reliable execution of the composition. Therefore, non-functional properties of services such as their transactional behavior as well as their Quality of Service (QoS) must be considered. In this context, a challenging objective is to assist users in integrating on the fly the operations of services to realize their required tasks by further meeting their transactional and QoS preferences. Towards this purpose, we present SPLTQSSS, a Software Product Line based approach for Stateful (conversation-based) Service Selection problem with Transactional and QoS support. SPL-TQSSS considers the set of functionally-equivalent services as part of a service family by modeling their internal operations using Feature Models. Then, SPL-TQSSS chooses the best\u00a0\u2026", "num_citations": "13\n", "authors": ["1136"]}
{"title": "Relating ao requirements to ao architecture\n", "abstract": " We have identified a gap in relating AO requirements engineering and AO architecture design: a large amount of important information generated during the mapping of requirements to architecture is lost in the final representation of the architecture. In this work our primary aim is to outline a traceability schema that will provide support for recording such information generated during the mapping process. Here we focus on the mapping from requirements to architecture though the schema could be used for relating other development stages.", "num_citations": "13\n", "authors": ["1136"]}
{"title": "A component-based approach for interoperability across FIPA-compliant platforms\n", "abstract": " Software Agents are becoming one of the most important approaches for developing open distributed systems. Interoperability is a critical issue to develop open and flexible agent-based applications, as it would make reusability possible across heterogeneous agent systems. Agent interoperability can be achieved through the use of FIPA standardized specifications. Although most major FIPA-compliant platforms have reached a consensus on the different alternative specifications to interoperate, for other platforms this would remain an open issue. For the latter cases FIPA suggests the use of gateways, but sometimes it is not possible to extend or provide the basic gateway for all cases. This paper presents an approach for developing heterogeneous agent-based systems regardless of the FIPA-compliant agent platforms involved. The basis of our proposal is the use of component technology for the\u00a0\u2026", "num_citations": "13\n", "authors": ["1136"]}
{"title": "Coordinating distributed components on the web: an integrated development environment\n", "abstract": " Component\u2010based software has become an important alternative for building applications, especially distributed ones, so it is essential to define new software development processes based on components. Within this trend, we propose a complete framework\u2010based method which guides application developers in exactly determining application requirements. It also guides how to build them using the compositional framework MultiTEL from the collaborative and multimedia applications domain. Although many multimedia frameworks are available, none of them offer a design methodology for understanding and adapting the framework classes or components to each derived application. By applying an architecture description language (ADL) we are able to document the framework and help designers in: constructing; reusing, and connecting components; extending the framework architecture; and adding\u00a0\u2026", "num_citations": "13\n", "authors": ["1136"]}
{"title": "Using models at runtime to adapt self-managed agents for the IoT\n", "abstract": " One of the most important challenges of this decade is the Internet of Things (IoT) that pursues the integration of real-world objects in the virtual world of the Internet. One property that characterises IoT systems is that they have to react to variable and continuous changes. This means that IoT systems need to work as self-managed systems to effectively manage context changes. The autonomy property inherent to software agents makes them a suitable choice for developing self-managed IoT systems. By embedding agents in the devices that compose the IoT is possible to realize a decentralized system with self-management capacities. However, in this scenario new problems arise. Firstly, current agent development approaches lack mechanisms to deal with the heterogeneity present in the IoT domain. Secondly, agents must simultaneously deal with potentially conflicting changes in their behaviour\u00a0\u2026", "num_citations": "12\n", "authors": ["1136"]}
{"title": "Runtime enforcement of dynamic security policies\n", "abstract": " The security policies of an application can change at runtime due to several reasons, as for example the changes on the user preferences, the lack of enough resources in mobile environments or the negotiation of security levels between the interacting parties. As these security policies change, the application code that copes with the security functionalities should be adapted in order to enforce at runtime the changing security policies. In this paper we present the design, implementation and evaluation of a runtime security adaptation service. This service is based on the combination of autonomic computing and aspect-oriented programming, where the security functionalities are implemented as aspects that are dynamically configured, deployed or un-deployed by generating and executing a security adaptation plan. This service is part of the INTER-TRUST framework, a complete solution for the definition\u00a0\u2026", "num_citations": "12\n", "authors": ["1136"]}
{"title": "Injecting quality attributes into software architectures with the common variability language\n", "abstract": " Quality attributes that add new behavior to the functional software architecture are known as functional quality attributes (FQAs). These FQAs are applied to pieces of software from small components to entire systems, usually crosscutting some of them. Due to this crosscutting nature, modeling them separately from the base application has many advantages (eg reusability, less coupled architectures). However, different applications may require different configurations of an FQA (eg different levels of security), so we need a language that:(i) easily expresses the variability of the FQAs at the architectural level; and that (ii) also facilitates the automatic generation of architectural configurations with custom-made FQAs. In this sense, the Common Variability Language (CVL) is extremely suited for use at the architectural level, not requiring the use of a particular architectural language to model base functional requirements\u00a0\u2026", "num_citations": "12\n", "authors": ["1136"]}
{"title": "Self-management of ambient intelligence systems: a pure agent-based approach.\n", "abstract": " Ambient Intelligence systems (AmI) are normally composed of networked heterogeneous devices with critical resource limitations. One of the biggest requirements of AmI systems is that they should be capable of self-management in order to adapt their behavior and resources to environmental conditions and variable device resources. Autonomous agents are a good option to endow AmI systems with self-managing capabilities, but current agent platform implementations do not adequately address the heterogeneity requirements of AmI systems, given the impossibility until now of producing pure agent-based solutions. In this paper we present a pure agent-based solution for self-managing AmI systems, with particular emphasis on defining a working solution considering the diversity of devices and communication protocols through which AmI devices must interoperate.", "num_citations": "12\n", "authors": ["1136"]}
{"title": "HADAS and web services: Eco-efficiency assistant and repository use case evaluation\n", "abstract": " The interest in \u201cgreen\u201d Software Engineering, i.e., conscious energy consumption, is relatively recent. Its objective is to make software developers aware of the influence of their design and implementation decisions on the energy consumption of the final product. So far, many experimental results have been published comparing the energy consumption of several alternative solutions, which proven that consumption can be reduced by up to 70%. Although these results are freely available, it is not easy for a developer to apply this knowledge to their applications. Consequently, in this paper we present the HADAS eco-assistant, whose usefulness is: (i) the researchers will store their results in a freely available repository; (ii) developers will be able to reason and get the most energy-efficient configurations that meet their requirements. We will focus on showing the main elements of our proposal and how it applies to\u00a0\u2026", "num_citations": "11\n", "authors": ["1136"]}
{"title": "Product line architecture for automatic evolution of multi-tenant applications\n", "abstract": " Cloud computing is becoming the predominant mechanism to seamlessly deploy applications with special requirements such as massive storage sharing or load balancing, usually provided as services by cloud platforms. A developer can improve the application's delivery and productivity by following a multi tenancy approach, where variants of the same application can be quickly customized to the necessities of each tenant. However, managing the inherent variability existing in multi-tenant applications and, even more importantly, managing the evolution of a multi-tenant application with hundreds of tenants and thousands of different valid architectural configurations can become intractable if performed manually. In this paper we propose a product line architecture approach in which: (1) we use cardinality-based variability models to model each tenant as a clonable feature, (2) we automate the process of evolving\u00a0\u2026", "num_citations": "11\n", "authors": ["1136"]}
{"title": "Towards a CVL process to develop agents for the IoT\n", "abstract": " One of the most important challenges of this decade is the Internet of Things (IoT) or the integration of devices from the real world in the Internet. IoT systems are usually composed of heterogenous and interconnected lightweight devices that support applications that are subject to change in their external environment and in the functioning of these devices. The management of the variability of these changes, autonomously, is a challenge in the development of these systems. Agents are a good option to develop IoT systems due to their distributed nature, context-awareness and self-adaptation. Our goal is to enhance the development of IoT applications using agents and advanced software techniques like Variability Modeling. Specifically, we propose to use Self-StarMAS agents and CVL. In this contribution, we propose a CVL process for the development of Self-StarMAS agents.", "num_citations": "11\n", "authors": ["1136"]}
{"title": "An ambient intelligent language for dynamic adaptation\n", "abstract": " Currently we face the so-called Ambient Intelligent era. Soon, we will be surrounded by hundreds of electronical devices with computational capabilities executing applications that will provide us with new facilities and ways of interacting with the real world. These applications must be able to evolve over time and adapt themselves to both changes in the application functionality and changes in hardware technology. Additionally, these ambient intelligence applications are characterized by their ability to provide a quick and dynamic response to changes in the real world environment. This dynamic adaptation makes the applications evolvable, intelligent and useful to the user. In this paper we will present an overview of the problems and limitations that we face when developing ambient intelligence applications. Specifically, we propose to model those concerns that may be affected by evolution and adaptation changes as aspects supported by a component and aspect platform named DAOPAmI. In this paper we are going to focus in how to contribute or even \u201cprogram\u201d AmI specific aspects using a domain specific language.", "num_citations": "11\n", "authors": ["1136"]}
{"title": "What do software developers need to know to build secure energy-efficient Android applications?\n", "abstract": " Green computing is a growing trend in computing, pursuing the goal of helping software developers to be more aware and produce energy-efficient software. This is especially relevant for battery-powered mobile applications, where a minimal energy consumption is desired to both mitigate the greenhouse effect and extend the battery lifetime. In this paper, we analyze the energy consumption and execution time of cryptographic primitives in Android devices. Our ultimate goal is to help Android application developers, especially those who are not experts in security, to choose the most energy-efficient cryptographic algorithms considering different security providers and security transformations. Information to make a tradeoff between energy and time consumption is also provided, being especially useful when the differences in energy consumption of different alternatives are not so significant. We have conducted our\u00a0\u2026", "num_citations": "10\n", "authors": ["1136"]}
{"title": "Using AOSD and MDD to enhance the architectural design phase\n", "abstract": " This paper describes an MDD process that enhances the architectural design phase by closing the gap between ADLs and the notations used at the detailed design phase. We have defined model-to-model transformation rules to automatically generate either aspect-oriented or object-oriented UML 2.0 models from high-level architectural specifications specified using AO-ADL. These rules have been integrated in the AO-ADL Tool Suite, providing support to automatically generate a skeleton of the detailed design that preserves the crosscutting and the non-crosscutting functionalities identified at the architecture level.", "num_citations": "10\n", "authors": ["1136"]}
{"title": "A middleware family for VANETs\n", "abstract": " Vehicular Ad-hoc Networks are an important application domain of ubiquitous computing and Wireless Sensor Networks are a key technology for enabling such applications. The development of ubiquitous applications poses challenges as dealing with the low-level programming abstractions and the heterogeneity of hardware and software. Middleware facilitates application development by hiding the heterogeneity and complexity of the underlying hardware and software. We argue that a single middleware is not able to meet the heterogeneity of ubiquitous systems, and propose a Software Product Line approach to design a middleware family. The family is customized according to constraints imposed by three viewpoints: device, network and application. We customize the family considering the variability of the VANETs domain.", "num_citations": "10\n", "authors": ["1136"]}
{"title": "Using connectors to model crosscutting influences in software architectures\n", "abstract": " AO-ADL is an aspect-oriented architecture description language where \u2019crosscutting\u2019 becomes a new kind of relationship between components. The semantic of connectors is extended in order to represent such crosscutting relationships. In this paper we focus on an important contribution of AO-ADL, its mechanism for defining aspect-oriented connector templates, which capture generic and reusable crosscutting influences, providing an aspect-oriented architectural pattern.", "num_citations": "10\n", "authors": ["1136"]}
{"title": "Towards the development of ambient Intelligence Environments using Aspect-Oriented techniques\n", "abstract": " Nowadays the interest in Ambient Intelligence Environments has grown considerably due to new challenges posed by the evolution of society requirements to more friendly environments. Ambient Intelligence technology is not fully developed and integrated in everyday life, but a lot of organisations are interested in it. On the other hand, Aspect Oriented Software Development is considered a growing technology that improves the modularity and adaptability of complex large-scale systems. Then, our goal is the development of an Ambient Intelligence Aspect-Oriented platform adapting DAOP, a component and aspect platform.", "num_citations": "10\n", "authors": ["1136"]}
{"title": "Urano: an object-oriented artificial neural network simulation tool\n", "abstract": " A highly flexible environment has been developed based on the object-oriented paradigm for modelling artificial neural networks (ANNs). This paper propose a hierarchy of classes that models ANN. The design of the hierarchy is characterized by a high degree of modularity, based on parametrizable data structures and autonomous modules. Composition rules of structures and methods enable to build, step by step, more complex structures from simple ones previously defined. One of the most relevant benefits obtained from using an object-oriented approach is related with the definition of multi-networks. URANO (Universe of ANN Object oriented) is a powerful software tool developed using the C++ programming language for building and using prototypes of ANNs in which inherited mechanism can be used for building new ANNs from already existing ones. It is easy to work with and its effectiveness and\u00a0\u2026", "num_citations": "10\n", "authors": ["1136"]}
{"title": "Reconfiguration of service failures in DAMASCo using dynamic software product lines\n", "abstract": " Building service-based applications requires providing the ability to handle, maintain or upgrade the services that compose these applications. As same services may be used by a wide variability of applications, the management of the heterogeneity at runtime is required. This is crucial to reconfigure applications in case of service failures. The DAMASCo framework reduces the complexity of modeling services focusing on the discovery, composition and adaptation of context-aware services. But currently, it does not support the dynamic reconfiguration of service-based applications. In this work, we follow a Dynamic Software Product Line approach to extend DAMASCo for providing reconfiguration to support specific situations of fails at runtime. We propose a novel approach of grouping services in families facilitating the selection and usage of similar services in case of fails. We apply our approach to an intelligent\u00a0\u2026", "num_citations": "9\n", "authors": ["1136"]}
{"title": "Modeling the context-awareness service in an aspect-oriented middleware for ami\n", "abstract": " Ambient Intelligence applications are gradually becoming integrated into our environment and will be deployed in a wide range of small devices and appliances. Middleware platforms will be useful to express the different requirements of these devices in terms of their commonalities and variabilities. These ambient intelligence applications should be highly reconfigurable in order to deal with changes in the environment. Consequently, one of the services that the middleware has to provide is precisely this managing of the environment i.e., the context. Context-awareness and context adaptation are crosscutting concerns that cannot be well-encapsulated in single modules using traditional technologies, which hinders application design maintenance and reusability.             In order to overcome these problems we use of Aspect-Oriented Software Development for modeling the context-aware service. There are\u00a0\u2026", "num_citations": "9\n", "authors": ["1136"]}
{"title": "Agol: An aspect-oriented domain-specific language for mas\n", "abstract": " Specific features of multi-agent systems (MAS), such as autonomy, learning, mobility, coordination, are driving development concerns, which make evident the need for new design abstractions. Up to now, agent-oriented modeling languages have delivered basic MAS design abstractions - such as goals and actions - that explicitly tackle some of these concerns. However, the modularization of a plethora of fundamental MAS features has been hindered throughout the software lifecycle. This paper presents a methodological framework to address enhanced modularity and traceability of such crosscutting concerns in MAS development. Our design framework is mainly rooted at the proposition of a new domain-specific language, called AGOL. In addition, the proposed framework is supported by a bench of transformation rules of AGOL artifacts, which can be effectively used to derive agent implementations in two\u00a0\u2026", "num_citations": "9\n", "authors": ["1136"]}
{"title": "Combining components, aspects, domain specific languages and product lines for ambient intelligent application development\n", "abstract": " Currently, we can see how different kinds of experimental Ambient Intelligence (or AmI) applications are being developed to solve very diverse problems. These applications will soon be widely used by ordinary people making their lives easier and more comfortable. As time passes, more and more new portable and wearable computational devices will appeared and will demand that AmI applications be adapted to them. The first challenge is therefore to define advanced mechanisms to perform a custom-made installation of AmI applications in devices with different capacities. The second one is to provide mechanisms to adapt the application when the technology, the environment or the user demands change. To fulfil this goal, we have developed an Ambient Intelligence platform, called AOPAmI1 that is based on the use of Components, Aspects, Domain Specific Languages and Product Lines software technologies.", "num_citations": "9\n", "authors": ["1136"]}
{"title": "Towards an open multimedia service framework\n", "abstract": " This paper describes a component-oriented framework (MultiTEL) for the development of multimedia services (MS) on top of the Web. The principal contribution of this work is the application of componentware technologies to a large-scale system. We propose a compositional model that defines the architecture of an MS as a collection of components that interact through connectors. MultiTEL architecture supports the reuse of both standard components and common interaction patterns of advanced MS. These services run on a distributed platform that supports the dynamic composition of MS components and connectors, by using Java/RMI technology.", "num_citations": "9\n", "authors": ["1136"]}
{"title": "Energy efficient adaptation engines for android applications\n", "abstract": " Context The energy consumption of mobile devices is increasing due to the improvement in their components (e.g., better processors, larger screens). Although the hardware consumes the energy, the software is responsible for managing hardware resources such as the camera software and its functionality, and therefore, affects the energy consumption. Energy consumption not only depends on the installed code, but also on the execution context (environment, devices status) and how the user interacts with the application.Objective In order to reduce the energy consumption based on user behavior, it is necessary to dynamically adapt the application. However, the adaptation mechanism also consumes a certain amount of energy in itself, which may lead to an important increase in the energy expenditure of the application in comparison with the benefits of the adaptation. Therefore, this footprint must be\u00a0\u2026", "num_citations": "8\n", "authors": ["1136"]}
{"title": "Integrating the common variability language with multilanguage annotations for web engineering\n", "abstract": " Web applications development involves managing a high diversity of files and resources like code, pages or style sheets, implemented in different languages. To deal with the automatic generation of custom-made configurations of web applications, industry usually adopts annotation-based approaches even though the majority of studies encourage the use of composition-based approaches to implement Software Product Lines. Recent work tries to combine both approaches to get the complementary benefits. However, technological companies are reticent to adopt new development paradigms such as feature-oriented programming or aspect-oriented programming. Moreover, it is extremely difficult, or even impossible, to apply these programming models to web applications, mainly because of their multilingual nature, since their development involves multiple types of source code (Java, Groovy, JavaScript\u00a0\u2026", "num_citations": "8\n", "authors": ["1136"]}
{"title": "A mobile and interactive multiobjective urban tourist route planning system\n", "abstract": " Tourism is an emerging target area for interactive mobile device applications. This paper evaluates the performance of a multiobjective interactive urban route planner that calculates walking routes for tourists in urban areas. The system allows tourists to choose a walking route between two locations that is short, but at the same time traverses interesting tourist areas. The main characteristics of the system are an intuitive interactive interface, the management of multiple objectives, and local computation on the user\u2019s device. Related aspects, like the retrieval of contextual tourist information relevant to route planning, are also discussed.", "num_citations": "8\n", "authors": ["1136"]}
{"title": "An approach for deploying and monitoring dynamic security policies\n", "abstract": " Security policies are enforced through the deployment of certain security functionalities within the applications. When the security policies dynamically change, the associated security functionalities currently deployed within the applications must be adapted at runtime in order to enforce the new security policies. INTER-TRUST is a framework for the specification, negotiation, deployment and dynamic adaptation of interoperable security policies, in the context of pervasive systems where devices are constantly exchanging critical information through the network. The dynamic adaptation of the security policies at runtime is addressed using Aspect-Oriented Programming (AOP) that allows enforcing security requirements by dynamically weaving security aspects into the applications. However, a mechanism to guarantee the correct adaptation of the functionality that enforces the changing security policies is needed. In\u00a0\u2026", "num_citations": "8\n", "authors": ["1136"]}
{"title": "Self-StarMAS: A multi-agent system for the self-management of AAL applications\n", "abstract": " Internet of Things (IoT) is used when real-world and everyday objects are connected to the internet. In IoT systems, things collaborate to bring valuable services to users, being one of its key applications the Ambient Assisted Living (AAL). The majority of devices used in IoT are handheld or lightweight devices that show symptoms of degradation, such as energy loss or failure of some network nodes. Consequently IoT-based systems demand the reconfiguration of their internal functioning in response to changes in their environment. IoT-based systems, and especially AAL systems, must behave as self-managing systems. We propose to develop AAL systems using agents enhanced with autonomic computing. Agent properties are adequate for developing self-management systems and additionally, naturally address IoT problems, such as heterogeneity and address ability. We present architectures and tasks for\u00a0\u2026", "num_citations": "8\n", "authors": ["1136"]}
{"title": "Modeling Quality Attributes with Aspect-Oriented Architectural Templates.\n", "abstract": " The quality attributes of a software system are, to a large extent, determined by the decisions taken early in the development process. Best practices in software engineering recommend the identification of important quality attributes during the requirements elicitation process, and the specification of software architectures to satisfy these requirements. Over the years the software engineering community has studied the relationship between quality attributes and the use of particular architectural styles and patterns. In this paper we study the relationship between quality attributes and Aspect-Oriented Software Architectures-which apply the principles of Aspect-Oriented Software Development (AOSD) at the architectural level. AOSD focuses on identifying, modeling and composing crosscutting concerns-ie concerns that are tangled and/or scattered with other concerns of the application. In this paper we propose to use\u00a0\u2026", "num_citations": "8\n", "authors": ["1136"]}
{"title": "Source location privacy considerations in wireless sensor networks\n", "abstract": " Wireless Sensor Networks are considered to be one of the cornerstones of Ambient Intelligence since they can be used in countless applications, where sensors are unobtrusively embedded into the environment to perform operations like monitoring, tracking and reporting. In such scenarios, privacy issues must be carefully considered since the mere observation of the network operation might reveal great amounts of private information to unauthorised parties. One of the problems that is gaining more attention in the realm of privacy, is the location privacy problem, which aims to prevent an attacker from obtaining the location of specific nodes of interest to him. In this paper we provide a general overview of the proposed solutions to counter this threat. Finally, we will also discuss some open challenges and future directions of research for a convenient management of privacy issues in smart environments.", "num_citations": "8\n", "authors": ["1136"]}
{"title": "A Survey of Multimedia Software Engineering.\n", "abstract": " Developing multimedia applications entails understanding a variety of advanced technologies; in addition, multimedia programming poses a significant challenge in terms of handling a variety of hardware devices, multimedia formats or communication protocols. Therefore, breakthrough software engineering technologies should be applied to produce reference architectures able to support ever-changing requirements. In this paper, we first present the challenges that designers must face in multimedia programming, and how current frameworks address them, specially regarding the management of architectural evolution. We then show what breakthrough approaches or technologies can be used to produce more reusable, extensible and open multimedia systems. We focus on presenting the benefits of applying component-based software development and application framework technologies. We also illustrate\u00a0\u2026", "num_citations": "8\n", "authors": ["1136"]}
{"title": "Supporting heterogeneous users in collaborative virtual environments using AOP\n", "abstract": " Nowadays, the interest in collaborative virtual environments has increased considerably, probably due to the current technological advances specially on Internet computing. Our main goal is to model collaborative virtual environments combining component-based and aspectbased software technologies. In this paper we are going to highlight the innovative design of a middleware layer that is able to bind dynamically different configurations of the same environment according to the users preferences.", "num_citations": "8\n", "authors": ["1136"]}
{"title": "A goal-driven software product line approach for evolving multi-agent systems in the Internet of Things\n", "abstract": " Multi-agent systems have proved to be a suitable technology for developing self-adaptive Internet of Things (IoT) systems, able to make the most appropriate decisions to address unexpected situations. This leads to new opportunities to use multi-agent technologies to develop all kinds of cyber\u2013physical systems, which usually encompass a high diversity of devices (e.g., new home appliances). The heterogeneity of devices and the high diversity of the available technology, demand the explicit modeling of all kinds of variability for ultra-large systems. However, multi-agent systems lack mechanisms to effectively deal with the different degrees of variability present in these kinds of systems. Software Product Line (SPL) technologies, including variability models, have been successfully applied to different domains to explicitly model variability in hardware, system requirements or user-intended goals. In addition, current\u00a0\u2026", "num_citations": "7\n", "authors": ["1136"]}
{"title": "An energy efficiency study of web-based communication in android phones\n", "abstract": " Currently, mobile devices are the most popular pervasive computing devices, and they are becoming the primary way for accessing Internet. Battery is a critical resource in such personal computing gadgets, network communications being one of the primary energy consuming activities in any mobile app. Indeed, as web-based communication is the most used explicitly or implicitly by mobile devices, HTTP-based traffic is the most power demanding one. So, mobile web developers should be aware of how much energy demands the different web-based communication alternatives. The goal of this paper is to measure and compare the energy consumption of three asynchronous HTTP-based methods in mobile devices in different browsers. Our experiments focus on three HTTP-based asynchronous communication models that allow a web server to push data to a client browser through a HTTP/1.1 interaction: Polling, Long Polling, and WebSockets. The resulted measurements are then analysed to get more accurate understanding of the impact of the selected method, and the mobile browser, in the energy consumption of the asynchronous HTTP-based communication. The utility of these experiments is to show developers what are the factors and settings that mostly influence the energy consumption when different web-based asynchronous communication methods are used, helping them to choose the most beneficial solution if possible. With this information, mobile web developers should be able to reduce the power consumption of the front-end of web applications for mobile devices, just selecting and configuring the best asynchronous\u00a0\u2026", "num_citations": "7\n", "authors": ["1136"]}
{"title": "Closing the gap between the specification and enforcement of security policies\n", "abstract": " Security policies are enforced through the deployment of certain security functionalities within the applications. Applications can have different levels of security and thus each security policy is enforced by different security functionalities. Thus, the secure deployment of an application is not an easy task, being more complicated due to the existing gap between the specification of a security policy and the deployment, inside the application, of the security functionalities that are required to enforce that security policy. The main goal of this paper is to close this gap. This is done by using the paradigms of Software Product Lines and Aspect-Oriented Programming in order to: (1) link the security policies with the security functionalities, (2) generate a configuration of the security functionalities that fit a security policy, and (3) weave the selected security functionalities into an application. We qualitatively evaluate our\u00a0\u2026", "num_citations": "7\n", "authors": ["1136"]}
{"title": "Context\u2010dependent reconfiguration of autonomous vehicles in mixed traffic\n", "abstract": " Human drivers naturally adapt their behaviour depending on the traffic conditions, such as the current weather and road type. Autonomous vehicles need to do the same, in a way that is both safe and efficient in traffic composed of both conventional and autonomous vehicles. In this paper, we demonstrate the applicability of a reconfigurable vehicle controller agent for autonomous vehicles that adapts the parameters of a used car\u2010following model at runtime, so as to maintain a high degree of traffic quality (efficiency and safety) under different weather conditions. We follow a dynamic software product line approach to model the variability of the car\u2010following model parameters, context changes and traffic quality, and generate specific configurations for each particular context. Under realistic conditions, autonomous vehicles have only a very local knowledge of other vehicles' variables. We investigate a distributed\u00a0\u2026", "num_citations": "6\n", "authors": ["1136"]}
{"title": "Green configurations of functional quality attributes\n", "abstract": " Functional quality attributes (FQAs) are those quality attributes that, to be satisfied, require the incorporation of additional functionality into the application architecture. By adding an FQA (eg, security) we can improve the quality of the final product, but there is also an increase in energy consumption. This paper proposes a solution to help the software architect to generate configurations of FQAs whilst keeping the energy consumed by the application as low as possible. For this, a usage model is defined for each FQA, taking into account the variables that affect the energy consumption, and that the values of these variables change according to the part of the application where the FQA is required. We extend a Software Product Line that models a family of FQAs to incorporate the variability of the usage model and the existing frameworks that implement FQAs. We generate the most eco-efficient configuration of FQAs\u00a0\u2026", "num_citations": "6\n", "authors": ["1136"]}
{"title": "Green software development and research with the hadas toolkit\n", "abstract": " Energy is a critical resource, and designing a sustainable software architecture is a non-trivial task. Developers require energy metrics that support sustainable software architectures reflecting quality attributes such as security, reliability, performance, etc., identifying what are the concerns that impact more in the energy consumption. A variability model of different designs and implementations of an energy model should exist for this task, as well as a service that stores and compares the experimentation results of energy and time consumption of each concern, finding out what is the most eco-efficient solution. The experimental measurements are performed by energy experts and researchers that share the energy model and metrics in a collaborative repository. HADAS confronts these tasks modelling and reasoning with the variability of energy consuming concerns for different energy contexts, connecting HADAS\u00a0\u2026", "num_citations": "6\n", "authors": ["1136"]}
{"title": "Aspect-Oriented Reconfigurable Middleware for Pervasive Systems.\n", "abstract": " One of the main features of pervasive computing systems is their need to be dynamically reconfigured in order to properly adapt to the continuous changes in their environment conditions (context). An appropriate solution to provide reconfigurability is Aspect-Oriented Software Development, which allows that optional functionalities can be enabled/disabled and services can be replaced with lighter implementations which are less resource consuming. The primary aim of this work is the definition and implementation of an aspect-oriented middleware architecture to dynamically reconfigure pervasive computing systems. Our middleware will provide support for the context-aware, efficient, consistent and homogeneous reconfiguration of middleware and application services. Other requirements of pervasive computing systems such as mobility, fault tolerance and service distribution will also be addressed.", "num_citations": "6\n", "authors": ["1136"]}
{"title": "On the need of architectural patterns in aosd for software evolution\n", "abstract": " One promising approach to tackle software evolution in AOSD is model-based pointcuts, where pointcuts are defined in terms of elements of a conceptual model, which are less susceptible to evolution than elements of the base model. We propose the definition of model-based pointcuts at the architectural level and identify three layers in the definition of our conceptual model: the system, the domain-specific and the application-specific layer. An MDD process drives the definition of conceptual and aspect models, their instantiation and composition. AO-ADL is used to implement it.", "num_citations": "6\n", "authors": ["1136"]}
{"title": "Coordination as an aspect in middleware infrastructures\n", "abstract": " In this paper we discuss the shortcomings derived from having coordination and computation tangled in the same software entities and from having coordination protocols scattered through the several components participating in an interaction. We show a possible solution to this problem by using aspect-oriented techniques to separate coordination as an independent entity in middleware infrastructures.", "num_citations": "6\n", "authors": ["1136"]}
{"title": "Combining software components and mobile agents\n", "abstract": " We present a first approach that combines the mobile agent and the compositional paradigms into a new agent-based compositional model. The aim of this work is to explore the capabilities of both paradigms in improving the design and development of open and distributed systems. Our goal is to add compositional characteristics to mobile agents by defining an agent-based compositional model. We take advantage of the mobility and the composition capability by applying this model to the problem of searching software components in partially-instantiated applications, both in design and run time. That is, the abstract components of an architectural design of an application can be fulfilled with concrete ones by retrieving them from the Internet.", "num_citations": "6\n", "authors": ["1136"]}
{"title": "A component-oriented architecture to design multimedia services on a distributed platform\n", "abstract": " Nowadays the demand of sophisticated multimedia telecommunication services is on increase. There is a need to create distributed programs with multimedia data exchange running on a distributed platform. Therefore, is necessary to build a communication service infrastructure to help telecommunication service designers in the development of new applications. In this paper we present a multimedia telecommunication service architecture as a service creation framework. The architecture was designed following the component-oriented paradigm. The base model approach defines a collection of components controlled by connectors that abstract interaction patterns. Besides, we show in this paper the implementation of the component based model applied to the coordination of applications on the Web.             This work was funded in part by the \u201cComisi\u00f3n Interministerial de Ciencia y Tecnologfa\u201d (CICYT\u00a0\u2026", "num_citations": "6\n", "authors": ["1136"]}
{"title": "Finding correlations of features affecting energy consumption and performance of web servers using the HADAS eco-assistant\n", "abstract": " The impact of energy consumption on the environment and the economy is raising awareness of \u201cgreen\u201d software engineering. HADAS is an eco-assistant that makes developers aware of the influence of their designs and implementations on the energy consumption and performance of the final product. In this paper, we extend HADAS to better support the requirements of users: researchers, automatically dumping the energy-consumption of different software solutions; and developers, who want to perform a sustainability analysis of different software solutions. This analysis has been extended by adding Pearson\u2019s chi-squared differentials and Bootstrapping statistics, to automatically check the significance of correlations of the energy consumption, or the execution time, with any other variable (e.g., the number of users) that can influence the selection of a particular eco-efficient configuration. We have\u00a0\u2026", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Managing the variability in the transactional services selection\n", "abstract": " Web service composition is the capability to recursively construct a value added service by means of picking up existing services. An important step in the composition process is the selection step, which includes choosing services located in repositories. The selection approaches of Web services need to consider their specifics which raises important challenges as the management of the inherent service variability in functionality and implementation and ensuring correct execution termination between others. To realize reliable service compositions, transactional properties of services must be considered during the selection step. We argue that the transactional properties should be considered at the operation level of each service to be composed. However, modelling transactional services composition at the operation level drastically increment the complexity of service selection. In order to overcome this difficulty\u00a0\u2026", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Variability and dependency modeling of quality attributes\n", "abstract": " Functional Quality Attributes (FQAs) are quality attributes that have strong functional implications and so can be easily modeled by software components. Thus, we use an aspect-oriented software product line approach, to model the commonalities and variabilities of FQAs from the early stages of the software development. However, FQAs cannot be modeled in isolation since they usually have dependencies and interactions between them. In this paper we focus on identifying and modeling the dependencies among different FQAs. These dependencies are automatically incorporated into the final software architecture of the system under development, even when the software architect may be unaware of them.", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Automatic analysis of software architectures with variability\n", "abstract": " Software Product Line Engineering is successfully applied in the development of families of related products. Basically, it allows reusing the software artifacts that are common to all the products, and adding/removing the variable ones. There are two alternatives to manage variability, one that models the commonalities and variabilities separately from the software product line architecture (SPLA), using, for instance, feature models (FM), and another one that models the variability as part of the SPLA. These two alternatives have both benefits and limitations. Our approach picks the best of both alternatives and, on the one hand, models variability as part of the SPLA (as in the second alternative), but, on the other hand, maps the SPLA with variability into an FM, generating an Architectural FM. By doing this our approach takes advantage of the FM tools and formal reasoning (as in the first alternative) to provide\u00a0\u2026", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Exploiting dynamic weaving for self-managed agents in the iot\n", "abstract": " Agents are a good option to develop Internet of Things (IoT) systems with self-management capacities. Current agent technology offers the necessary means to manage many of the requirements of self-management satisfactorily, however agent approaches for lightweight devices do not provide support for self-configuring agents\u2019 internal functionality adequately. This paper describes part of the Self-StarMAS approach for self-managing the IoT, which uses aspect-oriented mechanisms to model self-managing tasks. Aspect-orientation facilitates the adaptation and reconfiguration of the Self-StarMAS agents\u2019 internal architecture. This paper focuses on describing the internal composition of aspects, which is performed by an internal weaver at runtime.", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Software evolution in AOSD: a MDA-based approach\n", "abstract": " In this paper we present a model-based approach to tackle the fragility pointcut problem that occurs in Aspect Oriented Systems. We focus on evaluating our work aiming at demonstrating that the definition of model-based pointcuts at early stages of the development can improve the software evolution in AOSD.", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Promoting the software evolution in AOSD with early aspects: Architecture-oriented model-based pointcuts\n", "abstract": " Aspect oriented systems suffer from an issue named pointcut fragility problem, which occurs when a poincut unintentionally captures or misses a given join point as a consequence of apparently harmless modifications of the base elements or system structure. One promising approach to cope with this problem is the definition of pointcuts in terms of elements of an intermediary conceptual model. In this paper we investigate the benefits of defining these conceptual models at early stages of the development. Concretely, we use the AO-ADL architectural language and, in particular, its support to define: (1) semantics-based compositions, and (2) parameterized architectural templates. We also demonstrate the feasibility of our approach through a case study.", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Aspect-oriented modeling of quality attributes\n", "abstract": " Quality attributes are usually complex enough to be decomposed in a set of related concerns, with complex interactions and dependencies among them. Moreover, some of these concerns have a crosscutting nature being tangled and/or scattered with other concerns of the application. Aspect-Oriented Software Development is a good option to model a software architecture that requires the identification, modeling and composition of crosscutting concerns. This paper defines a process for the aspect-oriented modeling of quality attributes, specially those that have high functional implications. The main goal is to produce \u201dbuilt-in\u201d reusable and parameterizable architectural solutions for each attribute.", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Separating learning as an aspect in Malaca agents\n", "abstract": " Current OO frameworks provided with MAS development toolkits provide core abstractions to implement the agent behavior, by using the typical OO specialisation mechanisms. However, these OO designs do not provide proper abstractions to modularize other extra-functional concerns (e.g. learning property), which are normally intermingled with the agent functionality (tangled code problem), and spread over different classes or components (crosscutting concerns problem). This means that the reusability of the agent architectural components is drastically reduced, so agents are difficult to maintain, extend or adapt. Aspect-oriented technologies overcome these problems by modeling such concerns as aspects. This work proposes to separate and modularize the learning of software agents following the aspect-oriented solution of the Malaca model. By decoupling the agent functional behavior from the\u00a0\u2026", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Adaptive collaborative virtual environments: A component and aspect-based approach\n", "abstract": " Nowadays, the interest in collaborative virtual environments has increased considerably, mainly due to the current technological advances that make it possible the use of computers to collaborate. One of the main challenges in the development of these systems is to achieve a high degree of adaptability and extensibility in order to deal with system evolution. We achieve this goal combining component-based and aspect-based software technologies. In this paper we are going to highlight the innovative design of CoopTEL, a component and aspect platform specially suited for developing adaptive distributed applications.", "num_citations": "5\n", "authors": ["1136"]}
{"title": "Self-Adaptation of mHealth Devices: The Case of the Smart Cane Platform\n", "abstract": " Nowadays, more than one billion people are in need of one or more assistive technologies, and this number is expected to increase beyond two billion by 2050. The majority of assistive technologies are supported by battery-operated devices like smartphones and wearables. This means that battery weight is an important concern in such assistive devices because it may affect negatively its ergonomics. Saving power in these assistive devices is of utmost importance for its potential twofold benefits: extend the device life and reduce the global warming aggravated by billion of these devices. Dynamic Software Product Lines (DSPLs) are a suitable technology that supports system adaptation, in this case, to reduce energy consumption at runtime, considering contextual information and the current state of the device. However, a reduction in battery consumption could negatively affect other quality of service parameters, like response time. Therefore, it is important to trade-off battery saving and these other concerns. This work illustrates how to approach the self-adaptation of smart assistive devices by means of a DSPL-based strategy that optimizes battery consumption taking into account other QoS parameters at the same time. We illustrate our proposal with a real case study: a Smart Cane that is integrated with a DSPL platform, Tanit. Experimentation shows that it is possible to make a trade-off between different quality concerns (energy consumption and relative error). The results of the experiments allow us to conclude that the Tanit approach elongates battery duration of the Smart Cane in one day (an increase of a 6% with a relative error of 1\u00a0\u2026", "num_citations": "4\n", "authors": ["1136"]}
{"title": "An empirical study of power consumption of web-based communications in mobile phones\n", "abstract": " Currently, mobile devices are the most popular pervasive computing device, and they are becoming the primer way forWeb access. Energy is a critical resource in such pervasive computing devices, being network communication one of the primary energy consuming operations in mobile apps. Indeed, web-based communication is the most used, but also energy demanding. So, mobile web developers should be aware of how much energy consumes the different web-based communication alternatives. The goal of this paper is to measure and compare the energy consumption of three asynchronous Web-based methods in mobile devices. Our experiments consider three different Web applications models that allow a web server to push data to a browser: Polling, Long Polling and WebSockets. The obtained results are analyzed to get more accurate understanding of the impact in energy consumption of a mobile\u00a0\u2026", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Towards contractual interfaces for reusable functional quality attribute operationalisations\n", "abstract": " The quality of a software system can be measured by the extent to which it possesses a desired combination of quality attributes (QAs). While some QAs are achieved implicitly through the interaction of various functional components of the system, others (eg, security) can be encapsulated in dedicated software components. These QAs are known as functional quality attributes (FQAs). As applications may require different FQAs, and each FQA can be composed of many concerns (eg, access control and authentication), integrating FQAs is very complex and requires dedicated expertise. Software architects are required to manually define FQA components, identify appropriate points in their architecture where to weave them, and verify that the composition of these FQA components with the other components is correct. This is a complex and error prone process. In our previous work we defined reusable FQAs by\u00a0\u2026", "num_citations": "4\n", "authors": ["1136"]}
{"title": "An evaluation of multiobjective urban tourist route planning with mobile devices\n", "abstract": " Tourism is an emerging target area for interactive mobile device applications. This paper evaluates the performance of a multiobjective interactive urban route planner that calculates walking routes for tourists in urban areas. The system allows tourists to choose a walking route between two locations that is short, but at the same time traverses interesting tourist areas. The main characteristics of the system are an intuitive interactive interface, the management of multiple objectives, and local computation on the user\u2019s device. Related aspects, like the retrieval of contextual tourist information relevant to route planning, are also discussed.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Developing pervasive agent-based applications: A comparison of two coordination approaches\n", "abstract": " Pervasive computing is concerned with making our lives easier through digital environments that are sensitive, adaptive, and responsive to human needs. Different approaches have shown the suitability of the agent paradigm for the development of pervasive applications. However, so far no dominant approach has been adopted for the development of agent-based pervasive systems. In particular, two key classes of approaches exist, based on FIPA interaction protocols and tuple spaces. The contribution of this paper is the comparison and evaluation of tuple spaces and FIPA-compliant coordination mechanisms for the development of pervasive applications. We are therefore going to compare two approaches that exemplify these agent technologies: MalacaTiny-Sol and SAPERE.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Modeling context-awareness in agents for ambient intelligence: an aspect-oriented approach\n", "abstract": " Ambient Intelligence (AmI) systems are inherently context aware, since they should be able to react to, adapt to and even anticipate user actions or events occurring in the environment in a manner consistent with the current context. Software agents and especially the BDI architecture are considered to be a promising approach to deal with AmI systems development. However current agent models do not offer a proper support for developing AmI systems because they do not offer support to model explicitly the interaction between the agent, context sources and effectors, and the context-awareness features are scattered in the system model. To solve these problems we propose an aspect-oriented agent metamodel for AmI systems, which encourages modularity in the description of context-aware features in AmI systems. This metamodel achieves better results than other metamodels in separation of\u00a0\u2026", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Towards the automatic derivation of Malaca agents using MDE\n", "abstract": " The automatic transformation of software agent designs into implementations for different agent platforms is currently a key issue in the MAS development process. Recently several approaches have been proposed using model driven development concepts to specify generic agent metamodels and/or define a set of transformation rules from the design phase for different agent implementation platforms. However, all these approaches propose different sets of transformation rules for each target agent platform, thereby making the integration of new agent platforms more difficult. In this paper we propose transforming PIM4Agents, a generic agent metamodel used at the design phase, into Malaca, an agent specific platform-neutral metamodel for agents. With only one set of transformations it is possible to specify platform-neutral agents and to generate a partial implementation in Malaca, which can be\u00a0\u2026", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Adding Aspects to xADL 2.0 for Software Product Line Architectures.\n", "abstract": " The Feature\u2013Oriented approach provides a way of modelling commonalities and variabilities among products of a software product line. A feature model can be used as input for generating an architectural representation of a product line. Product line architectures can be specified using one of the architecture description languages that already supports the specification of commonalities and variabilities. xADL 2.0 is a highly-extensible XML-based architecture description language that allows product lines architectures to be defined. But, in the process of generating the architecture from a feature model, several crosscutting variables features and dependencies between features are commonly found from a feature-oriented analysis. These features and dependencies can be modeled using an aspect-oriented architecture approach. In this paper we present how a xADL 2.0 extension with aspects can help represent the crosscutting variables features and the dependencies in product line architectures from a feature-oriented analysis.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Experiences refactoring ambient intelligence applications with aspects\n", "abstract": " Nowadays, we are facing a new era where we will be surrounded by smart devices with computational and communication capabilities. This technology is known as Ubiquitous Computing or Ambient Intelligence. In order to reach this new technological evolution step, we must resolve one important question: How can the software and hardware evolution problem be handled at programming level?. The Object Oriented Programming techniques have proven to be not suitable enough to adapt software to new requirements imposed by clients or to emerging technologies. Consequently, it is necessary to use new programming paradigms that allow us to adapt software to changing requirements. In this paper, we show our experiences using AspectJ to refactor an Ambient Intelligence application, the problems encountered during this process, and the advantages and benefits obtained from it. The main goal is to show that using aspect-oriented techniques we can obtain more adaptable and evolvable Ambient Intelligence applications.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Adaptabilidad en entornos virtuales colaborativos: una Aproximaci\u00f3n basada en Componentes y Aspectos\n", "abstract": " Nowadays, the interest in collaborative virtual environments has increased considerably, mainly due to the current technological advances that make it possible the use of computers to collaborate. One of the main challenges in the development of these systems is to achieve a high degree of adaptability and extensibility in order to deal with system evolution. We achieve this goal combining component-based and aspect-based software technologies. In this paper we are going to highlight the innovative design of CoopTEL, a component and aspect platform specially suited for developing adaptive distributed applications.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Hacia un entorno de desarrollo integrado basado en componentes y aspectos\n", "abstract": " La dificultad creciente en el desarrollo de software distribuido y especializado, ha hecho que las empresas y desarrolladores adopten nuevas tecnolog\u00edas de programaci\u00f3n para suplir las carencias de las actuales. Este hecho ha desembocado en la aparici\u00f3n de la tecnolog\u00eda de desarrollo de software basado en aspectos. Esta tecnolog\u00eda permite la descomposici\u00f3n de los sistemas en componentes y aspectos independientes, reduciendo la complejidad del desarrollo de software y aumentando la reutilizaci\u00f3n y flexibilidad de los componentes y los aspectos desarrollados. Sin embargo, el uso de esta tecnolog\u00eda es reciente y se encuentra a\u00fan en sus inicios por lo que no hay un n\u00famero suficiente de herramientas que la soporten. Nosotros proponemos un entorno de desarrollo integrado que soporte el dise\u00f1o e implementaci\u00f3n de aplicaciones basadas en componentes y aspectos. Este entorno est\u00e1 en sus inicios, incluyendo en la actualidad herramientas de almacenamiento y recuperaci\u00f3n tanto de componentes como de aspectos, junto a la posibilidad de realizar b\u00fasquedas especializadas entre los componentes y los aspectos para reutilizarlos en el desarrollo de nuevas aplicaciones.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "Component Oriented Service Architecture as a Flexible Service Creation Framework\n", "abstract": " In this paper we present a multimedia service architecture based on the approach of components frameworks. We think that component oriented architectures increase the reusability of open systems and that helps designers to cope with the complexity of building telecommunication services and, in general, multimedia application programming. The proposed architecture is a collection of components controlled by connectors that abstract coordination patterns. The model enforces the programming of new services by specialization of coordination protocols between the basic components of the architecture. We have chosen a formal description technique to specify the protocols of the connectors and the behavior of the components with a synchronous communication model.", "num_citations": "4\n", "authors": ["1136"]}
{"title": "ProDSPL: Proactive self-adaptation based on Dynamic Software Product Lines\n", "abstract": " Abstract Dynamic Software Product Lines (DSPLs) are a well-accepted approach to self-adaptation at runtime. In the context of DSPLs, there are plenty of reactive approaches that apply countermeasures as soon as a context change happens. In this paper we propose a proactive approach, ProDSPL, that exploits an automatically learnt model of the system, anticipates future variations of the system and generates the best DSPL configuration that can lessen the negative impact of future events on the quality requirements of the system. Predicting the future fosters adaptations that are good for a longer time and therefore reduces the number of reconfigurations required, making the system more stable. ProDSPL formulates the problem of the generation of dynamic reconfigurations as a proactive controller over a prediction horizon, which includes a mapping of the valid configurations of the DSPL into linear constraints\u00a0\u2026", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Hadas: Analysing quality attributes of software configurations\n", "abstract": " Software Product Lines (SPLs) are highly configurable systems. Automatic analyses of SPLs rely on solvers to navigate complex dependencies among features and find legal solutions. Variability analysis tools are complex due to the diversity of products and domain-specific knowledge. On that, while there are experimental studies that analyse quality attributes, the knowledge is not easily accessible for developers, and its appliance is not trivial. Aiming to allow the industry to quality-explore SPL design spaces, we developed the HADAS assistant that:(1) models systems and collects quality attributes metrics in a cloud repository, and (2) reasons about it helping developers with quality attributes requirements.", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Optimal Assignment of Augmented Reality Tasks for Edge-Based Variable Infrastructures\n", "abstract": " In the last few years, the number of devices connected to the Internet has increased considerably; so has the data interchanged between these devices and the Cloud, as well as energy consumption and the risk of network congestion. The problem can be alleviated by reducing communication between Internet-of-Things devices and the Cloud. Recent paradigms, such as Edge Computing and Fog Computing, propose to move data processing tasks from the Cloud to nearby devices to where data is produced or consumed. One of the main challenges of these paradigms is to cope with the heterogeneity of the infrastructures where tasks can be offloaded. This paper presents a solution for the optimal allocation of computational tasks to edge devices, with the aim of minimizing the energy consumption of the overall application. The heterogeneity is represented and managed by using Feature Models, widely employed in Software Product Lines. Given the application and infrastructure configurations, our Optimal Tasks Assignment Framework generates the optimal task allocation and resources assignment. The resultant deployment represents the most energy efficient configuration at load-time, without compromising the user experience. The scalability and energy saving of the approach are evaluated in the domain of augmented reality applications.", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Model Driven Evolution of an Agent-Based Home Energy Management System.\n", "abstract": " Advanced smart home appliances and new models of energy tariffs imposed by energy providers pose new challenges in the automation of home energy management. Users need some assistant tool that helps them to make complex decisions with different goals, depending on the current situation. Multi-agent systems have proved to be a suitable technology to develop self-management systems, able to take the most adequate decision under different context-dependent situations, like the home energy management. The heterogeneity of home appliances and also the changes in the energy policies of providers introduce the necessity of explicitly modeling this variability. But, multi-agent systems lack of mechanisms to effectively deal with the different degrees of variability required by these kinds of systems. Software Product Line technologies, including variability models, has been successfully applied to different domains to explicitly model any kind of variability. We have defined a software product line development process that performs a model driven generation of agents embedded in heterogeneous smart objects with different degrees of self-management. However, once deployed, the home energy assistant system has to be able to evolve to self-adapt its decision making or devices to new requirements. So, in this paper we propose a model driven mechanism to automatically manage the evolution of multi-agent systems distributed among several devices.", "num_citations": "3\n", "authors": ["1136"]}
{"title": "A green program lifecycle supporting energy-efficient applications\n", "abstract": " With the advent of the Internet of Things (IoT), the percentage of global emissions attributable to Information Systems is expected to further increase in the coming years, due to a proliferation of Internet-connected devices omnipresent in our daily lives (e.g., electric meters, wearable devices, etc.). Although software systems do not directly consume energy, they strongly affect the energy consumption of the hardware. So, developers should be more aware of the energy consumed by these systems during their lifetime, and think about the long-term consequences in the sustainability of our planet Earth. Indeed, once deployed, the energy consumed by a system depends on several factors determined mainly by the usage context. This means that the area of energy-efficient software development needs green development lifecycles that provide appropriate methodologies and tools to identify and analyze the energy hotspots of applications early at design time, and see how they can be self-adapted to the runtime context usage. Regrettably, there is a narrow view of developers and users and their responsibility in the energy consumed during application execution. Developers rarely address energy efficiency as some recent studies show, mostly because they lack appropriate methodologies and tools that help them to produce green software at runtime. So, although software energy efficiency is becoming increasingly important in an ever more technology-dependent world, development processes of self-greening systems supported by tools are still in their infancy. On the other hand, considering that many of current applications are normally deployed\u00a0\u2026", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Towards an aspect-oriented reconfigurable middleware for pervasive systems: implementation and evaluation\n", "abstract": " Pervasive systems need to be dynamically reconfigured in order to properly adapt to the changes that continuously occur in their environment. This is usually achieved by building these systems on top of a middleware platform that offers, among others, a context-monitoring service and a dynamic reconfiguration service. In this paper we evaluate the suitability of using Aspect-Oriented Software Development to provide dynamic adaptation at runtime. Concretely, we present the implementation and evaluation of our aspect-oriented middleware architecture, which allows the dynamic reconfiguration of both applications and middleware services by enabling or disabling optional functionalities or by replacing the services with lighter implementations. We have studied some related approaches and designed and implemented a case study in order to evaluate the execution and reconfiguration time. The results show that\u00a0\u2026", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Towards a reconfigurable middleware architecture for pervasive computing systems\n", "abstract": " One of the main features of pervasive computing systems is that environment conditions are continuously changing. Therefore, these systems need to be dynamically reconfigured in order to properly adapt to their environment (context). An appropriate solution to provide reconfigurability is Aspect-Oriented Software Development. In this paper, we present an aspect-oriented middleware architecture for pervasive computing systems reconfiguration. Using our architecture, middleware services can be reconfigured by enabling/disabling optional functionalities or replacing the entire service with lighter implementations which are less resource consuming. In order to achieve dynamic reconfiguration, the most relevant middleware service is the context-monitoring service, which is needed to provide the middleware with information about the state of the environment. Thus, in this paper, we focus on the context\u00a0\u2026", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Developing dynamic and adaptable applications with CAM/DAOP: A virtual office application\n", "abstract": " CAM/DAOP is a component and aspect based model and platform implemented using Java/RMI and reflective techniques. Using CAM/DAOP we have developed several collaborative applications, where the most relevant one is a Virtual Office application, which allows dispersed users to collaborate as if they were co-located. Attendees of the demonstration will see how to develop dynamic and adaptable applications with CAM/DAOP, from the design through to the implementation phases. We will place emphasis on showing how to adapt the behavior of CAM/DAOP applications at runtime, simply by modifying the architectural information provided during the application development.", "num_citations": "3\n", "authors": ["1136"]}
{"title": "A component and aspect-based architecture for rapid software agent development\n", "abstract": " Current agent architectures provided by MAS platforms impose some limitation that affect the development of the functionality of software agents from scratch, placing little emphasis on (re)configuration and (re)use. This paper presents a software agent architecture development approach using a component and aspect\u2013based architecture that promotes building agents from reusable software components and the configuration of some software agents. The basis of our architecture is the use of component-based and aspect-based software development concepts to separate agent functionality into independent entities increasing extensibility, maintainability and adaptability of the agent to new environments and demands. The architecture simplifies the software agent development process, which can be reduced to the description of the agents\u2019 constituent components and supported agent interaction\u00a0\u2026", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Interoperabilidad entre Plataformas de Agentes FIPA: Una Aproximaci\u00f3n Basada en Componentes\n", "abstract": " El uso masivo de Internet ha propiciado la aparici\u00f3n de aplicaciones basadas en agentes desarrolladas sobre distintas plataformas de agentes. La interoperabilidad entre distintas plataformas de agentes es una caracter\u00edstica cr\u00edtica para el desarrollo de aplicaciones heterog\u00e9neas. Para conseguir esta interoperabilidad es muy importante el uso de las especificaciones propuestas por FIPA, organizaci\u00f3n encargada de la producci\u00f3n de est\u00e1ndares en el \u00e1rea de los agentes. Sin embargo las plataformas que siguen las especificaciones de FIPA pueden no ser completamente interoperables debido a algunas incompatibilidades que pueden ser f\u00e1cilmente salvadas. Este art\u00edculo presenta una propuesta para desarrollar sistemas basados en agentes heterog\u00e9neos sin tener en cuenta las plataformas sobre las que son ejecutados permitiendo la comunicaci\u00f3n entre agentes pertenecientes a plataformas no\u00a0\u2026", "num_citations": "3\n", "authors": ["1136"]}
{"title": "COMUNIDADES VEGETALES SOBRE DOLOM\u00cdAS EN EL PARQUE NATURAL DE SIERRA M\u00c1GINA: UN H\u00c1BITAT A CONSERVAR.\n", "abstract": " En el sigiuente art\u00edculo se aborda el conocimiento de las comunidades vegetales asentadas sobre las altas cotas del Parque Natural de Sierra M\u00e1gina y m\u00e1s concretamente de aquellas que se encuentran sobre sustratos dolom\u00edticos. El inter\u00e9s que generan estas zonas es debido a las condiciones de xericidad que producen estos sustratos, por lo que un gran n\u00famero de taxones vegetales se han adaptado a vivir en estos ambientes extremos. Por tanto, la xericidad del territorio junto con la elevada altitud existente, han dado lugar a un n\u00famero de comunidades vegetales t\u00edpicas de estos ambientes, las cuales vamos a caracterizar desde distintos puntos de vista (flor\u00edstico, geol\u00f3gico, edafol\u00f3gico, clim\u00e1tol\u00f3gico y biogeogr\u00e1fico).", "num_citations": "3\n", "authors": ["1136"]}
{"title": "Extensible and modular abstract syntax for feature modeling based on language constructs\n", "abstract": " Since the definition of feature models in 1990, a large number of language constructs have emerged. Each language construct usually comes with its own abstract and concrete syntax, its semantics, and even its complete language dialect and tool support. Nowadays, there is a consensus in the Software Product Line community about a need for defining a common variability modeling language. But the fact of the matter is that it is very complex to achieve a good compromise between how expressive the language should be and the effort of developing practical tools for a language with all possible language constructs. In this paper, we propose an extensible model-driven engineering approach for defining the abstract syntax of feature modeling language constructs that could be tailored to different needs and domains. We formalize our approach as a set of modular and reusable metamodels that allows\u00a0\u2026", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Energy-efficient Deployment of IoT Applications in Edge-based Infrastructures: A Software Product Line Approach\n", "abstract": " In order to lower latency and reduce energy consumption, Edge Computing proposes offloading some computation intensive tasks usually performed in the Cloud onto nearby devices in the frontier/Edge of the access networks. However, current task offloading approaches are often quite simple. They neither consider the high diversity of hardware and software technologies present in edge network devices, nor take into account that some tasks may require some specific software and hardware infrastructure to be executed. This paper proposes a task offloading process that leans on Software Product Line technologies, which are a very good option to model the variability of software and hardware present in edge environments. Firstly, our approach automates the separation of application tasks, considering the data and operation needs and restrictions among them, and identifying the hardware and software\u00a0\u2026", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Evolving dynamic self-adaptation policies of mHealth systems for long-term monitoring\n", "abstract": " Tele-rehabilitation can complement traditional rehabilitation therapies by providing valuable information that can help in the evaluation, monitoring, and treatment of patients. Many patient tele-monitoring systems that integrate wearable technology are emerging as an effective tool for the long-term surveillance of rehabilitation progression, enabling continuous sampling of patient real-time movement in a non-invasive way, without affecting the normal daily activity of the outpatient, who, therefore, will not need to make frequent clinic visits. One of the main challenges of tele-rehabilitation systems is to pay special attention to the diversity of dysfunctions in patients by offering devices with customized behaviours adaptable to the physical conditions of each patient at the different stages of the rehabilitation therapy. Long-term monitoring systems need an adaptation policy to autonomously reconfigure their behaviour\u00a0\u2026", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Software variability in dynamic environments\n", "abstract": " Software variability in dynamic environments - TUbiblio TUbiblio TU Darmstadt / ULB / TUbiblio Software variability in dynamic environments Capilla, Rafael ; Fuentes, Lidia ; Lochau, Malte (2019): Software variability in dynamic environments. In: Journal of Systems and Software, 156, S. 62-64. Elsevier, DOI: 10.1016/j.jss.., [Artikel] Offizielle URL: https://doi.org/10.1016/j.jss.. Typ des Eintrags: Artikel Erschienen: 2019 Autor(en): Capilla, Rafael ; Fuentes, Lidia ; Lochau, Malte Titel: Software variability in dynamic environments Sprache: Englisch Titel der Zeitschrift, Zeitung oder Schriftenreihe: Journal of Systems and Software Jahrgang/Volume einer Zeitschrift: 156 Verlag: Elsevier Fachbereich(e)/-gebiet(e): 18 Fachbereich Elektrotechnik und Informationstechnik 18 Fachbereich Elektrotechnik und Informationstechnik > Institut f\u00fcr Datentechnik > Echtzeitsysteme 18 Fachbereich Elektrotechnik und Informationstechnik > \u2026", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Self-adaptive energy-efficent applications: the hadas developing approach\n", "abstract": " Software systems have a strong impact on the energy consumption of the hardware they use. For this reason, software developers should be more aware of the energy consumed by their systems. Moreover, software systems should be developed to be able to adapt their behavior to minimize the energy consumed during their execution. This paper illustrates how to address the problem of developing self-adaptive energy-efficient applications using the HADAS approach. HADAS makes use of advanced software engineering methods, such as Dynamic Software Product Lines and Aspect-Oriented Software Development. The main steps of the HADAS approach, both during the design of the application and also at runtime are illustrated by applying them to a running case study.", "num_citations": "2\n", "authors": ["1136"]}
{"title": "HADAS: Asistente de eco-eficiencia con repositorio de consumo energ\u00e9tico\n", "abstract": " El inter\u00e9s por la Ingenier\u00eda del Software \"verde\", o sea, sensible al consumo de energ\u00eda, es relativamente reciente. Su objetivo es concienciar a los desarrolladores de software de la influencia que tienen sus decisiones de dise\u00f1o e implementaci\u00f3n en el gasto energ\u00e9tico del producto final. Hasta el momento se han publicado muchos resultados experimentales que comparan el consumo de energ\u00eda de varias soluciones alternativas, y que demuestran que se puede reducir dicho consumo hasta en un 70 %. Aunque estos resultados sean de libre disposici\u00f3n, no es sencillo que un desarrollador aplique este conocimiento a sus aplicaciones. En consecuencia, en este art\u00edculo presentamos el eco-asistente HADAS cuya utilidad es: (i) los investigadores almacenar\u00e1n sus resultados en un repositorio de libre disposici\u00f3n; (ii) los desarrolladores podr\u00e1n razonar y obtener las configuraciones que menos energ\u00eda consuman y que satisfaga sus requisitos. Nos centraremos en mostrar los elementos principales de nuestra propuesta y como se aplica a casos de estudio reales.", "num_citations": "2\n", "authors": ["1136"]}
{"title": "HADAS Green Assistant: designing energy-efficient applications\n", "abstract": " The number of works addressing the role of energy efficiency in the software development has been increasing recently. But, designers and programmers still complain about the lack of tools that help them to make energy-efficiency decisions. Some works show that energy-aware design decisions tend to have a larger impact in the power consumed by applications, than code optimizations. In this paper we present the HADAS green assistant, which helps developers to identify the energy-consuming concerns of their applications (i.e., points in the application that consume more energy, like storing or transferring data), and also to model, analyse and reason about different architectural solutions for each of these concerns. This tool models the variability of more or less green architectural practices and the dependencies between different energy-consuming concerns using variabilty models. Finally, this tool will automatically generate the architectural configuration derived from the selections made by the developer from an energy consumption point of view.", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Using spl to develop aal systems based on self-adaptive agents\n", "abstract": " One of the most important challenges of this decade is the Internet of Things (IoT) that pursues the integration of real-world objects in Internet. One of the key areas of the IoT is the Ambient Assisted Living (AAL) systems, which should be able to react to variable and continuous changes while ensuring their acceptance and adoption by users. This means that AAL systems need to work as self-adaptive systems. The autonomy property inherent to software agents, makes them a suitable choice for developing self-adaptive systems. However, agents lack the mechanisms to deal with the variability present in the IoT domain with regard to devices and network technologies. To overcome this limitation we have already proposed a Software Product Line (SPL) process for the development of self-adaptive agents in the IoT. Here we analyze the challenges that poses the development of self-adaptive AAL systems\u00a0\u2026", "num_citations": "2\n", "authors": ["1136"]}
{"title": "A model driven development of platform-neutral agents\n", "abstract": " The automatic transformation of software agent designs into implementations for different agent platforms is currently a key issue in the MAS development process. Recently several approaches have been proposed using model driven development concepts to specify generic agent metamodels and/or define a set of transformation rules from the design phase for different agent implementation platforms. Although for some systems this is acceptable, in the context of Ambient Intelligence, this could be a serious limitation because of the variety of devices involved in these systems ranging from desktop computers to lightweight devices. In this paper we propose to transform PIM4Agents, a generic agent metamodel used at the design phase, into Malaca, an agent specific platform-neutral metamodel for agents. With only one set of transformations it is possible to generate a partial implementation in Malaca\u00a0\u2026", "num_citations": "2\n", "authors": ["1136"]}
{"title": "A4vanet: Context-aware jade-leap agents for vanets\n", "abstract": " This paper presents a context-aware agent-based application for Vehicular Ad-hoc Networks. The characteristics of agent technology make them appropriate for developing dynamic and distributed systems for VANETS, and facilitate the addition of context-aware abilities to traditional applications. In this paper we show how a JADE-LEAP agent can process context information and use it to improve the comfort of the vehicle occupants with a minimum user interaction.", "num_citations": "2\n", "authors": ["1136"]}
{"title": "MaDL: A Description Language for Component and Aspect-Oriented Agent Architectures\n", "abstract": " Normally current agent methodologies and 00 agent frame\u2014works put little effort on de\ufb01ning the agent internal structure, as it is not possible either to study or verify speci\ufb01c structural properties of the agent. Architecture Description Languages (ADLs) are widely used to represent the software architecture of a system. The explicit speci\ufb01ca\u2014tion of agent software architecture promotes the study and veri\ufb01cation of its structural properties. In this context, this paper presents MaDL, an ADL based on XML for the con\ufb01guration of agent software archi\u2014tectures. MaDL identi\ufb01es architectural concepts present both in agent methodologies and in existing FlPA\u2014compliant and task\u2014oriented agents. Since agents\u2019 dialogues are governed by interaction protocols, normally they crosscut and are intermingled with various agent inner components. MaDL models those interaction properties that do not align well with agent domain\u2014speci\ufb01c components as aspects as is proposed in the As\u2014pect Oriented technologies. This separation succeeds in providing a more adaptable agent architecture appropriate for software reuse. Adapting the agent architecture to new extra\u2014functional requirements mainly en\u2014tails locating and modifying the aspects involved.", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Coordinaci\u00f3n de Componentes Distribuidos: un Enfoque Generativo Basado en Arquitectura del Software.\n", "abstract": " La ingenier\u00eda del software basada en componentes est\u00e1 despertando mucho inter\u00e9s, no s\u00f3lo en el \u00e1mbito acad\u00e9mico, sino tambi\u00e9n en el industrial. Sin embargo, el uso de estas tecnolog\u00edas implica que deben realizarse importantes cambios en los procesos de desarrollo de software. En particular, es necesario desarrollar y utilizar notaciones espec\u00edficas, que incorporen conceptos de componentes y rigurosas especificaciones formales. Nuestra propuesta parte de LEDA, un lenguaje formal de descripci\u00f3n de arquitecturas software din\u00e1micas y va hasta la implementaci\u00f3n. LEDA permite verificar la componibilidad de los sistemas especificados con esta notaci\u00f3n, asegurando la ausencia de interbloqueos entre los componentes. El reto de este trabajo consiste en generar una implementaci\u00f3n fiel a la especificaci\u00f3n original, que permita el prototipado y el desarrollo evolutivo, obteni\u00e9ndose una aplicaci\u00f3n robusta y libre de errores directamente ejecutable en Java.", "num_citations": "2\n", "authors": ["1136"]}
{"title": "Supporting the evolution of applications deployed on edge-based infrastructures using multi-layer feature models\n", "abstract": " The proliferation of cyber-physical systems has encouraged the emergence of new technologies and paradigms to improve the performance of IoT-based applications. Edge Computing proposes using the nearby devices in the frontier/Edge of the access network for deploying application tasks. However, the functionality of cyberphysical systems, which is usually distributed in several devices and computers, imposes specific requirements on the infrastructure to run properly. The evolution of an application to meet new user requirements and the high diversity of hardware and software technologies in the edge can complicate the deployment of evolved applications.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Mecanismos de reconfiguraci\u00f3n eco-eficiente de c\u00f3digo en aplicaciones m\u00f3viles Android\n", "abstract": " Los dispositivos m\u00f3viles ofrecen cada vez mayores prestaciones a costa de un mayor consumo energ\u00e9tico. La energ\u00eda consumida por un m\u00f3vil no s\u00f3lo depende de las aplicaciones en s\u00ed, sino tambi\u00e9n de las interacciones del usuario con la aplicaci\u00f3n. Si un recurso no est\u00e1 siendo utilizado por la aplicaci\u00f3n, no deber\u00eda estar consumiendo energ\u00eda. En este art\u00edculo se presenta un modelo de adaptaci\u00f3n de aplicaciones m\u00f3viles al contexto del usuario con el objetivo de reducir el consumo energ\u00e9tico de las aplicaciones. Se desarrollan y eval\u00faan cuatro implementaciones diferentes de la propuesta en busca del mecanismo de reconfiguraci\u00f3n m\u00e1s eficiente energ\u00e9ticamente.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Green Security Plugin for Pervasive Computing using the HADAS toolkit\n", "abstract": " Energy is a critical resource in pervasive computing devices. However, information about energy consumption is not directly accessible through software development environments, making it difficult to reuse the knowledge provided by existing energy-consumption experimental studies. To address this limitation, this paper presents a solution to enrich Android Studio with energy consumption information. We have developed a Green Security Plugin that provides energy-aware information to developers that make use of Android Security API. This plugin has been developed taking advantage of the functionalities provided by the HADAS toolkit. HADAS is a repository of energy consuming concerns in which researchers can store the energy measures obtained during their experimental studies and developers can perform a sustainability analysis to make green design/implementation decisions.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Automatic Enforcement of Security Properties\n", "abstract": " Ensuring the security requirements of an application is not a straightforward task. Security properties (e.g., confidentiality, anonymity) need to be satisfied in different ways in different parts of the same application. Software architects are usually required to manually define security components and their dependencies with the base application, customize them to the application\u2019s requirements, identify the points where security is incorporated, and verify that the selected places are correct. The last two steps are especially complex and error-prone. In our approach, we aim to provide a solution that helps software architects to identify the correct places to incorporate the security functionality and to verify the correctness of the composed application architecture. This is achieved by identifying a set of general structural patterns for incorporating security into the application architecture, and by providing a model\u00a0\u2026", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Green software using aspect orientation for cyber-physical-systems\n", "abstract": " Green Computing emphasizes the need for reducing the environ-mental impact of systems by reducing their energy waste. Nowa-days IT systems as Cyber-Physical-Systems (CPS) are composed by many physical entities interconnected and working together. Therefore, saving energy in these systems implies to be aware of the energy in all the software modules that compose the system running in every device. Since all modules could collaborate in making a software system more energy efficient, these green-ness attributes may have a crosscutting nature. Aspect-Oriented tech-niques could be applied specifically for energy saving in this kind of systems with specific requirements. We discuss the characteris-tics that a framework to allow injecting green aspects to CPS both at design and at runtime would have to provide.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Towards the dynamic reconfiguration of quality attributes\n", "abstract": " There are some Quality Attributes (QAs) whose variability is addressed through functional variability in the software architecture. Separately modelling the variability of these QAs from the variability of the base functionality of the application has many advantages (eg, a better reusability), and facilitates the reconfiguration of the QA variants at runtime. Many factors may vary the QA functionality: variations in the user preferences and usage needs; variations in the non-functional QAs; variations in resources, hardware, or even in the functionality of the base application, that directly affect the product's QAs. In this paper, we aim to elicit the relationships and dependencies between the functionalities required to satisfy the QAs and all those factors that can provoke a reconfiguration of the software architecture at runtime. We follow an approach in which the variability of the QAs is modelled separately from the base\u00a0\u2026", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Dynamic Deployment and Monitoring of Security Policies\n", "abstract": " INTER-TRUST is a framework for the specification, negotiation, deployment and dynamic adaptation of interoperable security policies, in the context of pervasive systems where devices are constantly exchanging critical information through the network. The dynamic adaptation of the security policies at runtime is addressed using Aspect-Oriented Programming (AOP) that allows enforcing security requirements by dynamically weaving security aspects into the applications. However, a mechanism to guarantee the correct adaptation of the functionality that enforces the changing security policies is needed. In this paper, we present an approach with monitoring and detection techniques in order to maintain the correlation between the security policies and the associated functionality deployed using AOP, allowing the INTER-TRUST framework automatically reacts when needed.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Product-driven software product line engineering\n", "abstract": " Product-driven software product line engineering - Research Portal, King's College, London King's College London King's main site Research portal Home Researchers Research Groups Research Outputs Research Funding Internal Research Outputs Theses . Journals Publishers Product-driven software product line engineering Research output: Chapter in Book/Report/Conference proceeding \u203a Chapter Steffen Zschaler, Pablo Sanchez, Carlos Nebrera, Lidia Fuentes, Vaidas Gasiunas, Ludger Fiege Overview Citation formats Original language English Title of host publication Aspect-Oriented, Model-Driven Software Product Lines -- The AMPLE Way Publisher Cambridge University Press Pages 287 Number of pages 315 Published 2011 King's Authors Steffen Zschaler (Informatics, Software Modelling and Applied Logic) Post to Twitter Post to FaceBook Post to Digg View graph of relations By the same authors \u2026", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Implementation of an AmI Communication Service Using a Federated Event System Based on Aspects\n", "abstract": " Event-based communication can be considered naturally suited to support ambient intelligence and ubiquitous computing applications due to its asynchronous nature and due to loose coupling between application components. Event systems support different properties depending on the specific problem domain for which they have been developed. Using these event systems in a federated way, where events are disseminated across the boundaries of a single event system, has been possible in some areas. However, such federation has typically been realized as bilateral inter-working federation between designated pairs of event systems that rely on hardcoded architectures, which are inherently difficult to maintain when systems evolve over time. This paper presents an ambient intelligence platform, called AOPAMI, that uses aspects to enable truly multilateral federation between inter-working heterogeneous\u00a0\u2026", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Modelling Event Systems for AmI Applications Using an Aspect Middleware Platform1\n", "abstract": " The development of a communication service is one of the most difficult and important challenges when developing Ambient Intelligence (AmI) applications. Since AmI applications must be able to react to external events, event-based communication is a natural way to disseminate such events amongst all interested AmI components. A wide range of diverse event systems have been developed for addressing the problems on specific domains. Although AmI applications may benefit from the features of many of these event systems, middleware platforms for AmI applications typically support just one event system. Interconnecting different event systems in a multilateral inter-working federation will provide a homogeneous interface to access the specific services and features offered by each event system. This work presents an integration example of heterogeneous event systems in a homogeneous way through the use of an Aspect Oriented Middleware platform.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "DAOPxADL: Una extensi\u00f3n del lenguaje de descripci\u00f3n de arquitecturas xADL con aspectos\n", "abstract": " La Arquitectura del Software promulga la importancia de especificar la estructura de un sistema, fundamentalmente utilizando los Lenguajes de Descripci\u00f3n de Arquitecturas (LDAs). El Desarrollo de Software Orientado a Aspectos aboga por identificar \u201caspectos\u201d entremezclados en varios componentes en la fase de dise\u00f1o arquitect\u00f3nico. En este art\u00edculo se presenta DAOPxADL, una extensi\u00f3n con aspectos de un LDA de prop\u00f3sito general, xADL.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "Analyzing architectural evolution issues of multimedia frameworks\n", "abstract": " The growing complexity in the development of Web-based services in general, and multimedia services in particular, makes necessary the application of sound development methods. New multimedia devices, coding algorithms, network protocols, etc., are continually appearing but, unfortunately, current solutions for developing multimedia applications do not accurately support architectural evolution issues for already deployed applications. Thus, the latest Software Engineering technologies should be applied to the development of open, reusable, and high-quality multimedia and Web-based software. In this paper, we apply component and framework technologies, two of the current trends in Software Engineering, to the development of multimedia services over the Web, presenting and comparing widespread solutions in use today.", "num_citations": "1\n", "authors": ["1136"]}
{"title": "GENESIS: an object-oriented framework for simulation of neural network models\n", "abstract": " In this paper we present GENESIS as a highly flexible and graphical environment for simulating ANN based on the object-oriented paradigm. This includes a hierarchy of classes that models ANNs being characterized by a high degree of modularity. The use of object-oriented techniques provides the data abstraction facilities necessary to support modification and extension of the simulation system at a high level of abstraction, from a graphic user interface.. Furthermore, ANN specification is suitable for joining networks in a neural macro-structure.", "num_citations": "1\n", "authors": ["1136"]}